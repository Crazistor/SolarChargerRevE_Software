

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Tue May 08 00:46:51 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=2,class=CODE,delta=1
   220                           	psect	text197,global,reloc=2,class=CODE,delta=1
   221                           	psect	text198,global,reloc=2,class=CODE,delta=1
   222                           	psect	text199,global,reloc=2,class=CODE,delta=1
   223                           	psect	text200,global,reloc=2,class=CODE,delta=1
   224                           	psect	text201,global,reloc=2,class=CODE,delta=1
   225                           	psect	text202,global,reloc=2,class=CODE,delta=1
   226                           	psect	text203,global,reloc=2,class=CODE,delta=1
   227                           	psect	text204,global,reloc=2,class=CODE,delta=1
   228                           	psect	text205,global,reloc=2,class=CODE,delta=1
   229                           	psect	text206,global,reloc=2,class=CODE,delta=1
   230                           	psect	text207,global,reloc=2,class=CODE,delta=1
   231                           	psect	text208,global,reloc=2,class=CODE,delta=1
   232                           	psect	text209,global,reloc=2,class=CODE,delta=1
   233                           	psect	text210,global,reloc=2,class=CODE,delta=1,group=1
   234                           	psect	text211,global,reloc=2,class=CODE,delta=1
   235                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   236                           	psect	text213,global,reloc=2,class=CODE,delta=1
   237                           	psect	text214,global,reloc=2,class=CODE,delta=1
   238                           	psect	text215,global,reloc=2,class=CODE,delta=1
   239                           	psect	text216,global,reloc=2,class=CODE,delta=1
   240                           	psect	text217,global,reloc=2,class=CODE,delta=1
   241                           	psect	text218,global,reloc=2,class=CODE,delta=1
   242                           	psect	text219,global,reloc=2,class=CODE,delta=1
   243                           	psect	text220,global,reloc=2,class=CODE,delta=1
   244                           	psect	text221,global,reloc=2,class=CODE,delta=1
   245                           	psect	text222,global,reloc=2,class=CODE,delta=1
   246                           	psect	text223,global,reloc=2,class=CODE,delta=1
   247                           	psect	text224,global,reloc=2,class=CODE,delta=1
   248                           	psect	text225,global,reloc=2,class=CODE,delta=1
   249                           	psect	text226,global,reloc=2,class=CODE,delta=1
   250                           	psect	text227,global,reloc=2,class=CODE,delta=1
   251                           	psect	text228,global,reloc=2,class=CODE,delta=1
   252                           	psect	text229,global,reloc=2,class=CODE,delta=1
   253                           	psect	text230,global,reloc=2,class=CODE,delta=1
   254                           	psect	text231,global,reloc=2,class=CODE,delta=1
   255                           	psect	text232,global,reloc=2,class=CODE,delta=1
   256                           	psect	text233,global,reloc=2,class=CODE,delta=1
   257                           	psect	text234,global,reloc=2,class=CODE,delta=1
   258                           	psect	text235,global,reloc=2,class=CODE,delta=1
   259                           	psect	text236,global,reloc=2,class=CODE,delta=1
   260                           	psect	text237,global,reloc=2,class=CODE,delta=1
   261                           	psect	text238,global,reloc=2,class=CODE,delta=1
   262                           	psect	text239,global,reloc=2,class=CODE,delta=1
   263                           	psect	text240,global,reloc=2,class=CODE,delta=1
   264                           	psect	text241,global,reloc=2,class=CODE,delta=1
   265                           	psect	text242,global,reloc=2,class=CODE,delta=1
   266                           	psect	text243,global,reloc=2,class=CODE,delta=1
   267                           	psect	text244,global,reloc=2,class=CODE,delta=1
   268                           	psect	text245,global,reloc=2,class=CODE,delta=1
   269                           	psect	text246,global,reloc=2,class=CODE,delta=1
   270                           	psect	text247,global,reloc=2,class=CODE,delta=1
   271                           	psect	text248,global,reloc=2,class=CODE,delta=1
   272                           	psect	text249,global,reloc=2,class=CODE,delta=1
   273                           	psect	text250,global,reloc=2,class=CODE,delta=1
   274                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   275                           	psect	text251,global,reloc=2,class=CODE,delta=1
   276                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   277                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   278                           	dabs	1,0x600,512,_msd_buffer
   279                           	dabs	1,0xD00,48,_BDT
   280                           	dabs	1,0xD40,31,_msd_cbw
   281                           	dabs	1,0xD80,13,_msd_csw
   282                           	dabs	1,0xD38,8,_CtrlTrfData
   283                           	dabs	1,0xD30,8,_SetupPkt
   284  0000                     
   285                           ; Version 1.42
   286                           ; Generated 13/04/2017 GMT
   287                           ; 
   288                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   289                           ; All rights reserved.
   290                           ; 
   291                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   292                           ; 
   293                           ; Redistribution and use in source and binary forms, with or without modification, are
   294                           ; permitted provided that the following conditions are met:
   295                           ; 
   296                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   297                           ;        conditions and the following disclaimer.
   298                           ; 
   299                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   300                           ;        of conditions and the following disclaimer in the documentation and/or other
   301                           ;        materials provided with the distribution.
   302                           ; 
   303                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   304                           ;        software without specific prior written permission.
   305                           ; 
   306                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   307                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   308                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   309                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   310                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   311                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   312                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   313                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   314                           ; 
   315                           ; 
   316                           ; Code-generator required, PIC18F47J53 Definitions
   317                           ; 
   318                           ; SFR Addresses
   319  0000                     
   320                           	psect	idataBANK2
   321  01A03E                     __pidataBANK2:
   322                           	opt stack 0
   323                           
   324                           ;initializer for _LUN
   325  01A03E  54                 	db	low _ExternalFlash_MediaInitialize
   326  01A03F  A7                 	db	high _ExternalFlash_MediaInitialize
   327  01A040  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   328  01A041  1E                 	db	low _ExternalFlash_CapacityRead
   329  01A042  AA                 	db	high _ExternalFlash_CapacityRead
   330  01A043  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   331  01A044  6E                 	db	low _ExternalFlash_SectorSizeRead
   332  01A045  AB                 	db	high _ExternalFlash_SectorSizeRead
   333  01A046  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   334  01A047  A2                 	db	low _ExternalFlash_MediaDetect
   335  01A048  AB                 	db	high _ExternalFlash_MediaDetect
   336  01A049  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   337  01A04A  64                 	db	low _ExternalFlash_SectorRead
   338  01A04B  A1                 	db	high _ExternalFlash_SectorRead
   339  01A04C  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   340  01A04D  96                 	db	low _ExternalFlash_WriteProtectStateGet
   341  01A04E  01                 	db	high _ExternalFlash_WriteProtectStateGet
   342  01A04F  00                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   343  01A050  2C                 	db	low _ExternalFlash_SectorWrite
   344  01A051  A1                 	db	high _ExternalFlash_SectorWrite
   345  01A052  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   346  01A053  00                 	db	0
   347  01A054  00                 	db	0
   348  01A055  00                 	db	0
   349  01A056  00                 	db	0
   350  01A057  00                 	db	0
   351  01A058  00                 	db	0
   352  01A059  00                 	db	0
   353  01A05A  00                 	db	0
   354                           
   355                           ;initializer for system_init@F8573
   356  01A05B  54                 	db	84
   357  01A05C  45                 	db	69
   358  01A05D  53                 	db	83
   359  01A05E  54                 	db	84
   360  01A05F  20                 	db	32
   361  01A060  20                 	db	32
   362  01A061  20                 	db	32
   363  01A062  20                 	db	32
   364  01A063  00                 	db	0
   365                           
   366                           ;initializer for system_init@F8579
   367  01A064  54                 	db	84
   368  01A065  58                 	db	88
   369  01A066  54                 	db	84
   370  01A067  00                 	db	0
   371                           
   372                           ;initializer for system_init@F8575
   373  01A068  54                 	db	84
   374  01A069  58                 	db	88
   375  01A06A  54                 	db	84
   376  01A06B  00                 	db	0
   377                           
   378                           ;initializer for _battery_voltage_maximum
   379  01A06C  34BC               	dw	13500
   380                           
   381                           ;initializer for _filename
   382  01A06E  4C                 	db	76
   383  01A06F  4F                 	db	79
   384  01A070  47                 	db	71
   385  01A071  20                 	db	32
   386  01A072  20                 	db	32
   387  01A073  20                 	db	32
   388  01A074  20                 	db	32
   389  01A075  20                 	db	32
   390  01A076  00                 	db	0
   391                           
   392                           ;initializer for _extension
   393  01A077  54                 	db	84
   394  01A078  58                 	db	88
   395  01A079  54                 	db	84
   396  01A07A  00                 	db	0
   397                           
   398                           	psect	idataBANK3
   399  01A8C6                     __pidataBANK3:
   400                           	opt stack 0
   401                           
   402                           ;initializer for i2c_display_init@F8357
   403  01A8C6  3A                 	db	58
   404  01A8C7  1E                 	db	30
   405  01A8C8  39                 	db	57
   406  01A8C9  0C                 	db	12
   407  01A8CA  74                 	db	116
   408  01A8CB  5C                 	db	92
   409  01A8CC  6D                 	db	109
   410  01A8CD  0C                 	db	12
   411  01A8CE  01                 	db	1
   412                           
   413                           ;initializer for i2c_display_send_init_sequence@F8354
   414  01A8CF  3A                 	db	58
   415  01A8D0  1E                 	db	30
   416  01A8D1  39                 	db	57
   417  01A8D2  0C                 	db	12
   418  01A8D3  74                 	db	116
   419  01A8D4  5C                 	db	92
   420  01A8D5  6D                 	db	109
   421  01A8D6  0C                 	db	12
   422  01A8D7  01                 	db	1
   423                           
   424                           ;initializer for system_init@F8577
   425  01A8D8  4E                 	db	78
   426  01A8D9  45                 	db	69
   427  01A8DA  57                 	db	87
   428  01A8DB  46                 	db	70
   429  01A8DC  49                 	db	73
   430  01A8DD  4C                 	db	76
   431  01A8DE  45                 	db	69
   432  01A8DF  20                 	db	32
   433  01A8E0  00                 	db	0
   434                           
   435                           	psect	idataBANK4
   436  0192D8                     __pidataBANK4:
   437                           	opt stack 0
   438                           
   439                           ;initializer for system_init@F8581
   440  0192D8  4A                 	db	74
   441  0192D9  75                 	db	117
   442  0192DA  73                 	db	115
   443  0192DB  74                 	db	116
   444  0192DC  20                 	db	32
   445  0192DD  61                 	db	97
   446  0192DE  70                 	db	112
   447  0192DF  70                 	db	112
   448  0192E0  65                 	db	101
   449  0192E1  6E                 	db	110
   450  0192E2  64                 	db	100
   451  0192E3  65                 	db	101
   452  0192E4  64                 	db	100
   453  0192E5  20                 	db	32
   454  0192E6  74                 	db	116
   455  0192E7  68                 	db	104
   456  0192E8  69                 	db	105
   457  0192E9  73                 	db	115
   458  0192EA  20                 	db	32
   459  0192EB  74                 	db	116
   460  0192EC  65                 	db	101
   461  0192ED  78                 	db	120
   462  0192EE  74                 	db	116
   463  0192EF  21                 	db	33
   464  0192F0  20                 	db	32
   465  0192F1  4E                 	db	78
   466  0192F2  6F                 	db	111
   467  0192F3  77                 	db	119
   468  0192F4  20                 	db	32
   469  0192F5  74                 	db	116
   470  0192F6  68                 	db	104
   471  0192F7  69                 	db	105
   472  0192F8  73                 	db	115
   473  0192F9  20                 	db	32
   474  0192FA  69                 	db	105
   475  0192FB  73                 	db	115
   476  0192FC  20                 	db	32
   477  0192FD  73                 	db	115
   478  0192FE  75                 	db	117
   479  0192FF  70                 	db	112
   480  019300  65                 	db	101
   481  019301  72                 	db	114
   482  019302  2D                 	db	45
   483  019303  6C                 	db	108
   484  019304  6F                 	db	111
   485  019305  6E                 	db	110
   486  019306  67                 	db	103
   487  019307  2E                 	db	46
   488  019308  20                 	db	32
   489  019309  69                 	db	105
   490  01930A  74                 	db	116
   491  01930B  20                 	db	32
   492  01930C  67                 	db	103
   493  01930D  6F                 	db	111
   494  01930E  65                 	db	101
   495  01930F  73                 	db	115
   496  019310  20                 	db	32
   497  019311  6F                 	db	111
   498  019312  6E                 	db	110
   499  019313  20                 	db	32
   500  019314  61                 	db	97
   501  019315  6E                 	db	110
   502  019316  64                 	db	100
   503  019317  20                 	db	32
   504  019318  6F                 	db	111
   505  019319  6E                 	db	110
   506  01931A  20                 	db	32
   507  01931B  61                 	db	97
   508  01931C  6E                 	db	110
   509  01931D  64                 	db	100
   510  01931E  20                 	db	32
   511  01931F  6F                 	db	111
   512  019320  6E                 	db	110
   513  019321  20                 	db	32
   514  019322  2E                 	db	46
   515  019323  2E                 	db	46
   516  019324  2E                 	db	46
   517  019325  20                 	db	32
   518  019326  62                 	db	98
   519  019327  75                 	db	117
   520  019328  74                 	db	116
   521  019329  20                 	db	32
   522  01932A  66                 	db	102
   523  01932B  69                 	db	105
   524  01932C  6E                 	db	110
   525  01932D  61                 	db	97
   526  01932E  6C                 	db	108
   527  01932F  6C                 	db	108
   528  019330  79                 	db	121
   529  019331  20                 	db	32
   530  019332  69                 	db	105
   531  019333  74                 	db	116
   532  019334  20                 	db	32
   533  019335  65                 	db	101
   534  019336  6E                 	db	110
   535  019337  64                 	db	100
   536  019338  73                 	db	115
   537  019339  20                 	db	32
   538  01933A  48                 	db	72
   539  01933B  45                 	db	69
   540  01933C  52                 	db	82
   541  01933D  45                 	db	69
   542  01933E  2E                 	db	46
   543  01933F  00                 	db	0
   544                           
   545                           	psect	mediumconst
   546  00FC24                     __pmediumconst:
   547                           	opt stack 0
   548  00FC24  00                 	db	0
   549  00FC25                     __display_charger@F8746:
   550                           	opt stack 0
   551  00FC25  43                 	db	67
   552  00FC26  68                 	db	104
   553  00FC27  61                 	db	97
   554  00FC28  72                 	db	114
   555  00FC29  67                 	db	103
   556  00FC2A  65                 	db	101
   557  00FC2B  72                 	db	114
   558  00FC2C  20                 	db	32
   559  00FC2D  41                 	db	65
   560  00FC2E  73                 	db	115
   561  00FC2F  79                 	db	121
   562  00FC30  6E                 	db	110
   563  00FC31  63                 	db	99
   564  00FC32  68                 	db	104
   565  00FC33  72                 	db	114
   566  00FC34  6F                 	db	111
   567  00FC35  6E                 	db	110
   568  00FC36  6F                 	db	111
   569  00FC37  75                 	db	117
   570  00FC38  73                 	db	115
   571  00FC39  00                 	db	0
   572  00FC3A                     __end_of__display_charger@F8746:
   573                           	opt stack 0
   574  00FC3A                     __display_charger@F8732:
   575                           	opt stack 0
   576  00FC3A  4D                 	db	77
   577  00FC3B  50                 	db	80
   578  00FC3C  50                 	db	80
   579  00FC3D  54                 	db	84
   580  00FC3E  20                 	db	32
   581  00FC3F  43                 	db	67
   582  00FC40  68                 	db	104
   583  00FC41  61                 	db	97
   584  00FC42  72                 	db	114
   585  00FC43  67                 	db	103
   586  00FC44  65                 	db	101
   587  00FC45  72                 	db	114
   588  00FC46  20                 	db	32
   589  00FC47  44                 	db	68
   590  00FC48  65                 	db	101
   591  00FC49  74                 	db	116
   592  00FC4A  61                 	db	97
   593  00FC4B  69                 	db	105
   594  00FC4C  6C                 	db	108
   595  00FC4D  73                 	db	115
   596  00FC4E  00                 	db	0
   597  00FC4F                     __end_of__display_charger@F8732:
   598                           	opt stack 0
   599  00FC4F                     __display_outputs@F8728:
   600                           	opt stack 0
   601  00FC4F  20                 	db	32
   602  00FC50  20                 	db	32
   603  00FC51  4F                 	db	79
   604  00FC52  75                 	db	117
   605  00FC53  74                 	db	116
   606  00FC54  33                 	db	51
   607  00FC55  20                 	db	32
   608  00FC56  6F                 	db	111
   609  00FC57  66                 	db	102
   610  00FC58  66                 	db	102
   611  00FC59  20                 	db	32
   612  00FC5A  20                 	db	32
   613  00FC5B  4F                 	db	79
   614  00FC5C  75                 	db	117
   615  00FC5D  74                 	db	116
   616  00FC5E  34                 	db	52
   617  00FC5F  20                 	db	32
   618  00FC60  6F                 	db	111
   619  00FC61  66                 	db	102
   620  00FC62  66                 	db	102
   621  00FC63  00                 	db	0
   622  00FC64                     __end_of__display_outputs@F8728:
   623                           	opt stack 0
   624  00FC64                     __display_outputs@F8726:
   625                           	opt stack 0
   626  00FC64  20                 	db	32
   627  00FC65  20                 	db	32
   628  00FC66  4F                 	db	79
   629  00FC67  75                 	db	117
   630  00FC68  74                 	db	116
   631  00FC69  31                 	db	49
   632  00FC6A  20                 	db	32
   633  00FC6B  6F                 	db	111
   634  00FC6C  66                 	db	102
   635  00FC6D  66                 	db	102
   636  00FC6E  20                 	db	32
   637  00FC6F  20                 	db	32
   638  00FC70  4F                 	db	79
   639  00FC71  75                 	db	117
   640  00FC72  74                 	db	116
   641  00FC73  32                 	db	50
   642  00FC74  20                 	db	32
   643  00FC75  6F                 	db	111
   644  00FC76  66                 	db	102
   645  00FC77  66                 	db	102
   646  00FC78  00                 	db	0
   647  00FC79                     __end_of__display_outputs@F8726:
   648                           	opt stack 0
   649  00FC79                     __display_temperature@F8773:
   650                           	opt stack 0
   651  00FC79  54                 	db	84
   652  00FC7A  65                 	db	101
   653  00FC7B  6D                 	db	109
   654  00FC7C  70                 	db	112
   655  00FC7D  65                 	db	101
   656  00FC7E  72                 	db	114
   657  00FC7F  61                 	db	97
   658  00FC80  74                 	db	116
   659  00FC81  75                 	db	117
   660  00FC82  72                 	db	114
   661  00FC83  65                 	db	101
   662  00FC84  20                 	db	32
   663  00FC85  4D                 	db	77
   664  00FC86  6F                 	db	111
   665  00FC87  6E                 	db	110
   666  00FC88  69                 	db	105
   667  00FC89  74                 	db	116
   668  00FC8A  6F                 	db	111
   669  00FC8B  72                 	db	114
   670  00FC8C  00                 	db	0
   671  00FC8D                     __end_of__display_temperature@F8773:
   672                           	opt stack 0
   673  00FC8D                     __display_charger@F8748:
   674                           	opt stack 0
   675  00FC8D  43                 	db	67
   676  00FC8E  68                 	db	104
   677  00FC8F  61                 	db	97
   678  00FC90  72                 	db	114
   679  00FC91  67                 	db	103
   680  00FC92  65                 	db	101
   681  00FC93  72                 	db	114
   682  00FC94  20                 	db	32
   683  00FC95  53                 	db	83
   684  00FC96  79                 	db	121
   685  00FC97  6E                 	db	110
   686  00FC98  63                 	db	99
   687  00FC99  68                 	db	104
   688  00FC9A  72                 	db	114
   689  00FC9B  6F                 	db	111
   690  00FC9C  6E                 	db	110
   691  00FC9D  6F                 	db	111
   692  00FC9E  75                 	db	117
   693  00FC9F  73                 	db	115
   694  00FCA0  00                 	db	0
   695  00FCA1                     __end_of__display_charger@F8748:
   696                           	opt stack 0
   697  00FCA1                     __display_usb@F8712:
   698                           	opt stack 0
   699  00FCA1  55                 	db	85
   700  00FCA2  53                 	db	83
   701  00FCA3  42                 	db	66
   702  00FCA4  20                 	db	32
   703  00FCA5  43                 	db	67
   704  00FCA6  68                 	db	104
   705  00FCA7  61                 	db	97
   706  00FCA8  72                 	db	114
   707  00FCA9  67                 	db	103
   708  00FCAA  65                 	db	101
   709  00FCAB  72                 	db	114
   710  00FCAC  20                 	db	32
   711  00FCAD  4F                 	db	79
   712  00FCAE  75                 	db	117
   713  00FCAF  74                 	db	116
   714  00FCB0  70                 	db	112
   715  00FCB1  75                 	db	117
   716  00FCB2  74                 	db	116
   717  00FCB3  73                 	db	115
   718  00FCB4  00                 	db	0
   719  00FCB5                     __end_of__display_usb@F8712:
   720                           	opt stack 0
   721  00FCB5                     __display_time@F8699:
   722                           	opt stack 0
   723  00FCB5  2D                 	db	45
   724  00FCB6  3E                 	db	62
   725  00FCB7  50                 	db	80
   726  00FCB8  72                 	db	114
   727  00FCB9  65                 	db	101
   728  00FCBA  73                 	db	115
   729  00FCBB  73                 	db	115
   730  00FCBC  20                 	db	32
   731  00FCBD  66                 	db	102
   732  00FCBE  6F                 	db	111
   733  00FCBF  72                 	db	114
   734  00FCC0  20                 	db	32
   735  00FCC1  73                 	db	115
   736  00FCC2  65                 	db	101
   737  00FCC3  63                 	db	99
   738  00FCC4  6F                 	db	111
   739  00FCC5  6E                 	db	110
   740  00FCC6  64                 	db	100
   741  00FCC7  73                 	db	115
   742  00FCC8  00                 	db	0
   743  00FCC9                     __end_of__display_time@F8699:
   744                           	opt stack 0
   745  00FCC9                     __display_time@F8697:
   746                           	opt stack 0
   747  00FCC9  2D                 	db	45
   748  00FCCA  3E                 	db	62
   749  00FCCB  50                 	db	80
   750  00FCCC  72                 	db	114
   751  00FCCD  65                 	db	101
   752  00FCCE  73                 	db	115
   753  00FCCF  73                 	db	115
   754  00FCD0  20                 	db	32
   755  00FCD1  66                 	db	102
   756  00FCD2  6F                 	db	111
   757  00FCD3  72                 	db	114
   758  00FCD4  20                 	db	32
   759  00FCD5  6D                 	db	109
   760  00FCD6  69                 	db	105
   761  00FCD7  6E                 	db	110
   762  00FCD8  75                 	db	117
   763  00FCD9  74                 	db	116
   764  00FCDA  65                 	db	101
   765  00FCDB  73                 	db	115
   766  00FCDC  00                 	db	0
   767  00FCDD                     __end_of__display_time@F8697:
   768                           	opt stack 0
   769  00FCDD                     __display_time@F8689:
   770                           	opt stack 0
   771  00FCDD  2D                 	db	45
   772  00FCDE  3E                 	db	62
   773  00FCDF  50                 	db	80
   774  00FCE0  72                 	db	114
   775  00FCE1  65                 	db	101
   776  00FCE2  73                 	db	115
   777  00FCE3  73                 	db	115
   778  00FCE4  20                 	db	32
   779  00FCE5  74                 	db	116
   780  00FCE6  6F                 	db	111
   781  00FCE7  20                 	db	32
   782  00FCE8  73                 	db	115
   783  00FCE9  65                 	db	101
   784  00FCEA  74                 	db	116
   785  00FCEB  20                 	db	32
   786  00FCEC  74                 	db	116
   787  00FCED  69                 	db	105
   788  00FCEE  6D                 	db	109
   789  00FCEF  65                 	db	101
   790  00FCF0  00                 	db	0
   791  00FCF1                     __end_of__display_time@F8689:
   792                           	opt stack 0
   793  00FCF1                     __display_efficiency@F8755:
   794                           	opt stack 0
   795  00FCF1  50                 	db	80
   796  00FCF2  61                 	db	97
   797  00FCF3  6E                 	db	110
   798  00FCF4  65                 	db	101
   799  00FCF5  6C                 	db	108
   800  00FCF6  3A                 	db	58
   801  00FCF7  20                 	db	32
   802  00FCF8  20                 	db	32
   803  00FCF9  20                 	db	32
   804  00FCFA  20                 	db	32
   805  00FCFB  42                 	db	66
   806  00FCFC  61                 	db	97
   807  00FCFD  74                 	db	116
   808  00FCFE  74                 	db	116
   809  00FCFF  65                 	db	101
   810  00FD00  72                 	db	114
   811  00FD01  79                 	db	121
   812  00FD02  3A                 	db	58
   813  00FD03  00                 	db	0
   814  00FD04                     __end_of__display_efficiency@F8755:
   815                           	opt stack 0
   816  00FD04                     __display_efficiency@F8753:
   817                           	opt stack 0
   818  00FD04  43                 	db	67
   819  00FD05  68                 	db	104
   820  00FD06  61                 	db	97
   821  00FD07  72                 	db	114
   822  00FD08  67                 	db	103
   823  00FD09  65                 	db	101
   824  00FD0A  72                 	db	114
   825  00FD0B  20                 	db	32
   826  00FD0C  45                 	db	69
   827  00FD0D  66                 	db	102
   828  00FD0E  66                 	db	102
   829  00FD0F  69                 	db	105
   830  00FD10  63                 	db	99
   831  00FD11  69                 	db	105
   832  00FD12  65                 	db	101
   833  00FD13  6E                 	db	110
   834  00FD14  63                 	db	99
   835  00FD15  79                 	db	121
   836  00FD16  00                 	db	0
   837  00FD17                     __end_of__display_efficiency@F8753:
   838                           	opt stack 0
   839  00FD17                     __display_charger@F8736:
   840                           	opt stack 0
   841  00FD17  43                 	db	67
   842  00FD18  68                 	db	104
   843  00FD19  61                 	db	97
   844  00FD1A  72                 	db	114
   845  00FD1B  67                 	db	103
   846  00FD1C  65                 	db	101
   847  00FD1D  72                 	db	114
   848  00FD1E  20                 	db	32
   849  00FD1F  73                 	db	115
   850  00FD20  75                 	db	117
   851  00FD21  70                 	db	112
   852  00FD22  70                 	db	112
   853  00FD23  6C                 	db	108
   854  00FD24  79                 	db	121
   855  00FD25  20                 	db	32
   856  00FD26  6F                 	db	111
   857  00FD27  66                 	db	102
   858  00FD28  66                 	db	102
   859  00FD29  00                 	db	0
   860  00FD2A                     __end_of__display_charger@F8736:
   861                           	opt stack 0
   862  00FD2A                     __display_charger@F8734:
   863                           	opt stack 0
   864  00FD2A  43                 	db	67
   865  00FD2B  68                 	db	104
   866  00FD2C  61                 	db	97
   867  00FD2D  72                 	db	114
   868  00FD2E  67                 	db	103
   869  00FD2F  65                 	db	101
   870  00FD30  72                 	db	114
   871  00FD31  20                 	db	32
   872  00FD32  73                 	db	115
   873  00FD33  75                 	db	117
   874  00FD34  70                 	db	112
   875  00FD35  70                 	db	112
   876  00FD36  6C                 	db	108
   877  00FD37  79                 	db	121
   878  00FD38  20                 	db	32
   879  00FD39  6F                 	db	111
   880  00FD3A  6E                 	db	110
   881  00FD3B  00                 	db	0
   882  00FD3C                     __end_of__display_charger@F8734:
   883                           	opt stack 0
   884  00FD3C                     __display_time@F8695:
   885                           	opt stack 0
   886  00FD3C  2D                 	db	45
   887  00FD3D  3E                 	db	62
   888  00FD3E  50                 	db	80
   889  00FD3F  72                 	db	114
   890  00FD40  65                 	db	101
   891  00FD41  73                 	db	115
   892  00FD42  73                 	db	115
   893  00FD43  20                 	db	32
   894  00FD44  66                 	db	102
   895  00FD45  6F                 	db	111
   896  00FD46  72                 	db	114
   897  00FD47  20                 	db	32
   898  00FD48  68                 	db	104
   899  00FD49  6F                 	db	111
   900  00FD4A  75                 	db	117
   901  00FD4B  72                 	db	114
   902  00FD4C  73                 	db	115
   903  00FD4D  00                 	db	0
   904  00FD4E                     __end_of__display_time@F8695:
   905                           	opt stack 0
   906  00FD4E                     __display_time@F8691:
   907                           	opt stack 0
   908  00FD4E  2D                 	db	45
   909  00FD4F  3E                 	db	62
   910  00FD50  50                 	db	80
   911  00FD51  72                 	db	114
   912  00FD52  65                 	db	101
   913  00FD53  73                 	db	115
   914  00FD54  73                 	db	115
   915  00FD55  20                 	db	32
   916  00FD56  66                 	db	102
   917  00FD57  6F                 	db	111
   918  00FD58  72                 	db	114
   919  00FD59  20                 	db	32
   920  00FD5A  6D                 	db	109
   921  00FD5B  6F                 	db	111
   922  00FD5C  6E                 	db	110
   923  00FD5D  74                 	db	116
   924  00FD5E  68                 	db	104
   925  00FD5F  00                 	db	0
   926  00FD60                     __end_of__display_time@F8691:
   927                           	opt stack 0
   928  00FD60                     __display_inout@F8667:
   929                           	opt stack 0
   930  00FD60  20                 	db	32
   931  00FD61  20                 	db	32
   932  00FD62  20                 	db	32
   933  00FD63  49                 	db	73
   934  00FD64  6E                 	db	110
   935  00FD65  70                 	db	112
   936  00FD66  75                 	db	117
   937  00FD67  74                 	db	116
   938  00FD68  20                 	db	32
   939  00FD69  20                 	db	32
   940  00FD6A  20                 	db	32
   941  00FD6B  4F                 	db	79
   942  00FD6C  75                 	db	117
   943  00FD6D  74                 	db	116
   944  00FD6E  70                 	db	112
   945  00FD6F  75                 	db	117
   946  00FD70  74                 	db	116
   947  00FD71  00                 	db	0
   948  00FD72                     __end_of__display_inout@F8667:
   949                           	opt stack 0
   950  00FD72                     __display_inout@F8665:
   951                           	opt stack 0
   952  00FD72  56                 	db	86
   953  00FD73  6F                 	db	111
   954  00FD74  6C                 	db	108
   955  00FD75  74                 	db	116
   956  00FD76  61                 	db	97
   957  00FD77  67                 	db	103
   958  00FD78  65                 	db	101
   959  00FD79  20                 	db	32
   960  00FD7A  26                 	db	38
   961  00FD7B  20                 	db	32
   962  00FD7C  43                 	db	67
   963  00FD7D  75                 	db	117
   964  00FD7E  72                 	db	114
   965  00FD7F  72                 	db	114
   966  00FD80  65                 	db	101
   967  00FD81  6E                 	db	110
   968  00FD82  74                 	db	116
   969  00FD83  00                 	db	0
   970  00FD84                     __end_of__display_inout@F8665:
   971                           	opt stack 0
   972  00FD84                     __display_usb@F8718:
   973                           	opt stack 0
   974  00FD84  55                 	db	85
   975  00FD85  53                 	db	83
   976  00FD86  42                 	db	66
   977  00FD87  20                 	db	32
   978  00FD88  63                 	db	99
   979  00FD89  68                 	db	104
   980  00FD8A  61                 	db	97
   981  00FD8B  72                 	db	114
   982  00FD8C  67                 	db	103
   983  00FD8D  69                 	db	105
   984  00FD8E  6E                 	db	110
   985  00FD8F  67                 	db	103
   986  00FD90  20                 	db	32
   987  00FD91  6F                 	db	111
   988  00FD92  66                 	db	102
   989  00FD93  66                 	db	102
   990  00FD94  00                 	db	0
   991  00FD95                     __end_of__display_usb@F8718:
   992                           	opt stack 0
   993  00FD95                     __display_charger@F8744:
   994                           	opt stack 0
   995  00FD95  43                 	db	67
   996  00FD96  68                 	db	104
   997  00FD97  61                 	db	97
   998  00FD98  72                 	db	114
   999  00FD99  67                 	db	103
  1000  00FD9A  65                 	db	101
  1001  00FD9B  72                 	db	114
  1002  00FD9C  20                 	db	32
  1003  00FD9D  53                 	db	83
  1004  00FD9E  74                 	db	116
  1005  00FD9F  61                 	db	97
  1006  00FDA0  72                 	db	114
  1007  00FDA1  74                 	db	116
  1008  00FDA2  75                 	db	117
  1009  00FDA3  70                 	db	112
  1010  00FDA4  00                 	db	0
  1011  00FDA5                     __end_of__display_charger@F8744:
  1012                           	opt stack 0
  1013  00FDA5                     __display_outputs@F8724:
  1014                           	opt stack 0
  1015  00FDA5  42                 	db	66
  1016  00FDA6  61                 	db	97
  1017  00FDA7  74                 	db	116
  1018  00FDA8  74                 	db	116
  1019  00FDA9  65                 	db	101
  1020  00FDAA  72                 	db	114
  1021  00FDAB  79                 	db	121
  1022  00FDAC  20                 	db	32
  1023  00FDAD  74                 	db	116
  1024  00FDAE  6F                 	db	111
  1025  00FDAF  6F                 	db	111
  1026  00FDB0  20                 	db	32
  1027  00FDB1  6C                 	db	108
  1028  00FDB2  6F                 	db	111
  1029  00FDB3  77                 	db	119
  1030  00FDB4  00                 	db	0
  1031  00FDB5                     __end_of__display_outputs@F8724:
  1032                           	opt stack 0
  1033  00FDB5                     __display_usb@F8716:
  1034                           	opt stack 0
  1035  00FDB5  55                 	db	85
  1036  00FDB6  53                 	db	83
  1037  00FDB7  42                 	db	66
  1038  00FDB8  20                 	db	32
  1039  00FDB9  63                 	db	99
  1040  00FDBA  68                 	db	104
  1041  00FDBB  61                 	db	97
  1042  00FDBC  72                 	db	114
  1043  00FDBD  67                 	db	103
  1044  00FDBE  69                 	db	105
  1045  00FDBF  6E                 	db	110
  1046  00FDC0  67                 	db	103
  1047  00FDC1  20                 	db	32
  1048  00FDC2  6F                 	db	111
  1049  00FDC3  6E                 	db	110
  1050  00FDC4  00                 	db	0
  1051  00FDC5                     __end_of__display_usb@F8716:
  1052                           	opt stack 0
  1053  00FDC5                     __display_usb@F8714:
  1054                           	opt stack 0
  1055  00FDC5  42                 	db	66
  1056  00FDC6  61                 	db	97
  1057  00FDC7  74                 	db	116
  1058  00FDC8  74                 	db	116
  1059  00FDC9  65                 	db	101
  1060  00FDCA  72                 	db	114
  1061  00FDCB  79                 	db	121
  1062  00FDCC  20                 	db	32
  1063  00FDCD  74                 	db	116
  1064  00FDCE  6F                 	db	111
  1065  00FDCF  6F                 	db	111
  1066  00FDD0  20                 	db	32
  1067  00FDD1  6C                 	db	108
  1068  00FDD2  6F                 	db	111
  1069  00FDD3  77                 	db	119
  1070  00FDD4  00                 	db	0
  1071  00FDD5                     __end_of__display_usb@F8714:
  1072                           	opt stack 0
  1073  00FDD5                     __display_time@F8701:
  1074                           	opt stack 0
  1075  00FDD5  2D                 	db	45
  1076  00FDD6  3E                 	db	62
  1077  00FDD7  50                 	db	80
  1078  00FDD8  72                 	db	114
  1079  00FDD9  65                 	db	101
  1080  00FDDA  73                 	db	115
  1081  00FDDB  73                 	db	115
  1082  00FDDC  20                 	db	32
  1083  00FDDD  74                 	db	116
  1084  00FDDE  6F                 	db	111
  1085  00FDDF  20                 	db	32
  1086  00FDE0  73                 	db	115
  1087  00FDE1  61                 	db	97
  1088  00FDE2  76                 	db	118
  1089  00FDE3  65                 	db	101
  1090  00FDE4  00                 	db	0
  1091  00FDE5                     __end_of__display_time@F8701:
  1092                           	opt stack 0
  1093  00FDE5                     __display_time@F8693:
  1094                           	opt stack 0
  1095  00FDE5  2D                 	db	45
  1096  00FDE6  3E                 	db	62
  1097  00FDE7  50                 	db	80
  1098  00FDE8  72                 	db	114
  1099  00FDE9  65                 	db	101
  1100  00FDEA  73                 	db	115
  1101  00FDEB  73                 	db	115
  1102  00FDEC  20                 	db	32
  1103  00FDED  66                 	db	102
  1104  00FDEE  6F                 	db	111
  1105  00FDEF  72                 	db	114
  1106  00FDF0  20                 	db	32
  1107  00FDF1  64                 	db	100
  1108  00FDF2  61                 	db	97
  1109  00FDF3  79                 	db	121
  1110  00FDF4  00                 	db	0
  1111  00FDF5                     __end_of__display_time@F8693:
  1112                           	opt stack 0
  1113  00FDF5                     __display_efficiency@F8757:
  1114                           	opt stack 0
  1115  00FDF5  45                 	db	69
  1116  00FDF6  3A                 	db	58
  1117  00FDF7  20                 	db	32
  1118  00FDF8  20                 	db	32
  1119  00FDF9  20                 	db	32
  1120  00FDFA  20                 	db	32
  1121  00FDFB  20                 	db	32
  1122  00FDFC  20                 	db	32
  1123  00FDFD  20                 	db	32
  1124  00FDFE  20                 	db	32
  1125  00FDFF  20                 	db	32
  1126  00FE00  4C                 	db	76
  1127  00FE01  3A                 	db	58
  1128  00FE02  00                 	db	0
  1129  00FE03                     __end_of__display_efficiency@F8757:
  1130                           	opt stack 0
  1131  00FE03                     __display_outputs@F8722:
  1132                           	opt stack 0
  1133  00FE03  50                 	db	80
  1134  00FE04  6F                 	db	111
  1135  00FE05  77                 	db	119
  1136  00FE06  65                 	db	101
  1137  00FE07  72                 	db	114
  1138  00FE08  20                 	db	32
  1139  00FE09  4F                 	db	79
  1140  00FE0A  75                 	db	117
  1141  00FE0B  74                 	db	116
  1142  00FE0C  70                 	db	112
  1143  00FE0D  75                 	db	117
  1144  00FE0E  74                 	db	116
  1145  00FE0F  73                 	db	115
  1146  00FE10  00                 	db	0
  1147  00FE11                     __end_of__display_outputs@F8722:
  1148                           	opt stack 0
  1149  00FE11                     __display_time@F8675:
  1150                           	opt stack 0
  1151  00FE11  54                 	db	84
  1152  00FE12  69                 	db	105
  1153  00FE13  6D                 	db	109
  1154  00FE14  65                 	db	101
  1155  00FE15  20                 	db	32
  1156  00FE16  61                 	db	97
  1157  00FE17  6E                 	db	110
  1158  00FE18  64                 	db	100
  1159  00FE19  20                 	db	32
  1160  00FE1A  44                 	db	68
  1161  00FE1B  61                 	db	97
  1162  00FE1C  74                 	db	116
  1163  00FE1D  65                 	db	101
  1164  00FE1E  00                 	db	0
  1165  00FE1F                     __end_of__display_time@F8675:
  1166                           	opt stack 0
  1167  00FE1F                     __display_inout@F8671:
  1168                           	opt stack 0
  1169  00FE1F  41                 	db	65
  1170  00FE20  3A                 	db	58
  1171  00FE21  20                 	db	32
  1172  00FE22  2D                 	db	45
  1173  00FE23  2D                 	db	45
  1174  00FE24  20                 	db	32
  1175  00FE25  20                 	db	32
  1176  00FE26  20                 	db	32
  1177  00FE27  20                 	db	32
  1178  00FE28  20                 	db	32
  1179  00FE29  20                 	db	32
  1180  00FE2A  2D                 	db	45
  1181  00FE2B  2D                 	db	45
  1182  00FE2C  00                 	db	0
  1183  00FE2D                     __end_of__display_inout@F8671:
  1184                           	opt stack 0
  1185  00FE2D                     __display_temperature@F8779:
  1186                           	opt stack 0
  1187  00FE2D  45                 	db	69
  1188  00FE2E  78                 	db	120
  1189  00FE2F  74                 	db	116
  1190  00FE30  65                 	db	101
  1191  00FE31  72                 	db	114
  1192  00FE32  6E                 	db	110
  1193  00FE33  61                 	db	97
  1194  00FE34  6C                 	db	108
  1195  00FE35  20                 	db	32
  1196  00FE36  32                 	db	50
  1197  00FE37  3A                 	db	58
  1198  00FE38  00                 	db	0
  1199  00FE39                     __end_of__display_temperature@F8779:
  1200                           	opt stack 0
  1201  00FE39                     __display_temperature@F8777:
  1202                           	opt stack 0
  1203  00FE39  45                 	db	69
  1204  00FE3A  78                 	db	120
  1205  00FE3B  74                 	db	116
  1206  00FE3C  65                 	db	101
  1207  00FE3D  72                 	db	114
  1208  00FE3E  6E                 	db	110
  1209  00FE3F  61                 	db	97
  1210  00FE40  6C                 	db	108
  1211  00FE41  20                 	db	32
  1212  00FE42  31                 	db	49
  1213  00FE43  3A                 	db	58
  1214  00FE44  00                 	db	0
  1215  00FE45                     __end_of__display_temperature@F8777:
  1216                           	opt stack 0
  1217  00FE45                     __display_charger@F8742:
  1218                           	opt stack 0
  1219  00FE45  43                 	db	67
  1220  00FE46  68                 	db	104
  1221  00FE47  61                 	db	97
  1222  00FE48  72                 	db	114
  1223  00FE49  67                 	db	103
  1224  00FE4A  65                 	db	101
  1225  00FE4B  72                 	db	114
  1226  00FE4C  20                 	db	32
  1227  00FE4D  6F                 	db	111
  1228  00FE4E  66                 	db	102
  1229  00FE4F  66                 	db	102
  1230  00FE50  00                 	db	0
  1231  00FE51                     __end_of__display_charger@F8742:
  1232                           	opt stack 0
  1233  00FE51                     __display_time@F8687:
  1234                           	opt stack 0
  1235  00FE51  53                 	db	83
  1236  00FE52  65                 	db	101
  1237  00FE53  74                 	db	116
  1238  00FE54  20                 	db	32
  1239  00FE55  73                 	db	115
  1240  00FE56  65                 	db	101
  1241  00FE57  63                 	db	99
  1242  00FE58  6F                 	db	111
  1243  00FE59  6E                 	db	110
  1244  00FE5A  64                 	db	100
  1245  00FE5B  73                 	db	115
  1246  00FE5C  00                 	db	0
  1247  00FE5D                     __end_of__display_time@F8687:
  1248                           	opt stack 0
  1249  00FE5D                     __display_time@F8685:
  1250                           	opt stack 0
  1251  00FE5D  53                 	db	83
  1252  00FE5E  65                 	db	101
  1253  00FE5F  74                 	db	116
  1254  00FE60  20                 	db	32
  1255  00FE61  6D                 	db	109
  1256  00FE62  69                 	db	105
  1257  00FE63  6E                 	db	110
  1258  00FE64  75                 	db	117
  1259  00FE65  74                 	db	116
  1260  00FE66  65                 	db	101
  1261  00FE67  73                 	db	115
  1262  00FE68  00                 	db	0
  1263  00FE69                     __end_of__display_time@F8685:
  1264                           	opt stack 0
  1265  00FE69                     __display_temperature@F8775:
  1266                           	opt stack 0
  1267  00FE69  4F                 	db	79
  1268  00FE6A  6E                 	db	110
  1269  00FE6B  2D                 	db	45
  1270  00FE6C  62                 	db	98
  1271  00FE6D  6F                 	db	111
  1272  00FE6E  61                 	db	97
  1273  00FE6F  72                 	db	114
  1274  00FE70  64                 	db	100
  1275  00FE71  3A                 	db	58
  1276  00FE72  20                 	db	32
  1277  00FE73  00                 	db	0
  1278  00FE74                     __end_of__display_temperature@F8775:
  1279                           	opt stack 0
  1280  00FE74                     __display_time@F8683:
  1281                           	opt stack 0
  1282  00FE74  53                 	db	83
  1283  00FE75  65                 	db	101
  1284  00FE76  74                 	db	116
  1285  00FE77  20                 	db	32
  1286  00FE78  68                 	db	104
  1287  00FE79  6F                 	db	111
  1288  00FE7A  75                 	db	117
  1289  00FE7B  72                 	db	114
  1290  00FE7C  73                 	db	115
  1291  00FE7D  00                 	db	0
  1292  00FE7E                     __end_of__display_time@F8683:
  1293                           	opt stack 0
  1294  00FE7E                     __display_time@F8679:
  1295                           	opt stack 0
  1296  00FE7E  53                 	db	83
  1297  00FE7F  65                 	db	101
  1298  00FE80  74                 	db	116
  1299  00FE81  20                 	db	32
  1300  00FE82  6D                 	db	109
  1301  00FE83  6F                 	db	111
  1302  00FE84  6E                 	db	110
  1303  00FE85  74                 	db	116
  1304  00FE86  68                 	db	104
  1305  00FE87  00                 	db	0
  1306  00FE88                     __end_of__display_time@F8679:
  1307                           	opt stack 0
  1308  00FE88                     __display_time@F8677:
  1309                           	opt stack 0
  1310  00FE88  53                 	db	83
  1311  00FE89  65                 	db	101
  1312  00FE8A  74                 	db	116
  1313  00FE8B  20                 	db	32
  1314  00FE8C  79                 	db	121
  1315  00FE8D  65                 	db	101
  1316  00FE8E  61                 	db	97
  1317  00FE8F  72                 	db	114
  1318  00FE90  00                 	db	0
  1319  00FE91                     __end_of__display_time@F8677:
  1320                           	opt stack 0
  1321  00FE91                     __display_charger@F8740:
  1322                           	opt stack 0
  1323  00FE91  46                 	db	70
  1324  00FE92  61                 	db	97
  1325  00FE93  6E                 	db	110
  1326  00FE94  20                 	db	32
  1327  00FE95  6F                 	db	111
  1328  00FE96  66                 	db	102
  1329  00FE97  66                 	db	102
  1330  00FE98  00                 	db	0
  1331  00FE99                     __end_of__display_charger@F8740:
  1332                           	opt stack 0
  1333  00FE99                     __display_time@F8681:
  1334                           	opt stack 0
  1335  00FE99  53                 	db	83
  1336  00FE9A  65                 	db	101
  1337  00FE9B  74                 	db	116
  1338  00FE9C  20                 	db	32
  1339  00FE9D  64                 	db	100
  1340  00FE9E  61                 	db	97
  1341  00FE9F  79                 	db	121
  1342  00FEA0  00                 	db	0
  1343  00FEA1                     __end_of__display_time@F8681:
  1344                           	opt stack 0
  1345  00FEA1                     _USB_SD_Ptr:
  1346                           	opt stack 0
  1347  00FEA1  CC                 	db	low _sd000
  1348  00FEA2  FF                 	db	high _sd000
  1349  00FEA3  F5                 	db	low _sd001
  1350  00FEA4  FE                 	db	high _sd001
  1351  00FEA5  29                 	db	low _sd002
  1352  00FEA6  FF                 	db	high _sd002
  1353  00FEA7  98                 	db	low _sd003
  1354  00FEA8  FF                 	db	high _sd003
  1355  00FEA9                     __end_of_USB_SD_Ptr:
  1356                           	opt stack 0
  1357  00FEA9                     __display_charger@F8738:
  1358                           	opt stack 0
  1359  00FEA9  46                 	db	70
  1360  00FEAA  61                 	db	97
  1361  00FEAB  6E                 	db	110
  1362  00FEAC  20                 	db	32
  1363  00FEAD  6F                 	db	111
  1364  00FEAE  6E                 	db	110
  1365  00FEAF  00                 	db	0
  1366  00FEB0                     __end_of__display_charger@F8738:
  1367                           	opt stack 0
  1368  00FEB0                     __display_inout@F8669:
  1369                           	opt stack 0
  1370  00FEB0  56                 	db	86
  1371  00FEB1  3A                 	db	58
  1372  00FEB2  00                 	db	0
  1373  00FEB3                     __end_of__display_inout@F8669:
  1374                           	opt stack 0
  1375  00FEB3                     _USB_CD_Ptr:
  1376                           	opt stack 0
  1377  00FEB3  B5                 	db	low _configDescriptor1
  1378  00FEB4  FE                 	db	high _configDescriptor1
  1379  00FEB5                     __end_of_USB_CD_Ptr:
  1380                           	opt stack 0
  1381  00FEB5                     _configDescriptor1:
  1382                           	opt stack 0
  1383  00FEB5  09                 	db	9
  1384  00FEB6  02                 	db	2
  1385  00FEB7  40                 	db	64
  1386  00FEB8  00                 	db	0
  1387  00FEB9  02                 	db	2
  1388  00FEBA  01                 	db	1
  1389  00FEBB  00                 	db	0
  1390  00FEBC  C0                 	db	192
  1391  00FEBD  32                 	db	50
  1392  00FEBE  09                 	db	9
  1393  00FEBF  04                 	db	4
  1394  00FEC0  00                 	db	0
  1395  00FEC1  00                 	db	0
  1396  00FEC2  02                 	db	2
  1397  00FEC3  03                 	db	3
  1398  00FEC4  00                 	db	0
  1399  00FEC5  00                 	db	0
  1400  00FEC6  00                 	db	0
  1401  00FEC7  09                 	db	9
  1402  00FEC8  21                 	db	33
  1403  00FEC9  11                 	db	17
  1404  00FECA  01                 	db	1
  1405  00FECB  00                 	db	0
  1406  00FECC  01                 	db	1
  1407  00FECD  22                 	db	34
  1408  00FECE  1D                 	db	29
  1409  00FECF  00                 	db	0
  1410  00FED0  07                 	db	7
  1411  00FED1  05                 	db	5
  1412  00FED2  81                 	db	129
  1413  00FED3  03                 	db	3
  1414  00FED4  40                 	db	64
  1415  00FED5  00                 	db	0
  1416  00FED6  01                 	db	1
  1417  00FED7  07                 	db	7
  1418  00FED8  05                 	db	5
  1419  00FED9  01                 	db	1
  1420  00FEDA  03                 	db	3
  1421  00FEDB  40                 	db	64
  1422  00FEDC  00                 	db	0
  1423  00FEDD  01                 	db	1
  1424  00FEDE  09                 	db	9
  1425  00FEDF  04                 	db	4
  1426  00FEE0  01                 	db	1
  1427  00FEE1  00                 	db	0
  1428  00FEE2  02                 	db	2
  1429  00FEE3  08                 	db	8
  1430  00FEE4  06                 	db	6
  1431  00FEE5  50                 	db	80
  1432  00FEE6  00                 	db	0
  1433  00FEE7  07                 	db	7
  1434  00FEE8  05                 	db	5
  1435  00FEE9  82                 	db	130
  1436  00FEEA  02                 	db	2
  1437  00FEEB  40                 	db	64
  1438  00FEEC  00                 	db	0
  1439  00FEED  01                 	db	1
  1440  00FEEE  07                 	db	7
  1441  00FEEF  05                 	db	5
  1442  00FEF0  02                 	db	2
  1443  00FEF1  02                 	db	2
  1444  00FEF2  40                 	db	64
  1445  00FEF3  00                 	db	0
  1446  00FEF4  01                 	db	1
  1447  00FEF5                     __end_of_configDescriptor1:
  1448                           	opt stack 0
  1449  00FEF5                     _sd001:
  1450                           	opt stack 0
  1451  00FEF5  34                 	db	52
  1452  00FEF6  03                 	db	3
  1453  00FEF7  0053               	dw	83
  1454  00FEF9  006F               	dw	111
  1455  00FEFB  006C               	dw	108
  1456  00FEFD  0064               	dw	100
  1457  00FEFF  0065               	dw	101
  1458  00FF01  0072               	dw	114
  1459  00FF03  006E               	dw	110
  1460  00FF05  0065               	dw	101
  1461  00FF07  0072               	dw	114
  1462  00FF09  0064               	dw	100
  1463  00FF0B  002E               	dw	46
  1464  00FF0D  0063               	dw	99
  1465  00FF0F  006F               	dw	111
  1466  00FF11  006D               	dw	109
  1467  00FF13  0020               	dw	32
  1468  00FF15  0020               	dw	32
  1469  00FF17  0020               	dw	32
  1470  00FF19  0020               	dw	32
  1471  00FF1B  0020               	dw	32
  1472  00FF1D  0020               	dw	32
  1473  00FF1F  0020               	dw	32
  1474  00FF21  0020               	dw	32
  1475  00FF23  0020               	dw	32
  1476  00FF25  0020               	dw	32
  1477  00FF27  0020               	dw	32
  1478  00FF29                     __end_of_sd001:
  1479                           	opt stack 0
  1480  00FF29                     _sd002:
  1481                           	opt stack 0
  1482  00FF29  2E                 	db	46
  1483  00FF2A  03                 	db	3
  1484  00FF2B  004D               	dw	77
  1485  00FF2D  0050               	dw	80
  1486  00FF2F  0050               	dw	80
  1487  00FF31  0054               	dw	84
  1488  00FF33  0053               	dw	83
  1489  00FF35  006F               	dw	111
  1490  00FF37  006C               	dw	108
  1491  00FF39  0061               	dw	97
  1492  00FF3B  0072               	dw	114
  1493  00FF3D  0020               	dw	32
  1494  00FF3F  0043               	dw	67
  1495  00FF41  0068               	dw	104
  1496  00FF43  0061               	dw	97
  1497  00FF45  0072               	dw	114
  1498  00FF47  0067               	dw	103
  1499  00FF49  0065               	dw	101
  1500  00FF4B  0072               	dw	114
  1501  00FF4D  0020               	dw	32
  1502  00FF4F  0052               	dw	82
  1503  00FF51  0065               	dw	101
  1504  00FF53  0076               	dw	118
  1505  00FF55  0045               	dw	69
  1506  00FF57                     __end_of_sd002:
  1507                           	opt stack 0
  1508  00FF57                     _inq_resp:
  1509                           	opt stack 0
  1510  00FF57  00                 	db	0
  1511  00FF58  80                 	db	128
  1512  00FF59  04                 	db	4
  1513  00FF5A  02                 	db	2
  1514  00FF5B  20                 	db	32
  1515  00FF5C  00                 	db	0
  1516  00FF5D  00                 	db	0
  1517  00FF5E  00                 	db	0
  1518  00FF5F  4D                 	db	77
  1519  00FF60  69                 	db	105
  1520  00FF61  63                 	db	99
  1521  00FF62  72                 	db	114
  1522  00FF63  6F                 	db	111
  1523  00FF64  63                 	db	99
  1524  00FF65  68                 	db	104
  1525  00FF66  70                 	db	112
  1526  00FF67  4D                 	db	77
  1527  00FF68  61                 	db	97
  1528  00FF69  73                 	db	115
  1529  00FF6A  73                 	db	115
  1530  00FF6B  20                 	db	32
  1531  00FF6C  53                 	db	83
  1532  00FF6D  74                 	db	116
  1533  00FF6E  6F                 	db	111
  1534  00FF6F  72                 	db	114
  1535  00FF70  61                 	db	97
  1536  00FF71  67                 	db	103
  1537  00FF72  65                 	db	101
  1538  00FF73  20                 	db	32
  1539  00FF74  20                 	db	32
  1540  00FF75  20                 	db	32
  1541  00FF76  20                 	db	32
  1542  00FF77  30                 	db	48
  1543  00FF78  30                 	db	48
  1544  00FF79  30                 	db	48
  1545  00FF7A  31                 	db	49
  1546  00FF7B                     __end_of_inq_resp:
  1547                           	opt stack 0
  1548  00FF7B                     _hid_rpt01:
  1549                           	opt stack 0
  1550  00FF7B  06                 	db	6
  1551  00FF7C  00                 	db	0
  1552  00FF7D  FF                 	db	255
  1553  00FF7E  09                 	db	9
  1554  00FF7F  01                 	db	1
  1555  00FF80  A1                 	db	161
  1556  00FF81  01                 	db	1
  1557  00FF82  19                 	db	25
  1558  00FF83  01                 	db	1
  1559  00FF84  29                 	db	41
  1560  00FF85  40                 	db	64
  1561  00FF86  15                 	db	21
  1562  00FF87  00                 	db	0
  1563  00FF88  26                 	db	38
  1564  00FF89  FF                 	db	255
  1565  00FF8A  00                 	db	0
  1566  00FF8B  75                 	db	117
  1567  00FF8C  08                 	db	8
  1568  00FF8D  95                 	db	149
  1569  00FF8E  40                 	db	64
  1570  00FF8F  81                 	db	129
  1571  00FF90  00                 	db	0
  1572  00FF91  19                 	db	25
  1573  00FF92  01                 	db	1
  1574  00FF93  29                 	db	41
  1575  00FF94  40                 	db	64
  1576  00FF95  91                 	db	145
  1577  00FF96  00                 	db	0
  1578  00FF97  C0                 	db	192
  1579  00FF98                     __end_of_hid_rpt01:
  1580                           	opt stack 0
  1581  00FF98                     _sd003:
  1582                           	opt stack 0
  1583  00FF98  1A                 	db	26
  1584  00FF99  03                 	db	3
  1585  00FF9A  0031               	dw	49
  1586  00FF9C  0032               	dw	50
  1587  00FF9E  0033               	dw	51
  1588  00FFA0  0034               	dw	52
  1589  00FFA2  0035               	dw	53
  1590  00FFA4  0036               	dw	54
  1591  00FFA6  0037               	dw	55
  1592  00FFA8  0038               	dw	56
  1593  00FFAA  0039               	dw	57
  1594  00FFAC  0030               	dw	48
  1595  00FFAE  0039               	dw	57
  1596  00FFB0  0039               	dw	57
  1597  00FFB2                     __end_of_sd003:
  1598                           	opt stack 0
  1599  00FFB2                     _device_dsc:
  1600                           	opt stack 0
  1601  00FFB2  12                 	db	18
  1602  00FFB3  01                 	db	1
  1603  00FFB4  0200               	dw	512
  1604  00FFB6  00                 	db	0
  1605  00FFB7  00                 	db	0
  1606  00FFB8  00                 	db	0
  1607  00FFB9  08                 	db	8
  1608  00FFBA  04D8               	dw	1240
  1609  00FFBC  F08E               	dw	61582
  1610  00FFBE  0100               	dw	256
  1611  00FFC0  01                 	db	1
  1612  00FFC1  02                 	db	2
  1613  00FFC2  00                 	db	0
  1614  00FFC3  01                 	db	1
  1615  00FFC4                     __end_of_device_dsc:
  1616                           	opt stack 0
  1617  00FFC4                     _flash_command_pagesize_528:
  1618                           	opt stack 0
  1619  00FFC4  3D                 	db	61
  1620  00FFC5  2A                 	db	42
  1621  00FFC6  80                 	db	128
  1622  00FFC7  A7                 	db	167
  1623  00FFC8                     __end_of_flash_command_pagesize_528:
  1624                           	opt stack 0
  1625  00FFC8                     _flash_command_pagesize_512:
  1626                           	opt stack 0
  1627  00FFC8  3D                 	db	61
  1628  00FFC9  2A                 	db	42
  1629  00FFCA  80                 	db	128
  1630  00FFCB  A6                 	db	166
  1631  00FFCC                     __end_of_flash_command_pagesize_512:
  1632                           	opt stack 0
  1633  00FFCC                     _sd000:
  1634                           	opt stack 0
  1635  00FFCC  04                 	db	4
  1636  00FFCD  03                 	db	3
  1637  00FFCE  0409               	dw	1033
  1638  00FFD0                     __end_of_sd000:
  1639                           	opt stack 0
  1640  0000                     _RPINR22	set	3837
  1641  0000                     _RPOR22	set	3798
  1642  0000                     _RPOR21	set	3797
  1643  0000                     _RPINR21	set	3836
  1644  0000                     _RPOR5	set	3781
  1645  0000                     _RPOR6	set	3782
  1646  0000                     _RPINR2	set	3810
  1647  0000                     _RPINR3	set	3811
  1648  0000                     _RPINR1	set	3809
  1649  0000                     _PPSCONbits	set	3775
  1650  0000                     _CCPTMRS0bits	set	3922
  1651  0000                     _RTCVALH	set	3899
  1652  0000                     _RTCVALL	set	3898
  1653  0000                     _RTCCAL	set	3902
  1654  0000                     _RTCCFGbits	set	3903
  1655  0000                     _ANCON1bits	set	3913
  1656  0000                     _ANCON0bits	set	3912
  1657  0000                     _UEP0bits	set	3878
  1658  0000                     _UIEbits	set	3894
  1659  0000                     _UADDR	set	3896
  1660  0000                     _UIE	set	3894
  1661  0000                     _UEIE	set	3895
  1662  0000                     _UCFG	set	3897
  1663  0000                     _UEP1	set	3879
  1664  0000                     _UEP0	set	3878
  1665  0000                     _SSP2CON1bits	set	3954
  1666  0000                     _SSP2STATbits	set	3955
  1667  0000                     _RXADDRL	set	3945
  1668  0000                     _RXADDRH	set	3944
  1669  0000                     _DMABCL	set	3943
  1670  0000                     _DMABCH	set	3942
  1671  0000                     _TXADDRL	set	3947
  1672  0000                     _TXADDRH	set	3946
  1673  0000                     _DMACON2bits	set	3974
  1674  0000                     _DMACON1bits	set	3976
  1675  0000                     _ADRESL	set	4035
  1676  0000                     _ADRESH	set	4036
  1677  0000                     _ADCON1bits	set	4033
  1678  0000                     _ADCON0bits	set	4034
  1679  0000                     _CCP1CON	set	4026
  1680  0000                     _TMR2	set	4044
  1681  0000                     _PR2	set	4043
  1682  0000                     _CCPR1L	set	4027
  1683  0000                     _CCP1CONbits	set	4026
  1684  0000                     _T2CONbits	set	4042
  1685  0000                     _SSP1BUF	set	4041
  1686  0000                     _SSP1CON2bits	set	4037
  1687  0000                     _SSP1CON1bits	set	4038
  1688  0000                     _SSP1ADD	set	4040
  1689  0000                     _SSP1STATbits	set	4039
  1690  0000                     _T1CONbits	set	4045
  1691  0000                     _TMR1L	set	4046
  1692  0000                     _TMR1H	set	4047
  1693  0000                     _PIR1bits	set	3998
  1694  0000                     _LATAbits	set	3977
  1695  0000                     _TRISEbits	set	3990
  1696  0000                     _LATEbits	set	3981
  1697  0000                     _LATCbits	set	3979
  1698  0000                     _TRISAbits	set	3986
  1699  0000                     _TRISBbits	set	3987
  1700  0000                     _LATBbits	set	3978
  1701  0000                     _TRISDbits	set	3989
  1702  0000                     _TRISCbits	set	3988
  1703  0000                     _T0CONbits	set	4053
  1704  0000                     _INTCON2bits	set	4081
  1705  0000                     _EECON2	set	4007
  1706  0000                     _PORTBbits	set	3969
  1707  0000                     _INTCON3bits	set	4080
  1708  0000                     _TMR0L	set	4054
  1709  0000                     _TMR0H	set	4055
  1710  0000                     _PORTAbits	set	3968
  1711  0000                     _OSCCON	set	4051
  1712  0000                     _OSCTUNEbits	set	3995
  1713  0000                     _LATDbits	set	3980
  1714  0000                     _INTCONbits	set	4082
  1715  0000                     _IPR2bits	set	4002
  1716  0000                     _RCONbits	set	4048
  1717  0000                     _UCON	set	3941
  1718  0000                     _USTAT	set	3940
  1719  0000                     _PIR2bits	set	4001
  1720  0000                     _UIRbits	set	3938
  1721  0000                     _UCONbits	set	3941
  1722  0000                     _UIR	set	3938
  1723  0000                     _UEIR	set	3939
  1724  0000                     _PIE2bits	set	4000
  1725  00FFD0                     
  1726                           ; BSR set to: 1
  1727  00FFD0  48                 	db	72	;'H'
  1728  00FFD1  65                 	db	101	;'e'
  1729  00FFD2  6C                 	db	108	;'l'
  1730  00FFD3  6C                 	db	108	;'l'
  1731  00FFD4  6F                 	db	111	;'o'
  1732  00FFD5  20                 	db	32
  1733  00FFD6  57                 	db	87	;'W'
  1734  00FFD7  6F                 	db	111	;'o'
  1735  00FFD8  72                 	db	114	;'r'
  1736  00FFD9  6C                 	db	108	;'l'
  1737  00FFDA  64                 	db	100	;'d'
  1738  00FFDB  21                 	db	33
  1739  00FFDC  00                 	db	0
  1740  00FFDD                     
  1741                           ; BSR set to: 1
  1742  00FFDD  53                 	db	83	;'S'
  1743  00FFDE  6F                 	db	111	;'o'
  1744  00FFDF  6C                 	db	108	;'l'
  1745  00FFE0  61                 	db	97	;'a'
  1746  00FFE1  72                 	db	114	;'r'
  1747  00FFE2  43                 	db	67	;'C'
  1748  00FFE3  68                 	db	104	;'h'
  1749  00FFE4  61                 	db	97	;'a'
  1750  00FFE5  72                 	db	114	;'r'
  1751  00FFE6  67                 	db	103	;'g'
  1752  00FFE7  72                 	db	114	;'r'
  1753  00FFE8  00                 	db	0
  1754  00FFE9                     
  1755                           ; BSR set to: 1
  1756  00FFE9  46                 	db	70	;'F'
  1757  00FFEA  49                 	db	73	;'I'
  1758  00FFEB  4C                 	db	76	;'L'
  1759  00FFEC  45                 	db	69	;'E'
  1760  00FFED  20                 	db	32
  1761  00FFEE  20                 	db	32
  1762  00FFEF  20                 	db	32
  1763  00FFF0  20                 	db	32
  1764  00FFF1  00                 	db	0
  1765  00FFF2                     STR_1:
  1766                           
  1767                           ; BSR set to: 1
  1768  00FFF2  4D                 	db	77	;'M'
  1769  00FFF3  53                 	db	83	;'S'
  1770  00FFF4  44                 	db	68	;'D'
  1771  00FFF5  4F                 	db	79	;'O'
  1772  00FFF6  53                 	db	83	;'S'
  1773  00FFF7  35                 	db	53	;'5'
  1774  00FFF8  2E                 	db	46
  1775  00FFF9  30                 	db	48	;'0'
  1776  00FFFA  00                 	db	0
  1777  00FFFB                     
  1778                           ; BSR set to: 1
  1779  00FFFB  54                 	db	84	;'T'
  1780  00FFFC  58                 	db	88	;'X'
  1781  00FFFD  54                 	db	84	;'T'
  1782  00FFFE  00                 	db	0
  1783  0000                     
  1784                           ; #config settings
  1785  00FFFF  00                 	db	0	; dummy byte at the end
  1786  0000                     
  1787                           	psect	cinit
  1788  0174A0                     __pcinit:
  1789                           	opt stack 0
  1790  0174A0                     start_initialization:
  1791                           	opt stack 0
  1792  0174A0                     __initialization:
  1793                           	opt stack 0
  1794                           
  1795                           ; Initialize objects allocated to BANK4 (104 bytes)
  1796                           ; load TBLPTR registers with __pidataBANK4
  1797  0174A0  0ED8               	movlw	low __pidataBANK4
  1798  0174A2  6EF6               	movwf	tblptrl,c
  1799  0174A4  0E92               	movlw	high __pidataBANK4
  1800  0174A6  6EF7               	movwf	tblptrh,c
  1801  0174A8  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  1802  0174AA  6EF8               	movwf	tblptru,c
  1803  0174AC  EE04  F000         	lfsr	0,__pdataBANK4
  1804  0174B0  EE10 F068          	lfsr	1,104
  1805  0174B4                     copy_data0:
  1806  0174B4  0009               	tblrd		*+
  1807  0174B6  CFF5 FFEE          	movff	tablat,postinc0
  1808  0174BA  50E5               	movf	postdec1,w,c
  1809  0174BC  50E1               	movf	fsr1l,w,c
  1810  0174BE  E1FA               	bnz	copy_data0
  1811                           
  1812                           ; Initialize objects allocated to BANK3 (27 bytes)
  1813                           ; load TBLPTR registers with __pidataBANK3
  1814  0174C0  0EC6               	movlw	low __pidataBANK3
  1815  0174C2  6EF6               	movwf	tblptrl,c
  1816  0174C4  0EA8               	movlw	high __pidataBANK3
  1817  0174C6  6EF7               	movwf	tblptrh,c
  1818  0174C8  0E01               	movlw	low (__pidataBANK3 shr (0+16))
  1819  0174CA  6EF8               	movwf	tblptru,c
  1820  0174CC  EE03  F0E4         	lfsr	0,__pdataBANK3
  1821  0174D0  EE10 F01B          	lfsr	1,27
  1822  0174D4                     copy_data1:
  1823  0174D4  0009               	tblrd		*+
  1824  0174D6  CFF5 FFEE          	movff	tablat,postinc0
  1825  0174DA  50E5               	movf	postdec1,w,c
  1826  0174DC  50E1               	movf	fsr1l,w,c
  1827  0174DE  E1FA               	bnz	copy_data1
  1828                           
  1829                           ; Initialize objects allocated to BANK2 (61 bytes)
  1830                           ; load TBLPTR registers with __pidataBANK2
  1831  0174E0  0E3E               	movlw	low __pidataBANK2
  1832  0174E2  6EF6               	movwf	tblptrl,c
  1833  0174E4  0EA0               	movlw	high __pidataBANK2
  1834  0174E6  6EF7               	movwf	tblptrh,c
  1835  0174E8  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1836  0174EA  6EF8               	movwf	tblptru,c
  1837  0174EC  EE02  F0BB         	lfsr	0,__pdataBANK2
  1838  0174F0  EE10 F03D          	lfsr	1,61
  1839  0174F4                     copy_data2:
  1840  0174F4  0009               	tblrd		*+
  1841  0174F6  CFF5 FFEE          	movff	tablat,postinc0
  1842  0174FA  50E5               	movf	postdec1,w,c
  1843  0174FC  50E1               	movf	fsr1l,w,c
  1844  0174FE  E1FA               	bnz	copy_data2
  1845                           
  1846                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1847  017500  EE08  F000         	lfsr	0,__pbssBIGRAMll
  1848  017504  EE12 F000          	lfsr	1,512
  1849  017508                     clear_0:
  1850  017508  6AEE               	clrf	postinc0,c
  1851  01750A  50E5               	movf	postdec1,w,c
  1852  01750C  50E1               	movf	fsr1l,w,c
  1853  01750E  E1FC               	bnz	clear_0
  1854  017510  50E2               	movf	fsr1h,w,c
  1855  017512  E1FA               	bnz	clear_0
  1856                           
  1857                           ; Clear objects allocated to BANK4 (80 bytes)
  1858  017514  EE04  F068         	lfsr	0,__pbssBANK4
  1859  017518  0E50               	movlw	80
  1860  01751A                     clear_1:
  1861  01751A  6AEE               	clrf	postinc0,c
  1862  01751C  06E8               	decf	wreg,f,c
  1863  01751E  E1FD               	bnz	clear_1
  1864                           
  1865                           ; Clear objects allocated to BANK3 (228 bytes)
  1866  017520  EE03  F000         	lfsr	0,__pbssBANK3
  1867  017524  0EE4               	movlw	228
  1868  017526                     clear_2:
  1869  017526  6AEE               	clrf	postinc0,c
  1870  017528  06E8               	decf	wreg,f,c
  1871  01752A  E1FD               	bnz	clear_2
  1872                           
  1873                           ; Clear objects allocated to BANK2 (187 bytes)
  1874  01752C  EE02  F000         	lfsr	0,__pbssBANK2
  1875  017530  0EBB               	movlw	187
  1876  017532                     clear_3:
  1877  017532  6AEE               	clrf	postinc0,c
  1878  017534  06E8               	decf	wreg,f,c
  1879  017536  E1FD               	bnz	clear_3
  1880                           
  1881                           ; Clear objects allocated to BANK1 (45 bytes)
  1882  017538  EE01  F0D3         	lfsr	0,__pbssBANK1
  1883  01753C  0E2D               	movlw	45
  1884  01753E                     clear_4:
  1885  01753E  6AEE               	clrf	postinc0,c
  1886  017540  06E8               	decf	wreg,f,c
  1887  017542  E1FD               	bnz	clear_4
  1888                           
  1889                           ; Clear objects allocated to BANK0 (17 bytes)
  1890  017544  EE00  F0D7         	lfsr	0,__pbssBANK0
  1891  017548  0E11               	movlw	17
  1892  01754A                     clear_5:
  1893  01754A  6AEE               	clrf	postinc0,c
  1894  01754C  06E8               	decf	wreg,f,c
  1895  01754E  E1FD               	bnz	clear_5
  1896                           
  1897                           ; Clear objects allocated to COMRAM (45 bytes)
  1898  017550  EE00  F001         	lfsr	0,__pbssCOMRAM
  1899  017554  0E2D               	movlw	45
  1900  017556                     clear_6:
  1901  017556  6AEE               	clrf	postinc0,c
  1902  017558  06E8               	decf	wreg,f,c
  1903  01755A  E1FD               	bnz	clear_6
  1904  01755C                     end_of_initialization:
  1905                           	opt stack 0
  1906  01755C                     __end_of__initialization:
  1907                           	opt stack 0
  1908  01755C  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1909  01755E  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1910  017560  0100               	movlb	0
  1911  017562  EFD8  F091         	goto	_main	;jump to C main() function
  1912                           tblptru	equ	0xFF8
  1913                           tblptrh	equ	0xFF7
  1914                           tblptrl	equ	0xFF6
  1915                           tablat	equ	0xFF5
  1916                           postinc0	equ	0xFEE
  1917                           wreg	equ	0xFE8
  1918                           postdec1	equ	0xFE5
  1919                           fsr1h	equ	0xFE2
  1920                           fsr1l	equ	0xFE1
  1921                           
  1922                           	psect	bssCOMRAM
  1923  000001                     __pbssCOMRAM:
  1924                           	opt stack 0
  1925  000001                     _outPipes:
  1926                           	opt stack 0
  1927  000001                     	ds	9
  1928  00000A                     _inPipes:
  1929                           	opt stack 0
  1930  00000A                     	ds	6
  1931  000010                     _pBDTEntryIn:
  1932                           	opt stack 0
  1933  000010                     	ds	6
  1934  000016                     _averageCount:
  1935                           	opt stack 0
  1936  000016                     	ds	2
  1937  000018                     _pBDTEntryEP0OutNext:
  1938                           	opt stack 0
  1939  000018                     	ds	2
  1940  00001A                     _pBDTEntryEP0OutCurrent:
  1941                           	opt stack 0
  1942  00001A                     	ds	2
  1943  00001C                     _buck_status:
  1944                           	opt stack 0
  1945  00001C                     	ds	1
  1946  00001D                     _task_list_write_index:
  1947                           	opt stack 0
  1948  00001D                     	ds	1
  1949  00001E                     _task_list_read_index:
  1950                           	opt stack 0
  1951  00001E                     	ds	1
  1952  00001F                     _MSDWriteState:
  1953                           	opt stack 0
  1954  00001F                     	ds	1
  1955  000020                     _USBDeferINDataStagePackets:
  1956                           	opt stack 0
  1957  000020                     	ds	1
  1958  000021                     _USBStatusStageEnabledFlag2:
  1959                           	opt stack 0
  1960  000021                     	ds	1
  1961  000022                     _USBStatusStageEnabledFlag1:
  1962                           	opt stack 0
  1963  000022                     	ds	1
  1964  000023                     _USBDeferStatusStagePacket:
  1965                           	opt stack 0
  1966  000023                     	ds	1
  1967  000024                     _USBStatusStageTimeoutCounter:
  1968                           	opt stack 0
  1969  000024                     	ds	1
  1970  000025                     _BothEP0OutUOWNsSet:
  1971                           	opt stack 0
  1972  000025                     	ds	1
  1973  000026                     _endpoint_number:
  1974                           	opt stack 0
  1975  000026                     	ds	1
  1976  000027                     _USBBusIsSuspended:
  1977                           	opt stack 0
  1978  000027                     	ds	1
  1979  000028                     _RemoteWakeup:
  1980                           	opt stack 0
  1981  000028                     	ds	1
  1982  000029                     _controlTransferState:
  1983                           	opt stack 0
  1984  000029                     	ds	1
  1985  00002A                     _shortPacketStatus:
  1986                           	opt stack 0
  1987  00002A                     	ds	1
  1988  00002B                     _USBDeviceState:
  1989                           	opt stack 0
  1990  00002B                     	ds	1
  1991  00002C                     _USTATcopy:
  1992                           	opt stack 0
  1993  00002C                     	ds	1
  1994  00002D                     _USBActiveConfiguration:
  1995                           	opt stack 0
  1996  00002D                     	ds	1
  1997                           tblptru	equ	0xFF8
  1998                           tblptrh	equ	0xFF7
  1999                           tblptrl	equ	0xFF6
  2000                           tablat	equ	0xFF5
  2001                           postinc0	equ	0xFEE
  2002                           wreg	equ	0xFE8
  2003                           postdec1	equ	0xFE5
  2004                           fsr1h	equ	0xFE2
  2005                           fsr1l	equ	0xFE1
  2006                           
  2007                           	psect	bssBANK0
  2008  0000D7                     __pbssBANK0:
  2009                           	opt stack 0
  2010  0000D7                     _USBInHandle:
  2011                           	opt stack 0
  2012  0000D7                     	ds	2
  2013  0000D9                     _TransferLength:
  2014                           	opt stack 0
  2015  0000D9                     	ds	2
  2016  0000DB                     _USBMSDInHandle:
  2017                           	opt stack 0
  2018  0000DB                     	ds	2
  2019  0000DD                     _USBMSDOutHandle:
  2020                           	opt stack 0
  2021  0000DD                     	ds	2
  2022  0000DF                     _power_state:
  2023                           	opt stack 0
  2024  0000DF                     	ds	1
  2025  0000E0                     _idx:
  2026                           	opt stack 0
  2027  0000E0                     	ds	1
  2028  0000E1                     _buck_remote_dutycycle:
  2029                           	opt stack 0
  2030  0000E1                     	ds	1
  2031  0000E2                     _buck_remote_synchronous:
  2032                           	opt stack 0
  2033  0000E2                     	ds	1
  2034  0000E3                     _buck_remote_on:
  2035                           	opt stack 0
  2036  0000E3                     	ds	1
  2037  0000E4                     _buck_dutycycle:
  2038                           	opt stack 0
  2039  0000E4                     	ds	1
  2040  0000E5                     _MSDHostNoData:
  2041                           	opt stack 0
  2042  0000E5                     	ds	1
  2043  0000E6                     _MSDCommandState:
  2044                           	opt stack 0
  2045  0000E6                     	ds	1
  2046  0000E7                     _MSD_State:
  2047                           	opt stack 0
  2048  0000E7                     	ds	1
  2049                           tblptru	equ	0xFF8
  2050                           tblptrh	equ	0xFF7
  2051                           tblptrl	equ	0xFF6
  2052                           tablat	equ	0xFF5
  2053                           postinc0	equ	0xFEE
  2054                           wreg	equ	0xFE8
  2055                           postdec1	equ	0xFE5
  2056                           fsr1h	equ	0xFE2
  2057                           fsr1l	equ	0xFE1
  2058                           
  2059                           	psect	bssBANK1
  2060  0001D3                     __pbssBANK1:
  2061                           	opt stack 0
  2062  0001D3                     _pBDTEntryOut:
  2063                           	opt stack 0
  2064  0001D3                     	ds	6
  2065  0001D9                     _LBA:
  2066                           	opt stack 0
  2067  0001D9                     	ds	4
  2068  0001DD                     _USB1msTickCount:
  2069                           	opt stack 0
  2070  0001DD                     	ds	4
  2071  0001E1                     _ep_data_out:
  2072                           	opt stack 0
  2073  0001E1                     	ds	3
  2074  0001E4                     _ep_data_in:
  2075                           	opt stack 0
  2076  0001E4                     	ds	3
  2077  0001E7                     _system_ui_inactive_count:
  2078                           	opt stack 0
  2079  0001E7                     	ds	2
  2080  0001E9                     _USBOutHandle:
  2081                           	opt stack 0
  2082  0001E9                     	ds	2
  2083  0001EB                     _ptrNextData:
  2084                           	opt stack 0
  2085  0001EB                     	ds	2
  2086  0001ED                     _pDst:
  2087                           	opt stack 0
  2088  0001ED                     	ds	2
  2089  0001EF                     _lastSecond:
  2090                           	opt stack 0
  2091  0001EF                     	ds	1
  2092  0001F0                     _status:
  2093                           	opt stack 0
  2094  0001F0                     	ds	1
  2095  0001F1                     _buck_remote_enable:
  2096                           	opt stack 0
  2097  0001F1                     	ds	1
  2098  0001F2                     _buck_dutycycle_last_step:
  2099                           	opt stack 0
  2100  0001F2                     	ds	1
  2101  0001F3                     _userInterfaceStatus:
  2102                           	opt stack 0
  2103  0001F3                     	ds	1
  2104  0001F4                     _i2c_frequency:
  2105                           	opt stack 0
  2106  0001F4                     	ds	1
  2107  0001F5                     _MSDCBWValid:
  2108                           	opt stack 0
  2109  0001F5                     	ds	1
  2110  0001F6                     _SoftDetach:
  2111                           	opt stack 0
  2112  0001F6                     	ds	1
  2113  0001F7                     _gblCBWLength:
  2114                           	opt stack 0
  2115  0001F7                     	ds	1
  2116  0001F8                     _MSDRetryAttempt:
  2117                           	opt stack 0
  2118  0001F8                     	ds	1
  2119  0001F9                     _MSDReadState:
  2120                           	opt stack 0
  2121  0001F9                     	ds	1
  2122  0001FA                     _USBTicksSinceSuspendEnd:
  2123                           	opt stack 0
  2124  0001FA                     	ds	1
  2125  0001FB                     _USBDeferOUTDataStagePackets:
  2126                           	opt stack 0
  2127  0001FB                     	ds	1
  2128  0001FC                     _USBAlternateInterface:
  2129                           	opt stack 0
  2130  0001FC                     	ds	2
  2131  0001FE                     _active_protocol:
  2132                           	opt stack 0
  2133  0001FE                     	ds	1
  2134  0001FF                     _idle_rate:
  2135                           	opt stack 0
  2136  0001FF                     	ds	1
  2137                           tblptru	equ	0xFF8
  2138                           tblptrh	equ	0xFF7
  2139                           tblptrl	equ	0xFF6
  2140                           tablat	equ	0xFF5
  2141                           postinc0	equ	0xFEE
  2142                           wreg	equ	0xFE8
  2143                           postdec1	equ	0xFE5
  2144                           fsr1h	equ	0xFE2
  2145                           fsr1l	equ	0xFE1
  2146                           
  2147                           	psect	bssBANK2
  2148  000200                     __pbssBANK2:
  2149                           	opt stack 0
  2150  000200                     _os:
  2151                           	opt stack 0
  2152  000200                     	ds	65
  2153  000241                     _gblCBW:
  2154                           	opt stack 0
  2155  000241                     	ds	31
  2156  000260                     _gblSenseData:
  2157                           	opt stack 0
  2158  000260                     	ds	18
  2159  000272                     _temperatureExternal2Sum:
  2160                           	opt stack 0
  2161  000272                     	ds	4
  2162  000276                     _temperatureExternal1Sum:
  2163                           	opt stack 0
  2164  000276                     	ds	4
  2165  00027A                     _temperatureOnboardSum:
  2166                           	opt stack 0
  2167  00027A                     	ds	4
  2168  00027E                     _outputCapacitySum:
  2169                           	opt stack 0
  2170  00027E                     	ds	4
  2171  000282                     _inputCapacitySum:
  2172                           	opt stack 0
  2173  000282                     	ds	4
  2174  000286                     _outputPowerSum:
  2175                           	opt stack 0
  2176  000286                     	ds	4
  2177  00028A                     _inputPowerSum:
  2178                           	opt stack 0
  2179  00028A                     	ds	4
  2180  00028E                     _outputCurrentSum:
  2181                           	opt stack 0
  2182  00028E                     	ds	4
  2183  000292                     _outputVoltageSum:
  2184                           	opt stack 0
  2185  000292                     	ds	4
  2186  000296                     _inputCurrentSum:
  2187                           	opt stack 0
  2188  000296                     	ds	4
  2189  00029A                     _inputVoltageSum:
  2190                           	opt stack 0
  2191  00029A                     	ds	4
  2192  00029E                     _now:
  2193                           	opt stack 0
  2194  00029E                     	ds	4
  2195  0002A2                     _last:
  2196                           	opt stack 0
  2197  0002A2                     	ds	4
  2198  0002A6                     _gblBLKLen:
  2199                           	opt stack 0
  2200  0002A6                     	ds	4
  2201  0002AA                     _gblNumBLKS:
  2202                           	opt stack 0
  2203  0002AA                     	ds	4
  2204  0002AE                     _lowPowerTime:
  2205                           	opt stack 0
  2206  0002AE                     	ds	2
  2207  0002B0                     _chargerOnTime:
  2208                           	opt stack 0
  2209  0002B0                     	ds	2
  2210  0002B2                     _gblMediaPresent:
  2211                           	opt stack 0
  2212  0002B2                     	ds	2
  2213  0002B4                     _MSBBufferIndex:
  2214                           	opt stack 0
  2215  0002B4                     	ds	2
  2216  0002B6                     _mediaInformation:
  2217                           	opt stack 0
  2218  0002B6                     	ds	5
  2219                           tblptru	equ	0xFF8
  2220                           tblptrh	equ	0xFF7
  2221                           tblptrl	equ	0xFF6
  2222                           tablat	equ	0xFF5
  2223                           postinc0	equ	0xFEE
  2224                           wreg	equ	0xFE8
  2225                           postdec1	equ	0xFE5
  2226                           fsr1h	equ	0xFE2
  2227                           fsr1l	equ	0xFE1
  2228                           
  2229                           	psect	dataBANK2
  2230  0002BB                     __pdataBANK2:
  2231                           	opt stack 0
  2232  0002BB                     _LUN:
  2233                           	opt stack 0
  2234  0002BB                     	ds	29
  2235  0002D8                     system_init@F8573:
  2236                           	opt stack 0
  2237  0002D8                     	ds	9
  2238  0002E1                     system_init@F8579:
  2239                           	opt stack 0
  2240  0002E1                     	ds	4
  2241  0002E5                     system_init@F8575:
  2242                           	opt stack 0
  2243  0002E5                     	ds	4
  2244  0002E9                     _battery_voltage_maximum:
  2245                           	opt stack 0
  2246  0002E9                     	ds	2
  2247  0002EB                     _filename:
  2248                           	opt stack 0
  2249  0002EB                     	ds	9
  2250  0002F4                     _extension:
  2251                           	opt stack 0
  2252  0002F4                     	ds	4
  2253                           tblptru	equ	0xFF8
  2254                           tblptrh	equ	0xFF7
  2255                           tblptrl	equ	0xFF6
  2256                           tablat	equ	0xFF5
  2257                           postinc0	equ	0xFEE
  2258                           wreg	equ	0xFE8
  2259                           postdec1	equ	0xFE5
  2260                           fsr1h	equ	0xFE2
  2261                           fsr1l	equ	0xFE1
  2262                           
  2263                           	psect	bssBANK3
  2264  000300                     __pbssBANK3:
  2265                           	opt stack 0
  2266  000300                     _calibrationParameters:
  2267                           	opt stack 0
  2268  000300                     	ds	84
  2269  000354                     _display_content:
  2270                           	opt stack 0
  2271  000354                     	ds	80
  2272  0003A4                     _ToSendDataBuffer:
  2273                           	opt stack 0
  2274  0003A4                     	ds	64
  2275                           tblptru	equ	0xFF8
  2276                           tblptrh	equ	0xFF7
  2277                           tblptrl	equ	0xFF6
  2278                           tablat	equ	0xFF5
  2279                           postinc0	equ	0xFEE
  2280                           wreg	equ	0xFE8
  2281                           postdec1	equ	0xFE5
  2282                           fsr1h	equ	0xFE2
  2283                           fsr1l	equ	0xFE1
  2284                           
  2285                           	psect	dataBANK3
  2286  0003E4                     __pdataBANK3:
  2287                           	opt stack 0
  2288  0003E4                     i2c_display_init@F8357:
  2289                           	opt stack 0
  2290  0003E4                     	ds	9
  2291  0003ED                     i2c_display_send_init_sequence@F8354:
  2292                           	opt stack 0
  2293  0003ED                     	ds	9
  2294  0003F6                     system_init@F8577:
  2295                           	opt stack 0
  2296  0003F6                     	ds	9
  2297                           tblptru	equ	0xFF8
  2298                           tblptrh	equ	0xFF7
  2299                           tblptrl	equ	0xFF6
  2300                           tablat	equ	0xFF5
  2301                           postinc0	equ	0xFEE
  2302                           wreg	equ	0xFE8
  2303                           postdec1	equ	0xFE5
  2304                           fsr1h	equ	0xFE2
  2305                           fsr1l	equ	0xFE1
  2306                           
  2307                           	psect	bssBANK4
  2308  000468                     __pbssBANK4:
  2309                           	opt stack 0
  2310  000468                     _task_list:
  2311                           	opt stack 0
  2312  000468                     	ds	16
  2313  000478                     _ReceivedDataBuffer:
  2314                           	opt stack 0
  2315  000478                     	ds	64
  2316                           tblptru	equ	0xFF8
  2317                           tblptrh	equ	0xFF7
  2318                           tblptrl	equ	0xFF6
  2319                           tablat	equ	0xFF5
  2320                           postinc0	equ	0xFEE
  2321                           wreg	equ	0xFE8
  2322                           postdec1	equ	0xFE5
  2323                           fsr1h	equ	0xFE2
  2324                           fsr1l	equ	0xFE1
  2325                           
  2326                           	psect	dataBANK4
  2327  000400                     __pdataBANK4:
  2328                           	opt stack 0
  2329  000400                     system_init@F8581:
  2330                           	opt stack 0
  2331  000400                     	ds	104
  2332                           tblptru	equ	0xFF8
  2333                           tblptrh	equ	0xFF7
  2334                           tblptrl	equ	0xFF6
  2335                           tablat	equ	0xFF5
  2336                           postinc0	equ	0xFEE
  2337                           wreg	equ	0xFE8
  2338                           postdec1	equ	0xFE5
  2339                           fsr1h	equ	0xFE2
  2340                           fsr1l	equ	0xFE1
  2341                           
  2342                           	psect	bssBIGRAMll
  2343  000800                     __pbssBIGRAMll:
  2344                           	opt stack 0
  2345  000800                     _buffer:
  2346                           	opt stack 0
  2347  000800                     	ds	512
  2348                           tblptru	equ	0xFF8
  2349                           tblptrh	equ	0xFF7
  2350                           tblptrl	equ	0xFF6
  2351                           tablat	equ	0xFF5
  2352                           postinc0	equ	0xFEE
  2353                           wreg	equ	0xFE8
  2354                           postdec1	equ	0xFE5
  2355                           fsr1h	equ	0xFE2
  2356                           fsr1l	equ	0xFE1
  2357                           
  2358                           	psect	cstackBANK1
  2359  000100                     __pcstackBANK1:
  2360                           	opt stack 0
  2361  000100                     log_write_to_disk@file_number:
  2362                           	opt stack 0
  2363  000100                     __display_charger@fan_off:
  2364                           	opt stack 0
  2365  000100                     __display_time@pts:
  2366                           	opt stack 0
  2367  000100                     system_init@appendtext:
  2368                           	opt stack 0
  2369                           
  2370                           ; 104 bytes @ 0x0
  2371  000100                     	ds	1
  2372  000101                     log_write_to_disk@log_entry:
  2373                           	opt stack 0
  2374                           
  2375                           ; 32 bytes @ 0x1
  2376  000101                     	ds	7
  2377  000108                     __display_charger@fan_on:
  2378                           	opt stack 0
  2379                           
  2380                           ; 7 bytes @ 0x8
  2381  000108                     	ds	7
  2382  00010F                     __display_charger@header:
  2383                           	opt stack 0
  2384                           
  2385                           ; 21 bytes @ 0xF
  2386  00010F                     	ds	5
  2387  000114                     __display_time@pressminutes:
  2388                           	opt stack 0
  2389                           
  2390                           ; 20 bytes @ 0x14
  2391  000114                     	ds	16
  2392  000124                     __display_charger@charger_async:
  2393                           	opt stack 0
  2394                           
  2395                           ; 21 bytes @ 0x24
  2396  000124                     	ds	4
  2397  000128                     __display_time@pressseconds:
  2398                           	opt stack 0
  2399                           
  2400                           ; 20 bytes @ 0x28
  2401  000128                     	ds	17
  2402  000139                     __display_charger@charger_sync:
  2403                           	opt stack 0
  2404                           
  2405                           ; 20 bytes @ 0x39
  2406  000139                     	ds	3
  2407  00013C                     __display_time@pressmonth:
  2408                           	opt stack 0
  2409                           
  2410                           ; 18 bytes @ 0x3C
  2411  00013C                     	ds	17
  2412  00014D                     __display_charger@supply_off:
  2413                           	opt stack 0
  2414                           
  2415                           ; 19 bytes @ 0x4D
  2416  00014D                     	ds	1
  2417  00014E                     __display_time@presshours:
  2418                           	opt stack 0
  2419                           
  2420                           ; 18 bytes @ 0x4E
  2421  00014E                     	ds	18
  2422  000160                     __display_time@pressday:
  2423                           	opt stack 0
  2424  000160                     __display_charger@supply_on:
  2425                           	opt stack 0
  2426                           
  2427                           ; 18 bytes @ 0x60
  2428  000160                     	ds	8
  2429  000168                     system_init@filename:
  2430                           	opt stack 0
  2431                           
  2432                           ; 9 bytes @ 0x68
  2433  000168                     	ds	8
  2434  000170                     __display_time@presssave:
  2435                           	opt stack 0
  2436                           
  2437                           ; 16 bytes @ 0x70
  2438  000170                     	ds	1
  2439  000171                     system_init@filename2:
  2440                           	opt stack 0
  2441                           
  2442                           ; 9 bytes @ 0x71
  2443  000171                     	ds	1
  2444  000172                     __display_charger@charger_startup:
  2445                           	opt stack 0
  2446                           
  2447                           ; 16 bytes @ 0x72
  2448  000172                     	ds	8
  2449  00017A                     system_init@extension:
  2450                           	opt stack 0
  2451                           
  2452                           ; 4 bytes @ 0x7A
  2453  00017A                     	ds	4
  2454  00017E                     system_init@extension2:
  2455                           	opt stack 0
  2456                           
  2457                           ; 4 bytes @ 0x7E
  2458  00017E                     	ds	2
  2459  000180                     __display_time@tad:
  2460                           	opt stack 0
  2461                           
  2462                           ; 14 bytes @ 0x80
  2463  000180                     	ds	2
  2464  000182                     __display_charger@charger_off:
  2465                           	opt stack 0
  2466                           
  2467                           ; 12 bytes @ 0x82
  2468  000182                     	ds	12
  2469  00018E                     __display_charger@cntr:
  2470                           	opt stack 0
  2471  00018E                     __display_time@setminutes:
  2472                           	opt stack 0
  2473                           
  2474                           ; 12 bytes @ 0x8E
  2475  00018E                     	ds	12
  2476  00019A                     __display_time@setseconds:
  2477                           	opt stack 0
  2478                           
  2479                           ; 12 bytes @ 0x9A
  2480  00019A                     	ds	12
  2481  0001A6                     __display_time@setmonth:
  2482                           	opt stack 0
  2483                           
  2484                           ; 10 bytes @ 0xA6
  2485  0001A6                     	ds	10
  2486  0001B0                     __display_time@sethours:
  2487                           	opt stack 0
  2488                           
  2489                           ; 10 bytes @ 0xB0
  2490  0001B0                     	ds	10
  2491  0001BA                     __display_time@setyear:
  2492                           	opt stack 0
  2493                           
  2494                           ; 9 bytes @ 0xBA
  2495  0001BA                     	ds	9
  2496  0001C3                     __display_time@setday:
  2497                           	opt stack 0
  2498                           
  2499                           ; 8 bytes @ 0xC3
  2500  0001C3                     	ds	8
  2501  0001CB                     __display_time@mode:
  2502                           	opt stack 0
  2503                           
  2504                           ; 1 bytes @ 0xCB
  2505  0001CB                     	ds	1
  2506  0001CC                     __display_time@year:
  2507                           	opt stack 0
  2508                           
  2509                           ; 1 bytes @ 0xCC
  2510  0001CC                     	ds	1
  2511  0001CD                     __display_time@month:
  2512                           	opt stack 0
  2513                           
  2514                           ; 1 bytes @ 0xCD
  2515  0001CD                     	ds	1
  2516  0001CE                     __display_time@day:
  2517                           	opt stack 0
  2518                           
  2519                           ; 1 bytes @ 0xCE
  2520  0001CE                     	ds	1
  2521  0001CF                     __display_time@hours:
  2522                           	opt stack 0
  2523                           
  2524                           ; 1 bytes @ 0xCF
  2525  0001CF                     	ds	1
  2526  0001D0                     __display_time@minutes:
  2527                           	opt stack 0
  2528                           
  2529                           ; 1 bytes @ 0xD0
  2530  0001D0                     	ds	1
  2531  0001D1                     __display_time@seconds:
  2532                           	opt stack 0
  2533                           
  2534                           ; 1 bytes @ 0xD1
  2535  0001D1                     	ds	1
  2536  0001D2                     __display_time@cntr:
  2537                           	opt stack 0
  2538                           
  2539                           ; 1 bytes @ 0xD2
  2540  0001D2                     	ds	1
  2541                           tblptru	equ	0xFF8
  2542                           tblptrh	equ	0xFF7
  2543                           tblptrl	equ	0xFF6
  2544                           tablat	equ	0xFF5
  2545                           postinc0	equ	0xFEE
  2546                           wreg	equ	0xFE8
  2547                           postdec1	equ	0xFE5
  2548                           fsr1h	equ	0xFE2
  2549                           fsr1l	equ	0xFE1
  2550                           
  2551                           	psect	cstackBANK0
  2552  000060                     __pcstackBANK0:
  2553                           	opt stack 0
  2554  000060                     ??_system_output_off:
  2555  000060                     ??__i2c_wait_idle:
  2556  000060                     ??__display_clear:
  2557  000060                     ??__number_of_days:
  2558  000060                     ??__buck_set_dutycycle:
  2559  000060                     ?_USBTransferOnePacket:
  2560                           	opt stack 0
  2561  000060                     ?_adc_read:
  2562                           	opt stack 0
  2563  000060                     ?_log_get_number_of_samples:
  2564                           	opt stack 0
  2565  000060                     ?_ExternalFlash_MediaInitialize:
  2566                           	opt stack 0
  2567  000060                     ?_ExternalFlash_SectorSizeRead:
  2568                           	opt stack 0
  2569  000060                     ?_strlen:
  2570                           	opt stack 0
  2571  000060                     ?_strncmp:
  2572                           	opt stack 0
  2573  000060                     ?__sector_from_cluster:
  2574                           	opt stack 0
  2575  000060                     ?___awdiv:
  2576                           	opt stack 0
  2577  000060                     ?___lwdiv:
  2578                           	opt stack 0
  2579  000060                     ?___lwmod:
  2580                           	opt stack 0
  2581  000060                     ?___ftpack:
  2582                           	opt stack 0
  2583  000060                     ?_ExternalFlash_CapacityRead:
  2584                           	opt stack 0
  2585  000060                     ?___lmul:
  2586                           	opt stack 0
  2587  000060                     ?___aldiv:
  2588                           	opt stack 0
  2589  000060                     ?___fttol:
  2590                           	opt stack 0
  2591  000060                     ?___lldiv:
  2592                           	opt stack 0
  2593  000060                     USBTransferOnePacket@dir:
  2594                           	opt stack 0
  2595  000060                     USBStallEndpoint@dir:
  2596                           	opt stack 0
  2597  000060                     SYSTEM_Initialize@state:
  2598                           	opt stack 0
  2599  000060                     system_output_is_on@output:
  2600                           	opt stack 0
  2601  000060                     system_output_on@output:
  2602                           	opt stack 0
  2603  000060                     __i2c_send@dat:
  2604                           	opt stack 0
  2605  000060                     i2c_set_frequency@frequency:
  2606                           	opt stack 0
  2607  000060                     get_next_eeprom_write_task@task:
  2608                           	opt stack 0
  2609  000060                     display_get_character@position:
  2610                           	opt stack 0
  2611  000060                     __rtcc_bdc_to_decimal@tens:
  2612                           	opt stack 0
  2613  000060                     rtcc_set_year@year:
  2614                           	opt stack 0
  2615  000060                     rtcc_set_month@month:
  2616                           	opt stack 0
  2617  000060                     rtcc_set_day@day:
  2618                           	opt stack 0
  2619  000060                     rtcc_set_hours@hours:
  2620                           	opt stack 0
  2621  000060                     rtcc_set_minutes@minutes:
  2622                           	opt stack 0
  2623  000060                     rtcc_set_seconds@seconds:
  2624                           	opt stack 0
  2625  000060                     __buck_prepare@cntr:
  2626                           	opt stack 0
  2627  000060                     buck_remote_set_enable@remote:
  2628                           	opt stack 0
  2629  000060                     buck_remote_set_on@on:
  2630                           	opt stack 0
  2631  000060                     buck_remote_set_synchronous@synchronous:
  2632                           	opt stack 0
  2633  000060                     buck_remote_set_dutycycle@dutycycle:
  2634                           	opt stack 0
  2635  000060                     buck_remote_change_dutycycle@change:
  2636                           	opt stack 0
  2637  000060                     buck_remote_get_status@retval:
  2638                           	opt stack 0
  2639  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  2640                           	opt stack 0
  2641  000060                     __i2c_eeprom_load_default_calibration@buffer:
  2642                           	opt stack 0
  2643  000060                     __flash_spi_tx@data:
  2644                           	opt stack 0
  2645  000060                     __flash_spi_tx_tx@command:
  2646                           	opt stack 0
  2647  000060                     __flash_spi_tx_rx@command:
  2648                           	opt stack 0
  2649  000060                     ExternalFlash_MediaInitialize@config:
  2650                           	opt stack 0
  2651  000060                     ExternalFlash_SectorSizeRead@config:
  2652                           	opt stack 0
  2653  000060                     ExternalFlash_CapacityRead@config:
  2654                           	opt stack 0
  2655  000060                     ExternalFlash_MediaDetect@config:
  2656                           	opt stack 0
  2657  000060                     ExternalFlash_WriteProtectStateGet@config:
  2658                           	opt stack 0
  2659  000060                     __sector_from_cluster@fat_cluster:
  2660                           	opt stack 0
  2661  000060                     __get_checksum@log_entry:
  2662                           	opt stack 0
  2663  000060                     ___awdiv@dividend:
  2664                           	opt stack 0
  2665  000060                     ___lwdiv@dividend:
  2666                           	opt stack 0
  2667  000060                     ___lwmod@dividend:
  2668                           	opt stack 0
  2669  000060                     memcpy@d1:
  2670                           	opt stack 0
  2671  000060                     memset@p1:
  2672                           	opt stack 0
  2673  000060                     strlen@s:
  2674                           	opt stack 0
  2675  000060                     strncmp@s1:
  2676                           	opt stack 0
  2677  000060                     ___ftpack@arg:
  2678                           	opt stack 0
  2679  000060                     ___fttol@f1:
  2680                           	opt stack 0
  2681  000060                     ___lmul@multiplier:
  2682                           	opt stack 0
  2683  000060                     ___aldiv@dividend:
  2684                           	opt stack 0
  2685  000060                     ___lldiv@dividend:
  2686                           	opt stack 0
  2687  000060                     __display_usb@header:
  2688                           	opt stack 0
  2689  000060                     __display_outputs@line3:
  2690                           	opt stack 0
  2691                           
  2692                           ; 21 bytes @ 0x0
  2693  000060                     	ds	1
  2694  000061                     ??__fill_buffer_get_status:
  2695  000061                     ??_display_get_character:
  2696  000061                     ??_USBStallEndpoint:
  2697  000061                     system_output_off@output:
  2698                           	opt stack 0
  2699  000061                     schedule_eeprom_write_task@task:
  2700                           	opt stack 0
  2701  000061                     __rtcc_bdc_to_decimal@ones:
  2702                           	opt stack 0
  2703  000061                     __number_of_days@year:
  2704                           	opt stack 0
  2705  000061                     __buck_set_dutycycle@dutyCycle:
  2706                           	opt stack 0
  2707  000061                     USBTransferOnePacket@data:
  2708                           	opt stack 0
  2709  000061                     SYSTEM_Initialize@pll_startup_counter:
  2710                           	opt stack 0
  2711  000061                     buck_remote_change_dutycycle@new_dutycycle:
  2712                           	opt stack 0
  2713                           
  2714                           ; 2 bytes @ 0x1
  2715  000061                     	ds	1
  2716  000062                     ??_MSDComputeDeviceInAndResidue:
  2717  000062                     ??_strlen:
  2718  000062                     system_output_toggle@output:
  2719                           	opt stack 0
  2720  000062                     __i2c_eeprom_load_default_calibration@index:
  2721                           	opt stack 0
  2722  000062                     schedule_eeprom_write_task@idx:
  2723                           	opt stack 0
  2724  000062                     __display_clear@row:
  2725                           	opt stack 0
  2726  000062                     __rtcc_bdc_to_decimal@input:
  2727                           	opt stack 0
  2728  000062                     __number_of_days@bcd_year:
  2729                           	opt stack 0
  2730  000062                     __buck_set_sync_async@new_dutycycle:
  2731                           	opt stack 0
  2732  000062                     adc_read@channel:
  2733                           	opt stack 0
  2734  000062                     __flash_spi_tx@length:
  2735                           	opt stack 0
  2736  000062                     __flash_spi_tx_tx@command_length:
  2737                           	opt stack 0
  2738  000062                     __flash_spi_tx_rx@command_length:
  2739                           	opt stack 0
  2740  000062                     __get_checksum@byte_array:
  2741                           	opt stack 0
  2742  000062                     ___awdiv@divisor:
  2743                           	opt stack 0
  2744  000062                     ___lwdiv@divisor:
  2745                           	opt stack 0
  2746  000062                     ___lwmod@divisor:
  2747                           	opt stack 0
  2748  000062                     memcpy@s1:
  2749                           	opt stack 0
  2750  000062                     memset@c:
  2751                           	opt stack 0
  2752  000062                     strncmp@s2:
  2753                           	opt stack 0
  2754                           
  2755                           ; 2 bytes @ 0x2
  2756  000062                     	ds	1
  2757  000063                     USBTransferOnePacket@len:
  2758                           	opt stack 0
  2759  000063                     __parse_command_long@data:
  2760                           	opt stack 0
  2761  000063                     __parse_command_calibration@item:
  2762                           	opt stack 0
  2763  000063                     display_get_character@line:
  2764                           	opt stack 0
  2765  000063                     __display_clear@col:
  2766                           	opt stack 0
  2767  000063                     __number_of_days@month:
  2768                           	opt stack 0
  2769  000063                     rtcc_get_year_decimal@bcd_year:
  2770                           	opt stack 0
  2771  000063                     rtcc_get_month_decimal@bcd_month:
  2772                           	opt stack 0
  2773  000063                     rtcc_get_day_decimal@bcd_day:
  2774                           	opt stack 0
  2775  000063                     rtcc_get_hours_decimal@bcd_hours:
  2776                           	opt stack 0
  2777  000063                     rtcc_get_minutes_decimal@bcd_minutes:
  2778                           	opt stack 0
  2779  000063                     rtcc_get_seconds_decimal@bcd_seconds:
  2780                           	opt stack 0
  2781  000063                     __buck_set_sync_async@mode:
  2782                           	opt stack 0
  2783  000063                     ___ftpack@exp:
  2784                           	opt stack 0
  2785  000063                     SYSTEM_Initialize@pll_startup_counter_3284:
  2786                           	opt stack 0
  2787  000063                     adc_read@adc_value:
  2788                           	opt stack 0
  2789                           
  2790                           ; 2 bytes @ 0x3
  2791  000063                     	ds	1
  2792  000064                     ??_USBTransferOnePacket:
  2793  000064                     ??__fill_buffer_get_display1:
  2794  000064                     ??__fill_buffer_get_display2:
  2795  000064                     ??__flash_spi_tx:
  2796  000064                     ??___fttol:
  2797  000064                     ?__get_time:
  2798                           	opt stack 0
  2799  000064                     ?__get_date:
  2800                           	opt stack 0
  2801  000064                     ?__get_dateTime:
  2802                           	opt stack 0
  2803  000064                     __parse_command_long@cmd:
  2804                           	opt stack 0
  2805  000064                     __parse_command_calibration@dat1:
  2806                           	opt stack 0
  2807  000064                     __rtcc_increment_bcd@min:
  2808                           	opt stack 0
  2809  000064                     __rtcc_decrement_bcd@min:
  2810                           	opt stack 0
  2811  000064                     rtcc_correct_day@day:
  2812                           	opt stack 0
  2813  000064                     __get_checksum@checksum:
  2814                           	opt stack 0
  2815  000064                     ___awdiv@counter:
  2816                           	opt stack 0
  2817  000064                     ___ftpack@sign:
  2818                           	opt stack 0
  2819  000064                     ___lwdiv@counter:
  2820                           	opt stack 0
  2821  000064                     ___lwmod@counter:
  2822                           	opt stack 0
  2823  000064                     __flash_spi_tx_tx@data:
  2824                           	opt stack 0
  2825  000064                     __flash_spi_tx_rx@data:
  2826                           	opt stack 0
  2827  000064                     memcpy@n:
  2828                           	opt stack 0
  2829  000064                     memset@n:
  2830                           	opt stack 0
  2831  000064                     strlen@cp:
  2832                           	opt stack 0
  2833  000064                     strncmp@len:
  2834                           	opt stack 0
  2835  000064                     ___lmul@multiplicand:
  2836                           	opt stack 0
  2837  000064                     ___aldiv@divisor:
  2838                           	opt stack 0
  2839  000064                     ___lldiv@divisor:
  2840                           	opt stack 0
  2841                           
  2842                           ; 4 bytes @ 0x4
  2843  000064                     	ds	1
  2844  000065                     ??___ftpack:
  2845  000065                     ?_i2c_adc_read:
  2846                           	opt stack 0
  2847  000065                     USBStallEndpoint@ep:
  2848                           	opt stack 0
  2849  000065                     __fill_buffer_get_display1@cntr:
  2850                           	opt stack 0
  2851  000065                     __fill_buffer_get_display2@cntr:
  2852                           	opt stack 0
  2853  000065                     __parse_command_calibration@dat2:
  2854                           	opt stack 0
  2855  000065                     __rtcc_increment_bcd@max:
  2856                           	opt stack 0
  2857  000065                     __rtcc_decrement_bcd@max:
  2858                           	opt stack 0
  2859  000065                     rtcc_correct_day@max:
  2860                           	opt stack 0
  2861  000065                     __get_checksum@cntr:
  2862                           	opt stack 0
  2863  000065                     ___awdiv@sign:
  2864                           	opt stack 0
  2865  000065                     __i2c_write@data:
  2866                           	opt stack 0
  2867  000065                     __i2c_read@data:
  2868                           	opt stack 0
  2869  000065                     i2c_display_write_fixed@data:
  2870                           	opt stack 0
  2871  000065                     ___lwdiv@quotient:
  2872                           	opt stack 0
  2873                           
  2874                           ; 2 bytes @ 0x5
  2875  000065                     	ds	1
  2876  000066                     ??_strncmp:
  2877  000066                     ??__rtcc_increment_bcd:
  2878  000066                     ??__rtcc_decrement_bcd:
  2879  000066                     ??__get_time:
  2880  000066                     ??__get_date:
  2881  000066                     __fill_buffer_get_display1@line:
  2882                           	opt stack 0
  2883  000066                     __fill_buffer_get_display2@line:
  2884                           	opt stack 0
  2885  000066                     __parse_command_calibration@dat3:
  2886                           	opt stack 0
  2887  000066                     memcpy@tmp:
  2888                           	opt stack 0
  2889  000066                     USBStallEndpoint@p:
  2890                           	opt stack 0
  2891  000066                     __flash_spi_tx_tx@data_length:
  2892                           	opt stack 0
  2893  000066                     __flash_spi_tx_rx@data_length:
  2894                           	opt stack 0
  2895  000066                     ___awdiv@quotient:
  2896                           	opt stack 0
  2897  000066                     memset@p:
  2898                           	opt stack 0
  2899                           
  2900                           ; 2 bytes @ 0x6
  2901  000066                     	ds	1
  2902  000067                     ??_i2c_adc_read:
  2903  000067                     ??__parse_command_calibration:
  2904  000067                     __fill_buffer_get_display1@position:
  2905                           	opt stack 0
  2906  000067                     __fill_buffer_get_display2@position:
  2907                           	opt stack 0
  2908  000067                     __i2c_write@length:
  2909                           	opt stack 0
  2910  000067                     __i2c_read@length:
  2911                           	opt stack 0
  2912  000067                     i2c_display_write_fixed@length:
  2913                           	opt stack 0
  2914  000067                     __rtcc_increment_bcd@value:
  2915                           	opt stack 0
  2916  000067                     __rtcc_decrement_bcd@value:
  2917                           	opt stack 0
  2918  000067                     utoa@buf:
  2919                           	opt stack 0
  2920  000067                     memcpy@d:
  2921                           	opt stack 0
  2922                           
  2923                           ; 2 bytes @ 0x7
  2924  000067                     	ds	1
  2925  000068                     ??__i2c_read:
  2926  000068                     ??__flash_spi_tx_tx:
  2927  000068                     ??__flash_spi_tx_rx:
  2928  000068                     ??__get_dateTime:
  2929  000068                     USBDeviceInit@i:
  2930                           	opt stack 0
  2931  000068                     USBTransferOnePacket@ep:
  2932                           	opt stack 0
  2933  000068                     MSDErrorHandler@ErrorCase:
  2934                           	opt stack 0
  2935  000068                     __i2c_write@slave_address:
  2936                           	opt stack 0
  2937  000068                     i2c_display_write_fixed@pos:
  2938                           	opt stack 0
  2939  000068                     rtcc_increment_year@year:
  2940                           	opt stack 0
  2941  000068                     rtcc_decrement_year@year:
  2942                           	opt stack 0
  2943  000068                     rtcc_increment_month@month:
  2944                           	opt stack 0
  2945  000068                     rtcc_decrement_month@month:
  2946                           	opt stack 0
  2947  000068                     rtcc_increment_day@day:
  2948                           	opt stack 0
  2949  000068                     rtcc_decrement_day@day:
  2950                           	opt stack 0
  2951  000068                     rtcc_increment_hours@hours:
  2952                           	opt stack 0
  2953  000068                     rtcc_decrement_hours@hours:
  2954                           	opt stack 0
  2955  000068                     rtcc_increment_minutes@minutes:
  2956                           	opt stack 0
  2957  000068                     rtcc_decrement_minutes@minutes:
  2958                           	opt stack 0
  2959  000068                     rtcc_increment_seconds@seconds:
  2960                           	opt stack 0
  2961  000068                     rtcc_decrement_seconds@seconds:
  2962                           	opt stack 0
  2963  000068                     __flash_wakeup@command:
  2964                           	opt stack 0
  2965  000068                     __get_time@hours:
  2966                           	opt stack 0
  2967  000068                     __get_date@year:
  2968                           	opt stack 0
  2969  000068                     ___aldiv@counter:
  2970                           	opt stack 0
  2971  000068                     i2c_adc_read@result:
  2972                           	opt stack 0
  2973  000068                     ___lmul@product:
  2974                           	opt stack 0
  2975  000068                     ___lldiv@quotient:
  2976                           	opt stack 0
  2977                           
  2978                           ; 4 bytes @ 0x8
  2979  000068                     	ds	1
  2980  000069                     MSDErrorHandler@OldMSD_State:
  2981                           	opt stack 0
  2982  000069                     __i2c_write@cntr:
  2983                           	opt stack 0
  2984  000069                     __get_time@minutes:
  2985                           	opt stack 0
  2986  000069                     __get_date@month:
  2987                           	opt stack 0
  2988  000069                     ___aldiv@sign:
  2989                           	opt stack 0
  2990  000069                     ___fttol@sign1:
  2991                           	opt stack 0
  2992  000069                     USBTransferOnePacket@handle:
  2993                           	opt stack 0
  2994  000069                     __parse_command_calibration@parameter:
  2995                           	opt stack 0
  2996  000069                     utoa@val:
  2997                           	opt stack 0
  2998  000069                     memcpy@s:
  2999                           	opt stack 0
  3000                           
  3001                           ; 2 bytes @ 0x9
  3002  000069                     	ds	1
  3003  00006A                     __ic2_display_set_address@address:
  3004                           	opt stack 0
  3005  00006A                     i2c_digipot_backlight@level:
  3006                           	opt stack 0
  3007  00006A                     i2c_adc_start@resolution:
  3008                           	opt stack 0
  3009  00006A                     __get_time@seconds:
  3010                           	opt stack 0
  3011  00006A                     __get_date@day:
  3012                           	opt stack 0
  3013  00006A                     i2c_digipot_reset_on@data_array:
  3014                           	opt stack 0
  3015  00006A                     i2c_digipot_reset_off@data_array:
  3016                           	opt stack 0
  3017  00006A                     i2c_eeprom_write@address:
  3018                           	opt stack 0
  3019  00006A                     MSDCheckForErrorCases@DeviceBytes:
  3020                           	opt stack 0
  3021  00006A                     ___aldiv@quotient:
  3022                           	opt stack 0
  3023  00006A                     ___fttol@lval:
  3024                           	opt stack 0
  3025  00006A                     i2c_display_send_init_sequence@init_sequence:
  3026                           	opt stack 0
  3027                           
  3028                           ; 9 bytes @ 0xA
  3029  00006A                     	ds	1
  3030  00006B                     i2c_adc_start@gain:
  3031                           	opt stack 0
  3032  00006B                     __ic2_display_set_address@data_array:
  3033                           	opt stack 0
  3034  00006B                     i2c_digipot_backlight@data_array:
  3035                           	opt stack 0
  3036  00006B                     __get_time@time:
  3037                           	opt stack 0
  3038  00006B                     __get_date@date:
  3039                           	opt stack 0
  3040  00006B                     utoa@base:
  3041                           	opt stack 0
  3042                           
  3043                           ; 2 bytes @ 0xB
  3044  00006B                     	ds	1
  3045  00006C                     ??_system_calculate_output_voltage:
  3046  00006C                     ??_system_calculate_input_voltage:
  3047  00006C                     ??_system_calculate_output_current:
  3048  00006C                     ??_system_calculate_input_current:
  3049  00006C                     ?_adc_calculate_temperature:
  3050                           	opt stack 0
  3051  00006C                     ?__flash_get_status:
  3052                           	opt stack 0
  3053  00006C                     i2c_adc_start@channel:
  3054                           	opt stack 0
  3055  00006C                     ___lldiv@counter:
  3056                           	opt stack 0
  3057  00006C                     i2c_eeprom_write@data:
  3058                           	opt stack 0
  3059  00006C                     adc_calculate_temperature@adc_value:
  3060                           	opt stack 0
  3061                           
  3062                           ; 2 bytes @ 0xC
  3063  00006C                     	ds	1
  3064  00006D                     ??__buck_initial_dutycycle:
  3065  00006D                     ?__get_output_power:
  3066                           	opt stack 0
  3067  00006D                     i2c_display_cursor@position:
  3068                           	opt stack 0
  3069  00006D                     i2c_adc_start@configuration_byte:
  3070                           	opt stack 0
  3071  00006D                     __update_modified_time@root:
  3072                           	opt stack 0
  3073  00006D                     utoa@v:
  3074                           	opt stack 0
  3075                           
  3076                           ; 2 bytes @ 0xD
  3077  00006D                     	ds	1
  3078  00006E                     ?__get_input_power:
  3079                           	opt stack 0
  3080  00006E                     ?___altoft:
  3081                           	opt stack 0
  3082  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  3083                           	opt stack 0
  3084  00006E                     i2c_display_cursor@line:
  3085                           	opt stack 0
  3086  00006E                     i2c_eeprom_write@length:
  3087                           	opt stack 0
  3088  00006E                     adc_calculate_temperature@calibration:
  3089                           	opt stack 0
  3090  00006E                     __flash_get_status@command:
  3091                           	opt stack 0
  3092  00006E                     __get_dateTime@year:
  3093                           	opt stack 0
  3094  00006E                     ___fttol@exp1:
  3095                           	opt stack 0
  3096  00006E                     __get_temperature@temperature:
  3097                           	opt stack 0
  3098  00006E                     __buck_initial_dutycycle@dc:
  3099                           	opt stack 0
  3100  00006E                     ___altoft@c:
  3101                           	opt stack 0
  3102                           
  3103                           ; 4 bytes @ 0xE
  3104  00006E                     	ds	1
  3105  00006F                     ??_adc_calculate_temperature:
  3106  00006F                     ??_i2c_eeprom_write:
  3107  00006F                     MSDCheckForErrorCases@DeviceNoData:
  3108                           	opt stack 0
  3109  00006F                     __i2c_read@slave_address:
  3110                           	opt stack 0
  3111  00006F                     i2c_display_cursor@address:
  3112                           	opt stack 0
  3113  00006F                     __get_dateTime@month:
  3114                           	opt stack 0
  3115  00006F                     utoa@c:
  3116                           	opt stack 0
  3117  00006F                     __flash_get_status@status:
  3118                           	opt stack 0
  3119  00006F                     __get_output_power@pwr:
  3120                           	opt stack 0
  3121                           
  3122                           ; 4 bytes @ 0xF
  3123  00006F                     	ds	1
  3124  000070                     MSDCheckForErrorCases@MSDErrorCase:
  3125                           	opt stack 0
  3126  000070                     __i2c_read@cntr:
  3127                           	opt stack 0
  3128  000070                     __get_dateTime@day:
  3129                           	opt stack 0
  3130  000070                     itoa@buf:
  3131                           	opt stack 0
  3132  000070                     system_calculate_input_voltage@tmp:
  3133                           	opt stack 0
  3134  000070                     system_calculate_output_voltage@tmp:
  3135                           	opt stack 0
  3136  000070                     system_calculate_input_current@tmp:
  3137                           	opt stack 0
  3138  000070                     system_calculate_output_current@tmp:
  3139                           	opt stack 0
  3140  000070                     __get_input_power@pwr:
  3141                           	opt stack 0
  3142                           
  3143                           ; 4 bytes @ 0x10
  3144  000070                     	ds	1
  3145  000071                     __get_dateTime@hours:
  3146                           	opt stack 0
  3147  000071                     i2c_eeprom_read@address:
  3148                           	opt stack 0
  3149  000071                     flash_is_busy@status:
  3150                           	opt stack 0
  3151                           
  3152                           ; 2 bytes @ 0x11
  3153  000071                     	ds	1
  3154  000072                     ??___altoft:
  3155  000072                     __buck_start@dutycycle:
  3156                           	opt stack 0
  3157  000072                     __get_dateTime@minutes:
  3158                           	opt stack 0
  3159  000072                     itoa@val:
  3160                           	opt stack 0
  3161  000072                     i2c_eeprom_write@dat:
  3162                           	opt stack 0
  3163                           
  3164                           ; 17 bytes @ 0x12
  3165  000072                     	ds	1
  3166  000073                     __buck_start@mode:
  3167                           	opt stack 0
  3168  000073                     __get_dateTime@seconds:
  3169                           	opt stack 0
  3170  000073                     i2c_eeprom_read@data:
  3171                           	opt stack 0
  3172  000073                     __flash_copy_page_to_buffer@page:
  3173                           	opt stack 0
  3174  000073                     __flash_compare_page_to_buffer@page:
  3175                           	opt stack 0
  3176  000073                     __flash_write_to_buffer@start:
  3177                           	opt stack 0
  3178  000073                     __flash_write_page_from_buffer@page:
  3179                           	opt stack 0
  3180  000073                     flash_partial_read@page:
  3181                           	opt stack 0
  3182  000073                     __flash_set_page_size@command:
  3183                           	opt stack 0
  3184                           
  3185                           ; 4 bytes @ 0x13
  3186  000073                     	ds	1
  3187  000074                     ??_log_collect_data:
  3188  000074                     __buck_start@startup_dutycycle:
  3189                           	opt stack 0
  3190  000074                     itoa@base:
  3191                           	opt stack 0
  3192  000074                     __get_dateTime@datetime:
  3193                           	opt stack 0
  3194  000074                     __display_usb@usb_off:
  3195                           	opt stack 0
  3196                           
  3197                           ; 17 bytes @ 0x14
  3198  000074                     	ds	1
  3199  000075                     i2c_eeprom_read@length:
  3200                           	opt stack 0
  3201  000075                     __buck_start@cntr:
  3202                           	opt stack 0
  3203  000075                     __flash_copy_page_to_buffer@buffer:
  3204                           	opt stack 0
  3205  000075                     __flash_compare_page_to_buffer@buffer:
  3206                           	opt stack 0
  3207  000075                     __flash_write_page_from_buffer@buffer:
  3208                           	opt stack 0
  3209  000075                     __flash_write_to_buffer@data:
  3210                           	opt stack 0
  3211  000075                     flash_partial_read@start:
  3212                           	opt stack 0
  3213  000075                     adc_calculate_temperature@tmp:
  3214                           	opt stack 0
  3215  000075                     __display_outputs@line4:
  3216                           	opt stack 0
  3217                           
  3218                           ; 21 bytes @ 0x15
  3219  000075                     	ds	1
  3220  000076                     ??_i2c_eeprom_read:
  3221  000076                     ??__buck_operate_local:
  3222  000076                     ??__flash_copy_page_to_buffer:
  3223  000076                     ??__flash_compare_page_to_buffer:
  3224  000076                     ??__flash_write_page_from_buffer:
  3225  000076                     ___altoft@exp:
  3226                           	opt stack 0
  3227  000076                     __buck_operate_remote$8730:
  3228                           	opt stack 0
  3229  000076                     itoa@cp:
  3230                           	opt stack 0
  3231                           
  3232                           ; 2 bytes @ 0x16
  3233  000076                     	ds	1
  3234  000077                     i2c_eeprom_read@addr:
  3235                           	opt stack 0
  3236  000077                     __flash_set_page_size@size:
  3237                           	opt stack 0
  3238  000077                     ___altoft@sign:
  3239                           	opt stack 0
  3240  000077                     __flash_write_to_buffer@data_length:
  3241                           	opt stack 0
  3242  000077                     flash_partial_read@length:
  3243                           	opt stack 0
  3244                           
  3245                           ; 2 bytes @ 0x17
  3246  000077                     	ds	1
  3247  000078                     i2c_eeprom_read@slave_address:
  3248                           	opt stack 0
  3249  000078                     __display_itoa@value:
  3250                           	opt stack 0
  3251  000078                     log_collect_data@temp:
  3252                           	opt stack 0
  3253  000078                     log_generate_entry@log_entry:
  3254                           	opt stack 0
  3255                           
  3256                           ; 2 bytes @ 0x18
  3257  000078                     	ds	1
  3258  000079                     ??_i2c_eeprom_read_calibration:
  3259  000079                     __flash_write_to_buffer@buffer:
  3260                           	opt stack 0
  3261  000079                     __flash_compare_page_to_buffer@status:
  3262                           	opt stack 0
  3263  000079                     flash_partial_read@data:
  3264                           	opt stack 0
  3265  000079                     __flash_copy_page_to_buffer@command:
  3266                           	opt stack 0
  3267  000079                     __flash_write_page_from_buffer@command:
  3268                           	opt stack 0
  3269  000079                     rtcc_read_eeprom@date:
  3270                           	opt stack 0
  3271                           
  3272                           ; 6 bytes @ 0x19
  3273  000079                     	ds	1
  3274  00007A                     ??_log_generate_entry:
  3275  00007A                     __display_itoa@decimals:
  3276                           	opt stack 0
  3277  00007A                     __flash_write_to_buffer@command:
  3278                           	opt stack 0
  3279                           
  3280                           ; 4 bytes @ 0x1A
  3281  00007A                     	ds	1
  3282  00007B                     ??_flash_partial_read:
  3283  00007B                     __buck_operate_local$8729:
  3284                           	opt stack 0
  3285  00007B                     __display_itoa@text:
  3286                           	opt stack 0
  3287  00007B                     i2c_eeprom_read_calibration@buffer:
  3288                           	opt stack 0
  3289  00007B                     __flash_compare_page_to_buffer@command:
  3290                           	opt stack 0
  3291                           
  3292                           ; 4 bytes @ 0x1B
  3293  00007B                     	ds	1
  3294  00007C                     __buck_operate_local@tmp_dutycycle:
  3295                           	opt stack 0
  3296                           
  3297                           ; 1 bytes @ 0x1C
  3298  00007C                     	ds	1
  3299  00007D                     ??__display_itoa:
  3300  00007D                     __buck_operate_local@cntr:
  3301                           	opt stack 0
  3302                           
  3303                           ; 1 bytes @ 0x1D
  3304  00007D                     	ds	1
  3305  00007E                     
  3306                           ; 1 bytes @ 0x1E
  3307  00007E                     	ds	1
  3308  00007F                     i2c_eeprom_read_calibration@addr:
  3309                           	opt stack 0
  3310  00007F                     flash_page_write@page:
  3311                           	opt stack 0
  3312  00007F                     flash_partial_write@page:
  3313                           	opt stack 0
  3314  00007F                     flash_partial_read@command:
  3315                           	opt stack 0
  3316                           
  3317                           ; 4 bytes @ 0x1F
  3318  00007F                     	ds	2
  3319  000081                     i2c_eeprom_read_calibration@cntr:
  3320                           	opt stack 0
  3321  000081                     flash_page_write@data:
  3322                           	opt stack 0
  3323  000081                     flash_partial_write@start:
  3324                           	opt stack 0
  3325                           
  3326                           ; 2 bytes @ 0x21
  3327  000081                     	ds	1
  3328  000082                     
  3329                           ; 1 bytes @ 0x22
  3330  000082                     	ds	1
  3331  000083                     i2c_eeprom_write@slave_address:
  3332                           	opt stack 0
  3333  000083                     flash_page_write@match:
  3334                           	opt stack 0
  3335  000083                     flash_partial_write@length:
  3336                           	opt stack 0
  3337  000083                     flash_partial_read@address:
  3338                           	opt stack 0
  3339  000083                     __display_itoa@tmp:
  3340                           	opt stack 0
  3341                           
  3342                           ; 10 bytes @ 0x23
  3343  000083                     	ds	1
  3344  000084                     i2c_eeprom_write@cntr:
  3345                           	opt stack 0
  3346  000084                     ExternalFlash_SectorWrite@config:
  3347                           	opt stack 0
  3348                           
  3349                           ; 2 bytes @ 0x24
  3350  000084                     	ds	1
  3351  000085                     ??__write_calibration:
  3352  000085                     flash_partial_write@data:
  3353                           	opt stack 0
  3354  000085                     rtcc_write_eeprom@date:
  3355                           	opt stack 0
  3356  000085                     __display_usb@low:
  3357                           	opt stack 0
  3358                           
  3359                           ; 16 bytes @ 0x25
  3360  000085                     	ds	1
  3361  000086                     ExternalFlash_SectorWrite@sector_addr:
  3362                           	opt stack 0
  3363                           
  3364                           ; 4 bytes @ 0x26
  3365  000086                     	ds	1
  3366  000087                     ??__root_is_available:
  3367  000087                     ?__get_empty_cluster:
  3368                           	opt stack 0
  3369  000087                     ?_fat_get_empty_clusters:
  3370                           	opt stack 0
  3371  000087                     ?__read_fat:
  3372                           	opt stack 0
  3373  000087                     flash_partial_write@match:
  3374                           	opt stack 0
  3375  000087                     flash_page_read@page:
  3376                           	opt stack 0
  3377  000087                     __get_empty_cluster@first_cluster:
  3378                           	opt stack 0
  3379  000087                     fat_get_empty_clusters@maximum:
  3380                           	opt stack 0
  3381  000087                     __read_fat@cluster:
  3382                           	opt stack 0
  3383  000087                     __read_root@data:
  3384                           	opt stack 0
  3385  000087                     fat_find_file@name:
  3386                           	opt stack 0
  3387  000087                     __write_calibration@buffer:
  3388                           	opt stack 0
  3389                           
  3390                           ; 16 bytes @ 0x27
  3391  000087                     	ds	1
  3392  000088                     __root_is_available@root_sector:
  3393                           	opt stack 0
  3394  000088                     __write_fat@cluster:
  3395                           	opt stack 0
  3396  000088                     __write_root@data:
  3397                           	opt stack 0
  3398                           
  3399                           ; 2 bytes @ 0x28
  3400  000088                     	ds	1
  3401  000089                     ??__read_root:
  3402  000089                     flash_page_read@data:
  3403                           	opt stack 0
  3404  000089                     __get_empty_cluster@fat_sector:
  3405                           	opt stack 0
  3406  000089                     fat_get_empty_clusters@fat_sector:
  3407                           	opt stack 0
  3408  000089                     __read_fat@fat_sector:
  3409                           	opt stack 0
  3410  000089                     fat_find_file@extension:
  3411                           	opt stack 0
  3412                           
  3413                           ; 2 bytes @ 0x29
  3414  000089                     	ds	1
  3415  00008A                     ??__write_root:
  3416  00008A                     ExternalFlash_SectorWrite@buffer:
  3417                           	opt stack 0
  3418  00008A                     __root_is_available@offset:
  3419                           	opt stack 0
  3420  00008A                     __write_fat@value:
  3421                           	opt stack 0
  3422  00008A                     __read_root@root_sector:
  3423                           	opt stack 0
  3424  00008A                     __display_outputs@low:
  3425                           	opt stack 0
  3426                           
  3427                           ; 16 bytes @ 0x2A
  3428  00008A                     	ds	1
  3429  00008B                     __parse_command_short@cmd:
  3430                           	opt stack 0
  3431  00008B                     ExternalFlash_SectorRead@config:
  3432                           	opt stack 0
  3433  00008B                     __get_empty_cluster@offset:
  3434                           	opt stack 0
  3435  00008B                     fat_get_empty_clusters@offset:
  3436                           	opt stack 0
  3437  00008B                     __read_fat@offset:
  3438                           	opt stack 0
  3439  00008B                     __write_root@root_sector:
  3440                           	opt stack 0
  3441  00008B                     fat_find_file@buffer:
  3442                           	opt stack 0
  3443                           
  3444                           ; 11 bytes @ 0x2B
  3445  00008B                     	ds	1
  3446  00008C                     ??_APP_DeviceCustomHIDTasks:
  3447  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  3448                           	opt stack 0
  3449  00008C                     __root_is_available@file_number:
  3450                           	opt stack 0
  3451  00008C                     __write_fat@fat_sector:
  3452                           	opt stack 0
  3453  00008C                     __read_root@offset:
  3454                           	opt stack 0
  3455                           
  3456                           ; 2 bytes @ 0x2C
  3457  00008C                     	ds	1
  3458  00008D                     __display_itoa@len:
  3459                           	opt stack 0
  3460  00008D                     __root_is_available@first_byte:
  3461                           	opt stack 0
  3462  00008D                     ExternalFlash_SectorWrite@page:
  3463                           	opt stack 0
  3464  00008D                     __get_empty_cluster@value:
  3465                           	opt stack 0
  3466  00008D                     fat_get_empty_clusters@value:
  3467                           	opt stack 0
  3468  00008D                     __read_fat@value:
  3469                           	opt stack 0
  3470  00008D                     __write_root@offset:
  3471                           	opt stack 0
  3472  00008D                     ExternalFlash_SectorRead@sector_addr:
  3473                           	opt stack 0
  3474                           
  3475                           ; 4 bytes @ 0x2D
  3476  00008D                     	ds	1
  3477  00008E                     __display_itoa@missing:
  3478                           	opt stack 0
  3479  00008E                     __get_available_root_entry@file_number:
  3480                           	opt stack 0
  3481  00008E                     __read_root@slot:
  3482                           	opt stack 0
  3483  00008E                     __write_fat@offset:
  3484                           	opt stack 0
  3485                           
  3486                           ; 2 bytes @ 0x2E
  3487  00008E                     	ds	1
  3488  00008F                     ??_MSDWriteHandler:
  3489  00008F                     __display_itoa@pos:
  3490                           	opt stack 0
  3491  00008F                     __write_root@slot:
  3492                           	opt stack 0
  3493  00008F                     __get_empty_cluster@cluster:
  3494                           	opt stack 0
  3495  00008F                     fat_get_empty_clusters@empty_clusters:
  3496                           	opt stack 0
  3497                           
  3498                           ; 2 bytes @ 0x2F
  3499  00008F                     	ds	1
  3500  000090                     ??__display_charger:
  3501  000090                     ??__display_efficiency:
  3502  000090                     __display_inout@line1:
  3503                           	opt stack 0
  3504  000090                     __display_temperature@header:
  3505                           	opt stack 0
  3506                           
  3507                           ; 20 bytes @ 0x30
  3508  000090                     	ds	1
  3509  000091                     ExternalFlash_SectorRead@buffer:
  3510                           	opt stack 0
  3511  000091                     fat_get_empty_clusters@cluster:
  3512                           	opt stack 0
  3513  000091                     fat_append_to_file@number_of_bytes:
  3514                           	opt stack 0
  3515                           
  3516                           ; 2 bytes @ 0x31
  3517  000091                     	ds	1
  3518  000092                     __display_efficiency@header:
  3519                           	opt stack 0
  3520                           
  3521                           ; 19 bytes @ 0x32
  3522  000092                     	ds	1
  3523  000093                     ExternalFlash_SectorRead@page:
  3524                           	opt stack 0
  3525  000093                     fat_append_to_file@data:
  3526                           	opt stack 0
  3527                           
  3528                           ; 2 bytes @ 0x33
  3529  000093                     	ds	1
  3530  000094                     APP_DeviceCustomHIDTasks@return_value:
  3531                           	opt stack 0
  3532                           
  3533                           ; 2 bytes @ 0x34
  3534  000094                     	ds	1
  3535  000095                     ??_MSDReadHandler:
  3536  000095                     ??_fat_append_to_file:
  3537  000095                     __display_usb@usb_on:
  3538                           	opt stack 0
  3539                           
  3540                           ; 16 bytes @ 0x35
  3541  000095                     	ds	1
  3542  000096                     APP_DeviceCustomHIDTasks@idx:
  3543                           	opt stack 0
  3544  000096                     fat_find_file@slot:
  3545                           	opt stack 0
  3546                           
  3547                           ; 1 bytes @ 0x36
  3548  000096                     	ds	1
  3549  000097                     __write_calibration@addr:
  3550                           	opt stack 0
  3551  000097                     fat_find_file@sector:
  3552                           	opt stack 0
  3553                           
  3554                           ; 2 bytes @ 0x37
  3555  000097                     	ds	2
  3556  000099                     ??_MSDProcessCommandMediaPresent:
  3557  000099                     __write_calibration@ptr:
  3558                           	opt stack 0
  3559  000099                     fat_find_file@offset:
  3560                           	opt stack 0
  3561                           
  3562                           ; 2 bytes @ 0x39
  3563  000099                     	ds	1
  3564  00009A                     __display_outputs@header:
  3565                           	opt stack 0
  3566                           
  3567                           ; 14 bytes @ 0x3A
  3568  00009A                     	ds	1
  3569  00009B                     __write_calibration@index:
  3570                           	opt stack 0
  3571  00009B                     _MSDProcessCommandMediaPresent$2712:
  3572                           	opt stack 0
  3573  00009B                     fat_create_file@name:
  3574                           	opt stack 0
  3575                           
  3576                           ; 2 bytes @ 0x3B
  3577  00009B                     	ds	1
  3578  00009C                     __write_calibration@cntr:
  3579                           	opt stack 0
  3580                           
  3581                           ; 1 bytes @ 0x3C
  3582  00009C                     	ds	1
  3583  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3584                           	opt stack 0
  3585  00009D                     fat_create_file@extension:
  3586                           	opt stack 0
  3587  00009D                     fat_append_to_file@sector:
  3588                           	opt stack 0
  3589                           
  3590                           ; 2 bytes @ 0x3D
  3591  00009D                     	ds	1
  3592  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  3593                           	opt stack 0
  3594                           
  3595                           ; 4 bytes @ 0x3E
  3596  00009E                     	ds	1
  3597  00009F                     fat_create_file@size:
  3598                           	opt stack 0
  3599  00009F                     fat_append_to_file@file_size:
  3600                           	opt stack 0
  3601                           
  3602                           ; 4 bytes @ 0x3F
  3603  00009F                     	ds	3
  3604  0000A2                     MSDProcessCommandMediaPresent@capacity:
  3605                           	opt stack 0
  3606  0000A2                     __display_inout@line2:
  3607                           	opt stack 0
  3608                           
  3609                           ; 18 bytes @ 0x42
  3610  0000A2                     	ds	1
  3611  0000A3                     ??_fat_create_file:
  3612  0000A3                     fat_append_to_file@new_cluster:
  3613                           	opt stack 0
  3614                           
  3615                           ; 2 bytes @ 0x43
  3616  0000A3                     	ds	1
  3617  0000A4                     __display_temperature@external1:
  3618                           	opt stack 0
  3619                           
  3620                           ; 12 bytes @ 0x44
  3621  0000A4                     	ds	1
  3622  0000A5                     __display_usb@cntr:
  3623                           	opt stack 0
  3624  0000A5                     fat_append_to_file@fat_cluster:
  3625                           	opt stack 0
  3626  0000A5                     __display_efficiency@source:
  3627                           	opt stack 0
  3628                           
  3629                           ; 19 bytes @ 0x45
  3630  0000A5                     	ds	1
  3631  0000A6                     MSDProcessCommandMediaPresent@i:
  3632                           	opt stack 0
  3633                           
  3634                           ; 1 bytes @ 0x46
  3635  0000A6                     	ds	1
  3636  0000A7                     ??_MSDProcessCommand:
  3637  0000A7                     fat_create_file@next_cluster:
  3638                           	opt stack 0
  3639  0000A7                     fat_append_to_file@offset:
  3640                           	opt stack 0
  3641                           
  3642                           ; 2 bytes @ 0x47
  3643  0000A7                     	ds	1
  3644  0000A8                     __display_outputs@mode:
  3645                           	opt stack 0
  3646                           
  3647                           ; 1 bytes @ 0x48
  3648  0000A8                     	ds	1
  3649  0000A9                     __display_outputs@cntr:
  3650                           	opt stack 0
  3651  0000A9                     fat_append_to_file@file_number:
  3652                           	opt stack 0
  3653  0000A9                     fat_create_file@cluster_count:
  3654                           	opt stack 0
  3655                           
  3656                           ; 2 bytes @ 0x49
  3657  0000A9                     	ds	1
  3658  0000AA                     fat_append_to_file@length:
  3659                           	opt stack 0
  3660                           
  3661                           ; 2 bytes @ 0x4A
  3662  0000AA                     	ds	1
  3663  0000AB                     fat_create_file@root_slot:
  3664                           	opt stack 0
  3665                           
  3666                           ; 1 bytes @ 0x4B
  3667  0000AB                     	ds	1
  3668  0000AC                     ??_MSDTasks:
  3669  0000AC                     fat_create_file@number_of_clusters:
  3670                           	opt stack 0
  3671  0000AC                     fat_append_to_file@position:
  3672                           	opt stack 0
  3673                           
  3674                           ; 4 bytes @ 0x4C
  3675  0000AC                     	ds	1
  3676  0000AD                     _MSDTasks$2694:
  3677                           	opt stack 0
  3678                           
  3679                           ; 2 bytes @ 0x4D
  3680  0000AD                     	ds	1
  3681  0000AE                     fat_create_file@cluster:
  3682                           	opt stack 0
  3683                           
  3684                           ; 2 bytes @ 0x4E
  3685  0000AE                     	ds	1
  3686  0000AF                     _MSDTasks$2695:
  3687                           	opt stack 0
  3688                           
  3689                           ; 2 bytes @ 0x4F
  3690  0000AF                     	ds	1
  3691  0000B0                     __display_temperature@external2:
  3692                           	opt stack 0
  3693  0000B0                     fat_create_file@root_entry:
  3694                           	opt stack 0
  3695  0000B0                     fat_append_to_file@root:
  3696                           	opt stack 0
  3697                           
  3698                           ; 32 bytes @ 0x50
  3699  0000B0                     	ds	1
  3700  0000B1                     MSDTasks@i:
  3701                           	opt stack 0
  3702                           
  3703                           ; 1 bytes @ 0x51
  3704  0000B1                     	ds	1
  3705  0000B2                     
  3706                           ; 1 bytes @ 0x52
  3707  0000B2                     	ds	2
  3708  0000B4                     __display_inout@line4:
  3709                           	opt stack 0
  3710                           
  3711                           ; 14 bytes @ 0x54
  3712  0000B4                     	ds	4
  3713  0000B8                     __display_efficiency@footer:
  3714                           	opt stack 0
  3715                           
  3716                           ; 14 bytes @ 0x58
  3717  0000B8                     	ds	4
  3718  0000BC                     __display_temperature@internal:
  3719                           	opt stack 0
  3720                           
  3721                           ; 11 bytes @ 0x5C
  3722  0000BC                     	ds	6
  3723  0000C2                     __display_inout@line3:
  3724                           	opt stack 0
  3725                           
  3726                           ; 3 bytes @ 0x62
  3727  0000C2                     	ds	3
  3728  0000C5                     __display_inout@cntr:
  3729                           	opt stack 0
  3730                           
  3731                           ; 1 bytes @ 0x65
  3732  0000C5                     	ds	1
  3733  0000C6                     __display_efficiency@efficiency:
  3734                           	opt stack 0
  3735                           
  3736                           ; 3 bytes @ 0x66
  3737  0000C6                     	ds	1
  3738  0000C7                     __display_temperature@cntr:
  3739                           	opt stack 0
  3740                           
  3741                           ; 1 bytes @ 0x67
  3742  0000C7                     	ds	2
  3743  0000C9                     __display_efficiency@panel:
  3744                           	opt stack 0
  3745                           
  3746                           ; 4 bytes @ 0x69
  3747  0000C9                     	ds	4
  3748  0000CD                     __display_efficiency@battery:
  3749                           	opt stack 0
  3750                           
  3751                           ; 4 bytes @ 0x6D
  3752  0000CD                     	ds	3
  3753  0000D0                     
  3754                           ; 1 bytes @ 0x70
  3755  0000D0                     	ds	1
  3756  0000D1                     __display_efficiency@cntr:
  3757                           	opt stack 0
  3758                           
  3759                           ; 1 bytes @ 0x71
  3760  0000D1                     	ds	1
  3761  0000D2                     ??_display_prepare:
  3762                           
  3763                           ; 1 bytes @ 0x72
  3764  0000D2                     	ds	2
  3765  0000D4                     display_prepare@mode:
  3766                           	opt stack 0
  3767                           
  3768                           ; 1 bytes @ 0x74
  3769  0000D4                     	ds	1
  3770  0000D5                     ??_main:
  3771                           
  3772                           ; 1 bytes @ 0x75
  3773  0000D5                     	ds	2
  3774                           tblptru	equ	0xFF8
  3775                           tblptrh	equ	0xFF7
  3776                           tblptrl	equ	0xFF6
  3777                           tablat	equ	0xFF5
  3778                           postinc0	equ	0xFEE
  3779                           wreg	equ	0xFE8
  3780                           postdec1	equ	0xFE5
  3781                           fsr1h	equ	0xFE2
  3782                           fsr1l	equ	0xFE1
  3783                           
  3784                           	psect	cstackCOMRAM
  3785  00002E                     __pcstackCOMRAM:
  3786                           	opt stack 0
  3787  00002E                     ??_USBStdGetDscHandler:
  3788  00002E                     ??_USBStdGetStatusHandler:
  3789  00002E                     ?i2_USBTransferOnePacket:
  3790                           	opt stack 0
  3791  00002E                     ?i2_ExternalFlash_MediaInitialize:
  3792                           	opt stack 0
  3793  00002E                     USBConfigureEndpoint@direction:
  3794                           	opt stack 0
  3795  00002E                     USBCtrlTrfTxService@byteToSend:
  3796                           	opt stack 0
  3797  00002E                     USBCtrlTrfRxService@i:
  3798                           	opt stack 0
  3799  00002E                     i2USBTransferOnePacket@dir:
  3800                           	opt stack 0
  3801  00002E                     i2USBStallEndpoint@dir:
  3802                           	opt stack 0
  3803  00002E                     i2SYSTEM_Initialize@pll_startup_counter:
  3804                           	opt stack 0
  3805  00002E                     i2ExternalFlash_MediaInitialize@config:
  3806                           	opt stack 0
  3807  00002E                     i2ExternalFlash_MediaDetect@config:
  3808                           	opt stack 0
  3809  00002E                     i2memcpy@d1:
  3810                           	opt stack 0
  3811  00002E                     i2memset@p1:
  3812                           	opt stack 0
  3813                           
  3814                           ; 2 bytes @ 0x0
  3815  00002E                     	ds	1
  3816  00002F                     ??_USBConfigureEndpoint:
  3817  00002F                     ??i2_USBStallEndpoint:
  3818  00002F                     USBCtrlTrfRxService@byteToRead:
  3819                           	opt stack 0
  3820  00002F                     USBCtrlTrfInHandler@lastDTS:
  3821                           	opt stack 0
  3822  00002F                     USBStdGetStatusHandler@p:
  3823                           	opt stack 0
  3824  00002F                     i2USBTransferOnePacket@data:
  3825                           	opt stack 0
  3826                           
  3827                           ; 2 bytes @ 0x1
  3828  00002F                     	ds	1
  3829  000030                     i2SYSTEM_Initialize@pll_startup_counter_3284:
  3830                           	opt stack 0
  3831  000030                     i2memcpy@s1:
  3832                           	opt stack 0
  3833  000030                     i2memset@c:
  3834                           	opt stack 0
  3835                           
  3836                           ; 2 bytes @ 0x2
  3837  000030                     	ds	1
  3838  000031                     i2USBTransferOnePacket@len:
  3839                           	opt stack 0
  3840                           
  3841                           ; 1 bytes @ 0x3
  3842  000031                     	ds	1
  3843  000032                     ??i2_USBTransferOnePacket:
  3844  000032                     i2SYSTEM_Initialize@state:
  3845                           	opt stack 0
  3846  000032                     i2memcpy@n:
  3847                           	opt stack 0
  3848  000032                     i2memset@n:
  3849                           	opt stack 0
  3850                           
  3851                           ; 2 bytes @ 0x4
  3852  000032                     	ds	1
  3853  000033                     USBConfigureEndpoint@EPNum:
  3854                           	opt stack 0
  3855  000033                     i2USBStallEndpoint@ep:
  3856                           	opt stack 0
  3857                           
  3858                           ; 1 bytes @ 0x5
  3859  000033                     	ds	1
  3860  000034                     USBConfigureEndpoint@handle:
  3861                           	opt stack 0
  3862  000034                     i2USBStallEndpoint@p:
  3863                           	opt stack 0
  3864  000034                     i2memcpy@d:
  3865                           	opt stack 0
  3866  000034                     i2memset@p:
  3867                           	opt stack 0
  3868                           
  3869                           ; 2 bytes @ 0x6
  3870  000034                     	ds	2
  3871  000036                     USBEnableEndpoint@options:
  3872                           	opt stack 0
  3873  000036                     i2USBDeviceInit@i:
  3874                           	opt stack 0
  3875  000036                     i2USBTransferOnePacket@ep:
  3876                           	opt stack 0
  3877  000036                     i2memcpy@s:
  3878                           	opt stack 0
  3879                           
  3880                           ; 2 bytes @ 0x8
  3881  000036                     	ds	1
  3882  000037                     USBEnableEndpoint@p:
  3883                           	opt stack 0
  3884  000037                     i2USBTransferOnePacket@handle:
  3885                           	opt stack 0
  3886                           
  3887                           ; 2 bytes @ 0x9
  3888  000037                     	ds	1
  3889  000038                     i2memcpy@tmp:
  3890                           	opt stack 0
  3891                           
  3892                           ; 1 bytes @ 0xA
  3893  000038                     	ds	1
  3894  000039                     ??_USBMSDInit:
  3895  000039                     USBEnableEndpoint@ep:
  3896                           	opt stack 0
  3897  000039                     _USBCheckMSDRequest$2640:
  3898                           	opt stack 0
  3899  000039                     MSDTransferTerminated@handle:
  3900                           	opt stack 0
  3901                           
  3902                           ; 2 bytes @ 0xB
  3903  000039                     	ds	1
  3904  00003A                     
  3905                           ; 1 bytes @ 0xC
  3906  00003A                     	ds	1
  3907  00003B                     _USBCheckMSDRequest$2641:
  3908                           	opt stack 0
  3909  00003B                     _MSDTransferTerminated$2729:
  3910                           	opt stack 0
  3911                           
  3912                           ; 2 bytes @ 0xD
  3913  00003B                     	ds	1
  3914  00003C                     
  3915                           ; 1 bytes @ 0xE
  3916  00003C                     	ds	1
  3917  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3918                           	opt stack 0
  3919                           
  3920                           ; 2 bytes @ 0xF
  3921  00003D                     	ds	2
  3922  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3923                           	opt stack 0
  3924                           
  3925                           ; 2 bytes @ 0x11
  3926  00003F                     	ds	2
  3927  000041                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3928                           	opt stack 0
  3929                           
  3930                           ; 2 bytes @ 0x13
  3931  000041                     	ds	2
  3932  000043                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3933                           
  3934                           ; 1 bytes @ 0x15
  3935  000043                     	ds	2
  3936  000045                     ??_USBStdFeatureReqHandler:
  3937  000045                     USBStdSetCfgHandler@i:
  3938                           	opt stack 0
  3939                           
  3940                           ; 1 bytes @ 0x17
  3941  000045                     	ds	1
  3942  000046                     USBStdFeatureReqHandler@pUEP:
  3943                           	opt stack 0
  3944                           
  3945                           ; 2 bytes @ 0x18
  3946  000046                     	ds	2
  3947  000048                     USBStdFeatureReqHandler@current_ep_data:
  3948                           	opt stack 0
  3949                           
  3950                           ; 1 bytes @ 0x1A
  3951  000048                     	ds	1
  3952  000049                     USBStdFeatureReqHandler@p:
  3953                           	opt stack 0
  3954                           
  3955                           ; 2 bytes @ 0x1B
  3956  000049                     	ds	2
  3957  00004B                     ??_USBCtrlEPService:
  3958  00004B                     
  3959                           ; 1 bytes @ 0x1D
  3960  00004B                     	ds	1
  3961  00004C                     USBDeviceTasks@i:
  3962                           	opt stack 0
  3963                           
  3964                           ; 1 bytes @ 0x1E
  3965  00004C                     	ds	1
  3966  00004D                     ??_SYS_InterruptHigh:
  3967                           
  3968                           ; 1 bytes @ 0x1F
  3969  00004D                     	ds	14
  3970                           tblptru	equ	0xFF8
  3971                           tblptrh	equ	0xFF7
  3972                           tblptrl	equ	0xFF6
  3973                           tablat	equ	0xFF5
  3974                           postinc0	equ	0xFEE
  3975                           wreg	equ	0xFE8
  3976                           postdec1	equ	0xFE5
  3977                           fsr1h	equ	0xFE2
  3978                           fsr1l	equ	0xFE1
  3979                           
  3980 ;;
  3981 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3982 ;;
  3983 ;; *************** function _main *****************
  3984 ;; Defined at:
  3985 ;;		line 50 in file "main.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;		None
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;		None
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      void 
  3992 ;; Registers used:
  3993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4001 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4002 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4003 ;;Total ram usage:        2 bytes
  4004 ;; Hardware stack levels required when called:   22
  4005 ;; This function calls:
  4006 ;;		_APP_DeviceCustomHIDTasks
  4007 ;;		_APP_DeviceMSDTasks
  4008 ;;		_SYSTEM_Initialize
  4009 ;;		_USBDeviceAttach
  4010 ;;		_USBDeviceInit
  4011 ;;		_adc_calculate_temperature
  4012 ;;		_adc_calibrate
  4013 ;;		_adc_read
  4014 ;;		_buck_get_mode
  4015 ;;		_buck_operate
  4016 ;;		_display_prepare
  4017 ;;		_display_update
  4018 ;;		_i2c_adc_read
  4019 ;;		_i2c_adc_start
  4020 ;;		_i2c_eeprom_tasks
  4021 ;;		_log_collect_data
  4022 ;;		_log_get_number_of_samples
  4023 ;;		_log_start_new
  4024 ;;		_log_write_to_disk
  4025 ;;		_system_calculate_input_current
  4026 ;;		_system_calculate_input_voltage
  4027 ;;		_system_calculate_output_current
  4028 ;;		_system_calculate_output_voltage
  4029 ;;		_system_init
  4030 ;;		_system_output_off
  4031 ;;		_ui_get_status
  4032 ;;		_ui_run
  4033 ;; This function is called by:
  4034 ;;		Startup code after reset
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text0
  4039  0123B0                     __ptext0:
  4040                           	opt stack 0
  4041  0123B0                     _main:
  4042                           	opt stack 9
  4043                           
  4044                           ;main.c: 55: system_init();
  4045                           
  4046                           ; BSR set to: 1
  4047                           ;incstack = 0
  4048  0123B0  EC77  F0B0         	call	_system_init	;wreg free
  4049                           
  4050                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  4051  0123B4  0E00               	movlw	0
  4052  0123B6  ECA0  F0C9         	call	_SYSTEM_Initialize
  4053                           
  4054                           ;main.c: 59: USBDeviceInit();
  4055  0123BA  ECCF  F0A5         	call	_USBDeviceInit	;wreg free
  4056                           
  4057                           ;main.c: 60: USBDeviceAttach();
  4058  0123BE  EC7A  F0D0         	call	_USBDeviceAttach	;wreg free
  4059  0123C2                     l22516:
  4060                           
  4061                           ;main.c: 63: {
  4062                           ;main.c: 86: APP_DeviceMSDTasks();
  4063  0123C2  EC8B  F0D5         	call	_APP_DeviceMSDTasks	;wreg free
  4064                           
  4065                           ;main.c: 88: if(!os.done)
  4066  0123C6  0102               	movlb	2	; () banked
  4067  0123C8  5109               	movf	(_os+9)& (0+255),w,b	;volatile
  4068  0123CA  A4D8               	btfss	status,2,c
  4069  0123CC  D7FA               	goto	l22516
  4070                           
  4071                           ; BSR set to: 2
  4072                           ;main.c: 89: {
  4073                           ;main.c: 93: if(os.output_voltage<12000)
  4074  0123CE  0102               	movlb	2	; () banked
  4075  0123D0  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  4076  0123D2  D008               	goto	l22522
  4077  0123D4  0EE0               	movlw	224
  4078  0123D6  0102               	movlb	2	; () banked
  4079  0123D8  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
  4080  0123DA  0E2E               	movlw	46
  4081  0123DC  0102               	movlb	2	; () banked
  4082  0123DE  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  4083  0123E0  B0D8               	btfsc	status,0,c
  4084  0123E2  D003               	goto	l22524
  4085  0123E4                     l22522:
  4086                           
  4087                           ; BSR set to: 2
  4088                           ;main.c: 94: {
  4089                           ;main.c: 95: system_output_off(OUTPUT_USB);
  4090  0123E4  0E10               	movlw	16
  4091  0123E6  EC35  F0CD         	call	_system_output_off
  4092  0123EA                     l22524:
  4093                           
  4094                           ;main.c: 96: }
  4095                           ;main.c: 97: if(os.output_voltage<-1)
  4096  0123EA  0102               	movlb	2	; () banked
  4097  0123EC  AF28               	btfss	(_os+40)& (0+255),7,b	;volatile
  4098  0123EE  D013               	goto	l22528
  4099  0123F0  0102               	movlb	2	; () banked
  4100  0123F2  2927               	incf	(_os+39)& (0+255),w,b	;volatile
  4101  0123F4  0EFF               	movlw	255
  4102  0123F6  0102               	movlb	2	; () banked
  4103  0123F8  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  4104  0123FA  B0D8               	btfsc	status,0,c
  4105  0123FC  D00C               	goto	l22528
  4106                           
  4107                           ; BSR set to: 2
  4108                           ;main.c: 98: {
  4109                           ;main.c: 99: system_output_off(OUTPUT_1);
  4110  0123FE  0E01               	movlw	1
  4111  012400  EC35  F0CD         	call	_system_output_off
  4112                           
  4113                           ;main.c: 100: system_output_off(OUTPUT_2);
  4114  012404  0E02               	movlw	2
  4115  012406  EC35  F0CD         	call	_system_output_off
  4116                           
  4117                           ;main.c: 101: system_output_off(OUTPUT_3);
  4118  01240A  0E04               	movlw	4
  4119  01240C  EC35  F0CD         	call	_system_output_off
  4120                           
  4121                           ;main.c: 102: system_output_off(OUTPUT_4);
  4122  012410  0E08               	movlw	8
  4123  012412  EC35  F0CD         	call	_system_output_off
  4124  012416                     l22528:
  4125                           
  4126                           ;main.c: 103: }
  4127                           ;main.c: 106: i2c_eeprom_tasks();
  4128  012416  EC23  F0C8         	call	_i2c_eeprom_tasks	;wreg free
  4129                           
  4130                           ;main.c: 109: ui_run();
  4131  01241A  EC03  F0B1         	call	_ui_run	;wreg free
  4132                           
  4133                           ;main.c: 112: os.temperature_onboard_adc += adc_read(ADC_CHANNEL_TEMPERATURE_ONBOARD);
  4134  01241E  0E00               	movlw	0
  4135  012420  ECA3  F0C2         	call	_adc_read
  4136  012424  0100               	movlb	0	; () banked
  4137  012426  5160               	movf	?_adc_read& (0+255),w,b
  4138  012428  0102               	movlb	2	; () banked
  4139  01242A  2734               	addwf	(_os+52)& (0+255),f,b	;volatile
  4140  01242C  0100               	movlb	0	; () banked
  4141  01242E  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4142  012430  0102               	movlb	2	; () banked
  4143  012432  2335               	addwfc	(_os+53)& (0+255),f,b	;volatile
  4144                           
  4145                           ;main.c: 113: os.temperature_external_1_adc += adc_read(ADC_CHANNEL_TEMPERATURE_EXTERNAL
      +                          _1);
  4146  012434  0E01               	movlw	1
  4147  012436  ECA3  F0C2         	call	_adc_read
  4148  01243A  0100               	movlb	0	; () banked
  4149  01243C  5160               	movf	?_adc_read& (0+255),w,b
  4150  01243E  0102               	movlb	2	; () banked
  4151  012440  2738               	addwf	(_os+56)& (0+255),f,b	;volatile
  4152  012442  0100               	movlb	0	; () banked
  4153  012444  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4154  012446  0102               	movlb	2	; () banked
  4155  012448  2339               	addwfc	(_os+57)& (0+255),f,b	;volatile
  4156                           
  4157                           ;main.c: 114: os.temperature_external_2_adc += adc_read(ADC_CHANNEL_TEMPERATURE_EXTERNAL
      +                          _2);
  4158  01244A  0E02               	movlw	2
  4159  01244C  ECA3  F0C2         	call	_adc_read
  4160  012450  0100               	movlb	0	; () banked
  4161  012452  5160               	movf	?_adc_read& (0+255),w,b
  4162  012454  0102               	movlb	2	; () banked
  4163  012456  273C               	addwf	(_os+60)& (0+255),f,b	;volatile
  4164  012458  0100               	movlb	0	; () banked
  4165  01245A  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4166  01245C  0102               	movlb	2	; () banked
  4167  01245E  233D               	addwfc	(_os+61)& (0+255),f,b	;volatile
  4168                           
  4169                           ;main.c: 117: switch(os.timeSlot&0b00001111)
  4170  012460  D122               	goto	l22610
  4171  012462                     l22532:
  4172                           
  4173                           ;main.c: 120: i2c_adc_start(I2C_ADC_OUTPUT_VOLTAGE, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GA
      +                          IN_1);
  4174  012462  0E01               	movlw	1
  4175  012464  0100               	movlb	0	; () banked
  4176  012466  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4177  012468  0E00               	movlw	0
  4178  01246A  0100               	movlb	0	; () banked
  4179  01246C  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4180  01246E  0E00               	movlw	0
  4181  012470  ECAA  F0CE         	call	_i2c_adc_start
  4182                           
  4183                           ;main.c: 121: break;
  4184  012474  D14C               	goto	l22612
  4185  012476                     l22534:
  4186                           
  4187                           ;main.c: 124: APP_DeviceCustomHIDTasks();
  4188  012476  EC2A  F08C         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4189                           
  4190                           ;main.c: 128: break;
  4191  01247A  D149               	goto	l22612
  4192  01247C                     l22536:
  4193                           
  4194                           ;main.c: 132: os.output_voltage_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4195  01247C  EC25  F0CC         	call	_i2c_adc_read	;wreg free
  4196  012480  0102               	movlb	2	; () banked
  4197  012482  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4198  012484  0B0F               	andlw	15
  4199  012486  0B03               	andlw	3
  4200  012488  0100               	movlb	0	; () banked
  4201  01248A  6FD5               	movwf	??_main& (0+255),b
  4202  01248C  6BD6               	clrf	(??_main+1)& (0+255),b
  4203  01248E  90D8               	bcf	status,0,c
  4204  012490  0100               	movlb	0	; () banked
  4205  012492  37D5               	rlcf	??_main& (0+255),f,b
  4206  012494  37D6               	rlcf	(??_main+1)& (0+255),f,b
  4207  012496  0E1F               	movlw	low (_os+31)
  4208  012498  0100               	movlb	0	; () banked
  4209  01249A  25D5               	addwf	??_main& (0+255),w,b
  4210  01249C  6ED9               	movwf	fsr2l,c
  4211  01249E  0E02               	movlw	high (_os+31)
  4212  0124A0  0100               	movlb	0	; () banked
  4213  0124A2  21D6               	addwfc	(??_main+1)& (0+255),w,b
  4214  0124A4  6EDA               	movwf	fsr2h,c
  4215  0124A6  0100               	movlb	0	; () banked
  4216  0124A8  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4217  0124AC  0100               	movlb	0	; () banked
  4218  0124AE  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;main.c: 133: i2c_adc_start(I2C_ADC_INPUT_VOLTAGE, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GAI
      +                          N_1);
  4222  0124B2  0E01               	movlw	1
  4223  0124B4  0100               	movlb	0	; () banked
  4224  0124B6  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4225  0124B8  0E00               	movlw	0
  4226  0124BA  0100               	movlb	0	; () banked
  4227  0124BC  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4228  0124BE  0E03               	movlw	3
  4229  0124C0  ECAA  F0CE         	call	_i2c_adc_start
  4230                           
  4231                           ;main.c: 134: system_calculate_output_voltage();
  4232  0124C4  EC12  F0B2         	call	_system_calculate_output_voltage	;wreg free
  4233                           
  4234                           ;main.c: 135: break;
  4235  0124C8  D122               	goto	l22612
  4236  0124CA                     l22542:
  4237                           
  4238                           ;main.c: 138: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4239  0124CA  ECE6  F0D5         	call	_ui_get_status	;wreg free
  4240  0124CE  0A05               	xorlw	5
  4241  0124D0  A4D8               	btfss	status,2,c
  4242  0124D2  D11D               	goto	l22612
  4243                           
  4244                           ;main.c: 139: {
  4245                           ;main.c: 140: display_prepare(os.display_mode);
  4246  0124D4  0102               	movlb	2	; () banked
  4247  0124D6  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  4248  0124D8  ECB8  F0C3         	call	_display_prepare
  4249                           
  4250                           ;main.c: 141: }
  4251                           ;main.c: 142: break;
  4252  0124DC  D118               	goto	l22612
  4253  0124DE                     l22546:
  4254                           
  4255                           ;main.c: 145: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4256  0124DE  ECE6  F0D5         	call	_ui_get_status	;wreg free
  4257                           
  4258                           ;main.c: 148: }
  4259                           ;main.c: 149: break;
  4260                           
  4261                           ;main.c: 146: {
  4262  0124E2  D115               	goto	l22612
  4263  0124E4                     l22548:
  4264                           
  4265                           ;main.c: 152: os.input_voltage_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4266  0124E4  EC25  F0CC         	call	_i2c_adc_read	;wreg free
  4267  0124E8  0102               	movlb	2	; () banked
  4268  0124EA  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4269  0124EC  0B0F               	andlw	15
  4270  0124EE  0B03               	andlw	3
  4271  0124F0  0100               	movlb	0	; () banked
  4272  0124F2  6FD5               	movwf	??_main& (0+255),b
  4273  0124F4  6BD6               	clrf	(??_main+1)& (0+255),b
  4274  0124F6  90D8               	bcf	status,0,c
  4275  0124F8  0100               	movlb	0	; () banked
  4276  0124FA  37D5               	rlcf	??_main& (0+255),f,b
  4277  0124FC  37D6               	rlcf	(??_main+1)& (0+255),f,b
  4278  0124FE  0E0A               	movlw	low (_os+10)
  4279  012500  0100               	movlb	0	; () banked
  4280  012502  25D5               	addwf	??_main& (0+255),w,b
  4281  012504  6ED9               	movwf	fsr2l,c
  4282  012506  0E02               	movlw	high (_os+10)
  4283  012508  0100               	movlb	0	; () banked
  4284  01250A  21D6               	addwfc	(??_main+1)& (0+255),w,b
  4285  01250C  6EDA               	movwf	fsr2h,c
  4286  01250E  0100               	movlb	0	; () banked
  4287  012510  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4288  012514  0100               	movlb	0	; () banked
  4289  012516  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4290                           
  4291                           ;main.c: 154: {
  4292                           ;main.c: 155: i2c_adc_start(I2C_ADC_OUTPUT_CURRENT, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GA
      +                          IN_1);
  4293                           
  4294                           ; BSR set to: 0
  4295                           
  4296                           ;main.c: 153: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
  4297  01251A  0E01               	movlw	1
  4298  01251C  0100               	movlb	0	; () banked
  4299  01251E  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4300  012520  0E00               	movlw	0
  4301  012522  0100               	movlb	0	; () banked
  4302  012524  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4303  012526  0E01               	movlw	1
  4304  012528  ECAA  F0CE         	call	_i2c_adc_start
  4305                           
  4306                           ;main.c: 156: }
  4307                           ;main.c: 157: system_calculate_input_voltage();
  4308  01252C  EC95  F0B2         	call	_system_calculate_input_voltage	;wreg free
  4309                           
  4310                           ;main.c: 158: break;
  4311  012530  D0EE               	goto	l22612
  4312  012532                     l22556:
  4313                           
  4314                           ;main.c: 161: APP_DeviceCustomHIDTasks();
  4315  012532  EC2A  F08C         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4316                           
  4317                           ;main.c: 162: break;
  4318  012536  D0EB               	goto	l22612
  4319  012538                     l22560:
  4320                           
  4321                           ;main.c: 166: {
  4322                           ;main.c: 167: os.output_current_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4323  012538  EC25  F0CC         	call	_i2c_adc_read	;wreg free
  4324  01253C  0102               	movlb	2	; () banked
  4325  01253E  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4326  012540  0B0F               	andlw	15
  4327  012542  0B03               	andlw	3
  4328  012544  0100               	movlb	0	; () banked
  4329  012546  6FD5               	movwf	??_main& (0+255),b
  4330  012548  6BD6               	clrf	(??_main+1)& (0+255),b
  4331  01254A  90D8               	bcf	status,0,c
  4332  01254C  0100               	movlb	0	; () banked
  4333  01254E  37D5               	rlcf	??_main& (0+255),f,b
  4334  012550  37D6               	rlcf	(??_main+1)& (0+255),f,b
  4335  012552  0E29               	movlw	low (_os+41)
  4336  012554  0100               	movlb	0	; () banked
  4337  012556  25D5               	addwf	??_main& (0+255),w,b
  4338  012558  6ED9               	movwf	fsr2l,c
  4339  01255A  0E02               	movlw	high (_os+41)
  4340  01255C  0100               	movlb	0	; () banked
  4341  01255E  21D6               	addwfc	(??_main+1)& (0+255),w,b
  4342  012560  6EDA               	movwf	fsr2h,c
  4343  012562  0100               	movlb	0	; () banked
  4344  012564  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4345  012568  0100               	movlb	0	; () banked
  4346  01256A  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;main.c: 168: i2c_adc_start(I2C_ADC_INPUT_CURRENT, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GAI
      +                          N_1);
  4350  01256E  0E01               	movlw	1
  4351  012570  0100               	movlb	0	; () banked
  4352  012572  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4353  012574  0E00               	movlw	0
  4354  012576  0100               	movlb	0	; () banked
  4355  012578  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4356  01257A  0E02               	movlw	2
  4357  01257C  ECAA  F0CE         	call	_i2c_adc_start
  4358                           
  4359                           ;main.c: 169: system_calculate_output_current();
  4360  012580  EC36  F0A7         	call	_system_calculate_output_current	;wreg free
  4361                           
  4362                           ;main.c: 170: }
  4363                           ;main.c: 171: break;
  4364  012584  D0C4               	goto	l22612
  4365  012586                     l22566:
  4366                           
  4367                           ;main.c: 174: APP_DeviceCustomHIDTasks();
  4368  012586  EC2A  F08C         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4369                           
  4370                           ;main.c: 175: log_collect_data();
  4371  01258A  ECBC  F096         	call	_log_collect_data	;wreg free
  4372                           
  4373                           ;main.c: 176: if(log_get_number_of_samples() == 30)
  4374  01258E  ECBD  F0D5         	call	_log_get_number_of_samples	;wreg free
  4375  012592  0E1E               	movlw	30
  4376  012594  0100               	movlb	0	; () banked
  4377  012596  1960               	xorwf	?_log_get_number_of_samples& (0+255),w,b
  4378  012598  0100               	movlb	0	; () banked
  4379  01259A  1161               	iorwf	(?_log_get_number_of_samples+1)& (0+255),w,b
  4380  01259C  A4D8               	btfss	status,2,c
  4381  01259E  D0B7               	goto	l22612
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;main.c: 177: {
  4385                           ;main.c: 178: log_write_to_disk();
  4386  0125A0  ECEA  F0C2         	call	_log_write_to_disk	;wreg free
  4387                           
  4388                           ;main.c: 179: log_start_new();
  4389  0125A4  EC19  F0B5         	call	_log_start_new	;wreg free
  4390                           
  4391                           ;main.c: 180: }
  4392                           ;main.c: 181: break;
  4393  0125A8  D0B2               	goto	l22612
  4394  0125AA                     l22578:
  4395                           
  4396                           ;main.c: 185: {
  4397                           ;main.c: 186: os.input_current_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4398  0125AA  EC25  F0CC         	call	_i2c_adc_read	;wreg free
  4399  0125AE  0102               	movlb	2	; () banked
  4400  0125B0  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4401  0125B2  0B0F               	andlw	15
  4402  0125B4  0B03               	andlw	3
  4403  0125B6  0100               	movlb	0	; () banked
  4404  0125B8  6FD5               	movwf	??_main& (0+255),b
  4405  0125BA  6BD6               	clrf	(??_main+1)& (0+255),b
  4406  0125BC  90D8               	bcf	status,0,c
  4407  0125BE  0100               	movlb	0	; () banked
  4408  0125C0  37D5               	rlcf	??_main& (0+255),f,b
  4409  0125C2  37D6               	rlcf	(??_main+1)& (0+255),f,b
  4410  0125C4  0E14               	movlw	low (_os+20)
  4411  0125C6  0100               	movlb	0	; () banked
  4412  0125C8  25D5               	addwf	??_main& (0+255),w,b
  4413  0125CA  6ED9               	movwf	fsr2l,c
  4414  0125CC  0E02               	movlw	high (_os+20)
  4415  0125CE  0100               	movlb	0	; () banked
  4416  0125D0  21D6               	addwfc	(??_main+1)& (0+255),w,b
  4417  0125D2  6EDA               	movwf	fsr2h,c
  4418  0125D4  0100               	movlb	0	; () banked
  4419  0125D6  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  4420  0125DA  0100               	movlb	0	; () banked
  4421  0125DC  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  4422                           
  4423                           ;main.c: 187: system_calculate_input_current();
  4424  0125E0  ECE3  F0A7         	call	_system_calculate_input_current	;wreg free
  4425                           
  4426                           ;main.c: 188: }
  4427                           ;main.c: 189: break;
  4428  0125E4  D094               	goto	l22612
  4429  0125E6                     l22580:
  4430                           
  4431                           ;main.c: 192: buck_operate();
  4432  0125E6  ECC7  F0CB         	call	_buck_operate	;wreg free
  4433                           
  4434                           ;main.c: 193: break;
  4435  0125EA  D091               	goto	l22612
  4436  0125EC                     l22582:
  4437                           
  4438                           ;main.c: 197: os.temperature_onboard = adc_calculate_temperature(os.temperature_onboard_
      +                          adc, CALIBRATION_INDEX_ONBOARD_TEMPERATURE);
  4439  0125EC  C234  F06C         	movff	_os+52,adc_calculate_temperature@adc_value	;volatile
  4440  0125F0  C235  F06D         	movff	_os+53,adc_calculate_temperature@adc_value+1	;volatile
  4441  0125F4  0E04               	movlw	4
  4442  0125F6  0100               	movlb	0	; () banked
  4443  0125F8  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4444  0125FA  EC5C  F0AF         	call	_adc_calculate_temperature	;wreg free
  4445  0125FE  C06C  F236         	movff	?_adc_calculate_temperature,_os+54	;volatile
  4446  012602  C06D  F237         	movff	?_adc_calculate_temperature+1,_os+55	;volatile
  4447                           
  4448                           ;main.c: 198: os.temperature_onboard_adc = 0;
  4449  012606  0E00               	movlw	0
  4450  012608  0102               	movlb	2	; () banked
  4451  01260A  6F35               	movwf	(_os+53)& (0+255),b	;volatile
  4452  01260C  0E00               	movlw	0
  4453  01260E  6F34               	movwf	(_os+52)& (0+255),b	;volatile
  4454                           
  4455                           ; BSR set to: 2
  4456                           ;main.c: 199: os.temperature_external_1 = adc_calculate_temperature(os.temperature_exter
      +                          nal_1_adc, CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_1);
  4457  012610  C238  F06C         	movff	_os+56,adc_calculate_temperature@adc_value	;volatile
  4458  012614  C239  F06D         	movff	_os+57,adc_calculate_temperature@adc_value+1	;volatile
  4459  012618  0E05               	movlw	5
  4460  01261A  0100               	movlb	0	; () banked
  4461  01261C  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4462  01261E  EC5C  F0AF         	call	_adc_calculate_temperature	;wreg free
  4463  012622  C06C  F23A         	movff	?_adc_calculate_temperature,_os+58	;volatile
  4464  012626  C06D  F23B         	movff	?_adc_calculate_temperature+1,_os+59	;volatile
  4465                           
  4466                           ;main.c: 200: os.temperature_external_1_adc = 0;
  4467  01262A  0E00               	movlw	0
  4468  01262C  0102               	movlb	2	; () banked
  4469  01262E  6F39               	movwf	(_os+57)& (0+255),b	;volatile
  4470  012630  0E00               	movlw	0
  4471  012632  6F38               	movwf	(_os+56)& (0+255),b	;volatile
  4472                           
  4473                           ; BSR set to: 2
  4474                           ;main.c: 201: os.temperature_external_2 = adc_calculate_temperature(os.temperature_exter
      +                          nal_2_adc, CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_2);
  4475  012634  C23C  F06C         	movff	_os+60,adc_calculate_temperature@adc_value	;volatile
  4476  012638  C23D  F06D         	movff	_os+61,adc_calculate_temperature@adc_value+1	;volatile
  4477  01263C  0E06               	movlw	6
  4478  01263E  0100               	movlb	0	; () banked
  4479  012640  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  4480  012642  EC5C  F0AF         	call	_adc_calculate_temperature	;wreg free
  4481  012646  C06C  F23E         	movff	?_adc_calculate_temperature,_os+62	;volatile
  4482  01264A  C06D  F23F         	movff	?_adc_calculate_temperature+1,_os+63	;volatile
  4483                           
  4484                           ;main.c: 202: os.temperature_external_2_adc = 0;
  4485  01264E  0E00               	movlw	0
  4486  012650  0102               	movlb	2	; () banked
  4487  012652  6F3D               	movwf	(_os+61)& (0+255),b	;volatile
  4488  012654  0E00               	movlw	0
  4489  012656  6F3C               	movwf	(_os+60)& (0+255),b	;volatile
  4490                           
  4491                           ; BSR set to: 2
  4492                           ;main.c: 203: adc_calibrate();
  4493  012658  ECB1  F0D5         	call	_adc_calibrate	;wreg free
  4494                           
  4495                           ;main.c: 205: if(os.temperature_onboard>3000)
  4496  01265C  0102               	movlb	2	; () banked
  4497  01265E  BF37               	btfsc	(_os+55)& (0+255),7,b	;volatile
  4498  012660  D00A               	goto	l22598
  4499  012662  0EB9               	movlw	185
  4500  012664  0102               	movlb	2	; () banked
  4501  012666  5D36               	subwf	(_os+54)& (0+255),w,b	;volatile
  4502  012668  0E0B               	movlw	11
  4503  01266A  0102               	movlb	2	; () banked
  4504  01266C  5937               	subwfb	(_os+55)& (0+255),w,b	;volatile
  4505  01266E  A0D8               	btfss	status,0,c
  4506  012670  D002               	goto	l22598
  4507                           
  4508                           ; BSR set to: 2
  4509                           ;main.c: 206: {
  4510                           ;main.c: 207: LATDbits.LD1 = 1;
  4511  012672  828C               	bsf	3980,1,c	;volatile
  4512                           
  4513                           ;main.c: 208: }
  4514  012674  D00B               	goto	l22602
  4515  012676                     l22598:
  4516                           
  4517                           ; BSR set to: 2
  4518                           ;main.c: 209: else if(os.temperature_onboard<2500)
  4519  012676  0102               	movlb	2	; () banked
  4520  012678  BF37               	btfsc	(_os+55)& (0+255),7,b	;volatile
  4521  01267A  D007               	goto	l22600
  4522  01267C  0EC4               	movlw	196
  4523  01267E  0102               	movlb	2	; () banked
  4524  012680  5D36               	subwf	(_os+54)& (0+255),w,b	;volatile
  4525  012682  0E09               	movlw	9
  4526  012684  0102               	movlb	2	; () banked
  4527  012686  5937               	subwfb	(_os+55)& (0+255),w,b	;volatile
  4528  012688  A0D8               	btfss	status,0,c
  4529  01268A                     l22600:
  4530                           
  4531                           ; BSR set to: 2
  4532                           ;main.c: 210: {
  4533                           ;main.c: 211: LATDbits.LD1 = 0;
  4534  01268A  928C               	bcf	3980,1,c	;volatile
  4535  01268C                     l22602:
  4536                           
  4537                           ; BSR set to: 2
  4538                           ;main.c: 212: }
  4539                           ;main.c: 213: display_prepare(os.display_mode);
  4540  01268C  0102               	movlb	2	; () banked
  4541  01268E  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  4542  012690  ECB8  F0C3         	call	_display_prepare
  4543                           
  4544                           ;main.c: 214: break;
  4545  012694  D03C               	goto	l22612
  4546  012696                     l22604:
  4547                           
  4548                           ;main.c: 217: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4549  012696  ECE6  F0D5         	call	_ui_get_status	;wreg free
  4550  01269A  0A05               	xorlw	5
  4551  01269C  A4D8               	btfss	status,2,c
  4552  01269E  D037               	goto	l22612
  4553                           
  4554                           ;main.c: 218: {
  4555                           ;main.c: 219: display_update();
  4556  0126A0  EC2F  F0C3         	call	_display_update	;wreg free
  4557                           
  4558                           ;main.c: 222: }
  4559                           
  4560                           ;main.c: 220: }
  4561                           ;main.c: 221: break;
  4562  0126A4  D034               	goto	l22612
  4563  0126A6                     l22610:
  4564  0126A6  0102               	movlb	2	; () banked
  4565  0126A8  5108               	movf	(_os+8)& (0+255),w,b	;volatile
  4566  0126AA  0B0F               	andlw	15
  4567  0126AC  0100               	movlb	0	; () banked
  4568  0126AE  6FD5               	movwf	??_main& (0+255),b
  4569  0126B0  6BD6               	clrf	(??_main+1)& (0+255),b
  4570                           
  4571                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4572                           ; Switch size 1, requested type "space"
  4573                           ; Number of cases is 1, Range of values is 0 to 0
  4574                           ; switch strategies available:
  4575                           ; Name         Instructions Cycles
  4576                           ; simple_byte            4     3 (average)
  4577                           ;	Chosen strategy is simple_byte
  4578  0126B2  0100               	movlb	0	; () banked
  4579  0126B4  51D6               	movf	(??_main+1)& (0+255),w,b
  4580  0126B6  0A00               	xorlw	0	; case 0
  4581  0126B8  A4D8               	btfss	status,2,c
  4582  0126BA  D029               	goto	l22612
  4583                           
  4584                           ; BSR set to: 0
  4585                           ; Switch size 1, requested type "space"
  4586                           ; Number of cases is 13, Range of values is 0 to 15
  4587                           ; switch strategies available:
  4588                           ; Name         Instructions Cycles
  4589                           ; simple_byte           40    21 (average)
  4590                           ;	Chosen strategy is simple_byte
  4591  0126BC  0100               	movlb	0	; () banked
  4592  0126BE  51D5               	movf	??_main& (0+255),w,b
  4593  0126C0  0A00               	xorlw	0	; case 0
  4594  0126C2  B4D8               	btfsc	status,2,c
  4595  0126C4  D6CE               	goto	l22532
  4596  0126C6  0A01               	xorlw	1	; case 1
  4597  0126C8  B4D8               	btfsc	status,2,c
  4598  0126CA  D6D5               	goto	l22534
  4599  0126CC  0A02               	xorlw	2	; case 3
  4600  0126CE  B4D8               	btfsc	status,2,c
  4601  0126D0  D6D5               	goto	l22536
  4602  0126D2  0A07               	xorlw	7	; case 4
  4603  0126D4  B4D8               	btfsc	status,2,c
  4604  0126D6  D6F9               	goto	l22542
  4605  0126D8  0A01               	xorlw	1	; case 5
  4606  0126DA  B4D8               	btfsc	status,2,c
  4607  0126DC  D700               	goto	l22546
  4608  0126DE  0A03               	xorlw	3	; case 6
  4609  0126E0  B4D8               	btfsc	status,2,c
  4610  0126E2  D700               	goto	l22548
  4611  0126E4  0A0E               	xorlw	14	; case 8
  4612  0126E6  B4D8               	btfsc	status,2,c
  4613  0126E8  D724               	goto	l22556
  4614  0126EA  0A01               	xorlw	1	; case 9
  4615  0126EC  B4D8               	btfsc	status,2,c
  4616  0126EE  D724               	goto	l22560
  4617  0126F0  0A02               	xorlw	2	; case 11
  4618  0126F2  B4D8               	btfsc	status,2,c
  4619  0126F4  D748               	goto	l22566
  4620  0126F6  0A07               	xorlw	7	; case 12
  4621  0126F8  B4D8               	btfsc	status,2,c
  4622  0126FA  D757               	goto	l22578
  4623  0126FC  0A01               	xorlw	1	; case 13
  4624  0126FE  B4D8               	btfsc	status,2,c
  4625  012700  D772               	goto	l22580
  4626  012702  0A03               	xorlw	3	; case 14
  4627  012704  B4D8               	btfsc	status,2,c
  4628  012706  D772               	goto	l22582
  4629  012708  0A01               	xorlw	1	; case 15
  4630  01270A  B4D8               	btfsc	status,2,c
  4631  01270C  D7C4               	goto	l22604
  4632  01270E                     l22612:
  4633                           
  4634                           ;main.c: 223: os.done = 1;
  4635  01270E  0E01               	movlw	1
  4636  012710  0102               	movlb	2	; () banked
  4637  012712  6F09               	movwf	(_os+9)& (0+255),b	;volatile
  4638                           
  4639                           ; BSR set to: 2
  4640                           
  4641                           ; BSR set to: 2
  4642  012714  D656               	goto	l22516
  4643  012716                     __end_of_main:
  4644                           	opt stack 0
  4645                           tblptru	equ	0xFF8
  4646                           tblptrh	equ	0xFF7
  4647                           tblptrl	equ	0xFF6
  4648                           tablat	equ	0xFF5
  4649                           postinc0	equ	0xFEE
  4650                           wreg	equ	0xFE8
  4651                           postdec1	equ	0xFE5
  4652                           fsr1h	equ	0xFE2
  4653                           fsr1l	equ	0xFE1
  4654                           postinc2	equ	0xFDE
  4655                           postdec2	equ	0xFDD
  4656                           fsr2h	equ	0xFDA
  4657                           fsr2l	equ	0xFD9
  4658                           status	equ	0xFD8
  4659                           
  4660 ;; *************** function _ui_run *****************
  4661 ;; Defined at:
  4662 ;;		line 334 in file "ui.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;		None
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;		None
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  1    wreg      void 
  4669 ;; Registers used:
  4670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4680 ;;Total ram usage:        0 bytes
  4681 ;; Hardware stack levels used:    1
  4682 ;; Hardware stack levels required when called:   15
  4683 ;; This function calls:
  4684 ;;		__ui_encoder
  4685 ;;		_i2c_digipot_backlight
  4686 ;;		_i2c_digipot_reset_off
  4687 ;;		_i2c_digipot_reset_on
  4688 ;;		_i2c_display_send_init_sequence
  4689 ;;		_system_encoder_disable
  4690 ;;		_system_encoder_enable
  4691 ;; This function is called by:
  4692 ;;		_main
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text1
  4697  016206                     __ptext1:
  4698                           	opt stack 0
  4699  016206                     _ui_run:
  4700                           	opt stack 15
  4701                           
  4702                           ;ui.c: 336: switch(userInterfaceStatus)
  4703                           
  4704                           ; BSR set to: 2
  4705                           ;incstack = 0
  4706  016206  D073               	goto	l22126
  4707  016208                     l22070:
  4708                           
  4709                           ;ui.c: 339: if (os.buttonCount!=0)
  4710  016208  0102               	movlb	2	; () banked
  4711  01620A  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  4712  01620C  B4D8               	btfsc	status,2,c
  4713  01620E  0012               	return	
  4714                           
  4715                           ; BSR set to: 2
  4716                           ;ui.c: 340: {
  4717                           ;ui.c: 342: LATCbits.LC2 = 1;
  4718  016210  848B               	bsf	3979,2,c	;volatile
  4719                           
  4720                           ; BSR set to: 2
  4721                           ;ui.c: 343: os.buttonCount = 0;
  4722  016212  0E00               	movlw	0
  4723  016214  0102               	movlb	2	; () banked
  4724  016216  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  4725                           
  4726                           ;ui.c: 345: system_ui_inactive_count = 0;
  4727  016218  0E00               	movlw	0
  4728  01621A  0101               	movlb	1	; () banked
  4729  01621C  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4730  01621E  0E00               	movlw	0
  4731  016220  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4732                           
  4733                           ;ui.c: 346: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  4734  016222  0E01               	movlw	1
  4735  016224  0101               	movlb	1	; () banked
  4736  016226  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4737                           
  4738                           ; BSR set to: 1
  4739                           ;ui.c: 347: }
  4740                           ;ui.c: 348: break;
  4741  016228  0012               	return	
  4742  01622A                     l1847:
  4743                           
  4744                           ; BSR set to: 1
  4745                           ;ui.c: 357: LATDbits.LD0 = 0;
  4746  01622A  908C               	bcf	3980,0,c	;volatile
  4747                           
  4748                           ; BSR set to: 1
  4749                           ;ui.c: 359: system_ui_inactive_count = 0;
  4750  01622C  0E00               	movlw	0
  4751  01622E  0101               	movlb	1	; () banked
  4752  016230  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4753  016232  0E00               	movlw	0
  4754  016234  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4755                           
  4756                           ;ui.c: 360: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  4757  016236  0E02               	movlw	2
  4758  016238  0101               	movlb	1	; () banked
  4759  01623A  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4760                           
  4761                           ;ui.c: 361: break;
  4762  01623C  0012               	return	
  4763  01623E                     l22078:
  4764                           
  4765                           ; BSR set to: 1
  4766                           ;ui.c: 365: i2c_digipot_reset_on();
  4767  01623E  EC16  F0D2         	call	_i2c_digipot_reset_on	;wreg free
  4768                           
  4769                           ;ui.c: 367: system_ui_inactive_count = 0;
  4770  016242  0E00               	movlw	0
  4771  016244  0101               	movlb	1	; () banked
  4772  016246  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4773  016248  0E00               	movlw	0
  4774  01624A  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4775                           
  4776                           ; BSR set to: 1
  4777                           ;ui.c: 368: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  4778  01624C  0E03               	movlw	3
  4779  01624E  0101               	movlb	1	; () banked
  4780  016250  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4781                           
  4782                           ;ui.c: 369: break;
  4783  016252  0012               	return	
  4784  016254                     l22084:
  4785                           
  4786                           ; BSR set to: 1
  4787                           ;ui.c: 372: ++system_ui_inactive_count;
  4788  016254  0101               	movlb	1	; () banked
  4789  016256  4BE7               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4790  016258  2BE8               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4791                           
  4792                           ; BSR set to: 1
  4793                           ;ui.c: 374: if (system_ui_inactive_count>3)
  4794  01625A  0101               	movlb	1	; () banked
  4795  01625C  51E8               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  4796  01625E  E105               	bnz	u21850
  4797  016260  0E04               	movlw	4
  4798  016262  0101               	movlb	1	; () banked
  4799  016264  5DE7               	subwf	_system_ui_inactive_count& (0+255),w,b
  4800  016266  A0D8               	btfss	status,0,c
  4801  016268  0012               	return	
  4802  01626A                     u21850:
  4803                           
  4804                           ; BSR set to: 1
  4805                           ;ui.c: 375: {
  4806                           ;ui.c: 376: i2c_digipot_reset_off();
  4807  01626A  EC2C  F0D2         	call	_i2c_digipot_reset_off	;wreg free
  4808                           
  4809                           ;ui.c: 377: system_ui_inactive_count = 0;
  4810  01626E  0E00               	movlw	0
  4811  016270  0101               	movlb	1	; () banked
  4812  016272  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4813  016274  0E00               	movlw	0
  4814  016276  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4815                           
  4816                           ; BSR set to: 1
  4817                           ;ui.c: 378: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  4818  016278  0E04               	movlw	4
  4819  01627A  0101               	movlb	1	; () banked
  4820  01627C  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4821                           
  4822                           ; BSR set to: 1
  4823                           ;ui.c: 379: }
  4824                           ;ui.c: 380: break;
  4825  01627E  0012               	return	
  4826  016280                     l22094:
  4827                           
  4828                           ; BSR set to: 1
  4829                           ;ui.c: 384: i2c_display_send_init_sequence();
  4830  016280  EC87  F0D1         	call	_i2c_display_send_init_sequence	;wreg free
  4831                           
  4832                           ;ui.c: 386: i2c_digipot_backlight(150);
  4833  016284  0E96               	movlw	150
  4834  016286  EC1F  F0D1         	call	_i2c_digipot_backlight
  4835                           
  4836                           ;ui.c: 388: system_encoder_enable();
  4837  01628A  EC94  F0D5         	call	_system_encoder_enable	;wreg free
  4838                           
  4839                           ;ui.c: 390: system_ui_inactive_count = 0;
  4840  01628E  0E00               	movlw	0
  4841  016290  0101               	movlb	1	; () banked
  4842  016292  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4843  016294  0E00               	movlw	0
  4844  016296  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4845                           
  4846                           ; BSR set to: 1
  4847                           ;ui.c: 391: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  4848  016298  0E05               	movlw	5
  4849  01629A  0101               	movlb	1	; () banked
  4850  01629C  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4851                           
  4852                           ;ui.c: 392: break;
  4853  01629E  0012               	return	
  4854  0162A0                     l22104:
  4855                           
  4856                           ; BSR set to: 1
  4857                           ;ui.c: 395: if (os.encoderCount==0 && os.buttonCount==0)
  4858  0162A0  0102               	movlb	2	; () banked
  4859  0162A2  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  4860  0162A4  A4D8               	btfss	status,2,c
  4861  0162A6  D01B               	goto	l22120
  4862                           
  4863                           ; BSR set to: 2
  4864  0162A8  0102               	movlb	2	; () banked
  4865  0162AA  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  4866  0162AC  A4D8               	btfss	status,2,c
  4867  0162AE  D017               	goto	l22120
  4868                           
  4869                           ; BSR set to: 2
  4870                           ;ui.c: 396: {
  4871                           ;ui.c: 397: ++system_ui_inactive_count;
  4872  0162B0  0101               	movlb	1	; () banked
  4873  0162B2  4BE7               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4874  0162B4  2BE8               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4875                           
  4876                           ; BSR set to: 1
  4877                           ;ui.c: 398: if(system_ui_inactive_count > 20000)
  4878  0162B6  0E21               	movlw	33
  4879  0162B8  0101               	movlb	1	; () banked
  4880  0162BA  5DE7               	subwf	_system_ui_inactive_count& (0+255),w,b
  4881  0162BC  0E4E               	movlw	78
  4882  0162BE  0101               	movlb	1	; () banked
  4883  0162C0  59E8               	subwfb	(_system_ui_inactive_count+1)& (0+255),w,b
  4884  0162C2  A0D8               	btfss	status,0,c
  4885  0162C4  0012               	return	
  4886                           
  4887                           ; BSR set to: 1
  4888                           ;ui.c: 399: {
  4889                           ;ui.c: 401: system_encoder_disable();
  4890  0162C6  ECE3  F0D5         	call	_system_encoder_disable	;wreg free
  4891                           
  4892                           ;ui.c: 403: LATDbits.LD0 = 1;
  4893  0162CA  808C               	bsf	3980,0,c	;volatile
  4894                           
  4895                           ;ui.c: 406: system_ui_inactive_count = 0;
  4896  0162CC  0E00               	movlw	0
  4897  0162CE  0101               	movlb	1	; () banked
  4898  0162D0  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4899  0162D2  0E00               	movlw	0
  4900  0162D4  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4901                           
  4902                           ; BSR set to: 1
  4903                           ;ui.c: 407: userInterfaceStatus = USER_INTERFACE_STATUS_OFF;
  4904  0162D6  0E00               	movlw	0
  4905  0162D8  0101               	movlb	1	; () banked
  4906  0162DA  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  4907                           
  4908                           ; BSR set to: 1
  4909                           ;ui.c: 408: }
  4910                           ;ui.c: 409: }
  4911  0162DC  0012               	return	
  4912  0162DE                     l22120:
  4913                           
  4914                           ;ui.c: 410: else
  4915                           ;ui.c: 411: {
  4916                           ;ui.c: 412: system_ui_inactive_count = 0;
  4917  0162DE  0E00               	movlw	0
  4918  0162E0  0101               	movlb	1	; () banked
  4919  0162E2  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4920  0162E4  0E00               	movlw	0
  4921  0162E6  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  4922                           
  4923                           ; BSR set to: 1
  4924                           ;ui.c: 413: _ui_encoder();
  4925  0162E8  ECE3  F085         	call	__ui_encoder	;wreg free
  4926                           
  4927                           ;ui.c: 416: }
  4928                           
  4929                           ;ui.c: 414: }
  4930                           ;ui.c: 415: break;
  4931  0162EC  0012               	return	
  4932  0162EE                     l22126:
  4933  0162EE  0101               	movlb	1	; () banked
  4934  0162F0  51F3               	movf	_userInterfaceStatus& (0+255),w,b
  4935                           
  4936                           ; Switch size 1, requested type "space"
  4937                           ; Number of cases is 6, Range of values is 0 to 5
  4938                           ; switch strategies available:
  4939                           ; Name         Instructions Cycles
  4940                           ; simple_byte           19    10 (average)
  4941                           ;	Chosen strategy is simple_byte
  4942  0162F2  0A00               	xorlw	0	; case 0
  4943  0162F4  B4D8               	btfsc	status,2,c
  4944  0162F6  D788               	goto	l22070
  4945  0162F8  0A01               	xorlw	1	; case 1
  4946  0162FA  B4D8               	btfsc	status,2,c
  4947  0162FC  D796               	goto	l1847
  4948  0162FE  0A03               	xorlw	3	; case 2
  4949  016300  B4D8               	btfsc	status,2,c
  4950  016302  D79D               	goto	l22078
  4951  016304  0A01               	xorlw	1	; case 3
  4952  016306  B4D8               	btfsc	status,2,c
  4953  016308  D7A5               	goto	l22084
  4954  01630A  0A07               	xorlw	7	; case 4
  4955  01630C  B4D8               	btfsc	status,2,c
  4956  01630E  D7B8               	goto	l22094
  4957  016310  0A01               	xorlw	1	; case 5
  4958  016312  A4D8               	btfss	status,2,c
  4959  016314  0012               	return	
  4960  016316  D7C4               	goto	l22104
  4961  016318                     __end_of_ui_run:
  4962                           	opt stack 0
  4963                           tblptru	equ	0xFF8
  4964                           tblptrh	equ	0xFF7
  4965                           tblptrl	equ	0xFF6
  4966                           tablat	equ	0xFF5
  4967                           postinc0	equ	0xFEE
  4968                           wreg	equ	0xFE8
  4969                           postdec1	equ	0xFE5
  4970                           fsr1h	equ	0xFE2
  4971                           fsr1l	equ	0xFE1
  4972                           postinc2	equ	0xFDE
  4973                           postdec2	equ	0xFDD
  4974                           fsr2h	equ	0xFDA
  4975                           fsr2l	equ	0xFD9
  4976                           status	equ	0xFD8
  4977                           
  4978 ;; *************** function _system_encoder_enable *****************
  4979 ;; Defined at:
  4980 ;;		line 198 in file "os.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;		None
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;		None
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  1    wreg      void 
  4987 ;; Registers used:
  4988 ;;		wreg, status,2
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4998 ;;Total ram usage:        0 bytes
  4999 ;; Hardware stack levels used:    1
  5000 ;; Hardware stack levels required when called:   10
  5001 ;; This function calls:
  5002 ;;		Nothing
  5003 ;; This function is called by:
  5004 ;;		_ui_run
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	text2
  5009  01AB28                     __ptext2:
  5010                           	opt stack 0
  5011  01AB28                     _system_encoder_enable:
  5012                           	opt stack 19
  5013                           
  5014                           ;os.c: 201: INTCON3bits.INT2IF = 0;
  5015                           
  5016                           ;incstack = 0
  5017  01AB28  92F0               	bcf	intcon3,1,c	;volatile
  5018                           
  5019                           ;os.c: 202: INTCON3bits.INT3IF = 0;
  5020  01AB2A  94F0               	bcf	intcon3,2,c	;volatile
  5021                           
  5022                           ;os.c: 205: os.encoderCount = 0;
  5023  01AB2C  0E00               	movlw	0
  5024  01AB2E  0102               	movlb	2	; () banked
  5025  01AB30  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5026                           
  5027                           ; BSR set to: 2
  5028                           ;os.c: 208: INTCON3bits.INT2IE = 1;
  5029  01AB32  88F0               	bsf	intcon3,4,c	;volatile
  5030                           
  5031                           ; BSR set to: 2
  5032                           ;os.c: 209: INTCON3bits.INT3IE = 1;
  5033  01AB34  8AF0               	bsf	intcon3,5,c	;volatile
  5034                           
  5035                           ; BSR set to: 2
  5036  01AB36  0012               	return		;funcret
  5037  01AB38                     __end_of_system_encoder_enable:
  5038                           	opt stack 0
  5039                           tblptru	equ	0xFF8
  5040                           tblptrh	equ	0xFF7
  5041                           tblptrl	equ	0xFF6
  5042                           tablat	equ	0xFF5
  5043                           intcon3	equ	0xFF0
  5044                           postinc0	equ	0xFEE
  5045                           wreg	equ	0xFE8
  5046                           postdec1	equ	0xFE5
  5047                           fsr1h	equ	0xFE2
  5048                           fsr1l	equ	0xFE1
  5049                           postinc2	equ	0xFDE
  5050                           postdec2	equ	0xFDD
  5051                           fsr2h	equ	0xFDA
  5052                           fsr2l	equ	0xFD9
  5053                           status	equ	0xFD8
  5054                           
  5055 ;; *************** function _system_encoder_disable *****************
  5056 ;; Defined at:
  5057 ;;		line 191 in file "os.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;		None
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;		None
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  1    wreg      void 
  5064 ;; Registers used:
  5065 ;;		None
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5075 ;;Total ram usage:        0 bytes
  5076 ;; Hardware stack levels used:    1
  5077 ;; Hardware stack levels required when called:   10
  5078 ;; This function calls:
  5079 ;;		Nothing
  5080 ;; This function is called by:
  5081 ;;		_ui_run
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           	psect	text3
  5086  01ABC6                     __ptext3:
  5087                           	opt stack 0
  5088  01ABC6                     _system_encoder_disable:
  5089                           	opt stack 19
  5090                           
  5091                           ;os.c: 194: INTCON3bits.INT2IE = 0;
  5092                           
  5093                           ; BSR set to: 2
  5094                           ;incstack = 0
  5095  01ABC6  98F0               	bcf	intcon3,4,c	;volatile
  5096                           
  5097                           ;os.c: 195: INTCON3bits.INT3IE = 0;
  5098  01ABC8  9AF0               	bcf	intcon3,5,c	;volatile
  5099  01ABCA  0012               	return		;funcret
  5100  01ABCC                     __end_of_system_encoder_disable:
  5101                           	opt stack 0
  5102                           tblptru	equ	0xFF8
  5103                           tblptrh	equ	0xFF7
  5104                           tblptrl	equ	0xFF6
  5105                           tablat	equ	0xFF5
  5106                           intcon3	equ	0xFF0
  5107                           postinc0	equ	0xFEE
  5108                           wreg	equ	0xFE8
  5109                           postdec1	equ	0xFE5
  5110                           fsr1h	equ	0xFE2
  5111                           fsr1l	equ	0xFE1
  5112                           postinc2	equ	0xFDE
  5113                           postdec2	equ	0xFDD
  5114                           fsr2h	equ	0xFDA
  5115                           fsr2l	equ	0xFD9
  5116                           status	equ	0xFD8
  5117                           
  5118 ;; *************** function _i2c_display_send_init_sequence *****************
  5119 ;; Defined at:
  5120 ;;		line 248 in file "i2c.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;		None
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;  init_sequenc    9   10[BANK0 ] unsigned char [9]
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  1    wreg      void 
  5127 ;; Registers used:
  5128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5135 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5137 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5138 ;;Total ram usage:        9 bytes
  5139 ;; Hardware stack levels used:    1
  5140 ;; Hardware stack levels required when called:   12
  5141 ;; This function calls:
  5142 ;;		__i2c_write
  5143 ;;		_i2c_set_frequency
  5144 ;; This function is called by:
  5145 ;;		_ui_run
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           	psect	text4
  5150  01A30E                     __ptext4:
  5151                           	opt stack 0
  5152  01A30E                     _i2c_display_send_init_sequence:
  5153                           	opt stack 17
  5154                           
  5155                           ;i2c.c: 250: uint8_t init_sequence[9] = {
  5156                           ;i2c.c: 251: 0x3A,
  5157                           ;i2c.c: 253: 0b00011110,
  5158                           ;i2c.c: 254: 0x39,
  5159                           ;i2c.c: 256: 0b00001100,
  5160                           ;i2c.c: 257: 0x74,
  5161                           ;i2c.c: 258: 0b1011100,
  5162                           ;i2c.c: 259: 0x6d,
  5163                           ;i2c.c: 260: 0x0c,
  5164                           ;i2c.c: 261: 0x01
  5165                           ;i2c.c: 262: };
  5166                           
  5167                           ;incstack = 0
  5168  01A30E  EE23  F0ED         	lfsr	2,i2c_display_send_init_sequence@F8354
  5169  01A312  EE10  F06A         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  5170  01A316  0E08               	movlw	8
  5171  01A318                     u19541:
  5172  01A318  CFDB FFE3          	movff	plusw2,plusw1
  5173  01A31C  06E8               	decf	wreg,f,c
  5174  01A31E  E2FC               	bc	u19541
  5175                           
  5176                           ;i2c.c: 265: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  5177  01A320  0E00               	movlw	0
  5178  01A322  EC5B  F0C8         	call	_i2c_set_frequency
  5179                           
  5180                           ;i2c.c: 268: _i2c_write(0b01111000, &init_sequence[0], 9);
  5181  01A326  0E6A               	movlw	low i2c_display_send_init_sequence@init_sequence
  5182  01A328  0100               	movlb	0	; () banked
  5183  01A32A  6F65               	movwf	__i2c_write@data& (0+255),b
  5184  01A32C  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  5185  01A32E  0100               	movlb	0	; () banked
  5186  01A330  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5187  01A332  0E09               	movlw	9
  5188  01A334  0100               	movlb	0	; () banked
  5189  01A336  6F67               	movwf	__i2c_write@length& (0+255),b
  5190  01A338  0E78               	movlw	120
  5191  01A33A  ECDC  F0CC         	call	__i2c_write
  5192  01A33E  0012               	return		;funcret
  5193  01A340                     __end_of_i2c_display_send_init_sequence:
  5194                           	opt stack 0
  5195                           tblptru	equ	0xFF8
  5196                           tblptrh	equ	0xFF7
  5197                           tblptrl	equ	0xFF6
  5198                           tablat	equ	0xFF5
  5199                           intcon3	equ	0xFF0
  5200                           postinc0	equ	0xFEE
  5201                           wreg	equ	0xFE8
  5202                           postdec1	equ	0xFE5
  5203                           plusw1	equ	0xFE3
  5204                           fsr1h	equ	0xFE2
  5205                           fsr1l	equ	0xFE1
  5206                           postinc2	equ	0xFDE
  5207                           postdec2	equ	0xFDD
  5208                           plusw2	equ	0xFDB
  5209                           fsr2h	equ	0xFDA
  5210                           fsr2l	equ	0xFD9
  5211                           status	equ	0xFD8
  5212                           
  5213 ;; *************** function _i2c_digipot_reset_on *****************
  5214 ;; Defined at:
  5215 ;;		line 425 in file "i2c.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;		None
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  data_array      2   10[BANK0 ] unsigned char [2]
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  1    wreg      void 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5230 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5232 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5233 ;;Total ram usage:        2 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:   12
  5236 ;; This function calls:
  5237 ;;		__i2c_write
  5238 ;;		_i2c_set_frequency
  5239 ;; This function is called by:
  5240 ;;		_ui_run
  5241 ;;		_i2c_display_init
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           	psect	text5
  5246  01A42C                     __ptext5:
  5247                           	opt stack 0
  5248  01A42C                     _i2c_digipot_reset_on:
  5249                           	opt stack 17
  5250                           
  5251                           ;i2c.c: 427: uint8_t data_array[2];
  5252                           ;i2c.c: 428: data_array[0] = 0x10 | 0x00;
  5253                           
  5254                           ;incstack = 0
  5255  01A42C  0E10               	movlw	16
  5256  01A42E  0100               	movlb	0	; () banked
  5257  01A430  6F6A               	movwf	i2c_digipot_reset_on@data_array& (0+255),b
  5258                           
  5259                           ;i2c.c: 430: data_array[1] = 0x00;
  5260  01A432  0E00               	movlw	0
  5261  01A434  0100               	movlb	0	; () banked
  5262  01A436  6F6B               	movwf	(i2c_digipot_reset_on@data_array+1)& (0+255),b
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;i2c.c: 433: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5266  01A438  0E02               	movlw	2
  5267  01A43A  EC5B  F0C8         	call	_i2c_set_frequency
  5268                           
  5269                           ;i2c.c: 435: _i2c_write(0b01011100, &data_array[0], 2);
  5270  01A43E  0E6A               	movlw	low i2c_digipot_reset_on@data_array
  5271  01A440  0100               	movlb	0	; () banked
  5272  01A442  6F65               	movwf	__i2c_write@data& (0+255),b
  5273  01A444  0E00               	movlw	high i2c_digipot_reset_on@data_array
  5274  01A446  0100               	movlb	0	; () banked
  5275  01A448  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5276  01A44A  0E02               	movlw	2
  5277  01A44C  0100               	movlb	0	; () banked
  5278  01A44E  6F67               	movwf	__i2c_write@length& (0+255),b
  5279  01A450  0E5C               	movlw	92
  5280  01A452  ECDC  F0CC         	call	__i2c_write
  5281  01A456  0012               	return		;funcret
  5282  01A458                     __end_of_i2c_digipot_reset_on:
  5283                           	opt stack 0
  5284                           tblptru	equ	0xFF8
  5285                           tblptrh	equ	0xFF7
  5286                           tblptrl	equ	0xFF6
  5287                           tablat	equ	0xFF5
  5288                           intcon3	equ	0xFF0
  5289                           postinc0	equ	0xFEE
  5290                           wreg	equ	0xFE8
  5291                           postdec1	equ	0xFE5
  5292                           plusw1	equ	0xFE3
  5293                           fsr1h	equ	0xFE2
  5294                           fsr1l	equ	0xFE1
  5295                           postinc2	equ	0xFDE
  5296                           postdec2	equ	0xFDD
  5297                           plusw2	equ	0xFDB
  5298                           fsr2h	equ	0xFDA
  5299                           fsr2l	equ	0xFD9
  5300                           status	equ	0xFD8
  5301                           
  5302 ;; *************** function _i2c_digipot_reset_off *****************
  5303 ;; Defined at:
  5304 ;;		line 438 in file "i2c.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;		None
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;  data_array      2   10[BANK0 ] unsigned char [2]
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      void 
  5311 ;; Registers used:
  5312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5319 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5321 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5322 ;;Total ram usage:        2 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:   12
  5325 ;; This function calls:
  5326 ;;		__i2c_write
  5327 ;;		_i2c_set_frequency
  5328 ;; This function is called by:
  5329 ;;		_ui_run
  5330 ;;		_i2c_display_init
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           	psect	text6
  5335  01A458                     __ptext6:
  5336                           	opt stack 0
  5337  01A458                     _i2c_digipot_reset_off:
  5338                           	opt stack 17
  5339                           
  5340                           ;i2c.c: 440: uint8_t data_array[2];
  5341                           ;i2c.c: 441: data_array[0] = 0x10 | 0x00;
  5342                           
  5343                           ;incstack = 0
  5344  01A458  0E10               	movlw	16
  5345  01A45A  0100               	movlb	0	; () banked
  5346  01A45C  6F6A               	movwf	i2c_digipot_reset_off@data_array& (0+255),b
  5347                           
  5348                           ;i2c.c: 442: data_array[1] = 0x80;
  5349  01A45E  0E80               	movlw	128
  5350  01A460  0100               	movlb	0	; () banked
  5351  01A462  6F6B               	movwf	(i2c_digipot_reset_off@data_array+1)& (0+255),b
  5352                           
  5353                           ; BSR set to: 0
  5354                           ;i2c.c: 445: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5355  01A464  0E02               	movlw	2
  5356  01A466  EC5B  F0C8         	call	_i2c_set_frequency
  5357                           
  5358                           ;i2c.c: 447: _i2c_write(0b01011100, &data_array[0], 2);
  5359  01A46A  0E6A               	movlw	low i2c_digipot_reset_off@data_array
  5360  01A46C  0100               	movlb	0	; () banked
  5361  01A46E  6F65               	movwf	__i2c_write@data& (0+255),b
  5362  01A470  0E00               	movlw	high i2c_digipot_reset_off@data_array
  5363  01A472  0100               	movlb	0	; () banked
  5364  01A474  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5365  01A476  0E02               	movlw	2
  5366  01A478  0100               	movlb	0	; () banked
  5367  01A47A  6F67               	movwf	__i2c_write@length& (0+255),b
  5368  01A47C  0E5C               	movlw	92
  5369  01A47E  ECDC  F0CC         	call	__i2c_write
  5370  01A482  0012               	return		;funcret
  5371  01A484                     __end_of_i2c_digipot_reset_off:
  5372                           	opt stack 0
  5373                           tblptru	equ	0xFF8
  5374                           tblptrh	equ	0xFF7
  5375                           tblptrl	equ	0xFF6
  5376                           tablat	equ	0xFF5
  5377                           intcon3	equ	0xFF0
  5378                           postinc0	equ	0xFEE
  5379                           wreg	equ	0xFE8
  5380                           postdec1	equ	0xFE5
  5381                           plusw1	equ	0xFE3
  5382                           fsr1h	equ	0xFE2
  5383                           fsr1l	equ	0xFE1
  5384                           postinc2	equ	0xFDE
  5385                           postdec2	equ	0xFDD
  5386                           plusw2	equ	0xFDB
  5387                           fsr2h	equ	0xFDA
  5388                           fsr2l	equ	0xFD9
  5389                           status	equ	0xFD8
  5390                           
  5391 ;; *************** function _i2c_digipot_backlight *****************
  5392 ;; Defined at:
  5393 ;;		line 450 in file "i2c.c"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;  level           1    wreg     unsigned char 
  5396 ;; Auto vars:     Size  Location     Type
  5397 ;;  level           1   10[BANK0 ] unsigned char 
  5398 ;;  data_array      2   11[BANK0 ] unsigned char [2]
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  1    wreg      void 
  5401 ;; Registers used:
  5402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5409 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5411 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5412 ;;Total ram usage:        3 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; Hardware stack levels required when called:   12
  5415 ;; This function calls:
  5416 ;;		__i2c_write
  5417 ;;		_i2c_set_frequency
  5418 ;; This function is called by:
  5419 ;;		_ui_run
  5420 ;;		_i2c_display_init
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           	psect	text7
  5425  01A23E                     __ptext7:
  5426                           	opt stack 0
  5427  01A23E                     _i2c_digipot_backlight:
  5428                           	opt stack 17
  5429                           
  5430                           ;incstack = 0
  5431                           ;i2c_digipot_backlight@level stored from wreg
  5432  01A23E  0100               	movlb	0	; () banked
  5433  01A240  6F6A               	movwf	i2c_digipot_backlight@level& (0+255),b
  5434                           
  5435                           ;i2c.c: 452: uint8_t data_array[2];
  5436                           ;i2c.c: 453: data_array[0] = 0x00 | 0x00;
  5437  01A242  0E00               	movlw	0
  5438  01A244  0100               	movlb	0	; () banked
  5439  01A246  6F6B               	movwf	i2c_digipot_backlight@data_array& (0+255),b
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;i2c.c: 454: data_array[1] = level>>1;
  5443  01A248  0100               	movlb	0	; () banked
  5444  01A24A  90D8               	bcf	status,0,c
  5445  01A24C  316A               	rrcf	i2c_digipot_backlight@level& (0+255),w,b
  5446  01A24E  0100               	movlb	0	; () banked
  5447  01A250  6F6C               	movwf	(i2c_digipot_backlight@data_array+1)& (0+255),b
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;i2c.c: 457: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5451  01A252  0E02               	movlw	2
  5452  01A254  EC5B  F0C8         	call	_i2c_set_frequency
  5453                           
  5454                           ;i2c.c: 459: _i2c_write(0b01011100, &data_array[0], 2);
  5455  01A258  0E6B               	movlw	low i2c_digipot_backlight@data_array
  5456  01A25A  0100               	movlb	0	; () banked
  5457  01A25C  6F65               	movwf	__i2c_write@data& (0+255),b
  5458  01A25E  0E00               	movlw	high i2c_digipot_backlight@data_array
  5459  01A260  0100               	movlb	0	; () banked
  5460  01A262  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5461  01A264  0E02               	movlw	2
  5462  01A266  0100               	movlb	0	; () banked
  5463  01A268  6F67               	movwf	__i2c_write@length& (0+255),b
  5464  01A26A  0E5C               	movlw	92
  5465  01A26C  ECDC  F0CC         	call	__i2c_write
  5466  01A270  0012               	return		;funcret
  5467  01A272                     __end_of_i2c_digipot_backlight:
  5468                           	opt stack 0
  5469                           tblptru	equ	0xFF8
  5470                           tblptrh	equ	0xFF7
  5471                           tblptrl	equ	0xFF6
  5472                           tablat	equ	0xFF5
  5473                           intcon3	equ	0xFF0
  5474                           postinc0	equ	0xFEE
  5475                           wreg	equ	0xFE8
  5476                           postdec1	equ	0xFE5
  5477                           plusw1	equ	0xFE3
  5478                           fsr1h	equ	0xFE2
  5479                           fsr1l	equ	0xFE1
  5480                           postinc2	equ	0xFDE
  5481                           postdec2	equ	0xFDD
  5482                           plusw2	equ	0xFDB
  5483                           fsr2h	equ	0xFDA
  5484                           fsr2l	equ	0xFD9
  5485                           status	equ	0xFD8
  5486                           
  5487 ;; *************** function __ui_encoder *****************
  5488 ;; Defined at:
  5489 ;;		line 17 in file "ui.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;		None
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;		None
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  1    wreg      void 
  5496 ;; Registers used:
  5497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5507 ;;Total ram usage:        0 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; Hardware stack levels required when called:   14
  5510 ;; This function calls:
  5511 ;;		_rtcc_correct_day
  5512 ;;		_rtcc_decrement_day
  5513 ;;		_rtcc_decrement_hours
  5514 ;;		_rtcc_decrement_minutes
  5515 ;;		_rtcc_decrement_month
  5516 ;;		_rtcc_decrement_seconds
  5517 ;;		_rtcc_decrement_year
  5518 ;;		_rtcc_increment_day
  5519 ;;		_rtcc_increment_hours
  5520 ;;		_rtcc_increment_minutes
  5521 ;;		_rtcc_increment_month
  5522 ;;		_rtcc_increment_seconds
  5523 ;;		_rtcc_increment_year
  5524 ;;		_rtcc_write_eeprom
  5525 ;;		_system_output_off
  5526 ;;		_system_output_on
  5527 ;;		_system_output_toggle
  5528 ;; This function is called by:
  5529 ;;		_ui_run
  5530 ;; This function uses a non-reentrant model
  5531 ;;
  5532                           
  5533                           	psect	text8
  5534  010BC6                     __ptext8:
  5535                           	opt stack 0
  5536  010BC6                     __ui_encoder:
  5537                           	opt stack 15
  5538                           
  5539                           ;ui.c: 19: switch(os.display_mode)
  5540                           
  5541                           ;incstack = 0
  5542  010BC6  D1EB               	goto	l20884
  5543  010BC8                     l20660:
  5544                           
  5545                           ;ui.c: 22: if(os.encoderCount>0)
  5546  010BC8  0102               	movlb	2	; () banked
  5547  010BCA  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5548  010BCC  0A80               	xorlw	128
  5549  010BCE  0F7F               	addlw	-129
  5550  010BD0  A0D8               	btfss	status,0,c
  5551  010BD2  D002               	goto	l20664
  5552                           
  5553                           ; BSR set to: 2
  5554                           ;ui.c: 23: {
  5555                           ;ui.c: 24: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  5556  010BD4  0E10               	movlw	16
  5557  010BD6  D004               	goto	L1
  5558  010BD8                     l20664:
  5559                           
  5560                           ; BSR set to: 2
  5561                           ;ui.c: 26: else if(os.encoderCount<0)
  5562  010BD8  0102               	movlb	2	; () banked
  5563  010BDA  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  5564  010BDC  D003               	goto	l1747
  5565                           
  5566                           ; BSR set to: 2
  5567                           ;ui.c: 27: {
  5568                           ;ui.c: 28: os.display_mode = DISPLAY_MODE_TEMPERATURE;
  5569  010BDE  0E60               	movlw	96
  5570  010BE0                     L1:
  5571  010BE0  0102               	movlb	2	; () banked
  5572  010BE2  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5573  010BE4                     l1747:
  5574                           
  5575                           ; BSR set to: 2
  5576                           ;ui.c: 29: }
  5577                           ;ui.c: 30: if(os.buttonCount)
  5578  010BE4  0102               	movlb	2	; () banked
  5579  010BE6  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5580                           
  5581                           ; BSR set to: 2
  5582                           ;ui.c: 33: }
  5583                           ;ui.c: 34: os.encoderCount = 0;
  5584                           
  5585                           ; BSR set to: 2
  5586                           
  5587                           ;ui.c: 31: {
  5588                           ;ui.c: 32: ;
  5589  010BE8  0E00               	movlw	0
  5590  010BEA  0102               	movlb	2	; () banked
  5591  010BEC  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5592                           
  5593                           ;ui.c: 35: os.buttonCount = 0;
  5594  010BEE  0E00               	movlw	0
  5595  010BF0  0102               	movlb	2	; () banked
  5596  010BF2  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5597                           
  5598                           ;ui.c: 36: break;
  5599  010BF4  0012               	return	
  5600  010BF6                     l20670:
  5601                           
  5602                           ; BSR set to: 2
  5603                           ;ui.c: 39: if(os.encoderCount>0)
  5604  010BF6  0102               	movlb	2	; () banked
  5605  010BF8  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5606  010BFA  0A80               	xorlw	128
  5607  010BFC  0F7F               	addlw	-129
  5608  010BFE  A0D8               	btfss	status,0,c
  5609  010C00  D002               	goto	l20674
  5610                           
  5611                           ; BSR set to: 2
  5612                           ;ui.c: 40: {
  5613                           ;ui.c: 41: os.display_mode = DISPLAY_MODE_USB_CHARGER;
  5614  010C02  0E20               	movlw	32
  5615  010C04  D004               	goto	L2
  5616  010C06                     l20674:
  5617                           
  5618                           ; BSR set to: 2
  5619                           ;ui.c: 43: else if(os.encoderCount<0)
  5620  010C06  0102               	movlb	2	; () banked
  5621  010C08  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  5622  010C0A  D003               	goto	l1753
  5623                           
  5624                           ; BSR set to: 2
  5625                           ;ui.c: 44: {
  5626                           ;ui.c: 45: os.display_mode = DISPLAY_MODE_OVERVIEW;
  5627  010C0C  0E00               	movlw	0
  5628  010C0E                     L2:
  5629  010C0E  0102               	movlb	2	; () banked
  5630  010C10  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5631  010C12                     l1753:
  5632                           
  5633                           ; BSR set to: 2
  5634                           ;ui.c: 46: }
  5635                           ;ui.c: 47: if(os.buttonCount)
  5636  010C12  0102               	movlb	2	; () banked
  5637  010C14  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5638  010C16  B4D8               	btfsc	status,2,c
  5639  010C18  D003               	goto	l1755
  5640                           
  5641                           ; BSR set to: 2
  5642                           ;ui.c: 48: {
  5643                           ;ui.c: 49: os.display_mode = DISPLAY_MODE_DATETIME_YEAR;
  5644  010C1A  0E11               	movlw	17
  5645  010C1C  0102               	movlb	2	; () banked
  5646  010C1E  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5647  010C20                     l1755:
  5648                           
  5649                           ; BSR set to: 2
  5650                           ;ui.c: 50: }
  5651                           ;ui.c: 51: os.encoderCount = 0;
  5652  010C20  0E00               	movlw	0
  5653  010C22  0102               	movlb	2	; () banked
  5654  010C24  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5655                           
  5656                           ;ui.c: 52: os.buttonCount = 0;
  5657  010C26  0E00               	movlw	0
  5658  010C28  0102               	movlb	2	; () banked
  5659  010C2A  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5660                           
  5661                           ;ui.c: 53: break;
  5662  010C2C  0012               	return	
  5663  010C2E                     l20680:
  5664                           
  5665                           ; BSR set to: 2
  5666                           ;ui.c: 56: if(os.encoderCount>0)
  5667  010C2E  0102               	movlb	2	; () banked
  5668  010C30  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5669  010C32  0A80               	xorlw	128
  5670  010C34  0F7F               	addlw	-129
  5671  010C36  A0D8               	btfss	status,0,c
  5672  010C38  D003               	goto	l20684
  5673                           
  5674                           ; BSR set to: 2
  5675                           ;ui.c: 57: {
  5676                           ;ui.c: 58: rtcc_increment_year();
  5677  010C3A  EC9A  F0D2         	call	_rtcc_increment_year	;wreg free
  5678                           
  5679                           ;ui.c: 59: }
  5680  010C3E  D004               	goto	l20688
  5681  010C40                     l20684:
  5682                           
  5683                           ;ui.c: 60: else if(os.encoderCount<0)
  5684  010C40  0102               	movlb	2	; () banked
  5685  010C42  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5686                           
  5687                           ; BSR set to: 2
  5688                           ;ui.c: 61: {
  5689                           ;ui.c: 62: rtcc_decrement_year();
  5690  010C44  EC03  F0D3         	call	_rtcc_decrement_year	;wreg free
  5691  010C48                     l20688:
  5692                           
  5693                           ;ui.c: 63: }
  5694                           ;ui.c: 64: if(os.buttonCount)
  5695  010C48  0102               	movlb	2	; () banked
  5696  010C4A  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5697  010C4C  B4D8               	btfsc	status,2,c
  5698  010C4E  D005               	goto	l20694
  5699                           
  5700                           ; BSR set to: 2
  5701                           ;ui.c: 65: {
  5702                           ;ui.c: 66: rtcc_correct_day();
  5703  010C50  ECD1  F0D3         	call	_rtcc_correct_day	;wreg free
  5704                           
  5705                           ;ui.c: 67: os.display_mode = DISPLAY_MODE_DATETIME_MONTH;
  5706  010C54  0E12               	movlw	18
  5707  010C56  0102               	movlb	2	; () banked
  5708  010C58  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5709  010C5A                     l20694:
  5710                           
  5711                           ; BSR set to: 2
  5712                           ;ui.c: 68: }
  5713                           ;ui.c: 69: os.encoderCount = 0;
  5714  010C5A  0E00               	movlw	0
  5715  010C5C  0102               	movlb	2	; () banked
  5716  010C5E  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5717                           
  5718                           ; BSR set to: 2
  5719                           ;ui.c: 70: os.buttonCount = 0;
  5720  010C60  0E00               	movlw	0
  5721  010C62  0102               	movlb	2	; () banked
  5722  010C64  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5723                           
  5724                           ;ui.c: 71: break;
  5725  010C66  0012               	return	
  5726  010C68                     l20698:
  5727                           
  5728                           ; BSR set to: 2
  5729                           ;ui.c: 74: if(os.encoderCount>0)
  5730  010C68  0102               	movlb	2	; () banked
  5731  010C6A  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5732  010C6C  0A80               	xorlw	128
  5733  010C6E  0F7F               	addlw	-129
  5734  010C70  A0D8               	btfss	status,0,c
  5735  010C72  D003               	goto	l20702
  5736                           
  5737                           ; BSR set to: 2
  5738                           ;ui.c: 75: {
  5739                           ;ui.c: 76: rtcc_increment_month();
  5740  010C74  ECC4  F0D2         	call	_rtcc_increment_month	;wreg free
  5741                           
  5742                           ;ui.c: 77: }
  5743  010C78  D004               	goto	l20706
  5744  010C7A                     l20702:
  5745                           
  5746                           ;ui.c: 78: else if(os.encoderCount<0)
  5747  010C7A  0102               	movlb	2	; () banked
  5748  010C7C  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5749                           
  5750                           ; BSR set to: 2
  5751                           ;ui.c: 79: {
  5752                           ;ui.c: 80: rtcc_decrement_month();
  5753  010C7E  EC2D  F0D3         	call	_rtcc_decrement_month	;wreg free
  5754  010C82                     l20706:
  5755                           
  5756                           ;ui.c: 81: }
  5757                           ;ui.c: 82: if(os.buttonCount)
  5758  010C82  0102               	movlb	2	; () banked
  5759  010C84  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5760  010C86  B4D8               	btfsc	status,2,c
  5761  010C88  D005               	goto	l20712
  5762                           
  5763                           ; BSR set to: 2
  5764                           ;ui.c: 83: {
  5765                           ;ui.c: 84: rtcc_correct_day();
  5766  010C8A  ECD1  F0D3         	call	_rtcc_correct_day	;wreg free
  5767                           
  5768                           ;ui.c: 85: os.display_mode = DISPLAY_MODE_DATETIME_DAY;
  5769  010C8E  0E13               	movlw	19
  5770  010C90  0102               	movlb	2	; () banked
  5771  010C92  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5772  010C94                     l20712:
  5773                           
  5774                           ; BSR set to: 2
  5775                           ;ui.c: 86: }
  5776                           ;ui.c: 87: os.encoderCount = 0;
  5777  010C94  0E00               	movlw	0
  5778  010C96  0102               	movlb	2	; () banked
  5779  010C98  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5780                           
  5781                           ; BSR set to: 2
  5782                           ;ui.c: 88: os.buttonCount = 0;
  5783  010C9A  0E00               	movlw	0
  5784  010C9C  0102               	movlb	2	; () banked
  5785  010C9E  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5786                           
  5787                           ;ui.c: 89: break;
  5788  010CA0  0012               	return	
  5789  010CA2                     l20716:
  5790                           
  5791                           ; BSR set to: 2
  5792                           ;ui.c: 92: if(os.encoderCount>0)
  5793  010CA2  0102               	movlb	2	; () banked
  5794  010CA4  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5795  010CA6  0A80               	xorlw	128
  5796  010CA8  0F7F               	addlw	-129
  5797  010CAA  A0D8               	btfss	status,0,c
  5798  010CAC  D003               	goto	l20720
  5799                           
  5800                           ; BSR set to: 2
  5801                           ;ui.c: 93: {
  5802                           ;ui.c: 94: rtcc_increment_day();
  5803  010CAE  EC42  F0D2         	call	_rtcc_increment_day	;wreg free
  5804                           
  5805                           ;ui.c: 95: }
  5806  010CB2  D004               	goto	l20724
  5807  010CB4                     l20720:
  5808                           
  5809                           ;ui.c: 96: else if(os.encoderCount<0)
  5810  010CB4  0102               	movlb	2	; () banked
  5811  010CB6  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5812                           
  5813                           ; BSR set to: 2
  5814                           ;ui.c: 97: {
  5815                           ;ui.c: 98: rtcc_decrement_day();
  5816  010CB8  EC58  F0D2         	call	_rtcc_decrement_day	;wreg free
  5817  010CBC                     l20724:
  5818                           
  5819                           ;ui.c: 99: }
  5820                           ;ui.c: 100: if(os.buttonCount)
  5821  010CBC  0102               	movlb	2	; () banked
  5822  010CBE  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5823  010CC0  B4D8               	btfsc	status,2,c
  5824  010CC2  D003               	goto	l1770
  5825                           
  5826                           ; BSR set to: 2
  5827                           ;ui.c: 101: {
  5828                           ;ui.c: 102: os.display_mode = DISPLAY_MODE_DATETIME_HOURS;
  5829  010CC4  0E14               	movlw	20
  5830  010CC6  0102               	movlb	2	; () banked
  5831  010CC8  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5832  010CCA                     l1770:
  5833                           
  5834                           ; BSR set to: 2
  5835                           ;ui.c: 103: }
  5836                           ;ui.c: 104: os.encoderCount = 0;
  5837  010CCA  0E00               	movlw	0
  5838  010CCC  0102               	movlb	2	; () banked
  5839  010CCE  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5840                           
  5841                           ;ui.c: 105: os.buttonCount = 0;
  5842  010CD0  0E00               	movlw	0
  5843  010CD2  0102               	movlb	2	; () banked
  5844  010CD4  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5845                           
  5846                           ;ui.c: 106: break;
  5847  010CD6  0012               	return	
  5848  010CD8                     l20728:
  5849                           
  5850                           ; BSR set to: 2
  5851                           ;ui.c: 109: if(os.encoderCount>0)
  5852  010CD8  0102               	movlb	2	; () banked
  5853  010CDA  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5854  010CDC  0A80               	xorlw	128
  5855  010CDE  0F7F               	addlw	-129
  5856  010CE0  A0D8               	btfss	status,0,c
  5857  010CE2  D003               	goto	l20732
  5858                           
  5859                           ; BSR set to: 2
  5860                           ;ui.c: 110: {
  5861                           ;ui.c: 111: rtcc_increment_hours();
  5862  010CE4  ECEE  F0D2         	call	_rtcc_increment_hours	;wreg free
  5863                           
  5864                           ;ui.c: 112: }
  5865  010CE8  D004               	goto	l20736
  5866  010CEA                     l20732:
  5867                           
  5868                           ;ui.c: 113: else if(os.encoderCount<0)
  5869  010CEA  0102               	movlb	2	; () banked
  5870  010CEC  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5871                           
  5872                           ; BSR set to: 2
  5873                           ;ui.c: 114: {
  5874                           ;ui.c: 115: rtcc_decrement_hours();
  5875  010CEE  EC57  F0D3         	call	_rtcc_decrement_hours	;wreg free
  5876  010CF2                     l20736:
  5877                           
  5878                           ;ui.c: 116: }
  5879                           ;ui.c: 117: if(os.buttonCount)
  5880  010CF2  0102               	movlb	2	; () banked
  5881  010CF4  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5882  010CF6  B4D8               	btfsc	status,2,c
  5883  010CF8  D003               	goto	l1775
  5884                           
  5885                           ; BSR set to: 2
  5886                           ;ui.c: 118: {
  5887                           ;ui.c: 119: os.display_mode = DISPLAY_MODE_DATETIME_MINUTES;
  5888  010CFA  0E15               	movlw	21
  5889  010CFC  0102               	movlb	2	; () banked
  5890  010CFE  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5891  010D00                     l1775:
  5892                           
  5893                           ; BSR set to: 2
  5894                           ;ui.c: 120: }
  5895                           ;ui.c: 121: os.encoderCount = 0;
  5896  010D00  0E00               	movlw	0
  5897  010D02  0102               	movlb	2	; () banked
  5898  010D04  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5899                           
  5900                           ;ui.c: 122: os.buttonCount = 0;
  5901  010D06  0E00               	movlw	0
  5902  010D08  0102               	movlb	2	; () banked
  5903  010D0A  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5904                           
  5905                           ;ui.c: 123: break;
  5906  010D0C  0012               	return	
  5907  010D0E                     l20740:
  5908                           
  5909                           ; BSR set to: 2
  5910                           ;ui.c: 126: if(os.encoderCount>0)
  5911  010D0E  0102               	movlb	2	; () banked
  5912  010D10  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5913  010D12  0A80               	xorlw	128
  5914  010D14  0F7F               	addlw	-129
  5915  010D16  A0D8               	btfss	status,0,c
  5916  010D18  D003               	goto	l20744
  5917                           
  5918                           ; BSR set to: 2
  5919                           ;ui.c: 127: {
  5920                           ;ui.c: 128: rtcc_increment_minutes();
  5921  010D1A  ECD9  F0D2         	call	_rtcc_increment_minutes	;wreg free
  5922                           
  5923                           ;ui.c: 129: }
  5924  010D1E  D004               	goto	l20748
  5925  010D20                     l20744:
  5926                           
  5927                           ;ui.c: 130: else if(os.encoderCount<0)
  5928  010D20  0102               	movlb	2	; () banked
  5929  010D22  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5930                           
  5931                           ; BSR set to: 2
  5932                           ;ui.c: 131: {
  5933                           ;ui.c: 132: rtcc_decrement_minutes();
  5934  010D24  EC42  F0D3         	call	_rtcc_decrement_minutes	;wreg free
  5935  010D28                     l20748:
  5936                           
  5937                           ;ui.c: 133: }
  5938                           ;ui.c: 134: if(os.buttonCount)
  5939  010D28  0102               	movlb	2	; () banked
  5940  010D2A  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5941  010D2C  B4D8               	btfsc	status,2,c
  5942  010D2E  D003               	goto	l1780
  5943                           
  5944                           ; BSR set to: 2
  5945                           ;ui.c: 135: {
  5946                           ;ui.c: 136: os.display_mode = DISPLAY_MODE_DATETIME_SECONDS;
  5947  010D30  0E16               	movlw	22
  5948  010D32  0102               	movlb	2	; () banked
  5949  010D34  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  5950  010D36                     l1780:
  5951                           
  5952                           ; BSR set to: 2
  5953                           ;ui.c: 137: }
  5954                           ;ui.c: 138: os.encoderCount = 0;
  5955  010D36  0E00               	movlw	0
  5956  010D38  0102               	movlb	2	; () banked
  5957  010D3A  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5958                           
  5959                           ;ui.c: 139: os.buttonCount = 0;
  5960  010D3C  0E00               	movlw	0
  5961  010D3E  0102               	movlb	2	; () banked
  5962  010D40  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5963                           
  5964                           ;ui.c: 140: break;
  5965  010D42  0012               	return	
  5966  010D44                     l20752:
  5967                           
  5968                           ; BSR set to: 2
  5969                           ;ui.c: 143: if(os.encoderCount>0)
  5970  010D44  0102               	movlb	2	; () banked
  5971  010D46  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5972  010D48  0A80               	xorlw	128
  5973  010D4A  0F7F               	addlw	-129
  5974  010D4C  A0D8               	btfss	status,0,c
  5975  010D4E  D003               	goto	l20756
  5976                           
  5977                           ; BSR set to: 2
  5978                           ;ui.c: 144: {
  5979                           ;ui.c: 145: rtcc_increment_seconds();
  5980  010D50  ECAF  F0D2         	call	_rtcc_increment_seconds	;wreg free
  5981                           
  5982                           ;ui.c: 146: }
  5983  010D54  D004               	goto	l20760
  5984  010D56                     l20756:
  5985                           
  5986                           ;ui.c: 147: else if(os.encoderCount<0)
  5987  010D56  0102               	movlb	2	; () banked
  5988  010D58  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  5989                           
  5990                           ; BSR set to: 2
  5991                           ;ui.c: 148: {
  5992                           ;ui.c: 149: rtcc_decrement_seconds();
  5993  010D5A  EC18  F0D3         	call	_rtcc_decrement_seconds	;wreg free
  5994  010D5E                     l20760:
  5995                           
  5996                           ;ui.c: 150: }
  5997                           ;ui.c: 151: if(os.buttonCount)
  5998  010D5E  0102               	movlb	2	; () banked
  5999  010D60  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6000  010D62  B4D8               	btfsc	status,2,c
  6001  010D64  D005               	goto	l20766
  6002                           
  6003                           ; BSR set to: 2
  6004                           ;ui.c: 152: {
  6005                           ;ui.c: 153: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  6006  010D66  0E10               	movlw	16
  6007  010D68  0102               	movlb	2	; () banked
  6008  010D6A  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6009                           
  6010                           ; BSR set to: 2
  6011                           ;ui.c: 154: rtcc_write_eeprom();
  6012  010D6C  EC33  F0CE         	call	_rtcc_write_eeprom	;wreg free
  6013  010D70                     l20766:
  6014                           
  6015                           ;ui.c: 155: }
  6016                           ;ui.c: 156: os.encoderCount = 0;
  6017  010D70  0E00               	movlw	0
  6018  010D72  0102               	movlb	2	; () banked
  6019  010D74  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6020                           
  6021                           ; BSR set to: 2
  6022                           ;ui.c: 157: os.buttonCount = 0;
  6023  010D76  0E00               	movlw	0
  6024  010D78  0102               	movlb	2	; () banked
  6025  010D7A  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6026                           
  6027                           ;ui.c: 158: break;
  6028  010D7C  0012               	return	
  6029  010D7E                     l20770:
  6030                           
  6031                           ; BSR set to: 2
  6032                           ;ui.c: 161: if(os.encoderCount>0)
  6033  010D7E  0102               	movlb	2	; () banked
  6034  010D80  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6035  010D82  0A80               	xorlw	128
  6036  010D84  0F7F               	addlw	-129
  6037  010D86  A0D8               	btfss	status,0,c
  6038  010D88  D002               	goto	l20774
  6039                           
  6040                           ; BSR set to: 2
  6041                           ;ui.c: 162: {
  6042                           ;ui.c: 163: os.display_mode = DISPLAY_MODE_OUTPUTS;
  6043  010D8A  0E30               	movlw	48
  6044  010D8C  D004               	goto	L3
  6045  010D8E                     l20774:
  6046                           
  6047                           ; BSR set to: 2
  6048                           ;ui.c: 165: else if(os.encoderCount<0)
  6049  010D8E  0102               	movlb	2	; () banked
  6050  010D90  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6051  010D92  D003               	goto	l1788
  6052                           
  6053                           ; BSR set to: 2
  6054                           ;ui.c: 166: {
  6055                           ;ui.c: 167: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  6056  010D94  0E10               	movlw	16
  6057  010D96                     L3:
  6058  010D96  0102               	movlb	2	; () banked
  6059  010D98  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6060  010D9A                     l1788:
  6061                           
  6062                           ; BSR set to: 2
  6063                           ;ui.c: 168: }
  6064                           ;ui.c: 169: if(os.buttonCount)
  6065  010D9A  0102               	movlb	2	; () banked
  6066  010D9C  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6067  010D9E  B4D8               	btfsc	status,2,c
  6068  010DA0  D00E               	goto	l20782
  6069                           
  6070                           ; BSR set to: 2
  6071                           ;ui.c: 170: {
  6072                           ;ui.c: 171: if(os.output_voltage>12000)
  6073  010DA2  0102               	movlb	2	; () banked
  6074  010DA4  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6075  010DA6  D00B               	goto	l20782
  6076  010DA8  0EE1               	movlw	225
  6077  010DAA  0102               	movlb	2	; () banked
  6078  010DAC  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
  6079  010DAE  0E2E               	movlw	46
  6080  010DB0  0102               	movlb	2	; () banked
  6081  010DB2  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  6082  010DB4  A0D8               	btfss	status,0,c
  6083  010DB6  D003               	goto	l20782
  6084                           
  6085                           ; BSR set to: 2
  6086                           ;ui.c: 172: {
  6087                           ;ui.c: 173: system_output_toggle(OUTPUT_USB);
  6088  010DB8  0E10               	movlw	16
  6089  010DBA  ECBE  F0D3         	call	_system_output_toggle
  6090  010DBE                     l20782:
  6091                           
  6092                           ;ui.c: 174: }
  6093                           ;ui.c: 175: }
  6094                           ;ui.c: 176: os.encoderCount = 0;
  6095  010DBE  0E00               	movlw	0
  6096  010DC0  0102               	movlb	2	; () banked
  6097  010DC2  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6098                           
  6099                           ; BSR set to: 2
  6100                           ;ui.c: 177: os.buttonCount = 0;
  6101  010DC4  0E00               	movlw	0
  6102  010DC6  0102               	movlb	2	; () banked
  6103  010DC8  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6104                           
  6105                           ;ui.c: 178: break;
  6106  010DCA  0012               	return	
  6107  010DCC                     l20786:
  6108                           
  6109                           ; BSR set to: 2
  6110                           ;ui.c: 181: if(os.encoderCount>0)
  6111  010DCC  0102               	movlb	2	; () banked
  6112  010DCE  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6113  010DD0  0A80               	xorlw	128
  6114  010DD2  0F7F               	addlw	-129
  6115  010DD4  A0D8               	btfss	status,0,c
  6116  010DD6  D002               	goto	l20790
  6117                           
  6118                           ; BSR set to: 2
  6119                           ;ui.c: 182: {
  6120                           ;ui.c: 183: os.display_mode = DISPLAY_MODE_CHARGER_DETAILS;
  6121  010DD8  0E40               	movlw	64
  6122  010DDA  D004               	goto	L4
  6123  010DDC                     l20790:
  6124                           
  6125                           ; BSR set to: 2
  6126                           ;ui.c: 185: else if(os.encoderCount<0)
  6127  010DDC  0102               	movlb	2	; () banked
  6128  010DDE  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6129  010DE0  D003               	goto	l1794
  6130                           
  6131                           ; BSR set to: 2
  6132                           ;ui.c: 186: {
  6133                           ;ui.c: 187: os.display_mode = DISPLAY_MODE_USB_CHARGER;
  6134  010DE2  0E20               	movlw	32
  6135  010DE4                     L4:
  6136  010DE4  0102               	movlb	2	; () banked
  6137  010DE6  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6138  010DE8                     l1794:
  6139                           
  6140                           ; BSR set to: 2
  6141                           ;ui.c: 188: }
  6142                           ;ui.c: 189: if(os.buttonCount)
  6143  010DE8  0102               	movlb	2	; () banked
  6144  010DEA  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6145  010DEC  B4D8               	btfsc	status,2,c
  6146  010DEE  D003               	goto	l1796
  6147                           
  6148                           ; BSR set to: 2
  6149                           ;ui.c: 190: {
  6150                           ;ui.c: 191: os.display_mode = DISPLAY_MODE_OUTPUTS_1;
  6151  010DF0  0E31               	movlw	49
  6152  010DF2  0102               	movlb	2	; () banked
  6153  010DF4  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6154  010DF6                     l1796:
  6155                           
  6156                           ; BSR set to: 2
  6157                           ;ui.c: 192: }
  6158                           ;ui.c: 193: os.encoderCount = 0;
  6159  010DF6  0E00               	movlw	0
  6160  010DF8  0102               	movlb	2	; () banked
  6161  010DFA  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6162                           
  6163                           ;ui.c: 194: os.buttonCount = 0;
  6164  010DFC  0E00               	movlw	0
  6165  010DFE  0102               	movlb	2	; () banked
  6166  010E00  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6167                           
  6168                           ;ui.c: 195: break;
  6169  010E02  0012               	return	
  6170  010E04                     l20796:
  6171                           
  6172                           ; BSR set to: 2
  6173                           ;ui.c: 198: if(os.encoderCount>0)
  6174  010E04  0102               	movlb	2	; () banked
  6175  010E06  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6176  010E08  0A80               	xorlw	128
  6177  010E0A  0F7F               	addlw	-129
  6178  010E0C  A0D8               	btfss	status,0,c
  6179  010E0E  D007               	goto	l20802
  6180                           
  6181                           ; BSR set to: 2
  6182                           ;ui.c: 199: {
  6183                           ;ui.c: 200: if(os.output_voltage>-1)
  6184  010E10  0102               	movlb	2	; () banked
  6185  010E12  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6186  010E14  D00A               	goto	l20806
  6187                           
  6188                           ; BSR set to: 2
  6189                           ;ui.c: 201: system_output_on(OUTPUT_1);
  6190  010E16  0E01               	movlw	1
  6191  010E18  EC83  F0CE         	call	_system_output_on
  6192                           
  6193                           ;ui.c: 202: }
  6194  010E1C  D006               	goto	l20806
  6195  010E1E                     l20802:
  6196                           
  6197                           ;ui.c: 203: else if(os.encoderCount<0)
  6198  010E1E  0102               	movlb	2	; () banked
  6199  010E20  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6200  010E22  D003               	goto	l20806
  6201                           
  6202                           ; BSR set to: 2
  6203                           ;ui.c: 204: {
  6204                           ;ui.c: 205: system_output_off(OUTPUT_1);
  6205  010E24  0E01               	movlw	1
  6206  010E26  EC35  F0CD         	call	_system_output_off
  6207  010E2A                     l20806:
  6208                           
  6209                           ;ui.c: 206: }
  6210                           ;ui.c: 207: if(os.buttonCount)
  6211  010E2A  0102               	movlb	2	; () banked
  6212  010E2C  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6213  010E2E  B4D8               	btfsc	status,2,c
  6214  010E30  D003               	goto	l1802
  6215                           
  6216                           ; BSR set to: 2
  6217                           ;ui.c: 208: {
  6218                           ;ui.c: 209: os.display_mode = DISPLAY_MODE_OUTPUTS_2;
  6219  010E32  0E32               	movlw	50
  6220  010E34  0102               	movlb	2	; () banked
  6221  010E36  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6222  010E38                     l1802:
  6223                           
  6224                           ; BSR set to: 2
  6225                           ;ui.c: 210: }
  6226                           ;ui.c: 211: os.encoderCount = 0;
  6227  010E38  0E00               	movlw	0
  6228  010E3A  0102               	movlb	2	; () banked
  6229  010E3C  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6230                           
  6231                           ;ui.c: 212: os.buttonCount = 0;
  6232  010E3E  0E00               	movlw	0
  6233  010E40  0102               	movlb	2	; () banked
  6234  010E42  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6235                           
  6236                           ;ui.c: 213: break;
  6237  010E44  0012               	return	
  6238  010E46                     l20810:
  6239                           
  6240                           ; BSR set to: 2
  6241                           ;ui.c: 216: if(os.encoderCount>0)
  6242  010E46  0102               	movlb	2	; () banked
  6243  010E48  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6244  010E4A  0A80               	xorlw	128
  6245  010E4C  0F7F               	addlw	-129
  6246  010E4E  A0D8               	btfss	status,0,c
  6247  010E50  D007               	goto	l20816
  6248                           
  6249                           ; BSR set to: 2
  6250                           ;ui.c: 217: {
  6251                           ;ui.c: 218: if(os.output_voltage>-1)
  6252  010E52  0102               	movlb	2	; () banked
  6253  010E54  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6254  010E56  D00A               	goto	l20820
  6255                           
  6256                           ; BSR set to: 2
  6257                           ;ui.c: 219: system_output_on(OUTPUT_2);
  6258  010E58  0E02               	movlw	2
  6259  010E5A  EC83  F0CE         	call	_system_output_on
  6260                           
  6261                           ;ui.c: 220: }
  6262  010E5E  D006               	goto	l20820
  6263  010E60                     l20816:
  6264                           
  6265                           ;ui.c: 221: else if(os.encoderCount<0)
  6266  010E60  0102               	movlb	2	; () banked
  6267  010E62  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6268  010E64  D003               	goto	l20820
  6269                           
  6270                           ; BSR set to: 2
  6271                           ;ui.c: 222: {
  6272                           ;ui.c: 223: system_output_off(OUTPUT_2);
  6273  010E66  0E02               	movlw	2
  6274  010E68  EC35  F0CD         	call	_system_output_off
  6275  010E6C                     l20820:
  6276                           
  6277                           ;ui.c: 224: }
  6278                           ;ui.c: 225: if(os.buttonCount)
  6279  010E6C  0102               	movlb	2	; () banked
  6280  010E6E  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6281  010E70  B4D8               	btfsc	status,2,c
  6282  010E72  D003               	goto	l1808
  6283                           
  6284                           ; BSR set to: 2
  6285                           ;ui.c: 226: {
  6286                           ;ui.c: 227: os.display_mode = DISPLAY_MODE_OUTPUTS_3;
  6287  010E74  0E33               	movlw	51
  6288  010E76  0102               	movlb	2	; () banked
  6289  010E78  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6290  010E7A                     l1808:
  6291                           
  6292                           ; BSR set to: 2
  6293                           ;ui.c: 228: }
  6294                           ;ui.c: 229: os.encoderCount = 0;
  6295  010E7A  0E00               	movlw	0
  6296  010E7C  0102               	movlb	2	; () banked
  6297  010E7E  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6298                           
  6299                           ;ui.c: 230: os.buttonCount = 0;
  6300  010E80  0E00               	movlw	0
  6301  010E82  0102               	movlb	2	; () banked
  6302  010E84  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6303                           
  6304                           ;ui.c: 231: break;
  6305  010E86  0012               	return	
  6306  010E88                     l20824:
  6307                           
  6308                           ; BSR set to: 2
  6309                           ;ui.c: 234: if(os.encoderCount>0)
  6310  010E88  0102               	movlb	2	; () banked
  6311  010E8A  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6312  010E8C  0A80               	xorlw	128
  6313  010E8E  0F7F               	addlw	-129
  6314  010E90  A0D8               	btfss	status,0,c
  6315  010E92  D007               	goto	l20830
  6316                           
  6317                           ; BSR set to: 2
  6318                           ;ui.c: 235: {
  6319                           ;ui.c: 236: if(os.output_voltage>-1)
  6320  010E94  0102               	movlb	2	; () banked
  6321  010E96  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6322  010E98  D00A               	goto	l20834
  6323                           
  6324                           ; BSR set to: 2
  6325                           ;ui.c: 237: system_output_on(OUTPUT_3);
  6326  010E9A  0E04               	movlw	4
  6327  010E9C  EC83  F0CE         	call	_system_output_on
  6328                           
  6329                           ;ui.c: 238: }
  6330  010EA0  D006               	goto	l20834
  6331  010EA2                     l20830:
  6332                           
  6333                           ;ui.c: 239: else if(os.encoderCount<0)
  6334  010EA2  0102               	movlb	2	; () banked
  6335  010EA4  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6336  010EA6  D003               	goto	l20834
  6337                           
  6338                           ; BSR set to: 2
  6339                           ;ui.c: 240: {
  6340                           ;ui.c: 241: system_output_off(OUTPUT_3);
  6341  010EA8  0E04               	movlw	4
  6342  010EAA  EC35  F0CD         	call	_system_output_off
  6343  010EAE                     l20834:
  6344                           
  6345                           ;ui.c: 242: }
  6346                           ;ui.c: 243: if(os.buttonCount)
  6347  010EAE  0102               	movlb	2	; () banked
  6348  010EB0  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6349  010EB2  B4D8               	btfsc	status,2,c
  6350  010EB4  D003               	goto	l1814
  6351                           
  6352                           ; BSR set to: 2
  6353                           ;ui.c: 244: {
  6354                           ;ui.c: 245: os.display_mode = DISPLAY_MODE_OUTPUTS_4;
  6355  010EB6  0E34               	movlw	52
  6356  010EB8  0102               	movlb	2	; () banked
  6357  010EBA  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6358  010EBC                     l1814:
  6359                           
  6360                           ; BSR set to: 2
  6361                           ;ui.c: 246: }
  6362                           ;ui.c: 247: os.encoderCount = 0;
  6363  010EBC  0E00               	movlw	0
  6364  010EBE  0102               	movlb	2	; () banked
  6365  010EC0  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6366                           
  6367                           ;ui.c: 248: os.buttonCount = 0;
  6368  010EC2  0E00               	movlw	0
  6369  010EC4  0102               	movlb	2	; () banked
  6370  010EC6  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6371                           
  6372                           ;ui.c: 249: break;
  6373  010EC8  0012               	return	
  6374  010ECA                     l20838:
  6375                           
  6376                           ; BSR set to: 2
  6377                           ;ui.c: 252: if(os.encoderCount>0)
  6378  010ECA  0102               	movlb	2	; () banked
  6379  010ECC  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6380  010ECE  0A80               	xorlw	128
  6381  010ED0  0F7F               	addlw	-129
  6382  010ED2  A0D8               	btfss	status,0,c
  6383  010ED4  D007               	goto	l20844
  6384                           
  6385                           ; BSR set to: 2
  6386                           ;ui.c: 253: {
  6387                           ;ui.c: 254: if(os.output_voltage>-1)
  6388  010ED6  0102               	movlb	2	; () banked
  6389  010ED8  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6390  010EDA  D00A               	goto	l20848
  6391                           
  6392                           ; BSR set to: 2
  6393                           ;ui.c: 255: system_output_on(OUTPUT_4);
  6394  010EDC  0E08               	movlw	8
  6395  010EDE  EC83  F0CE         	call	_system_output_on
  6396                           
  6397                           ;ui.c: 256: }
  6398  010EE2  D006               	goto	l20848
  6399  010EE4                     l20844:
  6400                           
  6401                           ;ui.c: 257: else if(os.encoderCount<0)
  6402  010EE4  0102               	movlb	2	; () banked
  6403  010EE6  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6404  010EE8  D003               	goto	l20848
  6405                           
  6406                           ; BSR set to: 2
  6407                           ;ui.c: 258: {
  6408                           ;ui.c: 259: system_output_off(OUTPUT_4);
  6409  010EEA  0E08               	movlw	8
  6410  010EEC  EC35  F0CD         	call	_system_output_off
  6411  010EF0                     l20848:
  6412                           
  6413                           ;ui.c: 260: }
  6414                           ;ui.c: 261: if(os.buttonCount)
  6415  010EF0  0102               	movlb	2	; () banked
  6416  010EF2  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6417  010EF4  B4D8               	btfsc	status,2,c
  6418  010EF6  D003               	goto	l1820
  6419                           
  6420                           ; BSR set to: 2
  6421                           ;ui.c: 262: {
  6422                           ;ui.c: 263: os.display_mode = DISPLAY_MODE_OUTPUTS;
  6423  010EF8  0E30               	movlw	48
  6424  010EFA  0102               	movlb	2	; () banked
  6425  010EFC  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6426  010EFE                     l1820:
  6427                           
  6428                           ; BSR set to: 2
  6429                           ;ui.c: 264: }
  6430                           ;ui.c: 265: os.encoderCount = 0;
  6431  010EFE  0E00               	movlw	0
  6432  010F00  0102               	movlb	2	; () banked
  6433  010F02  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6434                           
  6435                           ;ui.c: 266: os.buttonCount = 0;
  6436  010F04  0E00               	movlw	0
  6437  010F06  0102               	movlb	2	; () banked
  6438  010F08  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6439                           
  6440                           ;ui.c: 267: break;
  6441  010F0A  0012               	return	
  6442  010F0C                     l20852:
  6443                           
  6444                           ; BSR set to: 2
  6445                           ;ui.c: 270: if(os.encoderCount>0)
  6446  010F0C  0102               	movlb	2	; () banked
  6447  010F0E  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6448  010F10  0A80               	xorlw	128
  6449  010F12  0F7F               	addlw	-129
  6450  010F14  A0D8               	btfss	status,0,c
  6451  010F16  D002               	goto	l20856
  6452                           
  6453                           ; BSR set to: 2
  6454                           ;ui.c: 271: {
  6455                           ;ui.c: 272: os.display_mode = DISPLAY_MODE_EFFICIENCY;
  6456  010F18  0E50               	movlw	80
  6457  010F1A  D004               	goto	L5
  6458  010F1C                     l20856:
  6459                           
  6460                           ; BSR set to: 2
  6461                           ;ui.c: 274: else if(os.encoderCount<0)
  6462  010F1C  0102               	movlb	2	; () banked
  6463  010F1E  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6464  010F20  D003               	goto	l1823
  6465                           
  6466                           ; BSR set to: 2
  6467                           ;ui.c: 275: {
  6468                           ;ui.c: 276: os.display_mode = DISPLAY_MODE_OUTPUTS;
  6469  010F22  0E30               	movlw	48
  6470  010F24                     L5:
  6471  010F24  0102               	movlb	2	; () banked
  6472  010F26  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6473  010F28                     l1823:
  6474                           
  6475                           ; BSR set to: 2
  6476                           ;ui.c: 277: }
  6477                           ;ui.c: 278: if(os.buttonCount)
  6478  010F28  0102               	movlb	2	; () banked
  6479  010F2A  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6480                           
  6481                           ; BSR set to: 2
  6482                           ;ui.c: 281: }
  6483                           ;ui.c: 282: os.encoderCount = 0;
  6484                           
  6485                           ; BSR set to: 2
  6486                           
  6487                           ;ui.c: 279: {
  6488                           ;ui.c: 280: ;
  6489  010F2C  0E00               	movlw	0
  6490  010F2E  0102               	movlb	2	; () banked
  6491  010F30  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6492                           
  6493                           ;ui.c: 283: os.buttonCount = 0;
  6494  010F32  0E00               	movlw	0
  6495  010F34  0102               	movlb	2	; () banked
  6496  010F36  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6497                           
  6498                           ;ui.c: 284: break;
  6499  010F38  0012               	return	
  6500  010F3A                     l20862:
  6501                           
  6502                           ; BSR set to: 2
  6503                           ;ui.c: 287: if(os.encoderCount>0)
  6504  010F3A  0102               	movlb	2	; () banked
  6505  010F3C  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6506  010F3E  0A80               	xorlw	128
  6507  010F40  0F7F               	addlw	-129
  6508  010F42  A0D8               	btfss	status,0,c
  6509  010F44  D002               	goto	l20866
  6510                           
  6511                           ; BSR set to: 2
  6512                           ;ui.c: 288: {
  6513                           ;ui.c: 289: os.display_mode = DISPLAY_MODE_TEMPERATURE;
  6514  010F46  0E60               	movlw	96
  6515  010F48  D004               	goto	L6
  6516  010F4A                     l20866:
  6517                           
  6518                           ; BSR set to: 2
  6519                           ;ui.c: 291: else if(os.encoderCount<0)
  6520  010F4A  0102               	movlb	2	; () banked
  6521  010F4C  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6522  010F4E  D003               	goto	l1828
  6523                           
  6524                           ; BSR set to: 2
  6525                           ;ui.c: 292: {
  6526                           ;ui.c: 293: os.display_mode = DISPLAY_MODE_CHARGER_DETAILS;
  6527  010F50  0E40               	movlw	64
  6528  010F52                     L6:
  6529  010F52  0102               	movlb	2	; () banked
  6530  010F54  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6531  010F56                     l1828:
  6532                           
  6533                           ; BSR set to: 2
  6534                           ;ui.c: 294: }
  6535                           ;ui.c: 295: if(os.buttonCount)
  6536  010F56  0102               	movlb	2	; () banked
  6537  010F58  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6538                           
  6539                           ; BSR set to: 2
  6540                           ;ui.c: 298: }
  6541                           ;ui.c: 299: os.encoderCount = 0;
  6542                           
  6543                           ; BSR set to: 2
  6544                           
  6545                           ;ui.c: 296: {
  6546                           ;ui.c: 297: ;
  6547  010F5A  0E00               	movlw	0
  6548  010F5C  0102               	movlb	2	; () banked
  6549  010F5E  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6550                           
  6551                           ;ui.c: 300: os.buttonCount = 0;
  6552  010F60  0E00               	movlw	0
  6553  010F62  0102               	movlb	2	; () banked
  6554  010F64  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6555                           
  6556                           ;ui.c: 301: break;
  6557  010F66  0012               	return	
  6558  010F68                     l20872:
  6559                           
  6560                           ; BSR set to: 2
  6561                           ;ui.c: 304: if(os.encoderCount>0)
  6562  010F68  0102               	movlb	2	; () banked
  6563  010F6A  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6564  010F6C  0A80               	xorlw	128
  6565  010F6E  0F7F               	addlw	-129
  6566  010F70  A0D8               	btfss	status,0,c
  6567  010F72  D002               	goto	l20876
  6568                           
  6569                           ; BSR set to: 2
  6570                           ;ui.c: 305: {
  6571                           ;ui.c: 306: os.display_mode = DISPLAY_MODE_OVERVIEW;
  6572  010F74  0E00               	movlw	0
  6573  010F76  D004               	goto	L7
  6574  010F78                     l20876:
  6575                           
  6576                           ; BSR set to: 2
  6577                           ;ui.c: 308: else if(os.encoderCount<0)
  6578  010F78  0102               	movlb	2	; () banked
  6579  010F7A  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6580  010F7C  D003               	goto	l1833
  6581                           
  6582                           ; BSR set to: 2
  6583                           ;ui.c: 309: {
  6584                           ;ui.c: 310: os.display_mode = DISPLAY_MODE_EFFICIENCY;
  6585  010F7E  0E50               	movlw	80
  6586  010F80                     L7:
  6587  010F80  0102               	movlb	2	; () banked
  6588  010F82  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6589  010F84                     l1833:
  6590                           
  6591                           ; BSR set to: 2
  6592                           ;ui.c: 311: }
  6593                           ;ui.c: 312: if(os.buttonCount)
  6594  010F84  0102               	movlb	2	; () banked
  6595  010F86  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6596                           
  6597                           ; BSR set to: 2
  6598                           ;ui.c: 315: }
  6599                           ;ui.c: 316: os.encoderCount = 0;
  6600                           
  6601                           ; BSR set to: 2
  6602                           
  6603                           ;ui.c: 313: {
  6604                           ;ui.c: 314: ;
  6605  010F88  0E00               	movlw	0
  6606  010F8A  0102               	movlb	2	; () banked
  6607  010F8C  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6608                           
  6609                           ;ui.c: 317: os.buttonCount = 0;
  6610  010F8E  0E00               	movlw	0
  6611  010F90  0102               	movlb	2	; () banked
  6612  010F92  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6613                           
  6614                           ;ui.c: 318: break;
  6615  010F94  0012               	return	
  6616  010F96                     l20882:
  6617                           
  6618                           ; BSR set to: 2
  6619                           ;ui.c: 321: os.display_mode = DISPLAY_MODE_OVERVIEW;
  6620  010F96  0E00               	movlw	0
  6621  010F98  0102               	movlb	2	; () banked
  6622  010F9A  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6623                           
  6624                           ;ui.c: 322: }
  6625  010F9C  0012               	return	
  6626  010F9E                     l20884:
  6627  010F9E  0102               	movlb	2	; () banked
  6628  010FA0  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  6629                           
  6630                           ; Switch size 1, requested type "space"
  6631                           ; Number of cases is 17, Range of values is 0 to 96
  6632                           ; switch strategies available:
  6633                           ; Name         Instructions Cycles
  6634                           ; simple_byte           52    27 (average)
  6635                           ;	Chosen strategy is simple_byte
  6636  010FA2  0A00               	xorlw	0	; case 0
  6637  010FA4  B4D8               	btfsc	status,2,c
  6638  010FA6  D610               	goto	l20660
  6639  010FA8  0A10               	xorlw	16	; case 16
  6640  010FAA  B4D8               	btfsc	status,2,c
  6641  010FAC  D624               	goto	l20670
  6642  010FAE  0A01               	xorlw	1	; case 17
  6643  010FB0  B4D8               	btfsc	status,2,c
  6644  010FB2  D63D               	goto	l20680
  6645  010FB4  0A03               	xorlw	3	; case 18
  6646  010FB6  B4D8               	btfsc	status,2,c
  6647  010FB8  D657               	goto	l20698
  6648  010FBA  0A01               	xorlw	1	; case 19
  6649  010FBC  B4D8               	btfsc	status,2,c
  6650  010FBE  D671               	goto	l20716
  6651  010FC0  0A07               	xorlw	7	; case 20
  6652  010FC2  B4D8               	btfsc	status,2,c
  6653  010FC4  D689               	goto	l20728
  6654  010FC6  0A01               	xorlw	1	; case 21
  6655  010FC8  B4D8               	btfsc	status,2,c
  6656  010FCA  D6A1               	goto	l20740
  6657  010FCC  0A03               	xorlw	3	; case 22
  6658  010FCE  B4D8               	btfsc	status,2,c
  6659  010FD0  D6B9               	goto	l20752
  6660  010FD2  0A36               	xorlw	54	; case 32
  6661  010FD4  B4D8               	btfsc	status,2,c
  6662  010FD6  D6D3               	goto	l20770
  6663  010FD8  0A10               	xorlw	16	; case 48
  6664  010FDA  B4D8               	btfsc	status,2,c
  6665  010FDC  D6F7               	goto	l20786
  6666  010FDE  0A01               	xorlw	1	; case 49
  6667  010FE0  B4D8               	btfsc	status,2,c
  6668  010FE2  D710               	goto	l20796
  6669  010FE4  0A03               	xorlw	3	; case 50
  6670  010FE6  B4D8               	btfsc	status,2,c
  6671  010FE8  D72E               	goto	l20810
  6672  010FEA  0A01               	xorlw	1	; case 51
  6673  010FEC  B4D8               	btfsc	status,2,c
  6674  010FEE  D74C               	goto	l20824
  6675  010FF0  0A07               	xorlw	7	; case 52
  6676  010FF2  B4D8               	btfsc	status,2,c
  6677  010FF4  D76A               	goto	l20838
  6678  010FF6  0A74               	xorlw	116	; case 64
  6679  010FF8  B4D8               	btfsc	status,2,c
  6680  010FFA  D788               	goto	l20852
  6681  010FFC  0A10               	xorlw	16	; case 80
  6682  010FFE  B4D8               	btfsc	status,2,c
  6683  011000  D79C               	goto	l20862
  6684  011002  0A30               	xorlw	48	; case 96
  6685  011004  B4D8               	btfsc	status,2,c
  6686  011006  D7B0               	goto	l20872
  6687  011008  D7C6               	goto	l20882
  6688  01100A                     __end_of__ui_encoder:
  6689                           	opt stack 0
  6690                           tblptru	equ	0xFF8
  6691                           tblptrh	equ	0xFF7
  6692                           tblptrl	equ	0xFF6
  6693                           tablat	equ	0xFF5
  6694                           intcon3	equ	0xFF0
  6695                           postinc0	equ	0xFEE
  6696                           wreg	equ	0xFE8
  6697                           postdec1	equ	0xFE5
  6698                           plusw1	equ	0xFE3
  6699                           fsr1h	equ	0xFE2
  6700                           fsr1l	equ	0xFE1
  6701                           postinc2	equ	0xFDE
  6702                           postdec2	equ	0xFDD
  6703                           plusw2	equ	0xFDB
  6704                           fsr2h	equ	0xFDA
  6705                           fsr2l	equ	0xFD9
  6706                           status	equ	0xFD8
  6707                           
  6708 ;; *************** function _system_output_toggle *****************
  6709 ;; Defined at:
  6710 ;;		line 499 in file "os.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;  output          1    wreg     enum E8129
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;  output          1    2[BANK0 ] enum E8129
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  1    wreg      void 
  6717 ;; Registers used:
  6718 ;;		wreg, status,2, status,0, cstack
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6725 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6727 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6728 ;;Total ram usage:        1 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; Hardware stack levels required when called:   11
  6731 ;; This function calls:
  6732 ;;		_system_output_is_on
  6733 ;;		_system_output_off
  6734 ;;		_system_output_on
  6735 ;; This function is called by:
  6736 ;;		__ui_encoder
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           	psect	text9
  6741  01A77C                     __ptext9:
  6742                           	opt stack 0
  6743  01A77C                     _system_output_toggle:
  6744                           	opt stack 17
  6745                           
  6746                           ; BSR set to: 2
  6747                           ;incstack = 0
  6748                           ;system_output_toggle@output stored from wreg
  6749  01A77C  0100               	movlb	0	; () banked
  6750  01A77E  6F62               	movwf	system_output_toggle@output& (0+255),b
  6751                           
  6752                           ;os.c: 501: if(system_output_is_on(output))
  6753  01A780  0100               	movlb	0	; () banked
  6754  01A782  5162               	movf	system_output_toggle@output& (0+255),w,b
  6755  01A784  EC71  F0D4         	call	_system_output_is_on
  6756  01A788  0900               	iorlw	0
  6757  01A78A  B4D8               	btfsc	status,2,c
  6758  01A78C  D005               	goto	l19302
  6759                           
  6760                           ;os.c: 502: system_output_off(output);
  6761  01A78E  0100               	movlb	0	; () banked
  6762  01A790  5162               	movf	system_output_toggle@output& (0+255),w,b
  6763  01A792  EC35  F0CD         	call	_system_output_off
  6764  01A796  0012               	return	
  6765  01A798                     l19302:
  6766                           
  6767                           ;os.c: 503: else
  6768                           ;os.c: 504: system_output_on(output);
  6769  01A798  0100               	movlb	0	; () banked
  6770  01A79A  5162               	movf	system_output_toggle@output& (0+255),w,b
  6771  01A79C  EC83  F0CE         	call	_system_output_on
  6772  01A7A0  0012               	return	
  6773  01A7A2                     __end_of_system_output_toggle:
  6774                           	opt stack 0
  6775                           tblptru	equ	0xFF8
  6776                           tblptrh	equ	0xFF7
  6777                           tblptrl	equ	0xFF6
  6778                           tablat	equ	0xFF5
  6779                           intcon3	equ	0xFF0
  6780                           postinc0	equ	0xFEE
  6781                           wreg	equ	0xFE8
  6782                           postdec1	equ	0xFE5
  6783                           plusw1	equ	0xFE3
  6784                           fsr1h	equ	0xFE2
  6785                           fsr1l	equ	0xFE1
  6786                           postinc2	equ	0xFDE
  6787                           postdec2	equ	0xFDD
  6788                           plusw2	equ	0xFDB
  6789                           fsr2h	equ	0xFDA
  6790                           fsr2l	equ	0xFD9
  6791                           status	equ	0xFD8
  6792                           
  6793 ;; *************** function _rtcc_increment_year *****************
  6794 ;; Defined at:
  6795 ;;		line 126 in file "rtcc.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;		None
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;  year            1    8[BANK0 ] unsigned char 
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  1    wreg      void 
  6802 ;; Registers used:
  6803 ;;		wreg, status,2, status,0, cstack
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6810 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6812 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6813 ;;Total ram usage:        1 bytes
  6814 ;; Hardware stack levels used:    1
  6815 ;; Hardware stack levels required when called:   12
  6816 ;; This function calls:
  6817 ;;		__rtcc_increment_bcd
  6818 ;;		_rtcc_get_year
  6819 ;;		_rtcc_set_year
  6820 ;; This function is called by:
  6821 ;;		__ui_encoder
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           	psect	text10
  6826  01A534                     __ptext10:
  6827                           	opt stack 0
  6828  01A534                     _rtcc_increment_year:
  6829                           	opt stack 16
  6830                           
  6831                           ;rtcc.c: 128: uint8_t year = rtcc_get_year();
  6832                           
  6833                           ;incstack = 0
  6834  01A534  EC19  F0D5         	call	_rtcc_get_year	;wreg free
  6835  01A538  0100               	movlb	0	; () banked
  6836  01A53A  6F68               	movwf	rtcc_increment_year@year& (0+255),b
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;rtcc.c: 129: year = _rtcc_increment_bcd(year, 0x00, 0x99);
  6840  01A53C  0E00               	movlw	0
  6841  01A53E  0100               	movlb	0	; () banked
  6842  01A540  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6843  01A542  0E99               	movlw	153
  6844  01A544  0100               	movlb	0	; () banked
  6845  01A546  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6846  01A548  0100               	movlb	0	; () banked
  6847  01A54A  5168               	movf	rtcc_increment_year@year& (0+255),w,b
  6848  01A54C  ECC2  F0CF         	call	__rtcc_increment_bcd
  6849  01A550  0100               	movlb	0	; () banked
  6850  01A552  6F68               	movwf	rtcc_increment_year@year& (0+255),b
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;rtcc.c: 130: rtcc_set_year(year);
  6854  01A554  0100               	movlb	0	; () banked
  6855  01A556  5168               	movf	rtcc_increment_year@year& (0+255),w,b
  6856  01A558  EC7E  F0D4         	call	_rtcc_set_year
  6857  01A55C  0012               	return		;funcret
  6858  01A55E                     __end_of_rtcc_increment_year:
  6859                           	opt stack 0
  6860                           tblptru	equ	0xFF8
  6861                           tblptrh	equ	0xFF7
  6862                           tblptrl	equ	0xFF6
  6863                           tablat	equ	0xFF5
  6864                           intcon3	equ	0xFF0
  6865                           postinc0	equ	0xFEE
  6866                           wreg	equ	0xFE8
  6867                           postdec1	equ	0xFE5
  6868                           plusw1	equ	0xFE3
  6869                           fsr1h	equ	0xFE2
  6870                           fsr1l	equ	0xFE1
  6871                           postinc2	equ	0xFDE
  6872                           postdec2	equ	0xFDD
  6873                           plusw2	equ	0xFDB
  6874                           fsr2h	equ	0xFDA
  6875                           fsr2l	equ	0xFD9
  6876                           status	equ	0xFD8
  6877                           
  6878 ;; *************** function _rtcc_increment_seconds *****************
  6879 ;; Defined at:
  6880 ;;		line 316 in file "rtcc.c"
  6881 ;; Parameters:    Size  Location     Type
  6882 ;;		None
  6883 ;; Auto vars:     Size  Location     Type
  6884 ;;  seconds         1    8[BANK0 ] unsigned char 
  6885 ;; Return value:  Size  Location     Type
  6886 ;;                  1    wreg      void 
  6887 ;; Registers used:
  6888 ;;		wreg, status,2, status,0, cstack
  6889 ;; Tracked objects:
  6890 ;;		On entry : 0/0
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6895 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6897 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6898 ;;Total ram usage:        1 bytes
  6899 ;; Hardware stack levels used:    1
  6900 ;; Hardware stack levels required when called:   12
  6901 ;; This function calls:
  6902 ;;		__rtcc_increment_bcd
  6903 ;;		_rtcc_get_seconds
  6904 ;;		_rtcc_set_seconds
  6905 ;; This function is called by:
  6906 ;;		__ui_encoder
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           	psect	text11
  6911  01A55E                     __ptext11:
  6912                           	opt stack 0
  6913  01A55E                     _rtcc_increment_seconds:
  6914                           	opt stack 16
  6915                           
  6916                           ;rtcc.c: 318: uint8_t seconds = rtcc_get_seconds();
  6917                           
  6918                           ;incstack = 0
  6919  01A55E  EC23  F0D5         	call	_rtcc_get_seconds	;wreg free
  6920  01A562  0100               	movlb	0	; () banked
  6921  01A564  6F68               	movwf	rtcc_increment_seconds@seconds& (0+255),b
  6922                           
  6923                           ; BSR set to: 0
  6924                           ;rtcc.c: 319: seconds = _rtcc_increment_bcd(seconds, 0x00, 0x59);
  6925  01A566  0E00               	movlw	0
  6926  01A568  0100               	movlb	0	; () banked
  6927  01A56A  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  6928  01A56C  0E59               	movlw	89
  6929  01A56E  0100               	movlb	0	; () banked
  6930  01A570  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  6931  01A572  0100               	movlb	0	; () banked
  6932  01A574  5168               	movf	rtcc_increment_seconds@seconds& (0+255),w,b
  6933  01A576  ECC2  F0CF         	call	__rtcc_increment_bcd
  6934  01A57A  0100               	movlb	0	; () banked
  6935  01A57C  6F68               	movwf	rtcc_increment_seconds@seconds& (0+255),b
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;rtcc.c: 320: rtcc_set_seconds(seconds);
  6939  01A57E  0100               	movlb	0	; () banked
  6940  01A580  5168               	movf	rtcc_increment_seconds@seconds& (0+255),w,b
  6941  01A582  EC8B  F0D4         	call	_rtcc_set_seconds
  6942  01A586  0012               	return		;funcret
  6943  01A588                     __end_of_rtcc_increment_seconds:
  6944                           	opt stack 0
  6945                           tblptru	equ	0xFF8
  6946                           tblptrh	equ	0xFF7
  6947                           tblptrl	equ	0xFF6
  6948                           tablat	equ	0xFF5
  6949                           intcon3	equ	0xFF0
  6950                           postinc0	equ	0xFEE
  6951                           wreg	equ	0xFE8
  6952                           postdec1	equ	0xFE5
  6953                           plusw1	equ	0xFE3
  6954                           fsr1h	equ	0xFE2
  6955                           fsr1l	equ	0xFE1
  6956                           postinc2	equ	0xFDE
  6957                           postdec2	equ	0xFDD
  6958                           plusw2	equ	0xFDB
  6959                           fsr2h	equ	0xFDA
  6960                           fsr2l	equ	0xFD9
  6961                           status	equ	0xFD8
  6962                           
  6963 ;; *************** function _rtcc_increment_month *****************
  6964 ;; Defined at:
  6965 ;;		line 164 in file "rtcc.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;		None
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;  month           1    8[BANK0 ] unsigned char 
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  1    wreg      void 
  6972 ;; Registers used:
  6973 ;;		wreg, status,2, status,0, cstack
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6980 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6982 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6983 ;;Total ram usage:        1 bytes
  6984 ;; Hardware stack levels used:    1
  6985 ;; Hardware stack levels required when called:   12
  6986 ;; This function calls:
  6987 ;;		__rtcc_increment_bcd
  6988 ;;		_rtcc_get_month
  6989 ;;		_rtcc_set_month
  6990 ;; This function is called by:
  6991 ;;		__ui_encoder
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           	psect	text12
  6996  01A588                     __ptext12:
  6997                           	opt stack 0
  6998  01A588                     _rtcc_increment_month:
  6999                           	opt stack 16
  7000                           
  7001                           ;rtcc.c: 166: uint8_t month = rtcc_get_month();
  7002                           
  7003                           ;incstack = 0
  7004  01A588  EC2D  F0D5         	call	_rtcc_get_month	;wreg free
  7005  01A58C  0100               	movlb	0	; () banked
  7006  01A58E  6F68               	movwf	rtcc_increment_month@month& (0+255),b
  7007                           
  7008                           ; BSR set to: 0
  7009                           ;rtcc.c: 167: month = _rtcc_increment_bcd(month, 0x01, 0x12);
  7010  01A590  0E01               	movlw	1
  7011  01A592  0100               	movlb	0	; () banked
  7012  01A594  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7013  01A596  0E12               	movlw	18
  7014  01A598  0100               	movlb	0	; () banked
  7015  01A59A  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7016  01A59C  0100               	movlb	0	; () banked
  7017  01A59E  5168               	movf	rtcc_increment_month@month& (0+255),w,b
  7018  01A5A0  ECC2  F0CF         	call	__rtcc_increment_bcd
  7019  01A5A4  0100               	movlb	0	; () banked
  7020  01A5A6  6F68               	movwf	rtcc_increment_month@month& (0+255),b
  7021                           
  7022                           ; BSR set to: 0
  7023                           ;rtcc.c: 168: rtcc_set_month(month);
  7024  01A5A8  0100               	movlb	0	; () banked
  7025  01A5AA  5168               	movf	rtcc_increment_month@month& (0+255),w,b
  7026  01A5AC  EC98  F0D4         	call	_rtcc_set_month
  7027  01A5B0  0012               	return		;funcret
  7028  01A5B2                     __end_of_rtcc_increment_month:
  7029                           	opt stack 0
  7030                           tblptru	equ	0xFF8
  7031                           tblptrh	equ	0xFF7
  7032                           tblptrl	equ	0xFF6
  7033                           tablat	equ	0xFF5
  7034                           intcon3	equ	0xFF0
  7035                           postinc0	equ	0xFEE
  7036                           wreg	equ	0xFE8
  7037                           postdec1	equ	0xFE5
  7038                           plusw1	equ	0xFE3
  7039                           fsr1h	equ	0xFE2
  7040                           fsr1l	equ	0xFE1
  7041                           postinc2	equ	0xFDE
  7042                           postdec2	equ	0xFDD
  7043                           plusw2	equ	0xFDB
  7044                           fsr2h	equ	0xFDA
  7045                           fsr2l	equ	0xFD9
  7046                           status	equ	0xFD8
  7047                           
  7048 ;; *************** function _rtcc_increment_minutes *****************
  7049 ;; Defined at:
  7050 ;;		line 278 in file "rtcc.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;		None
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;  minutes         1    8[BANK0 ] unsigned char 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1    wreg      void 
  7057 ;; Registers used:
  7058 ;;		wreg, status,2, status,0, cstack
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7065 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7067 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7068 ;;Total ram usage:        1 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:   12
  7071 ;; This function calls:
  7072 ;;		__rtcc_increment_bcd
  7073 ;;		_rtcc_get_minutes
  7074 ;;		_rtcc_set_minutes
  7075 ;; This function is called by:
  7076 ;;		__ui_encoder
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080                           	psect	text13
  7081  01A5B2                     __ptext13:
  7082                           	opt stack 0
  7083  01A5B2                     _rtcc_increment_minutes:
  7084                           	opt stack 16
  7085                           
  7086                           ;rtcc.c: 280: uint8_t minutes = rtcc_get_minutes();
  7087                           
  7088                           ;incstack = 0
  7089  01A5B2  EC37  F0D5         	call	_rtcc_get_minutes	;wreg free
  7090  01A5B6  0100               	movlb	0	; () banked
  7091  01A5B8  6F68               	movwf	rtcc_increment_minutes@minutes& (0+255),b
  7092                           
  7093                           ; BSR set to: 0
  7094                           ;rtcc.c: 281: minutes = _rtcc_increment_bcd(minutes, 0x00, 0x59);
  7095  01A5BA  0E00               	movlw	0
  7096  01A5BC  0100               	movlb	0	; () banked
  7097  01A5BE  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7098  01A5C0  0E59               	movlw	89
  7099  01A5C2  0100               	movlb	0	; () banked
  7100  01A5C4  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7101  01A5C6  0100               	movlb	0	; () banked
  7102  01A5C8  5168               	movf	rtcc_increment_minutes@minutes& (0+255),w,b
  7103  01A5CA  ECC2  F0CF         	call	__rtcc_increment_bcd
  7104  01A5CE  0100               	movlb	0	; () banked
  7105  01A5D0  6F68               	movwf	rtcc_increment_minutes@minutes& (0+255),b
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;rtcc.c: 282: rtcc_set_minutes(minutes);
  7109  01A5D2  0100               	movlb	0	; () banked
  7110  01A5D4  5168               	movf	rtcc_increment_minutes@minutes& (0+255),w,b
  7111  01A5D6  ECA5  F0D4         	call	_rtcc_set_minutes
  7112  01A5DA  0012               	return		;funcret
  7113  01A5DC                     __end_of_rtcc_increment_minutes:
  7114                           	opt stack 0
  7115                           tblptru	equ	0xFF8
  7116                           tblptrh	equ	0xFF7
  7117                           tblptrl	equ	0xFF6
  7118                           tablat	equ	0xFF5
  7119                           intcon3	equ	0xFF0
  7120                           postinc0	equ	0xFEE
  7121                           wreg	equ	0xFE8
  7122                           postdec1	equ	0xFE5
  7123                           plusw1	equ	0xFE3
  7124                           fsr1h	equ	0xFE2
  7125                           fsr1l	equ	0xFE1
  7126                           postinc2	equ	0xFDE
  7127                           postdec2	equ	0xFDD
  7128                           plusw2	equ	0xFDB
  7129                           fsr2h	equ	0xFDA
  7130                           fsr2l	equ	0xFD9
  7131                           status	equ	0xFD8
  7132                           
  7133 ;; *************** function _rtcc_increment_hours *****************
  7134 ;; Defined at:
  7135 ;;		line 240 in file "rtcc.c"
  7136 ;; Parameters:    Size  Location     Type
  7137 ;;		None
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;  hours           1    8[BANK0 ] unsigned char 
  7140 ;; Return value:  Size  Location     Type
  7141 ;;                  1    wreg      void 
  7142 ;; Registers used:
  7143 ;;		wreg, status,2, status,0, cstack
  7144 ;; Tracked objects:
  7145 ;;		On entry : 0/0
  7146 ;;		On exit  : 0/0
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7150 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7152 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7153 ;;Total ram usage:        1 bytes
  7154 ;; Hardware stack levels used:    1
  7155 ;; Hardware stack levels required when called:   12
  7156 ;; This function calls:
  7157 ;;		__rtcc_increment_bcd
  7158 ;;		_rtcc_get_hours
  7159 ;;		_rtcc_set_hours
  7160 ;; This function is called by:
  7161 ;;		__ui_encoder
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           	psect	text14
  7166  01A5DC                     __ptext14:
  7167                           	opt stack 0
  7168  01A5DC                     _rtcc_increment_hours:
  7169                           	opt stack 16
  7170                           
  7171                           ;rtcc.c: 242: uint8_t hours = rtcc_get_hours();
  7172                           
  7173                           ;incstack = 0
  7174  01A5DC  EC41  F0D5         	call	_rtcc_get_hours	;wreg free
  7175  01A5E0  0100               	movlb	0	; () banked
  7176  01A5E2  6F68               	movwf	rtcc_increment_hours@hours& (0+255),b
  7177                           
  7178                           ; BSR set to: 0
  7179                           ;rtcc.c: 243: hours = _rtcc_increment_bcd(hours, 0x00, 0x23);
  7180  01A5E4  0E00               	movlw	0
  7181  01A5E6  0100               	movlb	0	; () banked
  7182  01A5E8  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7183  01A5EA  0E23               	movlw	35
  7184  01A5EC  0100               	movlb	0	; () banked
  7185  01A5EE  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7186  01A5F0  0100               	movlb	0	; () banked
  7187  01A5F2  5168               	movf	rtcc_increment_hours@hours& (0+255),w,b
  7188  01A5F4  ECC2  F0CF         	call	__rtcc_increment_bcd
  7189  01A5F8  0100               	movlb	0	; () banked
  7190  01A5FA  6F68               	movwf	rtcc_increment_hours@hours& (0+255),b
  7191                           
  7192                           ; BSR set to: 0
  7193                           ;rtcc.c: 244: rtcc_set_hours(hours);
  7194  01A5FC  0100               	movlb	0	; () banked
  7195  01A5FE  5168               	movf	rtcc_increment_hours@hours& (0+255),w,b
  7196  01A600  ECB2  F0D4         	call	_rtcc_set_hours
  7197  01A604  0012               	return		;funcret
  7198  01A606                     __end_of_rtcc_increment_hours:
  7199                           	opt stack 0
  7200                           tblptru	equ	0xFF8
  7201                           tblptrh	equ	0xFF7
  7202                           tblptrl	equ	0xFF6
  7203                           tablat	equ	0xFF5
  7204                           intcon3	equ	0xFF0
  7205                           postinc0	equ	0xFEE
  7206                           wreg	equ	0xFE8
  7207                           postdec1	equ	0xFE5
  7208                           plusw1	equ	0xFE3
  7209                           fsr1h	equ	0xFE2
  7210                           fsr1l	equ	0xFE1
  7211                           postinc2	equ	0xFDE
  7212                           postdec2	equ	0xFDD
  7213                           plusw2	equ	0xFDB
  7214                           fsr2h	equ	0xFDA
  7215                           fsr2l	equ	0xFD9
  7216                           status	equ	0xFD8
  7217                           
  7218 ;; *************** function _rtcc_increment_day *****************
  7219 ;; Defined at:
  7220 ;;		line 202 in file "rtcc.c"
  7221 ;; Parameters:    Size  Location     Type
  7222 ;;		None
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;  day             1    8[BANK0 ] unsigned char 
  7225 ;; Return value:  Size  Location     Type
  7226 ;;                  1    wreg      void 
  7227 ;; Registers used:
  7228 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7229 ;; Tracked objects:
  7230 ;;		On entry : 0/0
  7231 ;;		On exit  : 0/0
  7232 ;;		Unchanged: 0/0
  7233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7235 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7237 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7238 ;;Total ram usage:        1 bytes
  7239 ;; Hardware stack levels used:    1
  7240 ;; Hardware stack levels required when called:   12
  7241 ;; This function calls:
  7242 ;;		__number_of_days
  7243 ;;		__rtcc_increment_bcd
  7244 ;;		_rtcc_get_day
  7245 ;;		_rtcc_set_day
  7246 ;; This function is called by:
  7247 ;;		__ui_encoder
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           
  7251                           	psect	text15
  7252  01A484                     __ptext15:
  7253                           	opt stack 0
  7254  01A484                     _rtcc_increment_day:
  7255                           	opt stack 16
  7256                           
  7257                           ;rtcc.c: 204: uint8_t day = rtcc_get_day();
  7258                           
  7259                           ;incstack = 0
  7260  01A484  EC4B  F0D5         	call	_rtcc_get_day	;wreg free
  7261  01A488  0100               	movlb	0	; () banked
  7262  01A48A  6F68               	movwf	rtcc_increment_day@day& (0+255),b
  7263                           
  7264                           ; BSR set to: 0
  7265                           ;rtcc.c: 205: day = _rtcc_increment_bcd(day, 0x01, _number_of_days());
  7266  01A48C  0E01               	movlw	1
  7267  01A48E  0100               	movlb	0	; () banked
  7268  01A490  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7269  01A492  ECCD  F0C5         	call	__number_of_days	;wreg free
  7270  01A496  0100               	movlb	0	; () banked
  7271  01A498  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7272  01A49A  0100               	movlb	0	; () banked
  7273  01A49C  5168               	movf	rtcc_increment_day@day& (0+255),w,b
  7274  01A49E  ECC2  F0CF         	call	__rtcc_increment_bcd
  7275  01A4A2  0100               	movlb	0	; () banked
  7276  01A4A4  6F68               	movwf	rtcc_increment_day@day& (0+255),b
  7277                           
  7278                           ; BSR set to: 0
  7279                           ;rtcc.c: 206: rtcc_set_day(day);
  7280  01A4A6  0100               	movlb	0	; () banked
  7281  01A4A8  5168               	movf	rtcc_increment_day@day& (0+255),w,b
  7282  01A4AA  ECBF  F0D4         	call	_rtcc_set_day
  7283  01A4AE  0012               	return		;funcret
  7284  01A4B0                     __end_of_rtcc_increment_day:
  7285                           	opt stack 0
  7286                           tblptru	equ	0xFF8
  7287                           tblptrh	equ	0xFF7
  7288                           tblptrl	equ	0xFF6
  7289                           tablat	equ	0xFF5
  7290                           intcon3	equ	0xFF0
  7291                           postinc0	equ	0xFEE
  7292                           wreg	equ	0xFE8
  7293                           postdec1	equ	0xFE5
  7294                           plusw1	equ	0xFE3
  7295                           fsr1h	equ	0xFE2
  7296                           fsr1l	equ	0xFE1
  7297                           postinc2	equ	0xFDE
  7298                           postdec2	equ	0xFDD
  7299                           plusw2	equ	0xFDB
  7300                           fsr2h	equ	0xFDA
  7301                           fsr2l	equ	0xFD9
  7302                           status	equ	0xFD8
  7303                           
  7304 ;; *************** function __rtcc_increment_bcd *****************
  7305 ;; Defined at:
  7306 ;;		line 34 in file "rtcc.c"
  7307 ;; Parameters:    Size  Location     Type
  7308 ;;  value           1    wreg     unsigned char 
  7309 ;;  min             1    4[BANK0 ] unsigned char 
  7310 ;;  max             1    5[BANK0 ] unsigned char 
  7311 ;; Auto vars:     Size  Location     Type
  7312 ;;  value           1    7[BANK0 ] unsigned char 
  7313 ;; Return value:  Size  Location     Type
  7314 ;;                  1    wreg      unsigned char 
  7315 ;; Registers used:
  7316 ;;		wreg, status,2, status,0
  7317 ;; Tracked objects:
  7318 ;;		On entry : 0/0
  7319 ;;		On exit  : 0/0
  7320 ;;		Unchanged: 0/0
  7321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7322 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7323 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7324 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7325 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7326 ;;Total ram usage:        4 bytes
  7327 ;; Hardware stack levels used:    1
  7328 ;; Hardware stack levels required when called:   10
  7329 ;; This function calls:
  7330 ;;		Nothing
  7331 ;; This function is called by:
  7332 ;;		_rtcc_increment_year
  7333 ;;		_rtcc_increment_month
  7334 ;;		_rtcc_increment_day
  7335 ;;		_rtcc_increment_hours
  7336 ;;		_rtcc_increment_minutes
  7337 ;;		_rtcc_increment_seconds
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           
  7341                           	psect	text16
  7342  019F84                     __ptext16:
  7343                           	opt stack 0
  7344  019F84                     __rtcc_increment_bcd:
  7345                           	opt stack 17
  7346                           
  7347                           ;incstack = 0
  7348                           ;__rtcc_increment_bcd@value stored from wreg
  7349  019F84  0100               	movlb	0	; () banked
  7350  019F86  6F67               	movwf	__rtcc_increment_bcd@value& (0+255),b
  7351                           
  7352                           ;rtcc.c: 36: if(value==max)
  7353  019F88  0100               	movlb	0	; () banked
  7354  019F8A  5165               	movf	__rtcc_increment_bcd@max& (0+255),w,b
  7355  019F8C  0100               	movlb	0	; () banked
  7356  019F8E  1967               	xorwf	__rtcc_increment_bcd@value& (0+255),w,b
  7357  019F90  A4D8               	btfss	status,2,c
  7358  019F92  D003               	goto	l12924
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;rtcc.c: 37: return min;
  7362  019F94  0100               	movlb	0	; () banked
  7363  019F96  5164               	movf	__rtcc_increment_bcd@min& (0+255),w,b
  7364  019F98  0012               	return	
  7365  019F9A                     l12924:
  7366                           
  7367                           ; BSR set to: 0
  7368                           ;rtcc.c: 38: ++value;
  7369  019F9A  0100               	movlb	0	; () banked
  7370  019F9C  2B67               	incf	__rtcc_increment_bcd@value& (0+255),f,b
  7371                           
  7372                           ;rtcc.c: 39: if((value&0x0F)>0x09)
  7373  019F9E  C067  F066         	movff	__rtcc_increment_bcd@value,??__rtcc_increment_bcd
  7374  019FA2  0E0F               	movlw	15
  7375  019FA4  0100               	movlb	0	; () banked
  7376  019FA6  1766               	andwf	??__rtcc_increment_bcd& (0+255),f,b
  7377  019FA8  0E09               	movlw	9
  7378  019FAA  0100               	movlb	0	; () banked
  7379  019FAC  6566               	cpfsgt	??__rtcc_increment_bcd& (0+255),b
  7380  019FAE  D006               	goto	l12928
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;rtcc.c: 40: {
  7384                           ;rtcc.c: 41: value += 0x10;
  7385  019FB0  0E10               	movlw	16
  7386  019FB2  0100               	movlb	0	; () banked
  7387  019FB4  2767               	addwf	__rtcc_increment_bcd@value& (0+255),f,b
  7388                           
  7389                           ;rtcc.c: 42: value &= 0xF0;
  7390  019FB6  0EF0               	movlw	240
  7391  019FB8  0100               	movlb	0	; () banked
  7392  019FBA  1767               	andwf	__rtcc_increment_bcd@value& (0+255),f,b
  7393  019FBC                     l12928:
  7394                           
  7395                           ; BSR set to: 0
  7396                           ;rtcc.c: 43: }
  7397                           ;rtcc.c: 44: return value;
  7398  019FBC  0100               	movlb	0	; () banked
  7399  019FBE  5167               	movf	__rtcc_increment_bcd@value& (0+255),w,b
  7400  019FC0  0012               	return	
  7401  019FC2                     __end_of__rtcc_increment_bcd:
  7402                           	opt stack 0
  7403                           tblptru	equ	0xFF8
  7404                           tblptrh	equ	0xFF7
  7405                           tblptrl	equ	0xFF6
  7406                           tablat	equ	0xFF5
  7407                           intcon3	equ	0xFF0
  7408                           postinc0	equ	0xFEE
  7409                           wreg	equ	0xFE8
  7410                           postdec1	equ	0xFE5
  7411                           plusw1	equ	0xFE3
  7412                           fsr1h	equ	0xFE2
  7413                           fsr1l	equ	0xFE1
  7414                           postinc2	equ	0xFDE
  7415                           postdec2	equ	0xFDD
  7416                           plusw2	equ	0xFDB
  7417                           fsr2h	equ	0xFDA
  7418                           fsr2l	equ	0xFD9
  7419                           status	equ	0xFD8
  7420                           
  7421 ;; *************** function _rtcc_decrement_year *****************
  7422 ;; Defined at:
  7423 ;;		line 133 in file "rtcc.c"
  7424 ;; Parameters:    Size  Location     Type
  7425 ;;		None
  7426 ;; Auto vars:     Size  Location     Type
  7427 ;;  year            1    8[BANK0 ] unsigned char 
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  1    wreg      void 
  7430 ;; Registers used:
  7431 ;;		wreg, status,2, status,0, cstack
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7438 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7440 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7441 ;;Total ram usage:        1 bytes
  7442 ;; Hardware stack levels used:    1
  7443 ;; Hardware stack levels required when called:   12
  7444 ;; This function calls:
  7445 ;;		__rtcc_decrement_bcd
  7446 ;;		_rtcc_get_year
  7447 ;;		_rtcc_set_year
  7448 ;; This function is called by:
  7449 ;;		__ui_encoder
  7450 ;; This function uses a non-reentrant model
  7451 ;;
  7452                           
  7453                           	psect	text17
  7454  01A606                     __ptext17:
  7455                           	opt stack 0
  7456  01A606                     _rtcc_decrement_year:
  7457                           	opt stack 16
  7458                           
  7459                           ;rtcc.c: 135: uint8_t year = rtcc_get_year();
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;incstack = 0
  7463  01A606  EC19  F0D5         	call	_rtcc_get_year	;wreg free
  7464  01A60A  0100               	movlb	0	; () banked
  7465  01A60C  6F68               	movwf	rtcc_decrement_year@year& (0+255),b
  7466                           
  7467                           ; BSR set to: 0
  7468                           ;rtcc.c: 136: year = _rtcc_decrement_bcd(year, 0x00, 0x99);
  7469  01A60E  0E00               	movlw	0
  7470  01A610  0100               	movlb	0	; () banked
  7471  01A612  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7472  01A614  0E99               	movlw	153
  7473  01A616  0100               	movlb	0	; () banked
  7474  01A618  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7475  01A61A  0100               	movlb	0	; () banked
  7476  01A61C  5168               	movf	rtcc_decrement_year@year& (0+255),w,b
  7477  01A61E  ECE1  F0CF         	call	__rtcc_decrement_bcd
  7478  01A622  0100               	movlb	0	; () banked
  7479  01A624  6F68               	movwf	rtcc_decrement_year@year& (0+255),b
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;rtcc.c: 137: rtcc_set_year(year);
  7483  01A626  0100               	movlb	0	; () banked
  7484  01A628  5168               	movf	rtcc_decrement_year@year& (0+255),w,b
  7485  01A62A  EC7E  F0D4         	call	_rtcc_set_year
  7486  01A62E  0012               	return		;funcret
  7487  01A630                     __end_of_rtcc_decrement_year:
  7488                           	opt stack 0
  7489                           tblptru	equ	0xFF8
  7490                           tblptrh	equ	0xFF7
  7491                           tblptrl	equ	0xFF6
  7492                           tablat	equ	0xFF5
  7493                           intcon3	equ	0xFF0
  7494                           postinc0	equ	0xFEE
  7495                           wreg	equ	0xFE8
  7496                           postdec1	equ	0xFE5
  7497                           plusw1	equ	0xFE3
  7498                           fsr1h	equ	0xFE2
  7499                           fsr1l	equ	0xFE1
  7500                           postinc2	equ	0xFDE
  7501                           postdec2	equ	0xFDD
  7502                           plusw2	equ	0xFDB
  7503                           fsr2h	equ	0xFDA
  7504                           fsr2l	equ	0xFD9
  7505                           status	equ	0xFD8
  7506                           
  7507 ;; *************** function _rtcc_decrement_seconds *****************
  7508 ;; Defined at:
  7509 ;;		line 323 in file "rtcc.c"
  7510 ;; Parameters:    Size  Location     Type
  7511 ;;		None
  7512 ;; Auto vars:     Size  Location     Type
  7513 ;;  seconds         1    8[BANK0 ] unsigned char 
  7514 ;; Return value:  Size  Location     Type
  7515 ;;                  1    wreg      void 
  7516 ;; Registers used:
  7517 ;;		wreg, status,2, status,0, cstack
  7518 ;; Tracked objects:
  7519 ;;		On entry : 0/0
  7520 ;;		On exit  : 0/0
  7521 ;;		Unchanged: 0/0
  7522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7524 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7526 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7527 ;;Total ram usage:        1 bytes
  7528 ;; Hardware stack levels used:    1
  7529 ;; Hardware stack levels required when called:   12
  7530 ;; This function calls:
  7531 ;;		__rtcc_decrement_bcd
  7532 ;;		_rtcc_get_seconds
  7533 ;;		_rtcc_set_seconds
  7534 ;; This function is called by:
  7535 ;;		__ui_encoder
  7536 ;; This function uses a non-reentrant model
  7537 ;;
  7538                           
  7539                           	psect	text18
  7540  01A630                     __ptext18:
  7541                           	opt stack 0
  7542  01A630                     _rtcc_decrement_seconds:
  7543                           	opt stack 16
  7544                           
  7545                           ;rtcc.c: 325: uint8_t seconds = rtcc_get_seconds();
  7546                           
  7547                           ;incstack = 0
  7548  01A630  EC23  F0D5         	call	_rtcc_get_seconds	;wreg free
  7549  01A634  0100               	movlb	0	; () banked
  7550  01A636  6F68               	movwf	rtcc_decrement_seconds@seconds& (0+255),b
  7551                           
  7552                           ; BSR set to: 0
  7553                           ;rtcc.c: 326: seconds = _rtcc_decrement_bcd(seconds, 0x00, 0x59);
  7554  01A638  0E00               	movlw	0
  7555  01A63A  0100               	movlb	0	; () banked
  7556  01A63C  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7557  01A63E  0E59               	movlw	89
  7558  01A640  0100               	movlb	0	; () banked
  7559  01A642  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7560  01A644  0100               	movlb	0	; () banked
  7561  01A646  5168               	movf	rtcc_decrement_seconds@seconds& (0+255),w,b
  7562  01A648  ECE1  F0CF         	call	__rtcc_decrement_bcd
  7563  01A64C  0100               	movlb	0	; () banked
  7564  01A64E  6F68               	movwf	rtcc_decrement_seconds@seconds& (0+255),b
  7565                           
  7566                           ; BSR set to: 0
  7567                           ;rtcc.c: 327: rtcc_set_seconds(seconds);
  7568  01A650  0100               	movlb	0	; () banked
  7569  01A652  5168               	movf	rtcc_decrement_seconds@seconds& (0+255),w,b
  7570  01A654  EC8B  F0D4         	call	_rtcc_set_seconds
  7571  01A658  0012               	return		;funcret
  7572  01A65A                     __end_of_rtcc_decrement_seconds:
  7573                           	opt stack 0
  7574                           tblptru	equ	0xFF8
  7575                           tblptrh	equ	0xFF7
  7576                           tblptrl	equ	0xFF6
  7577                           tablat	equ	0xFF5
  7578                           intcon3	equ	0xFF0
  7579                           postinc0	equ	0xFEE
  7580                           wreg	equ	0xFE8
  7581                           postdec1	equ	0xFE5
  7582                           plusw1	equ	0xFE3
  7583                           fsr1h	equ	0xFE2
  7584                           fsr1l	equ	0xFE1
  7585                           postinc2	equ	0xFDE
  7586                           postdec2	equ	0xFDD
  7587                           plusw2	equ	0xFDB
  7588                           fsr2h	equ	0xFDA
  7589                           fsr2l	equ	0xFD9
  7590                           status	equ	0xFD8
  7591                           
  7592 ;; *************** function _rtcc_decrement_month *****************
  7593 ;; Defined at:
  7594 ;;		line 171 in file "rtcc.c"
  7595 ;; Parameters:    Size  Location     Type
  7596 ;;		None
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;  month           1    8[BANK0 ] unsigned char 
  7599 ;; Return value:  Size  Location     Type
  7600 ;;                  1    wreg      void 
  7601 ;; Registers used:
  7602 ;;		wreg, status,2, status,0, cstack
  7603 ;; Tracked objects:
  7604 ;;		On entry : 0/0
  7605 ;;		On exit  : 0/0
  7606 ;;		Unchanged: 0/0
  7607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7609 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7611 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7612 ;;Total ram usage:        1 bytes
  7613 ;; Hardware stack levels used:    1
  7614 ;; Hardware stack levels required when called:   12
  7615 ;; This function calls:
  7616 ;;		__rtcc_decrement_bcd
  7617 ;;		_rtcc_get_month
  7618 ;;		_rtcc_set_month
  7619 ;; This function is called by:
  7620 ;;		__ui_encoder
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           
  7624                           	psect	text19
  7625  01A65A                     __ptext19:
  7626                           	opt stack 0
  7627  01A65A                     _rtcc_decrement_month:
  7628                           	opt stack 16
  7629                           
  7630                           ;rtcc.c: 173: uint8_t month = rtcc_get_month();
  7631                           
  7632                           ;incstack = 0
  7633  01A65A  EC2D  F0D5         	call	_rtcc_get_month	;wreg free
  7634  01A65E  0100               	movlb	0	; () banked
  7635  01A660  6F68               	movwf	rtcc_decrement_month@month& (0+255),b
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;rtcc.c: 174: month = _rtcc_decrement_bcd(month, 0x01, 0x12);
  7639  01A662  0E01               	movlw	1
  7640  01A664  0100               	movlb	0	; () banked
  7641  01A666  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7642  01A668  0E12               	movlw	18
  7643  01A66A  0100               	movlb	0	; () banked
  7644  01A66C  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7645  01A66E  0100               	movlb	0	; () banked
  7646  01A670  5168               	movf	rtcc_decrement_month@month& (0+255),w,b
  7647  01A672  ECE1  F0CF         	call	__rtcc_decrement_bcd
  7648  01A676  0100               	movlb	0	; () banked
  7649  01A678  6F68               	movwf	rtcc_decrement_month@month& (0+255),b
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;rtcc.c: 175: rtcc_set_month(month);
  7653  01A67A  0100               	movlb	0	; () banked
  7654  01A67C  5168               	movf	rtcc_decrement_month@month& (0+255),w,b
  7655  01A67E  EC98  F0D4         	call	_rtcc_set_month
  7656  01A682  0012               	return		;funcret
  7657  01A684                     __end_of_rtcc_decrement_month:
  7658                           	opt stack 0
  7659                           tblptru	equ	0xFF8
  7660                           tblptrh	equ	0xFF7
  7661                           tblptrl	equ	0xFF6
  7662                           tablat	equ	0xFF5
  7663                           intcon3	equ	0xFF0
  7664                           postinc0	equ	0xFEE
  7665                           wreg	equ	0xFE8
  7666                           postdec1	equ	0xFE5
  7667                           plusw1	equ	0xFE3
  7668                           fsr1h	equ	0xFE2
  7669                           fsr1l	equ	0xFE1
  7670                           postinc2	equ	0xFDE
  7671                           postdec2	equ	0xFDD
  7672                           plusw2	equ	0xFDB
  7673                           fsr2h	equ	0xFDA
  7674                           fsr2l	equ	0xFD9
  7675                           status	equ	0xFD8
  7676                           
  7677 ;; *************** function _rtcc_decrement_minutes *****************
  7678 ;; Defined at:
  7679 ;;		line 285 in file "rtcc.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;		None
  7682 ;; Auto vars:     Size  Location     Type
  7683 ;;  minutes         1    8[BANK0 ] unsigned char 
  7684 ;; Return value:  Size  Location     Type
  7685 ;;                  1    wreg      void 
  7686 ;; Registers used:
  7687 ;;		wreg, status,2, status,0, cstack
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/0
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7694 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7696 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7697 ;;Total ram usage:        1 bytes
  7698 ;; Hardware stack levels used:    1
  7699 ;; Hardware stack levels required when called:   12
  7700 ;; This function calls:
  7701 ;;		__rtcc_decrement_bcd
  7702 ;;		_rtcc_get_minutes
  7703 ;;		_rtcc_set_minutes
  7704 ;; This function is called by:
  7705 ;;		__ui_encoder
  7706 ;; This function uses a non-reentrant model
  7707 ;;
  7708                           
  7709                           	psect	text20
  7710  01A684                     __ptext20:
  7711                           	opt stack 0
  7712  01A684                     _rtcc_decrement_minutes:
  7713                           	opt stack 16
  7714                           
  7715                           ;rtcc.c: 287: uint8_t minutes = rtcc_get_minutes();
  7716                           
  7717                           ;incstack = 0
  7718  01A684  EC37  F0D5         	call	_rtcc_get_minutes	;wreg free
  7719  01A688  0100               	movlb	0	; () banked
  7720  01A68A  6F68               	movwf	rtcc_decrement_minutes@minutes& (0+255),b
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;rtcc.c: 288: minutes = _rtcc_decrement_bcd(minutes, 0x00, 0x59);
  7724  01A68C  0E00               	movlw	0
  7725  01A68E  0100               	movlb	0	; () banked
  7726  01A690  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7727  01A692  0E59               	movlw	89
  7728  01A694  0100               	movlb	0	; () banked
  7729  01A696  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7730  01A698  0100               	movlb	0	; () banked
  7731  01A69A  5168               	movf	rtcc_decrement_minutes@minutes& (0+255),w,b
  7732  01A69C  ECE1  F0CF         	call	__rtcc_decrement_bcd
  7733  01A6A0  0100               	movlb	0	; () banked
  7734  01A6A2  6F68               	movwf	rtcc_decrement_minutes@minutes& (0+255),b
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;rtcc.c: 289: rtcc_set_minutes(minutes);
  7738  01A6A4  0100               	movlb	0	; () banked
  7739  01A6A6  5168               	movf	rtcc_decrement_minutes@minutes& (0+255),w,b
  7740  01A6A8  ECA5  F0D4         	call	_rtcc_set_minutes
  7741  01A6AC  0012               	return		;funcret
  7742  01A6AE                     __end_of_rtcc_decrement_minutes:
  7743                           	opt stack 0
  7744                           tblptru	equ	0xFF8
  7745                           tblptrh	equ	0xFF7
  7746                           tblptrl	equ	0xFF6
  7747                           tablat	equ	0xFF5
  7748                           intcon3	equ	0xFF0
  7749                           postinc0	equ	0xFEE
  7750                           wreg	equ	0xFE8
  7751                           postdec1	equ	0xFE5
  7752                           plusw1	equ	0xFE3
  7753                           fsr1h	equ	0xFE2
  7754                           fsr1l	equ	0xFE1
  7755                           postinc2	equ	0xFDE
  7756                           postdec2	equ	0xFDD
  7757                           plusw2	equ	0xFDB
  7758                           fsr2h	equ	0xFDA
  7759                           fsr2l	equ	0xFD9
  7760                           status	equ	0xFD8
  7761                           
  7762 ;; *************** function _rtcc_decrement_hours *****************
  7763 ;; Defined at:
  7764 ;;		line 247 in file "rtcc.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;		None
  7767 ;; Auto vars:     Size  Location     Type
  7768 ;;  hours           1    8[BANK0 ] unsigned char 
  7769 ;; Return value:  Size  Location     Type
  7770 ;;                  1    wreg      void 
  7771 ;; Registers used:
  7772 ;;		wreg, status,2, status,0, cstack
  7773 ;; Tracked objects:
  7774 ;;		On entry : 0/0
  7775 ;;		On exit  : 0/0
  7776 ;;		Unchanged: 0/0
  7777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7779 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7781 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7782 ;;Total ram usage:        1 bytes
  7783 ;; Hardware stack levels used:    1
  7784 ;; Hardware stack levels required when called:   12
  7785 ;; This function calls:
  7786 ;;		__rtcc_decrement_bcd
  7787 ;;		_rtcc_get_hours
  7788 ;;		_rtcc_set_hours
  7789 ;; This function is called by:
  7790 ;;		__ui_encoder
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           	psect	text21
  7795  01A6AE                     __ptext21:
  7796                           	opt stack 0
  7797  01A6AE                     _rtcc_decrement_hours:
  7798                           	opt stack 16
  7799                           
  7800                           ;rtcc.c: 249: uint8_t hours = rtcc_get_hours();
  7801                           
  7802                           ;incstack = 0
  7803  01A6AE  EC41  F0D5         	call	_rtcc_get_hours	;wreg free
  7804  01A6B2  0100               	movlb	0	; () banked
  7805  01A6B4  6F68               	movwf	rtcc_decrement_hours@hours& (0+255),b
  7806                           
  7807                           ; BSR set to: 0
  7808                           ;rtcc.c: 250: hours = _rtcc_decrement_bcd(hours, 0x00, 0x23);
  7809  01A6B6  0E00               	movlw	0
  7810  01A6B8  0100               	movlb	0	; () banked
  7811  01A6BA  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7812  01A6BC  0E23               	movlw	35
  7813  01A6BE  0100               	movlb	0	; () banked
  7814  01A6C0  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7815  01A6C2  0100               	movlb	0	; () banked
  7816  01A6C4  5168               	movf	rtcc_decrement_hours@hours& (0+255),w,b
  7817  01A6C6  ECE1  F0CF         	call	__rtcc_decrement_bcd
  7818  01A6CA  0100               	movlb	0	; () banked
  7819  01A6CC  6F68               	movwf	rtcc_decrement_hours@hours& (0+255),b
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;rtcc.c: 251: rtcc_set_hours(hours);
  7823  01A6CE  0100               	movlb	0	; () banked
  7824  01A6D0  5168               	movf	rtcc_decrement_hours@hours& (0+255),w,b
  7825  01A6D2  ECB2  F0D4         	call	_rtcc_set_hours
  7826  01A6D6  0012               	return		;funcret
  7827  01A6D8                     __end_of_rtcc_decrement_hours:
  7828                           	opt stack 0
  7829                           tblptru	equ	0xFF8
  7830                           tblptrh	equ	0xFF7
  7831                           tblptrl	equ	0xFF6
  7832                           tablat	equ	0xFF5
  7833                           intcon3	equ	0xFF0
  7834                           postinc0	equ	0xFEE
  7835                           wreg	equ	0xFE8
  7836                           postdec1	equ	0xFE5
  7837                           plusw1	equ	0xFE3
  7838                           fsr1h	equ	0xFE2
  7839                           fsr1l	equ	0xFE1
  7840                           postinc2	equ	0xFDE
  7841                           postdec2	equ	0xFDD
  7842                           plusw2	equ	0xFDB
  7843                           fsr2h	equ	0xFDA
  7844                           fsr2l	equ	0xFD9
  7845                           status	equ	0xFD8
  7846                           
  7847 ;; *************** function _rtcc_decrement_day *****************
  7848 ;; Defined at:
  7849 ;;		line 209 in file "rtcc.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;		None
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;  day             1    8[BANK0 ] unsigned char 
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  1    wreg      void 
  7856 ;; Registers used:
  7857 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7864 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7866 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7867 ;;Total ram usage:        1 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; Hardware stack levels required when called:   12
  7870 ;; This function calls:
  7871 ;;		__number_of_days
  7872 ;;		__rtcc_decrement_bcd
  7873 ;;		_rtcc_get_day
  7874 ;;		_rtcc_set_day
  7875 ;; This function is called by:
  7876 ;;		__ui_encoder
  7877 ;; This function uses a non-reentrant model
  7878 ;;
  7879                           
  7880                           	psect	text22
  7881  01A4B0                     __ptext22:
  7882                           	opt stack 0
  7883  01A4B0                     _rtcc_decrement_day:
  7884                           	opt stack 16
  7885                           
  7886                           ;rtcc.c: 211: uint8_t day = rtcc_get_day();
  7887                           
  7888                           ;incstack = 0
  7889  01A4B0  EC4B  F0D5         	call	_rtcc_get_day	;wreg free
  7890  01A4B4  0100               	movlb	0	; () banked
  7891  01A4B6  6F68               	movwf	rtcc_decrement_day@day& (0+255),b
  7892                           
  7893                           ; BSR set to: 0
  7894                           ;rtcc.c: 212: day = _rtcc_decrement_bcd(day, 0x01, _number_of_days());
  7895  01A4B8  0E01               	movlw	1
  7896  01A4BA  0100               	movlb	0	; () banked
  7897  01A4BC  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  7898  01A4BE  ECCD  F0C5         	call	__number_of_days	;wreg free
  7899  01A4C2  0100               	movlb	0	; () banked
  7900  01A4C4  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  7901  01A4C6  0100               	movlb	0	; () banked
  7902  01A4C8  5168               	movf	rtcc_decrement_day@day& (0+255),w,b
  7903  01A4CA  ECE1  F0CF         	call	__rtcc_decrement_bcd
  7904  01A4CE  0100               	movlb	0	; () banked
  7905  01A4D0  6F68               	movwf	rtcc_decrement_day@day& (0+255),b
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;rtcc.c: 213: rtcc_set_day(day);
  7909  01A4D2  0100               	movlb	0	; () banked
  7910  01A4D4  5168               	movf	rtcc_decrement_day@day& (0+255),w,b
  7911  01A4D6  ECBF  F0D4         	call	_rtcc_set_day
  7912  01A4DA  0012               	return		;funcret
  7913  01A4DC                     __end_of_rtcc_decrement_day:
  7914                           	opt stack 0
  7915                           tblptru	equ	0xFF8
  7916                           tblptrh	equ	0xFF7
  7917                           tblptrl	equ	0xFF6
  7918                           tablat	equ	0xFF5
  7919                           intcon3	equ	0xFF0
  7920                           postinc0	equ	0xFEE
  7921                           wreg	equ	0xFE8
  7922                           postdec1	equ	0xFE5
  7923                           plusw1	equ	0xFE3
  7924                           fsr1h	equ	0xFE2
  7925                           fsr1l	equ	0xFE1
  7926                           postinc2	equ	0xFDE
  7927                           postdec2	equ	0xFDD
  7928                           plusw2	equ	0xFDB
  7929                           fsr2h	equ	0xFDA
  7930                           fsr2l	equ	0xFD9
  7931                           status	equ	0xFD8
  7932                           
  7933 ;; *************** function __rtcc_decrement_bcd *****************
  7934 ;; Defined at:
  7935 ;;		line 47 in file "rtcc.c"
  7936 ;; Parameters:    Size  Location     Type
  7937 ;;  value           1    wreg     unsigned char 
  7938 ;;  min             1    4[BANK0 ] unsigned char 
  7939 ;;  max             1    5[BANK0 ] unsigned char 
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;  value           1    7[BANK0 ] unsigned char 
  7942 ;; Return value:  Size  Location     Type
  7943 ;;                  1    wreg      unsigned char 
  7944 ;; Registers used:
  7945 ;;		wreg, status,2, status,0
  7946 ;; Tracked objects:
  7947 ;;		On entry : 0/0
  7948 ;;		On exit  : 0/0
  7949 ;;		Unchanged: 0/0
  7950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7951 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7952 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7953 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7954 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7955 ;;Total ram usage:        4 bytes
  7956 ;; Hardware stack levels used:    1
  7957 ;; Hardware stack levels required when called:   10
  7958 ;; This function calls:
  7959 ;;		Nothing
  7960 ;; This function is called by:
  7961 ;;		_rtcc_decrement_year
  7962 ;;		_rtcc_decrement_month
  7963 ;;		_rtcc_decrement_day
  7964 ;;		_rtcc_decrement_hours
  7965 ;;		_rtcc_decrement_minutes
  7966 ;;		_rtcc_decrement_seconds
  7967 ;; This function uses a non-reentrant model
  7968 ;;
  7969                           
  7970                           	psect	text23
  7971  019FC2                     __ptext23:
  7972                           	opt stack 0
  7973  019FC2                     __rtcc_decrement_bcd:
  7974                           	opt stack 17
  7975                           
  7976                           ;incstack = 0
  7977                           ;__rtcc_decrement_bcd@value stored from wreg
  7978  019FC2  0100               	movlb	0	; () banked
  7979  019FC4  6F67               	movwf	__rtcc_decrement_bcd@value& (0+255),b
  7980                           
  7981                           ;rtcc.c: 49: if(value==min)
  7982  019FC6  0100               	movlb	0	; () banked
  7983  019FC8  5164               	movf	__rtcc_decrement_bcd@min& (0+255),w,b
  7984  019FCA  0100               	movlb	0	; () banked
  7985  019FCC  1967               	xorwf	__rtcc_decrement_bcd@value& (0+255),w,b
  7986  019FCE  A4D8               	btfss	status,2,c
  7987  019FD0  D003               	goto	l12936
  7988                           
  7989                           ; BSR set to: 0
  7990                           ;rtcc.c: 50: return max;
  7991  019FD2  0100               	movlb	0	; () banked
  7992  019FD4  5165               	movf	__rtcc_decrement_bcd@max& (0+255),w,b
  7993  019FD6  0012               	return	
  7994  019FD8                     l12936:
  7995                           
  7996                           ; BSR set to: 0
  7997                           ;rtcc.c: 51: --value;
  7998  019FD8  0100               	movlb	0	; () banked
  7999  019FDA  0767               	decf	__rtcc_decrement_bcd@value& (0+255),f,b
  8000                           
  8001                           ;rtcc.c: 52: if((value&0x0F)>0x09)
  8002  019FDC  C067  F066         	movff	__rtcc_decrement_bcd@value,??__rtcc_decrement_bcd
  8003  019FE0  0E0F               	movlw	15
  8004  019FE2  0100               	movlb	0	; () banked
  8005  019FE4  1766               	andwf	??__rtcc_decrement_bcd& (0+255),f,b
  8006  019FE6  0E09               	movlw	9
  8007  019FE8  0100               	movlb	0	; () banked
  8008  019FEA  6566               	cpfsgt	??__rtcc_decrement_bcd& (0+255),b
  8009  019FEC  D006               	goto	l12940
  8010                           
  8011                           ; BSR set to: 0
  8012                           ;rtcc.c: 53: {
  8013                           ;rtcc.c: 54: value &= 0xF0;
  8014  019FEE  0EF0               	movlw	240
  8015  019FF0  0100               	movlb	0	; () banked
  8016  019FF2  1767               	andwf	__rtcc_decrement_bcd@value& (0+255),f,b
  8017                           
  8018                           ;rtcc.c: 55: value |= 0x09;
  8019  019FF4  0E09               	movlw	9
  8020  019FF6  0100               	movlb	0	; () banked
  8021  019FF8  1367               	iorwf	__rtcc_decrement_bcd@value& (0+255),f,b
  8022  019FFA                     l12940:
  8023                           
  8024                           ; BSR set to: 0
  8025                           ;rtcc.c: 56: }
  8026                           ;rtcc.c: 57: return value;
  8027  019FFA  0100               	movlb	0	; () banked
  8028  019FFC  5167               	movf	__rtcc_decrement_bcd@value& (0+255),w,b
  8029  019FFE  0012               	return	
  8030  01A000                     __end_of__rtcc_decrement_bcd:
  8031                           	opt stack 0
  8032                           tblptru	equ	0xFF8
  8033                           tblptrh	equ	0xFF7
  8034                           tblptrl	equ	0xFF6
  8035                           tablat	equ	0xFF5
  8036                           intcon3	equ	0xFF0
  8037                           postinc0	equ	0xFEE
  8038                           wreg	equ	0xFE8
  8039                           postdec1	equ	0xFE5
  8040                           plusw1	equ	0xFE3
  8041                           fsr1h	equ	0xFE2
  8042                           fsr1l	equ	0xFE1
  8043                           postinc2	equ	0xFDE
  8044                           postdec2	equ	0xFDD
  8045                           plusw2	equ	0xFDB
  8046                           fsr2h	equ	0xFDA
  8047                           fsr2l	equ	0xFD9
  8048                           status	equ	0xFD8
  8049                           
  8050 ;; *************** function _rtcc_correct_day *****************
  8051 ;; Defined at:
  8052 ;;		line 94 in file "rtcc.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;		None
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;  max             1    5[BANK0 ] unsigned char 
  8057 ;;  day             1    4[BANK0 ] unsigned char 
  8058 ;; Return value:  Size  Location     Type
  8059 ;;                  1    wreg      void 
  8060 ;; Registers used:
  8061 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8062 ;; Tracked objects:
  8063 ;;		On entry : 0/0
  8064 ;;		On exit  : 0/0
  8065 ;;		Unchanged: 0/0
  8066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8068 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8070 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8071 ;;Total ram usage:        2 bytes
  8072 ;; Hardware stack levels used:    1
  8073 ;; Hardware stack levels required when called:   12
  8074 ;; This function calls:
  8075 ;;		__number_of_days
  8076 ;;		_rtcc_get_day
  8077 ;;		_rtcc_set_day
  8078 ;; This function is called by:
  8079 ;;		__ui_encoder
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082                           
  8083                           	psect	text24
  8084  01A7A2                     __ptext24:
  8085                           	opt stack 0
  8086  01A7A2                     _rtcc_correct_day:
  8087                           	opt stack 16
  8088                           
  8089                           ;rtcc.c: 96: uint8_t day = rtcc_get_day();
  8090                           
  8091                           ; BSR set to: 0
  8092                           ;incstack = 0
  8093  01A7A2  EC4B  F0D5         	call	_rtcc_get_day	;wreg free
  8094  01A7A6  0100               	movlb	0	; () banked
  8095  01A7A8  6F64               	movwf	rtcc_correct_day@day& (0+255),b
  8096                           
  8097                           ; BSR set to: 0
  8098                           ;rtcc.c: 97: uint8_t max = _number_of_days();
  8099  01A7AA  ECCD  F0C5         	call	__number_of_days	;wreg free
  8100  01A7AE  0100               	movlb	0	; () banked
  8101  01A7B0  6F65               	movwf	rtcc_correct_day@max& (0+255),b
  8102                           
  8103                           ; BSR set to: 0
  8104                           ;rtcc.c: 98: if(day>max)
  8105  01A7B2  0100               	movlb	0	; () banked
  8106  01A7B4  5164               	movf	rtcc_correct_day@day& (0+255),w,b
  8107  01A7B6  0100               	movlb	0	; () banked
  8108  01A7B8  5D65               	subwf	rtcc_correct_day@max& (0+255),w,b
  8109  01A7BA  B0D8               	btfsc	status,0,c
  8110  01A7BC  0012               	return	
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;rtcc.c: 99: rtcc_set_day(max);
  8114  01A7BE  0100               	movlb	0	; () banked
  8115  01A7C0  5165               	movf	rtcc_correct_day@max& (0+255),w,b
  8116  01A7C2  ECBF  F0D4         	call	_rtcc_set_day
  8117  01A7C6  0012               	return	
  8118  01A7C8                     __end_of_rtcc_correct_day:
  8119                           	opt stack 0
  8120                           tblptru	equ	0xFF8
  8121                           tblptrh	equ	0xFF7
  8122                           tblptrl	equ	0xFF6
  8123                           tablat	equ	0xFF5
  8124                           intcon3	equ	0xFF0
  8125                           postinc0	equ	0xFEE
  8126                           wreg	equ	0xFE8
  8127                           postdec1	equ	0xFE5
  8128                           plusw1	equ	0xFE3
  8129                           fsr1h	equ	0xFE2
  8130                           fsr1l	equ	0xFE1
  8131                           postinc2	equ	0xFDE
  8132                           postdec2	equ	0xFDD
  8133                           plusw2	equ	0xFDB
  8134                           fsr2h	equ	0xFDA
  8135                           fsr2l	equ	0xFD9
  8136                           status	equ	0xFD8
  8137                           
  8138 ;; *************** function __number_of_days *****************
  8139 ;; Defined at:
  8140 ;;		line 60 in file "rtcc.c"
  8141 ;; Parameters:    Size  Location     Type
  8142 ;;		None
  8143 ;; Auto vars:     Size  Location     Type
  8144 ;;  month           1    3[BANK0 ] unsigned char 
  8145 ;;  bcd_year        1    2[BANK0 ] unsigned char 
  8146 ;;  year            1    1[BANK0 ] unsigned char 
  8147 ;; Return value:  Size  Location     Type
  8148 ;;                  1    wreg      unsigned char 
  8149 ;; Registers used:
  8150 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8151 ;; Tracked objects:
  8152 ;;		On entry : 0/0
  8153 ;;		On exit  : 0/0
  8154 ;;		Unchanged: 0/0
  8155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8157 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8158 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8159 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8160 ;;Total ram usage:        4 bytes
  8161 ;; Hardware stack levels used:    1
  8162 ;; Hardware stack levels required when called:   11
  8163 ;; This function calls:
  8164 ;;		_rtcc_get_month
  8165 ;;		_rtcc_get_year
  8166 ;; This function is called by:
  8167 ;;		_rtcc_correct_day
  8168 ;;		_rtcc_increment_day
  8169 ;;		_rtcc_decrement_day
  8170 ;; This function uses a non-reentrant model
  8171 ;;
  8172                           
  8173                           	psect	text25
  8174  018B9A                     __ptext25:
  8175                           	opt stack 0
  8176  018B9A                     __number_of_days:
  8177                           	opt stack 16
  8178                           
  8179                           ;rtcc.c: 62: uint8_t month = rtcc_get_month();
  8180                           
  8181                           ;incstack = 0
  8182  018B9A  EC2D  F0D5         	call	_rtcc_get_month	;wreg free
  8183  018B9E  0100               	movlb	0	; () banked
  8184  018BA0  6F63               	movwf	__number_of_days@month& (0+255),b
  8185                           
  8186                           ;rtcc.c: 63: uint8_t bcd_year = rtcc_get_year();
  8187  018BA2  EC19  F0D5         	call	_rtcc_get_year	;wreg free
  8188  018BA6  0100               	movlb	0	; () banked
  8189  018BA8  6F62               	movwf	__number_of_days@bcd_year& (0+255),b
  8190                           
  8191                           ; BSR set to: 0
  8192                           ;rtcc.c: 64: uint8_t year;
  8193                           ;rtcc.c: 65: if(month==0x04 || month==0x06 || month==0x09 || month==0x11)
  8194  018BAA  0E04               	movlw	4
  8195  018BAC  0100               	movlb	0	; () banked
  8196  018BAE  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8197  018BB0  B4D8               	btfsc	status,2,c
  8198  018BB2  D00F               	goto	l18898
  8199                           
  8200                           ; BSR set to: 0
  8201  018BB4  0E06               	movlw	6
  8202  018BB6  0100               	movlb	0	; () banked
  8203  018BB8  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8204  018BBA  B4D8               	btfsc	status,2,c
  8205  018BBC  D00A               	goto	l18898
  8206                           
  8207                           ; BSR set to: 0
  8208  018BBE  0E09               	movlw	9
  8209  018BC0  0100               	movlb	0	; () banked
  8210  018BC2  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8211  018BC4  B4D8               	btfsc	status,2,c
  8212  018BC6  D005               	goto	l18898
  8213                           
  8214                           ; BSR set to: 0
  8215  018BC8  0E11               	movlw	17
  8216  018BCA  0100               	movlb	0	; () banked
  8217  018BCC  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8218  018BCE  A4D8               	btfss	status,2,c
  8219  018BD0  D002               	goto	l18902
  8220  018BD2                     l18898:
  8221                           
  8222                           ; BSR set to: 0
  8223                           ;rtcc.c: 66: return 0x30;
  8224  018BD2  0E30               	movlw	48
  8225                           
  8226                           ; BSR set to: 0
  8227  018BD4  0012               	return	
  8228  018BD6                     l18902:
  8229                           
  8230                           ; BSR set to: 0
  8231                           ;rtcc.c: 67: if(month==0x02)
  8232  018BD6  0E02               	movlw	2
  8233  018BD8  0100               	movlb	0	; () banked
  8234  018BDA  1963               	xorwf	__number_of_days@month& (0+255),w,b
  8235  018BDC  A4D8               	btfss	status,2,c
  8236  018BDE  D01A               	goto	l18922
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;rtcc.c: 68: {
  8240                           ;rtcc.c: 69: year = bcd_year>>4;
  8241  018BE0  0100               	movlb	0	; () banked
  8242  018BE2  3962               	swapf	__number_of_days@bcd_year& (0+255),w,b
  8243  018BE4  0B0F               	andlw	15
  8244  018BE6  0100               	movlb	0	; () banked
  8245  018BE8  6F61               	movwf	__number_of_days@year& (0+255),b
  8246                           
  8247                           ; BSR set to: 0
  8248                           ;rtcc.c: 70: year *= 10;
  8249  018BEA  0E0A               	movlw	10
  8250  018BEC  0100               	movlb	0	; () banked
  8251  018BEE  0361               	mulwf	__number_of_days@year& (0+255),b
  8252  018BF0  50F3               	movf	prodl,w,c
  8253  018BF2  6F61               	movwf	__number_of_days@year& (0+255),b
  8254                           
  8255                           ; BSR set to: 0
  8256                           ;rtcc.c: 71: year += bcd_year & 0x0F;
  8257  018BF4  0100               	movlb	0	; () banked
  8258  018BF6  5162               	movf	__number_of_days@bcd_year& (0+255),w,b
  8259  018BF8  0B0F               	andlw	15
  8260  018BFA  0100               	movlb	0	; () banked
  8261  018BFC  2761               	addwf	__number_of_days@year& (0+255),f,b
  8262                           
  8263                           ; BSR set to: 0
  8264                           ;rtcc.c: 72: if(year&0b11)
  8265  018BFE  C061  F060         	movff	__number_of_days@year,??__number_of_days
  8266  018C02  0E03               	movlw	3
  8267  018C04  0100               	movlb	0	; () banked
  8268  018C06  1760               	andwf	??__number_of_days& (0+255),f,b
  8269  018C08  B4D8               	btfsc	status,2,c
  8270  018C0A  D002               	goto	l18918
  8271                           
  8272                           ; BSR set to: 0
  8273                           ;rtcc.c: 73: return 0x28;
  8274  018C0C  0E28               	movlw	40
  8275                           
  8276                           ; BSR set to: 0
  8277  018C0E  0012               	return	
  8278  018C10                     l18918:
  8279                           
  8280                           ; BSR set to: 0
  8281                           ;rtcc.c: 74: else
  8282                           ;rtcc.c: 75: return 0x29;
  8283  018C10  0E29               	movlw	41
  8284                           
  8285                           ; BSR set to: 0
  8286  018C12  0012               	return	
  8287  018C14                     l18922:
  8288                           
  8289                           ; BSR set to: 0
  8290                           ;rtcc.c: 76: }
  8291                           ;rtcc.c: 77: return 0x31;
  8292  018C14  0E31               	movlw	49
  8293  018C16  0012               	return	
  8294  018C18                     __end_of__number_of_days:
  8295                           	opt stack 0
  8296                           tblptru	equ	0xFF8
  8297                           tblptrh	equ	0xFF7
  8298                           tblptrl	equ	0xFF6
  8299                           tablat	equ	0xFF5
  8300                           prodl	equ	0xFF3
  8301                           intcon3	equ	0xFF0
  8302                           postinc0	equ	0xFEE
  8303                           wreg	equ	0xFE8
  8304                           postdec1	equ	0xFE5
  8305                           plusw1	equ	0xFE3
  8306                           fsr1h	equ	0xFE2
  8307                           fsr1l	equ	0xFE1
  8308                           postinc2	equ	0xFDE
  8309                           postdec2	equ	0xFDD
  8310                           plusw2	equ	0xFDB
  8311                           fsr2h	equ	0xFDA
  8312                           fsr2l	equ	0xFD9
  8313                           status	equ	0xFD8
  8314                           
  8315 ;; *************** function _system_init *****************
  8316 ;; Defined at:
  8317 ;;		line 250 in file "os.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;		None
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;  appendtext    104    0[BANK1 ] unsigned char [104]
  8322 ;;  temp           50    0        unsigned char [50]
  8323 ;;  filename2       9  113[BANK1 ] unsigned char [9]
  8324 ;;  filename        9  104[BANK1 ] unsigned char [9]
  8325 ;;  extension2      4  126[BANK1 ] unsigned char [4]
  8326 ;;  extension       4  122[BANK1 ] unsigned char [4]
  8327 ;;  file_number     1    0        unsigned char 
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  1    wreg      void 
  8330 ;; Registers used:
  8331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 0/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8338 ;;      Locals:         0       0     130       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8340 ;;      Totals:         0       0     130       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8341 ;;Total ram usage:      130 bytes
  8342 ;; Hardware stack levels used:    1
  8343 ;; Hardware stack levels required when called:   15
  8344 ;; This function calls:
  8345 ;;		__system_encoder_init
  8346 ;;		__system_timer0_init
  8347 ;;		_adc_init
  8348 ;;		_buck_init
  8349 ;;		_flash_init
  8350 ;;		_i2c_eeprom_read_calibration
  8351 ;;		_i2c_init
  8352 ;;		_log_start_new
  8353 ;;		_rtcc_init
  8354 ;;		_ui_init
  8355 ;; This function is called by:
  8356 ;;		_main
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           
  8360                           	psect	text26
  8361  0160EE                     __ptext26:
  8362                           	opt stack 0
  8363  0160EE                     _system_init:
  8364                           	opt stack 15
  8365                           
  8366                           ;os.c: 252: char filename[9] = "TEST    ";
  8367                           
  8368                           ; BSR set to: 0
  8369                           ;incstack = 0
  8370  0160EE  EE22  F0D8         	lfsr	2,system_init@F8573
  8371  0160F2  EE11  F068         	lfsr	1,system_init@filename
  8372  0160F6  0E08               	movlw	8
  8373  0160F8                     u21781:
  8374  0160F8  CFDB FFE3          	movff	plusw2,plusw1
  8375  0160FC  06E8               	decf	wreg,f,c
  8376  0160FE  E2FC               	bc	u21781
  8377                           
  8378                           ;os.c: 253: char extension[4] = "TXT";
  8379  016100  C2E5  F17A         	movff	system_init@F8575,system_init@extension
  8380  016104  C2E6  F17B         	movff	system_init@F8575+1,system_init@extension+1
  8381  016108  C2E7  F17C         	movff	system_init@F8575+2,system_init@extension+2
  8382  01610C  C2E8  F17D         	movff	system_init@F8575+3,system_init@extension+3
  8383                           
  8384                           ;os.c: 254: char filename2[9] = "NEWFILE ";
  8385  016110  EE23  F0F6         	lfsr	2,system_init@F8577
  8386  016114  EE11  F071         	lfsr	1,system_init@filename2
  8387  016118  0E08               	movlw	8
  8388  01611A                     u21791:
  8389  01611A  CFDB FFE3          	movff	plusw2,plusw1
  8390  01611E  06E8               	decf	wreg,f,c
  8391  016120  E2FC               	bc	u21791
  8392                           
  8393                           ;os.c: 255: char extension2[4] = "TXT";
  8394  016122  C2E1  F17E         	movff	system_init@F8579,system_init@extension2
  8395  016126  C2E2  F17F         	movff	system_init@F8579+1,system_init@extension2+1
  8396  01612A  C2E3  F180         	movff	system_init@F8579+2,system_init@extension2+2
  8397  01612E  C2E4  F181         	movff	system_init@F8579+3,system_init@extension2+3
  8398                           
  8399                           ;os.c: 256: char appendtext[104] = "Just appended this text! Now this is super-long. it 
      +                          goes on and on and on ... but finally it ends HERE.";
  8400  016132  EE24  F000         	lfsr	2,system_init@F8581
  8401  016136  EE11  F000         	lfsr	1,system_init@appendtext
  8402  01613A  0E67               	movlw	103
  8403  01613C                     u21801:
  8404  01613C  CFDB FFE3          	movff	plusw2,plusw1
  8405  016140  06E8               	decf	wreg,f,c
  8406  016142  E2FC               	bc	u21801
  8407                           
  8408                           ;os.c: 257: uint8_t file_number;
  8409                           ;os.c: 258: uint8_t temp[50];
  8410                           ;os.c: 261: TRISCbits.TRISC2 = 0;
  8411  016144  9494               	bcf	3988,2,c	;volatile
  8412                           
  8413                           ;os.c: 262: TRISDbits.TRISD0 = 0;
  8414  016146  9095               	bcf	3989,0,c	;volatile
  8415                           
  8416                           ;os.c: 264: TRISDbits.TRISD3 = 0;
  8417  016148  9695               	bcf	3989,3,c	;volatile
  8418                           
  8419                           ;os.c: 265: LATDbits.LD3 = 0;
  8420  01614A  968C               	bcf	3980,3,c	;volatile
  8421                           
  8422                           ;os.c: 268: LATDbits.LD1 = 0;
  8423  01614C  928C               	bcf	3980,1,c	;volatile
  8424                           
  8425                           ;os.c: 269: TRISDbits.TRISD1 = 0;
  8426  01614E  9295               	bcf	3989,1,c	;volatile
  8427                           
  8428                           ;os.c: 272: LATBbits.LB1 = 0;
  8429  016150  928A               	bcf	3978,1,c	;volatile
  8430                           
  8431                           ;os.c: 273: TRISBbits.TRISB1 = 0;
  8432  016152  9293               	bcf	3987,1,c	;volatile
  8433                           
  8434                           ;os.c: 274: LATBbits.LB2 = 0;
  8435  016154  948A               	bcf	3978,2,c	;volatile
  8436                           
  8437                           ;os.c: 275: TRISBbits.TRISB2 = 0;
  8438  016156  9493               	bcf	3987,2,c	;volatile
  8439                           
  8440                           ;os.c: 276: LATBbits.LB3 = 0;
  8441  016158  968A               	bcf	3978,3,c	;volatile
  8442                           
  8443                           ;os.c: 277: TRISBbits.TRISB3 = 0;
  8444  01615A  9693               	bcf	3987,3,c	;volatile
  8445                           
  8446                           ;os.c: 281: TRISDbits.TRISD6 = 1;
  8447  01615C  8C95               	bsf	3989,6,c	;volatile
  8448                           
  8449                           ;os.c: 282: TRISDbits.TRISD4 = 0;
  8450  01615E  9895               	bcf	3989,4,c	;volatile
  8451                           
  8452                           ;os.c: 283: TRISDbits.TRISD5 = 0;
  8453  016160  9A95               	bcf	3989,5,c	;volatile
  8454                           
  8455                           ;os.c: 284: TRISDbits.TRISD7 = 0;
  8456  016162  9E95               	bcf	3989,7,c	;volatile
  8457                           
  8458                           ;os.c: 285: LATDbits.LD7 = 1;
  8459  016164  8E8C               	bsf	3980,7,c	;volatile
  8460                           
  8461                           ;os.c: 288: TRISAbits.TRISA3 = 1;
  8462  016166  8692               	bsf	3986,3,c	;volatile
  8463                           
  8464                           ;os.c: 289: ANCON0bits.PCFG3 = 0;
  8465  016168  010F               	movlb	15	; () banked
  8466  01616A  9748               	bcf	72,3,b	;volatile
  8467                           
  8468                           ; BSR set to: 15
  8469                           ;os.c: 290: TRISBbits.TRISB0 = 1;
  8470  01616C  8093               	bsf	3987,0,c	;volatile
  8471                           
  8472                           ; BSR set to: 15
  8473                           ;os.c: 291: ANCON1bits.PCFG12 = 0;
  8474  01616E  010F               	movlb	15	; () banked
  8475  016170  9949               	bcf	73,4,b	;volatile
  8476                           
  8477                           ; BSR set to: 15
  8478                           ;os.c: 292: TRISAbits.TRISA1 = 1;
  8479  016172  8292               	bsf	3986,1,c	;volatile
  8480                           
  8481                           ; BSR set to: 15
  8482                           ;os.c: 293: ANCON0bits.PCFG1 = 0;
  8483  016174  010F               	movlb	15	; () banked
  8484  016176  9348               	bcf	72,1,b	;volatile
  8485                           
  8486                           ; BSR set to: 15
  8487                           ;os.c: 294: TRISAbits.TRISA2 = 1;
  8488  016178  8492               	bsf	3986,2,c	;volatile
  8489                           
  8490                           ; BSR set to: 15
  8491                           ;os.c: 295: ANCON0bits.PCFG2 = 0;
  8492  01617A  010F               	movlb	15	; () banked
  8493  01617C  9548               	bcf	72,2,b	;volatile
  8494                           
  8495                           ; BSR set to: 15
  8496                           ;os.c: 298: LATCbits.LC7 = 0;
  8497  01617E  9E8B               	bcf	3979,7,c	;volatile
  8498                           
  8499                           ; BSR set to: 15
  8500                           ;os.c: 299: TRISCbits.TRISC7 = 0;
  8501  016180  9E94               	bcf	3988,7,c	;volatile
  8502                           
  8503                           ; BSR set to: 15
  8504                           ;os.c: 300: LATEbits.LE2 = 1;
  8505  016182  848D               	bsf	3981,2,c	;volatile
  8506                           
  8507                           ; BSR set to: 15
  8508                           ;os.c: 301: TRISEbits.TRISE2 = 0;
  8509  016184  9496               	bcf	3990,2,c	;volatile
  8510                           
  8511                           ; BSR set to: 15
  8512                           ;os.c: 302: LATEbits.LE1 = 1;
  8513  016186  828D               	bsf	3981,1,c	;volatile
  8514                           
  8515                           ; BSR set to: 15
  8516                           ;os.c: 303: TRISEbits.TRISE1 = 0;
  8517  016188  9296               	bcf	3990,1,c	;volatile
  8518                           
  8519                           ; BSR set to: 15
  8520                           ;os.c: 304: LATEbits.LE0 = 1;
  8521  01618A  808D               	bsf	3981,0,c	;volatile
  8522                           
  8523                           ; BSR set to: 15
  8524                           ;os.c: 305: TRISEbits.TRISE0 = 0;
  8525  01618C  9096               	bcf	3990,0,c	;volatile
  8526                           
  8527                           ; BSR set to: 15
  8528                           ;os.c: 306: LATAbits.LA5 = 1;
  8529  01618E  8A89               	bsf	3977,5,c	;volatile
  8530                           
  8531                           ; BSR set to: 15
  8532                           ;os.c: 307: TRISAbits.TRISA5 = 0;
  8533  016190  9A92               	bcf	3986,5,c	;volatile
  8534                           
  8535                           ; BSR set to: 15
  8536                           ;os.c: 309: TRISAbits.TRISA0 = 1;
  8537  016192  8092               	bsf	3986,0,c	;volatile
  8538                           
  8539                           ; BSR set to: 15
  8540                           ;os.c: 310: ANCON0bits.PCFG0 = 1;
  8541  016194  010F               	movlb	15	; () banked
  8542  016196  8148               	bsf	72,0,b	;volatile
  8543                           
  8544                           ; BSR set to: 15
  8545                           ;os.c: 311: TRISBbits.TRISB6 = 1;
  8546  016198  8C93               	bsf	3987,6,c	;volatile
  8547                           
  8548                           ; BSR set to: 15
  8549                           ;os.c: 312: TRISBbits.TRISB7 = 1;
  8550  01619A  8E93               	bsf	3987,7,c	;volatile
  8551                           
  8552                           ; BSR set to: 15
  8553                           ;os.c: 333: os.clockFrequency = CPU_FREQUENCY_48MHz;
  8554  01619C  0E02               	movlw	2
  8555  01619E  0102               	movlb	2	; () banked
  8556  0161A0  6F00               	movwf	_os& (0+255),b	;volatile
  8557                           
  8558                           ; BSR set to: 2
  8559                           ;os.c: 334: os.boardVoltage = BOARD_VOLTAGE_HIGH;
  8560  0161A2  0E01               	movlw	1
  8561  0161A4  0102               	movlb	2	; () banked
  8562  0161A6  6F01               	movwf	(_os+1)& (0+255),b	;volatile
  8563                           
  8564                           ; BSR set to: 2
  8565                           ;os.c: 335: os.buckFrequency = BUCK_OFF;
  8566  0161A8  0E00               	movlw	0
  8567  0161AA  0102               	movlb	2	; () banked
  8568  0161AC  6F02               	movwf	(_os+2)& (0+255),b	;volatile
  8569                           
  8570                           ; BSR set to: 2
  8571                           ;os.c: 336: os.buckDutyCycle = 0;
  8572  0161AE  0E00               	movlw	0
  8573  0161B0  0102               	movlb	2	; () banked
  8574  0161B2  6F03               	movwf	(_os+3)& (0+255),b	;volatile
  8575                           
  8576                           ; BSR set to: 2
  8577                           ;os.c: 337: os.buckLastStep = -1;
  8578  0161B4  0102               	movlb	2	; () banked
  8579  0161B6  6904               	setf	(_os+4)& (0+255),b	;volatile
  8580                           
  8581                           ; BSR set to: 2
  8582                           ;os.c: 338: os.display_mode = DISPLAY_MODE_OVERVIEW;
  8583  0161B8  0E00               	movlw	0
  8584  0161BA  0102               	movlb	2	; () banked
  8585  0161BC  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  8586                           
  8587                           ; BSR set to: 2
  8588                           ;os.c: 341: os.output_voltage = 13000;
  8589  0161BE  0E32               	movlw	50
  8590  0161C0  0102               	movlb	2	; () banked
  8591  0161C2  6F28               	movwf	(_os+40)& (0+255),b	;volatile
  8592  0161C4  0EC8               	movlw	200
  8593  0161C6  6F27               	movwf	(_os+39)& (0+255),b	;volatile
  8594                           
  8595                           ; BSR set to: 2
  8596                           ;os.c: 345: PIR1bits.TMR1IF = 0;
  8597  0161C8  909E               	bcf	3998,0,c	;volatile
  8598                           
  8599                           ; BSR set to: 2
  8600                           ;os.c: 347: TMR1H = 0xFC;
  8601  0161CA  0EFC               	movlw	252
  8602  0161CC  6ECF               	movwf	4047,c	;volatile
  8603                           
  8604                           ; BSR set to: 2
  8605                           ;os.c: 348: TMR1L = 0x00;
  8606  0161CE  0E00               	movlw	0
  8607  0161D0  6ECE               	movwf	4046,c	;volatile
  8608                           
  8609                           ; BSR set to: 2
  8610                           ;os.c: 350: T1CONbits.TMR1ON = 1;
  8611  0161D2  80CD               	bsf	4045,0,c	;volatile
  8612                           
  8613                           ; BSR set to: 2
  8614                           ;os.c: 352: T1CONbits.T1OSCEN = 1;
  8615  0161D4  86CD               	bsf	4045,3,c	;volatile
  8616  0161D6                     l1390:
  8617  0161D6  A09E               	btfss	3998,0,c	;volatile
  8618  0161D8  D7FE               	goto	l1390
  8619                           
  8620                           ;os.c: 356: T1CONbits.TMR1ON = 0;
  8621  0161DA  90CD               	bcf	4045,0,c	;volatile
  8622                           
  8623                           ;os.c: 359: i2c_init();
  8624  0161DC  ECAB  F0D5         	call	_i2c_init	;wreg free
  8625                           
  8626                           ;os.c: 361: ui_init();
  8627  0161E0  EC05  F0D5         	call	_ui_init	;wreg free
  8628                           
  8629                           ;os.c: 364: adc_init();
  8630  0161E4  EC55  F0D4         	call	_adc_init	;wreg free
  8631                           
  8632                           ;os.c: 367: rtcc_init();
  8633  0161E8  EC09  F0D4         	call	_rtcc_init	;wreg free
  8634                           
  8635                           ;os.c: 370: i2c_eeprom_read_calibration();
  8636  0161EC  EC38  F0A9         	call	_i2c_eeprom_read_calibration	;wreg free
  8637                           
  8638                           ;os.c: 385: _system_timer0_init();
  8639  0161F0  EC82  F0CF         	call	__system_timer0_init	;wreg free
  8640                           
  8641                           ;os.c: 394: _system_encoder_init();
  8642  0161F4  ECF4  F0CE         	call	__system_encoder_init	;wreg free
  8643                           
  8644                           ;os.c: 396: flash_init();
  8645  0161F8  EC5C  F0CE         	call	_flash_init	;wreg free
  8646                           
  8647                           ;os.c: 430: buck_init();
  8648  0161FC  ECA4  F0D5         	call	_buck_init	;wreg free
  8649                           
  8650                           ;os.c: 433: log_start_new();
  8651  016200  EC19  F0B5         	call	_log_start_new	;wreg free
  8652  016204  0012               	return		;funcret
  8653  016206                     __end_of_system_init:
  8654                           	opt stack 0
  8655                           tblptru	equ	0xFF8
  8656                           tblptrh	equ	0xFF7
  8657                           tblptrl	equ	0xFF6
  8658                           tablat	equ	0xFF5
  8659                           prodl	equ	0xFF3
  8660                           intcon3	equ	0xFF0
  8661                           postinc0	equ	0xFEE
  8662                           wreg	equ	0xFE8
  8663                           postdec1	equ	0xFE5
  8664                           plusw1	equ	0xFE3
  8665                           fsr1h	equ	0xFE2
  8666                           fsr1l	equ	0xFE1
  8667                           postinc2	equ	0xFDE
  8668                           postdec2	equ	0xFDD
  8669                           plusw2	equ	0xFDB
  8670                           fsr2h	equ	0xFDA
  8671                           fsr2l	equ	0xFD9
  8672                           status	equ	0xFD8
  8673                           
  8674 ;; *************** function _ui_init *****************
  8675 ;; Defined at:
  8676 ;;		line 325 in file "ui.c"
  8677 ;; Parameters:    Size  Location     Type
  8678 ;;		None
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;		None
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  1    wreg      void 
  8683 ;; Registers used:
  8684 ;;		wreg, status,2
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8694 ;;Total ram usage:        0 bytes
  8695 ;; Hardware stack levels used:    1
  8696 ;; Hardware stack levels required when called:   10
  8697 ;; This function calls:
  8698 ;;		Nothing
  8699 ;; This function is called by:
  8700 ;;		_system_init
  8701 ;; This function uses a non-reentrant model
  8702 ;;
  8703                           
  8704                           	psect	text27
  8705  01AA0A                     __ptext27:
  8706                           	opt stack 0
  8707  01AA0A                     _ui_init:
  8708                           	opt stack 19
  8709                           
  8710                           ;ui.c: 327: system_ui_inactive_count = 0;
  8711                           
  8712                           ;incstack = 0
  8713  01AA0A  0E00               	movlw	0
  8714  01AA0C  0101               	movlb	1	; () banked
  8715  01AA0E  6FE8               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  8716  01AA10  0E00               	movlw	0
  8717  01AA12  6FE7               	movwf	_system_ui_inactive_count& (0+255),b
  8718                           
  8719                           ; BSR set to: 1
  8720                           ;ui.c: 329: LATCbits.LC2 = 1;
  8721  01AA14  848B               	bsf	3979,2,c	;volatile
  8722                           
  8723                           ;ui.c: 330: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  8724  01AA16  0E01               	movlw	1
  8725  01AA18  0101               	movlb	1	; () banked
  8726  01AA1A  6FF3               	movwf	_userInterfaceStatus& (0+255),b
  8727                           
  8728                           ; BSR set to: 1
  8729  01AA1C  0012               	return		;funcret
  8730  01AA1E                     __end_of_ui_init:
  8731                           	opt stack 0
  8732                           tblptru	equ	0xFF8
  8733                           tblptrh	equ	0xFF7
  8734                           tblptrl	equ	0xFF6
  8735                           tablat	equ	0xFF5
  8736                           prodl	equ	0xFF3
  8737                           intcon3	equ	0xFF0
  8738                           postinc0	equ	0xFEE
  8739                           wreg	equ	0xFE8
  8740                           postdec1	equ	0xFE5
  8741                           plusw1	equ	0xFE3
  8742                           fsr1h	equ	0xFE2
  8743                           fsr1l	equ	0xFE1
  8744                           postinc2	equ	0xFDE
  8745                           postdec2	equ	0xFDD
  8746                           plusw2	equ	0xFDB
  8747                           fsr2h	equ	0xFDA
  8748                           fsr2l	equ	0xFD9
  8749                           status	equ	0xFD8
  8750                           
  8751 ;; *************** function _rtcc_init *****************
  8752 ;; Defined at:
  8753 ;;		line 81 in file "rtcc.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;		None
  8756 ;; Auto vars:     Size  Location     Type
  8757 ;;		None
  8758 ;; Return value:  Size  Location     Type
  8759 ;;                  1    wreg      void 
  8760 ;; Registers used:
  8761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8762 ;; Tracked objects:
  8763 ;;		On entry : 0/0
  8764 ;;		On exit  : 0/0
  8765 ;;		Unchanged: 0/0
  8766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8771 ;;Total ram usage:        0 bytes
  8772 ;; Hardware stack levels used:    1
  8773 ;; Hardware stack levels required when called:   14
  8774 ;; This function calls:
  8775 ;;		_rtcc_read_eeprom
  8776 ;; This function is called by:
  8777 ;;		_system_init
  8778 ;; This function uses a non-reentrant model
  8779 ;;
  8780                           
  8781                           	psect	text28
  8782  01A812                     __ptext28:
  8783                           	opt stack 0
  8784  01A812                     _rtcc_init:
  8785                           	opt stack 15
  8786                           
  8787                           ;rtcc.c: 83: EECON2 = 0x55;
  8788                           
  8789                           ; BSR set to: 1
  8790                           ;incstack = 0
  8791  01A812  0E55               	movlw	85
  8792  01A814  6EA7               	movwf	4007,c	;volatile
  8793                           
  8794                           ;rtcc.c: 84: EECON2 = 0xAA;
  8795  01A816  0EAA               	movlw	170
  8796  01A818  6EA7               	movwf	4007,c	;volatile
  8797                           
  8798                           ;rtcc.c: 85: RTCCFGbits.RTCWREN = 1;
  8799  01A81A  010F               	movlb	15	; () banked
  8800  01A81C  8B3F               	bsf	63,5,b	;volatile
  8801                           
  8802                           ; BSR set to: 15
  8803                           ;rtcc.c: 86: RTCCFGbits.RTCEN = 1;
  8804  01A81E  010F               	movlb	15	; () banked
  8805  01A820  8F3F               	bsf	63,7,b	;volatile
  8806                           
  8807                           ; BSR set to: 15
  8808                           ;rtcc.c: 87: RTCCFGbits.RTCOE = 0;
  8809  01A822  010F               	movlb	15	; () banked
  8810  01A824  953F               	bcf	63,2,b	;volatile
  8811                           
  8812                           ;rtcc.c: 88: RTCCAL = 0x00;
  8813  01A826  0E00               	movlw	0
  8814  01A828  010F               	movlb	15	; () banked
  8815  01A82A  6F3E               	movwf	62,b	;volatile
  8816                           
  8817                           ; BSR set to: 15
  8818                           ;rtcc.c: 91: rtcc_read_eeprom();
  8819  01A82C  ECE1  F0CD         	call	_rtcc_read_eeprom	;wreg free
  8820  01A830  0012               	return		;funcret
  8821  01A832                     __end_of_rtcc_init:
  8822                           	opt stack 0
  8823                           tblptru	equ	0xFF8
  8824                           tblptrh	equ	0xFF7
  8825                           tblptrl	equ	0xFF6
  8826                           tablat	equ	0xFF5
  8827                           prodl	equ	0xFF3
  8828                           intcon3	equ	0xFF0
  8829                           postinc0	equ	0xFEE
  8830                           wreg	equ	0xFE8
  8831                           postdec1	equ	0xFE5
  8832                           plusw1	equ	0xFE3
  8833                           fsr1h	equ	0xFE2
  8834                           fsr1l	equ	0xFE1
  8835                           postinc2	equ	0xFDE
  8836                           postdec2	equ	0xFDD
  8837                           plusw2	equ	0xFDB
  8838                           fsr2h	equ	0xFDA
  8839                           fsr2l	equ	0xFD9
  8840                           status	equ	0xFD8
  8841                           
  8842 ;; *************** function _rtcc_read_eeprom *****************
  8843 ;; Defined at:
  8844 ;;		line 330 in file "rtcc.c"
  8845 ;; Parameters:    Size  Location     Type
  8846 ;;		None
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;  date            6   25[BANK0 ] unsigned char [6]
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  1    wreg      void 
  8851 ;; Registers used:
  8852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8859 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8861 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8862 ;;Total ram usage:        6 bytes
  8863 ;; Hardware stack levels used:    1
  8864 ;; Hardware stack levels required when called:   13
  8865 ;; This function calls:
  8866 ;;		_i2c_eeprom_read
  8867 ;;		_rtcc_set_day
  8868 ;;		_rtcc_set_hours
  8869 ;;		_rtcc_set_minutes
  8870 ;;		_rtcc_set_month
  8871 ;;		_rtcc_set_seconds
  8872 ;;		_rtcc_set_year
  8873 ;; This function is called by:
  8874 ;;		_rtcc_init
  8875 ;; This function uses a non-reentrant model
  8876 ;;
  8877                           
  8878                           	psect	text29
  8879  019BC2                     __ptext29:
  8880                           	opt stack 0
  8881  019BC2                     _rtcc_read_eeprom:
  8882                           	opt stack 15
  8883                           
  8884                           ;rtcc.c: 332: uint8_t date[6];
  8885                           ;rtcc.c: 333: i2c_eeprom_read(0x0040, &date[0], 6);
  8886                           
  8887                           ;incstack = 0
  8888  019BC2  0E00               	movlw	0
  8889  019BC4  0100               	movlb	0	; () banked
  8890  019BC6  6F72               	movwf	(i2c_eeprom_read@address+1)& (0+255),b
  8891  019BC8  0E40               	movlw	64
  8892  019BCA  6F71               	movwf	i2c_eeprom_read@address& (0+255),b
  8893  019BCC  0E79               	movlw	low rtcc_read_eeprom@date
  8894  019BCE  0100               	movlb	0	; () banked
  8895  019BD0  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  8896  019BD2  0E00               	movlw	high rtcc_read_eeprom@date
  8897  019BD4  0100               	movlb	0	; () banked
  8898  019BD6  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  8899  019BD8  0E06               	movlw	6
  8900  019BDA  0100               	movlb	0	; () banked
  8901  019BDC  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  8902  019BDE  ECD2  F0CA         	call	_i2c_eeprom_read	;wreg free
  8903                           
  8904                           ;rtcc.c: 336: rtcc_set_year(date[0]);
  8905  019BE2  0100               	movlb	0	; () banked
  8906  019BE4  5179               	movf	rtcc_read_eeprom@date& (0+255),w,b
  8907  019BE6  EC7E  F0D4         	call	_rtcc_set_year
  8908                           
  8909                           ;rtcc.c: 337: rtcc_set_month(date[1]);
  8910  019BEA  0100               	movlb	0	; () banked
  8911  019BEC  517A               	movf	(rtcc_read_eeprom@date+1)& (0+255),w,b
  8912  019BEE  EC98  F0D4         	call	_rtcc_set_month
  8913                           
  8914                           ;rtcc.c: 338: rtcc_set_day(date[2]);
  8915  019BF2  0100               	movlb	0	; () banked
  8916  019BF4  517B               	movf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  8917  019BF6  ECBF  F0D4         	call	_rtcc_set_day
  8918                           
  8919                           ;rtcc.c: 339: rtcc_set_hours(date[3]);
  8920  019BFA  0100               	movlb	0	; () banked
  8921  019BFC  517C               	movf	(rtcc_read_eeprom@date+3)& (0+255),w,b
  8922  019BFE  ECB2  F0D4         	call	_rtcc_set_hours
  8923                           
  8924                           ;rtcc.c: 340: rtcc_set_minutes(date[4]);
  8925  019C02  0100               	movlb	0	; () banked
  8926  019C04  517D               	movf	(rtcc_read_eeprom@date+4)& (0+255),w,b
  8927  019C06  ECA5  F0D4         	call	_rtcc_set_minutes
  8928                           
  8929                           ;rtcc.c: 341: rtcc_set_seconds(date[5]);
  8930  019C0A  0100               	movlb	0	; () banked
  8931  019C0C  517E               	movf	(rtcc_read_eeprom@date+5)& (0+255),w,b
  8932  019C0E  EC8B  F0D4         	call	_rtcc_set_seconds
  8933  019C12  0012               	return		;funcret
  8934  019C14                     __end_of_rtcc_read_eeprom:
  8935                           	opt stack 0
  8936                           tblptru	equ	0xFF8
  8937                           tblptrh	equ	0xFF7
  8938                           tblptrl	equ	0xFF6
  8939                           tablat	equ	0xFF5
  8940                           prodl	equ	0xFF3
  8941                           intcon3	equ	0xFF0
  8942                           postinc0	equ	0xFEE
  8943                           wreg	equ	0xFE8
  8944                           postdec1	equ	0xFE5
  8945                           plusw1	equ	0xFE3
  8946                           fsr1h	equ	0xFE2
  8947                           fsr1l	equ	0xFE1
  8948                           postinc2	equ	0xFDE
  8949                           postdec2	equ	0xFDD
  8950                           plusw2	equ	0xFDB
  8951                           fsr2h	equ	0xFDA
  8952                           fsr2l	equ	0xFD9
  8953                           status	equ	0xFD8
  8954                           
  8955 ;; *************** function _log_start_new *****************
  8956 ;; Defined at:
  8957 ;;		line 71 in file "log.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;		None
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;		None
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  1    wreg      void 
  8964 ;; Registers used:
  8965 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8975 ;;Total ram usage:        0 bytes
  8976 ;; Hardware stack levels used:    1
  8977 ;; Hardware stack levels required when called:   12
  8978 ;; This function calls:
  8979 ;;		_rtcc_get_seconds_decimal
  8980 ;; This function is called by:
  8981 ;;		_main
  8982 ;;		_system_init
  8983 ;; This function uses a non-reentrant model
  8984 ;;
  8985                           
  8986                           	psect	text30
  8987  016A32                     __ptext30:
  8988                           	opt stack 0
  8989  016A32                     _log_start_new:
  8990                           	opt stack 17
  8991                           
  8992                           ;log.c: 73: inputVoltageSum = 0;
  8993                           
  8994                           ;incstack = 0
  8995  016A32  0E00               	movlw	0
  8996  016A34  0102               	movlb	2	; () banked
  8997  016A36  6F9A               	movwf	_inputVoltageSum& (0+255),b
  8998  016A38  0E00               	movlw	0
  8999  016A3A  6F9B               	movwf	(_inputVoltageSum+1)& (0+255),b
  9000  016A3C  0E00               	movlw	0
  9001  016A3E  6F9C               	movwf	(_inputVoltageSum+2)& (0+255),b
  9002  016A40  0E00               	movlw	0
  9003  016A42  6F9D               	movwf	(_inputVoltageSum+3)& (0+255),b
  9004                           
  9005                           ;log.c: 74: inputCurrentSum = 0;
  9006  016A44  0E00               	movlw	0
  9007  016A46  0102               	movlb	2	; () banked
  9008  016A48  6F96               	movwf	_inputCurrentSum& (0+255),b
  9009  016A4A  0E00               	movlw	0
  9010  016A4C  6F97               	movwf	(_inputCurrentSum+1)& (0+255),b
  9011  016A4E  0E00               	movlw	0
  9012  016A50  6F98               	movwf	(_inputCurrentSum+2)& (0+255),b
  9013  016A52  0E00               	movlw	0
  9014  016A54  6F99               	movwf	(_inputCurrentSum+3)& (0+255),b
  9015                           
  9016                           ;log.c: 75: outputVoltageSum = 0;
  9017  016A56  0E00               	movlw	0
  9018  016A58  0102               	movlb	2	; () banked
  9019  016A5A  6F92               	movwf	_outputVoltageSum& (0+255),b
  9020  016A5C  0E00               	movlw	0
  9021  016A5E  6F93               	movwf	(_outputVoltageSum+1)& (0+255),b
  9022  016A60  0E00               	movlw	0
  9023  016A62  6F94               	movwf	(_outputVoltageSum+2)& (0+255),b
  9024  016A64  0E00               	movlw	0
  9025  016A66  6F95               	movwf	(_outputVoltageSum+3)& (0+255),b
  9026                           
  9027                           ;log.c: 76: outputCurrentSum = 0;
  9028  016A68  0E00               	movlw	0
  9029  016A6A  0102               	movlb	2	; () banked
  9030  016A6C  6F8E               	movwf	_outputCurrentSum& (0+255),b
  9031  016A6E  0E00               	movlw	0
  9032  016A70  6F8F               	movwf	(_outputCurrentSum+1)& (0+255),b
  9033  016A72  0E00               	movlw	0
  9034  016A74  6F90               	movwf	(_outputCurrentSum+2)& (0+255),b
  9035  016A76  0E00               	movlw	0
  9036  016A78  6F91               	movwf	(_outputCurrentSum+3)& (0+255),b
  9037                           
  9038                           ;log.c: 77: inputPowerSum = 0;
  9039  016A7A  0E00               	movlw	0
  9040  016A7C  0102               	movlb	2	; () banked
  9041  016A7E  6F8A               	movwf	_inputPowerSum& (0+255),b
  9042  016A80  0E00               	movlw	0
  9043  016A82  6F8B               	movwf	(_inputPowerSum+1)& (0+255),b
  9044  016A84  0E00               	movlw	0
  9045  016A86  6F8C               	movwf	(_inputPowerSum+2)& (0+255),b
  9046  016A88  0E00               	movlw	0
  9047  016A8A  6F8D               	movwf	(_inputPowerSum+3)& (0+255),b
  9048                           
  9049                           ;log.c: 78: outputPowerSum = 0;
  9050  016A8C  0E00               	movlw	0
  9051  016A8E  0102               	movlb	2	; () banked
  9052  016A90  6F86               	movwf	_outputPowerSum& (0+255),b
  9053  016A92  0E00               	movlw	0
  9054  016A94  6F87               	movwf	(_outputPowerSum+1)& (0+255),b
  9055  016A96  0E00               	movlw	0
  9056  016A98  6F88               	movwf	(_outputPowerSum+2)& (0+255),b
  9057  016A9A  0E00               	movlw	0
  9058  016A9C  6F89               	movwf	(_outputPowerSum+3)& (0+255),b
  9059                           
  9060                           ;log.c: 79: inputCapacitySum = 0;
  9061  016A9E  0E00               	movlw	0
  9062  016AA0  0102               	movlb	2	; () banked
  9063  016AA2  6F82               	movwf	_inputCapacitySum& (0+255),b
  9064  016AA4  0E00               	movlw	0
  9065  016AA6  6F83               	movwf	(_inputCapacitySum+1)& (0+255),b
  9066  016AA8  0E00               	movlw	0
  9067  016AAA  6F84               	movwf	(_inputCapacitySum+2)& (0+255),b
  9068  016AAC  0E00               	movlw	0
  9069  016AAE  6F85               	movwf	(_inputCapacitySum+3)& (0+255),b
  9070                           
  9071                           ;log.c: 80: outputCapacitySum = 0;
  9072  016AB0  0E00               	movlw	0
  9073  016AB2  0102               	movlb	2	; () banked
  9074  016AB4  6F7E               	movwf	_outputCapacitySum& (0+255),b
  9075  016AB6  0E00               	movlw	0
  9076  016AB8  6F7F               	movwf	(_outputCapacitySum+1)& (0+255),b
  9077  016ABA  0E00               	movlw	0
  9078  016ABC  6F80               	movwf	(_outputCapacitySum+2)& (0+255),b
  9079  016ABE  0E00               	movlw	0
  9080  016AC0  6F81               	movwf	(_outputCapacitySum+3)& (0+255),b
  9081                           
  9082                           ;log.c: 81: temperatureOnboardSum = 0;
  9083  016AC2  0E00               	movlw	0
  9084  016AC4  0102               	movlb	2	; () banked
  9085  016AC6  6F7A               	movwf	_temperatureOnboardSum& (0+255),b
  9086  016AC8  0E00               	movlw	0
  9087  016ACA  6F7B               	movwf	(_temperatureOnboardSum+1)& (0+255),b
  9088  016ACC  0E00               	movlw	0
  9089  016ACE  6F7C               	movwf	(_temperatureOnboardSum+2)& (0+255),b
  9090  016AD0  0E00               	movlw	0
  9091  016AD2  6F7D               	movwf	(_temperatureOnboardSum+3)& (0+255),b
  9092                           
  9093                           ;log.c: 82: temperatureExternal1Sum = 0;
  9094  016AD4  0E00               	movlw	0
  9095  016AD6  0102               	movlb	2	; () banked
  9096  016AD8  6F76               	movwf	_temperatureExternal1Sum& (0+255),b
  9097  016ADA  0E00               	movlw	0
  9098  016ADC  6F77               	movwf	(_temperatureExternal1Sum+1)& (0+255),b
  9099  016ADE  0E00               	movlw	0
  9100  016AE0  6F78               	movwf	(_temperatureExternal1Sum+2)& (0+255),b
  9101  016AE2  0E00               	movlw	0
  9102  016AE4  6F79               	movwf	(_temperatureExternal1Sum+3)& (0+255),b
  9103                           
  9104                           ;log.c: 83: temperatureExternal2Sum = 0;
  9105  016AE6  0E00               	movlw	0
  9106  016AE8  0102               	movlb	2	; () banked
  9107  016AEA  6F72               	movwf	_temperatureExternal2Sum& (0+255),b
  9108  016AEC  0E00               	movlw	0
  9109  016AEE  6F73               	movwf	(_temperatureExternal2Sum+1)& (0+255),b
  9110  016AF0  0E00               	movlw	0
  9111  016AF2  6F74               	movwf	(_temperatureExternal2Sum+2)& (0+255),b
  9112  016AF4  0E00               	movlw	0
  9113  016AF6  6F75               	movwf	(_temperatureExternal2Sum+3)& (0+255),b
  9114                           
  9115                           ;log.c: 84: chargerOnTime = 0;
  9116  016AF8  0E00               	movlw	0
  9117  016AFA  0102               	movlb	2	; () banked
  9118  016AFC  6FB1               	movwf	(_chargerOnTime+1)& (0+255),b
  9119  016AFE  0E00               	movlw	0
  9120  016B00  6FB0               	movwf	_chargerOnTime& (0+255),b
  9121                           
  9122                           ;log.c: 85: lowPowerTime = 0;
  9123  016B02  0E00               	movlw	0
  9124  016B04  0102               	movlb	2	; () banked
  9125  016B06  6FAF               	movwf	(_lowPowerTime+1)& (0+255),b
  9126  016B08  0E00               	movlw	0
  9127  016B0A  6FAE               	movwf	_lowPowerTime& (0+255),b
  9128                           
  9129                           ;log.c: 86: status = 0;
  9130  016B0C  0E00               	movlw	0
  9131  016B0E  0101               	movlb	1	; () banked
  9132  016B10  6FF0               	movwf	_status& (0+255),b
  9133                           
  9134                           ;log.c: 87: averageCount = 0;
  9135  016B12  0E00               	movlw	0
  9136  016B14  6E17               	movwf	_averageCount+1,c
  9137  016B16  0E00               	movlw	0
  9138  016B18  6E16               	movwf	_averageCount,c
  9139                           
  9140                           ; BSR set to: 1
  9141                           ;log.c: 88: lastSecond = rtcc_get_seconds_decimal();
  9142  016B1A  EC82  F0D5         	call	_rtcc_get_seconds_decimal	;wreg free
  9143  016B1E  0101               	movlb	1	; () banked
  9144  016B20  6FEF               	movwf	_lastSecond& (0+255),b
  9145                           
  9146                           ; BSR set to: 1
  9147  016B22  0012               	return		;funcret
  9148  016B24                     __end_of_log_start_new:
  9149                           	opt stack 0
  9150                           tblptru	equ	0xFF8
  9151                           tblptrh	equ	0xFF7
  9152                           tblptrl	equ	0xFF6
  9153                           tablat	equ	0xFF5
  9154                           prodl	equ	0xFF3
  9155                           intcon3	equ	0xFF0
  9156                           postinc0	equ	0xFEE
  9157                           wreg	equ	0xFE8
  9158                           postdec1	equ	0xFE5
  9159                           plusw1	equ	0xFE3
  9160                           fsr1h	equ	0xFE2
  9161                           fsr1l	equ	0xFE1
  9162                           postinc2	equ	0xFDE
  9163                           postdec2	equ	0xFDD
  9164                           plusw2	equ	0xFDB
  9165                           fsr2h	equ	0xFDA
  9166                           fsr2l	equ	0xFD9
  9167                           status	equ	0xFD8
  9168                           
  9169 ;; *************** function _i2c_init *****************
  9170 ;; Defined at:
  9171 ;;		line 94 in file "i2c.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;		None
  9174 ;; Auto vars:     Size  Location     Type
  9175 ;;		None
  9176 ;; Return value:  Size  Location     Type
  9177 ;;                  1    wreg      void 
  9178 ;; Registers used:
  9179 ;;		wreg, status,2, status,0, cstack
  9180 ;; Tracked objects:
  9181 ;;		On entry : 0/0
  9182 ;;		On exit  : 0/0
  9183 ;;		Unchanged: 0/0
  9184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9189 ;;Total ram usage:        0 bytes
  9190 ;; Hardware stack levels used:    1
  9191 ;; Hardware stack levels required when called:   11
  9192 ;; This function calls:
  9193 ;;		__i2c_open_1
  9194 ;;		_i2c_set_frequency
  9195 ;; This function is called by:
  9196 ;;		_system_init
  9197 ;; This function uses a non-reentrant model
  9198 ;;
  9199                           
  9200                           	psect	text31
  9201  01AB56                     __ptext31:
  9202                           	opt stack 0
  9203  01AB56                     _i2c_init:
  9204                           	opt stack 18
  9205                           
  9206                           ;i2c.c: 96: _i2c_open_1();
  9207                           
  9208                           ; BSR set to: 1
  9209                           ;incstack = 0
  9210  01AB56  ECCC  F0D4         	call	__i2c_open_1	;wreg free
  9211                           
  9212                           ;i2c.c: 98: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  9213  01AB5A  0E00               	movlw	0
  9214  01AB5C  EC5B  F0C8         	call	_i2c_set_frequency
  9215  01AB60  0012               	return		;funcret
  9216  01AB62                     __end_of_i2c_init:
  9217                           	opt stack 0
  9218                           tblptru	equ	0xFF8
  9219                           tblptrh	equ	0xFF7
  9220                           tblptrl	equ	0xFF6
  9221                           tablat	equ	0xFF5
  9222                           prodl	equ	0xFF3
  9223                           intcon3	equ	0xFF0
  9224                           postinc0	equ	0xFEE
  9225                           wreg	equ	0xFE8
  9226                           postdec1	equ	0xFE5
  9227                           plusw1	equ	0xFE3
  9228                           fsr1h	equ	0xFE2
  9229                           fsr1l	equ	0xFE1
  9230                           postinc2	equ	0xFDE
  9231                           postdec2	equ	0xFDD
  9232                           plusw2	equ	0xFDB
  9233                           fsr2h	equ	0xFDA
  9234                           fsr2l	equ	0xFD9
  9235                           status	equ	0xFD8
  9236                           
  9237 ;; *************** function __i2c_open_1 *****************
  9238 ;; Defined at:
  9239 ;;		line 33 in file "i2c.c"
  9240 ;; Parameters:    Size  Location     Type
  9241 ;;		None
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;		None
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  1    wreg      void 
  9246 ;; Registers used:
  9247 ;;		wreg, status,2
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9257 ;;Total ram usage:        0 bytes
  9258 ;; Hardware stack levels used:    1
  9259 ;; Hardware stack levels required when called:   10
  9260 ;; This function calls:
  9261 ;;		Nothing
  9262 ;; This function is called by:
  9263 ;;		_i2c_init
  9264 ;; This function uses a non-reentrant model
  9265 ;;
  9266                           
  9267                           	psect	text32
  9268  01A998                     __ptext32:
  9269                           	opt stack 0
  9270  01A998                     __i2c_open_1:
  9271                           	opt stack 18
  9272                           
  9273                           ;i2c.c: 35: SSP1STATbits.SMP = 0;
  9274                           
  9275                           ;incstack = 0
  9276  01A998  9EC7               	bcf	4039,7,c	;volatile
  9277                           
  9278                           ;i2c.c: 36: SSP1STATbits.CKE = 0;
  9279  01A99A  9CC7               	bcf	4039,6,c	;volatile
  9280                           
  9281                           ;i2c.c: 37: SSP1ADD = 29;
  9282  01A99C  0E1D               	movlw	29
  9283  01A99E  6EC8               	movwf	4040,c	;volatile
  9284                           
  9285                           ;i2c.c: 38: SSP1CON1bits.WCOL = 0;
  9286  01A9A0  9EC6               	bcf	4038,7,c	;volatile
  9287                           
  9288                           ;i2c.c: 39: SSP1CON1bits.SSPOV = 0;
  9289  01A9A2  9CC6               	bcf	4038,6,c	;volatile
  9290                           
  9291                           ;i2c.c: 40: SSP1CON1bits.SSPM = 0b1000;
  9292  01A9A4  50C6               	movf	4038,w,c	;volatile
  9293  01A9A6  0BF0               	andlw	-16
  9294  01A9A8  0908               	iorlw	8
  9295  01A9AA  6EC6               	movwf	4038,c	;volatile
  9296                           
  9297                           ;i2c.c: 41: SSP1CON1bits.SSPEN = 1;
  9298  01A9AC  8AC6               	bsf	4038,5,c	;volatile
  9299  01A9AE  0012               	return		;funcret
  9300  01A9B0                     __end_of__i2c_open_1:
  9301                           	opt stack 0
  9302                           tblptru	equ	0xFF8
  9303                           tblptrh	equ	0xFF7
  9304                           tblptrl	equ	0xFF6
  9305                           tablat	equ	0xFF5
  9306                           prodl	equ	0xFF3
  9307                           intcon3	equ	0xFF0
  9308                           postinc0	equ	0xFEE
  9309                           wreg	equ	0xFE8
  9310                           postdec1	equ	0xFE5
  9311                           plusw1	equ	0xFE3
  9312                           fsr1h	equ	0xFE2
  9313                           fsr1l	equ	0xFE1
  9314                           postinc2	equ	0xFDE
  9315                           postdec2	equ	0xFDD
  9316                           plusw2	equ	0xFDB
  9317                           fsr2h	equ	0xFDA
  9318                           fsr2l	equ	0xFD9
  9319                           status	equ	0xFD8
  9320                           
  9321 ;; *************** function _i2c_eeprom_read_calibration *****************
  9322 ;; Defined at:
  9323 ;;		line 579 in file "i2c.c"
  9324 ;; Parameters:    Size  Location     Type
  9325 ;;		None
  9326 ;; Auto vars:     Size  Location     Type
  9327 ;;  buffer          4   27[BANK0 ] unsigned char [4]
  9328 ;;  addr            2   31[BANK0 ] unsigned int 
  9329 ;;  cntr            1   33[BANK0 ] unsigned char 
  9330 ;; Return value:  Size  Location     Type
  9331 ;;                  1    wreg      void 
  9332 ;; Registers used:
  9333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9334 ;; Tracked objects:
  9335 ;;		On entry : 0/0
  9336 ;;		On exit  : 0/0
  9337 ;;		Unchanged: 0/0
  9338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9340 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9341 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9342 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9343 ;;Total ram usage:        9 bytes
  9344 ;; Hardware stack levels used:    1
  9345 ;; Hardware stack levels required when called:   13
  9346 ;; This function calls:
  9347 ;;		__i2c_eeprom_load_default_calibration
  9348 ;;		_i2c_eeprom_read
  9349 ;;		_schedule_eeprom_write_task
  9350 ;; This function is called by:
  9351 ;;		_system_init
  9352 ;; This function uses a non-reentrant model
  9353 ;;
  9354                           
  9355                           	psect	text33
  9356  015270                     __ptext33:
  9357                           	opt stack 0
  9358  015270                     _i2c_eeprom_read_calibration:
  9359                           	opt stack 16
  9360                           
  9361                           ;i2c.c: 581: uint8_t buffer[4];
  9362                           ;i2c.c: 582: uint8_t cntr;
  9363                           ;i2c.c: 583: uint16_t addr;
  9364                           ;i2c.c: 585: for(cntr=0; cntr<CALIBRATION_INDEX_COUNT; ++cntr)
  9365                           
  9366                           ;incstack = 0
  9367  015270  0E00               	movlw	0
  9368  015272  0100               	movlb	0	; () banked
  9369  015274  6F81               	movwf	i2c_eeprom_read_calibration@cntr& (0+255),b
  9370  015276                     l20492:
  9371                           
  9372                           ; BSR set to: 0
  9373  015276  0E06               	movlw	6
  9374  015278  0100               	movlb	0	; () banked
  9375  01527A  6581               	cpfsgt	i2c_eeprom_read_calibration@cntr& (0+255),b
  9376  01527C  D001               	goto	l20496
  9377  01527E  0012               	return	
  9378  015280                     l20496:
  9379                           
  9380                           ; BSR set to: 0
  9381                           ;i2c.c: 586: {
  9382                           ;i2c.c: 588: addr = 0x0100 + (cntr<<4);
  9383  015280  0100               	movlb	0	; () banked
  9384  015282  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9385  015284  0100               	movlb	0	; () banked
  9386  015286  6F79               	movwf	??_i2c_eeprom_read_calibration& (0+255),b
  9387  015288  6B7A               	clrf	(??_i2c_eeprom_read_calibration+1)& (0+255),b
  9388  01528A  0100               	movlb	0	; () banked
  9389  01528C  3B79               	swapf	??_i2c_eeprom_read_calibration& (0+255),f,b
  9390  01528E  3B7A               	swapf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9391  015290  0EF0               	movlw	240
  9392  015292  177A               	andwf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9393  015294  5179               	movf	??_i2c_eeprom_read_calibration& (0+255),w,b
  9394  015296  0B0F               	andlw	15
  9395  015298  137A               	iorwf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
  9396  01529A  0EF0               	movlw	240
  9397  01529C  1779               	andwf	??_i2c_eeprom_read_calibration& (0+255),f,b
  9398  01529E  0E00               	movlw	0
  9399  0152A0  0100               	movlb	0	; () banked
  9400  0152A2  2579               	addwf	??_i2c_eeprom_read_calibration& (0+255),w,b
  9401  0152A4  0100               	movlb	0	; () banked
  9402  0152A6  6F7F               	movwf	i2c_eeprom_read_calibration@addr& (0+255),b
  9403  0152A8  0E01               	movlw	1
  9404  0152AA  0100               	movlb	0	; () banked
  9405  0152AC  217A               	addwfc	(??_i2c_eeprom_read_calibration+1)& (0+255),w,b
  9406  0152AE  0100               	movlb	0	; () banked
  9407  0152B0  6F80               	movwf	(i2c_eeprom_read_calibration@addr+1)& (0+255),b
  9408                           
  9409                           ; BSR set to: 0
  9410                           ;i2c.c: 589: i2c_eeprom_read(addr, &buffer[0], 4);
  9411  0152B2  C07F  F071         	movff	i2c_eeprom_read_calibration@addr,i2c_eeprom_read@address
  9412  0152B6  C080  F072         	movff	i2c_eeprom_read_calibration@addr+1,i2c_eeprom_read@address+1
  9413  0152BA  0E7B               	movlw	low i2c_eeprom_read_calibration@buffer
  9414  0152BC  0100               	movlb	0	; () banked
  9415  0152BE  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  9416  0152C0  0E00               	movlw	high i2c_eeprom_read_calibration@buffer
  9417  0152C2  0100               	movlb	0	; () banked
  9418  0152C4  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  9419  0152C6  0E04               	movlw	4
  9420  0152C8  0100               	movlb	0	; () banked
  9421  0152CA  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  9422  0152CC  ECD2  F0CA         	call	_i2c_eeprom_read	;wreg free
  9423                           
  9424                           ;i2c.c: 591: if((buffer[0]==0x77) && (buffer[1]==0x55) && (buffer[2]==0x33) && (buffer[3
      +                          ]==cntr))
  9425  0152D0  0E77               	movlw	119
  9426  0152D2  0100               	movlb	0	; () banked
  9427  0152D4  197B               	xorwf	i2c_eeprom_read_calibration@buffer& (0+255),w,b
  9428  0152D6  A4D8               	btfss	status,2,c
  9429  0152D8  D02A               	goto	l20512
  9430                           
  9431                           ; BSR set to: 0
  9432  0152DA  0E55               	movlw	85
  9433  0152DC  0100               	movlb	0	; () banked
  9434  0152DE  197C               	xorwf	(i2c_eeprom_read_calibration@buffer+1)& (0+255),w,b
  9435  0152E0  A4D8               	btfss	status,2,c
  9436  0152E2  D025               	goto	l20512
  9437                           
  9438                           ; BSR set to: 0
  9439  0152E4  0E33               	movlw	51
  9440  0152E6  0100               	movlb	0	; () banked
  9441  0152E8  197D               	xorwf	(i2c_eeprom_read_calibration@buffer+2)& (0+255),w,b
  9442  0152EA  A4D8               	btfss	status,2,c
  9443  0152EC  D020               	goto	l20512
  9444                           
  9445                           ; BSR set to: 0
  9446  0152EE  0100               	movlb	0	; () banked
  9447  0152F0  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9448  0152F2  0100               	movlb	0	; () banked
  9449  0152F4  197E               	xorwf	(i2c_eeprom_read_calibration@buffer+3)& (0+255),w,b
  9450  0152F6  A4D8               	btfss	status,2,c
  9451  0152F8  D01A               	goto	l20512
  9452                           
  9453                           ; BSR set to: 0
  9454                           ;i2c.c: 592: {
  9455                           ;i2c.c: 594: addr += 4;
  9456  0152FA  0E04               	movlw	4
  9457  0152FC  0100               	movlb	0	; () banked
  9458  0152FE  277F               	addwf	i2c_eeprom_read_calibration@addr& (0+255),f,b
  9459  015300  0E00               	movlw	0
  9460  015302  2380               	addwfc	(i2c_eeprom_read_calibration@addr+1)& (0+255),f,b
  9461                           
  9462                           ; BSR set to: 0
  9463                           ;i2c.c: 595: i2c_eeprom_read(addr, (uint8_t*) &calibrationParameters[cntr], 12);
  9464  015304  C07F  F071         	movff	i2c_eeprom_read_calibration@addr,i2c_eeprom_read@address
  9465  015308  C080  F072         	movff	i2c_eeprom_read_calibration@addr+1,i2c_eeprom_read@address+1
  9466  01530C  0100               	movlb	0	; () banked
  9467  01530E  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9468  015310  0D0C               	mullw	12
  9469  015312  0E00               	movlw	low _calibrationParameters
  9470  015314  24F3               	addwf	prodl,w,c
  9471  015316  0100               	movlb	0	; () banked
  9472  015318  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  9473  01531A  0E03               	movlw	high _calibrationParameters
  9474  01531C  20F4               	addwfc	prodh,w,c
  9475  01531E  0100               	movlb	0	; () banked
  9476  015320  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  9477  015322  0E0C               	movlw	12
  9478  015324  0100               	movlb	0	; () banked
  9479  015326  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  9480  015328  ECD2  F0CA         	call	_i2c_eeprom_read	;wreg free
  9481                           
  9482                           ;i2c.c: 596: }
  9483  01532C  D043               	goto	l20532
  9484  01532E                     l20512:
  9485                           
  9486                           ;i2c.c: 597: else
  9487                           ;i2c.c: 598: {
  9488                           ;i2c.c: 600: _i2c_eeprom_load_default_calibration(&calibrationParameters[cntr], cntr);
  9489  01532E  0100               	movlb	0	; () banked
  9490  015330  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9491  015332  0D0C               	mullw	12
  9492  015334  0E00               	movlw	low _calibrationParameters
  9493  015336  24F3               	addwf	prodl,w,c
  9494  015338  0100               	movlb	0	; () banked
  9495  01533A  6F60               	movwf	__i2c_eeprom_load_default_calibration@buffer& (0+255),b
  9496  01533C  0E03               	movlw	high _calibrationParameters
  9497  01533E  20F4               	addwfc	prodh,w,c
  9498  015340  0100               	movlb	0	; () banked
  9499  015342  6F61               	movwf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),b
  9500  015344  C081  F062         	movff	i2c_eeprom_read_calibration@cntr,__i2c_eeprom_load_default_calibration@index
  9501  015348  EC20  F08A         	call	__i2c_eeprom_load_default_calibration	;wreg free
  9502                           
  9503                           ;i2c.c: 602: switch((calibrationIndex_t) cntr)
  9504  01534C  D01C               	goto	l20530
  9505  01534E                     l20514:
  9506                           
  9507                           ;i2c.c: 605: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_VOLTAGE);
  9508  01534E  0E02               	movlw	2
  9509  015350  EC61  F0CD         	call	_schedule_eeprom_write_task
  9510                           
  9511                           ;i2c.c: 606: break;
  9512  015354  D02F               	goto	l20532
  9513  015356                     l20516:
  9514                           
  9515                           ;i2c.c: 608: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_VOLTAGE);
  9516  015356  0E03               	movlw	3
  9517  015358  EC61  F0CD         	call	_schedule_eeprom_write_task
  9518                           
  9519                           ;i2c.c: 609: break;
  9520  01535C  D02B               	goto	l20532
  9521  01535E                     l20518:
  9522                           
  9523                           ;i2c.c: 611: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_CURRENT);
  9524  01535E  0E04               	movlw	4
  9525  015360  EC61  F0CD         	call	_schedule_eeprom_write_task
  9526                           
  9527                           ;i2c.c: 612: break;
  9528  015364  D027               	goto	l20532
  9529  015366                     l20520:
  9530                           
  9531                           ;i2c.c: 614: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_CURRENT);
  9532  015366  0E05               	movlw	5
  9533  015368  EC61  F0CD         	call	_schedule_eeprom_write_task
  9534                           
  9535                           ;i2c.c: 615: break;
  9536  01536C  D023               	goto	l20532
  9537  01536E                     l20522:
  9538                           
  9539                           ;i2c.c: 617: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_ONBOARD_TEMPERATUR
      +                          E);
  9540  01536E  0E06               	movlw	6
  9541  015370  EC61  F0CD         	call	_schedule_eeprom_write_task
  9542                           
  9543                           ;i2c.c: 618: break;
  9544  015374  D01F               	goto	l20532
  9545  015376                     l20524:
  9546                           
  9547                           ;i2c.c: 620: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERATU
      +                          RE_1);
  9548  015376  0E07               	movlw	7
  9549  015378  EC61  F0CD         	call	_schedule_eeprom_write_task
  9550                           
  9551                           ;i2c.c: 621: break;
  9552  01537C  D01B               	goto	l20532
  9553  01537E                     l20526:
  9554                           
  9555                           ;i2c.c: 623: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERATU
      +                          RE_2);
  9556  01537E  0E08               	movlw	8
  9557  015380  EC61  F0CD         	call	_schedule_eeprom_write_task
  9558                           
  9559                           ;i2c.c: 625: }
  9560                           
  9561                           ;i2c.c: 624: break;
  9562  015384  D017               	goto	l20532
  9563  015386                     l20530:
  9564  015386  0100               	movlb	0	; () banked
  9565  015388  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
  9566                           
  9567                           ; Switch size 1, requested type "space"
  9568                           ; Number of cases is 7, Range of values is 0 to 6
  9569                           ; switch strategies available:
  9570                           ; Name         Instructions Cycles
  9571                           ; simple_byte           22    12 (average)
  9572                           ;	Chosen strategy is simple_byte
  9573  01538A  0A00               	xorlw	0	; case 0
  9574  01538C  B4D8               	btfsc	status,2,c
  9575  01538E  D7DF               	goto	l20514
  9576  015390  0A01               	xorlw	1	; case 1
  9577  015392  B4D8               	btfsc	status,2,c
  9578  015394  D7E0               	goto	l20516
  9579  015396  0A03               	xorlw	3	; case 2
  9580  015398  B4D8               	btfsc	status,2,c
  9581  01539A  D7E1               	goto	l20518
  9582  01539C  0A01               	xorlw	1	; case 3
  9583  01539E  B4D8               	btfsc	status,2,c
  9584  0153A0  D7E2               	goto	l20520
  9585  0153A2  0A07               	xorlw	7	; case 4
  9586  0153A4  B4D8               	btfsc	status,2,c
  9587  0153A6  D7E3               	goto	l20522
  9588  0153A8  0A01               	xorlw	1	; case 5
  9589  0153AA  B4D8               	btfsc	status,2,c
  9590  0153AC  D7E4               	goto	l20524
  9591  0153AE  0A03               	xorlw	3	; case 6
  9592  0153B0  B4D8               	btfsc	status,2,c
  9593  0153B2  D7E5               	goto	l20526
  9594  0153B4                     l20532:
  9595  0153B4  0100               	movlb	0	; () banked
  9596  0153B6  2B81               	incf	i2c_eeprom_read_calibration@cntr& (0+255),f,b
  9597  0153B8  D75E               	goto	l20492
  9598  0153BA                     __end_of_i2c_eeprom_read_calibration:
  9599                           	opt stack 0
  9600                           tblptru	equ	0xFF8
  9601                           tblptrh	equ	0xFF7
  9602                           tblptrl	equ	0xFF6
  9603                           tablat	equ	0xFF5
  9604                           prodh	equ	0xFF4
  9605                           prodl	equ	0xFF3
  9606                           intcon3	equ	0xFF0
  9607                           postinc0	equ	0xFEE
  9608                           wreg	equ	0xFE8
  9609                           postdec1	equ	0xFE5
  9610                           plusw1	equ	0xFE3
  9611                           fsr1h	equ	0xFE2
  9612                           fsr1l	equ	0xFE1
  9613                           postinc2	equ	0xFDE
  9614                           postdec2	equ	0xFDD
  9615                           plusw2	equ	0xFDB
  9616                           fsr2h	equ	0xFDA
  9617                           fsr2l	equ	0xFD9
  9618                           status	equ	0xFD8
  9619                           
  9620 ;; *************** function _i2c_eeprom_read *****************
  9621 ;; Defined at:
  9622 ;;		line 563 in file "i2c.c"
  9623 ;; Parameters:    Size  Location     Type
  9624 ;;  address         2   17[BANK0 ] unsigned int 
  9625 ;;  data            2   19[BANK0 ] PTR unsigned char 
  9626 ;;		 -> rtcc_read_eeprom@date(6), i2c_eeprom_read_calibration@buffer(4), calibrationParameters(84), 
  9627 ;;  length          1   21[BANK0 ] unsigned char 
  9628 ;; Auto vars:     Size  Location     Type
  9629 ;;  slave_addres    1   24[BANK0 ] unsigned char 
  9630 ;;  addr            1   23[BANK0 ] unsigned char 
  9631 ;; Return value:  Size  Location     Type
  9632 ;;                  1    wreg      void 
  9633 ;; Registers used:
  9634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9635 ;; Tracked objects:
  9636 ;;		On entry : 0/0
  9637 ;;		On exit  : 0/0
  9638 ;;		Unchanged: 0/0
  9639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9640 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9641 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9642 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9643 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9644 ;;Total ram usage:        8 bytes
  9645 ;; Hardware stack levels used:    1
  9646 ;; Hardware stack levels required when called:   12
  9647 ;; This function calls:
  9648 ;;		__i2c_read
  9649 ;;		__i2c_write
  9650 ;;		_i2c_set_frequency
  9651 ;; This function is called by:
  9652 ;;		_i2c_eeprom_read_calibration
  9653 ;;		_rtcc_read_eeprom
  9654 ;; This function uses a non-reentrant model
  9655 ;;
  9656                           
  9657                           	psect	text34
  9658  0195A4                     __ptext34:
  9659                           	opt stack 0
  9660  0195A4                     _i2c_eeprom_read:
  9661                           	opt stack 15
  9662                           
  9663                           ;i2c.c: 565: uint8_t slave_address;
  9664                           ;i2c.c: 566: uint8_t addr;
  9665                           ;i2c.c: 567: addr = address & 0xFF;
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;incstack = 0
  9669  0195A4  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  9670                           
  9671                           ;i2c.c: 568: address &= 0b0000011100000000;
  9672  0195A8  0100               	movlb	0	; () banked
  9673  0195AA  0E00               	movlw	0
  9674  0195AC  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
  9675  0195AE  0E07               	movlw	7
  9676  0195B0  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
  9677                           
  9678                           ;i2c.c: 569: address >>= 7;
  9679  0195B2  0E07               	movlw	7
  9680  0195B4  0100               	movlb	0	; () banked
  9681  0195B6  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
  9682  0195B8                     u17765:
  9683  0195B8  90D8               	bcf	status,0,c
  9684  0195BA  0100               	movlb	0	; () banked
  9685  0195BC  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
  9686  0195BE  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
  9687  0195C0  0100               	movlb	0	; () banked
  9688  0195C2  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
  9689  0195C4  D7F9               	goto	u17765
  9690                           
  9691                           ;i2c.c: 570: slave_address = 0b10100000 | address;
  9692  0195C6  0100               	movlb	0	; () banked
  9693  0195C8  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
  9694  0195CA  09A0               	iorlw	160
  9695  0195CC  0100               	movlb	0	; () banked
  9696  0195CE  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
  9697                           
  9698                           ; BSR set to: 0
  9699                           ;i2c.c: 573: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  9700  0195D0  0E02               	movlw	2
  9701  0195D2  EC5B  F0C8         	call	_i2c_set_frequency
  9702                           
  9703                           ;i2c.c: 575: _i2c_write(slave_address, &addr, 1);
  9704  0195D6  0E77               	movlw	low i2c_eeprom_read@addr
  9705  0195D8  0100               	movlb	0	; () banked
  9706  0195DA  6F65               	movwf	__i2c_write@data& (0+255),b
  9707  0195DC  0E00               	movlw	high i2c_eeprom_read@addr
  9708  0195DE  0100               	movlb	0	; () banked
  9709  0195E0  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  9710  0195E2  0E01               	movlw	1
  9711  0195E4  0100               	movlb	0	; () banked
  9712  0195E6  6F67               	movwf	__i2c_write@length& (0+255),b
  9713  0195E8  0100               	movlb	0	; () banked
  9714  0195EA  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  9715  0195EC  ECDC  F0CC         	call	__i2c_write
  9716                           
  9717                           ;i2c.c: 576: _i2c_read(slave_address, &data[0], length);
  9718  0195F0  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
  9719  0195F4  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  9720  0195F8  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
  9721  0195FC  0100               	movlb	0	; () banked
  9722  0195FE  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  9723  019600  EC14  F0BB         	call	__i2c_read
  9724  019604  0012               	return		;funcret
  9725  019606                     __end_of_i2c_eeprom_read:
  9726                           	opt stack 0
  9727                           tblptru	equ	0xFF8
  9728                           tblptrh	equ	0xFF7
  9729                           tblptrl	equ	0xFF6
  9730                           tablat	equ	0xFF5
  9731                           prodh	equ	0xFF4
  9732                           prodl	equ	0xFF3
  9733                           intcon3	equ	0xFF0
  9734                           postinc0	equ	0xFEE
  9735                           wreg	equ	0xFE8
  9736                           postdec1	equ	0xFE5
  9737                           plusw1	equ	0xFE3
  9738                           fsr1h	equ	0xFE2
  9739                           fsr1l	equ	0xFE1
  9740                           postinc2	equ	0xFDE
  9741                           postdec2	equ	0xFDD
  9742                           plusw2	equ	0xFDB
  9743                           fsr2h	equ	0xFDA
  9744                           fsr2l	equ	0xFD9
  9745                           status	equ	0xFD8
  9746                           
  9747 ;; *************** function __i2c_read *****************
  9748 ;; Defined at:
  9749 ;;		line 167 in file "i2c.c"
  9750 ;; Parameters:    Size  Location     Type
  9751 ;;  slave_addres    1    wreg     unsigned char 
  9752 ;;  data            2    5[BANK0 ] PTR unsigned char 
  9753 ;;		 -> rtcc_read_eeprom@date(6), i2c_eeprom_read_calibration@buffer(4), i2c_eeprom_readByte@addr(1), calibrationParamet
      +ers(84), 
  9754 ;;  length          1    7[BANK0 ] unsigned char 
  9755 ;; Auto vars:     Size  Location     Type
  9756 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  9757 ;;  cntr            1   16[BANK0 ] unsigned char 
  9758 ;; Return value:  Size  Location     Type
  9759 ;;                  1    wreg      void 
  9760 ;; Registers used:
  9761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9762 ;; Tracked objects:
  9763 ;;		On entry : 0/0
  9764 ;;		On exit  : 0/0
  9765 ;;		Unchanged: 0/0
  9766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9767 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9768 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9769 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9770 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9771 ;;Total ram usage:       12 bytes
  9772 ;; Hardware stack levels used:    1
  9773 ;; Hardware stack levels required when called:   11
  9774 ;; This function calls:
  9775 ;;		__i2c_acknowledge
  9776 ;;		__i2c_get
  9777 ;;		__i2c_not_acknowledge
  9778 ;;		__i2c_send
  9779 ;;		__i2c_start
  9780 ;;		__i2c_stop
  9781 ;;		__i2c_wait_idle
  9782 ;; This function is called by:
  9783 ;;		_i2c_eeprom_read
  9784 ;;		_i2c_eeprom_readByte
  9785 ;; This function uses a non-reentrant model
  9786 ;;
  9787                           
  9788                           	psect	text35
  9789  017628                     __ptext35:
  9790                           	opt stack 0
  9791  017628                     __i2c_read:
  9792                           	opt stack 15
  9793                           
  9794                           ;incstack = 0
  9795                           ;__i2c_read@slave_address stored from wreg
  9796  017628  0100               	movlb	0	; () banked
  9797  01762A  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
  9798                           
  9799                           ;i2c.c: 169: uint8_t cntr;
  9800                           ;i2c.c: 171: _i2c_wait_idle();
  9801  01762C  EC76  F0C7         	call	__i2c_wait_idle	;wreg free
  9802                           
  9803                           ;i2c.c: 172: _i2c_start();
  9804  017630  ECDF  F0D5         	call	__i2c_start	;wreg free
  9805                           
  9806                           ;i2c.c: 173: _i2c_wait_idle();
  9807  017634  EC76  F0C7         	call	__i2c_wait_idle	;wreg free
  9808                           
  9809                           ;i2c.c: 174: _i2c_send(slave_address | 0x01);
  9810  017638  0100               	movlb	0	; () banked
  9811  01763A  516F               	movf	__i2c_read@slave_address& (0+255),w,b
  9812  01763C  0901               	iorlw	1
  9813  01763E  ECD6  F0D5         	call	__i2c_send
  9814                           
  9815                           ;i2c.c: 175: _i2c_wait_idle();
  9816  017642  EC76  F0C7         	call	__i2c_wait_idle	;wreg free
  9817                           
  9818                           ;i2c.c: 185: for(cntr=0; cntr<length-1; ++cntr)
  9819  017646  0E00               	movlw	0
  9820  017648  0100               	movlb	0	; () banked
  9821  01764A  6F70               	movwf	__i2c_read@cntr& (0+255),b
  9822  01764C  D012               	goto	l18540
  9823  01764E                     l18534:
  9824                           
  9825                           ; BSR set to: 0
  9826                           ;i2c.c: 186: {
  9827                           ;i2c.c: 187: data[cntr] = _i2c_get();
  9828  01764E  0100               	movlb	0	; () banked
  9829  017650  5170               	movf	__i2c_read@cntr& (0+255),w,b
  9830  017652  0D01               	mullw	1
  9831  017654  50F3               	movf	prodl,w,c
  9832  017656  0100               	movlb	0	; () banked
  9833  017658  2565               	addwf	__i2c_read@data& (0+255),w,b
  9834  01765A  6ED9               	movwf	fsr2l,c
  9835  01765C  50F4               	movf	prodh,w,c
  9836  01765E  0100               	movlb	0	; () banked
  9837  017660  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  9838  017662  6EDA               	movwf	fsr2h,c
  9839  017664  ECC7  F0D5         	call	__i2c_get	;wreg free
  9840  017668  6EDF               	movwf	indf2,c
  9841                           
  9842                           ;i2c.c: 188: _i2c_acknowledge();
  9843  01766A  ECCC  F0D5         	call	__i2c_acknowledge	;wreg free
  9844  01766E  0100               	movlb	0	; () banked
  9845  017670  2B70               	incf	__i2c_read@cntr& (0+255),f,b
  9846  017672                     l18540:
  9847                           
  9848                           ; BSR set to: 0
  9849  017672  0EFF               	movlw	255
  9850  017674  0100               	movlb	0	; () banked
  9851  017676  6F68               	movwf	??__i2c_read& (0+255),b
  9852  017678  0EFF               	movlw	255
  9853  01767A  0100               	movlb	0	; () banked
  9854  01767C  6F69               	movwf	(??__i2c_read+1)& (0+255),b
  9855  01767E  0100               	movlb	0	; () banked
  9856  017680  5167               	movf	__i2c_read@length& (0+255),w,b
  9857  017682  0100               	movlb	0	; () banked
  9858  017684  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
  9859  017686  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
  9860  017688  0100               	movlb	0	; () banked
  9861  01768A  5168               	movf	??__i2c_read& (0+255),w,b
  9862  01768C  0100               	movlb	0	; () banked
  9863  01768E  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
  9864  017690  0100               	movlb	0	; () banked
  9865  017692  5169               	movf	(??__i2c_read+1)& (0+255),w,b
  9866  017694  0100               	movlb	0	; () banked
  9867  017696  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
  9868  017698  0100               	movlb	0	; () banked
  9869  01769A  5170               	movf	__i2c_read@cntr& (0+255),w,b
  9870  01769C  0100               	movlb	0	; () banked
  9871  01769E  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
  9872  0176A0  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
  9873  0176A2  0100               	movlb	0	; () banked
  9874  0176A4  516A               	movf	(??__i2c_read+2)& (0+255),w,b
  9875  0176A6  0100               	movlb	0	; () banked
  9876  0176A8  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
  9877  0176AA  0100               	movlb	0	; () banked
  9878  0176AC  516D               	movf	(??__i2c_read+5)& (0+255),w,b
  9879  0176AE  0A80               	xorlw	128
  9880  0176B0  0100               	movlb	0	; () banked
  9881  0176B2  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
  9882  0176B4  0100               	movlb	0	; () banked
  9883  0176B6  516B               	movf	(??__i2c_read+3)& (0+255),w,b
  9884  0176B8  0A80               	xorlw	128
  9885  0176BA  0100               	movlb	0	; () banked
  9886  0176BC  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
  9887  0176BE  A0D8               	btfss	status,0,c
  9888  0176C0  D7C6               	goto	l18534
  9889                           
  9890                           ; BSR set to: 0
  9891                           ;i2c.c: 189: }
  9892                           ;i2c.c: 190: data[cntr] = _i2c_get();
  9893                           
  9894                           ; BSR set to: 0
  9895  0176C2  0100               	movlb	0	; () banked
  9896  0176C4  5170               	movf	__i2c_read@cntr& (0+255),w,b
  9897  0176C6  0D01               	mullw	1
  9898  0176C8  50F3               	movf	prodl,w,c
  9899  0176CA  0100               	movlb	0	; () banked
  9900  0176CC  2565               	addwf	__i2c_read@data& (0+255),w,b
  9901  0176CE  6ED9               	movwf	fsr2l,c
  9902  0176D0  50F4               	movf	prodh,w,c
  9903  0176D2  0100               	movlb	0	; () banked
  9904  0176D4  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  9905  0176D6  6EDA               	movwf	fsr2h,c
  9906  0176D8  ECC7  F0D5         	call	__i2c_get	;wreg free
  9907  0176DC  6EDF               	movwf	indf2,c
  9908                           
  9909                           ;i2c.c: 191: _i2c_not_acknowledge();
  9910  0176DE  ECC2  F0D5         	call	__i2c_not_acknowledge	;wreg free
  9911                           
  9912                           ;i2c.c: 193: _i2c_stop();
  9913  0176E2  ECDB  F0D5         	call	__i2c_stop	;wreg free
  9914  0176E6  0012               	return		;funcret
  9915  0176E8                     __end_of__i2c_read:
  9916                           	opt stack 0
  9917                           tblptru	equ	0xFF8
  9918                           tblptrh	equ	0xFF7
  9919                           tblptrl	equ	0xFF6
  9920                           tablat	equ	0xFF5
  9921                           prodh	equ	0xFF4
  9922                           prodl	equ	0xFF3
  9923                           intcon3	equ	0xFF0
  9924                           postinc0	equ	0xFEE
  9925                           wreg	equ	0xFE8
  9926                           postdec1	equ	0xFE5
  9927                           plusw1	equ	0xFE3
  9928                           fsr1h	equ	0xFE2
  9929                           fsr1l	equ	0xFE1
  9930                           indf2	equ	0xFDF
  9931                           postinc2	equ	0xFDE
  9932                           postdec2	equ	0xFDD
  9933                           plusw2	equ	0xFDB
  9934                           fsr2h	equ	0xFDA
  9935                           fsr2l	equ	0xFD9
  9936                           status	equ	0xFD8
  9937                           
  9938 ;; *************** function __i2c_eeprom_load_default_calibration *****************
  9939 ;; Defined at:
  9940 ;;		line 645 in file "i2c.c"
  9941 ;; Parameters:    Size  Location     Type
  9942 ;;  buffer          2    0[BANK0 ] PTR struct .
  9943 ;;		 -> calibrationParameters(84), 
  9944 ;;  index           1    2[BANK0 ] enum E8142
  9945 ;; Auto vars:     Size  Location     Type
  9946 ;;		None
  9947 ;; Return value:  Size  Location     Type
  9948 ;;                  1    wreg      void 
  9949 ;; Registers used:
  9950 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9951 ;; Tracked objects:
  9952 ;;		On entry : 0/0
  9953 ;;		On exit  : 0/0
  9954 ;;		Unchanged: 0/0
  9955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9956 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9959 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9960 ;;Total ram usage:        3 bytes
  9961 ;; Hardware stack levels used:    1
  9962 ;; Hardware stack levels required when called:   10
  9963 ;; This function calls:
  9964 ;;		Nothing
  9965 ;; This function is called by:
  9966 ;;		_i2c_eeprom_read_calibration
  9967 ;; This function uses a non-reentrant model
  9968 ;;
  9969                           
  9970                           	psect	text36
  9971  011440                     __ptext36:
  9972                           	opt stack 0
  9973  011440                     __i2c_eeprom_load_default_calibration:
  9974                           	opt stack 18
  9975                           
  9976                           ;i2c.c: 647: switch(index)
  9977                           
  9978                           ;incstack = 0
  9979  011440  D1F1               	goto	l19424
  9980  011442                     l19324:
  9981                           
  9982                           ;i2c.c: 650: (*buffer).NeutralOffset = 0;
  9983  011442  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  9984  011446  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  9985  01144A  0E00               	movlw	0
  9986  01144C  6EDE               	movwf	postinc2,c
  9987  01144E  0E00               	movlw	0
  9988  011450  6EDD               	movwf	postdec2,c
  9989                           
  9990                           ;i2c.c: 651: (*buffer).NeutralMultiplier = 11;
  9991  011452  0100               	movlb	0	; () banked
  9992  011454  EE20 F002          	lfsr	2,2
  9993  011458  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
  9994  01145A  26D9               	addwf	fsr2l,f,c
  9995  01145C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
  9996  01145E  22DA               	addwfc	fsr2h,f,c
  9997  011460  0E0B               	movlw	11
  9998  011462  6EDE               	movwf	postinc2,c
  9999  011464  0E00               	movlw	0
 10000  011466  6EDD               	movwf	postdec2,c
 10001                           
 10002                           ; BSR set to: 0
 10003                           ;i2c.c: 652: (*buffer).NeutralShift = 4;
 10004  011468  0100               	movlb	0	; () banked
 10005  01146A  EE20 F004          	lfsr	2,4
 10006  01146E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10007  011470  26D9               	addwf	fsr2l,f,c
 10008  011472  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10009  011474  22DA               	addwfc	fsr2h,f,c
 10010  011476  0E04               	movlw	4
 10011  011478  6EDF               	movwf	indf2,c
 10012                           
 10013                           ; BSR set to: 0
 10014                           ;i2c.c: 653: (*buffer).Offset = 0;
 10015  01147A  0100               	movlb	0	; () banked
 10016  01147C  EE20 F005          	lfsr	2,5
 10017  011480  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10018  011482  26D9               	addwf	fsr2l,f,c
 10019  011484  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10020  011486  22DA               	addwfc	fsr2h,f,c
 10021  011488  0E00               	movlw	0
 10022  01148A  6EDE               	movwf	postinc2,c
 10023  01148C  0E00               	movlw	0
 10024  01148E  6EDD               	movwf	postdec2,c
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;i2c.c: 654: (*buffer).Multiplier = 11;
 10028  011490  0100               	movlb	0	; () banked
 10029  011492  EE20 F007          	lfsr	2,7
 10030  011496  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10031  011498  26D9               	addwf	fsr2l,f,c
 10032  01149A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10033  01149C  22DA               	addwfc	fsr2h,f,c
 10034  01149E  0E0B               	movlw	11
 10035  0114A0  6EDE               	movwf	postinc2,c
 10036  0114A2  0E00               	movlw	0
 10037  0114A4  6EDD               	movwf	postdec2,c
 10038                           
 10039                           ; BSR set to: 0
 10040                           ;i2c.c: 655: (*buffer).Shift = 4;
 10041  0114A6  0100               	movlb	0	; () banked
 10042  0114A8  EE20 F009          	lfsr	2,9
 10043  0114AC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10044  0114AE  26D9               	addwf	fsr2l,f,c
 10045  0114B0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10046  0114B2  22DA               	addwfc	fsr2h,f,c
 10047  0114B4  0E04               	movlw	4
 10048  0114B6  6EDF               	movwf	indf2,c
 10049                           
 10050                           ; BSR set to: 0
 10051                           ;i2c.c: 656: (*buffer).AutoCalibration = 0;
 10052  0114B8  0100               	movlb	0	; () banked
 10053  0114BA  EE20 F00A          	lfsr	2,10
 10054  0114BE  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10055  0114C0  26D9               	addwf	fsr2l,f,c
 10056  0114C2  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10057  0114C4  22DA               	addwfc	fsr2h,f,c
 10058  0114C6  0E00               	movlw	0
 10059  0114C8  6EDE               	movwf	postinc2,c
 10060  0114CA  0E00               	movlw	0
 10061  0114CC  6EDD               	movwf	postdec2,c
 10062                           
 10063                           ;i2c.c: 657: break;
 10064  0114CE  0012               	return	
 10065  0114D0                     l19338:
 10066                           
 10067                           ; BSR set to: 0
 10068                           ;i2c.c: 659: (*buffer).NeutralOffset = 0;
 10069  0114D0  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10070  0114D4  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10071  0114D8  0E00               	movlw	0
 10072  0114DA  6EDE               	movwf	postinc2,c
 10073  0114DC  0E00               	movlw	0
 10074  0114DE  6EDD               	movwf	postdec2,c
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;i2c.c: 660: (*buffer).NeutralMultiplier = 17;
 10078  0114E0  0100               	movlb	0	; () banked
 10079  0114E2  EE20 F002          	lfsr	2,2
 10080  0114E6  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10081  0114E8  26D9               	addwf	fsr2l,f,c
 10082  0114EA  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10083  0114EC  22DA               	addwfc	fsr2h,f,c
 10084  0114EE  0E11               	movlw	17
 10085  0114F0  6EDE               	movwf	postinc2,c
 10086  0114F2  0E00               	movlw	0
 10087  0114F4  6EDD               	movwf	postdec2,c
 10088                           
 10089                           ; BSR set to: 0
 10090                           ;i2c.c: 661: (*buffer).NeutralShift = 5;
 10091  0114F6  0100               	movlb	0	; () banked
 10092  0114F8  EE20 F004          	lfsr	2,4
 10093  0114FC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10094  0114FE  26D9               	addwf	fsr2l,f,c
 10095  011500  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10096  011502  22DA               	addwfc	fsr2h,f,c
 10097  011504  0E05               	movlw	5
 10098  011506  6EDF               	movwf	indf2,c
 10099                           
 10100                           ; BSR set to: 0
 10101                           ;i2c.c: 662: (*buffer).Offset = 0;
 10102  011508  0100               	movlb	0	; () banked
 10103  01150A  EE20 F005          	lfsr	2,5
 10104  01150E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10105  011510  26D9               	addwf	fsr2l,f,c
 10106  011512  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10107  011514  22DA               	addwfc	fsr2h,f,c
 10108  011516  0E00               	movlw	0
 10109  011518  6EDE               	movwf	postinc2,c
 10110  01151A  0E00               	movlw	0
 10111  01151C  6EDD               	movwf	postdec2,c
 10112                           
 10113                           ; BSR set to: 0
 10114                           ;i2c.c: 663: (*buffer).Multiplier = 17;
 10115  01151E  0100               	movlb	0	; () banked
 10116  011520  EE20 F007          	lfsr	2,7
 10117  011524  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10118  011526  26D9               	addwf	fsr2l,f,c
 10119  011528  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10120  01152A  22DA               	addwfc	fsr2h,f,c
 10121  01152C  0E11               	movlw	17
 10122  01152E  6EDE               	movwf	postinc2,c
 10123  011530  0E00               	movlw	0
 10124  011532  6EDD               	movwf	postdec2,c
 10125                           
 10126                           ; BSR set to: 0
 10127                           ;i2c.c: 664: (*buffer).Shift = 5;
 10128  011534  0100               	movlb	0	; () banked
 10129  011536  EE20 F009          	lfsr	2,9
 10130  01153A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10131  01153C  26D9               	addwf	fsr2l,f,c
 10132  01153E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10133  011540  22DA               	addwfc	fsr2h,f,c
 10134  011542  0E05               	movlw	5
 10135  011544  6EDF               	movwf	indf2,c
 10136                           
 10137                           ; BSR set to: 0
 10138                           ;i2c.c: 665: (*buffer).AutoCalibration = 0;
 10139  011546  0100               	movlb	0	; () banked
 10140  011548  EE20 F00A          	lfsr	2,10
 10141  01154C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10142  01154E  26D9               	addwf	fsr2l,f,c
 10143  011550  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10144  011552  22DA               	addwfc	fsr2h,f,c
 10145  011554  0E00               	movlw	0
 10146  011556  6EDE               	movwf	postinc2,c
 10147  011558  0E00               	movlw	0
 10148  01155A  6EDD               	movwf	postdec2,c
 10149                           
 10150                           ;i2c.c: 666: break;
 10151  01155C  0012               	return	
 10152  01155E                     l19352:
 10153                           
 10154                           ; BSR set to: 0
 10155                           ;i2c.c: 668: (*buffer).NeutralOffset = 0;
 10156  01155E  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10157  011562  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10158  011566  0E00               	movlw	0
 10159  011568  6EDE               	movwf	postinc2,c
 10160  01156A  0E00               	movlw	0
 10161  01156C  6EDD               	movwf	postdec2,c
 10162                           
 10163                           ; BSR set to: 0
 10164                           ;i2c.c: 669: (*buffer).NeutralMultiplier = 5851;
 10165  01156E  0100               	movlb	0	; () banked
 10166  011570  EE20 F002          	lfsr	2,2
 10167  011574  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10168  011576  26D9               	addwf	fsr2l,f,c
 10169  011578  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10170  01157A  22DA               	addwfc	fsr2h,f,c
 10171  01157C  0EDB               	movlw	219
 10172  01157E  6EDE               	movwf	postinc2,c
 10173  011580  0E16               	movlw	22
 10174  011582  6EDD               	movwf	postdec2,c
 10175                           
 10176                           ; BSR set to: 0
 10177                           ;i2c.c: 670: (*buffer).NeutralShift = 15;
 10178  011584  0100               	movlb	0	; () banked
 10179  011586  EE20 F004          	lfsr	2,4
 10180  01158A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10181  01158C  26D9               	addwf	fsr2l,f,c
 10182  01158E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10183  011590  22DA               	addwfc	fsr2h,f,c
 10184  011592  0E0F               	movlw	15
 10185  011594  6EDF               	movwf	indf2,c
 10186                           
 10187                           ; BSR set to: 0
 10188                           ;i2c.c: 671: (*buffer).Offset = 0;
 10189  011596  0100               	movlb	0	; () banked
 10190  011598  EE20 F005          	lfsr	2,5
 10191  01159C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10192  01159E  26D9               	addwf	fsr2l,f,c
 10193  0115A0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10194  0115A2  22DA               	addwfc	fsr2h,f,c
 10195  0115A4  0E00               	movlw	0
 10196  0115A6  6EDE               	movwf	postinc2,c
 10197  0115A8  0E00               	movlw	0
 10198  0115AA  6EDD               	movwf	postdec2,c
 10199                           
 10200                           ; BSR set to: 0
 10201                           ;i2c.c: 672: (*buffer).Multiplier = 5851;
 10202  0115AC  0100               	movlb	0	; () banked
 10203  0115AE  EE20 F007          	lfsr	2,7
 10204  0115B2  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10205  0115B4  26D9               	addwf	fsr2l,f,c
 10206  0115B6  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10207  0115B8  22DA               	addwfc	fsr2h,f,c
 10208  0115BA  0EDB               	movlw	219
 10209  0115BC  6EDE               	movwf	postinc2,c
 10210  0115BE  0E16               	movlw	22
 10211  0115C0  6EDD               	movwf	postdec2,c
 10212                           
 10213                           ; BSR set to: 0
 10214                           ;i2c.c: 673: (*buffer).Shift = 15;
 10215  0115C2  0100               	movlb	0	; () banked
 10216  0115C4  EE20 F009          	lfsr	2,9
 10217  0115C8  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10218  0115CA  26D9               	addwf	fsr2l,f,c
 10219  0115CC  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10220  0115CE  22DA               	addwfc	fsr2h,f,c
 10221  0115D0  0E0F               	movlw	15
 10222  0115D2  6EDF               	movwf	indf2,c
 10223                           
 10224                           ; BSR set to: 0
 10225                           ;i2c.c: 674: (*buffer).AutoCalibration = 0;
 10226  0115D4  0100               	movlb	0	; () banked
 10227  0115D6  EE20 F00A          	lfsr	2,10
 10228  0115DA  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10229  0115DC  26D9               	addwf	fsr2l,f,c
 10230  0115DE  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10231  0115E0  22DA               	addwfc	fsr2h,f,c
 10232  0115E2  0E00               	movlw	0
 10233  0115E4  6EDE               	movwf	postinc2,c
 10234  0115E6  0E00               	movlw	0
 10235  0115E8  6EDD               	movwf	postdec2,c
 10236                           
 10237                           ;i2c.c: 675: break;
 10238  0115EA  0012               	return	
 10239  0115EC                     l19366:
 10240                           
 10241                           ; BSR set to: 0
 10242                           ;i2c.c: 677: (*buffer).NeutralOffset = 0;
 10243  0115EC  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10244  0115F0  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10245  0115F4  0E00               	movlw	0
 10246  0115F6  6EDE               	movwf	postinc2,c
 10247  0115F8  0E00               	movlw	0
 10248  0115FA  6EDD               	movwf	postdec2,c
 10249                           
 10250                           ; BSR set to: 0
 10251                           ;i2c.c: 678: (*buffer).NeutralMultiplier = 5851;
 10252  0115FC  0100               	movlb	0	; () banked
 10253  0115FE  EE20 F002          	lfsr	2,2
 10254  011602  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10255  011604  26D9               	addwf	fsr2l,f,c
 10256  011606  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10257  011608  22DA               	addwfc	fsr2h,f,c
 10258  01160A  0EDB               	movlw	219
 10259  01160C  6EDE               	movwf	postinc2,c
 10260  01160E  0E16               	movlw	22
 10261  011610  6EDD               	movwf	postdec2,c
 10262                           
 10263                           ; BSR set to: 0
 10264                           ;i2c.c: 679: (*buffer).NeutralShift = 15;
 10265  011612  0100               	movlb	0	; () banked
 10266  011614  EE20 F004          	lfsr	2,4
 10267  011618  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10268  01161A  26D9               	addwf	fsr2l,f,c
 10269  01161C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10270  01161E  22DA               	addwfc	fsr2h,f,c
 10271  011620  0E0F               	movlw	15
 10272  011622  6EDF               	movwf	indf2,c
 10273                           
 10274                           ; BSR set to: 0
 10275                           ;i2c.c: 680: (*buffer).Offset = 0;
 10276  011624  0100               	movlb	0	; () banked
 10277  011626  EE20 F005          	lfsr	2,5
 10278  01162A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10279  01162C  26D9               	addwf	fsr2l,f,c
 10280  01162E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10281  011630  22DA               	addwfc	fsr2h,f,c
 10282  011632  0E00               	movlw	0
 10283  011634  6EDE               	movwf	postinc2,c
 10284  011636  0E00               	movlw	0
 10285  011638  6EDD               	movwf	postdec2,c
 10286                           
 10287                           ; BSR set to: 0
 10288                           ;i2c.c: 681: (*buffer).Multiplier = 5851;
 10289  01163A  0100               	movlb	0	; () banked
 10290  01163C  EE20 F007          	lfsr	2,7
 10291  011640  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10292  011642  26D9               	addwf	fsr2l,f,c
 10293  011644  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10294  011646  22DA               	addwfc	fsr2h,f,c
 10295  011648  0EDB               	movlw	219
 10296  01164A  6EDE               	movwf	postinc2,c
 10297  01164C  0E16               	movlw	22
 10298  01164E  6EDD               	movwf	postdec2,c
 10299                           
 10300                           ; BSR set to: 0
 10301                           ;i2c.c: 682: (*buffer).Shift = 15;
 10302  011650  0100               	movlb	0	; () banked
 10303  011652  EE20 F009          	lfsr	2,9
 10304  011656  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10305  011658  26D9               	addwf	fsr2l,f,c
 10306  01165A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10307  01165C  22DA               	addwfc	fsr2h,f,c
 10308  01165E  0E0F               	movlw	15
 10309  011660  6EDF               	movwf	indf2,c
 10310                           
 10311                           ; BSR set to: 0
 10312                           ;i2c.c: 683: (*buffer).AutoCalibration = 0;
 10313  011662  0100               	movlb	0	; () banked
 10314  011664  EE20 F00A          	lfsr	2,10
 10315  011668  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10316  01166A  26D9               	addwf	fsr2l,f,c
 10317  01166C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10318  01166E  22DA               	addwfc	fsr2h,f,c
 10319  011670  0E00               	movlw	0
 10320  011672  6EDE               	movwf	postinc2,c
 10321  011674  0E00               	movlw	0
 10322  011676  6EDD               	movwf	postdec2,c
 10323                           
 10324                           ;i2c.c: 684: break;
 10325  011678  0012               	return	
 10326  01167A                     l19380:
 10327                           
 10328                           ; BSR set to: 0
 10329                           ;i2c.c: 686: (*buffer).NeutralOffset = -13769;
 10330  01167A  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10331  01167E  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10332  011682  0E37               	movlw	55
 10333  011684  6EDE               	movwf	postinc2,c
 10334  011686  0ECA               	movlw	202
 10335  011688  6EDD               	movwf	postdec2,c
 10336                           
 10337                           ; BSR set to: 0
 10338                           ;i2c.c: 687: (*buffer).NeutralMultiplier = -11479;
 10339  01168A  0100               	movlb	0	; () banked
 10340  01168C  EE20 F002          	lfsr	2,2
 10341  011690  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10342  011692  26D9               	addwf	fsr2l,f,c
 10343  011694  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10344  011696  22DA               	addwfc	fsr2h,f,c
 10345  011698  0E29               	movlw	41
 10346  01169A  6EDE               	movwf	postinc2,c
 10347  01169C  0ED3               	movlw	211
 10348  01169E  6EDD               	movwf	postdec2,c
 10349                           
 10350                           ; BSR set to: 0
 10351                           ;i2c.c: 688: (*buffer).NeutralShift = 13;
 10352  0116A0  0100               	movlb	0	; () banked
 10353  0116A2  EE20 F004          	lfsr	2,4
 10354  0116A6  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10355  0116A8  26D9               	addwf	fsr2l,f,c
 10356  0116AA  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10357  0116AC  22DA               	addwfc	fsr2h,f,c
 10358  0116AE  0E0D               	movlw	13
 10359  0116B0  6EDF               	movwf	indf2,c
 10360                           
 10361                           ; BSR set to: 0
 10362                           ;i2c.c: 689: (*buffer).Offset = -13769;
 10363  0116B2  0100               	movlb	0	; () banked
 10364  0116B4  EE20 F005          	lfsr	2,5
 10365  0116B8  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10366  0116BA  26D9               	addwf	fsr2l,f,c
 10367  0116BC  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10368  0116BE  22DA               	addwfc	fsr2h,f,c
 10369  0116C0  0E37               	movlw	55
 10370  0116C2  6EDE               	movwf	postinc2,c
 10371  0116C4  0ECA               	movlw	202
 10372  0116C6  6EDD               	movwf	postdec2,c
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;i2c.c: 690: (*buffer).Multiplier = -11479;
 10376  0116C8  0100               	movlb	0	; () banked
 10377  0116CA  EE20 F007          	lfsr	2,7
 10378  0116CE  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10379  0116D0  26D9               	addwf	fsr2l,f,c
 10380  0116D2  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10381  0116D4  22DA               	addwfc	fsr2h,f,c
 10382  0116D6  0E29               	movlw	41
 10383  0116D8  6EDE               	movwf	postinc2,c
 10384  0116DA  0ED3               	movlw	211
 10385  0116DC  6EDD               	movwf	postdec2,c
 10386                           
 10387                           ; BSR set to: 0
 10388                           ;i2c.c: 691: (*buffer).Shift = 13;
 10389  0116DE  0100               	movlb	0	; () banked
 10390  0116E0  EE20 F009          	lfsr	2,9
 10391  0116E4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10392  0116E6  26D9               	addwf	fsr2l,f,c
 10393  0116E8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10394  0116EA  22DA               	addwfc	fsr2h,f,c
 10395  0116EC  0E0D               	movlw	13
 10396  0116EE  6EDF               	movwf	indf2,c
 10397                           
 10398                           ; BSR set to: 0
 10399                           ;i2c.c: 692: (*buffer).AutoCalibration = 0;
 10400  0116F0  0100               	movlb	0	; () banked
 10401  0116F2  EE20 F00A          	lfsr	2,10
 10402  0116F6  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10403  0116F8  26D9               	addwf	fsr2l,f,c
 10404  0116FA  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10405  0116FC  22DA               	addwfc	fsr2h,f,c
 10406  0116FE  0E00               	movlw	0
 10407  011700  6EDE               	movwf	postinc2,c
 10408  011702  0E00               	movlw	0
 10409  011704  6EDD               	movwf	postdec2,c
 10410                           
 10411                           ;i2c.c: 693: break;
 10412  011706  0012               	return	
 10413  011708                     l19394:
 10414                           
 10415                           ; BSR set to: 0
 10416                           ;i2c.c: 695: (*buffer).NeutralOffset = -13769;
 10417  011708  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10418  01170C  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10419  011710  0E37               	movlw	55
 10420  011712  6EDE               	movwf	postinc2,c
 10421  011714  0ECA               	movlw	202
 10422  011716  6EDD               	movwf	postdec2,c
 10423                           
 10424                           ; BSR set to: 0
 10425                           ;i2c.c: 696: (*buffer).NeutralMultiplier = -11479;
 10426  011718  0100               	movlb	0	; () banked
 10427  01171A  EE20 F002          	lfsr	2,2
 10428  01171E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10429  011720  26D9               	addwf	fsr2l,f,c
 10430  011722  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10431  011724  22DA               	addwfc	fsr2h,f,c
 10432  011726  0E29               	movlw	41
 10433  011728  6EDE               	movwf	postinc2,c
 10434  01172A  0ED3               	movlw	211
 10435  01172C  6EDD               	movwf	postdec2,c
 10436                           
 10437                           ; BSR set to: 0
 10438                           ;i2c.c: 697: (*buffer).NeutralShift = 13;
 10439  01172E  0100               	movlb	0	; () banked
 10440  011730  EE20 F004          	lfsr	2,4
 10441  011734  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10442  011736  26D9               	addwf	fsr2l,f,c
 10443  011738  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10444  01173A  22DA               	addwfc	fsr2h,f,c
 10445  01173C  0E0D               	movlw	13
 10446  01173E  6EDF               	movwf	indf2,c
 10447                           
 10448                           ; BSR set to: 0
 10449                           ;i2c.c: 698: (*buffer).Offset = -13769;
 10450  011740  0100               	movlb	0	; () banked
 10451  011742  EE20 F005          	lfsr	2,5
 10452  011746  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10453  011748  26D9               	addwf	fsr2l,f,c
 10454  01174A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10455  01174C  22DA               	addwfc	fsr2h,f,c
 10456  01174E  0E37               	movlw	55
 10457  011750  6EDE               	movwf	postinc2,c
 10458  011752  0ECA               	movlw	202
 10459  011754  6EDD               	movwf	postdec2,c
 10460                           
 10461                           ; BSR set to: 0
 10462                           ;i2c.c: 699: (*buffer).Multiplier = -11479;
 10463  011756  0100               	movlb	0	; () banked
 10464  011758  EE20 F007          	lfsr	2,7
 10465  01175C  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10466  01175E  26D9               	addwf	fsr2l,f,c
 10467  011760  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10468  011762  22DA               	addwfc	fsr2h,f,c
 10469  011764  0E29               	movlw	41
 10470  011766  6EDE               	movwf	postinc2,c
 10471  011768  0ED3               	movlw	211
 10472  01176A  6EDD               	movwf	postdec2,c
 10473                           
 10474                           ; BSR set to: 0
 10475                           ;i2c.c: 700: (*buffer).Shift = 13;
 10476  01176C  0100               	movlb	0	; () banked
 10477  01176E  EE20 F009          	lfsr	2,9
 10478  011772  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10479  011774  26D9               	addwf	fsr2l,f,c
 10480  011776  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10481  011778  22DA               	addwfc	fsr2h,f,c
 10482  01177A  0E0D               	movlw	13
 10483  01177C  6EDF               	movwf	indf2,c
 10484                           
 10485                           ; BSR set to: 0
 10486                           ;i2c.c: 701: (*buffer).AutoCalibration = 0;
 10487  01177E  0100               	movlb	0	; () banked
 10488  011780  EE20 F00A          	lfsr	2,10
 10489  011784  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10490  011786  26D9               	addwf	fsr2l,f,c
 10491  011788  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10492  01178A  22DA               	addwfc	fsr2h,f,c
 10493  01178C  0E00               	movlw	0
 10494  01178E  6EDE               	movwf	postinc2,c
 10495  011790  0E00               	movlw	0
 10496  011792  6EDD               	movwf	postdec2,c
 10497                           
 10498                           ;i2c.c: 702: break;
 10499  011794  0012               	return	
 10500  011796                     l19408:
 10501                           
 10502                           ; BSR set to: 0
 10503                           ;i2c.c: 704: (*buffer).NeutralOffset = -13769;
 10504  011796  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10505  01179A  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10506  01179E  0E37               	movlw	55
 10507  0117A0  6EDE               	movwf	postinc2,c
 10508  0117A2  0ECA               	movlw	202
 10509  0117A4  6EDD               	movwf	postdec2,c
 10510                           
 10511                           ; BSR set to: 0
 10512                           ;i2c.c: 705: (*buffer).NeutralMultiplier = -11479;
 10513  0117A6  0100               	movlb	0	; () banked
 10514  0117A8  EE20 F002          	lfsr	2,2
 10515  0117AC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10516  0117AE  26D9               	addwf	fsr2l,f,c
 10517  0117B0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10518  0117B2  22DA               	addwfc	fsr2h,f,c
 10519  0117B4  0E29               	movlw	41
 10520  0117B6  6EDE               	movwf	postinc2,c
 10521  0117B8  0ED3               	movlw	211
 10522  0117BA  6EDD               	movwf	postdec2,c
 10523                           
 10524                           ; BSR set to: 0
 10525                           ;i2c.c: 706: (*buffer).NeutralShift = 13;
 10526  0117BC  0100               	movlb	0	; () banked
 10527  0117BE  EE20 F004          	lfsr	2,4
 10528  0117C2  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10529  0117C4  26D9               	addwf	fsr2l,f,c
 10530  0117C6  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10531  0117C8  22DA               	addwfc	fsr2h,f,c
 10532  0117CA  0E0D               	movlw	13
 10533  0117CC  6EDF               	movwf	indf2,c
 10534                           
 10535                           ; BSR set to: 0
 10536                           ;i2c.c: 707: (*buffer).Offset = -13769;
 10537  0117CE  0100               	movlb	0	; () banked
 10538  0117D0  EE20 F005          	lfsr	2,5
 10539  0117D4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10540  0117D6  26D9               	addwf	fsr2l,f,c
 10541  0117D8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10542  0117DA  22DA               	addwfc	fsr2h,f,c
 10543  0117DC  0E37               	movlw	55
 10544  0117DE  6EDE               	movwf	postinc2,c
 10545  0117E0  0ECA               	movlw	202
 10546  0117E2  6EDD               	movwf	postdec2,c
 10547                           
 10548                           ; BSR set to: 0
 10549                           ;i2c.c: 708: (*buffer).Multiplier = -11479;
 10550  0117E4  0100               	movlb	0	; () banked
 10551  0117E6  EE20 F007          	lfsr	2,7
 10552  0117EA  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10553  0117EC  26D9               	addwf	fsr2l,f,c
 10554  0117EE  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10555  0117F0  22DA               	addwfc	fsr2h,f,c
 10556  0117F2  0E29               	movlw	41
 10557  0117F4  6EDE               	movwf	postinc2,c
 10558  0117F6  0ED3               	movlw	211
 10559  0117F8  6EDD               	movwf	postdec2,c
 10560                           
 10561                           ; BSR set to: 0
 10562                           ;i2c.c: 709: (*buffer).Shift = 13;
 10563  0117FA  0100               	movlb	0	; () banked
 10564  0117FC  EE20 F009          	lfsr	2,9
 10565  011800  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10566  011802  26D9               	addwf	fsr2l,f,c
 10567  011804  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10568  011806  22DA               	addwfc	fsr2h,f,c
 10569  011808  0E0D               	movlw	13
 10570  01180A  6EDF               	movwf	indf2,c
 10571                           
 10572                           ; BSR set to: 0
 10573                           ;i2c.c: 710: (*buffer).AutoCalibration = 0;
 10574  01180C  0100               	movlb	0	; () banked
 10575  01180E  EE20 F00A          	lfsr	2,10
 10576  011812  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10577  011814  26D9               	addwf	fsr2l,f,c
 10578  011816  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10579  011818  22DA               	addwfc	fsr2h,f,c
 10580  01181A  0E00               	movlw	0
 10581  01181C  6EDE               	movwf	postinc2,c
 10582  01181E  0E00               	movlw	0
 10583  011820  6EDD               	movwf	postdec2,c
 10584                           
 10585                           ; BSR set to: 0
 10586                           ;i2c.c: 712: }
 10587                           
 10588                           ;i2c.c: 711: break;
 10589  011822  0012               	return	
 10590  011824                     l19424:
 10591  011824  0100               	movlb	0	; () banked
 10592  011826  5162               	movf	__i2c_eeprom_load_default_calibration@index& (0+255),w,b
 10593                           
 10594                           ; Switch size 1, requested type "space"
 10595                           ; Number of cases is 7, Range of values is 0 to 6
 10596                           ; switch strategies available:
 10597                           ; Name         Instructions Cycles
 10598                           ; simple_byte           22    12 (average)
 10599                           ;	Chosen strategy is simple_byte
 10600  011828  0A00               	xorlw	0	; case 0
 10601  01182A  B4D8               	btfsc	status,2,c
 10602  01182C  D60A               	goto	l19324
 10603  01182E  0A01               	xorlw	1	; case 1
 10604  011830  B4D8               	btfsc	status,2,c
 10605  011832  D64E               	goto	l19338
 10606  011834  0A03               	xorlw	3	; case 2
 10607  011836  B4D8               	btfsc	status,2,c
 10608  011838  D692               	goto	l19352
 10609  01183A  0A01               	xorlw	1	; case 3
 10610  01183C  B4D8               	btfsc	status,2,c
 10611  01183E  D6D6               	goto	l19366
 10612  011840  0A07               	xorlw	7	; case 4
 10613  011842  B4D8               	btfsc	status,2,c
 10614  011844  D71A               	goto	l19380
 10615  011846  0A01               	xorlw	1	; case 5
 10616  011848  B4D8               	btfsc	status,2,c
 10617  01184A  D75E               	goto	l19394
 10618  01184C  0A03               	xorlw	3	; case 6
 10619  01184E  A4D8               	btfss	status,2,c
 10620  011850  0012               	return	
 10621  011852  D7A1               	goto	l19408
 10622  011854                     __end_of__i2c_eeprom_load_default_calibration:
 10623                           	opt stack 0
 10624                           tblptru	equ	0xFF8
 10625                           tblptrh	equ	0xFF7
 10626                           tblptrl	equ	0xFF6
 10627                           tablat	equ	0xFF5
 10628                           prodh	equ	0xFF4
 10629                           prodl	equ	0xFF3
 10630                           intcon3	equ	0xFF0
 10631                           postinc0	equ	0xFEE
 10632                           wreg	equ	0xFE8
 10633                           postdec1	equ	0xFE5
 10634                           plusw1	equ	0xFE3
 10635                           fsr1h	equ	0xFE2
 10636                           fsr1l	equ	0xFE1
 10637                           indf2	equ	0xFDF
 10638                           postinc2	equ	0xFDE
 10639                           postdec2	equ	0xFDD
 10640                           plusw2	equ	0xFDB
 10641                           fsr2h	equ	0xFDA
 10642                           fsr2l	equ	0xFD9
 10643                           status	equ	0xFD8
 10644                           
 10645 ;; *************** function _flash_init *****************
 10646 ;; Defined at:
 10647 ;;		line 448 in file "flash.c"
 10648 ;; Parameters:    Size  Location     Type
 10649 ;;		None
 10650 ;; Auto vars:     Size  Location     Type
 10651 ;;		None
 10652 ;; Return value:  Size  Location     Type
 10653 ;;                  1    wreg      void 
 10654 ;; Registers used:
 10655 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10656 ;; Tracked objects:
 10657 ;;		On entry : 0/0
 10658 ;;		On exit  : 0/0
 10659 ;;		Unchanged: 0/0
 10660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10665 ;;Total ram usage:        0 bytes
 10666 ;; Hardware stack levels used:    1
 10667 ;; Hardware stack levels required when called:   14
 10668 ;; This function calls:
 10669 ;;		__flash_set_page_size
 10670 ;; This function is called by:
 10671 ;;		_system_init
 10672 ;; This function uses a non-reentrant model
 10673 ;;
 10674                           
 10675                           	psect	text37
 10676  019CB8                     __ptext37:
 10677                           	opt stack 0
 10678  019CB8                     _flash_init:
 10679                           	opt stack 15
 10680                           
 10681                           ;flash.c: 451: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 10682                           
 10683                           ; BSR set to: 0
 10684                           ;incstack = 0
 10685  019CB8  0E55               	movlw	85
 10686  019CBA  6EA7               	movwf	4007,c	;volatile
 10687  019CBC  0EAA               	movlw	170
 10688  019CBE  6EA7               	movwf	4007,c	;volatile
 10689  019CC0  010E               	movlb	14	; () banked
 10690  019CC2  91BF               	bcf	191,0,b	;volatile
 10691                           
 10692                           ;flash.c: 452: RPINR21 = 23;
 10693  019CC4  0E17               	movlw	23
 10694  019CC6  010E               	movlb	14	; () banked
 10695  019CC8  6FFC               	movwf	252,b	;volatile
 10696                           
 10697                           ;flash.c: 453: RPOR21 = 10;
 10698  019CCA  0E0A               	movlw	10
 10699  019CCC  010E               	movlb	14	; () banked
 10700  019CCE  6FD5               	movwf	213,b	;volatile
 10701                           
 10702                           ;flash.c: 455: RPOR22 = 11;
 10703  019CD0  0E0B               	movlw	11
 10704  019CD2  010E               	movlb	14	; () banked
 10705  019CD4  6FD6               	movwf	214,b	;volatile
 10706                           
 10707                           ;flash.c: 456: RPINR22 = 22;
 10708  019CD6  0E16               	movlw	22
 10709  019CD8  010E               	movlb	14	; () banked
 10710  019CDA  6FFD               	movwf	253,b	;volatile
 10711                           
 10712                           ;flash.c: 457: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 10713  019CDC  0E55               	movlw	85
 10714  019CDE  6EA7               	movwf	4007,c	;volatile
 10715  019CE0  0EAA               	movlw	170
 10716  019CE2  6EA7               	movwf	4007,c	;volatile
 10717                           
 10718                           ; BSR set to: 14
 10719  019CE4  010E               	movlb	14	; () banked
 10720  019CE6  81BF               	bsf	191,0,b	;volatile
 10721                           
 10722                           ; BSR set to: 14
 10723                           ;flash.c: 460: SSP2STATbits.SMP = 1;
 10724  019CE8  8E73               	bsf	3955,7,c	;volatile
 10725                           
 10726                           ; BSR set to: 14
 10727                           ;flash.c: 461: SSP2STATbits.CKE = 1;
 10728  019CEA  8C73               	bsf	3955,6,c	;volatile
 10729                           
 10730                           ; BSR set to: 14
 10731                           ;flash.c: 462: SSP2CON1bits.CKP = 0;
 10732  019CEC  9872               	bcf	3954,4,c	;volatile
 10733                           
 10734                           ; BSR set to: 14
 10735                           ;flash.c: 463: SSP2CON1bits.SSPM =0b0000;
 10736  019CEE  9072               	bcf	3954,0,c	;volatile
 10737  019CF0  9272               	bcf	3954,1,c	;volatile
 10738  019CF2  9472               	bcf	3954,2,c	;volatile
 10739  019CF4  9672               	bcf	3954,3,c	;volatile
 10740                           
 10741                           ; BSR set to: 14
 10742                           ;flash.c: 464: SSP2CON1bits.SSPEN = 1;
 10743  019CF6  8A72               	bsf	3954,5,c	;volatile
 10744                           
 10745                           ;flash.c: 467: power_state = FLASH_POWER_STATE_NORMAL;
 10746  019CF8  0E00               	movlw	0
 10747  019CFA  0100               	movlb	0	; () banked
 10748  019CFC  6FDF               	movwf	_power_state& (0+255),b
 10749                           
 10750                           ; BSR set to: 0
 10751                           ;flash.c: 470: _flash_set_page_size(FLASH_PAGE_SIZE_512);
 10752  019CFE  0E00               	movlw	0
 10753  019D00  EC74  F0C3         	call	__flash_set_page_size
 10754  019D04  0012               	return		;funcret
 10755  019D06                     __end_of_flash_init:
 10756                           	opt stack 0
 10757                           tblptru	equ	0xFF8
 10758                           tblptrh	equ	0xFF7
 10759                           tblptrl	equ	0xFF6
 10760                           tablat	equ	0xFF5
 10761                           prodh	equ	0xFF4
 10762                           prodl	equ	0xFF3
 10763                           intcon3	equ	0xFF0
 10764                           postinc0	equ	0xFEE
 10765                           wreg	equ	0xFE8
 10766                           postdec1	equ	0xFE5
 10767                           plusw1	equ	0xFE3
 10768                           fsr1h	equ	0xFE2
 10769                           fsr1l	equ	0xFE1
 10770                           indf2	equ	0xFDF
 10771                           postinc2	equ	0xFDE
 10772                           postdec2	equ	0xFDD
 10773                           plusw2	equ	0xFDB
 10774                           fsr2h	equ	0xFDA
 10775                           fsr2l	equ	0xFD9
 10776                           status	equ	0xFD8
 10777                           
 10778 ;; *************** function __flash_set_page_size *****************
 10779 ;; Defined at:
 10780 ;;		line 260 in file "flash.c"
 10781 ;; Parameters:    Size  Location     Type
 10782 ;;  size            1    wreg     enum E8327
 10783 ;; Auto vars:     Size  Location     Type
 10784 ;;  size            1   23[BANK0 ] enum E8327
 10785 ;;  command         4   19[BANK0 ] unsigned char [4]
 10786 ;; Return value:  Size  Location     Type
 10787 ;;                  1    wreg      void 
 10788 ;; Registers used:
 10789 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10790 ;; Tracked objects:
 10791 ;;		On entry : 0/0
 10792 ;;		On exit  : 0/0
 10793 ;;		Unchanged: 0/0
 10794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10796 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10798 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10799 ;;Total ram usage:        5 bytes
 10800 ;; Hardware stack levels used:    1
 10801 ;; Hardware stack levels required when called:   13
 10802 ;; This function calls:
 10803 ;;		__flash_spi_tx
 10804 ;;		_flash_is_busy
 10805 ;;		_memcpy
 10806 ;; This function is called by:
 10807 ;;		_flash_init
 10808 ;; This function uses a non-reentrant model
 10809 ;;
 10810                           
 10811                           	psect	text38
 10812  0186E8                     __ptext38:
 10813                           	opt stack 0
 10814  0186E8                     __flash_set_page_size:
 10815                           	opt stack 15
 10816                           
 10817                           ;incstack = 0
 10818                           ;__flash_set_page_size@size stored from wreg
 10819  0186E8  0100               	movlb	0	; () banked
 10820  0186EA  6F77               	movwf	__flash_set_page_size@size& (0+255),b
 10821  0186EC                     l19668:
 10822  0186EC  ECF7  F0D3         	call	_flash_is_busy	;wreg free
 10823  0186F0  0900               	iorlw	0
 10824  0186F2  A4D8               	btfss	status,2,c
 10825  0186F4  D7FB               	goto	l19668
 10826                           
 10827                           ;flash.c: 268: if(size==FLASH_PAGE_SIZE_512)
 10828  0186F6  0100               	movlb	0	; () banked
 10829  0186F8  5177               	movf	__flash_set_page_size@size& (0+255),w,b
 10830  0186FA  0100               	movlb	0	; () banked
 10831  0186FC  A4D8               	btfss	status,2,c
 10832  0186FE  D013               	goto	l19674
 10833                           
 10834                           ; BSR set to: 0
 10835                           ;flash.c: 269: memcpy(command, flash_command_pagesize_512, 4);
 10836  018700  0E73               	movlw	low __flash_set_page_size@command
 10837  018702  0100               	movlb	0	; () banked
 10838  018704  6F60               	movwf	memcpy@d1& (0+255),b
 10839  018706  0E00               	movlw	high __flash_set_page_size@command
 10840  018708  0100               	movlb	0	; () banked
 10841  01870A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10842  01870C  0EC8               	movlw	low _flash_command_pagesize_512
 10843  01870E  0100               	movlb	0	; () banked
 10844  018710  6F62               	movwf	memcpy@s1& (0+255),b
 10845  018712  0EFF               	movlw	high _flash_command_pagesize_512
 10846  018714  0100               	movlb	0	; () banked
 10847  018716  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10848  018718  0E00               	movlw	0
 10849  01871A  0100               	movlb	0	; () banked
 10850  01871C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10851  01871E  0E04               	movlw	4
 10852  018720  6F64               	movwf	memcpy@n& (0+255),b
 10853  018722  ECD4  F0C9         	call	_memcpy	;wreg free
 10854  018726                     l19674:
 10855                           
 10856                           ;flash.c: 270: if(size==FLASH_PAGE_SIZE_528)
 10857  018726  0100               	movlb	0	; () banked
 10858  018728  0577               	decf	__flash_set_page_size@size& (0+255),w,b
 10859  01872A  A4D8               	btfss	status,2,c
 10860  01872C  D013               	goto	l19678
 10861                           
 10862                           ; BSR set to: 0
 10863                           ;flash.c: 271: memcpy(command, flash_command_pagesize_528, 4);
 10864  01872E  0E73               	movlw	low __flash_set_page_size@command
 10865  018730  0100               	movlb	0	; () banked
 10866  018732  6F60               	movwf	memcpy@d1& (0+255),b
 10867  018734  0E00               	movlw	high __flash_set_page_size@command
 10868  018736  0100               	movlb	0	; () banked
 10869  018738  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10870  01873A  0EC4               	movlw	low _flash_command_pagesize_528
 10871  01873C  0100               	movlb	0	; () banked
 10872  01873E  6F62               	movwf	memcpy@s1& (0+255),b
 10873  018740  0EFF               	movlw	high _flash_command_pagesize_528
 10874  018742  0100               	movlb	0	; () banked
 10875  018744  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10876  018746  0E00               	movlw	0
 10877  018748  0100               	movlb	0	; () banked
 10878  01874A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10879  01874C  0E04               	movlw	4
 10880  01874E  6F64               	movwf	memcpy@n& (0+255),b
 10881  018750  ECD4  F0C9         	call	_memcpy	;wreg free
 10882  018754                     l19678:
 10883                           
 10884                           ;flash.c: 274: _flash_spi_tx(command, 4);
 10885  018754  0E73               	movlw	low __flash_set_page_size@command
 10886  018756  0100               	movlb	0	; () banked
 10887  018758  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 10888  01875A  0E00               	movlw	high __flash_set_page_size@command
 10889  01875C  0100               	movlb	0	; () banked
 10890  01875E  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 10891  018760  0E00               	movlw	0
 10892  018762  0100               	movlb	0	; () banked
 10893  018764  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 10894  018766  0E04               	movlw	4
 10895  018768  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 10896  01876A  EC36  F0C9         	call	__flash_spi_tx	;wreg free
 10897  01876E  0012               	return		;funcret
 10898  018770                     __end_of__flash_set_page_size:
 10899                           	opt stack 0
 10900                           tblptru	equ	0xFF8
 10901                           tblptrh	equ	0xFF7
 10902                           tblptrl	equ	0xFF6
 10903                           tablat	equ	0xFF5
 10904                           prodh	equ	0xFF4
 10905                           prodl	equ	0xFF3
 10906                           intcon3	equ	0xFF0
 10907                           postinc0	equ	0xFEE
 10908                           wreg	equ	0xFE8
 10909                           postdec1	equ	0xFE5
 10910                           plusw1	equ	0xFE3
 10911                           fsr1h	equ	0xFE2
 10912                           fsr1l	equ	0xFE1
 10913                           indf2	equ	0xFDF
 10914                           postinc2	equ	0xFDE
 10915                           postdec2	equ	0xFDD
 10916                           plusw2	equ	0xFDB
 10917                           fsr2h	equ	0xFDA
 10918                           fsr2l	equ	0xFD9
 10919                           status	equ	0xFD8
 10920                           
 10921 ;; *************** function _buck_init *****************
 10922 ;; Defined at:
 10923 ;;		line 543 in file "buck.c"
 10924 ;; Parameters:    Size  Location     Type
 10925 ;;		None
 10926 ;; Auto vars:     Size  Location     Type
 10927 ;;		None
 10928 ;; Return value:  Size  Location     Type
 10929 ;;                  1    wreg      void 
 10930 ;; Registers used:
 10931 ;;		wreg, status,2, cstack
 10932 ;; Tracked objects:
 10933 ;;		On entry : 0/0
 10934 ;;		On exit  : 0/0
 10935 ;;		Unchanged: 0/0
 10936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10941 ;;Total ram usage:        0 bytes
 10942 ;; Hardware stack levels used:    1
 10943 ;; Hardware stack levels required when called:   11
 10944 ;; This function calls:
 10945 ;;		__buck_pin_init
 10946 ;;		__buck_timer2_init
 10947 ;; This function is called by:
 10948 ;;		_system_init
 10949 ;; This function uses a non-reentrant model
 10950 ;;
 10951                           
 10952                           	psect	text39
 10953  01AB48                     __ptext39:
 10954                           	opt stack 0
 10955  01AB48                     _buck_init:
 10956                           	opt stack 18
 10957                           
 10958                           ;buck.c: 545: buck_status = BUCK_STATUS_OFF;
 10959                           
 10960                           ;incstack = 0
 10961  01AB48  0E00               	movlw	0
 10962  01AB4A  6E1C               	movwf	_buck_status,c
 10963                           
 10964                           ;buck.c: 546: _buck_timer2_init();
 10965  01AB4C  ECD8  F0D4         	call	__buck_timer2_init	;wreg free
 10966                           
 10967                           ;buck.c: 547: _buck_pin_init();
 10968  01AB50  ECCE  F0D0         	call	__buck_pin_init	;wreg free
 10969  01AB54  0012               	return		;funcret
 10970  01AB56                     __end_of_buck_init:
 10971                           	opt stack 0
 10972                           tblptru	equ	0xFF8
 10973                           tblptrh	equ	0xFF7
 10974                           tblptrl	equ	0xFF6
 10975                           tablat	equ	0xFF5
 10976                           prodh	equ	0xFF4
 10977                           prodl	equ	0xFF3
 10978                           intcon3	equ	0xFF0
 10979                           postinc0	equ	0xFEE
 10980                           wreg	equ	0xFE8
 10981                           postdec1	equ	0xFE5
 10982                           plusw1	equ	0xFE3
 10983                           fsr1h	equ	0xFE2
 10984                           fsr1l	equ	0xFE1
 10985                           indf2	equ	0xFDF
 10986                           postinc2	equ	0xFDE
 10987                           postdec2	equ	0xFDD
 10988                           plusw2	equ	0xFDB
 10989                           fsr2h	equ	0xFDA
 10990                           fsr2l	equ	0xFD9
 10991                           status	equ	0xFD8
 10992                           
 10993 ;; *************** function __buck_timer2_init *****************
 10994 ;; Defined at:
 10995 ;;		line 64 in file "buck.c"
 10996 ;; Parameters:    Size  Location     Type
 10997 ;;		None
 10998 ;; Auto vars:     Size  Location     Type
 10999 ;;		None
 11000 ;; Return value:  Size  Location     Type
 11001 ;;                  1    wreg      void 
 11002 ;; Registers used:
 11003 ;;		None
 11004 ;; Tracked objects:
 11005 ;;		On entry : 0/0
 11006 ;;		On exit  : 0/0
 11007 ;;		Unchanged: 0/0
 11008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11013 ;;Total ram usage:        0 bytes
 11014 ;; Hardware stack levels used:    1
 11015 ;; Hardware stack levels required when called:   10
 11016 ;; This function calls:
 11017 ;;		Nothing
 11018 ;; This function is called by:
 11019 ;;		_buck_init
 11020 ;; This function uses a non-reentrant model
 11021 ;;
 11022                           
 11023                           	psect	text40
 11024  01A9B0                     __ptext40:
 11025                           	opt stack 0
 11026  01A9B0                     __buck_timer2_init:
 11027                           	opt stack 18
 11028                           
 11029                           ;buck.c: 68: CCPTMRS0bits.C1TSEL = 0b000;
 11030                           
 11031                           ;incstack = 0
 11032  01A9B0  010F               	movlb	15	; () banked
 11033  01A9B2  9152               	bcf	82,0,b	;volatile
 11034  01A9B4  9352               	bcf	82,1,b	;volatile
 11035  01A9B6  9552               	bcf	82,2,b	;volatile
 11036                           
 11037                           ;buck.c: 71: T2CONbits.T2OUTPS = 0b1111;
 11038  01A9B8  86CA               	bsf	4042,3,c	;volatile
 11039  01A9BA  88CA               	bsf	4042,4,c	;volatile
 11040  01A9BC  8ACA               	bsf	4042,5,c	;volatile
 11041  01A9BE  8CCA               	bsf	4042,6,c	;volatile
 11042                           
 11043                           ;buck.c: 74: T2CONbits.T2CKPS1 = 0;
 11044  01A9C0  92CA               	bcf	4042,1,c	;volatile
 11045                           
 11046                           ;buck.c: 75: T2CONbits.T2CKPS0 = 0;
 11047  01A9C2  90CA               	bcf	4042,0,c	;volatile
 11048                           
 11049                           ;buck.c: 78: T2CONbits.TMR2ON = 0;
 11050  01A9C4  94CA               	bcf	4042,2,c	;volatile
 11051                           
 11052                           ; BSR set to: 15
 11053  01A9C6  0012               	return		;funcret
 11054  01A9C8                     __end_of__buck_timer2_init:
 11055                           	opt stack 0
 11056                           tblptru	equ	0xFF8
 11057                           tblptrh	equ	0xFF7
 11058                           tblptrl	equ	0xFF6
 11059                           tablat	equ	0xFF5
 11060                           prodh	equ	0xFF4
 11061                           prodl	equ	0xFF3
 11062                           intcon3	equ	0xFF0
 11063                           postinc0	equ	0xFEE
 11064                           wreg	equ	0xFE8
 11065                           postdec1	equ	0xFE5
 11066                           plusw1	equ	0xFE3
 11067                           fsr1h	equ	0xFE2
 11068                           fsr1l	equ	0xFE1
 11069                           indf2	equ	0xFDF
 11070                           postinc2	equ	0xFDE
 11071                           postdec2	equ	0xFDD
 11072                           plusw2	equ	0xFDB
 11073                           fsr2h	equ	0xFDA
 11074                           fsr2l	equ	0xFD9
 11075                           status	equ	0xFD8
 11076                           
 11077 ;; *************** function __buck_pin_init *****************
 11078 ;; Defined at:
 11079 ;;		line 41 in file "buck.c"
 11080 ;; Parameters:    Size  Location     Type
 11081 ;;		None
 11082 ;; Auto vars:     Size  Location     Type
 11083 ;;		None
 11084 ;; Return value:  Size  Location     Type
 11085 ;;                  1    wreg      void 
 11086 ;; Registers used:
 11087 ;;		wreg, status,2
 11088 ;; Tracked objects:
 11089 ;;		On entry : 0/0
 11090 ;;		On exit  : 0/0
 11091 ;;		Unchanged: 0/0
 11092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11097 ;;Total ram usage:        0 bytes
 11098 ;; Hardware stack levels used:    1
 11099 ;; Hardware stack levels required when called:   10
 11100 ;; This function calls:
 11101 ;;		Nothing
 11102 ;; This function is called by:
 11103 ;;		_buck_init
 11104 ;; This function uses a non-reentrant model
 11105 ;;
 11106                           
 11107                           	psect	text41
 11108  01A19C                     __ptext41:
 11109                           	opt stack 0
 11110  01A19C                     __buck_pin_init:
 11111                           	opt stack 18
 11112                           
 11113                           ;buck.c: 44: LATBbits.LB1 = 0;
 11114                           
 11115                           ; BSR set to: 15
 11116                           ;incstack = 0
 11117  01A19C  928A               	bcf	3978,1,c	;volatile
 11118                           
 11119                           ;buck.c: 45: TRISBbits.TRISB1 = 0;
 11120  01A19E  9293               	bcf	3987,1,c	;volatile
 11121                           
 11122                           ;buck.c: 46: LATBbits.LB2 = 0;
 11123  01A1A0  948A               	bcf	3978,2,c	;volatile
 11124                           
 11125                           ;buck.c: 47: TRISBbits.TRISB2 = 0;
 11126  01A1A2  9493               	bcf	3987,2,c	;volatile
 11127                           
 11128                           ;buck.c: 48: LATBbits.LB3 = 0;
 11129  01A1A4  968A               	bcf	3978,3,c	;volatile
 11130                           
 11131                           ;buck.c: 49: TRISBbits.TRISB3 = 0;
 11132  01A1A6  9693               	bcf	3987,3,c	;volatile
 11133                           
 11134                           ;buck.c: 52: LATBbits.LATB2 = 0;
 11135  01A1A8  948A               	bcf	3978,2,c	;volatile
 11136                           
 11137                           ;buck.c: 53: LATBbits.LATB1 = 0;
 11138  01A1AA  928A               	bcf	3978,1,c	;volatile
 11139                           
 11140                           ;buck.c: 56: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11141  01A1AC  0E55               	movlw	85
 11142  01A1AE  6EA7               	movwf	4007,c	;volatile
 11143  01A1B0  0EAA               	movlw	170
 11144  01A1B2  6EA7               	movwf	4007,c	;volatile
 11145  01A1B4  010E               	movlb	14	; () banked
 11146  01A1B6  91BF               	bcf	191,0,b	;volatile
 11147                           
 11148                           ;buck.c: 57: RPOR6 = 14;
 11149  01A1B8  0E0E               	movlw	14
 11150  01A1BA  010E               	movlb	14	; () banked
 11151  01A1BC  6FC6               	movwf	198,b	;volatile
 11152                           
 11153                           ;buck.c: 58: RPOR5 = 15;
 11154  01A1BE  0E0F               	movlw	15
 11155  01A1C0  010E               	movlb	14	; () banked
 11156  01A1C2  6FC5               	movwf	197,b	;volatile
 11157                           
 11158                           ;buck.c: 59: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 11159  01A1C4  0E55               	movlw	85
 11160  01A1C6  6EA7               	movwf	4007,c	;volatile
 11161  01A1C8  0EAA               	movlw	170
 11162  01A1CA  6EA7               	movwf	4007,c	;volatile
 11163                           
 11164                           ; BSR set to: 14
 11165  01A1CC  010E               	movlb	14	; () banked
 11166  01A1CE  81BF               	bsf	191,0,b	;volatile
 11167                           
 11168                           ; BSR set to: 14
 11169  01A1D0  0012               	return		;funcret
 11170  01A1D2                     __end_of__buck_pin_init:
 11171                           	opt stack 0
 11172                           tblptru	equ	0xFF8
 11173                           tblptrh	equ	0xFF7
 11174                           tblptrl	equ	0xFF6
 11175                           tablat	equ	0xFF5
 11176                           prodh	equ	0xFF4
 11177                           prodl	equ	0xFF3
 11178                           intcon3	equ	0xFF0
 11179                           postinc0	equ	0xFEE
 11180                           wreg	equ	0xFE8
 11181                           postdec1	equ	0xFE5
 11182                           plusw1	equ	0xFE3
 11183                           fsr1h	equ	0xFE2
 11184                           fsr1l	equ	0xFE1
 11185                           indf2	equ	0xFDF
 11186                           postinc2	equ	0xFDE
 11187                           postdec2	equ	0xFDD
 11188                           plusw2	equ	0xFDB
 11189                           fsr2h	equ	0xFDA
 11190                           fsr2l	equ	0xFD9
 11191                           status	equ	0xFD8
 11192                           
 11193 ;; *************** function _adc_init *****************
 11194 ;; Defined at:
 11195 ;;		line 9 in file "adc.c"
 11196 ;; Parameters:    Size  Location     Type
 11197 ;;		None
 11198 ;; Auto vars:     Size  Location     Type
 11199 ;;		None
 11200 ;; Return value:  Size  Location     Type
 11201 ;;                  1    wreg      void 
 11202 ;; Registers used:
 11203 ;;		wreg, status,2
 11204 ;; Tracked objects:
 11205 ;;		On entry : 0/0
 11206 ;;		On exit  : 0/0
 11207 ;;		Unchanged: 0/0
 11208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11213 ;;Total ram usage:        0 bytes
 11214 ;; Hardware stack levels used:    1
 11215 ;; Hardware stack levels required when called:   10
 11216 ;; This function calls:
 11217 ;;		Nothing
 11218 ;; This function is called by:
 11219 ;;		_system_init
 11220 ;; This function uses a non-reentrant model
 11221 ;;
 11222                           
 11223                           	psect	text42
 11224  01A8AA                     __ptext42:
 11225                           	opt stack 0
 11226  01A8AA                     _adc_init:
 11227                           	opt stack 19
 11228                           
 11229                           ;adc.c: 11: ADCON0bits.VCFG1 = 0;
 11230                           
 11231                           ; BSR set to: 14
 11232                           ;incstack = 0
 11233  01A8AA  9EC2               	bcf	4034,7,c	;volatile
 11234                           
 11235                           ;adc.c: 12: ADCON0bits.VCFG0 = 1;
 11236  01A8AC  8CC2               	bsf	4034,6,c	;volatile
 11237                           
 11238                           ;adc.c: 13: ADCON0bits.CHS = 0b1100;
 11239  01A8AE  50C2               	movf	4034,w,c	;volatile
 11240  01A8B0  0BC3               	andlw	-61
 11241  01A8B2  0930               	iorlw	48
 11242  01A8B4  6EC2               	movwf	4034,c	;volatile
 11243                           
 11244                           ;adc.c: 14: ADCON0bits.ADON = 1;
 11245  01A8B6  80C2               	bsf	4034,0,c	;volatile
 11246                           
 11247                           ;adc.c: 15: ADCON1bits.ADFM = 0;
 11248  01A8B8  9EC1               	bcf	4033,7,c	;volatile
 11249                           
 11250                           ;adc.c: 16: ADCON1bits.ADCAL = 0;
 11251  01A8BA  9CC1               	bcf	4033,6,c	;volatile
 11252                           
 11253                           ;adc.c: 17: ADCON1bits.ADCS = 0b110;
 11254  01A8BC  50C1               	movf	4033,w,c	;volatile
 11255  01A8BE  0BF8               	andlw	-8
 11256  01A8C0  0906               	iorlw	6
 11257  01A8C2  6EC1               	movwf	4033,c	;volatile
 11258  01A8C4  0012               	return		;funcret
 11259  01A8C6                     __end_of_adc_init:
 11260                           	opt stack 0
 11261                           tblptru	equ	0xFF8
 11262                           tblptrh	equ	0xFF7
 11263                           tblptrl	equ	0xFF6
 11264                           tablat	equ	0xFF5
 11265                           prodh	equ	0xFF4
 11266                           prodl	equ	0xFF3
 11267                           intcon3	equ	0xFF0
 11268                           postinc0	equ	0xFEE
 11269                           wreg	equ	0xFE8
 11270                           postdec1	equ	0xFE5
 11271                           plusw1	equ	0xFE3
 11272                           fsr1h	equ	0xFE2
 11273                           fsr1l	equ	0xFE1
 11274                           indf2	equ	0xFDF
 11275                           postinc2	equ	0xFDE
 11276                           postdec2	equ	0xFDD
 11277                           plusw2	equ	0xFDB
 11278                           fsr2h	equ	0xFDA
 11279                           fsr2l	equ	0xFD9
 11280                           status	equ	0xFD8
 11281                           
 11282 ;; *************** function __system_timer0_init *****************
 11283 ;; Defined at:
 11284 ;;		line 214 in file "os.c"
 11285 ;; Parameters:    Size  Location     Type
 11286 ;;		None
 11287 ;; Auto vars:     Size  Location     Type
 11288 ;;		None
 11289 ;; Return value:  Size  Location     Type
 11290 ;;                  1    wreg      void 
 11291 ;; Registers used:
 11292 ;;		wreg, status,2, status,0
 11293 ;; Tracked objects:
 11294 ;;		On entry : 0/0
 11295 ;;		On exit  : 0/0
 11296 ;;		Unchanged: 0/0
 11297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11302 ;;Total ram usage:        0 bytes
 11303 ;; Hardware stack levels used:    1
 11304 ;; Hardware stack levels required when called:   10
 11305 ;; This function calls:
 11306 ;;		Nothing
 11307 ;; This function is called by:
 11308 ;;		_system_init
 11309 ;; This function uses a non-reentrant model
 11310 ;;
 11311                           
 11312                           	psect	text43
 11313  019F04                     __ptext43:
 11314                           	opt stack 0
 11315  019F04                     __system_timer0_init:
 11316                           	opt stack 19
 11317                           
 11318                           ;os.c: 217: T0CONbits.T0CS = 0;
 11319                           
 11320                           ;incstack = 0
 11321  019F04  9AD5               	bcf	4053,5,c	;volatile
 11322                           
 11323                           ;os.c: 219: T0CONbits.T08BIT = 0;
 11324  019F06  9CD5               	bcf	4053,6,c	;volatile
 11325                           
 11326                           ;os.c: 221: T0CONbits.T0PS2 = 0;
 11327  019F08  94D5               	bcf	4053,2,c	;volatile
 11328                           
 11329                           ;os.c: 222: T0CONbits.T0PS1 = 1;
 11330  019F0A  82D5               	bsf	4053,1,c	;volatile
 11331                           
 11332                           ;os.c: 223: T0CONbits.T0PS0 = 0;
 11333  019F0C  90D5               	bcf	4053,0,c	;volatile
 11334                           
 11335                           ;os.c: 225: T0CONbits.PSA = 0;
 11336  019F0E  96D5               	bcf	4053,3,c	;volatile
 11337                           
 11338                           ;os.c: 227: switch(os.clockFrequency)
 11339  019F10  D009               	goto	l20458
 11340  019F12                     l20452:
 11341                           
 11342                           ;os.c: 230: TMR0H = 0xF8;
 11343  019F12  0EF8               	movlw	248
 11344  019F14  6ED7               	movwf	4055,c	;volatile
 11345                           
 11346                           ;os.c: 231: TMR0L = 0x30;
 11347  019F16  0E30               	movlw	48
 11348  019F18  D003               	goto	L8
 11349  019F1A                     l20454:
 11350                           
 11351                           ;os.c: 234: TMR0H = 0xD1;
 11352  019F1A  0ED1               	movlw	209
 11353  019F1C  6ED7               	movwf	4055,c	;volatile
 11354                           
 11355                           ;os.c: 235: TMR0L = 0x20;
 11356  019F1E  0E20               	movlw	32
 11357  019F20                     L8:
 11358  019F20  6ED6               	movwf	4054,c	;volatile
 11359                           
 11360                           ;os.c: 237: }
 11361                           
 11362                           ;os.c: 236: break;
 11363  019F22  D008               	goto	l1375
 11364  019F24                     l20458:
 11365  019F24  0102               	movlb	2	; () banked
 11366  019F26  5100               	movf	_os& (0+255),w,b	;volatile
 11367                           
 11368                           ; Switch size 1, requested type "space"
 11369                           ; Number of cases is 2, Range of values is 1 to 2
 11370                           ; switch strategies available:
 11371                           ; Name         Instructions Cycles
 11372                           ; simple_byte            7     4 (average)
 11373                           ;	Chosen strategy is simple_byte
 11374  019F28  0A01               	xorlw	1	; case 1
 11375  019F2A  B4D8               	btfsc	status,2,c
 11376  019F2C  D7F2               	goto	l20452
 11377  019F2E  0A03               	xorlw	3	; case 2
 11378  019F30  B4D8               	btfsc	status,2,c
 11379  019F32  D7F3               	goto	l20454
 11380  019F34                     l1375:
 11381                           
 11382                           ;os.c: 239: T0CONbits.TMR0ON = 1;
 11383  019F34  8ED5               	bsf	4053,7,c	;volatile
 11384                           
 11385                           ;os.c: 242: INTCONbits.TMR0IF = 0;
 11386  019F36  94F2               	bcf	intcon,2,c	;volatile
 11387                           
 11388                           ;os.c: 243: INTCONbits.TMR0IE = 1;
 11389  019F38  8AF2               	bsf	intcon,5,c	;volatile
 11390                           
 11391                           ;os.c: 244: INTCONbits.GIE = 1;
 11392  019F3A  8EF2               	bsf	intcon,7,c	;volatile
 11393                           
 11394                           ;os.c: 247: os.timeSlot = 0;
 11395  019F3C  0E00               	movlw	0
 11396  019F3E  0102               	movlb	2	; () banked
 11397  019F40  6F08               	movwf	(_os+8)& (0+255),b	;volatile
 11398                           
 11399                           ; BSR set to: 2
 11400  019F42  0012               	return		;funcret
 11401  019F44                     __end_of__system_timer0_init:
 11402                           	opt stack 0
 11403                           tblptru	equ	0xFF8
 11404                           tblptrh	equ	0xFF7
 11405                           tblptrl	equ	0xFF6
 11406                           tablat	equ	0xFF5
 11407                           prodh	equ	0xFF4
 11408                           prodl	equ	0xFF3
 11409                           intcon	equ	0xFF2
 11410                           intcon3	equ	0xFF0
 11411                           postinc0	equ	0xFEE
 11412                           wreg	equ	0xFE8
 11413                           postdec1	equ	0xFE5
 11414                           plusw1	equ	0xFE3
 11415                           fsr1h	equ	0xFE2
 11416                           fsr1l	equ	0xFE1
 11417                           indf2	equ	0xFDF
 11418                           postinc2	equ	0xFDE
 11419                           postdec2	equ	0xFDD
 11420                           plusw2	equ	0xFDB
 11421                           fsr2h	equ	0xFDA
 11422                           fsr2l	equ	0xFD9
 11423                           status	equ	0xFD8
 11424                           
 11425 ;; *************** function __system_encoder_init *****************
 11426 ;; Defined at:
 11427 ;;		line 160 in file "os.c"
 11428 ;; Parameters:    Size  Location     Type
 11429 ;;		None
 11430 ;; Auto vars:     Size  Location     Type
 11431 ;;		None
 11432 ;; Return value:  Size  Location     Type
 11433 ;;                  1    wreg      void 
 11434 ;; Registers used:
 11435 ;;		wreg, status,2
 11436 ;; Tracked objects:
 11437 ;;		On entry : 0/0
 11438 ;;		On exit  : 0/0
 11439 ;;		Unchanged: 0/0
 11440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11445 ;;Total ram usage:        0 bytes
 11446 ;; Hardware stack levels used:    1
 11447 ;; Hardware stack levels required when called:   10
 11448 ;; This function calls:
 11449 ;;		Nothing
 11450 ;; This function is called by:
 11451 ;;		_system_init
 11452 ;; This function uses a non-reentrant model
 11453 ;;
 11454                           
 11455                           	psect	text44
 11456  019DE8                     __ptext44:
 11457                           	opt stack 0
 11458  019DE8                     __system_encoder_init:
 11459                           	opt stack 19
 11460                           
 11461                           ;os.c: 162: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11462                           
 11463                           ; BSR set to: 2
 11464                           ;incstack = 0
 11465  019DE8  0E55               	movlw	85
 11466  019DEA  6EA7               	movwf	4007,c	;volatile
 11467  019DEC  0EAA               	movlw	170
 11468  019DEE  6EA7               	movwf	4007,c	;volatile
 11469  019DF0  010E               	movlb	14	; () banked
 11470  019DF2  91BF               	bcf	191,0,b	;volatile
 11471                           
 11472                           ;os.c: 163: RPINR1 = 0;
 11473  019DF4  0E00               	movlw	0
 11474  019DF6  010E               	movlb	14	; () banked
 11475  019DF8  6FE1               	movwf	225,b	;volatile
 11476                           
 11477                           ;os.c: 164: RPINR3 = 9;
 11478  019DFA  0E09               	movlw	9
 11479  019DFC  010E               	movlb	14	; () banked
 11480  019DFE  6FE3               	movwf	227,b	;volatile
 11481                           
 11482                           ;os.c: 165: RPINR2 = 10;
 11483  019E00  0E0A               	movlw	10
 11484  019E02  010E               	movlb	14	; () banked
 11485  019E04  6FE2               	movwf	226,b	;volatile
 11486                           
 11487                           ;os.c: 166: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
 11488  019E06  0E55               	movlw	85
 11489  019E08  6EA7               	movwf	4007,c	;volatile
 11490  019E0A  0EAA               	movlw	170
 11491  019E0C  6EA7               	movwf	4007,c	;volatile
 11492                           
 11493                           ; BSR set to: 14
 11494  019E0E  010E               	movlb	14	; () banked
 11495  019E10  91BF               	bcf	191,0,b	;volatile
 11496                           
 11497                           ; BSR set to: 14
 11498                           ;os.c: 173: INTCON2bits.INTEDG1 = 0;
 11499  019E12  9AF1               	bcf	intcon2,5,c	;volatile
 11500                           
 11501                           ; BSR set to: 14
 11502                           ;os.c: 174: INTCON3bits.INT1IF = 0;
 11503  019E14  90F0               	bcf	intcon3,0,c	;volatile
 11504                           
 11505                           ; BSR set to: 14
 11506                           ;os.c: 175: INTCON3bits.INT1IE = 1;
 11507  019E16  86F0               	bsf	intcon3,3,c	;volatile
 11508                           
 11509                           ; BSR set to: 14
 11510                           ;os.c: 177: INTCON2bits.INTEDG2 = 1;
 11511  019E18  88F1               	bsf	intcon2,4,c	;volatile
 11512                           
 11513                           ; BSR set to: 14
 11514                           ;os.c: 178: INTCON3bits.INT2IF = 0;
 11515  019E1A  92F0               	bcf	intcon3,1,c	;volatile
 11516                           
 11517                           ; BSR set to: 14
 11518                           ;os.c: 181: INTCON2bits.INTEDG3 = 1;
 11519  019E1C  86F1               	bsf	intcon2,3,c	;volatile
 11520                           
 11521                           ; BSR set to: 14
 11522                           ;os.c: 182: INTCON3bits.INT3IF = 0;
 11523  019E1E  94F0               	bcf	intcon3,2,c	;volatile
 11524                           
 11525                           ; BSR set to: 14
 11526                           ;os.c: 185: INTCONbits.GIE = 1;
 11527  019E20  8EF2               	bsf	intcon,7,c	;volatile
 11528                           
 11529                           ;os.c: 187: os.encoderCount = 0;
 11530  019E22  0E00               	movlw	0
 11531  019E24  0102               	movlb	2	; () banked
 11532  019E26  6F06               	movwf	(_os+6)& (0+255),b	;volatile
 11533                           
 11534                           ;os.c: 188: os.buttonCount = 0;
 11535  019E28  0E00               	movlw	0
 11536  019E2A  0102               	movlb	2	; () banked
 11537  019E2C  6F07               	movwf	(_os+7)& (0+255),b	;volatile
 11538                           
 11539                           ; BSR set to: 2
 11540  019E2E  0012               	return		;funcret
 11541  019E30                     __end_of__system_encoder_init:
 11542                           	opt stack 0
 11543                           tblptru	equ	0xFF8
 11544                           tblptrh	equ	0xFF7
 11545                           tblptrl	equ	0xFF6
 11546                           tablat	equ	0xFF5
 11547                           prodh	equ	0xFF4
 11548                           prodl	equ	0xFF3
 11549                           intcon	equ	0xFF2
 11550                           intcon2	equ	0xFF1
 11551                           intcon3	equ	0xFF0
 11552                           postinc0	equ	0xFEE
 11553                           wreg	equ	0xFE8
 11554                           postdec1	equ	0xFE5
 11555                           plusw1	equ	0xFE3
 11556                           fsr1h	equ	0xFE2
 11557                           fsr1l	equ	0xFE1
 11558                           indf2	equ	0xFDF
 11559                           postinc2	equ	0xFDE
 11560                           postdec2	equ	0xFDD
 11561                           plusw2	equ	0xFDB
 11562                           fsr2h	equ	0xFDA
 11563                           fsr2l	equ	0xFD9
 11564                           status	equ	0xFD8
 11565                           
 11566 ;; *************** function _system_calculate_output_voltage *****************
 11567 ;; Defined at:
 11568 ;;		line 587 in file "os.c"
 11569 ;; Parameters:    Size  Location     Type
 11570 ;;		None
 11571 ;; Auto vars:     Size  Location     Type
 11572 ;;  tmp             4   16[BANK0 ] long 
 11573 ;; Return value:  Size  Location     Type
 11574 ;;                  1    wreg      void 
 11575 ;; Registers used:
 11576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11577 ;; Tracked objects:
 11578 ;;		On entry : 0/0
 11579 ;;		On exit  : 0/0
 11580 ;;		Unchanged: 0/0
 11581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11583 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11584 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11585 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11586 ;;Total ram usage:        8 bytes
 11587 ;; Hardware stack levels used:    1
 11588 ;; Hardware stack levels required when called:   11
 11589 ;; This function calls:
 11590 ;;		___lmul
 11591 ;; This function is called by:
 11592 ;;		_main
 11593 ;; This function uses a non-reentrant model
 11594 ;;
 11595                           
 11596                           	psect	text45
 11597  016424                     __ptext45:
 11598                           	opt stack 0
 11599  016424                     _system_calculate_output_voltage:
 11600                           	opt stack 19
 11601                           
 11602                           ;os.c: 589: int32_t tmp = (int32_t) (os.output_voltage_adc[0] + os.output_voltage_adc[1]
      +                           + os.output_voltage_adc[2] + os.output_voltage_adc[3]);
 11603                           
 11604                           ; BSR set to: 2
 11605                           ;incstack = 0
 11606  016424  0102               	movlb	2	; () banked
 11607  016426  5121               	movf	(_os+33)& (0+255),w,b	;volatile
 11608  016428  0102               	movlb	2	; () banked
 11609  01642A  251F               	addwf	(_os+31)& (0+255),w,b	;volatile
 11610  01642C  0100               	movlb	0	; () banked
 11611  01642E  6F6C               	movwf	??_system_calculate_output_voltage& (0+255),b
 11612  016430  0102               	movlb	2	; () banked
 11613  016432  5122               	movf	(_os+34)& (0+255),w,b	;volatile
 11614  016434  0102               	movlb	2	; () banked
 11615  016436  2120               	addwfc	(_os+32)& (0+255),w,b	;volatile
 11616  016438  0100               	movlb	0	; () banked
 11617  01643A  6F6D               	movwf	(??_system_calculate_output_voltage+1)& (0+255),b
 11618  01643C  0102               	movlb	2	; () banked
 11619  01643E  5123               	movf	(_os+35)& (0+255),w,b	;volatile
 11620  016440  0100               	movlb	0	; () banked
 11621  016442  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 11622  016444  0102               	movlb	2	; () banked
 11623  016446  5124               	movf	(_os+36)& (0+255),w,b	;volatile
 11624  016448  0100               	movlb	0	; () banked
 11625  01644A  236D               	addwfc	(??_system_calculate_output_voltage+1)& (0+255),f,b
 11626  01644C  0102               	movlb	2	; () banked
 11627  01644E  5125               	movf	(_os+37)& (0+255),w,b	;volatile
 11628  016450  0100               	movlb	0	; () banked
 11629  016452  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 11630  016454  0102               	movlb	2	; () banked
 11631  016456  5126               	movf	(_os+38)& (0+255),w,b	;volatile
 11632  016458  0100               	movlb	0	; () banked
 11633  01645A  236D               	addwfc	(??_system_calculate_output_voltage+1)& (0+255),f,b
 11634  01645C  C06C  F070         	movff	??_system_calculate_output_voltage,system_calculate_output_voltage@tmp
 11635  016460  C06D  F071         	movff	??_system_calculate_output_voltage+1,system_calculate_output_voltage@tmp+1
 11636  016464  0100               	movlb	0	; () banked
 11637  016466  0E00               	movlw	0
 11638  016468  BF71               	btfsc	(system_calculate_output_voltage@tmp+1)& (0+255),7,b
 11639  01646A  0EFF               	movlw	-1
 11640  01646C  6F72               	movwf	(system_calculate_output_voltage@tmp+2)& (0+255),b
 11641  01646E  6F73               	movwf	(system_calculate_output_voltage@tmp+3)& (0+255),b
 11642                           
 11643                           ;os.c: 590: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Offset;
 11644  016470  C311  F06C         	movff	_calibrationParameters+17,??_system_calculate_output_voltage
 11645  016474  C312  F06D         	movff	_calibrationParameters+18,??_system_calculate_output_voltage+1
 11646  016478  0E00               	movlw	0
 11647  01647A  0100               	movlb	0	; () banked
 11648  01647C  BF6D               	btfsc	(??_system_calculate_output_voltage+1)& (0+255),7,b
 11649  01647E  0EFF               	movlw	255
 11650  016480  6F6E               	movwf	(??_system_calculate_output_voltage+2)& (0+255),b
 11651  016482  6F6F               	movwf	(??_system_calculate_output_voltage+3)& (0+255),b
 11652  016484  0100               	movlb	0	; () banked
 11653  016486  516C               	movf	??_system_calculate_output_voltage& (0+255),w,b
 11654  016488  0100               	movlb	0	; () banked
 11655  01648A  2770               	addwf	system_calculate_output_voltage@tmp& (0+255),f,b
 11656  01648C  0100               	movlb	0	; () banked
 11657  01648E  516D               	movf	(??_system_calculate_output_voltage+1)& (0+255),w,b
 11658  016490  0100               	movlb	0	; () banked
 11659  016492  2371               	addwfc	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 11660  016494  0100               	movlb	0	; () banked
 11661  016496  516E               	movf	(??_system_calculate_output_voltage+2)& (0+255),w,b
 11662  016498  0100               	movlb	0	; () banked
 11663  01649A  2372               	addwfc	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 11664  01649C  0100               	movlb	0	; () banked
 11665  01649E  516F               	movf	(??_system_calculate_output_voltage+3)& (0+255),w,b
 11666  0164A0  0100               	movlb	0	; () banked
 11667  0164A2  2373               	addwfc	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 11668                           
 11669                           ; BSR set to: 0
 11670                           ;os.c: 591: tmp *= calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Multiplier;
 11671  0164A4  C070  F060         	movff	system_calculate_output_voltage@tmp,___lmul@multiplier
 11672  0164A8  C071  F061         	movff	system_calculate_output_voltage@tmp+1,___lmul@multiplier+1
 11673  0164AC  C072  F062         	movff	system_calculate_output_voltage@tmp+2,___lmul@multiplier+2
 11674  0164B0  C073  F063         	movff	system_calculate_output_voltage@tmp+3,___lmul@multiplier+3
 11675  0164B4  EE23  F013         	lfsr	2,_calibrationParameters+19
 11676  0164B8  CFDE F064          	movff	postinc2,___lmul@multiplicand
 11677  0164BC  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 11678  0164C0  0100               	movlb	0	; () banked
 11679  0164C2  0E00               	movlw	0
 11680  0164C4  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 11681  0164C6  0EFF               	movlw	-1
 11682  0164C8  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11683  0164CA  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11684  0164CC  EC3B  F0C7         	call	___lmul	;wreg free
 11685  0164D0  C060  F070         	movff	?___lmul,system_calculate_output_voltage@tmp
 11686  0164D4  C061  F071         	movff	?___lmul+1,system_calculate_output_voltage@tmp+1
 11687  0164D8  C062  F072         	movff	?___lmul+2,system_calculate_output_voltage@tmp+2
 11688  0164DC  C063  F073         	movff	?___lmul+3,system_calculate_output_voltage@tmp+3
 11689                           
 11690                           ;os.c: 592: tmp >>= calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Shift - 1;
 11691  0164E0  C315  F06C         	movff	_calibrationParameters+21,??_system_calculate_output_voltage
 11692  0164E4  0EFF               	movlw	-1
 11693  0164E6  0100               	movlb	0	; () banked
 11694  0164E8  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 11695  0164EA  0100               	movlb	0	; () banked
 11696  0164EC  296C               	incf	??_system_calculate_output_voltage& (0+255),w,b
 11697  0164EE  0100               	movlb	0	; () banked
 11698  0164F0  6F6D               	movwf	(??_system_calculate_output_voltage+1)& (0+255),b
 11699  0164F2  D006               	goto	u22100
 11700  0164F4                     u22105:
 11701  0164F4  0100               	movlb	0	; () banked
 11702  0164F6  3573               	rlcf	(system_calculate_output_voltage@tmp+3)& (0+255),w,b
 11703  0164F8  3373               	rrcf	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 11704  0164FA  3372               	rrcf	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 11705  0164FC  3371               	rrcf	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 11706  0164FE  3370               	rrcf	system_calculate_output_voltage@tmp& (0+255),f,b
 11707  016500                     u22100:
 11708  016500  0100               	movlb	0	; () banked
 11709  016502  2F6D               	decfsz	(??_system_calculate_output_voltage+1)& (0+255),f,b
 11710  016504  D7F7               	goto	u22105
 11711                           
 11712                           ;os.c: 593: tmp += 1;
 11713  016506  0E01               	movlw	1
 11714  016508  0100               	movlb	0	; () banked
 11715  01650A  2770               	addwf	system_calculate_output_voltage@tmp& (0+255),f,b
 11716  01650C  0E00               	movlw	0
 11717  01650E  2371               	addwfc	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 11718  016510  2372               	addwfc	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 11719  016512  2373               	addwfc	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 11720                           
 11721                           ; BSR set to: 0
 11722                           ;os.c: 594: tmp >>= 1;
 11723  016514  0100               	movlb	0	; () banked
 11724  016516  3573               	rlcf	(system_calculate_output_voltage@tmp+3)& (0+255),w,b
 11725  016518  3373               	rrcf	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 11726  01651A  3372               	rrcf	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 11727  01651C  3371               	rrcf	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 11728  01651E  3370               	rrcf	system_calculate_output_voltage@tmp& (0+255),f,b
 11729                           
 11730                           ; BSR set to: 0
 11731                           ;os.c: 595: os.output_voltage = (int16_t) tmp;
 11732  016520  C070  F227         	movff	system_calculate_output_voltage@tmp,_os+39	;volatile
 11733  016524  C071  F228         	movff	system_calculate_output_voltage@tmp+1,_os+40	;volatile
 11734                           
 11735                           ; BSR set to: 0
 11736  016528  0012               	return		;funcret
 11737  01652A                     __end_of_system_calculate_output_voltage:
 11738                           	opt stack 0
 11739                           tblptru	equ	0xFF8
 11740                           tblptrh	equ	0xFF7
 11741                           tblptrl	equ	0xFF6
 11742                           tablat	equ	0xFF5
 11743                           prodh	equ	0xFF4
 11744                           prodl	equ	0xFF3
 11745                           intcon	equ	0xFF2
 11746                           intcon2	equ	0xFF1
 11747                           intcon3	equ	0xFF0
 11748                           postinc0	equ	0xFEE
 11749                           wreg	equ	0xFE8
 11750                           postdec1	equ	0xFE5
 11751                           plusw1	equ	0xFE3
 11752                           fsr1h	equ	0xFE2
 11753                           fsr1l	equ	0xFE1
 11754                           indf2	equ	0xFDF
 11755                           postinc2	equ	0xFDE
 11756                           postdec2	equ	0xFDD
 11757                           plusw2	equ	0xFDB
 11758                           fsr2h	equ	0xFDA
 11759                           fsr2l	equ	0xFD9
 11760                           status	equ	0xFD8
 11761                           
 11762 ;; *************** function _system_calculate_output_current *****************
 11763 ;; Defined at:
 11764 ;;		line 625 in file "os.c"
 11765 ;; Parameters:    Size  Location     Type
 11766 ;;		None
 11767 ;; Auto vars:     Size  Location     Type
 11768 ;;  tmp             4   16[BANK0 ] long 
 11769 ;; Return value:  Size  Location     Type
 11770 ;;                  1    wreg      void 
 11771 ;; Registers used:
 11772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11773 ;; Tracked objects:
 11774 ;;		On entry : 0/0
 11775 ;;		On exit  : 0/0
 11776 ;;		Unchanged: 0/0
 11777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11779 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11780 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11781 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11782 ;;Total ram usage:        8 bytes
 11783 ;; Hardware stack levels used:    1
 11784 ;; Hardware stack levels required when called:   11
 11785 ;; This function calls:
 11786 ;;		___lmul
 11787 ;;		_buck_get_mode
 11788 ;; This function is called by:
 11789 ;;		_main
 11790 ;; This function uses a non-reentrant model
 11791 ;;
 11792                           
 11793                           	psect	text46
 11794  014E6C                     __ptext46:
 11795                           	opt stack 0
 11796  014E6C                     _system_calculate_output_current:
 11797                           	opt stack 19
 11798                           
 11799                           ;os.c: 627: int32_t tmp;
 11800                           ;os.c: 629: if((buck_get_mode()==BUCK_STATUS_OFF) || (buck_get_mode()==BUCK_STATUS_REMOT
      +                          E_OFF))
 11801                           
 11802                           ; BSR set to: 0
 11803                           ;incstack = 0
 11804  014E6C  ECEF  F0D5         	call	_buck_get_mode	;wreg free
 11805  014E70  0900               	iorlw	0
 11806  014E72  B4D8               	btfsc	status,2,c
 11807  014E74  D005               	goto	l22352
 11808  014E76  ECEF  F0D5         	call	_buck_get_mode	;wreg free
 11809  014E7A  0A80               	xorlw	128
 11810  014E7C  A4D8               	btfss	status,2,c
 11811  014E7E  D006               	goto	l22354
 11812  014E80                     l22352:
 11813                           
 11814                           ;os.c: 630: {
 11815                           ;os.c: 631: os.output_current = 0;
 11816  014E80  0E00               	movlw	0
 11817  014E82  0102               	movlb	2	; () banked
 11818  014E84  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 11819  014E86  0E00               	movlw	0
 11820  014E88  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 11821                           
 11822                           ;os.c: 632: }
 11823  014E8A  0012               	return	
 11824  014E8C                     l22354:
 11825                           
 11826                           ;os.c: 633: else
 11827                           ;os.c: 634: {
 11828                           ;os.c: 635: tmp = (int32_t) (os.output_current_adc[0] + os.output_current_adc[1] + os.ou
      +                          tput_current_adc[2] + os.output_current_adc[3]);
 11829  014E8C  0102               	movlb	2	; () banked
 11830  014E8E  512B               	movf	(_os+43)& (0+255),w,b	;volatile
 11831  014E90  0102               	movlb	2	; () banked
 11832  014E92  2529               	addwf	(_os+41)& (0+255),w,b	;volatile
 11833  014E94  0100               	movlb	0	; () banked
 11834  014E96  6F6C               	movwf	??_system_calculate_output_current& (0+255),b
 11835  014E98  0102               	movlb	2	; () banked
 11836  014E9A  512C               	movf	(_os+44)& (0+255),w,b	;volatile
 11837  014E9C  0102               	movlb	2	; () banked
 11838  014E9E  212A               	addwfc	(_os+42)& (0+255),w,b	;volatile
 11839  014EA0  0100               	movlb	0	; () banked
 11840  014EA2  6F6D               	movwf	(??_system_calculate_output_current+1)& (0+255),b
 11841  014EA4  0102               	movlb	2	; () banked
 11842  014EA6  512D               	movf	(_os+45)& (0+255),w,b	;volatile
 11843  014EA8  0100               	movlb	0	; () banked
 11844  014EAA  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 11845  014EAC  0102               	movlb	2	; () banked
 11846  014EAE  512E               	movf	(_os+46)& (0+255),w,b	;volatile
 11847  014EB0  0100               	movlb	0	; () banked
 11848  014EB2  236D               	addwfc	(??_system_calculate_output_current+1)& (0+255),f,b
 11849  014EB4  0102               	movlb	2	; () banked
 11850  014EB6  512F               	movf	(_os+47)& (0+255),w,b	;volatile
 11851  014EB8  0100               	movlb	0	; () banked
 11852  014EBA  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 11853  014EBC  0102               	movlb	2	; () banked
 11854  014EBE  5130               	movf	(_os+48)& (0+255),w,b	;volatile
 11855  014EC0  0100               	movlb	0	; () banked
 11856  014EC2  236D               	addwfc	(??_system_calculate_output_current+1)& (0+255),f,b
 11857  014EC4  C06C  F070         	movff	??_system_calculate_output_current,system_calculate_output_current@tmp
 11858  014EC8  C06D  F071         	movff	??_system_calculate_output_current+1,system_calculate_output_current@tmp+1
 11859  014ECC  0100               	movlb	0	; () banked
 11860  014ECE  0E00               	movlw	0
 11861  014ED0  BF71               	btfsc	(system_calculate_output_current@tmp+1)& (0+255),7,b
 11862  014ED2  0EFF               	movlw	-1
 11863  014ED4  6F72               	movwf	(system_calculate_output_current@tmp+2)& (0+255),b
 11864  014ED6  6F73               	movwf	(system_calculate_output_current@tmp+3)& (0+255),b
 11865                           
 11866                           ;os.c: 636: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibrati
      +                          on;
 11867  014ED8  C32E  F06C         	movff	_calibrationParameters+46,??_system_calculate_output_current
 11868  014EDC  C32F  F06D         	movff	_calibrationParameters+47,??_system_calculate_output_current+1
 11869  014EE0  0E00               	movlw	0
 11870  014EE2  0100               	movlb	0	; () banked
 11871  014EE4  BF6D               	btfsc	(??_system_calculate_output_current+1)& (0+255),7,b
 11872  014EE6  0EFF               	movlw	255
 11873  014EE8  6F6E               	movwf	(??_system_calculate_output_current+2)& (0+255),b
 11874  014EEA  6F6F               	movwf	(??_system_calculate_output_current+3)& (0+255),b
 11875  014EEC  0100               	movlb	0	; () banked
 11876  014EEE  516C               	movf	??_system_calculate_output_current& (0+255),w,b
 11877  014EF0  0100               	movlb	0	; () banked
 11878  014EF2  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 11879  014EF4  0100               	movlb	0	; () banked
 11880  014EF6  516D               	movf	(??_system_calculate_output_current+1)& (0+255),w,b
 11881  014EF8  0100               	movlb	0	; () banked
 11882  014EFA  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11883  014EFC  0100               	movlb	0	; () banked
 11884  014EFE  516E               	movf	(??_system_calculate_output_current+2)& (0+255),w,b
 11885  014F00  0100               	movlb	0	; () banked
 11886  014F02  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11887  014F04  0100               	movlb	0	; () banked
 11888  014F06  516F               	movf	(??_system_calculate_output_current+3)& (0+255),w,b
 11889  014F08  0100               	movlb	0	; () banked
 11890  014F0A  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11891                           
 11892                           ;os.c: 637: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Offset;
 11893  014F0C  C329  F06C         	movff	_calibrationParameters+41,??_system_calculate_output_current
 11894  014F10  C32A  F06D         	movff	_calibrationParameters+42,??_system_calculate_output_current+1
 11895  014F14  0E00               	movlw	0
 11896  014F16  0100               	movlb	0	; () banked
 11897  014F18  BF6D               	btfsc	(??_system_calculate_output_current+1)& (0+255),7,b
 11898  014F1A  0EFF               	movlw	255
 11899  014F1C  6F6E               	movwf	(??_system_calculate_output_current+2)& (0+255),b
 11900  014F1E  6F6F               	movwf	(??_system_calculate_output_current+3)& (0+255),b
 11901  014F20  0100               	movlb	0	; () banked
 11902  014F22  516C               	movf	??_system_calculate_output_current& (0+255),w,b
 11903  014F24  0100               	movlb	0	; () banked
 11904  014F26  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 11905  014F28  0100               	movlb	0	; () banked
 11906  014F2A  516D               	movf	(??_system_calculate_output_current+1)& (0+255),w,b
 11907  014F2C  0100               	movlb	0	; () banked
 11908  014F2E  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11909  014F30  0100               	movlb	0	; () banked
 11910  014F32  516E               	movf	(??_system_calculate_output_current+2)& (0+255),w,b
 11911  014F34  0100               	movlb	0	; () banked
 11912  014F36  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11913  014F38  0100               	movlb	0	; () banked
 11914  014F3A  516F               	movf	(??_system_calculate_output_current+3)& (0+255),w,b
 11915  014F3C  0100               	movlb	0	; () banked
 11916  014F3E  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11917                           
 11918                           ; BSR set to: 0
 11919                           ;os.c: 638: tmp *= calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Multiplier;
 11920  014F40  C070  F060         	movff	system_calculate_output_current@tmp,___lmul@multiplier
 11921  014F44  C071  F061         	movff	system_calculate_output_current@tmp+1,___lmul@multiplier+1
 11922  014F48  C072  F062         	movff	system_calculate_output_current@tmp+2,___lmul@multiplier+2
 11923  014F4C  C073  F063         	movff	system_calculate_output_current@tmp+3,___lmul@multiplier+3
 11924  014F50  EE23  F02B         	lfsr	2,_calibrationParameters+43
 11925  014F54  CFDE F064          	movff	postinc2,___lmul@multiplicand
 11926  014F58  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 11927  014F5C  0100               	movlb	0	; () banked
 11928  014F5E  0E00               	movlw	0
 11929  014F60  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 11930  014F62  0EFF               	movlw	-1
 11931  014F64  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11932  014F66  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11933  014F68  EC3B  F0C7         	call	___lmul	;wreg free
 11934  014F6C  C060  F070         	movff	?___lmul,system_calculate_output_current@tmp
 11935  014F70  C061  F071         	movff	?___lmul+1,system_calculate_output_current@tmp+1
 11936  014F74  C062  F072         	movff	?___lmul+2,system_calculate_output_current@tmp+2
 11937  014F78  C063  F073         	movff	?___lmul+3,system_calculate_output_current@tmp+3
 11938                           
 11939                           ;os.c: 639: tmp >>= calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Shift - 1;
 11940  014F7C  C32D  F06C         	movff	_calibrationParameters+45,??_system_calculate_output_current
 11941  014F80  0EFF               	movlw	-1
 11942  014F82  0100               	movlb	0	; () banked
 11943  014F84  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 11944  014F86  0100               	movlb	0	; () banked
 11945  014F88  296C               	incf	??_system_calculate_output_current& (0+255),w,b
 11946  014F8A  0100               	movlb	0	; () banked
 11947  014F8C  6F6D               	movwf	(??_system_calculate_output_current+1)& (0+255),b
 11948  014F8E  D006               	goto	u22140
 11949  014F90                     u22145:
 11950  014F90  0100               	movlb	0	; () banked
 11951  014F92  3573               	rlcf	(system_calculate_output_current@tmp+3)& (0+255),w,b
 11952  014F94  3373               	rrcf	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11953  014F96  3372               	rrcf	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11954  014F98  3371               	rrcf	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11955  014F9A  3370               	rrcf	system_calculate_output_current@tmp& (0+255),f,b
 11956  014F9C                     u22140:
 11957  014F9C  0100               	movlb	0	; () banked
 11958  014F9E  2F6D               	decfsz	(??_system_calculate_output_current+1)& (0+255),f,b
 11959  014FA0  D7F7               	goto	u22145
 11960                           
 11961                           ;os.c: 640: tmp += 1;
 11962  014FA2  0E01               	movlw	1
 11963  014FA4  0100               	movlb	0	; () banked
 11964  014FA6  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 11965  014FA8  0E00               	movlw	0
 11966  014FAA  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11967  014FAC  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11968  014FAE  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11969                           
 11970                           ; BSR set to: 0
 11971                           ;os.c: 641: tmp >>= 1;
 11972  014FB0  0100               	movlb	0	; () banked
 11973  014FB2  3573               	rlcf	(system_calculate_output_current@tmp+3)& (0+255),w,b
 11974  014FB4  3373               	rrcf	(system_calculate_output_current@tmp+3)& (0+255),f,b
 11975  014FB6  3372               	rrcf	(system_calculate_output_current@tmp+2)& (0+255),f,b
 11976  014FB8  3371               	rrcf	(system_calculate_output_current@tmp+1)& (0+255),f,b
 11977  014FBA  3370               	rrcf	system_calculate_output_current@tmp& (0+255),f,b
 11978                           
 11979                           ; BSR set to: 0
 11980                           ;os.c: 642: os.output_current = (int16_t) tmp;
 11981  014FBC  C070  F232         	movff	system_calculate_output_current@tmp,_os+50	;volatile
 11982  014FC0  C071  F233         	movff	system_calculate_output_current@tmp+1,_os+51	;volatile
 11983  014FC4  0012               	return	
 11984  014FC6                     __end_of_system_calculate_output_current:
 11985                           	opt stack 0
 11986                           tblptru	equ	0xFF8
 11987                           tblptrh	equ	0xFF7
 11988                           tblptrl	equ	0xFF6
 11989                           tablat	equ	0xFF5
 11990                           prodh	equ	0xFF4
 11991                           prodl	equ	0xFF3
 11992                           intcon	equ	0xFF2
 11993                           intcon2	equ	0xFF1
 11994                           intcon3	equ	0xFF0
 11995                           postinc0	equ	0xFEE
 11996                           wreg	equ	0xFE8
 11997                           postdec1	equ	0xFE5
 11998                           plusw1	equ	0xFE3
 11999                           fsr1h	equ	0xFE2
 12000                           fsr1l	equ	0xFE1
 12001                           indf2	equ	0xFDF
 12002                           postinc2	equ	0xFDE
 12003                           postdec2	equ	0xFDD
 12004                           plusw2	equ	0xFDB
 12005                           fsr2h	equ	0xFDA
 12006                           fsr2l	equ	0xFD9
 12007                           status	equ	0xFD8
 12008                           
 12009 ;; *************** function _system_calculate_input_voltage *****************
 12010 ;; Defined at:
 12011 ;;		line 570 in file "os.c"
 12012 ;; Parameters:    Size  Location     Type
 12013 ;;		None
 12014 ;; Auto vars:     Size  Location     Type
 12015 ;;  tmp             4   16[BANK0 ] long 
 12016 ;; Return value:  Size  Location     Type
 12017 ;;                  1    wreg      void 
 12018 ;; Registers used:
 12019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12020 ;; Tracked objects:
 12021 ;;		On entry : 0/0
 12022 ;;		On exit  : 0/0
 12023 ;;		Unchanged: 0/0
 12024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12026 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12027 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12028 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12029 ;;Total ram usage:        8 bytes
 12030 ;; Hardware stack levels used:    1
 12031 ;; Hardware stack levels required when called:   11
 12032 ;; This function calls:
 12033 ;;		___lmul
 12034 ;; This function is called by:
 12035 ;;		_main
 12036 ;; This function uses a non-reentrant model
 12037 ;;
 12038                           
 12039                           	psect	text47
 12040  01652A                     __ptext47:
 12041                           	opt stack 0
 12042  01652A                     _system_calculate_input_voltage:
 12043                           	opt stack 19
 12044                           
 12045                           ;os.c: 572: int32_t tmp = (int32_t) (os.input_voltage_adc[0] + os.input_voltage_adc[1] +
      +                           os.input_voltage_adc[2] + os.input_voltage_adc[3]);
 12046                           
 12047                           ;incstack = 0
 12048  01652A  0102               	movlb	2	; () banked
 12049  01652C  510C               	movf	(_os+12)& (0+255),w,b	;volatile
 12050  01652E  0102               	movlb	2	; () banked
 12051  016530  250A               	addwf	(_os+10)& (0+255),w,b	;volatile
 12052  016532  0100               	movlb	0	; () banked
 12053  016534  6F6C               	movwf	??_system_calculate_input_voltage& (0+255),b
 12054  016536  0102               	movlb	2	; () banked
 12055  016538  510D               	movf	(_os+13)& (0+255),w,b	;volatile
 12056  01653A  0102               	movlb	2	; () banked
 12057  01653C  210B               	addwfc	(_os+11)& (0+255),w,b	;volatile
 12058  01653E  0100               	movlb	0	; () banked
 12059  016540  6F6D               	movwf	(??_system_calculate_input_voltage+1)& (0+255),b
 12060  016542  0102               	movlb	2	; () banked
 12061  016544  510E               	movf	(_os+14)& (0+255),w,b	;volatile
 12062  016546  0100               	movlb	0	; () banked
 12063  016548  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 12064  01654A  0102               	movlb	2	; () banked
 12065  01654C  510F               	movf	(_os+15)& (0+255),w,b	;volatile
 12066  01654E  0100               	movlb	0	; () banked
 12067  016550  236D               	addwfc	(??_system_calculate_input_voltage+1)& (0+255),f,b
 12068  016552  0102               	movlb	2	; () banked
 12069  016554  5110               	movf	(_os+16)& (0+255),w,b	;volatile
 12070  016556  0100               	movlb	0	; () banked
 12071  016558  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 12072  01655A  0102               	movlb	2	; () banked
 12073  01655C  5111               	movf	(_os+17)& (0+255),w,b	;volatile
 12074  01655E  0100               	movlb	0	; () banked
 12075  016560  236D               	addwfc	(??_system_calculate_input_voltage+1)& (0+255),f,b
 12076  016562  C06C  F070         	movff	??_system_calculate_input_voltage,system_calculate_input_voltage@tmp
 12077  016566  C06D  F071         	movff	??_system_calculate_input_voltage+1,system_calculate_input_voltage@tmp+1
 12078  01656A  0100               	movlb	0	; () banked
 12079  01656C  0E00               	movlw	0
 12080  01656E  BF71               	btfsc	(system_calculate_input_voltage@tmp+1)& (0+255),7,b
 12081  016570  0EFF               	movlw	-1
 12082  016572  6F72               	movwf	(system_calculate_input_voltage@tmp+2)& (0+255),b
 12083  016574  6F73               	movwf	(system_calculate_input_voltage@tmp+3)& (0+255),b
 12084                           
 12085                           ;os.c: 573: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Offset;
 12086  016576  C305  F06C         	movff	_calibrationParameters+5,??_system_calculate_input_voltage
 12087  01657A  C306  F06D         	movff	_calibrationParameters+6,??_system_calculate_input_voltage+1
 12088  01657E  0E00               	movlw	0
 12089  016580  0100               	movlb	0	; () banked
 12090  016582  BF6D               	btfsc	(??_system_calculate_input_voltage+1)& (0+255),7,b
 12091  016584  0EFF               	movlw	255
 12092  016586  6F6E               	movwf	(??_system_calculate_input_voltage+2)& (0+255),b
 12093  016588  6F6F               	movwf	(??_system_calculate_input_voltage+3)& (0+255),b
 12094  01658A  0100               	movlb	0	; () banked
 12095  01658C  516C               	movf	??_system_calculate_input_voltage& (0+255),w,b
 12096  01658E  0100               	movlb	0	; () banked
 12097  016590  2770               	addwf	system_calculate_input_voltage@tmp& (0+255),f,b
 12098  016592  0100               	movlb	0	; () banked
 12099  016594  516D               	movf	(??_system_calculate_input_voltage+1)& (0+255),w,b
 12100  016596  0100               	movlb	0	; () banked
 12101  016598  2371               	addwfc	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12102  01659A  0100               	movlb	0	; () banked
 12103  01659C  516E               	movf	(??_system_calculate_input_voltage+2)& (0+255),w,b
 12104  01659E  0100               	movlb	0	; () banked
 12105  0165A0  2372               	addwfc	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12106  0165A2  0100               	movlb	0	; () banked
 12107  0165A4  516F               	movf	(??_system_calculate_input_voltage+3)& (0+255),w,b
 12108  0165A6  0100               	movlb	0	; () banked
 12109  0165A8  2373               	addwfc	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12110                           
 12111                           ; BSR set to: 0
 12112                           ;os.c: 574: tmp *= calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Multiplier;
 12113  0165AA  C070  F060         	movff	system_calculate_input_voltage@tmp,___lmul@multiplier
 12114  0165AE  C071  F061         	movff	system_calculate_input_voltage@tmp+1,___lmul@multiplier+1
 12115  0165B2  C072  F062         	movff	system_calculate_input_voltage@tmp+2,___lmul@multiplier+2
 12116  0165B6  C073  F063         	movff	system_calculate_input_voltage@tmp+3,___lmul@multiplier+3
 12117  0165BA  EE23  F007         	lfsr	2,_calibrationParameters+7
 12118  0165BE  CFDE F064          	movff	postinc2,___lmul@multiplicand
 12119  0165C2  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 12120  0165C6  0100               	movlb	0	; () banked
 12121  0165C8  0E00               	movlw	0
 12122  0165CA  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 12123  0165CC  0EFF               	movlw	-1
 12124  0165CE  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12125  0165D0  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12126  0165D2  EC3B  F0C7         	call	___lmul	;wreg free
 12127  0165D6  C060  F070         	movff	?___lmul,system_calculate_input_voltage@tmp
 12128  0165DA  C061  F071         	movff	?___lmul+1,system_calculate_input_voltage@tmp+1
 12129  0165DE  C062  F072         	movff	?___lmul+2,system_calculate_input_voltage@tmp+2
 12130  0165E2  C063  F073         	movff	?___lmul+3,system_calculate_input_voltage@tmp+3
 12131                           
 12132                           ;os.c: 575: tmp >>= calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Shift - 1;
 12133  0165E6  C309  F06C         	movff	_calibrationParameters+9,??_system_calculate_input_voltage
 12134  0165EA  0EFF               	movlw	-1
 12135  0165EC  0100               	movlb	0	; () banked
 12136  0165EE  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 12137  0165F0  0100               	movlb	0	; () banked
 12138  0165F2  296C               	incf	??_system_calculate_input_voltage& (0+255),w,b
 12139  0165F4  0100               	movlb	0	; () banked
 12140  0165F6  6F6D               	movwf	(??_system_calculate_input_voltage+1)& (0+255),b
 12141  0165F8  D006               	goto	u22110
 12142  0165FA                     u22115:
 12143  0165FA  0100               	movlb	0	; () banked
 12144  0165FC  3573               	rlcf	(system_calculate_input_voltage@tmp+3)& (0+255),w,b
 12145  0165FE  3373               	rrcf	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12146  016600  3372               	rrcf	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12147  016602  3371               	rrcf	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12148  016604  3370               	rrcf	system_calculate_input_voltage@tmp& (0+255),f,b
 12149  016606                     u22110:
 12150  016606  0100               	movlb	0	; () banked
 12151  016608  2F6D               	decfsz	(??_system_calculate_input_voltage+1)& (0+255),f,b
 12152  01660A  D7F7               	goto	u22115
 12153                           
 12154                           ;os.c: 576: tmp += 1;
 12155  01660C  0E01               	movlw	1
 12156  01660E  0100               	movlb	0	; () banked
 12157  016610  2770               	addwf	system_calculate_input_voltage@tmp& (0+255),f,b
 12158  016612  0E00               	movlw	0
 12159  016614  2371               	addwfc	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12160  016616  2372               	addwfc	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12161  016618  2373               	addwfc	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12162                           
 12163                           ; BSR set to: 0
 12164                           ;os.c: 577: tmp >>= 1;
 12165  01661A  0100               	movlb	0	; () banked
 12166  01661C  3573               	rlcf	(system_calculate_input_voltage@tmp+3)& (0+255),w,b
 12167  01661E  3373               	rrcf	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12168  016620  3372               	rrcf	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12169  016622  3371               	rrcf	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12170  016624  3370               	rrcf	system_calculate_input_voltage@tmp& (0+255),f,b
 12171                           
 12172                           ; BSR set to: 0
 12173                           ;os.c: 578: os.input_voltage = (int16_t) tmp;
 12174  016626  C070  F212         	movff	system_calculate_input_voltage@tmp,_os+18	;volatile
 12175  01662A  C071  F213         	movff	system_calculate_input_voltage@tmp+1,_os+19	;volatile
 12176                           
 12177                           ; BSR set to: 0
 12178  01662E  0012               	return		;funcret
 12179  016630                     __end_of_system_calculate_input_voltage:
 12180                           	opt stack 0
 12181                           tblptru	equ	0xFF8
 12182                           tblptrh	equ	0xFF7
 12183                           tblptrl	equ	0xFF6
 12184                           tablat	equ	0xFF5
 12185                           prodh	equ	0xFF4
 12186                           prodl	equ	0xFF3
 12187                           intcon	equ	0xFF2
 12188                           intcon2	equ	0xFF1
 12189                           intcon3	equ	0xFF0
 12190                           postinc0	equ	0xFEE
 12191                           wreg	equ	0xFE8
 12192                           postdec1	equ	0xFE5
 12193                           plusw1	equ	0xFE3
 12194                           fsr1h	equ	0xFE2
 12195                           fsr1l	equ	0xFE1
 12196                           indf2	equ	0xFDF
 12197                           postinc2	equ	0xFDE
 12198                           postdec2	equ	0xFDD
 12199                           plusw2	equ	0xFDB
 12200                           fsr2h	equ	0xFDA
 12201                           fsr2l	equ	0xFD9
 12202                           status	equ	0xFD8
 12203                           
 12204 ;; *************** function _system_calculate_input_current *****************
 12205 ;; Defined at:
 12206 ;;		line 604 in file "os.c"
 12207 ;; Parameters:    Size  Location     Type
 12208 ;;		None
 12209 ;; Auto vars:     Size  Location     Type
 12210 ;;  tmp             4   16[BANK0 ] long 
 12211 ;; Return value:  Size  Location     Type
 12212 ;;                  1    wreg      void 
 12213 ;; Registers used:
 12214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12215 ;; Tracked objects:
 12216 ;;		On entry : 0/0
 12217 ;;		On exit  : 0/0
 12218 ;;		Unchanged: 0/0
 12219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12221 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12222 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12223 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12224 ;;Total ram usage:        8 bytes
 12225 ;; Hardware stack levels used:    1
 12226 ;; Hardware stack levels required when called:   11
 12227 ;; This function calls:
 12228 ;;		___lmul
 12229 ;;		_buck_get_mode
 12230 ;; This function is called by:
 12231 ;;		_main
 12232 ;; This function uses a non-reentrant model
 12233 ;;
 12234                           
 12235                           	psect	text48
 12236  014FC6                     __ptext48:
 12237                           	opt stack 0
 12238  014FC6                     _system_calculate_input_current:
 12239                           	opt stack 19
 12240                           
 12241                           ;os.c: 606: int32_t tmp;
 12242                           ;os.c: 608: if((buck_get_mode()==BUCK_STATUS_OFF) || (buck_get_mode()==BUCK_STATUS_REMOT
      +                          E_OFF))
 12243                           
 12244                           ; BSR set to: 0
 12245                           ;incstack = 0
 12246  014FC6  ECEF  F0D5         	call	_buck_get_mode	;wreg free
 12247  014FCA  0900               	iorlw	0
 12248  014FCC  B4D8               	btfsc	status,2,c
 12249  014FCE  D005               	goto	l22434
 12250  014FD0  ECEF  F0D5         	call	_buck_get_mode	;wreg free
 12251  014FD4  0A80               	xorlw	128
 12252  014FD6  A4D8               	btfss	status,2,c
 12253  014FD8  D006               	goto	l22436
 12254  014FDA                     l22434:
 12255                           
 12256                           ;os.c: 609: {
 12257                           ;os.c: 610: os.input_current = 0;
 12258  014FDA  0E00               	movlw	0
 12259  014FDC  0102               	movlb	2	; () banked
 12260  014FDE  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 12261  014FE0  0E00               	movlw	0
 12262  014FE2  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 12263                           
 12264                           ;os.c: 611: }
 12265  014FE4  0012               	return	
 12266  014FE6                     l22436:
 12267                           
 12268                           ;os.c: 612: else
 12269                           ;os.c: 613: {
 12270                           ;os.c: 614: tmp = (int32_t) (os.input_current_adc[0] + os.input_current_adc[1] + os.inpu
      +                          t_current_adc[2] + os.input_current_adc[3]);
 12271  014FE6  0102               	movlb	2	; () banked
 12272  014FE8  5116               	movf	(_os+22)& (0+255),w,b	;volatile
 12273  014FEA  0102               	movlb	2	; () banked
 12274  014FEC  2514               	addwf	(_os+20)& (0+255),w,b	;volatile
 12275  014FEE  0100               	movlb	0	; () banked
 12276  014FF0  6F6C               	movwf	??_system_calculate_input_current& (0+255),b
 12277  014FF2  0102               	movlb	2	; () banked
 12278  014FF4  5117               	movf	(_os+23)& (0+255),w,b	;volatile
 12279  014FF6  0102               	movlb	2	; () banked
 12280  014FF8  2115               	addwfc	(_os+21)& (0+255),w,b	;volatile
 12281  014FFA  0100               	movlb	0	; () banked
 12282  014FFC  6F6D               	movwf	(??_system_calculate_input_current+1)& (0+255),b
 12283  014FFE  0102               	movlb	2	; () banked
 12284  015000  5118               	movf	(_os+24)& (0+255),w,b	;volatile
 12285  015002  0100               	movlb	0	; () banked
 12286  015004  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 12287  015006  0102               	movlb	2	; () banked
 12288  015008  5119               	movf	(_os+25)& (0+255),w,b	;volatile
 12289  01500A  0100               	movlb	0	; () banked
 12290  01500C  236D               	addwfc	(??_system_calculate_input_current+1)& (0+255),f,b
 12291  01500E  0102               	movlb	2	; () banked
 12292  015010  511A               	movf	(_os+26)& (0+255),w,b	;volatile
 12293  015012  0100               	movlb	0	; () banked
 12294  015014  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 12295  015016  0102               	movlb	2	; () banked
 12296  015018  511B               	movf	(_os+27)& (0+255),w,b	;volatile
 12297  01501A  0100               	movlb	0	; () banked
 12298  01501C  236D               	addwfc	(??_system_calculate_input_current+1)& (0+255),f,b
 12299  01501E  C06C  F070         	movff	??_system_calculate_input_current,system_calculate_input_current@tmp
 12300  015022  C06D  F071         	movff	??_system_calculate_input_current+1,system_calculate_input_current@tmp+1
 12301  015026  0100               	movlb	0	; () banked
 12302  015028  0E00               	movlw	0
 12303  01502A  BF71               	btfsc	(system_calculate_input_current@tmp+1)& (0+255),7,b
 12304  01502C  0EFF               	movlw	-1
 12305  01502E  6F72               	movwf	(system_calculate_input_current@tmp+2)& (0+255),b
 12306  015030  6F73               	movwf	(system_calculate_input_current@tmp+3)& (0+255),b
 12307                           
 12308                           ;os.c: 615: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibratio
      +                          n;
 12309  015032  C322  F06C         	movff	_calibrationParameters+34,??_system_calculate_input_current
 12310  015036  C323  F06D         	movff	_calibrationParameters+35,??_system_calculate_input_current+1
 12311  01503A  0E00               	movlw	0
 12312  01503C  0100               	movlb	0	; () banked
 12313  01503E  BF6D               	btfsc	(??_system_calculate_input_current+1)& (0+255),7,b
 12314  015040  0EFF               	movlw	255
 12315  015042  6F6E               	movwf	(??_system_calculate_input_current+2)& (0+255),b
 12316  015044  6F6F               	movwf	(??_system_calculate_input_current+3)& (0+255),b
 12317  015046  0100               	movlb	0	; () banked
 12318  015048  516C               	movf	??_system_calculate_input_current& (0+255),w,b
 12319  01504A  0100               	movlb	0	; () banked
 12320  01504C  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 12321  01504E  0100               	movlb	0	; () banked
 12322  015050  516D               	movf	(??_system_calculate_input_current+1)& (0+255),w,b
 12323  015052  0100               	movlb	0	; () banked
 12324  015054  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12325  015056  0100               	movlb	0	; () banked
 12326  015058  516E               	movf	(??_system_calculate_input_current+2)& (0+255),w,b
 12327  01505A  0100               	movlb	0	; () banked
 12328  01505C  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12329  01505E  0100               	movlb	0	; () banked
 12330  015060  516F               	movf	(??_system_calculate_input_current+3)& (0+255),w,b
 12331  015062  0100               	movlb	0	; () banked
 12332  015064  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12333                           
 12334                           ;os.c: 616: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Offset;
 12335  015066  C31D  F06C         	movff	_calibrationParameters+29,??_system_calculate_input_current
 12336  01506A  C31E  F06D         	movff	_calibrationParameters+30,??_system_calculate_input_current+1
 12337  01506E  0E00               	movlw	0
 12338  015070  0100               	movlb	0	; () banked
 12339  015072  BF6D               	btfsc	(??_system_calculate_input_current+1)& (0+255),7,b
 12340  015074  0EFF               	movlw	255
 12341  015076  6F6E               	movwf	(??_system_calculate_input_current+2)& (0+255),b
 12342  015078  6F6F               	movwf	(??_system_calculate_input_current+3)& (0+255),b
 12343  01507A  0100               	movlb	0	; () banked
 12344  01507C  516C               	movf	??_system_calculate_input_current& (0+255),w,b
 12345  01507E  0100               	movlb	0	; () banked
 12346  015080  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 12347  015082  0100               	movlb	0	; () banked
 12348  015084  516D               	movf	(??_system_calculate_input_current+1)& (0+255),w,b
 12349  015086  0100               	movlb	0	; () banked
 12350  015088  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12351  01508A  0100               	movlb	0	; () banked
 12352  01508C  516E               	movf	(??_system_calculate_input_current+2)& (0+255),w,b
 12353  01508E  0100               	movlb	0	; () banked
 12354  015090  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12355  015092  0100               	movlb	0	; () banked
 12356  015094  516F               	movf	(??_system_calculate_input_current+3)& (0+255),w,b
 12357  015096  0100               	movlb	0	; () banked
 12358  015098  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12359                           
 12360                           ; BSR set to: 0
 12361                           ;os.c: 617: tmp *= calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Multiplier;
 12362  01509A  C070  F060         	movff	system_calculate_input_current@tmp,___lmul@multiplier
 12363  01509E  C071  F061         	movff	system_calculate_input_current@tmp+1,___lmul@multiplier+1
 12364  0150A2  C072  F062         	movff	system_calculate_input_current@tmp+2,___lmul@multiplier+2
 12365  0150A6  C073  F063         	movff	system_calculate_input_current@tmp+3,___lmul@multiplier+3
 12366  0150AA  EE23  F01F         	lfsr	2,_calibrationParameters+31
 12367  0150AE  CFDE F064          	movff	postinc2,___lmul@multiplicand
 12368  0150B2  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 12369  0150B6  0100               	movlb	0	; () banked
 12370  0150B8  0E00               	movlw	0
 12371  0150BA  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 12372  0150BC  0EFF               	movlw	-1
 12373  0150BE  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12374  0150C0  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12375  0150C2  EC3B  F0C7         	call	___lmul	;wreg free
 12376  0150C6  C060  F070         	movff	?___lmul,system_calculate_input_current@tmp
 12377  0150CA  C061  F071         	movff	?___lmul+1,system_calculate_input_current@tmp+1
 12378  0150CE  C062  F072         	movff	?___lmul+2,system_calculate_input_current@tmp+2
 12379  0150D2  C063  F073         	movff	?___lmul+3,system_calculate_input_current@tmp+3
 12380                           
 12381                           ;os.c: 618: tmp >>= calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Shift - 1;
 12382  0150D6  C321  F06C         	movff	_calibrationParameters+33,??_system_calculate_input_current
 12383  0150DA  0EFF               	movlw	-1
 12384  0150DC  0100               	movlb	0	; () banked
 12385  0150DE  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 12386  0150E0  0100               	movlb	0	; () banked
 12387  0150E2  296C               	incf	??_system_calculate_input_current& (0+255),w,b
 12388  0150E4  0100               	movlb	0	; () banked
 12389  0150E6  6F6D               	movwf	(??_system_calculate_input_current+1)& (0+255),b
 12390  0150E8  D006               	goto	u22270
 12391  0150EA                     u22275:
 12392  0150EA  0100               	movlb	0	; () banked
 12393  0150EC  3573               	rlcf	(system_calculate_input_current@tmp+3)& (0+255),w,b
 12394  0150EE  3373               	rrcf	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12395  0150F0  3372               	rrcf	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12396  0150F2  3371               	rrcf	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12397  0150F4  3370               	rrcf	system_calculate_input_current@tmp& (0+255),f,b
 12398  0150F6                     u22270:
 12399  0150F6  0100               	movlb	0	; () banked
 12400  0150F8  2F6D               	decfsz	(??_system_calculate_input_current+1)& (0+255),f,b
 12401  0150FA  D7F7               	goto	u22275
 12402                           
 12403                           ;os.c: 619: tmp += 1;
 12404  0150FC  0E01               	movlw	1
 12405  0150FE  0100               	movlb	0	; () banked
 12406  015100  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 12407  015102  0E00               	movlw	0
 12408  015104  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12409  015106  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12410  015108  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12411                           
 12412                           ; BSR set to: 0
 12413                           ;os.c: 620: tmp >>= 1;
 12414  01510A  0100               	movlb	0	; () banked
 12415  01510C  3573               	rlcf	(system_calculate_input_current@tmp+3)& (0+255),w,b
 12416  01510E  3373               	rrcf	(system_calculate_input_current@tmp+3)& (0+255),f,b
 12417  015110  3372               	rrcf	(system_calculate_input_current@tmp+2)& (0+255),f,b
 12418  015112  3371               	rrcf	(system_calculate_input_current@tmp+1)& (0+255),f,b
 12419  015114  3370               	rrcf	system_calculate_input_current@tmp& (0+255),f,b
 12420                           
 12421                           ; BSR set to: 0
 12422                           ;os.c: 621: os.input_current = (int16_t) tmp;
 12423  015116  C070  F21D         	movff	system_calculate_input_current@tmp,_os+29	;volatile
 12424  01511A  C071  F21E         	movff	system_calculate_input_current@tmp+1,_os+30	;volatile
 12425  01511E  0012               	return	
 12426  015120                     __end_of_system_calculate_input_current:
 12427                           	opt stack 0
 12428                           tblptru	equ	0xFF8
 12429                           tblptrh	equ	0xFF7
 12430                           tblptrl	equ	0xFF6
 12431                           tablat	equ	0xFF5
 12432                           prodh	equ	0xFF4
 12433                           prodl	equ	0xFF3
 12434                           intcon	equ	0xFF2
 12435                           intcon2	equ	0xFF1
 12436                           intcon3	equ	0xFF0
 12437                           postinc0	equ	0xFEE
 12438                           wreg	equ	0xFE8
 12439                           postdec1	equ	0xFE5
 12440                           plusw1	equ	0xFE3
 12441                           fsr1h	equ	0xFE2
 12442                           fsr1l	equ	0xFE1
 12443                           indf2	equ	0xFDF
 12444                           postinc2	equ	0xFDE
 12445                           postdec2	equ	0xFDD
 12446                           plusw2	equ	0xFDB
 12447                           fsr2h	equ	0xFDA
 12448                           fsr2l	equ	0xFD9
 12449                           status	equ	0xFD8
 12450                           
 12451 ;; *************** function _log_write_to_disk *****************
 12452 ;; Defined at:
 12453 ;;		line 199 in file "log.c"
 12454 ;; Parameters:    Size  Location     Type
 12455 ;;		None
 12456 ;; Auto vars:     Size  Location     Type
 12457 ;;  log_entry      32    1[BANK1 ] struct .
 12458 ;;  file_number     1    0[BANK1 ] unsigned char 
 12459 ;; Return value:  Size  Location     Type
 12460 ;;                  1    wreg      void 
 12461 ;; Registers used:
 12462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12463 ;; Tracked objects:
 12464 ;;		On entry : 0/0
 12465 ;;		On exit  : 0/0
 12466 ;;		Unchanged: 0/0
 12467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12469 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12471 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12472 ;;Total ram usage:       33 bytes
 12473 ;; Hardware stack levels used:    1
 12474 ;; Hardware stack levels required when called:   17
 12475 ;; This function calls:
 12476 ;;		_fat_append_to_file
 12477 ;;		_fat_create_file
 12478 ;;		_fat_find_file
 12479 ;;		_log_generate_entry
 12480 ;; This function is called by:
 12481 ;;		_main
 12482 ;; This function uses a non-reentrant model
 12483 ;;
 12484                           
 12485                           	psect	text49
 12486  0185D4                     __ptext49:
 12487                           	opt stack 0
 12488  0185D4                     _log_write_to_disk:
 12489                           	opt stack 13
 12490                           
 12491                           ;log.c: 201: uint8_t file_number;
 12492                           ;log.c: 202: logEntry_t log_entry;
 12493                           ;log.c: 205: log_generate_entry(&log_entry);
 12494                           
 12495                           ;incstack = 0
 12496  0185D4  0E01               	movlw	low log_write_to_disk@log_entry
 12497  0185D6  0100               	movlb	0	; () banked
 12498  0185D8  6F78               	movwf	log_generate_entry@log_entry& (0+255),b
 12499  0185DA  0E01               	movlw	high log_write_to_disk@log_entry
 12500  0185DC  0100               	movlb	0	; () banked
 12501  0185DE  6F79               	movwf	(log_generate_entry@log_entry+1)& (0+255),b
 12502  0185E0  EC2F  F08E         	call	_log_generate_entry	;wreg free
 12503                           
 12504                           ;log.c: 208: file_number = fat_find_file(filename, extension);
 12505  0185E4  0EEB               	movlw	low _filename
 12506  0185E6  0100               	movlb	0	; () banked
 12507  0185E8  6F87               	movwf	fat_find_file@name& (0+255),b
 12508  0185EA  0E02               	movlw	high _filename
 12509  0185EC  0100               	movlb	0	; () banked
 12510  0185EE  6F88               	movwf	(fat_find_file@name+1)& (0+255),b
 12511  0185F0  0EF4               	movlw	low _extension
 12512  0185F2  0100               	movlb	0	; () banked
 12513  0185F4  6F89               	movwf	fat_find_file@extension& (0+255),b
 12514  0185F6  0E02               	movlw	high _extension
 12515  0185F8  0100               	movlb	0	; () banked
 12516  0185FA  6F8A               	movwf	(fat_find_file@extension+1)& (0+255),b
 12517  0185FC  EC9F  F0B4         	call	_fat_find_file	;wreg free
 12518  018600  0101               	movlb	1	; () banked
 12519  018602  6F00               	movwf	log_write_to_disk@file_number& (0+255),b
 12520                           
 12521                           ; BSR set to: 1
 12522                           ;log.c: 209: if(file_number==0xFF)
 12523  018604  0101               	movlb	1	; () banked
 12524  018606  2900               	incf	log_write_to_disk@file_number& (0+255),w,b
 12525  018608  A4D8               	btfss	status,2,c
 12526  01860A  D019               	goto	l22428
 12527                           
 12528                           ; BSR set to: 1
 12529                           ;log.c: 210: {
 12530                           ;log.c: 212: file_number = fat_create_file(filename, extension, 0);
 12531  01860C  0EEB               	movlw	low _filename
 12532  01860E  0100               	movlb	0	; () banked
 12533  018610  6F9B               	movwf	fat_create_file@name& (0+255),b
 12534  018612  0E02               	movlw	high _filename
 12535  018614  0100               	movlb	0	; () banked
 12536  018616  6F9C               	movwf	(fat_create_file@name+1)& (0+255),b
 12537  018618  0EF4               	movlw	low _extension
 12538  01861A  0100               	movlb	0	; () banked
 12539  01861C  6F9D               	movwf	fat_create_file@extension& (0+255),b
 12540  01861E  0E02               	movlw	high _extension
 12541  018620  0100               	movlb	0	; () banked
 12542  018622  6F9E               	movwf	(fat_create_file@extension+1)& (0+255),b
 12543  018624  0E00               	movlw	0
 12544  018626  0100               	movlb	0	; () banked
 12545  018628  6F9F               	movwf	fat_create_file@size& (0+255),b
 12546  01862A  0E00               	movlw	0
 12547  01862C  6FA0               	movwf	(fat_create_file@size+1)& (0+255),b
 12548  01862E  0E00               	movlw	0
 12549  018630  6FA1               	movwf	(fat_create_file@size+2)& (0+255),b
 12550  018632  0E00               	movlw	0
 12551  018634  6FA2               	movwf	(fat_create_file@size+3)& (0+255),b
 12552  018636  EC1E  F0A3         	call	_fat_create_file	;wreg free
 12553  01863A  0101               	movlb	1	; () banked
 12554  01863C  6F00               	movwf	log_write_to_disk@file_number& (0+255),b
 12555  01863E                     l22428:
 12556                           
 12557                           ; BSR set to: 1
 12558                           ;log.c: 213: }
 12559                           ;log.c: 216: fat_append_to_file(file_number, sizeof(logEntry_t), &log_entry);
 12560  01863E  0E00               	movlw	0
 12561  018640  0100               	movlb	0	; () banked
 12562  018642  6F92               	movwf	(fat_append_to_file@number_of_bytes+1)& (0+255),b
 12563  018644  0E20               	movlw	32
 12564  018646  6F91               	movwf	fat_append_to_file@number_of_bytes& (0+255),b
 12565  018648  0E01               	movlw	low log_write_to_disk@log_entry
 12566  01864A  0100               	movlb	0	; () banked
 12567  01864C  6F93               	movwf	fat_append_to_file@data& (0+255),b
 12568  01864E  0E01               	movlw	high log_write_to_disk@log_entry
 12569  018650  0100               	movlb	0	; () banked
 12570  018652  6F94               	movwf	(fat_append_to_file@data+1)& (0+255),b
 12571  018654  0101               	movlb	1	; () banked
 12572  018656  5100               	movf	log_write_to_disk@file_number& (0+255),w,b
 12573  018658  EC2B  F098         	call	_fat_append_to_file
 12574  01865C  0012               	return		;funcret
 12575  01865E                     __end_of_log_write_to_disk:
 12576                           	opt stack 0
 12577                           tblptru	equ	0xFF8
 12578                           tblptrh	equ	0xFF7
 12579                           tblptrl	equ	0xFF6
 12580                           tablat	equ	0xFF5
 12581                           prodh	equ	0xFF4
 12582                           prodl	equ	0xFF3
 12583                           intcon	equ	0xFF2
 12584                           intcon2	equ	0xFF1
 12585                           intcon3	equ	0xFF0
 12586                           postinc0	equ	0xFEE
 12587                           wreg	equ	0xFE8
 12588                           postdec1	equ	0xFE5
 12589                           plusw1	equ	0xFE3
 12590                           fsr1h	equ	0xFE2
 12591                           fsr1l	equ	0xFE1
 12592                           indf2	equ	0xFDF
 12593                           postinc2	equ	0xFDE
 12594                           postdec2	equ	0xFDD
 12595                           plusw2	equ	0xFDB
 12596                           fsr2h	equ	0xFDA
 12597                           fsr2l	equ	0xFD9
 12598                           status	equ	0xFD8
 12599                           
 12600 ;; *************** function _log_generate_entry *****************
 12601 ;; Defined at:
 12602 ;;		line 174 in file "log.c"
 12603 ;; Parameters:    Size  Location     Type
 12604 ;;  log_entry       2   24[BANK0 ] PTR struct .
 12605 ;;		 -> log_write_to_disk@log_entry(32), 
 12606 ;; Auto vars:     Size  Location     Type
 12607 ;;		None
 12608 ;; Return value:  Size  Location     Type
 12609 ;;                  1    wreg      void 
 12610 ;; Registers used:
 12611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12612 ;; Tracked objects:
 12613 ;;		On entry : 0/0
 12614 ;;		On exit  : 0/0
 12615 ;;		Unchanged: 0/0
 12616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12617 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12619 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12620 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12621 ;;Total ram usage:        4 bytes
 12622 ;; Hardware stack levels used:    1
 12623 ;; Hardware stack levels required when called:   13
 12624 ;; This function calls:
 12625 ;;		___aldiv
 12626 ;;		___lldiv
 12627 ;;		__get_checksum
 12628 ;;		__get_dateTime
 12629 ;;		__get_temperature
 12630 ;; This function is called by:
 12631 ;;		_log_write_to_disk
 12632 ;; This function uses a non-reentrant model
 12633 ;;
 12634                           
 12635                           	psect	text50
 12636  011C5E                     __ptext50:
 12637                           	opt stack 0
 12638  011C5E                     _log_generate_entry:
 12639                           	opt stack 16
 12640                           
 12641                           ;log.c: 176: log_entry->dateTime = _get_dateTime();
 12642                           
 12643                           ;incstack = 0
 12644  011C5E  EC19  F0A4         	call	__get_dateTime	;wreg free
 12645  011C62  C078  FFD9         	movff	log_generate_entry@log_entry,fsr2l
 12646  011C66  C079  FFDA         	movff	log_generate_entry@log_entry+1,fsr2h
 12647  011C6A  0100               	movlb	0	; () banked
 12648  011C6C  C064  FFDE         	movff	?__get_dateTime,postinc2
 12649  011C70  0100               	movlb	0	; () banked
 12650  011C72  C065  FFDE         	movff	?__get_dateTime+1,postinc2
 12651  011C76  0100               	movlb	0	; () banked
 12652  011C78  C066  FFDE         	movff	?__get_dateTime+2,postinc2
 12653  011C7C  0100               	movlb	0	; () banked
 12654  011C7E  C067  FFDE         	movff	?__get_dateTime+3,postinc2
 12655                           
 12656                           ; BSR set to: 0
 12657                           ;log.c: 177: log_entry->inputVoltage = inputVoltageSum / averageCount;
 12658  011C82  C29A  F060         	movff	_inputVoltageSum,___lldiv@dividend
 12659  011C86  C29B  F061         	movff	_inputVoltageSum+1,___lldiv@dividend+1
 12660  011C8A  C29C  F062         	movff	_inputVoltageSum+2,___lldiv@dividend+2
 12661  011C8E  C29D  F063         	movff	_inputVoltageSum+3,___lldiv@dividend+3
 12662  011C92  C016  F064         	movff	_averageCount,___lldiv@divisor
 12663  011C96  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12664  011C9A  0100               	movlb	0	; () banked
 12665  011C9C  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12666  011C9E  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12667  011CA0  ECF0  F0BC         	call	___lldiv	;wreg free
 12668  011CA4  0100               	movlb	0	; () banked
 12669  011CA6  EE20 F004          	lfsr	2,4
 12670  011CAA  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12671  011CAC  26D9               	addwf	fsr2l,f,c
 12672  011CAE  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12673  011CB0  22DA               	addwfc	fsr2h,f,c
 12674  011CB2  0100               	movlb	0	; () banked
 12675  011CB4  C060  FFDE         	movff	?___lldiv,postinc2
 12676  011CB8  0100               	movlb	0	; () banked
 12677  011CBA  C061  FFDD         	movff	?___lldiv+1,postdec2
 12678                           
 12679                           ; BSR set to: 0
 12680                           ;log.c: 178: log_entry->inputCurrent = inputCurrentSum / averageCount;
 12681  011CBE  C296  F060         	movff	_inputCurrentSum,___lldiv@dividend
 12682  011CC2  C297  F061         	movff	_inputCurrentSum+1,___lldiv@dividend+1
 12683  011CC6  C298  F062         	movff	_inputCurrentSum+2,___lldiv@dividend+2
 12684  011CCA  C299  F063         	movff	_inputCurrentSum+3,___lldiv@dividend+3
 12685  011CCE  C016  F064         	movff	_averageCount,___lldiv@divisor
 12686  011CD2  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12687  011CD6  0100               	movlb	0	; () banked
 12688  011CD8  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12689  011CDA  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12690  011CDC  ECF0  F0BC         	call	___lldiv	;wreg free
 12691  011CE0  0100               	movlb	0	; () banked
 12692  011CE2  EE20 F006          	lfsr	2,6
 12693  011CE6  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12694  011CE8  26D9               	addwf	fsr2l,f,c
 12695  011CEA  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12696  011CEC  22DA               	addwfc	fsr2h,f,c
 12697  011CEE  0100               	movlb	0	; () banked
 12698  011CF0  C060  FFDE         	movff	?___lldiv,postinc2
 12699  011CF4  0100               	movlb	0	; () banked
 12700  011CF6  C061  FFDD         	movff	?___lldiv+1,postdec2
 12701                           
 12702                           ; BSR set to: 0
 12703                           ;log.c: 179: log_entry->outputVoltage = outputVoltageSum / averageCount;
 12704  011CFA  C292  F060         	movff	_outputVoltageSum,___lldiv@dividend
 12705  011CFE  C293  F061         	movff	_outputVoltageSum+1,___lldiv@dividend+1
 12706  011D02  C294  F062         	movff	_outputVoltageSum+2,___lldiv@dividend+2
 12707  011D06  C295  F063         	movff	_outputVoltageSum+3,___lldiv@dividend+3
 12708  011D0A  C016  F064         	movff	_averageCount,___lldiv@divisor
 12709  011D0E  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12710  011D12  0100               	movlb	0	; () banked
 12711  011D14  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12712  011D16  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12713  011D18  ECF0  F0BC         	call	___lldiv	;wreg free
 12714  011D1C  0100               	movlb	0	; () banked
 12715  011D1E  EE20 F008          	lfsr	2,8
 12716  011D22  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12717  011D24  26D9               	addwf	fsr2l,f,c
 12718  011D26  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12719  011D28  22DA               	addwfc	fsr2h,f,c
 12720  011D2A  0100               	movlb	0	; () banked
 12721  011D2C  C060  FFDE         	movff	?___lldiv,postinc2
 12722  011D30  0100               	movlb	0	; () banked
 12723  011D32  C061  FFDD         	movff	?___lldiv+1,postdec2
 12724                           
 12725                           ; BSR set to: 0
 12726                           ;log.c: 180: log_entry->outputCurrent = outputCurrentSum / averageCount;
 12727  011D36  C28E  F060         	movff	_outputCurrentSum,___lldiv@dividend
 12728  011D3A  C28F  F061         	movff	_outputCurrentSum+1,___lldiv@dividend+1
 12729  011D3E  C290  F062         	movff	_outputCurrentSum+2,___lldiv@dividend+2
 12730  011D42  C291  F063         	movff	_outputCurrentSum+3,___lldiv@dividend+3
 12731  011D46  C016  F064         	movff	_averageCount,___lldiv@divisor
 12732  011D4A  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12733  011D4E  0100               	movlb	0	; () banked
 12734  011D50  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12735  011D52  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12736  011D54  ECF0  F0BC         	call	___lldiv	;wreg free
 12737  011D58  0100               	movlb	0	; () banked
 12738  011D5A  EE20 F00A          	lfsr	2,10
 12739  011D5E  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12740  011D60  26D9               	addwf	fsr2l,f,c
 12741  011D62  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12742  011D64  22DA               	addwfc	fsr2h,f,c
 12743  011D66  0100               	movlb	0	; () banked
 12744  011D68  C060  FFDE         	movff	?___lldiv,postinc2
 12745  011D6C  0100               	movlb	0	; () banked
 12746  011D6E  C061  FFDD         	movff	?___lldiv+1,postdec2
 12747                           
 12748                           ; BSR set to: 0
 12749                           ;log.c: 181: log_entry->inputPower = inputPowerSum / averageCount;
 12750  011D72  C28A  F060         	movff	_inputPowerSum,___lldiv@dividend
 12751  011D76  C28B  F061         	movff	_inputPowerSum+1,___lldiv@dividend+1
 12752  011D7A  C28C  F062         	movff	_inputPowerSum+2,___lldiv@dividend+2
 12753  011D7E  C28D  F063         	movff	_inputPowerSum+3,___lldiv@dividend+3
 12754  011D82  C016  F064         	movff	_averageCount,___lldiv@divisor
 12755  011D86  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12756  011D8A  0100               	movlb	0	; () banked
 12757  011D8C  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12758  011D8E  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12759  011D90  ECF0  F0BC         	call	___lldiv	;wreg free
 12760  011D94  0100               	movlb	0	; () banked
 12761  011D96  EE20 F00C          	lfsr	2,12
 12762  011D9A  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12763  011D9C  26D9               	addwf	fsr2l,f,c
 12764  011D9E  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12765  011DA0  22DA               	addwfc	fsr2h,f,c
 12766  011DA2  0100               	movlb	0	; () banked
 12767  011DA4  C060  FFDE         	movff	?___lldiv,postinc2
 12768  011DA8  0100               	movlb	0	; () banked
 12769  011DAA  C061  FFDD         	movff	?___lldiv+1,postdec2
 12770                           
 12771                           ; BSR set to: 0
 12772                           ;log.c: 182: log_entry->outputPower = outputPowerSum / averageCount;
 12773  011DAE  C286  F060         	movff	_outputPowerSum,___lldiv@dividend
 12774  011DB2  C287  F061         	movff	_outputPowerSum+1,___lldiv@dividend+1
 12775  011DB6  C288  F062         	movff	_outputPowerSum+2,___lldiv@dividend+2
 12776  011DBA  C289  F063         	movff	_outputPowerSum+3,___lldiv@dividend+3
 12777  011DBE  C016  F064         	movff	_averageCount,___lldiv@divisor
 12778  011DC2  C017  F065         	movff	_averageCount+1,___lldiv@divisor+1
 12779  011DC6  0100               	movlb	0	; () banked
 12780  011DC8  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 12781  011DCA  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 12782  011DCC  ECF0  F0BC         	call	___lldiv	;wreg free
 12783  011DD0  0100               	movlb	0	; () banked
 12784  011DD2  EE20 F00E          	lfsr	2,14
 12785  011DD6  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12786  011DD8  26D9               	addwf	fsr2l,f,c
 12787  011DDA  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12788  011DDC  22DA               	addwfc	fsr2h,f,c
 12789  011DDE  0100               	movlb	0	; () banked
 12790  011DE0  C060  FFDE         	movff	?___lldiv,postinc2
 12791  011DE4  0100               	movlb	0	; () banked
 12792  011DE6  C061  FFDD         	movff	?___lldiv+1,postdec2
 12793                           
 12794                           ; BSR set to: 0
 12795                           ;log.c: 183: log_entry->inputCapacity = (inputCapacitySum+500) / 1000;
 12796  011DEA  0EF4               	movlw	244
 12797  011DEC  0102               	movlb	2	; () banked
 12798  011DEE  2582               	addwf	_inputCapacitySum& (0+255),w,b
 12799  011DF0  0100               	movlb	0	; () banked
 12800  011DF2  6F60               	movwf	___lldiv@dividend& (0+255),b
 12801  011DF4  0E01               	movlw	1
 12802  011DF6  0102               	movlb	2	; () banked
 12803  011DF8  2183               	addwfc	(_inputCapacitySum+1)& (0+255),w,b
 12804  011DFA  0100               	movlb	0	; () banked
 12805  011DFC  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 12806  011DFE  0E00               	movlw	0
 12807  011E00  0102               	movlb	2	; () banked
 12808  011E02  2184               	addwfc	(_inputCapacitySum+2)& (0+255),w,b
 12809  011E04  0100               	movlb	0	; () banked
 12810  011E06  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 12811  011E08  0E00               	movlw	0
 12812  011E0A  0102               	movlb	2	; () banked
 12813  011E0C  2185               	addwfc	(_inputCapacitySum+3)& (0+255),w,b
 12814  011E0E  0100               	movlb	0	; () banked
 12815  011E10  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 12816  011E12  0EE8               	movlw	232
 12817  011E14  0100               	movlb	0	; () banked
 12818  011E16  6F64               	movwf	___lldiv@divisor& (0+255),b
 12819  011E18  0E03               	movlw	3
 12820  011E1A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12821  011E1C  0E00               	movlw	0
 12822  011E1E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12823  011E20  0E00               	movlw	0
 12824  011E22  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12825  011E24  ECF0  F0BC         	call	___lldiv	;wreg free
 12826  011E28  0100               	movlb	0	; () banked
 12827  011E2A  EE20 F010          	lfsr	2,16
 12828  011E2E  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12829  011E30  26D9               	addwf	fsr2l,f,c
 12830  011E32  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12831  011E34  22DA               	addwfc	fsr2h,f,c
 12832  011E36  0100               	movlb	0	; () banked
 12833  011E38  C060  FFDE         	movff	?___lldiv,postinc2
 12834  011E3C  0100               	movlb	0	; () banked
 12835  011E3E  C061  FFDD         	movff	?___lldiv+1,postdec2
 12836                           
 12837                           ; BSR set to: 0
 12838                           ;log.c: 184: log_entry->outputCapacity = (outputCapacitySum+500) / 1000;
 12839  011E42  0EF4               	movlw	244
 12840  011E44  0102               	movlb	2	; () banked
 12841  011E46  257E               	addwf	_outputCapacitySum& (0+255),w,b
 12842  011E48  0100               	movlb	0	; () banked
 12843  011E4A  6F60               	movwf	___lldiv@dividend& (0+255),b
 12844  011E4C  0E01               	movlw	1
 12845  011E4E  0102               	movlb	2	; () banked
 12846  011E50  217F               	addwfc	(_outputCapacitySum+1)& (0+255),w,b
 12847  011E52  0100               	movlb	0	; () banked
 12848  011E54  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 12849  011E56  0E00               	movlw	0
 12850  011E58  0102               	movlb	2	; () banked
 12851  011E5A  2180               	addwfc	(_outputCapacitySum+2)& (0+255),w,b
 12852  011E5C  0100               	movlb	0	; () banked
 12853  011E5E  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 12854  011E60  0E00               	movlw	0
 12855  011E62  0102               	movlb	2	; () banked
 12856  011E64  2181               	addwfc	(_outputCapacitySum+3)& (0+255),w,b
 12857  011E66  0100               	movlb	0	; () banked
 12858  011E68  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 12859  011E6A  0EE8               	movlw	232
 12860  011E6C  0100               	movlb	0	; () banked
 12861  011E6E  6F64               	movwf	___lldiv@divisor& (0+255),b
 12862  011E70  0E03               	movlw	3
 12863  011E72  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12864  011E74  0E00               	movlw	0
 12865  011E76  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12866  011E78  0E00               	movlw	0
 12867  011E7A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12868  011E7C  ECF0  F0BC         	call	___lldiv	;wreg free
 12869  011E80  0100               	movlb	0	; () banked
 12870  011E82  EE20 F012          	lfsr	2,18
 12871  011E86  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12872  011E88  26D9               	addwf	fsr2l,f,c
 12873  011E8A  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12874  011E8C  22DA               	addwfc	fsr2h,f,c
 12875  011E8E  0100               	movlb	0	; () banked
 12876  011E90  C060  FFDE         	movff	?___lldiv,postinc2
 12877  011E94  0100               	movlb	0	; () banked
 12878  011E96  C061  FFDD         	movff	?___lldiv+1,postdec2
 12879                           
 12880                           ; BSR set to: 0
 12881                           ;log.c: 185: log_entry->temperatureOnboard = _get_temperature(temperatureOnboardSum/aver
      +                          ageCount);
 12882  011E9A  0100               	movlb	0	; () banked
 12883  011E9C  EE20 F014          	lfsr	2,20
 12884  011EA0  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12885  011EA2  26D9               	addwf	fsr2l,f,c
 12886  011EA4  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12887  011EA6  22DA               	addwfc	fsr2h,f,c
 12888  011EA8  C27A  F060         	movff	_temperatureOnboardSum,___aldiv@dividend
 12889  011EAC  C27B  F061         	movff	_temperatureOnboardSum+1,___aldiv@dividend+1
 12890  011EB0  C27C  F062         	movff	_temperatureOnboardSum+2,___aldiv@dividend+2
 12891  011EB4  C27D  F063         	movff	_temperatureOnboardSum+3,___aldiv@dividend+3
 12892  011EB8  C016  F064         	movff	_averageCount,___aldiv@divisor
 12893  011EBC  C017  F065         	movff	_averageCount+1,___aldiv@divisor+1
 12894  011EC0  0100               	movlb	0	; () banked
 12895  011EC2  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 12896  011EC4  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 12897  011EC6  ECEA  F0AF         	call	___aldiv	;wreg free
 12898  011ECA  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 12899  011ECE  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 12900  011ED2  ECD1  F0D1         	call	__get_temperature	;wreg free
 12901  011ED6  6EDF               	movwf	indf2,c
 12902                           
 12903                           ;log.c: 186: log_entry->temperatureExternal1 = _get_temperature(temperatureExternal1Sum/
      +                          averageCount);
 12904  011ED8  0100               	movlb	0	; () banked
 12905  011EDA  EE20 F015          	lfsr	2,21
 12906  011EDE  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12907  011EE0  26D9               	addwf	fsr2l,f,c
 12908  011EE2  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12909  011EE4  22DA               	addwfc	fsr2h,f,c
 12910  011EE6  C276  F060         	movff	_temperatureExternal1Sum,___aldiv@dividend
 12911  011EEA  C277  F061         	movff	_temperatureExternal1Sum+1,___aldiv@dividend+1
 12912  011EEE  C278  F062         	movff	_temperatureExternal1Sum+2,___aldiv@dividend+2
 12913  011EF2  C279  F063         	movff	_temperatureExternal1Sum+3,___aldiv@dividend+3
 12914  011EF6  C016  F064         	movff	_averageCount,___aldiv@divisor
 12915  011EFA  C017  F065         	movff	_averageCount+1,___aldiv@divisor+1
 12916  011EFE  0100               	movlb	0	; () banked
 12917  011F00  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 12918  011F02  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 12919  011F04  ECEA  F0AF         	call	___aldiv	;wreg free
 12920  011F08  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 12921  011F0C  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 12922  011F10  ECD1  F0D1         	call	__get_temperature	;wreg free
 12923  011F14  6EDF               	movwf	indf2,c
 12924                           
 12925                           ;log.c: 187: log_entry->temperatureExternal2 = _get_temperature(temperatureExternal2Sum/
      +                          averageCount);
 12926  011F16  0100               	movlb	0	; () banked
 12927  011F18  EE20 F016          	lfsr	2,22
 12928  011F1C  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12929  011F1E  26D9               	addwf	fsr2l,f,c
 12930  011F20  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12931  011F22  22DA               	addwfc	fsr2h,f,c
 12932  011F24  C272  F060         	movff	_temperatureExternal2Sum,___aldiv@dividend
 12933  011F28  C273  F061         	movff	_temperatureExternal2Sum+1,___aldiv@dividend+1
 12934  011F2C  C274  F062         	movff	_temperatureExternal2Sum+2,___aldiv@dividend+2
 12935  011F30  C275  F063         	movff	_temperatureExternal2Sum+3,___aldiv@dividend+3
 12936  011F34  C016  F064         	movff	_averageCount,___aldiv@divisor
 12937  011F38  C017  F065         	movff	_averageCount+1,___aldiv@divisor+1
 12938  011F3C  0100               	movlb	0	; () banked
 12939  011F3E  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 12940  011F40  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 12941  011F42  ECEA  F0AF         	call	___aldiv	;wreg free
 12942  011F46  C060  F06E         	movff	?___aldiv,__get_temperature@temperature
 12943  011F4A  C061  F06F         	movff	?___aldiv+1,__get_temperature@temperature+1
 12944  011F4E  ECD1  F0D1         	call	__get_temperature	;wreg free
 12945  011F52  6EDF               	movwf	indf2,c
 12946                           
 12947                           ;log.c: 188: log_entry->chargerOnTime = chargerOnTime >> 1;
 12948  011F54  0100               	movlb	0	; () banked
 12949  011F56  EE20 F017          	lfsr	2,23
 12950  011F5A  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12951  011F5C  26D9               	addwf	fsr2l,f,c
 12952  011F5E  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12953  011F60  22DA               	addwfc	fsr2h,f,c
 12954  011F62  90D8               	bcf	status,0,c
 12955  011F64  0102               	movlb	2	; () banked
 12956  011F66  31B1               	rrcf	(_chargerOnTime+1)& (0+255),w,b
 12957  011F68  0100               	movlb	0	; () banked
 12958  011F6A  6F7B               	movwf	(??_log_generate_entry+1)& (0+255),b
 12959  011F6C  0102               	movlb	2	; () banked
 12960  011F6E  31B0               	rrcf	_chargerOnTime& (0+255),w,b
 12961  011F70  0100               	movlb	0	; () banked
 12962  011F72  6F7A               	movwf	??_log_generate_entry& (0+255),b
 12963  011F74  0100               	movlb	0	; () banked
 12964  011F76  517A               	movf	??_log_generate_entry& (0+255),w,b
 12965  011F78  6EDF               	movwf	indf2,c
 12966                           
 12967                           ; BSR set to: 0
 12968                           ;log.c: 189: log_entry->lowPowerTime = lowPowerTime >> 1;
 12969  011F7A  0100               	movlb	0	; () banked
 12970  011F7C  EE20 F018          	lfsr	2,24
 12971  011F80  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12972  011F82  26D9               	addwf	fsr2l,f,c
 12973  011F84  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12974  011F86  22DA               	addwfc	fsr2h,f,c
 12975  011F88  90D8               	bcf	status,0,c
 12976  011F8A  0102               	movlb	2	; () banked
 12977  011F8C  31AF               	rrcf	(_lowPowerTime+1)& (0+255),w,b
 12978  011F8E  0100               	movlb	0	; () banked
 12979  011F90  6F7B               	movwf	(??_log_generate_entry+1)& (0+255),b
 12980  011F92  0102               	movlb	2	; () banked
 12981  011F94  31AE               	rrcf	_lowPowerTime& (0+255),w,b
 12982  011F96  0100               	movlb	0	; () banked
 12983  011F98  6F7A               	movwf	??_log_generate_entry& (0+255),b
 12984  011F9A  0100               	movlb	0	; () banked
 12985  011F9C  517A               	movf	??_log_generate_entry& (0+255),w,b
 12986  011F9E  6EDF               	movwf	indf2,c
 12987                           
 12988                           ; BSR set to: 0
 12989                           ;log.c: 190: log_entry->unused[0] = 0x00;
 12990  011FA0  0100               	movlb	0	; () banked
 12991  011FA2  EE20 F019          	lfsr	2,25
 12992  011FA6  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 12993  011FA8  26D9               	addwf	fsr2l,f,c
 12994  011FAA  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 12995  011FAC  22DA               	addwfc	fsr2h,f,c
 12996  011FAE  0E00               	movlw	0
 12997  011FB0  6EDF               	movwf	indf2,c
 12998                           
 12999                           ; BSR set to: 0
 13000                           ;log.c: 191: log_entry->unused[1] = 0x00;
 13001  011FB2  0100               	movlb	0	; () banked
 13002  011FB4  EE20 F01A          	lfsr	2,26
 13003  011FB8  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13004  011FBA  26D9               	addwf	fsr2l,f,c
 13005  011FBC  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13006  011FBE  22DA               	addwfc	fsr2h,f,c
 13007  011FC0  0E00               	movlw	0
 13008  011FC2  6EDF               	movwf	indf2,c
 13009                           
 13010                           ; BSR set to: 0
 13011                           ;log.c: 192: log_entry->unused[2] = 0x00;
 13012  011FC4  0100               	movlb	0	; () banked
 13013  011FC6  EE20 F01B          	lfsr	2,27
 13014  011FCA  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13015  011FCC  26D9               	addwf	fsr2l,f,c
 13016  011FCE  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13017  011FD0  22DA               	addwfc	fsr2h,f,c
 13018  011FD2  0E00               	movlw	0
 13019  011FD4  6EDF               	movwf	indf2,c
 13020                           
 13021                           ; BSR set to: 0
 13022                           ;log.c: 193: log_entry->unused[3] = 0x00;
 13023  011FD6  0100               	movlb	0	; () banked
 13024  011FD8  EE20 F01C          	lfsr	2,28
 13025  011FDC  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13026  011FDE  26D9               	addwf	fsr2l,f,c
 13027  011FE0  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13028  011FE2  22DA               	addwfc	fsr2h,f,c
 13029  011FE4  0E00               	movlw	0
 13030  011FE6  6EDF               	movwf	indf2,c
 13031                           
 13032                           ; BSR set to: 0
 13033                           ;log.c: 194: log_entry->unused[4] = 0x00;
 13034  011FE8  0100               	movlb	0	; () banked
 13035  011FEA  EE20 F01D          	lfsr	2,29
 13036  011FEE  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13037  011FF0  26D9               	addwf	fsr2l,f,c
 13038  011FF2  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13039  011FF4  22DA               	addwfc	fsr2h,f,c
 13040  011FF6  0E00               	movlw	0
 13041  011FF8  6EDF               	movwf	indf2,c
 13042                           
 13043                           ; BSR set to: 0
 13044                           ;log.c: 195: log_entry->status = status;
 13045  011FFA  0100               	movlb	0	; () banked
 13046  011FFC  EE20 F01E          	lfsr	2,30
 13047  012000  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13048  012002  26D9               	addwf	fsr2l,f,c
 13049  012004  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13050  012006  22DA               	addwfc	fsr2h,f,c
 13051  012008  C1F0  FFDF         	movff	_status,indf2
 13052                           
 13053                           ; BSR set to: 0
 13054                           ;log.c: 196: log_entry->checksum = _get_checksum(log_entry);
 13055  01200C  C078  F060         	movff	log_generate_entry@log_entry,__get_checksum@log_entry
 13056  012010  C079  F061         	movff	log_generate_entry@log_entry+1,__get_checksum@log_entry+1
 13057  012014  EC3C  F0CF         	call	__get_checksum	;wreg free
 13058  012018  0100               	movlb	0	; () banked
 13059  01201A  6F7A               	movwf	??_log_generate_entry& (0+255),b
 13060  01201C  0100               	movlb	0	; () banked
 13061  01201E  EE20 F01F          	lfsr	2,31
 13062  012022  5178               	movf	log_generate_entry@log_entry& (0+255),w,b
 13063  012024  26D9               	addwf	fsr2l,f,c
 13064  012026  5179               	movf	(log_generate_entry@log_entry+1)& (0+255),w,b
 13065  012028  22DA               	addwfc	fsr2h,f,c
 13066  01202A  C07A  FFDF         	movff	??_log_generate_entry,indf2
 13067                           
 13068                           ; BSR set to: 0
 13069  01202E  0012               	return		;funcret
 13070  012030                     __end_of_log_generate_entry:
 13071                           	opt stack 0
 13072                           tblptru	equ	0xFF8
 13073                           tblptrh	equ	0xFF7
 13074                           tblptrl	equ	0xFF6
 13075                           tablat	equ	0xFF5
 13076                           prodh	equ	0xFF4
 13077                           prodl	equ	0xFF3
 13078                           intcon	equ	0xFF2
 13079                           intcon2	equ	0xFF1
 13080                           intcon3	equ	0xFF0
 13081                           postinc0	equ	0xFEE
 13082                           wreg	equ	0xFE8
 13083                           postdec1	equ	0xFE5
 13084                           plusw1	equ	0xFE3
 13085                           fsr1h	equ	0xFE2
 13086                           fsr1l	equ	0xFE1
 13087                           indf2	equ	0xFDF
 13088                           postinc2	equ	0xFDE
 13089                           postdec2	equ	0xFDD
 13090                           plusw2	equ	0xFDB
 13091                           fsr2h	equ	0xFDA
 13092                           fsr2l	equ	0xFD9
 13093                           status	equ	0xFD8
 13094                           
 13095 ;; *************** function __get_temperature *****************
 13096 ;; Defined at:
 13097 ;;		line 107 in file "log.c"
 13098 ;; Parameters:    Size  Location     Type
 13099 ;;  temperature     2   14[BANK0 ] int 
 13100 ;; Auto vars:     Size  Location     Type
 13101 ;;		None
 13102 ;; Return value:  Size  Location     Type
 13103 ;;                  1    wreg      unsigned char 
 13104 ;; Registers used:
 13105 ;;		wreg, status,2, status,0, cstack
 13106 ;; Tracked objects:
 13107 ;;		On entry : 0/0
 13108 ;;		On exit  : 0/0
 13109 ;;		Unchanged: 0/0
 13110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13111 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13114 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13115 ;;Total ram usage:        2 bytes
 13116 ;; Hardware stack levels used:    1
 13117 ;; Hardware stack levels required when called:   11
 13118 ;; This function calls:
 13119 ;;		___awdiv
 13120 ;; This function is called by:
 13121 ;;		_log_generate_entry
 13122 ;; This function uses a non-reentrant model
 13123 ;;
 13124                           
 13125                           	psect	text51
 13126  01A3A2                     __ptext51:
 13127                           	opt stack 0
 13128  01A3A2                     __get_temperature:
 13129                           	opt stack 17
 13130                           
 13131                           ;log.c: 109: temperature += 4025;
 13132                           
 13133                           ; BSR set to: 0
 13134                           ;incstack = 0
 13135  01A3A2  0100               	movlb	0	; () banked
 13136  01A3A4  0EB9               	movlw	185
 13137  01A3A6  276E               	addwf	__get_temperature@temperature& (0+255),f,b
 13138  01A3A8  0E0F               	movlw	15
 13139  01A3AA  236F               	addwfc	(__get_temperature@temperature+1)& (0+255),f,b
 13140                           
 13141                           ; BSR set to: 0
 13142                           ;log.c: 110: temperature /= 50;
 13143  01A3AC  C06E  F060         	movff	__get_temperature@temperature,___awdiv@dividend
 13144  01A3B0  C06F  F061         	movff	__get_temperature@temperature+1,___awdiv@dividend+1
 13145  01A3B4  0E00               	movlw	0
 13146  01A3B6  0100               	movlb	0	; () banked
 13147  01A3B8  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 13148  01A3BA  0E32               	movlw	50
 13149  01A3BC  6F62               	movwf	___awdiv@divisor& (0+255),b
 13150  01A3BE  ECD4  F0BB         	call	___awdiv	;wreg free
 13151  01A3C2  C060  F06E         	movff	?___awdiv,__get_temperature@temperature
 13152  01A3C6  C061  F06F         	movff	?___awdiv+1,__get_temperature@temperature+1
 13153                           
 13154                           ;log.c: 111: return (uint8_t) temperature;
 13155  01A3CA  0100               	movlb	0	; () banked
 13156  01A3CC  516E               	movf	__get_temperature@temperature& (0+255),w,b
 13157  01A3CE  0012               	return	
 13158  01A3D0                     __end_of__get_temperature:
 13159                           	opt stack 0
 13160                           tblptru	equ	0xFF8
 13161                           tblptrh	equ	0xFF7
 13162                           tblptrl	equ	0xFF6
 13163                           tablat	equ	0xFF5
 13164                           prodh	equ	0xFF4
 13165                           prodl	equ	0xFF3
 13166                           intcon	equ	0xFF2
 13167                           intcon2	equ	0xFF1
 13168                           intcon3	equ	0xFF0
 13169                           postinc0	equ	0xFEE
 13170                           wreg	equ	0xFE8
 13171                           postdec1	equ	0xFE5
 13172                           plusw1	equ	0xFE3
 13173                           fsr1h	equ	0xFE2
 13174                           fsr1l	equ	0xFE1
 13175                           indf2	equ	0xFDF
 13176                           postinc2	equ	0xFDE
 13177                           postdec2	equ	0xFDD
 13178                           plusw2	equ	0xFDB
 13179                           fsr2h	equ	0xFDA
 13180                           fsr2l	equ	0xFD9
 13181                           status	equ	0xFD8
 13182                           
 13183 ;; *************** function ___awdiv *****************
 13184 ;; Defined at:
 13185 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
 13186 ;; Parameters:    Size  Location     Type
 13187 ;;  dividend        2    0[BANK0 ] int 
 13188 ;;  divisor         2    2[BANK0 ] int 
 13189 ;; Auto vars:     Size  Location     Type
 13190 ;;  quotient        2    6[BANK0 ] int 
 13191 ;;  sign            1    5[BANK0 ] unsigned char 
 13192 ;;  counter         1    4[BANK0 ] unsigned char 
 13193 ;; Return value:  Size  Location     Type
 13194 ;;                  2    0[BANK0 ] int 
 13195 ;; Registers used:
 13196 ;;		wreg, status,2, status,0
 13197 ;; Tracked objects:
 13198 ;;		On entry : 0/0
 13199 ;;		On exit  : 0/0
 13200 ;;		Unchanged: 0/0
 13201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13202 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13203 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13205 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13206 ;;Total ram usage:        8 bytes
 13207 ;; Hardware stack levels used:    1
 13208 ;; Hardware stack levels required when called:   10
 13209 ;; This function calls:
 13210 ;;		Nothing
 13211 ;; This function is called by:
 13212 ;;		__get_temperature
 13213 ;; This function uses a non-reentrant model
 13214 ;;
 13215                           
 13216                           	psect	text52
 13217  0177A8                     __ptext52:
 13218                           	opt stack 0
 13219  0177A8                     ___awdiv:
 13220                           	opt stack 17
 13221                           
 13222                           ; BSR set to: 0
 13223                           ;incstack = 0
 13224  0177A8  0E00               	movlw	0
 13225  0177AA  0100               	movlb	0	; () banked
 13226  0177AC  6F65               	movwf	___awdiv@sign& (0+255),b
 13227                           
 13228                           ; BSR set to: 0
 13229  0177AE  0100               	movlb	0	; () banked
 13230  0177B0  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13231  0177B2  D008               	goto	l19116
 13232                           
 13233                           ; BSR set to: 0
 13234  0177B4  0100               	movlb	0	; () banked
 13235  0177B6  6D62               	negf	___awdiv@divisor& (0+255),b
 13236  0177B8  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13237  0177BA  B0D8               	btfsc	status,0,c
 13238  0177BC  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13239                           
 13240                           ; BSR set to: 0
 13241  0177BE  0E01               	movlw	1
 13242  0177C0  0100               	movlb	0	; () banked
 13243  0177C2  6F65               	movwf	___awdiv@sign& (0+255),b
 13244  0177C4                     l19116:
 13245                           
 13246                           ; BSR set to: 0
 13247  0177C4  0100               	movlb	0	; () banked
 13248  0177C6  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13249  0177C8  D008               	goto	l19122
 13250                           
 13251                           ; BSR set to: 0
 13252  0177CA  0100               	movlb	0	; () banked
 13253  0177CC  6D60               	negf	___awdiv@dividend& (0+255),b
 13254  0177CE  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13255  0177D0  B0D8               	btfsc	status,0,c
 13256  0177D2  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13257                           
 13258                           ; BSR set to: 0
 13259  0177D4  0E01               	movlw	1
 13260  0177D6  0100               	movlb	0	; () banked
 13261  0177D8  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 13262  0177DA                     l19122:
 13263                           
 13264                           ; BSR set to: 0
 13265  0177DA  0E00               	movlw	0
 13266  0177DC  0100               	movlb	0	; () banked
 13267  0177DE  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 13268  0177E0  0E00               	movlw	0
 13269  0177E2  6F66               	movwf	___awdiv@quotient& (0+255),b
 13270                           
 13271                           ; BSR set to: 0
 13272  0177E4  0100               	movlb	0	; () banked
 13273  0177E6  5162               	movf	___awdiv@divisor& (0+255),w,b
 13274  0177E8  0100               	movlb	0	; () banked
 13275  0177EA  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13276  0177EC  B4D8               	btfsc	status,2,c
 13277  0177EE  D02C               	goto	l19144
 13278                           
 13279                           ; BSR set to: 0
 13280  0177F0  0E01               	movlw	1
 13281  0177F2  0100               	movlb	0	; () banked
 13282  0177F4  6F64               	movwf	___awdiv@counter& (0+255),b
 13283  0177F6  D006               	goto	l19130
 13284  0177F8                     l19128:
 13285                           
 13286                           ; BSR set to: 0
 13287  0177F8  0100               	movlb	0	; () banked
 13288  0177FA  90D8               	bcf	status,0,c
 13289  0177FC  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 13290  0177FE  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13291  017800  0100               	movlb	0	; () banked
 13292  017802  2B64               	incf	___awdiv@counter& (0+255),f,b
 13293  017804                     l19130:
 13294                           
 13295                           ; BSR set to: 0
 13296  017804  0100               	movlb	0	; () banked
 13297  017806  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13298  017808  D7F7               	goto	l19128
 13299  01780A                     l19132:
 13300                           
 13301                           ; BSR set to: 0
 13302  01780A  0100               	movlb	0	; () banked
 13303  01780C  90D8               	bcf	status,0,c
 13304  01780E  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 13305  017810  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13306                           
 13307                           ; BSR set to: 0
 13308  017812  0100               	movlb	0	; () banked
 13309  017814  5162               	movf	___awdiv@divisor& (0+255),w,b
 13310  017816  0100               	movlb	0	; () banked
 13311  017818  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 13312  01781A  0100               	movlb	0	; () banked
 13313  01781C  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13314  01781E  0100               	movlb	0	; () banked
 13315  017820  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13316  017822  A0D8               	btfss	status,0,c
 13317  017824  D00A               	goto	l19140
 13318                           
 13319                           ; BSR set to: 0
 13320  017826  0100               	movlb	0	; () banked
 13321  017828  5162               	movf	___awdiv@divisor& (0+255),w,b
 13322  01782A  0100               	movlb	0	; () banked
 13323  01782C  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 13324  01782E  0100               	movlb	0	; () banked
 13325  017830  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13326  017832  0100               	movlb	0	; () banked
 13327  017834  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13328                           
 13329                           ; BSR set to: 0
 13330  017836  0100               	movlb	0	; () banked
 13331  017838  8166               	bsf	___awdiv@quotient& (0+255),0,b
 13332  01783A                     l19140:
 13333                           
 13334                           ; BSR set to: 0
 13335  01783A  0100               	movlb	0	; () banked
 13336  01783C  90D8               	bcf	status,0,c
 13337  01783E  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13338  017840  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 13339                           
 13340                           ; BSR set to: 0
 13341  017842  0100               	movlb	0	; () banked
 13342  017844  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 13343  017846  D7E1               	goto	l19132
 13344  017848                     l19144:
 13345                           
 13346                           ; BSR set to: 0
 13347  017848  0100               	movlb	0	; () banked
 13348  01784A  5165               	movf	___awdiv@sign& (0+255),w,b
 13349  01784C  0100               	movlb	0	; () banked
 13350  01784E  B4D8               	btfsc	status,2,c
 13351  017850  D005               	goto	l19148
 13352                           
 13353                           ; BSR set to: 0
 13354  017852  0100               	movlb	0	; () banked
 13355  017854  6D66               	negf	___awdiv@quotient& (0+255),b
 13356  017856  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13357  017858  B0D8               	btfsc	status,0,c
 13358  01785A  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13359  01785C                     l19148:
 13360                           
 13361                           ; BSR set to: 0
 13362  01785C  C066  F060         	movff	___awdiv@quotient,?___awdiv
 13363  017860  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 13364  017864  0012               	return	
 13365  017866                     __end_of___awdiv:
 13366                           	opt stack 0
 13367                           tblptru	equ	0xFF8
 13368                           tblptrh	equ	0xFF7
 13369                           tblptrl	equ	0xFF6
 13370                           tablat	equ	0xFF5
 13371                           prodh	equ	0xFF4
 13372                           prodl	equ	0xFF3
 13373                           intcon	equ	0xFF2
 13374                           intcon2	equ	0xFF1
 13375                           intcon3	equ	0xFF0
 13376                           postinc0	equ	0xFEE
 13377                           wreg	equ	0xFE8
 13378                           postdec1	equ	0xFE5
 13379                           plusw1	equ	0xFE3
 13380                           fsr1h	equ	0xFE2
 13381                           fsr1l	equ	0xFE1
 13382                           indf2	equ	0xFDF
 13383                           postinc2	equ	0xFDE
 13384                           postdec2	equ	0xFDD
 13385                           plusw2	equ	0xFDB
 13386                           fsr2h	equ	0xFDA
 13387                           fsr2l	equ	0xFD9
 13388                           status	equ	0xFD8
 13389                           
 13390 ;; *************** function __get_dateTime *****************
 13391 ;; Defined at:
 13392 ;;		line 39 in file "log.c"
 13393 ;; Parameters:    Size  Location     Type
 13394 ;;		None
 13395 ;; Auto vars:     Size  Location     Type
 13396 ;;  datetime        4   20[BANK0 ] unsigned long 
 13397 ;;  seconds         1   19[BANK0 ] unsigned char 
 13398 ;;  minutes         1   18[BANK0 ] unsigned char 
 13399 ;;  hours           1   17[BANK0 ] unsigned char 
 13400 ;;  day             1   16[BANK0 ] unsigned char 
 13401 ;;  month           1   15[BANK0 ] unsigned char 
 13402 ;;  year            1   14[BANK0 ] unsigned char 
 13403 ;; Return value:  Size  Location     Type
 13404 ;;                  4    4[BANK0 ] unsigned long 
 13405 ;; Registers used:
 13406 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13407 ;; Tracked objects:
 13408 ;;		On entry : 0/0
 13409 ;;		On exit  : 0/0
 13410 ;;		Unchanged: 0/0
 13411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13412 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13413 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13414 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13415 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13416 ;;Total ram usage:       20 bytes
 13417 ;; Hardware stack levels used:    1
 13418 ;; Hardware stack levels required when called:   12
 13419 ;; This function calls:
 13420 ;;		_rtcc_get_day_decimal
 13421 ;;		_rtcc_get_hours_decimal
 13422 ;;		_rtcc_get_minutes_decimal
 13423 ;;		_rtcc_get_month_decimal
 13424 ;;		_rtcc_get_seconds_decimal
 13425 ;;		_rtcc_get_year_decimal
 13426 ;; This function is called by:
 13427 ;;		_log_generate_entry
 13428 ;; This function uses a non-reentrant model
 13429 ;;
 13430                           
 13431                           	psect	text53
 13432  014832                     __ptext53:
 13433                           	opt stack 0
 13434  014832                     __get_dateTime:
 13435                           	opt stack 16
 13436                           
 13437                           ;log.c: 41: uint32_t datetime;
 13438                           ;log.c: 42: uint8_t year = rtcc_get_year_decimal();
 13439                           
 13440                           ; BSR set to: 0
 13441                           ;incstack = 0
 13442  014832  EC67  F0D5         	call	_rtcc_get_year_decimal	;wreg free
 13443  014836  0100               	movlb	0	; () banked
 13444  014838  6F6E               	movwf	__get_dateTime@year& (0+255),b
 13445                           
 13446                           ;log.c: 43: uint8_t month = rtcc_get_month_decimal();
 13447  01483A  EC70  F0D5         	call	_rtcc_get_month_decimal	;wreg free
 13448  01483E  0100               	movlb	0	; () banked
 13449  014840  6F6F               	movwf	__get_dateTime@month& (0+255),b
 13450                           
 13451                           ;log.c: 44: uint8_t day = rtcc_get_day_decimal();
 13452  014842  EC79  F0D5         	call	_rtcc_get_day_decimal	;wreg free
 13453  014846  0100               	movlb	0	; () banked
 13454  014848  6F70               	movwf	__get_dateTime@day& (0+255),b
 13455                           
 13456                           ;log.c: 45: uint8_t hours = rtcc_get_hours_decimal();
 13457  01484A  EC5E  F0D5         	call	_rtcc_get_hours_decimal	;wreg free
 13458  01484E  0100               	movlb	0	; () banked
 13459  014850  6F71               	movwf	__get_dateTime@hours& (0+255),b
 13460                           
 13461                           ;log.c: 46: uint8_t minutes = rtcc_get_minutes_decimal();
 13462  014852  EC55  F0D5         	call	_rtcc_get_minutes_decimal	;wreg free
 13463  014856  0100               	movlb	0	; () banked
 13464  014858  6F72               	movwf	__get_dateTime@minutes& (0+255),b
 13465                           
 13466                           ;log.c: 47: uint8_t seconds = rtcc_get_seconds_decimal();
 13467  01485A  EC82  F0D5         	call	_rtcc_get_seconds_decimal	;wreg free
 13468  01485E  0100               	movlb	0	; () banked
 13469  014860  6F73               	movwf	__get_dateTime@seconds& (0+255),b
 13470                           
 13471                           ; BSR set to: 0
 13472                           ;log.c: 48: datetime = (((uint32_t)(year&0b111111)) << 26);
 13473  014862  C06E  F068         	movff	__get_dateTime@year,??__get_dateTime
 13474  014866  0E3F               	movlw	63
 13475  014868  0100               	movlb	0	; () banked
 13476  01486A  1768               	andwf	??__get_dateTime& (0+255),f,b
 13477  01486C  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13478  014870  0100               	movlb	0	; () banked
 13479  014872  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13480  014874  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13481  014876  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13482  014878  0E1A               	movlw	26
 13483  01487A                     u18885:
 13484  01487A  90D8               	bcf	status,0,c
 13485  01487C  0100               	movlb	0	; () banked
 13486  01487E  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13487  014880  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13488  014882  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13489  014884  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13490  014886  2EE8               	decfsz	wreg,f,c
 13491  014888  D7F8               	goto	u18885
 13492  01488A  C069  F074         	movff	??__get_dateTime+1,__get_dateTime@datetime
 13493  01488E  C06A  F075         	movff	??__get_dateTime+2,__get_dateTime@datetime+1
 13494  014892  C06B  F076         	movff	??__get_dateTime+3,__get_dateTime@datetime+2
 13495  014896  C06C  F077         	movff	??__get_dateTime+4,__get_dateTime@datetime+3
 13496                           
 13497                           ; BSR set to: 0
 13498                           ;log.c: 49: datetime |= (((uint32_t)(month&0b1111)) << 22);
 13499  01489A  C06F  F068         	movff	__get_dateTime@month,??__get_dateTime
 13500  01489E  0E0F               	movlw	15
 13501  0148A0  0100               	movlb	0	; () banked
 13502  0148A2  1768               	andwf	??__get_dateTime& (0+255),f,b
 13503  0148A4  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13504  0148A8  0100               	movlb	0	; () banked
 13505  0148AA  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13506  0148AC  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13507  0148AE  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13508  0148B0  0E16               	movlw	22
 13509  0148B2                     u18895:
 13510  0148B2  90D8               	bcf	status,0,c
 13511  0148B4  0100               	movlb	0	; () banked
 13512  0148B6  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13513  0148B8  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13514  0148BA  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13515  0148BC  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13516  0148BE  2EE8               	decfsz	wreg,f,c
 13517  0148C0  D7F8               	goto	u18895
 13518  0148C2  0100               	movlb	0	; () banked
 13519  0148C4  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13520  0148C6  0100               	movlb	0	; () banked
 13521  0148C8  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13522  0148CA  0100               	movlb	0	; () banked
 13523  0148CC  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13524  0148CE  0100               	movlb	0	; () banked
 13525  0148D0  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13526  0148D2  0100               	movlb	0	; () banked
 13527  0148D4  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13528  0148D6  0100               	movlb	0	; () banked
 13529  0148D8  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13530  0148DA  0100               	movlb	0	; () banked
 13531  0148DC  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13532  0148DE  0100               	movlb	0	; () banked
 13533  0148E0  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13534                           
 13535                           ; BSR set to: 0
 13536                           ;log.c: 50: datetime |= (((uint32_t)day&0b11111)) << 17;
 13537  0148E2  C070  F068         	movff	__get_dateTime@day,??__get_dateTime
 13538  0148E6  0E1F               	movlw	31
 13539  0148E8  0100               	movlb	0	; () banked
 13540  0148EA  1768               	andwf	??__get_dateTime& (0+255),f,b
 13541  0148EC  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13542  0148F0  0100               	movlb	0	; () banked
 13543  0148F2  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13544  0148F4  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13545  0148F6  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13546  0148F8  0E11               	movlw	17
 13547  0148FA                     u18905:
 13548  0148FA  90D8               	bcf	status,0,c
 13549  0148FC  0100               	movlb	0	; () banked
 13550  0148FE  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13551  014900  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13552  014902  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13553  014904  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13554  014906  2EE8               	decfsz	wreg,f,c
 13555  014908  D7F8               	goto	u18905
 13556  01490A  0100               	movlb	0	; () banked
 13557  01490C  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13558  01490E  0100               	movlb	0	; () banked
 13559  014910  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13560  014912  0100               	movlb	0	; () banked
 13561  014914  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13562  014916  0100               	movlb	0	; () banked
 13563  014918  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13564  01491A  0100               	movlb	0	; () banked
 13565  01491C  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13566  01491E  0100               	movlb	0	; () banked
 13567  014920  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13568  014922  0100               	movlb	0	; () banked
 13569  014924  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13570  014926  0100               	movlb	0	; () banked
 13571  014928  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13572                           
 13573                           ; BSR set to: 0
 13574                           ;log.c: 51: datetime |= (((uint32_t)(hours&0b11111)) << 12);
 13575  01492A  C071  F068         	movff	__get_dateTime@hours,??__get_dateTime
 13576  01492E  0E1F               	movlw	31
 13577  014930  0100               	movlb	0	; () banked
 13578  014932  1768               	andwf	??__get_dateTime& (0+255),f,b
 13579  014934  C068  F069         	movff	??__get_dateTime,??__get_dateTime+1
 13580  014938  0100               	movlb	0	; () banked
 13581  01493A  6B6A               	clrf	(??__get_dateTime+2)& (0+255),b
 13582  01493C  6B6B               	clrf	(??__get_dateTime+3)& (0+255),b
 13583  01493E  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13584  014940  0E0C               	movlw	12
 13585  014942                     u18915:
 13586  014942  90D8               	bcf	status,0,c
 13587  014944  0100               	movlb	0	; () banked
 13588  014946  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13589  014948  376A               	rlcf	(??__get_dateTime+2)& (0+255),f,b
 13590  01494A  376B               	rlcf	(??__get_dateTime+3)& (0+255),f,b
 13591  01494C  376C               	rlcf	(??__get_dateTime+4)& (0+255),f,b
 13592  01494E  2EE8               	decfsz	wreg,f,c
 13593  014950  D7F8               	goto	u18915
 13594  014952  0100               	movlb	0	; () banked
 13595  014954  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13596  014956  0100               	movlb	0	; () banked
 13597  014958  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13598  01495A  0100               	movlb	0	; () banked
 13599  01495C  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13600  01495E  0100               	movlb	0	; () banked
 13601  014960  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13602  014962  0100               	movlb	0	; () banked
 13603  014964  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13604  014966  0100               	movlb	0	; () banked
 13605  014968  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13606  01496A  0100               	movlb	0	; () banked
 13607  01496C  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13608  01496E  0100               	movlb	0	; () banked
 13609  014970  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13610                           
 13611                           ; BSR set to: 0
 13612                           ;log.c: 52: datetime |= (((uint16_t)(minutes&0b111111)) << 6);
 13613  014972  0100               	movlb	0	; () banked
 13614  014974  5172               	movf	__get_dateTime@minutes& (0+255),w,b
 13615  014976  0B3F               	andlw	63
 13616  014978  0100               	movlb	0	; () banked
 13617  01497A  6F68               	movwf	??__get_dateTime& (0+255),b
 13618  01497C  6B69               	clrf	(??__get_dateTime+1)& (0+255),b
 13619  01497E  0E06               	movlw	6
 13620  014980                     u18925:
 13621  014980  90D8               	bcf	status,0,c
 13622  014982  0100               	movlb	0	; () banked
 13623  014984  3768               	rlcf	??__get_dateTime& (0+255),f,b
 13624  014986  3769               	rlcf	(??__get_dateTime+1)& (0+255),f,b
 13625  014988  2EE8               	decfsz	wreg,f,c
 13626  01498A  D7FA               	goto	u18925
 13627  01498C  0100               	movlb	0	; () banked
 13628  01498E  5168               	movf	??__get_dateTime& (0+255),w,b
 13629  014990  0100               	movlb	0	; () banked
 13630  014992  6F6A               	movwf	(??__get_dateTime+2)& (0+255),b
 13631  014994  0100               	movlb	0	; () banked
 13632  014996  5169               	movf	(??__get_dateTime+1)& (0+255),w,b
 13633  014998  0100               	movlb	0	; () banked
 13634  01499A  6F6B               	movwf	(??__get_dateTime+3)& (0+255),b
 13635  01499C  0100               	movlb	0	; () banked
 13636  01499E  6B6C               	clrf	(??__get_dateTime+4)& (0+255),b
 13637  0149A0  0100               	movlb	0	; () banked
 13638  0149A2  6B6D               	clrf	(??__get_dateTime+5)& (0+255),b
 13639  0149A4  0100               	movlb	0	; () banked
 13640  0149A6  516A               	movf	(??__get_dateTime+2)& (0+255),w,b
 13641  0149A8  0100               	movlb	0	; () banked
 13642  0149AA  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13643  0149AC  0100               	movlb	0	; () banked
 13644  0149AE  516B               	movf	(??__get_dateTime+3)& (0+255),w,b
 13645  0149B0  0100               	movlb	0	; () banked
 13646  0149B2  1375               	iorwf	(__get_dateTime@datetime+1)& (0+255),f,b
 13647  0149B4  0100               	movlb	0	; () banked
 13648  0149B6  516C               	movf	(??__get_dateTime+4)& (0+255),w,b
 13649  0149B8  0100               	movlb	0	; () banked
 13650  0149BA  1376               	iorwf	(__get_dateTime@datetime+2)& (0+255),f,b
 13651  0149BC  0100               	movlb	0	; () banked
 13652  0149BE  516D               	movf	(??__get_dateTime+5)& (0+255),w,b
 13653  0149C0  0100               	movlb	0	; () banked
 13654  0149C2  1377               	iorwf	(__get_dateTime@datetime+3)& (0+255),f,b
 13655                           
 13656                           ; BSR set to: 0
 13657                           ;log.c: 53: datetime |= (seconds&0b111111);
 13658  0149C4  C073  F068         	movff	__get_dateTime@seconds,??__get_dateTime
 13659  0149C8  0E3F               	movlw	63
 13660  0149CA  0100               	movlb	0	; () banked
 13661  0149CC  1768               	andwf	??__get_dateTime& (0+255),f,b
 13662  0149CE  0100               	movlb	0	; () banked
 13663  0149D0  5168               	movf	??__get_dateTime& (0+255),w,b
 13664  0149D2  0100               	movlb	0	; () banked
 13665  0149D4  1374               	iorwf	__get_dateTime@datetime& (0+255),f,b
 13666                           
 13667                           ; BSR set to: 0
 13668                           ;log.c: 54: return datetime;
 13669  0149D6  C074  F064         	movff	__get_dateTime@datetime,?__get_dateTime
 13670  0149DA  C075  F065         	movff	__get_dateTime@datetime+1,?__get_dateTime+1
 13671  0149DE  C076  F066         	movff	__get_dateTime@datetime+2,?__get_dateTime+2
 13672  0149E2  C077  F067         	movff	__get_dateTime@datetime+3,?__get_dateTime+3
 13673  0149E6  0012               	return	
 13674  0149E8                     __end_of__get_dateTime:
 13675                           	opt stack 0
 13676                           tblptru	equ	0xFF8
 13677                           tblptrh	equ	0xFF7
 13678                           tblptrl	equ	0xFF6
 13679                           tablat	equ	0xFF5
 13680                           prodh	equ	0xFF4
 13681                           prodl	equ	0xFF3
 13682                           intcon	equ	0xFF2
 13683                           intcon2	equ	0xFF1
 13684                           intcon3	equ	0xFF0
 13685                           postinc0	equ	0xFEE
 13686                           wreg	equ	0xFE8
 13687                           postdec1	equ	0xFE5
 13688                           plusw1	equ	0xFE3
 13689                           fsr1h	equ	0xFE2
 13690                           fsr1l	equ	0xFE1
 13691                           indf2	equ	0xFDF
 13692                           postinc2	equ	0xFDE
 13693                           postdec2	equ	0xFDD
 13694                           plusw2	equ	0xFDB
 13695                           fsr2h	equ	0xFDA
 13696                           fsr2l	equ	0xFD9
 13697                           status	equ	0xFD8
 13698                           
 13699 ;; *************** function __get_checksum *****************
 13700 ;; Defined at:
 13701 ;;		line 57 in file "log.c"
 13702 ;; Parameters:    Size  Location     Type
 13703 ;;  log_entry       2    0[BANK0 ] PTR struct .
 13704 ;;		 -> log_write_to_disk@log_entry(32), 
 13705 ;; Auto vars:     Size  Location     Type
 13706 ;;  byte_array      2    2[BANK0 ] PTR unsigned char 
 13707 ;;		 -> log_write_to_disk@log_entry(32), 
 13708 ;;  cntr            1    5[BANK0 ] unsigned char 
 13709 ;;  checksum        1    4[BANK0 ] unsigned char 
 13710 ;; Return value:  Size  Location     Type
 13711 ;;                  1    wreg      unsigned char 
 13712 ;; Registers used:
 13713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13714 ;; Tracked objects:
 13715 ;;		On entry : 0/0
 13716 ;;		On exit  : 0/0
 13717 ;;		Unchanged: 0/0
 13718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13719 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13720 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13722 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13723 ;;Total ram usage:        6 bytes
 13724 ;; Hardware stack levels used:    1
 13725 ;; Hardware stack levels required when called:   10
 13726 ;; This function calls:
 13727 ;;		Nothing
 13728 ;; This function is called by:
 13729 ;;		_log_generate_entry
 13730 ;; This function uses a non-reentrant model
 13731 ;;
 13732                           
 13733                           	psect	text54
 13734  019E78                     __ptext54:
 13735                           	opt stack 0
 13736  019E78                     __get_checksum:
 13737                           	opt stack 18
 13738                           
 13739                           ;log.c: 59: uint8_t checksum;
 13740                           ;log.c: 60: uint8_t *byte_array;
 13741                           ;log.c: 61: uint8_t cntr;
 13742                           ;log.c: 62: byte_array = (uint8_t*) log_entry;
 13743                           
 13744                           ; BSR set to: 0
 13745                           ;incstack = 0
 13746  019E78  C060  F062         	movff	__get_checksum@log_entry,__get_checksum@byte_array
 13747  019E7C  C061  F063         	movff	__get_checksum@log_entry+1,__get_checksum@byte_array+1
 13748                           
 13749                           ;log.c: 63: checksum = 0x00;
 13750  019E80  0E00               	movlw	0
 13751  019E82  0100               	movlb	0	; () banked
 13752  019E84  6F64               	movwf	__get_checksum@checksum& (0+255),b
 13753                           
 13754                           ; BSR set to: 0
 13755                           ;log.c: 64: for(cntr=0; cntr<31; ++cntr)
 13756  019E86  0E00               	movlw	0
 13757  019E88  0100               	movlb	0	; () banked
 13758  019E8A  6F65               	movwf	__get_checksum@cntr& (0+255),b
 13759  019E8C  0E1E               	movlw	30
 13760  019E8E  0100               	movlb	0	; () banked
 13761  019E90  6565               	cpfsgt	__get_checksum@cntr& (0+255),b
 13762  019E92  D001               	goto	l19868
 13763  019E94  D011               	goto	l19874
 13764  019E96                     l19868:
 13765                           
 13766                           ; BSR set to: 0
 13767                           ;log.c: 65: {
 13768                           ;log.c: 66: checksum ^= byte_array[cntr];
 13769  019E96  0100               	movlb	0	; () banked
 13770  019E98  5165               	movf	__get_checksum@cntr& (0+255),w,b
 13771  019E9A  0D01               	mullw	1
 13772  019E9C  50F3               	movf	prodl,w,c
 13773  019E9E  0100               	movlb	0	; () banked
 13774  019EA0  2562               	addwf	__get_checksum@byte_array& (0+255),w,b
 13775  019EA2  6ED9               	movwf	fsr2l,c
 13776  019EA4  50F4               	movf	prodh,w,c
 13777  019EA6  0100               	movlb	0	; () banked
 13778  019EA8  2163               	addwfc	(__get_checksum@byte_array+1)& (0+255),w,b
 13779  019EAA  6EDA               	movwf	fsr2h,c
 13780  019EAC  50DF               	movf	indf2,w,c
 13781  019EAE  0100               	movlb	0	; () banked
 13782  019EB0  1B64               	xorwf	__get_checksum@checksum& (0+255),f,b
 13783                           
 13784                           ; BSR set to: 0
 13785  019EB2  0100               	movlb	0	; () banked
 13786  019EB4  2B65               	incf	__get_checksum@cntr& (0+255),f,b
 13787  019EB6  D7EA               	goto	L9
 13788  019EB8                     l19874:
 13789                           
 13790                           ; BSR set to: 0
 13791                           ;log.c: 67: }
 13792                           ;log.c: 68: return checksum;
 13793  019EB8  0100               	movlb	0	; () banked
 13794  019EBA  5164               	movf	__get_checksum@checksum& (0+255),w,b
 13795  019EBC  0012               	return	
 13796  019EBE                     __end_of__get_checksum:
 13797                           	opt stack 0
 13798                           tblptru	equ	0xFF8
 13799                           tblptrh	equ	0xFF7
 13800                           tblptrl	equ	0xFF6
 13801                           tablat	equ	0xFF5
 13802                           prodh	equ	0xFF4
 13803                           prodl	equ	0xFF3
 13804                           intcon	equ	0xFF2
 13805                           intcon2	equ	0xFF1
 13806                           intcon3	equ	0xFF0
 13807                           postinc0	equ	0xFEE
 13808                           wreg	equ	0xFE8
 13809                           postdec1	equ	0xFE5
 13810                           plusw1	equ	0xFE3
 13811                           fsr1h	equ	0xFE2
 13812                           fsr1l	equ	0xFE1
 13813                           indf2	equ	0xFDF
 13814                           postinc2	equ	0xFDE
 13815                           postdec2	equ	0xFDD
 13816                           plusw2	equ	0xFDB
 13817                           fsr2h	equ	0xFDA
 13818                           fsr2l	equ	0xFD9
 13819                           status	equ	0xFD8
 13820                           
 13821 ;; *************** function _fat_create_file *****************
 13822 ;; Defined at:
 13823 ;;		line 321 in file "fat16.c"
 13824 ;; Parameters:    Size  Location     Type
 13825 ;;  name            2   59[BANK0 ] PTR unsigned char 
 13826 ;;		 -> filename(9), 
 13827 ;;  extension       2   61[BANK0 ] PTR unsigned char 
 13828 ;;		 -> extension(4), 
 13829 ;;  size            4   63[BANK0 ] unsigned long 
 13830 ;; Auto vars:     Size  Location     Type
 13831 ;;  root_entry     32   80[BANK0 ] struct .
 13832 ;;  cluster         2   78[BANK0 ] unsigned int 
 13833 ;;  number_of_cl    2   76[BANK0 ] unsigned int 
 13834 ;;  cluster_coun    2   73[BANK0 ] unsigned int 
 13835 ;;  next_cluster    2   71[BANK0 ] unsigned int 
 13836 ;;  root_slot       1   75[BANK0 ] unsigned char 
 13837 ;; Return value:  Size  Location     Type
 13838 ;;                  1    wreg      unsigned char 
 13839 ;; Registers used:
 13840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13841 ;; Tracked objects:
 13842 ;;		On entry : 0/0
 13843 ;;		On exit  : 0/0
 13844 ;;		Unchanged: 0/0
 13845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13846 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13847 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13848 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13849 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13850 ;;Total ram usage:       53 bytes
 13851 ;; Hardware stack levels used:    1
 13852 ;; Hardware stack levels required when called:   16
 13853 ;; This function calls:
 13854 ;;		__get_available_root_entry
 13855 ;;		__get_date
 13856 ;;		__get_empty_cluster
 13857 ;;		__get_time
 13858 ;;		__write_fat
 13859 ;;		__write_root
 13860 ;;		_fat_find_file
 13861 ;;		_fat_get_empty_clusters
 13862 ;;		_memcpy
 13863 ;; This function is called by:
 13864 ;;		_log_write_to_disk
 13865 ;; This function uses a non-reentrant model
 13866 ;;
 13867                           
 13868                           	psect	text55
 13869  01463C                     __ptext55:
 13870                           	opt stack 0
 13871  01463C                     _fat_create_file:
 13872                           	opt stack 13
 13873                           
 13874                           ;fat16.c: 323: uint8_t root_slot;
 13875                           ;fat16.c: 324: rootEntry_t root_entry;
 13876                           ;fat16.c: 325: uint16_t cluster;
 13877                           ;fat16.c: 326: uint16_t next_cluster;
 13878                           ;fat16.c: 327: uint16_t number_of_clusters;
 13879                           ;fat16.c: 328: uint16_t cluster_count;
 13880                           ;fat16.c: 332: if(fat_find_file(name, extension) != 0xFF)
 13881                           
 13882                           ; BSR set to: 0
 13883                           ;incstack = 0
 13884  01463C  C09B  F087         	movff	fat_create_file@name,fat_find_file@name
 13885  014640  C09C  F088         	movff	fat_create_file@name+1,fat_find_file@name+1
 13886  014644  C09D  F089         	movff	fat_create_file@extension,fat_find_file@extension
 13887  014648  C09E  F08A         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 13888  01464C  EC9F  F0B4         	call	_fat_find_file	;wreg free
 13889  014650  0AFF               	xorlw	255
 13890  014652  B4D8               	btfsc	status,2,c
 13891  014654  D002               	goto	l21532
 13892                           
 13893                           ;fat16.c: 333: {
 13894                           ;fat16.c: 336: return 0xFF;
 13895  014656  0EFF               	movlw	255
 13896  014658  0012               	return	
 13897  01465A                     l21532:
 13898                           
 13899                           ;fat16.c: 337: }
 13900                           ;fat16.c: 341: root_slot = _get_available_root_entry();
 13901  01465A  ECE8  F0D1         	call	__get_available_root_entry	;wreg free
 13902  01465E  0100               	movlb	0	; () banked
 13903  014660  6FAB               	movwf	fat_create_file@root_slot& (0+255),b
 13904                           
 13905                           ; BSR set to: 0
 13906                           ;fat16.c: 342: if(root_slot == 0xFF)
 13907  014662  0100               	movlb	0	; () banked
 13908  014664  29AB               	incf	fat_create_file@root_slot& (0+255),w,b
 13909  014666  A4D8               	btfss	status,2,c
 13910  014668  D002               	goto	l21540
 13911                           
 13912                           ; BSR set to: 0
 13913                           ;fat16.c: 343: {
 13914                           ;fat16.c: 346: return 0xFE;
 13915  01466A  0EFE               	movlw	254
 13916                           
 13917                           ; BSR set to: 0
 13918  01466C  0012               	return	
 13919  01466E                     l21540:
 13920                           
 13921                           ; BSR set to: 0
 13922                           ;fat16.c: 347: }
 13923                           ;fat16.c: 350: number_of_clusters = (size>>9) + 1;
 13924  01466E  C09F  F0A3         	movff	fat_create_file@size,??_fat_create_file
 13925  014672  C0A0  F0A4         	movff	fat_create_file@size+1,??_fat_create_file+1
 13926  014676  C0A1  F0A5         	movff	fat_create_file@size+2,??_fat_create_file+2
 13927  01467A  C0A2  F0A6         	movff	fat_create_file@size+3,??_fat_create_file+3
 13928  01467E  0E0A               	movlw	10
 13929  014680  D006               	goto	u21350
 13930  014682                     u21355:
 13931  014682  0100               	movlb	0	; () banked
 13932  014684  90D8               	bcf	status,0,c
 13933  014686  33A6               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 13934  014688  33A5               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 13935  01468A  33A4               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 13936  01468C  33A3               	rrcf	??_fat_create_file& (0+255),f,b
 13937  01468E                     u21350:
 13938  01468E  2EE8               	decfsz	wreg,f,c
 13939  014690  D7F8               	goto	u21355
 13940  014692  0E01               	movlw	1
 13941  014694  0100               	movlb	0	; () banked
 13942  014696  25A3               	addwf	??_fat_create_file& (0+255),w,b
 13943  014698  0100               	movlb	0	; () banked
 13944  01469A  6FAC               	movwf	fat_create_file@number_of_clusters& (0+255),b
 13945  01469C  0E00               	movlw	0
 13946  01469E  0100               	movlb	0	; () banked
 13947  0146A0  21A4               	addwfc	(??_fat_create_file+1)& (0+255),w,b
 13948  0146A2  0100               	movlb	0	; () banked
 13949  0146A4  6FAD               	movwf	(fat_create_file@number_of_clusters+1)& (0+255),b
 13950                           
 13951                           ; BSR set to: 0
 13952                           ;fat16.c: 351: if(fat_get_empty_clusters(number_of_clusters) != number_of_clusters)
 13953  0146A6  C0AC  F087         	movff	fat_create_file@number_of_clusters,fat_get_empty_clusters@maximum
 13954  0146AA  C0AD  F088         	movff	fat_create_file@number_of_clusters+1,fat_get_empty_clusters@maximum+1
 13955  0146AE  ECAC  F0BD         	call	_fat_get_empty_clusters	;wreg free
 13956  0146B2  0100               	movlb	0	; () banked
 13957  0146B4  51AC               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 13958  0146B6  0100               	movlb	0	; () banked
 13959  0146B8  1987               	xorwf	?_fat_get_empty_clusters& (0+255),w,b
 13960  0146BA  E106               	bnz	u21360
 13961  0146BC  0100               	movlb	0	; () banked
 13962  0146BE  51AD               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 13963  0146C0  0100               	movlb	0	; () banked
 13964  0146C2  1988               	xorwf	(?_fat_get_empty_clusters+1)& (0+255),w,b
 13965  0146C4  B4D8               	btfsc	status,2,c
 13966  0146C6  D002               	goto	l21548
 13967  0146C8                     u21360:
 13968                           
 13969                           ; BSR set to: 0
 13970                           ;fat16.c: 352: {
 13971                           ;fat16.c: 355: return 0xFD;
 13972  0146C8  0EFD               	movlw	253
 13973                           
 13974                           ; BSR set to: 0
 13975  0146CA  0012               	return	
 13976  0146CC                     l21548:
 13977                           
 13978                           ; BSR set to: 0
 13979                           ;fat16.c: 356: }
 13980                           ;fat16.c: 359: cluster = _get_empty_cluster(2);
 13981  0146CC  0E00               	movlw	0
 13982  0146CE  0100               	movlb	0	; () banked
 13983  0146D0  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 13984  0146D2  0E02               	movlw	2
 13985  0146D4  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 13986  0146D6  EC12  F0C2         	call	__get_empty_cluster	;wreg free
 13987  0146DA  C087  F0AE         	movff	?__get_empty_cluster,fat_create_file@cluster
 13988  0146DE  C088  F0AF         	movff	?__get_empty_cluster+1,fat_create_file@cluster+1
 13989                           
 13990                           ;fat16.c: 362: memcpy(root_entry.fileName, name, 8);
 13991  0146E2  0EB0               	movlw	low fat_create_file@root_entry
 13992  0146E4  0100               	movlb	0	; () banked
 13993  0146E6  6F60               	movwf	memcpy@d1& (0+255),b
 13994  0146E8  0E00               	movlw	high fat_create_file@root_entry
 13995  0146EA  0100               	movlb	0	; () banked
 13996  0146EC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13997  0146EE  C09B  F062         	movff	fat_create_file@name,memcpy@s1
 13998  0146F2  C09C  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 13999  0146F6  0E00               	movlw	0
 14000  0146F8  0100               	movlb	0	; () banked
 14001  0146FA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14002  0146FC  0E08               	movlw	8
 14003  0146FE  6F64               	movwf	memcpy@n& (0+255),b
 14004  014700  ECD4  F0C9         	call	_memcpy	;wreg free
 14005                           
 14006                           ;fat16.c: 363: memcpy(root_entry.fileExtension, extension, 3);
 14007  014704  0EB8               	movlw	low (fat_create_file@root_entry+8)
 14008  014706  0100               	movlb	0	; () banked
 14009  014708  6F60               	movwf	memcpy@d1& (0+255),b
 14010  01470A  0E00               	movlw	high (fat_create_file@root_entry+8)
 14011  01470C  0100               	movlb	0	; () banked
 14012  01470E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14013  014710  C09D  F062         	movff	fat_create_file@extension,memcpy@s1
 14014  014714  C09E  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 14015  014718  0E00               	movlw	0
 14016  01471A  0100               	movlb	0	; () banked
 14017  01471C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14018  01471E  0E03               	movlw	3
 14019  014720  6F64               	movwf	memcpy@n& (0+255),b
 14020  014722  ECD4  F0C9         	call	_memcpy	;wreg free
 14021                           
 14022                           ;fat16.c: 364: root_entry.attributes = 0x00;
 14023  014726  0E00               	movlw	0
 14024  014728  0100               	movlb	0	; () banked
 14025  01472A  6FBB               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 14026                           
 14027                           ; BSR set to: 0
 14028                           ;fat16.c: 365: root_entry.reserved1 = 0x00;
 14029  01472C  0E00               	movlw	0
 14030  01472E  0100               	movlb	0	; () banked
 14031  014730  6FBC               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 14032                           
 14033                           ; BSR set to: 0
 14034                           ;fat16.c: 366: root_entry.secondFractions = 0x00;
 14035  014732  0E00               	movlw	0
 14036  014734  0100               	movlb	0	; () banked
 14037  014736  6FBD               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 14038                           
 14039                           ; BSR set to: 0
 14040                           ;fat16.c: 367: root_entry.createdTime = _get_time();
 14041  014738  ECFC  F0C3         	call	__get_time	;wreg free
 14042  01473C  C064  F0BE         	movff	?__get_time,fat_create_file@root_entry+14
 14043  014740  C065  F0BF         	movff	?__get_time+1,fat_create_file@root_entry+15
 14044                           
 14045                           ;fat16.c: 368: root_entry.createdDate = _get_date();
 14046  014744  EC8C  F0C5         	call	__get_date	;wreg free
 14047  014748  C064  F0C0         	movff	?__get_date,fat_create_file@root_entry+16
 14048  01474C  C065  F0C1         	movff	?__get_date+1,fat_create_file@root_entry+17
 14049                           
 14050                           ;fat16.c: 369: root_entry.lastAccessDate = root_entry.createdDate;
 14051  014750  C0C0  F0C2         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 14052  014754  C0C1  F0C3         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 14053                           
 14054                           ;fat16.c: 370: root_entry.reserved2 = 0x00;
 14055  014758  0E00               	movlw	0
 14056  01475A  0100               	movlb	0	; () banked
 14057  01475C  6FC5               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 14058  01475E  0E00               	movlw	0
 14059  014760  6FC4               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 14060                           
 14061                           ; BSR set to: 0
 14062                           ;fat16.c: 371: root_entry.modifiedTime = root_entry.createdTime;
 14063  014762  C0BE  F0C6         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 14064  014766  C0BF  F0C7         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 14065                           
 14066                           ; BSR set to: 0
 14067                           ;fat16.c: 372: root_entry.modifiedDate = root_entry.createdDate;
 14068  01476A  C0C0  F0C8         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 14069  01476E  C0C1  F0C9         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 14070                           
 14071                           ; BSR set to: 0
 14072                           ;fat16.c: 373: root_entry.firstCluster = cluster;
 14073  014772  C0AE  F0CA         	movff	fat_create_file@cluster,fat_create_file@root_entry+26
 14074  014776  C0AF  F0CB         	movff	fat_create_file@cluster+1,fat_create_file@root_entry+27
 14075                           
 14076                           ; BSR set to: 0
 14077                           ;fat16.c: 374: root_entry.fileSize = size;
 14078  01477A  C09F  F0CC         	movff	fat_create_file@size,fat_create_file@root_entry+28
 14079  01477E  C0A0  F0CD         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 14080  014782  C0A1  F0CE         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 14081  014786  C0A2  F0CF         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 14082                           
 14083                           ;fat16.c: 377: _write_root(root_slot, &root_entry);
 14084  01478A  0EB0               	movlw	low fat_create_file@root_entry
 14085  01478C  0100               	movlb	0	; () banked
 14086  01478E  6F88               	movwf	__write_root@data& (0+255),b
 14087  014790  0E00               	movlw	high fat_create_file@root_entry
 14088  014792  0100               	movlb	0	; () banked
 14089  014794  6F89               	movwf	(__write_root@data+1)& (0+255),b
 14090  014796  0100               	movlb	0	; () banked
 14091  014798  51AB               	movf	fat_create_file@root_slot& (0+255),w,b
 14092  01479A  ECCA  F0C8         	call	__write_root
 14093                           
 14094                           ;fat16.c: 382: for(cluster_count=1; cluster_count<=number_of_clusters; ++cluster_count)
 14095  01479E  0E00               	movlw	0
 14096  0147A0  0100               	movlb	0	; () banked
 14097  0147A2  6FAA               	movwf	(fat_create_file@cluster_count+1)& (0+255),b
 14098  0147A4  0E01               	movlw	1
 14099  0147A6  6FA9               	movwf	fat_create_file@cluster_count& (0+255),b
 14100  0147A8  D037               	goto	l21588
 14101  0147AA                     l21578:
 14102                           
 14103                           ; BSR set to: 0
 14104                           ;fat16.c: 383: {
 14105                           ;fat16.c: 385: if(cluster_count==number_of_clusters)
 14106  0147AA  0100               	movlb	0	; () banked
 14107  0147AC  51AC               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 14108  0147AE  0100               	movlb	0	; () banked
 14109  0147B0  19A9               	xorwf	fat_create_file@cluster_count& (0+255),w,b
 14110  0147B2  E111               	bnz	l21582
 14111  0147B4  0100               	movlb	0	; () banked
 14112  0147B6  51AD               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 14113  0147B8  0100               	movlb	0	; () banked
 14114  0147BA  19AA               	xorwf	(fat_create_file@cluster_count+1)& (0+255),w,b
 14115  0147BC  A4D8               	btfss	status,2,c
 14116  0147BE  D00B               	goto	l21582
 14117                           
 14118                           ; BSR set to: 0
 14119                           ;fat16.c: 386: {
 14120                           ;fat16.c: 388: _write_fat(cluster, 0xFFFF);
 14121  0147C0  C0AE  F088         	movff	fat_create_file@cluster,__write_fat@cluster
 14122  0147C4  C0AF  F089         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 14123  0147C8  0EFF               	movlw	255
 14124  0147CA  0100               	movlb	0	; () banked
 14125  0147CC  6F8B               	movwf	(__write_fat@value+1)& (0+255),b
 14126  0147CE  698A               	setf	__write_fat@value& (0+255),b
 14127  0147D0  EC0A  F0CE         	call	__write_fat	;wreg free
 14128                           
 14129                           ;fat16.c: 389: }
 14130  0147D4  D01E               	goto	l21586
 14131  0147D6                     l21582:
 14132                           
 14133                           ;fat16.c: 390: else
 14134                           ;fat16.c: 391: {
 14135                           ;fat16.c: 393: next_cluster = _get_empty_cluster(cluster+1);
 14136  0147D6  0E01               	movlw	1
 14137  0147D8  0100               	movlb	0	; () banked
 14138  0147DA  25AE               	addwf	fat_create_file@cluster& (0+255),w,b
 14139  0147DC  0100               	movlb	0	; () banked
 14140  0147DE  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 14141  0147E0  0E00               	movlw	0
 14142  0147E2  0100               	movlb	0	; () banked
 14143  0147E4  21AF               	addwfc	(fat_create_file@cluster+1)& (0+255),w,b
 14144  0147E6  0100               	movlb	0	; () banked
 14145  0147E8  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 14146  0147EA  EC12  F0C2         	call	__get_empty_cluster	;wreg free
 14147  0147EE  C087  F0A7         	movff	?__get_empty_cluster,fat_create_file@next_cluster
 14148  0147F2  C088  F0A8         	movff	?__get_empty_cluster+1,fat_create_file@next_cluster+1
 14149                           
 14150                           ;fat16.c: 395: _write_fat(cluster, next_cluster);
 14151  0147F6  C0AE  F088         	movff	fat_create_file@cluster,__write_fat@cluster
 14152  0147FA  C0AF  F089         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 14153  0147FE  C0A7  F08A         	movff	fat_create_file@next_cluster,__write_fat@value
 14154  014802  C0A8  F08B         	movff	fat_create_file@next_cluster+1,__write_fat@value+1
 14155  014806  EC0A  F0CE         	call	__write_fat	;wreg free
 14156                           
 14157                           ;fat16.c: 397: cluster = next_cluster;
 14158  01480A  C0A7  F0AE         	movff	fat_create_file@next_cluster,fat_create_file@cluster
 14159  01480E  C0A8  F0AF         	movff	fat_create_file@next_cluster+1,fat_create_file@cluster+1
 14160  014812                     l21586:
 14161  014812  0100               	movlb	0	; () banked
 14162  014814  4BA9               	infsnz	fat_create_file@cluster_count& (0+255),f,b
 14163  014816  2BAA               	incf	(fat_create_file@cluster_count+1)& (0+255),f,b
 14164  014818                     l21588:
 14165                           
 14166                           ; BSR set to: 0
 14167  014818  0100               	movlb	0	; () banked
 14168  01481A  51A9               	movf	fat_create_file@cluster_count& (0+255),w,b
 14169  01481C  0100               	movlb	0	; () banked
 14170  01481E  5DAC               	subwf	fat_create_file@number_of_clusters& (0+255),w,b
 14171  014820  0100               	movlb	0	; () banked
 14172  014822  51AA               	movf	(fat_create_file@cluster_count+1)& (0+255),w,b
 14173  014824  0100               	movlb	0	; () banked
 14174  014826  59AD               	subwfb	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 14175  014828  B0D8               	btfsc	status,0,c
 14176  01482A  D7BF               	goto	l21578
 14177                           
 14178                           ; BSR set to: 0
 14179                           ;fat16.c: 398: }
 14180                           ;fat16.c: 399: }
 14181                           ;fat16.c: 400: return root_slot;
 14182                           
 14183                           ; BSR set to: 0
 14184  01482C  0100               	movlb	0	; () banked
 14185  01482E  51AB               	movf	fat_create_file@root_slot& (0+255),w,b
 14186  014830  0012               	return	
 14187  014832                     __end_of_fat_create_file:
 14188                           	opt stack 0
 14189                           tblptru	equ	0xFF8
 14190                           tblptrh	equ	0xFF7
 14191                           tblptrl	equ	0xFF6
 14192                           tablat	equ	0xFF5
 14193                           prodh	equ	0xFF4
 14194                           prodl	equ	0xFF3
 14195                           intcon	equ	0xFF2
 14196                           intcon2	equ	0xFF1
 14197                           intcon3	equ	0xFF0
 14198                           postinc0	equ	0xFEE
 14199                           wreg	equ	0xFE8
 14200                           postdec1	equ	0xFE5
 14201                           plusw1	equ	0xFE3
 14202                           fsr1h	equ	0xFE2
 14203                           fsr1l	equ	0xFE1
 14204                           indf2	equ	0xFDF
 14205                           postinc2	equ	0xFDE
 14206                           postdec2	equ	0xFDD
 14207                           plusw2	equ	0xFDB
 14208                           fsr2h	equ	0xFDA
 14209                           fsr2l	equ	0xFD9
 14210                           status	equ	0xFD8
 14211                           
 14212 ;; *************** function _fat_get_empty_clusters *****************
 14213 ;; Defined at:
 14214 ;;		line 132 in file "fat16.c"
 14215 ;; Parameters:    Size  Location     Type
 14216 ;;  maximum         2   39[BANK0 ] unsigned int 
 14217 ;; Auto vars:     Size  Location     Type
 14218 ;;  cluster         2   49[BANK0 ] unsigned int 
 14219 ;;  empty_cluste    2   47[BANK0 ] unsigned int 
 14220 ;;  value           2   45[BANK0 ] unsigned int 
 14221 ;;  offset          2   43[BANK0 ] unsigned int 
 14222 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 14223 ;; Return value:  Size  Location     Type
 14224 ;;                  2   39[BANK0 ] unsigned int 
 14225 ;; Registers used:
 14226 ;;		wreg, status,2, status,0, cstack
 14227 ;; Tracked objects:
 14228 ;;		On entry : 0/0
 14229 ;;		On exit  : 0/0
 14230 ;;		Unchanged: 0/0
 14231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14232 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14233 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14235 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14236 ;;Total ram usage:       12 bytes
 14237 ;; Hardware stack levels used:    1
 14238 ;; Hardware stack levels required when called:   14
 14239 ;; This function calls:
 14240 ;;		_flash_partial_read
 14241 ;; This function is called by:
 14242 ;;		_fat_create_file
 14243 ;; This function uses a non-reentrant model
 14244 ;;
 14245                           
 14246                           	psect	text56
 14247  017B58                     __ptext56:
 14248                           	opt stack 0
 14249  017B58                     _fat_get_empty_clusters:
 14250                           	opt stack 14
 14251                           
 14252                           ;fat16.c: 134: uint16_t empty_clusters = 0;
 14253                           
 14254                           ;incstack = 0
 14255  017B58  0E00               	movlw	0
 14256  017B5A  0100               	movlb	0	; () banked
 14257  017B5C  6F90               	movwf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),b
 14258  017B5E  0E00               	movlw	0
 14259  017B60  6F8F               	movwf	fat_get_empty_clusters@empty_clusters& (0+255),b
 14260                           
 14261                           ;fat16.c: 135: uint16_t cluster;
 14262                           ;fat16.c: 136: uint16_t fat_sector;
 14263                           ;fat16.c: 137: uint16_t offset;
 14264                           ;fat16.c: 138: uint16_t value;
 14265                           ;fat16.c: 141: for(cluster=2; cluster<(4074+2); ++cluster)
 14266  017B62  0E00               	movlw	0
 14267  017B64  0100               	movlb	0	; () banked
 14268  017B66  6F92               	movwf	(fat_get_empty_clusters@cluster+1)& (0+255),b
 14269  017B68  0E02               	movlw	2
 14270  017B6A  6F91               	movwf	fat_get_empty_clusters@cluster& (0+255),b
 14271  017B6C                     l19732:
 14272                           
 14273                           ; BSR set to: 0
 14274  017B6C  0EEC               	movlw	236
 14275  017B6E  0100               	movlb	0	; () banked
 14276  017B70  5D91               	subwf	fat_get_empty_clusters@cluster& (0+255),w,b
 14277  017B72  0E0F               	movlw	15
 14278  017B74  0100               	movlb	0	; () banked
 14279  017B76  5992               	subwfb	(fat_get_empty_clusters@cluster+1)& (0+255),w,b
 14280  017B78  B0D8               	btfsc	status,0,c
 14281  017B7A  D045               	goto	l2951
 14282                           
 14283                           ; BSR set to: 0
 14284                           ;fat16.c: 142: {
 14285                           ;fat16.c: 143: fat_sector = cluster>>8;
 14286                           
 14287                           ; BSR set to: 0
 14288                           
 14289                           ; BSR set to: 0
 14290  017B7C  0100               	movlb	0	; () banked
 14291  017B7E  5192               	movf	(fat_get_empty_clusters@cluster+1)& (0+255),w,b
 14292  017B80  0100               	movlb	0	; () banked
 14293  017B82  6F89               	movwf	fat_get_empty_clusters@fat_sector& (0+255),b
 14294  017B84  6B8A               	clrf	(fat_get_empty_clusters@fat_sector+1)& (0+255),b
 14295                           
 14296                           ; BSR set to: 0
 14297                           ;fat16.c: 144: fat_sector += 2;
 14298  017B86  0E02               	movlw	2
 14299  017B88  0100               	movlb	0	; () banked
 14300  017B8A  2789               	addwf	fat_get_empty_clusters@fat_sector& (0+255),f,b
 14301  017B8C  0E00               	movlw	0
 14302  017B8E  238A               	addwfc	(fat_get_empty_clusters@fat_sector+1)& (0+255),f,b
 14303                           
 14304                           ; BSR set to: 0
 14305                           ;fat16.c: 145: offset = cluster & 0xFF;
 14306  017B90  0100               	movlb	0	; () banked
 14307  017B92  5191               	movf	fat_get_empty_clusters@cluster& (0+255),w,b
 14308  017B94  0100               	movlb	0	; () banked
 14309  017B96  6F8B               	movwf	fat_get_empty_clusters@offset& (0+255),b
 14310  017B98  6B8C               	clrf	(fat_get_empty_clusters@offset+1)& (0+255),b
 14311                           
 14312                           ; BSR set to: 0
 14313                           ;fat16.c: 146: offset <<= 1;
 14314  017B9A  0100               	movlb	0	; () banked
 14315  017B9C  90D8               	bcf	status,0,c
 14316  017B9E  378B               	rlcf	fat_get_empty_clusters@offset& (0+255),f,b
 14317  017BA0  378C               	rlcf	(fat_get_empty_clusters@offset+1)& (0+255),f,b
 14318                           
 14319                           ; BSR set to: 0
 14320                           ;fat16.c: 147: flash_partial_read(fat_sector, offset, 2, &value);
 14321  017BA2  C089  F073         	movff	fat_get_empty_clusters@fat_sector,flash_partial_read@page
 14322  017BA6  C08A  F074         	movff	fat_get_empty_clusters@fat_sector+1,flash_partial_read@page+1
 14323  017BAA  C08B  F075         	movff	fat_get_empty_clusters@offset,flash_partial_read@start
 14324  017BAE  C08C  F076         	movff	fat_get_empty_clusters@offset+1,flash_partial_read@start+1
 14325  017BB2  0E00               	movlw	0
 14326  017BB4  0100               	movlb	0	; () banked
 14327  017BB6  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 14328  017BB8  0E02               	movlw	2
 14329  017BBA  6F77               	movwf	flash_partial_read@length& (0+255),b
 14330  017BBC  0E8D               	movlw	low fat_get_empty_clusters@value
 14331  017BBE  0100               	movlb	0	; () banked
 14332  017BC0  6F79               	movwf	flash_partial_read@data& (0+255),b
 14333  017BC2  0E00               	movlw	high fat_get_empty_clusters@value
 14334  017BC4  0100               	movlb	0	; () banked
 14335  017BC6  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 14336  017BC8  EC0D  F0BF         	call	_flash_partial_read	;wreg free
 14337                           
 14338                           ;fat16.c: 148: if(value==0x0000)
 14339  017BCC  0100               	movlb	0	; () banked
 14340  017BCE  518D               	movf	fat_get_empty_clusters@value& (0+255),w,b
 14341  017BD0  0100               	movlb	0	; () banked
 14342  017BD2  118E               	iorwf	(fat_get_empty_clusters@value+1)& (0+255),w,b
 14343  017BD4  A4D8               	btfss	status,2,c
 14344  017BD6  D013               	goto	l19754
 14345                           
 14346                           ; BSR set to: 0
 14347                           ;fat16.c: 149: {
 14348                           ;fat16.c: 150: ++empty_clusters;
 14349  017BD8  0100               	movlb	0	; () banked
 14350  017BDA  4B8F               	infsnz	fat_get_empty_clusters@empty_clusters& (0+255),f,b
 14351  017BDC  2B90               	incf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),f,b
 14352                           
 14353                           ; BSR set to: 0
 14354                           ;fat16.c: 151: if(empty_clusters==maximum)
 14355  017BDE  0100               	movlb	0	; () banked
 14356  017BE0  5187               	movf	fat_get_empty_clusters@maximum& (0+255),w,b
 14357  017BE2  0100               	movlb	0	; () banked
 14358  017BE4  198F               	xorwf	fat_get_empty_clusters@empty_clusters& (0+255),w,b
 14359  017BE6  E10B               	bnz	l19754
 14360  017BE8  0100               	movlb	0	; () banked
 14361  017BEA  5188               	movf	(fat_get_empty_clusters@maximum+1)& (0+255),w,b
 14362  017BEC  0100               	movlb	0	; () banked
 14363  017BEE  1990               	xorwf	(fat_get_empty_clusters@empty_clusters+1)& (0+255),w,b
 14364  017BF0  A4D8               	btfss	status,2,c
 14365  017BF2  D005               	goto	l19754
 14366                           
 14367                           ; BSR set to: 0
 14368                           ;fat16.c: 152: {
 14369                           ;fat16.c: 153: return empty_clusters;
 14370  017BF4  C08F  F087         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 14371  017BF8  C090  F088         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 14372  017BFC  0012               	return	
 14373  017BFE                     l19754:
 14374                           
 14375                           ; BSR set to: 0
 14376  017BFE  0100               	movlb	0	; () banked
 14377  017C00  4B91               	infsnz	fat_get_empty_clusters@cluster& (0+255),f,b
 14378  017C02  2B92               	incf	(fat_get_empty_clusters@cluster+1)& (0+255),f,b
 14379  017C04  D7B3               	goto	l19732
 14380  017C06                     l2951:
 14381                           
 14382                           ; BSR set to: 0
 14383                           ;fat16.c: 154: }
 14384                           ;fat16.c: 155: }
 14385                           ;fat16.c: 156: }
 14386                           ;fat16.c: 157: return empty_clusters;
 14387  017C06  C08F  F087         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 14388  017C0A  C090  F088         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 14389                           
 14390                           ; BSR set to: 0
 14391  017C0E  0012               	return		;funcret
 14392  017C10                     __end_of_fat_get_empty_clusters:
 14393                           	opt stack 0
 14394                           tblptru	equ	0xFF8
 14395                           tblptrh	equ	0xFF7
 14396                           tblptrl	equ	0xFF6
 14397                           tablat	equ	0xFF5
 14398                           prodh	equ	0xFF4
 14399                           prodl	equ	0xFF3
 14400                           intcon	equ	0xFF2
 14401                           intcon2	equ	0xFF1
 14402                           intcon3	equ	0xFF0
 14403                           postinc0	equ	0xFEE
 14404                           wreg	equ	0xFE8
 14405                           postdec1	equ	0xFE5
 14406                           plusw1	equ	0xFE3
 14407                           fsr1h	equ	0xFE2
 14408                           fsr1l	equ	0xFE1
 14409                           indf2	equ	0xFDF
 14410                           postinc2	equ	0xFDE
 14411                           postdec2	equ	0xFDD
 14412                           plusw2	equ	0xFDB
 14413                           fsr2h	equ	0xFDA
 14414                           fsr2l	equ	0xFD9
 14415                           status	equ	0xFD8
 14416                           
 14417 ;; *************** function _fat_find_file *****************
 14418 ;; Defined at:
 14419 ;;		line 262 in file "fat16.c"
 14420 ;; Parameters:    Size  Location     Type
 14421 ;;  name            2   39[BANK0 ] PTR unsigned char 
 14422 ;;		 -> filename(9), 
 14423 ;;  extension       2   41[BANK0 ] PTR unsigned char 
 14424 ;;		 -> extension(4), 
 14425 ;; Auto vars:     Size  Location     Type
 14426 ;;  buffer         11   43[BANK0 ] unsigned char [11]
 14427 ;;  offset          2   57[BANK0 ] unsigned int 
 14428 ;;  sector          2   55[BANK0 ] unsigned int 
 14429 ;;  slot            1   54[BANK0 ] unsigned char 
 14430 ;; Return value:  Size  Location     Type
 14431 ;;                  1    wreg      unsigned char 
 14432 ;; Registers used:
 14433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14434 ;; Tracked objects:
 14435 ;;		On entry : 0/0
 14436 ;;		On exit  : 0/0
 14437 ;;		Unchanged: 0/0
 14438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14439 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14440 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14442 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14443 ;;Total ram usage:       20 bytes
 14444 ;; Hardware stack levels used:    1
 14445 ;; Hardware stack levels required when called:   14
 14446 ;; This function calls:
 14447 ;;		_flash_partial_read
 14448 ;;		_strncmp
 14449 ;; This function is called by:
 14450 ;;		_fat_create_file
 14451 ;;		_log_write_to_disk
 14452 ;; This function uses a non-reentrant model
 14453 ;;
 14454                           
 14455                           	psect	text57
 14456  01693E                     __ptext57:
 14457                           	opt stack 0
 14458  01693E                     _fat_find_file:
 14459                           	opt stack 15
 14460                           
 14461                           ;fat16.c: 264: uint8_t slot;
 14462                           ;fat16.c: 265: uint16_t sector;
 14463                           ;fat16.c: 266: uint16_t offset;
 14464                           ;fat16.c: 267: uint8_t buffer[11];
 14465                           ;fat16.c: 268: slot = 0;
 14466                           
 14467                           ; BSR set to: 0
 14468                           ;incstack = 0
 14469  01693E  0E00               	movlw	0
 14470  016940  0100               	movlb	0	; () banked
 14471  016942  6F96               	movwf	fat_find_file@slot& (0+255),b
 14472                           
 14473                           ;fat16.c: 269: for(sector = 18; sector <= 21; ++sector)
 14474  016944  0E00               	movlw	0
 14475  016946  0100               	movlb	0	; () banked
 14476  016948  6F98               	movwf	(fat_find_file@sector+1)& (0+255),b
 14477  01694A  0E12               	movlw	18
 14478  01694C  6F97               	movwf	fat_find_file@sector& (0+255),b
 14479  01694E                     l19792:
 14480                           
 14481                           ; BSR set to: 0
 14482  01694E  0100               	movlb	0	; () banked
 14483  016950  5198               	movf	(fat_find_file@sector+1)& (0+255),w,b
 14484  016952  E16D               	bnz	l19834
 14485  016954  0E16               	movlw	22
 14486  016956  0100               	movlb	0	; () banked
 14487  016958  5D97               	subwf	fat_find_file@sector& (0+255),w,b
 14488  01695A  B0D8               	btfsc	status,0,c
 14489  01695C  D068               	goto	l19834
 14490                           
 14491                           ; BSR set to: 0
 14492                           ;fat16.c: 270: {
 14493                           ;fat16.c: 271: for(offset = 0; offset<512; offset += 32)
 14494                           
 14495                           ; BSR set to: 0
 14496                           
 14497                           ; BSR set to: 0
 14498  01695E  0E00               	movlw	0
 14499  016960  0100               	movlb	0	; () banked
 14500  016962  6F9A               	movwf	(fat_find_file@offset+1)& (0+255),b
 14501  016964  0E00               	movlw	0
 14502  016966  6F99               	movwf	fat_find_file@offset& (0+255),b
 14503  016968                     l19798:
 14504                           
 14505                           ; BSR set to: 0
 14506  016968  0E02               	movlw	2
 14507  01696A  0100               	movlb	0	; () banked
 14508  01696C  5D9A               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 14509  01696E  B0D8               	btfsc	status,0,c
 14510  016970  D05A               	goto	l19830
 14511                           
 14512                           ; BSR set to: 0
 14513                           ;fat16.c: 272: {
 14514                           ;fat16.c: 273: flash_partial_read(sector, offset, 11, &buffer);
 14515                           
 14516                           ; BSR set to: 0
 14517                           
 14518                           ; BSR set to: 0
 14519  016972  C097  F073         	movff	fat_find_file@sector,flash_partial_read@page
 14520  016976  C098  F074         	movff	fat_find_file@sector+1,flash_partial_read@page+1
 14521  01697A  C099  F075         	movff	fat_find_file@offset,flash_partial_read@start
 14522  01697E  C09A  F076         	movff	fat_find_file@offset+1,flash_partial_read@start+1
 14523  016982  0E00               	movlw	0
 14524  016984  0100               	movlb	0	; () banked
 14525  016986  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 14526  016988  0E0B               	movlw	11
 14527  01698A  6F77               	movwf	flash_partial_read@length& (0+255),b
 14528  01698C  0E8B               	movlw	low fat_find_file@buffer
 14529  01698E  0100               	movlb	0	; () banked
 14530  016990  6F79               	movwf	flash_partial_read@data& (0+255),b
 14531  016992  0E00               	movlw	high fat_find_file@buffer
 14532  016994  0100               	movlb	0	; () banked
 14533  016996  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 14534  016998  EC0D  F0BF         	call	_flash_partial_read	;wreg free
 14535                           
 14536                           ;fat16.c: 274: if(buffer[0]==0x00)
 14537  01699C  0100               	movlb	0	; () banked
 14538  01699E  518B               	movf	fat_find_file@buffer& (0+255),w,b
 14539  0169A0  0100               	movlb	0	; () banked
 14540  0169A2  A4D8               	btfss	status,2,c
 14541  0169A4  D002               	goto	l19812
 14542                           
 14543                           ; BSR set to: 0
 14544                           ;fat16.c: 275: {
 14545                           ;fat16.c: 278: return 0xFF;
 14546  0169A6  0EFF               	movlw	255
 14547                           
 14548                           ; BSR set to: 0
 14549  0169A8  0012               	return	
 14550  0169AA                     l19812:
 14551                           
 14552                           ; BSR set to: 0
 14553                           ;fat16.c: 280: else if(buffer[0]==0xE5)
 14554  0169AA  0EE5               	movlw	229
 14555  0169AC  0100               	movlb	0	; () banked
 14556  0169AE  198B               	xorwf	fat_find_file@buffer& (0+255),w,b
 14557  0169B0  B4D8               	btfsc	status,2,c
 14558  0169B2  D031               	goto	l19824
 14559                           
 14560                           ; BSR set to: 0
 14561                           ;fat16.c: 286: else
 14562                           ;fat16.c: 287: {
 14563                           ;fat16.c: 289: if(strncmp(name, &buffer[0], 8) == 0)
 14564                           
 14565                           ; BSR set to: 0
 14566                           
 14567                           ; BSR set to: 0
 14568                           ;fat16.c: 281: {
 14569                           ;fat16.c: 285: }
 14570  0169B4  C087  F060         	movff	fat_find_file@name,strncmp@s1
 14571  0169B8  C088  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 14572  0169BC  0E8B               	movlw	low fat_find_file@buffer
 14573  0169BE  0100               	movlb	0	; () banked
 14574  0169C0  6F62               	movwf	strncmp@s2& (0+255),b
 14575  0169C2  0E00               	movlw	high fat_find_file@buffer
 14576  0169C4  0100               	movlb	0	; () banked
 14577  0169C6  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 14578  0169C8  0E00               	movlw	0
 14579  0169CA  0100               	movlb	0	; () banked
 14580  0169CC  6F65               	movwf	(strncmp@len+1)& (0+255),b
 14581  0169CE  0E08               	movlw	8
 14582  0169D0  6F64               	movwf	strncmp@len& (0+255),b
 14583  0169D2  ECE7  F0C0         	call	_strncmp	;wreg free
 14584  0169D6  0100               	movlb	0	; () banked
 14585  0169D8  5160               	movf	?_strncmp& (0+255),w,b
 14586  0169DA  0100               	movlb	0	; () banked
 14587  0169DC  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 14588  0169DE  A4D8               	btfss	status,2,c
 14589  0169E0  D01A               	goto	l19824
 14590                           
 14591                           ; BSR set to: 0
 14592                           ;fat16.c: 290: {
 14593                           ;fat16.c: 292: if(strncmp(extension, &buffer[8], 3) == 0)
 14594  0169E2  C089  F060         	movff	fat_find_file@extension,strncmp@s1
 14595  0169E6  C08A  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 14596  0169EA  0E93               	movlw	low (fat_find_file@buffer+8)
 14597  0169EC  0100               	movlb	0	; () banked
 14598  0169EE  6F62               	movwf	strncmp@s2& (0+255),b
 14599  0169F0  0E00               	movlw	high (fat_find_file@buffer+8)
 14600  0169F2  0100               	movlb	0	; () banked
 14601  0169F4  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 14602  0169F6  0E00               	movlw	0
 14603  0169F8  0100               	movlb	0	; () banked
 14604  0169FA  6F65               	movwf	(strncmp@len+1)& (0+255),b
 14605  0169FC  0E03               	movlw	3
 14606  0169FE  6F64               	movwf	strncmp@len& (0+255),b
 14607  016A00  ECE7  F0C0         	call	_strncmp	;wreg free
 14608  016A04  0100               	movlb	0	; () banked
 14609  016A06  5160               	movf	?_strncmp& (0+255),w,b
 14610  016A08  0100               	movlb	0	; () banked
 14611  016A0A  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 14612  016A0C  A4D8               	btfss	status,2,c
 14613  016A0E  D003               	goto	l19824
 14614                           
 14615                           ; BSR set to: 0
 14616                           ;fat16.c: 293: {
 14617                           ;fat16.c: 296: return slot;
 14618  016A10  0100               	movlb	0	; () banked
 14619  016A12  5196               	movf	fat_find_file@slot& (0+255),w,b
 14620                           
 14621                           ; BSR set to: 0
 14622  016A14  0012               	return	
 14623  016A16                     l19824:
 14624                           
 14625                           ; BSR set to: 0
 14626                           ;fat16.c: 297: }
 14627                           ;fat16.c: 298: }
 14628                           ;fat16.c: 299: }
 14629                           ;fat16.c: 300: ++slot;
 14630  016A16  0100               	movlb	0	; () banked
 14631  016A18  2B96               	incf	fat_find_file@slot& (0+255),f,b
 14632                           
 14633                           ; BSR set to: 0
 14634  016A1A  0E20               	movlw	32
 14635  016A1C  0100               	movlb	0	; () banked
 14636  016A1E  2799               	addwf	fat_find_file@offset& (0+255),f,b
 14637  016A20  0E00               	movlw	0
 14638  016A22  239A               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 14639  016A24  D7A1               	goto	l19798
 14640  016A26                     l19830:
 14641                           
 14642                           ; BSR set to: 0
 14643  016A26  0100               	movlb	0	; () banked
 14644  016A28  4B97               	infsnz	fat_find_file@sector& (0+255),f,b
 14645  016A2A  2B98               	incf	(fat_find_file@sector+1)& (0+255),f,b
 14646  016A2C  D790               	goto	l19792
 14647  016A2E                     l19834:
 14648                           
 14649                           ; BSR set to: 0
 14650                           ;fat16.c: 301: }
 14651                           ;fat16.c: 302: }
 14652                           ;fat16.c: 303: return 0xFF;
 14653  016A2E  0EFF               	movlw	255
 14654  016A30  0012               	return	
 14655  016A32                     __end_of_fat_find_file:
 14656                           	opt stack 0
 14657                           tblptru	equ	0xFF8
 14658                           tblptrh	equ	0xFF7
 14659                           tblptrl	equ	0xFF6
 14660                           tablat	equ	0xFF5
 14661                           prodh	equ	0xFF4
 14662                           prodl	equ	0xFF3
 14663                           intcon	equ	0xFF2
 14664                           intcon2	equ	0xFF1
 14665                           intcon3	equ	0xFF0
 14666                           postinc0	equ	0xFEE
 14667                           wreg	equ	0xFE8
 14668                           postdec1	equ	0xFE5
 14669                           plusw1	equ	0xFE3
 14670                           fsr1h	equ	0xFE2
 14671                           fsr1l	equ	0xFE1
 14672                           indf2	equ	0xFDF
 14673                           postinc2	equ	0xFDE
 14674                           postdec2	equ	0xFDD
 14675                           plusw2	equ	0xFDB
 14676                           fsr2h	equ	0xFDA
 14677                           fsr2l	equ	0xFD9
 14678                           status	equ	0xFD8
 14679                           
 14680 ;; *************** function _strncmp *****************
 14681 ;; Defined at:
 14682 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\strncmp.c"
 14683 ;; Parameters:    Size  Location     Type
 14684 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 14685 ;;		 -> extension(4), filename(9), 
 14686 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 14687 ;;		 -> fat_find_file@buffer(11), 
 14688 ;;  len             2    4[BANK0 ] unsigned int 
 14689 ;; Auto vars:     Size  Location     Type
 14690 ;;		None
 14691 ;; Return value:  Size  Location     Type
 14692 ;;                  2    0[BANK0 ] int 
 14693 ;; Registers used:
 14694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14695 ;; Tracked objects:
 14696 ;;		On entry : 0/0
 14697 ;;		On exit  : 0/0
 14698 ;;		Unchanged: 0/0
 14699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14700 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14702 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14703 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14704 ;;Total ram usage:        9 bytes
 14705 ;; Hardware stack levels used:    1
 14706 ;; Hardware stack levels required when called:   10
 14707 ;; This function calls:
 14708 ;;		Nothing
 14709 ;; This function is called by:
 14710 ;;		_fat_find_file
 14711 ;; This function uses a non-reentrant model
 14712 ;;
 14713                           
 14714                           	psect	text58
 14715  0181CE                     __ptext58:
 14716                           	opt stack 0
 14717  0181CE                     _strncmp:
 14718                           	opt stack 18
 14719                           
 14720                           ; BSR set to: 0
 14721                           ;incstack = 0
 14722  0181CE  D039               	goto	l19066
 14723  0181D0                     l19056:
 14724  0181D0  C060  FFD9         	movff	strncmp@s1,fsr2l
 14725  0181D4  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 14726  0181D8  50DF               	movf	indf2,w,c
 14727  0181DA  B4D8               	btfsc	status,2,c
 14728  0181DC  D00C               	goto	l19060
 14729  0181DE  C062  FFD9         	movff	strncmp@s2,fsr2l
 14730  0181E2  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 14731  0181E6  C060  FFE1         	movff	strncmp@s1,fsr1l
 14732  0181EA  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 14733  0181EE  50DE               	movf	postinc2,w,c
 14734  0181F0  18E6               	xorwf	postinc1,w,c
 14735  0181F2  B4D8               	btfsc	status,2,c
 14736  0181F4  D020               	goto	l19064
 14737  0181F6                     l19060:
 14738  0181F6  C062  FFD9         	movff	strncmp@s2,fsr2l
 14739  0181FA  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 14740  0181FE  50DF               	movf	indf2,w,c
 14741  018200  0100               	movlb	0	; () banked
 14742  018202  6F66               	movwf	??_strncmp& (0+255),b
 14743  018204  6B67               	clrf	(??_strncmp+1)& (0+255),b
 14744  018206  0100               	movlb	0	; () banked
 14745  018208  1F66               	comf	??_strncmp& (0+255),f,b
 14746  01820A  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 14747  01820C  4B66               	infsnz	??_strncmp& (0+255),f,b
 14748  01820E  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 14749  018210  C060  FFD9         	movff	strncmp@s1,fsr2l
 14750  018214  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 14751  018218  50DF               	movf	indf2,w,c
 14752  01821A  0100               	movlb	0	; () banked
 14753  01821C  6F68               	movwf	(??_strncmp+2)& (0+255),b
 14754  01821E  0100               	movlb	0	; () banked
 14755  018220  5168               	movf	(??_strncmp+2)& (0+255),w,b
 14756  018222  0100               	movlb	0	; () banked
 14757  018224  2566               	addwf	??_strncmp& (0+255),w,b
 14758  018226  0100               	movlb	0	; () banked
 14759  018228  6F60               	movwf	?_strncmp& (0+255),b
 14760  01822A  0E00               	movlw	0
 14761  01822C  0100               	movlb	0	; () banked
 14762  01822E  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 14763  018230  0100               	movlb	0	; () banked
 14764  018232  6F61               	movwf	(?_strncmp+1)& (0+255),b
 14765                           
 14766                           ; BSR set to: 0
 14767  018234  0012               	return	
 14768  018236                     l19064:
 14769  018236  0100               	movlb	0	; () banked
 14770  018238  4B60               	infsnz	strncmp@s1& (0+255),f,b
 14771  01823A  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 14772  01823C  0100               	movlb	0	; () banked
 14773  01823E  4B62               	infsnz	strncmp@s2& (0+255),f,b
 14774  018240  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 14775  018242                     l19066:
 14776  018242  0100               	movlb	0	; () banked
 14777  018244  0764               	decf	strncmp@len& (0+255),f,b
 14778  018246  A0D8               	btfss	status,0,c
 14779  018248  0765               	decf	(strncmp@len+1)& (0+255),f,b
 14780  01824A  0100               	movlb	0	; () banked
 14781  01824C  2964               	incf	strncmp@len& (0+255),w,b
 14782  01824E  E1C0               	bnz	l19056
 14783  018250  0100               	movlb	0	; () banked
 14784  018252  2965               	incf	(strncmp@len+1)& (0+255),w,b
 14785  018254  A4D8               	btfss	status,2,c
 14786  018256  D7BC               	goto	l19056
 14787                           
 14788                           ; BSR set to: 0
 14789                           
 14790                           ; BSR set to: 0
 14791  018258  0E00               	movlw	0
 14792  01825A  0100               	movlb	0	; () banked
 14793  01825C  6F61               	movwf	(?_strncmp+1)& (0+255),b
 14794  01825E  0E00               	movlw	0
 14795  018260  6F60               	movwf	?_strncmp& (0+255),b
 14796  018262  0012               	return	
 14797  018264                     __end_of_strncmp:
 14798                           	opt stack 0
 14799                           tblptru	equ	0xFF8
 14800                           tblptrh	equ	0xFF7
 14801                           tblptrl	equ	0xFF6
 14802                           tablat	equ	0xFF5
 14803                           prodh	equ	0xFF4
 14804                           prodl	equ	0xFF3
 14805                           intcon	equ	0xFF2
 14806                           intcon2	equ	0xFF1
 14807                           intcon3	equ	0xFF0
 14808                           postinc0	equ	0xFEE
 14809                           wreg	equ	0xFE8
 14810                           postinc1	equ	0xFE6
 14811                           postdec1	equ	0xFE5
 14812                           plusw1	equ	0xFE3
 14813                           fsr1h	equ	0xFE2
 14814                           fsr1l	equ	0xFE1
 14815                           indf2	equ	0xFDF
 14816                           postinc2	equ	0xFDE
 14817                           postdec2	equ	0xFDD
 14818                           plusw2	equ	0xFDB
 14819                           fsr2h	equ	0xFDA
 14820                           fsr2l	equ	0xFD9
 14821                           status	equ	0xFD8
 14822                           
 14823 ;; *************** function __get_available_root_entry *****************
 14824 ;; Defined at:
 14825 ;;		line 96 in file "fat16.c"
 14826 ;; Parameters:    Size  Location     Type
 14827 ;;		None
 14828 ;; Auto vars:     Size  Location     Type
 14829 ;;  file_number     1   46[BANK0 ] unsigned char 
 14830 ;; Return value:  Size  Location     Type
 14831 ;;                  1    wreg      unsigned char 
 14832 ;; Registers used:
 14833 ;;		wreg, status,2, status,0, cstack
 14834 ;; Tracked objects:
 14835 ;;		On entry : 0/0
 14836 ;;		On exit  : 0/0
 14837 ;;		Unchanged: 0/0
 14838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14840 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14842 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14843 ;;Total ram usage:        1 bytes
 14844 ;; Hardware stack levels used:    1
 14845 ;; Hardware stack levels required when called:   15
 14846 ;; This function calls:
 14847 ;;		__root_is_available
 14848 ;; This function is called by:
 14849 ;;		_fat_create_file
 14850 ;; This function uses a non-reentrant model
 14851 ;;
 14852                           
 14853                           	psect	text59
 14854  01A3D0                     __ptext59:
 14855                           	opt stack 0
 14856  01A3D0                     __get_available_root_entry:
 14857                           	opt stack 13
 14858                           
 14859                           ;fat16.c: 98: uint8_t file_number;
 14860                           ;fat16.c: 99: for(file_number=0; file_number<64; ++file_number)
 14861                           
 14862                           ; BSR set to: 0
 14863                           ;incstack = 0
 14864  01A3D0  0E00               	movlw	0
 14865  01A3D2  0100               	movlb	0	; () banked
 14866  01A3D4  6F8E               	movwf	__get_available_root_entry@file_number& (0+255),b
 14867  01A3D6                     l19684:
 14868                           
 14869                           ; BSR set to: 0
 14870  01A3D6  0E3F               	movlw	63
 14871  01A3D8  0100               	movlb	0	; () banked
 14872  01A3DA  658E               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 14873  01A3DC  D001               	goto	l19688
 14874  01A3DE  D00D               	goto	l19698
 14875  01A3E0                     l19688:
 14876                           
 14877                           ; BSR set to: 0
 14878                           ;fat16.c: 100: {
 14879                           ;fat16.c: 101: if(_root_is_available(file_number))
 14880  01A3E0  0100               	movlb	0	; () banked
 14881  01A3E2  518E               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14882  01A3E4  EC32  F0C1         	call	__root_is_available
 14883  01A3E8  0900               	iorlw	0
 14884  01A3EA  B4D8               	btfsc	status,2,c
 14885  01A3EC  D003               	goto	l19694
 14886                           
 14887                           ;fat16.c: 102: {
 14888                           ;fat16.c: 103: return file_number;
 14889  01A3EE  0100               	movlb	0	; () banked
 14890  01A3F0  518E               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14891                           
 14892                           ; BSR set to: 0
 14893  01A3F2  0012               	return	
 14894  01A3F4                     l19694:
 14895  01A3F4  0100               	movlb	0	; () banked
 14896  01A3F6  2B8E               	incf	__get_available_root_entry@file_number& (0+255),f,b
 14897  01A3F8  D7EE               	goto	l19684
 14898  01A3FA                     l19698:
 14899                           
 14900                           ; BSR set to: 0
 14901                           ;fat16.c: 104: }
 14902                           ;fat16.c: 105: }
 14903                           ;fat16.c: 106: return 0xFF;
 14904  01A3FA  0EFF               	movlw	255
 14905  01A3FC  0012               	return	
 14906  01A3FE                     __end_of__get_available_root_entry:
 14907                           	opt stack 0
 14908                           tblptru	equ	0xFF8
 14909                           tblptrh	equ	0xFF7
 14910                           tblptrl	equ	0xFF6
 14911                           tablat	equ	0xFF5
 14912                           prodh	equ	0xFF4
 14913                           prodl	equ	0xFF3
 14914                           intcon	equ	0xFF2
 14915                           intcon2	equ	0xFF1
 14916                           intcon3	equ	0xFF0
 14917                           postinc0	equ	0xFEE
 14918                           wreg	equ	0xFE8
 14919                           postinc1	equ	0xFE6
 14920                           postdec1	equ	0xFE5
 14921                           plusw1	equ	0xFE3
 14922                           fsr1h	equ	0xFE2
 14923                           fsr1l	equ	0xFE1
 14924                           indf2	equ	0xFDF
 14925                           postinc2	equ	0xFDE
 14926                           postdec2	equ	0xFDD
 14927                           plusw2	equ	0xFDB
 14928                           fsr2h	equ	0xFDA
 14929                           fsr2l	equ	0xFD9
 14930                           status	equ	0xFD8
 14931                           
 14932 ;; *************** function _fat_append_to_file *****************
 14933 ;; Defined at:
 14934 ;;		line 460 in file "fat16.c"
 14935 ;; Parameters:    Size  Location     Type
 14936 ;;  file_number     1    wreg     unsigned char 
 14937 ;;  number_of_by    2   49[BANK0 ] unsigned int 
 14938 ;;  data            2   51[BANK0 ] PTR unsigned char 
 14939 ;;		 -> log_write_to_disk@log_entry(32), 
 14940 ;; Auto vars:     Size  Location     Type
 14941 ;;  file_number     1   73[BANK0 ] unsigned char 
 14942 ;;  root           32   80[BANK0 ] struct .
 14943 ;;  position        4   76[BANK0 ] unsigned long 
 14944 ;;  file_size       4   63[BANK0 ] unsigned long 
 14945 ;;  length          2   74[BANK0 ] unsigned int 
 14946 ;;  offset          2   71[BANK0 ] unsigned int 
 14947 ;;  fat_cluster     2   69[BANK0 ] unsigned int 
 14948 ;;  new_cluster     2   67[BANK0 ] unsigned int 
 14949 ;;  sector          2   61[BANK0 ] unsigned int 
 14950 ;; Return value:  Size  Location     Type
 14951 ;;                  1    wreg      unsigned char 
 14952 ;; Registers used:
 14953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14954 ;; Tracked objects:
 14955 ;;		On entry : 0/0
 14956 ;;		On exit  : 0/0
 14957 ;;		Unchanged: 0/0
 14958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14959 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14960 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14961 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14962 ;;      Totals:         0      63       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14963 ;;Total ram usage:       63 bytes
 14964 ;; Hardware stack levels used:    1
 14965 ;; Hardware stack levels required when called:   16
 14966 ;; This function calls:
 14967 ;;		__get_empty_cluster
 14968 ;;		__read_fat
 14969 ;;		__read_root
 14970 ;;		__root_is_available
 14971 ;;		__sector_from_cluster
 14972 ;;		__update_modified_time
 14973 ;;		__write_fat
 14974 ;;		__write_root
 14975 ;;		_flash_partial_write
 14976 ;; This function is called by:
 14977 ;;		_log_write_to_disk
 14978 ;; This function uses a non-reentrant model
 14979 ;;
 14980                           
 14981                           	psect	text60
 14982  013056                     __ptext60:
 14983                           	opt stack 0
 14984  013056                     _fat_append_to_file:
 14985                           	opt stack 13
 14986                           
 14987                           ; BSR set to: 0
 14988                           ;incstack = 0
 14989                           ;fat_append_to_file@file_number stored from wreg
 14990  013056  0100               	movlb	0	; () banked
 14991  013058  6FA9               	movwf	fat_append_to_file@file_number& (0+255),b
 14992                           
 14993                           ;fat16.c: 462: rootEntry_t root;
 14994                           ;fat16.c: 463: uint32_t file_size;
 14995                           ;fat16.c: 464: uint16_t fat_cluster;
 14996                           ;fat16.c: 465: uint16_t new_cluster;
 14997                           ;fat16.c: 466: uint32_t position;
 14998                           ;fat16.c: 467: uint16_t offset;
 14999                           ;fat16.c: 468: uint16_t sector;
 15000                           ;fat16.c: 469: uint16_t length;
 15001                           ;fat16.c: 472: if(file_number>=64)
 15002  01305A  0E3F               	movlw	63
 15003  01305C  0100               	movlb	0	; () banked
 15004  01305E  65A9               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 15005  013060  D001               	goto	l21598
 15006  013062  0012               	return	
 15007  013064                     l21598:
 15008                           
 15009                           ; BSR set to: 0
 15010                           ;fat16.c: 476: }
 15011                           ;fat16.c: 479: if(_root_is_available(file_number))
 15012  013064  0100               	movlb	0	; () banked
 15013  013066  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 15014  013068  EC32  F0C1         	call	__root_is_available
 15015  01306C  0900               	iorlw	0
 15016  01306E  A4D8               	btfss	status,2,c
 15017  013070  0012               	return	
 15018                           
 15019                           ;fat16.c: 483: }
 15020                           ;fat16.c: 486: _read_root(file_number, &root);
 15021                           
 15022                           ;fat16.c: 480: {
 15023                           ;fat16.c: 482: return 0xFE;
 15024                           ;	Return value of _fat_append_to_file is never used
 15025  013072  0EB0               	movlw	low fat_append_to_file@root
 15026  013074  0100               	movlb	0	; () banked
 15027  013076  6F87               	movwf	__read_root@data& (0+255),b
 15028  013078  0E00               	movlw	high fat_append_to_file@root
 15029  01307A  0100               	movlb	0	; () banked
 15030  01307C  6F88               	movwf	(__read_root@data+1)& (0+255),b
 15031  01307E  0100               	movlb	0	; () banked
 15032  013080  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 15033  013082  EC00  F0C9         	call	__read_root
 15034                           
 15035                           ;fat16.c: 487: file_size = root.fileSize;
 15036  013086  C0CC  F09F         	movff	fat_append_to_file@root+28,fat_append_to_file@file_size
 15037  01308A  C0CD  F0A0         	movff	fat_append_to_file@root+29,fat_append_to_file@file_size+1
 15038  01308E  C0CE  F0A1         	movff	fat_append_to_file@root+30,fat_append_to_file@file_size+2
 15039  013092  C0CF  F0A2         	movff	fat_append_to_file@root+31,fat_append_to_file@file_size+3
 15040                           
 15041                           ;fat16.c: 488: fat_cluster = root.firstCluster;
 15042  013096  C0CA  F0A5         	movff	fat_append_to_file@root+26,fat_append_to_file@fat_cluster
 15043  01309A  C0CB  F0A6         	movff	fat_append_to_file@root+27,fat_append_to_file@fat_cluster+1
 15044                           
 15045                           ;fat16.c: 491: position = 0;
 15046  01309E  0E00               	movlw	0
 15047  0130A0  0100               	movlb	0	; () banked
 15048  0130A2  6FAC               	movwf	fat_append_to_file@position& (0+255),b
 15049  0130A4  0E00               	movlw	0
 15050  0130A6  6FAD               	movwf	(fat_append_to_file@position+1)& (0+255),b
 15051  0130A8  0E00               	movlw	0
 15052  0130AA  6FAE               	movwf	(fat_append_to_file@position+2)& (0+255),b
 15053  0130AC  0E00               	movlw	0
 15054  0130AE  6FAF               	movwf	(fat_append_to_file@position+3)& (0+255),b
 15055                           
 15056                           ;fat16.c: 492: while((file_size-position)>512)
 15057  0130B0  D013               	goto	l21614
 15058  0130B2                     l21610:
 15059                           
 15060                           ; BSR set to: 0
 15061                           ;fat16.c: 493: {
 15062                           ;fat16.c: 494: fat_cluster = _read_fat(fat_cluster);
 15063  0130B2  C0A5  F087         	movff	fat_append_to_file@fat_cluster,__read_fat@cluster
 15064  0130B6  C0A6  F088         	movff	fat_append_to_file@fat_cluster+1,__read_fat@cluster+1
 15065  0130BA  ECAF  F0CC         	call	__read_fat	;wreg free
 15066  0130BE  C087  F0A5         	movff	?__read_fat,fat_append_to_file@fat_cluster
 15067  0130C2  C088  F0A6         	movff	?__read_fat+1,fat_append_to_file@fat_cluster+1
 15068                           
 15069                           ;fat16.c: 495: position += 512;
 15070  0130C6  0E00               	movlw	0
 15071  0130C8  0100               	movlb	0	; () banked
 15072  0130CA  27AC               	addwf	fat_append_to_file@position& (0+255),f,b
 15073  0130CC  0E02               	movlw	2
 15074  0130CE  23AD               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 15075  0130D0  0E00               	movlw	0
 15076  0130D2  23AE               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 15077  0130D4  0E00               	movlw	0
 15078  0130D6  23AF               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 15079  0130D8                     l21614:
 15080                           
 15081                           ; BSR set to: 0
 15082  0130D8  C0AC  F095         	movff	fat_append_to_file@position,??_fat_append_to_file
 15083  0130DC  C0AD  F096         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 15084  0130E0  C0AE  F097         	movff	fat_append_to_file@position+2,??_fat_append_to_file+2
 15085  0130E4  C0AF  F098         	movff	fat_append_to_file@position+3,??_fat_append_to_file+3
 15086  0130E8  0100               	movlb	0	; () banked
 15087  0130EA  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 15088  0130EC  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 15089  0130EE  1F97               	comf	(??_fat_append_to_file+2)& (0+255),f,b
 15090  0130F0  1F98               	comf	(??_fat_append_to_file+3)& (0+255),f,b
 15091  0130F2  2B95               	incf	??_fat_append_to_file& (0+255),f,b
 15092  0130F4  0E00               	movlw	0
 15093  0130F6  2396               	addwfc	(??_fat_append_to_file+1)& (0+255),f,b
 15094  0130F8  2397               	addwfc	(??_fat_append_to_file+2)& (0+255),f,b
 15095  0130FA  2398               	addwfc	(??_fat_append_to_file+3)& (0+255),f,b
 15096  0130FC  0100               	movlb	0	; () banked
 15097  0130FE  519F               	movf	fat_append_to_file@file_size& (0+255),w,b
 15098  013100  0100               	movlb	0	; () banked
 15099  013102  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 15100  013104  0100               	movlb	0	; () banked
 15101  013106  6F99               	movwf	(??_fat_append_to_file+4)& (0+255),b
 15102  013108  0100               	movlb	0	; () banked
 15103  01310A  51A0               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 15104  01310C  0100               	movlb	0	; () banked
 15105  01310E  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 15106  013110  0100               	movlb	0	; () banked
 15107  013112  6F9A               	movwf	(??_fat_append_to_file+5)& (0+255),b
 15108  013114  0100               	movlb	0	; () banked
 15109  013116  51A1               	movf	(fat_append_to_file@file_size+2)& (0+255),w,b
 15110  013118  0100               	movlb	0	; () banked
 15111  01311A  2197               	addwfc	(??_fat_append_to_file+2)& (0+255),w,b
 15112  01311C  0100               	movlb	0	; () banked
 15113  01311E  6F9B               	movwf	(??_fat_append_to_file+6)& (0+255),b
 15114  013120  0100               	movlb	0	; () banked
 15115  013122  51A2               	movf	(fat_append_to_file@file_size+3)& (0+255),w,b
 15116  013124  0100               	movlb	0	; () banked
 15117  013126  2198               	addwfc	(??_fat_append_to_file+3)& (0+255),w,b
 15118  013128  0100               	movlb	0	; () banked
 15119  01312A  6F9C               	movwf	(??_fat_append_to_file+7)& (0+255),b
 15120  01312C  0100               	movlb	0	; () banked
 15121  01312E  519C               	movf	(??_fat_append_to_file+7)& (0+255),w,b
 15122  013130  0100               	movlb	0	; () banked
 15123  013132  119B               	iorwf	(??_fat_append_to_file+6)& (0+255),w,b
 15124  013134  E1BE               	bnz	l21610
 15125  013136  0100               	movlb	0	; () banked
 15126  013138  0599               	decf	(??_fat_append_to_file+4)& (0+255),w,b
 15127  01313A  0E02               	movlw	2
 15128  01313C  0100               	movlb	0	; () banked
 15129  01313E  599A               	subwfb	(??_fat_append_to_file+5)& (0+255),w,b
 15130  013140  B0D8               	btfsc	status,0,c
 15131  013142  D7B7               	goto	l21610
 15132                           
 15133                           ; BSR set to: 0
 15134                           ;fat16.c: 496: }
 15135                           ;fat16.c: 499: offset = file_size - position;
 15136                           
 15137                           ; BSR set to: 0
 15138  013144  C0AC  F095         	movff	fat_append_to_file@position,??_fat_append_to_file
 15139  013148  C0AD  F096         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 15140  01314C  0100               	movlb	0	; () banked
 15141  01314E  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 15142  013150  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 15143  013152  4B95               	infsnz	??_fat_append_to_file& (0+255),f,b
 15144  013154  2B96               	incf	(??_fat_append_to_file+1)& (0+255),f,b
 15145  013156  0100               	movlb	0	; () banked
 15146  013158  519F               	movf	fat_append_to_file@file_size& (0+255),w,b
 15147  01315A  0100               	movlb	0	; () banked
 15148  01315C  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 15149  01315E  0100               	movlb	0	; () banked
 15150  013160  6FA7               	movwf	fat_append_to_file@offset& (0+255),b
 15151  013162  0100               	movlb	0	; () banked
 15152  013164  51A0               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 15153  013166  0100               	movlb	0	; () banked
 15154  013168  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 15155  01316A  0100               	movlb	0	; () banked
 15156  01316C  6FA8               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 15157                           
 15158                           ; BSR set to: 0
 15159                           ;fat16.c: 502: position = 0;
 15160  01316E  0E00               	movlw	0
 15161  013170  0100               	movlb	0	; () banked
 15162  013172  6FAC               	movwf	fat_append_to_file@position& (0+255),b
 15163  013174  0E00               	movlw	0
 15164  013176  6FAD               	movwf	(fat_append_to_file@position+1)& (0+255),b
 15165  013178  0E00               	movlw	0
 15166  01317A  6FAE               	movwf	(fat_append_to_file@position+2)& (0+255),b
 15167  01317C  0E00               	movlw	0
 15168  01317E  6FAF               	movwf	(fat_append_to_file@position+3)& (0+255),b
 15169                           
 15170                           ;fat16.c: 503: while(position < number_of_bytes)
 15171  013180  D08A               	goto	l21642
 15172  013182                     l21620:
 15173                           
 15174                           ; BSR set to: 0
 15175                           ;fat16.c: 504: {
 15176                           ;fat16.c: 506: if(offset==512)
 15177  013182  0E02               	movlw	2
 15178  013184  0100               	movlb	0	; () banked
 15179  013186  19A8               	xorwf	(fat_append_to_file@offset+1)& (0+255),w,b
 15180  013188  0100               	movlb	0	; () banked
 15181  01318A  11A7               	iorwf	fat_append_to_file@offset& (0+255),w,b
 15182  01318C  A4D8               	btfss	status,2,c
 15183  01318E  D028               	goto	l21628
 15184                           
 15185                           ; BSR set to: 0
 15186                           ;fat16.c: 507: {
 15187                           ;fat16.c: 510: new_cluster = _get_empty_cluster(0x0000);
 15188  013190  0E00               	movlw	0
 15189  013192  0100               	movlb	0	; () banked
 15190  013194  6F88               	movwf	(__get_empty_cluster@first_cluster+1)& (0+255),b
 15191  013196  0E00               	movlw	0
 15192  013198  6F87               	movwf	__get_empty_cluster@first_cluster& (0+255),b
 15193  01319A  EC12  F0C2         	call	__get_empty_cluster	;wreg free
 15194  01319E  C087  F0A3         	movff	?__get_empty_cluster,fat_append_to_file@new_cluster
 15195  0131A2  C088  F0A4         	movff	?__get_empty_cluster+1,fat_append_to_file@new_cluster+1
 15196                           
 15197                           ;fat16.c: 512: _write_fat(fat_cluster, new_cluster);
 15198  0131A6  C0A5  F088         	movff	fat_append_to_file@fat_cluster,__write_fat@cluster
 15199  0131AA  C0A6  F089         	movff	fat_append_to_file@fat_cluster+1,__write_fat@cluster+1
 15200  0131AE  C0A3  F08A         	movff	fat_append_to_file@new_cluster,__write_fat@value
 15201  0131B2  C0A4  F08B         	movff	fat_append_to_file@new_cluster+1,__write_fat@value+1
 15202  0131B6  EC0A  F0CE         	call	__write_fat	;wreg free
 15203                           
 15204                           ;fat16.c: 514: _write_fat(new_cluster, 0xFFFF);
 15205  0131BA  C0A3  F088         	movff	fat_append_to_file@new_cluster,__write_fat@cluster
 15206  0131BE  C0A4  F089         	movff	fat_append_to_file@new_cluster+1,__write_fat@cluster+1
 15207  0131C2  0EFF               	movlw	255
 15208  0131C4  0100               	movlb	0	; () banked
 15209  0131C6  6F8B               	movwf	(__write_fat@value+1)& (0+255),b
 15210  0131C8  698A               	setf	__write_fat@value& (0+255),b
 15211  0131CA  EC0A  F0CE         	call	__write_fat	;wreg free
 15212                           
 15213                           ;fat16.c: 516: fat_cluster = new_cluster;
 15214  0131CE  C0A3  F0A5         	movff	fat_append_to_file@new_cluster,fat_append_to_file@fat_cluster
 15215  0131D2  C0A4  F0A6         	movff	fat_append_to_file@new_cluster+1,fat_append_to_file@fat_cluster+1
 15216                           
 15217                           ;fat16.c: 517: offset = 0;
 15218  0131D6  0E00               	movlw	0
 15219  0131D8  0100               	movlb	0	; () banked
 15220  0131DA  6FA8               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 15221  0131DC  0E00               	movlw	0
 15222  0131DE  6FA7               	movwf	fat_append_to_file@offset& (0+255),b
 15223  0131E0                     l21628:
 15224                           
 15225                           ; BSR set to: 0
 15226                           ;fat16.c: 518: }
 15227                           ;fat16.c: 521: sector = _sector_from_cluster(fat_cluster);
 15228  0131E0  C0A5  F060         	movff	fat_append_to_file@fat_cluster,__sector_from_cluster@fat_cluster
 15229  0131E4  C0A6  F061         	movff	fat_append_to_file@fat_cluster+1,__sector_from_cluster@fat_cluster+1
 15230  0131E8  ECE4  F0D4         	call	__sector_from_cluster	;wreg free
 15231  0131EC  C060  F09D         	movff	?__sector_from_cluster,fat_append_to_file@sector
 15232  0131F0  C061  F09E         	movff	?__sector_from_cluster+1,fat_append_to_file@sector+1
 15233                           
 15234                           ;fat16.c: 524: length = 512 - offset;
 15235  0131F4  C0A7  F095         	movff	fat_append_to_file@offset,??_fat_append_to_file
 15236  0131F8  C0A8  F096         	movff	fat_append_to_file@offset+1,??_fat_append_to_file+1
 15237  0131FC  0100               	movlb	0	; () banked
 15238  0131FE  1F95               	comf	??_fat_append_to_file& (0+255),f,b
 15239  013200  1F96               	comf	(??_fat_append_to_file+1)& (0+255),f,b
 15240  013202  4B95               	infsnz	??_fat_append_to_file& (0+255),f,b
 15241  013204  2B96               	incf	(??_fat_append_to_file+1)& (0+255),f,b
 15242  013206  0E00               	movlw	0
 15243  013208  0100               	movlb	0	; () banked
 15244  01320A  2595               	addwf	??_fat_append_to_file& (0+255),w,b
 15245  01320C  0100               	movlb	0	; () banked
 15246  01320E  6FAA               	movwf	fat_append_to_file@length& (0+255),b
 15247  013210  0E02               	movlw	2
 15248  013212  0100               	movlb	0	; () banked
 15249  013214  2196               	addwfc	(??_fat_append_to_file+1)& (0+255),w,b
 15250  013216  0100               	movlb	0	; () banked
 15251  013218  6FAB               	movwf	(fat_append_to_file@length+1)& (0+255),b
 15252                           
 15253                           ; BSR set to: 0
 15254                           ;fat16.c: 525: if(length>number_of_bytes)
 15255  01321A  0100               	movlb	0	; () banked
 15256  01321C  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 15257  01321E  0100               	movlb	0	; () banked
 15258  013220  5D91               	subwf	fat_append_to_file@number_of_bytes& (0+255),w,b
 15259  013222  0100               	movlb	0	; () banked
 15260  013224  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 15261  013226  0100               	movlb	0	; () banked
 15262  013228  5992               	subwfb	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 15263  01322A  B0D8               	btfsc	status,0,c
 15264  01322C  D004               	goto	l21636
 15265                           
 15266                           ; BSR set to: 0
 15267                           ;fat16.c: 526: {
 15268                           ;fat16.c: 527: length = number_of_bytes;
 15269  01322E  C091  F0AA         	movff	fat_append_to_file@number_of_bytes,fat_append_to_file@length
 15270  013232  C092  F0AB         	movff	fat_append_to_file@number_of_bytes+1,fat_append_to_file@length+1
 15271  013236                     l21636:
 15272                           
 15273                           ; BSR set to: 0
 15274                           ;fat16.c: 528: }
 15275                           ;fat16.c: 531: flash_partial_write(sector, offset, length, &data[position]);
 15276  013236  C09D  F07F         	movff	fat_append_to_file@sector,flash_partial_write@page
 15277  01323A  C09E  F080         	movff	fat_append_to_file@sector+1,flash_partial_write@page+1
 15278  01323E  C0A7  F081         	movff	fat_append_to_file@offset,flash_partial_write@start
 15279  013242  C0A8  F082         	movff	fat_append_to_file@offset+1,flash_partial_write@start+1
 15280  013246  C0AA  F083         	movff	fat_append_to_file@length,flash_partial_write@length
 15281  01324A  C0AB  F084         	movff	fat_append_to_file@length+1,flash_partial_write@length+1
 15282  01324E  0100               	movlb	0	; () banked
 15283  013250  51AC               	movf	fat_append_to_file@position& (0+255),w,b
 15284  013252  0100               	movlb	0	; () banked
 15285  013254  2593               	addwf	fat_append_to_file@data& (0+255),w,b
 15286  013256  0100               	movlb	0	; () banked
 15287  013258  6F85               	movwf	flash_partial_write@data& (0+255),b
 15288  01325A  0100               	movlb	0	; () banked
 15289  01325C  51AD               	movf	(fat_append_to_file@position+1)& (0+255),w,b
 15290  01325E  0100               	movlb	0	; () banked
 15291  013260  2194               	addwfc	(fat_append_to_file@data+1)& (0+255),w,b
 15292  013262  0100               	movlb	0	; () banked
 15293  013264  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 15294  013266  ECEB  F0C7         	call	_flash_partial_write	;wreg free
 15295                           
 15296                           ;fat16.c: 534: position += length;
 15297  01326A  0100               	movlb	0	; () banked
 15298  01326C  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 15299  01326E  0100               	movlb	0	; () banked
 15300  013270  27AC               	addwf	fat_append_to_file@position& (0+255),f,b
 15301  013272  0100               	movlb	0	; () banked
 15302  013274  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 15303  013276  0100               	movlb	0	; () banked
 15304  013278  23AD               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 15305  01327A  0E00               	movlw	0
 15306  01327C  0100               	movlb	0	; () banked
 15307  01327E  23AE               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 15308  013280  0E00               	movlw	0
 15309  013282  0100               	movlb	0	; () banked
 15310  013284  23AF               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 15311                           
 15312                           ; BSR set to: 0
 15313                           ;fat16.c: 535: offset += length;
 15314  013286  0100               	movlb	0	; () banked
 15315  013288  51AA               	movf	fat_append_to_file@length& (0+255),w,b
 15316  01328A  0100               	movlb	0	; () banked
 15317  01328C  27A7               	addwf	fat_append_to_file@offset& (0+255),f,b
 15318  01328E  0100               	movlb	0	; () banked
 15319  013290  51AB               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 15320  013292  0100               	movlb	0	; () banked
 15321  013294  23A8               	addwfc	(fat_append_to_file@offset+1)& (0+255),f,b
 15322  013296                     l21642:
 15323                           
 15324                           ; BSR set to: 0
 15325  013296  0100               	movlb	0	; () banked
 15326  013298  5191               	movf	fat_append_to_file@number_of_bytes& (0+255),w,b
 15327  01329A  0100               	movlb	0	; () banked
 15328  01329C  6F95               	movwf	??_fat_append_to_file& (0+255),b
 15329  01329E  0100               	movlb	0	; () banked
 15330  0132A0  5192               	movf	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 15331  0132A2  0100               	movlb	0	; () banked
 15332  0132A4  6F96               	movwf	(??_fat_append_to_file+1)& (0+255),b
 15333  0132A6  0100               	movlb	0	; () banked
 15334  0132A8  6B97               	clrf	(??_fat_append_to_file+2)& (0+255),b
 15335  0132AA  0100               	movlb	0	; () banked
 15336  0132AC  6B98               	clrf	(??_fat_append_to_file+3)& (0+255),b
 15337  0132AE  0100               	movlb	0	; () banked
 15338  0132B0  5195               	movf	??_fat_append_to_file& (0+255),w,b
 15339  0132B2  0100               	movlb	0	; () banked
 15340  0132B4  5DAC               	subwf	fat_append_to_file@position& (0+255),w,b
 15341  0132B6  0100               	movlb	0	; () banked
 15342  0132B8  5196               	movf	(??_fat_append_to_file+1)& (0+255),w,b
 15343  0132BA  0100               	movlb	0	; () banked
 15344  0132BC  59AD               	subwfb	(fat_append_to_file@position+1)& (0+255),w,b
 15345  0132BE  0100               	movlb	0	; () banked
 15346  0132C0  5197               	movf	(??_fat_append_to_file+2)& (0+255),w,b
 15347  0132C2  0100               	movlb	0	; () banked
 15348  0132C4  59AE               	subwfb	(fat_append_to_file@position+2)& (0+255),w,b
 15349  0132C6  0100               	movlb	0	; () banked
 15350  0132C8  5198               	movf	(??_fat_append_to_file+3)& (0+255),w,b
 15351  0132CA  0100               	movlb	0	; () banked
 15352  0132CC  59AF               	subwfb	(fat_append_to_file@position+3)& (0+255),w,b
 15353  0132CE  A0D8               	btfss	status,0,c
 15354  0132D0  D758               	goto	l21620
 15355                           
 15356                           ; BSR set to: 0
 15357                           ;fat16.c: 536: }
 15358                           ;fat16.c: 540: root.fileSize += number_of_bytes;
 15359                           
 15360                           ; BSR set to: 0
 15361  0132D2  0100               	movlb	0	; () banked
 15362  0132D4  5191               	movf	fat_append_to_file@number_of_bytes& (0+255),w,b
 15363  0132D6  0100               	movlb	0	; () banked
 15364  0132D8  27CC               	addwf	(fat_append_to_file@root+28)& (0+255),f,b
 15365  0132DA  0100               	movlb	0	; () banked
 15366  0132DC  5192               	movf	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 15367  0132DE  0100               	movlb	0	; () banked
 15368  0132E0  23CD               	addwfc	(fat_append_to_file@root+29)& (0+255),f,b
 15369  0132E2  0E00               	movlw	0
 15370  0132E4  0100               	movlb	0	; () banked
 15371  0132E6  23CE               	addwfc	(fat_append_to_file@root+30)& (0+255),f,b
 15372  0132E8  0E00               	movlw	0
 15373  0132EA  0100               	movlb	0	; () banked
 15374  0132EC  23CF               	addwfc	(fat_append_to_file@root+31)& (0+255),f,b
 15375                           
 15376                           ; BSR set to: 0
 15377                           ;fat16.c: 541: _update_modified_time(&root);
 15378  0132EE  0EB0               	movlw	low fat_append_to_file@root
 15379  0132F0  0100               	movlb	0	; () banked
 15380  0132F2  6F6D               	movwf	__update_modified_time@root& (0+255),b
 15381  0132F4  0E00               	movlw	high fat_append_to_file@root
 15382  0132F6  0100               	movlb	0	; () banked
 15383  0132F8  6F6E               	movwf	(__update_modified_time@root+1)& (0+255),b
 15384  0132FA  EC00  F0D0         	call	__update_modified_time	;wreg free
 15385                           
 15386                           ;fat16.c: 542: _write_root(file_number, &root);
 15387  0132FE  0EB0               	movlw	low fat_append_to_file@root
 15388  013300  0100               	movlb	0	; () banked
 15389  013302  6F88               	movwf	__write_root@data& (0+255),b
 15390  013304  0E00               	movlw	high fat_append_to_file@root
 15391  013306  0100               	movlb	0	; () banked
 15392  013308  6F89               	movwf	(__write_root@data+1)& (0+255),b
 15393  01330A  0100               	movlb	0	; () banked
 15394  01330C  51A9               	movf	fat_append_to_file@file_number& (0+255),w,b
 15395  01330E  ECCA  F0C8         	call	__write_root
 15396  013312  0012               	return	
 15397  013314                     __end_of_fat_append_to_file:
 15398                           	opt stack 0
 15399                           tblptru	equ	0xFF8
 15400                           tblptrh	equ	0xFF7
 15401                           tblptrl	equ	0xFF6
 15402                           tablat	equ	0xFF5
 15403                           prodh	equ	0xFF4
 15404                           prodl	equ	0xFF3
 15405                           intcon	equ	0xFF2
 15406                           intcon2	equ	0xFF1
 15407                           intcon3	equ	0xFF0
 15408                           postinc0	equ	0xFEE
 15409                           wreg	equ	0xFE8
 15410                           postinc1	equ	0xFE6
 15411                           postdec1	equ	0xFE5
 15412                           plusw1	equ	0xFE3
 15413                           fsr1h	equ	0xFE2
 15414                           fsr1l	equ	0xFE1
 15415                           indf2	equ	0xFDF
 15416                           postinc2	equ	0xFDE
 15417                           postdec2	equ	0xFDD
 15418                           plusw2	equ	0xFDB
 15419                           fsr2h	equ	0xFDA
 15420                           fsr2l	equ	0xFD9
 15421                           status	equ	0xFD8
 15422                           
 15423 ;; *************** function __write_root *****************
 15424 ;; Defined at:
 15425 ;;		line 184 in file "fat16.c"
 15426 ;; Parameters:    Size  Location     Type
 15427 ;;  slot            1    wreg     unsigned char 
 15428 ;;  data            2   40[BANK0 ] PTR struct .
 15429 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 15430 ;; Auto vars:     Size  Location     Type
 15431 ;;  slot            1   47[BANK0 ] unsigned char 
 15432 ;;  offset          2   45[BANK0 ] unsigned int 
 15433 ;;  root_sector     2   43[BANK0 ] unsigned int 
 15434 ;; Return value:  Size  Location     Type
 15435 ;;                  1    wreg      void 
 15436 ;; Registers used:
 15437 ;;		wreg, status,2, status,0, cstack
 15438 ;; Tracked objects:
 15439 ;;		On entry : 0/0
 15440 ;;		On exit  : 0/0
 15441 ;;		Unchanged: 0/0
 15442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15443 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15444 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15445 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15446 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15447 ;;Total ram usage:        8 bytes
 15448 ;; Hardware stack levels used:    1
 15449 ;; Hardware stack levels required when called:   15
 15450 ;; This function calls:
 15451 ;;		_flash_partial_write
 15452 ;; This function is called by:
 15453 ;;		_fat_create_file
 15454 ;;		_fat_append_to_file
 15455 ;;		_fat_rename_file
 15456 ;; This function uses a non-reentrant model
 15457 ;;
 15458                           
 15459                           	psect	text61
 15460  019194                     __ptext61:
 15461                           	opt stack 0
 15462  019194                     __write_root:
 15463                           	opt stack 13
 15464                           
 15465                           ;incstack = 0
 15466                           ;__write_root@slot stored from wreg
 15467  019194  0100               	movlb	0	; () banked
 15468  019196  6F8F               	movwf	__write_root@slot& (0+255),b
 15469                           
 15470                           ;fat16.c: 186: uint16_t root_sector;
 15471                           ;fat16.c: 187: uint16_t offset;
 15472                           ;fat16.c: 188: root_sector = (slot >> 4) + 18;
 15473  019198  C08F  F08A         	movff	__write_root@slot,??__write_root
 15474  01919C  0100               	movlb	0	; () banked
 15475  01919E  3B8A               	swapf	??__write_root& (0+255),f,b
 15476  0191A0  0E0F               	movlw	15
 15477  0191A2  178A               	andwf	??__write_root& (0+255),f,b
 15478  0191A4  0E12               	movlw	18
 15479  0191A6  0100               	movlb	0	; () banked
 15480  0191A8  258A               	addwf	??__write_root& (0+255),w,b
 15481  0191AA  0100               	movlb	0	; () banked
 15482  0191AC  6F8B               	movwf	__write_root@root_sector& (0+255),b
 15483  0191AE  0100               	movlb	0	; () banked
 15484  0191B0  6B8C               	clrf	(__write_root@root_sector+1)& (0+255),b
 15485  0191B2  0E00               	movlw	0
 15486  0191B4  238C               	addwfc	(__write_root@root_sector+1)& (0+255),f,b
 15487                           
 15488                           ;fat16.c: 189: offset = (slot & 0b1111);
 15489  0191B6  C08F  F08A         	movff	__write_root@slot,??__write_root
 15490  0191BA  0E0F               	movlw	15
 15491  0191BC  0100               	movlb	0	; () banked
 15492  0191BE  178A               	andwf	??__write_root& (0+255),f,b
 15493  0191C0  0100               	movlb	0	; () banked
 15494  0191C2  518A               	movf	??__write_root& (0+255),w,b
 15495  0191C4  0100               	movlb	0	; () banked
 15496  0191C6  6F8D               	movwf	__write_root@offset& (0+255),b
 15497  0191C8  6B8E               	clrf	(__write_root@offset+1)& (0+255),b
 15498                           
 15499                           ;fat16.c: 190: offset <<= 5;
 15500  0191CA  0100               	movlb	0	; () banked
 15501  0191CC  0E05               	movlw	5
 15502  0191CE                     u18785:
 15503  0191CE  90D8               	bcf	status,0,c
 15504  0191D0  378D               	rlcf	__write_root@offset& (0+255),f,b
 15505  0191D2  378E               	rlcf	(__write_root@offset+1)& (0+255),f,b
 15506  0191D4  2EE8               	decfsz	wreg,f,c
 15507  0191D6  D7FB               	goto	u18785
 15508                           
 15509                           ; BSR set to: 0
 15510                           ;fat16.c: 191: flash_partial_write(root_sector, offset, 32, data);
 15511  0191D8  C08B  F07F         	movff	__write_root@root_sector,flash_partial_write@page
 15512  0191DC  C08C  F080         	movff	__write_root@root_sector+1,flash_partial_write@page+1
 15513  0191E0  C08D  F081         	movff	__write_root@offset,flash_partial_write@start
 15514  0191E4  C08E  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 15515  0191E8  0E00               	movlw	0
 15516  0191EA  0100               	movlb	0	; () banked
 15517  0191EC  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 15518  0191EE  0E20               	movlw	32
 15519  0191F0  6F83               	movwf	flash_partial_write@length& (0+255),b
 15520  0191F2  C088  F085         	movff	__write_root@data,flash_partial_write@data
 15521  0191F6  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 15522  0191FA  ECEB  F0C7         	call	_flash_partial_write	;wreg free
 15523  0191FE  0012               	return		;funcret
 15524  019200                     __end_of__write_root:
 15525                           	opt stack 0
 15526                           tblptru	equ	0xFF8
 15527                           tblptrh	equ	0xFF7
 15528                           tblptrl	equ	0xFF6
 15529                           tablat	equ	0xFF5
 15530                           prodh	equ	0xFF4
 15531                           prodl	equ	0xFF3
 15532                           intcon	equ	0xFF2
 15533                           intcon2	equ	0xFF1
 15534                           intcon3	equ	0xFF0
 15535                           postinc0	equ	0xFEE
 15536                           wreg	equ	0xFE8
 15537                           postinc1	equ	0xFE6
 15538                           postdec1	equ	0xFE5
 15539                           plusw1	equ	0xFE3
 15540                           fsr1h	equ	0xFE2
 15541                           fsr1l	equ	0xFE1
 15542                           indf2	equ	0xFDF
 15543                           postinc2	equ	0xFDE
 15544                           postdec2	equ	0xFDD
 15545                           plusw2	equ	0xFDB
 15546                           fsr2h	equ	0xFDA
 15547                           fsr2l	equ	0xFD9
 15548                           status	equ	0xFD8
 15549                           
 15550 ;; *************** function __write_fat *****************
 15551 ;; Defined at:
 15552 ;;		line 160 in file "fat16.c"
 15553 ;; Parameters:    Size  Location     Type
 15554 ;;  cluster         2   40[BANK0 ] unsigned int 
 15555 ;;  value           2   42[BANK0 ] unsigned int 
 15556 ;; Auto vars:     Size  Location     Type
 15557 ;;  offset          2   46[BANK0 ] unsigned int 
 15558 ;;  fat_sector      2   44[BANK0 ] unsigned int 
 15559 ;; Return value:  Size  Location     Type
 15560 ;;                  1    wreg      void 
 15561 ;; Registers used:
 15562 ;;		wreg, status,2, status,0, cstack
 15563 ;; Tracked objects:
 15564 ;;		On entry : 0/0
 15565 ;;		On exit  : 0/0
 15566 ;;		Unchanged: 0/0
 15567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15568 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15569 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15571 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15572 ;;Total ram usage:        8 bytes
 15573 ;; Hardware stack levels used:    1
 15574 ;; Hardware stack levels required when called:   15
 15575 ;; This function calls:
 15576 ;;		_flash_partial_write
 15577 ;; This function is called by:
 15578 ;;		_fat_create_file
 15579 ;;		_fat_append_to_file
 15580 ;;		_fat_delete_file
 15581 ;; This function uses a non-reentrant model
 15582 ;;
 15583                           
 15584                           	psect	text62
 15585  019C14                     __ptext62:
 15586                           	opt stack 0
 15587  019C14                     __write_fat:
 15588                           	opt stack 13
 15589                           
 15590                           ;fat16.c: 162: uint16_t fat_sector;
 15591                           ;fat16.c: 163: uint16_t offset;
 15592                           ;fat16.c: 164: fat_sector = cluster>>8;
 15593                           
 15594                           ;incstack = 0
 15595  019C14  0100               	movlb	0	; () banked
 15596  019C16  5189               	movf	(__write_fat@cluster+1)& (0+255),w,b
 15597  019C18  0100               	movlb	0	; () banked
 15598  019C1A  6F8C               	movwf	__write_fat@fat_sector& (0+255),b
 15599  019C1C  6B8D               	clrf	(__write_fat@fat_sector+1)& (0+255),b
 15600                           
 15601                           ; BSR set to: 0
 15602                           ;fat16.c: 165: fat_sector += 2;
 15603  019C1E  0E02               	movlw	2
 15604  019C20  0100               	movlb	0	; () banked
 15605  019C22  278C               	addwf	__write_fat@fat_sector& (0+255),f,b
 15606  019C24  0E00               	movlw	0
 15607  019C26  238D               	addwfc	(__write_fat@fat_sector+1)& (0+255),f,b
 15608                           
 15609                           ; BSR set to: 0
 15610                           ;fat16.c: 166: offset = cluster & 0xFF;
 15611  019C28  0100               	movlb	0	; () banked
 15612  019C2A  5188               	movf	__write_fat@cluster& (0+255),w,b
 15613  019C2C  0100               	movlb	0	; () banked
 15614  019C2E  6F8E               	movwf	__write_fat@offset& (0+255),b
 15615  019C30  6B8F               	clrf	(__write_fat@offset+1)& (0+255),b
 15616                           
 15617                           ; BSR set to: 0
 15618                           ;fat16.c: 167: offset <<= 1;
 15619  019C32  0100               	movlb	0	; () banked
 15620  019C34  90D8               	bcf	status,0,c
 15621  019C36  378E               	rlcf	__write_fat@offset& (0+255),f,b
 15622  019C38  378F               	rlcf	(__write_fat@offset+1)& (0+255),f,b
 15623                           
 15624                           ; BSR set to: 0
 15625                           ;fat16.c: 168: flash_partial_write(fat_sector, offset, 2, &value);
 15626  019C3A  C08C  F07F         	movff	__write_fat@fat_sector,flash_partial_write@page
 15627  019C3E  C08D  F080         	movff	__write_fat@fat_sector+1,flash_partial_write@page+1
 15628  019C42  C08E  F081         	movff	__write_fat@offset,flash_partial_write@start
 15629  019C46  C08F  F082         	movff	__write_fat@offset+1,flash_partial_write@start+1
 15630  019C4A  0E00               	movlw	0
 15631  019C4C  0100               	movlb	0	; () banked
 15632  019C4E  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 15633  019C50  0E02               	movlw	2
 15634  019C52  6F83               	movwf	flash_partial_write@length& (0+255),b
 15635  019C54  0E8A               	movlw	low __write_fat@value
 15636  019C56  0100               	movlb	0	; () banked
 15637  019C58  6F85               	movwf	flash_partial_write@data& (0+255),b
 15638  019C5A  0E00               	movlw	high __write_fat@value
 15639  019C5C  0100               	movlb	0	; () banked
 15640  019C5E  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 15641  019C60  ECEB  F0C7         	call	_flash_partial_write	;wreg free
 15642  019C64  0012               	return		;funcret
 15643  019C66                     __end_of__write_fat:
 15644                           	opt stack 0
 15645                           tblptru	equ	0xFF8
 15646                           tblptrh	equ	0xFF7
 15647                           tblptrl	equ	0xFF6
 15648                           tablat	equ	0xFF5
 15649                           prodh	equ	0xFF4
 15650                           prodl	equ	0xFF3
 15651                           intcon	equ	0xFF2
 15652                           intcon2	equ	0xFF1
 15653                           intcon3	equ	0xFF0
 15654                           postinc0	equ	0xFEE
 15655                           wreg	equ	0xFE8
 15656                           postinc1	equ	0xFE6
 15657                           postdec1	equ	0xFE5
 15658                           plusw1	equ	0xFE3
 15659                           fsr1h	equ	0xFE2
 15660                           fsr1l	equ	0xFE1
 15661                           indf2	equ	0xFDF
 15662                           postinc2	equ	0xFDE
 15663                           postdec2	equ	0xFDD
 15664                           plusw2	equ	0xFDB
 15665                           fsr2h	equ	0xFDA
 15666                           fsr2l	equ	0xFD9
 15667                           status	equ	0xFD8
 15668                           
 15669 ;; *************** function _flash_partial_write *****************
 15670 ;; Defined at:
 15671 ;;		line 589 in file "flash.c"
 15672 ;; Parameters:    Size  Location     Type
 15673 ;;  page            2   31[BANK0 ] unsigned int 
 15674 ;;  start           2   33[BANK0 ] unsigned int 
 15675 ;;  length          2   35[BANK0 ] unsigned int 
 15676 ;;  data            2   37[BANK0 ] PTR unsigned char 
 15677 ;;		 -> log_write_to_disk@log_entry(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_ent
      +ry(32), 
 15678 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), 
 15679 ;; Auto vars:     Size  Location     Type
 15680 ;;  match           1   39[BANK0 ] enum E8335
 15681 ;; Return value:  Size  Location     Type
 15682 ;;                  1    wreg      void 
 15683 ;; Registers used:
 15684 ;;		wreg, status,2, status,0, cstack
 15685 ;; Tracked objects:
 15686 ;;		On entry : 0/0
 15687 ;;		On exit  : 0/0
 15688 ;;		Unchanged: 0/0
 15689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15690 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15691 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15693 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15694 ;;Total ram usage:        9 bytes
 15695 ;; Hardware stack levels used:    1
 15696 ;; Hardware stack levels required when called:   14
 15697 ;; This function calls:
 15698 ;;		__flash_compare_page_to_buffer
 15699 ;;		__flash_copy_page_to_buffer
 15700 ;;		__flash_write_page_from_buffer
 15701 ;;		__flash_write_to_buffer
 15702 ;;		_flash_is_busy
 15703 ;; This function is called by:
 15704 ;;		__write_fat
 15705 ;;		__write_root
 15706 ;;		_fat_append_to_file
 15707 ;;		__delete_root
 15708 ;;		__write_file_size
 15709 ;; This function uses a non-reentrant model
 15710 ;;
 15711                           
 15712                           	psect	text63
 15713  018FD6                     __ptext63:
 15714                           	opt stack 0
 15715  018FD6                     _flash_partial_write:
 15716                           	opt stack 13
 15717  018FD6                     l18986:
 15718  018FD6  ECF7  F0D3         	call	_flash_is_busy	;wreg free
 15719  018FDA  0900               	iorlw	0
 15720  018FDC  A4D8               	btfss	status,2,c
 15721  018FDE  D7FB               	goto	l18986
 15722                           
 15723                           ;flash.c: 597: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 15724  018FE0  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 15725  018FE4  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 15726  018FE8  0E00               	movlw	0
 15727  018FEA  0100               	movlb	0	; () banked
 15728  018FEC  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 15729  018FEE  EC87  F0C6         	call	__flash_copy_page_to_buffer	;wreg free
 15730                           
 15731                           ;flash.c: 600: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 15732  018FF2  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 15733  018FF6  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 15734  018FFA  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 15735  018FFE  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 15736  019002  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 15737  019006  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 15738  01900A  0E00               	movlw	0
 15739  01900C  0100               	movlb	0	; () banked
 15740  01900E  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 15741  019010  EC3B  F0CA         	call	__flash_write_to_buffer	;wreg free
 15742                           
 15743                           ;flash.c: 603: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 15744  019014  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 15745  019018  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 15746  01901C  0E00               	movlw	0
 15747  01901E  0100               	movlb	0	; () banked
 15748  019020  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 15749  019022  EC4D  F0C0         	call	__flash_compare_page_to_buffer	;wreg free
 15750  019026  0100               	movlb	0	; () banked
 15751  019028  6F87               	movwf	flash_partial_write@match& (0+255),b
 15752                           
 15753                           ; BSR set to: 0
 15754                           ;flash.c: 606: if(match==DATA_DOES_NOT_MATCH)
 15755  01902A  0100               	movlb	0	; () banked
 15756  01902C  0587               	decf	flash_partial_write@match& (0+255),w,b
 15757  01902E  A4D8               	btfss	status,2,c
 15758  019030  0012               	return	
 15759                           
 15760                           ; BSR set to: 0
 15761                           ;flash.c: 607: {
 15762                           ;flash.c: 608: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 15763  019032  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 15764  019036  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 15765  01903A  0E00               	movlw	0
 15766  01903C  0100               	movlb	0	; () banked
 15767  01903E  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 15768  019040  ECFF  F0C6         	call	__flash_write_page_from_buffer	;wreg free
 15769  019044  0012               	return	
 15770  019046                     __end_of_flash_partial_write:
 15771                           	opt stack 0
 15772                           tblptru	equ	0xFF8
 15773                           tblptrh	equ	0xFF7
 15774                           tblptrl	equ	0xFF6
 15775                           tablat	equ	0xFF5
 15776                           prodh	equ	0xFF4
 15777                           prodl	equ	0xFF3
 15778                           intcon	equ	0xFF2
 15779                           intcon2	equ	0xFF1
 15780                           intcon3	equ	0xFF0
 15781                           postinc0	equ	0xFEE
 15782                           wreg	equ	0xFE8
 15783                           postinc1	equ	0xFE6
 15784                           postdec1	equ	0xFE5
 15785                           plusw1	equ	0xFE3
 15786                           fsr1h	equ	0xFE2
 15787                           fsr1l	equ	0xFE1
 15788                           indf2	equ	0xFDF
 15789                           postinc2	equ	0xFDE
 15790                           postdec2	equ	0xFDD
 15791                           plusw2	equ	0xFDB
 15792                           fsr2h	equ	0xFDA
 15793                           fsr2l	equ	0xFD9
 15794                           status	equ	0xFD8
 15795                           
 15796 ;; *************** function __flash_copy_page_to_buffer *****************
 15797 ;; Defined at:
 15798 ;;		line 315 in file "flash.c"
 15799 ;; Parameters:    Size  Location     Type
 15800 ;;  page            2   19[BANK0 ] unsigned int 
 15801 ;;  buffer          1   21[BANK0 ] enum E8331
 15802 ;; Auto vars:     Size  Location     Type
 15803 ;;  command         4   25[BANK0 ] unsigned char [4]
 15804 ;; Return value:  Size  Location     Type
 15805 ;;                  1    wreg      void 
 15806 ;; Registers used:
 15807 ;;		wreg, status,2, status,0, cstack
 15808 ;; Tracked objects:
 15809 ;;		On entry : 0/0
 15810 ;;		On exit  : 0/0
 15811 ;;		Unchanged: 0/0
 15812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15813 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15814 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15815 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15816 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15817 ;;Total ram usage:       10 bytes
 15818 ;; Hardware stack levels used:    1
 15819 ;; Hardware stack levels required when called:   13
 15820 ;; This function calls:
 15821 ;;		__flash_spi_tx
 15822 ;;		_flash_is_busy
 15823 ;; This function is called by:
 15824 ;;		_flash_partial_write
 15825 ;; This function uses a non-reentrant model
 15826 ;;
 15827                           
 15828                           	psect	text64
 15829  018D0E                     __ptext64:
 15830                           	opt stack 0
 15831  018D0E                     __flash_copy_page_to_buffer:
 15832                           	opt stack 13
 15833  018D0E                     l18632:
 15834  018D0E  ECF7  F0D3         	call	_flash_is_busy	;wreg free
 15835  018D12  0900               	iorlw	0
 15836  018D14  A4D8               	btfss	status,2,c
 15837  018D16  D7FB               	goto	l18632
 15838                           
 15839                           ;flash.c: 323: if(buffer==FLASH_BUFFER_1)
 15840  018D18  0100               	movlb	0	; () banked
 15841  018D1A  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 15842  018D1C  0100               	movlb	0	; () banked
 15843  018D1E  A4D8               	btfss	status,2,c
 15844  018D20  D003               	goto	l18638
 15845                           
 15846                           ; BSR set to: 0
 15847                           ;flash.c: 324: command[0] = 0x53;
 15848  018D22  0E53               	movlw	83
 15849  018D24  0100               	movlb	0	; () banked
 15850  018D26  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 15851  018D28                     l18638:
 15852                           
 15853                           ; BSR set to: 0
 15854                           ;flash.c: 325: if(buffer==FLASH_BUFFER_2)
 15855  018D28  0100               	movlb	0	; () banked
 15856  018D2A  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 15857  018D2C  A4D8               	btfss	status,2,c
 15858  018D2E  D003               	goto	l18642
 15859                           
 15860                           ; BSR set to: 0
 15861                           ;flash.c: 326: command[0] = 0x55;
 15862  018D30  0E55               	movlw	85
 15863  018D32  0100               	movlb	0	; () banked
 15864  018D34  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 15865  018D36                     l18642:
 15866                           
 15867                           ; BSR set to: 0
 15868                           ;flash.c: 328: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 15869  018D36  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 15870  018D3A  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 15871  018D3E  0E07               	movlw	7
 15872  018D40  0100               	movlb	0	; () banked
 15873  018D42  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 15874  018D44                     u17645:
 15875  018D44  0100               	movlb	0	; () banked
 15876  018D46  90D8               	bcf	status,0,c
 15877  018D48  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 15878  018D4A  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 15879  018D4C  0100               	movlb	0	; () banked
 15880  018D4E  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 15881  018D50  D7F9               	goto	u17645
 15882  018D52  0100               	movlb	0	; () banked
 15883  018D54  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 15884  018D56  0100               	movlb	0	; () banked
 15885  018D58  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 15886                           
 15887                           ; BSR set to: 0
 15888                           ;flash.c: 329: command[2] = ((unsigned char)((page<<1)&0xFF));
 15889  018D5A  0100               	movlb	0	; () banked
 15890  018D5C  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 15891  018D5E  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 15892  018D60  0100               	movlb	0	; () banked
 15893  018D62  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 15894                           
 15895                           ;flash.c: 330: command[3] = 0x00;
 15896  018D64  0E00               	movlw	0
 15897  018D66  0100               	movlb	0	; () banked
 15898  018D68  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 15899                           
 15900                           ; BSR set to: 0
 15901                           ;flash.c: 333: _flash_spi_tx(command, 4);
 15902  018D6A  0E79               	movlw	low __flash_copy_page_to_buffer@command
 15903  018D6C  0100               	movlb	0	; () banked
 15904  018D6E  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 15905  018D70  0E00               	movlw	high __flash_copy_page_to_buffer@command
 15906  018D72  0100               	movlb	0	; () banked
 15907  018D74  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 15908  018D76  0E00               	movlw	0
 15909  018D78  0100               	movlb	0	; () banked
 15910  018D7A  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 15911  018D7C  0E04               	movlw	4
 15912  018D7E  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 15913  018D80  EC36  F0C9         	call	__flash_spi_tx	;wreg free
 15914  018D84  0012               	return		;funcret
 15915  018D86                     __end_of__flash_copy_page_to_buffer:
 15916                           	opt stack 0
 15917                           tblptru	equ	0xFF8
 15918                           tblptrh	equ	0xFF7
 15919                           tblptrl	equ	0xFF6
 15920                           tablat	equ	0xFF5
 15921                           prodh	equ	0xFF4
 15922                           prodl	equ	0xFF3
 15923                           intcon	equ	0xFF2
 15924                           intcon2	equ	0xFF1
 15925                           intcon3	equ	0xFF0
 15926                           postinc0	equ	0xFEE
 15927                           wreg	equ	0xFE8
 15928                           postinc1	equ	0xFE6
 15929                           postdec1	equ	0xFE5
 15930                           plusw1	equ	0xFE3
 15931                           fsr1h	equ	0xFE2
 15932                           fsr1l	equ	0xFE1
 15933                           indf2	equ	0xFDF
 15934                           postinc2	equ	0xFDE
 15935                           postdec2	equ	0xFDD
 15936                           plusw2	equ	0xFDB
 15937                           fsr2h	equ	0xFDA
 15938                           fsr2l	equ	0xFD9
 15939                           status	equ	0xFD8
 15940                           
 15941 ;; *************** function __update_modified_time *****************
 15942 ;; Defined at:
 15943 ;;		line 55 in file "fat16.c"
 15944 ;; Parameters:    Size  Location     Type
 15945 ;;  root            2   13[BANK0 ] PTR struct .
 15946 ;;		 -> fat_append_to_file@root(32), 
 15947 ;; Auto vars:     Size  Location     Type
 15948 ;;		None
 15949 ;; Return value:  Size  Location     Type
 15950 ;;                  1    wreg      void 
 15951 ;; Registers used:
 15952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15953 ;; Tracked objects:
 15954 ;;		On entry : 0/0
 15955 ;;		On exit  : 0/0
 15956 ;;		Unchanged: 0/0
 15957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15958 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15961 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15962 ;;Total ram usage:        2 bytes
 15963 ;; Hardware stack levels used:    1
 15964 ;; Hardware stack levels required when called:   13
 15965 ;; This function calls:
 15966 ;;		__get_date
 15967 ;;		__get_time
 15968 ;; This function is called by:
 15969 ;;		_fat_append_to_file
 15970 ;; This function uses a non-reentrant model
 15971 ;;
 15972                           
 15973                           	psect	text65
 15974  01A000                     __ptext65:
 15975                           	opt stack 0
 15976  01A000                     __update_modified_time:
 15977                           	opt stack 15
 15978                           
 15979                           ;fat16.c: 57: root->modifiedDate = _get_date();
 15980                           
 15981                           ;incstack = 0
 15982  01A000  EC8C  F0C5         	call	__get_date	;wreg free
 15983  01A004  0100               	movlb	0	; () banked
 15984  01A006  EE20 F018          	lfsr	2,24
 15985  01A00A  516D               	movf	__update_modified_time@root& (0+255),w,b
 15986  01A00C  26D9               	addwf	fsr2l,f,c
 15987  01A00E  516E               	movf	(__update_modified_time@root+1)& (0+255),w,b
 15988  01A010  22DA               	addwfc	fsr2h,f,c
 15989  01A012  0100               	movlb	0	; () banked
 15990  01A014  C064  FFDE         	movff	?__get_date,postinc2
 15991  01A018  0100               	movlb	0	; () banked
 15992  01A01A  C065  FFDD         	movff	?__get_date+1,postdec2
 15993                           
 15994                           ;fat16.c: 58: root->modifiedTime = _get_time();
 15995  01A01E  ECFC  F0C3         	call	__get_time	;wreg free
 15996  01A022  0100               	movlb	0	; () banked
 15997  01A024  EE20 F016          	lfsr	2,22
 15998  01A028  516D               	movf	__update_modified_time@root& (0+255),w,b
 15999  01A02A  26D9               	addwf	fsr2l,f,c
 16000  01A02C  516E               	movf	(__update_modified_time@root+1)& (0+255),w,b
 16001  01A02E  22DA               	addwfc	fsr2h,f,c
 16002  01A030  0100               	movlb	0	; () banked
 16003  01A032  C064  FFDE         	movff	?__get_time,postinc2
 16004  01A036  0100               	movlb	0	; () banked
 16005  01A038  C065  FFDD         	movff	?__get_time+1,postdec2
 16006                           
 16007                           ; BSR set to: 0
 16008  01A03C  0012               	return		;funcret
 16009  01A03E                     __end_of__update_modified_time:
 16010                           	opt stack 0
 16011                           tblptru	equ	0xFF8
 16012                           tblptrh	equ	0xFF7
 16013                           tblptrl	equ	0xFF6
 16014                           tablat	equ	0xFF5
 16015                           prodh	equ	0xFF4
 16016                           prodl	equ	0xFF3
 16017                           intcon	equ	0xFF2
 16018                           intcon2	equ	0xFF1
 16019                           intcon3	equ	0xFF0
 16020                           postinc0	equ	0xFEE
 16021                           wreg	equ	0xFE8
 16022                           postinc1	equ	0xFE6
 16023                           postdec1	equ	0xFE5
 16024                           plusw1	equ	0xFE3
 16025                           fsr1h	equ	0xFE2
 16026                           fsr1l	equ	0xFE1
 16027                           indf2	equ	0xFDF
 16028                           postinc2	equ	0xFDE
 16029                           postdec2	equ	0xFDD
 16030                           plusw2	equ	0xFDB
 16031                           fsr2h	equ	0xFDA
 16032                           fsr2l	equ	0xFD9
 16033                           status	equ	0xFD8
 16034                           
 16035 ;; *************** function __get_time *****************
 16036 ;; Defined at:
 16037 ;;		line 31 in file "fat16.c"
 16038 ;; Parameters:    Size  Location     Type
 16039 ;;		None
 16040 ;; Auto vars:     Size  Location     Type
 16041 ;;  time            2   11[BANK0 ] unsigned int 
 16042 ;;  seconds         1   10[BANK0 ] unsigned char 
 16043 ;;  minutes         1    9[BANK0 ] unsigned char 
 16044 ;;  hours           1    8[BANK0 ] unsigned char 
 16045 ;; Return value:  Size  Location     Type
 16046 ;;                  2    4[BANK0 ] unsigned int 
 16047 ;; Registers used:
 16048 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16049 ;; Tracked objects:
 16050 ;;		On entry : 0/0
 16051 ;;		On exit  : 0/0
 16052 ;;		Unchanged: 0/0
 16053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16054 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16055 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16056 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16057 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16058 ;;Total ram usage:        9 bytes
 16059 ;; Hardware stack levels used:    1
 16060 ;; Hardware stack levels required when called:   12
 16061 ;; This function calls:
 16062 ;;		_rtcc_get_hours_decimal
 16063 ;;		_rtcc_get_minutes_decimal
 16064 ;;		_rtcc_get_seconds_decimal
 16065 ;; This function is called by:
 16066 ;;		__update_modified_time
 16067 ;;		_fat_create_file
 16068 ;; This function uses a non-reentrant model
 16069 ;;
 16070                           
 16071                           	psect	text66
 16072  0187F8                     __ptext66:
 16073                           	opt stack 0
 16074  0187F8                     __get_time:
 16075                           	opt stack 16
 16076                           
 16077                           ;fat16.c: 33: uint16_t time;
 16078                           ;fat16.c: 34: uint8_t hours = rtcc_get_hours_decimal();
 16079                           
 16080                           ; BSR set to: 0
 16081                           ;incstack = 0
 16082  0187F8  EC5E  F0D5         	call	_rtcc_get_hours_decimal	;wreg free
 16083  0187FC  0100               	movlb	0	; () banked
 16084  0187FE  6F68               	movwf	__get_time@hours& (0+255),b
 16085                           
 16086                           ;fat16.c: 35: uint8_t minutes = rtcc_get_minutes_decimal();
 16087  018800  EC55  F0D5         	call	_rtcc_get_minutes_decimal	;wreg free
 16088  018804  0100               	movlb	0	; () banked
 16089  018806  6F69               	movwf	__get_time@minutes& (0+255),b
 16090                           
 16091                           ;fat16.c: 36: uint8_t seconds = rtcc_get_seconds_decimal();
 16092  018808  EC82  F0D5         	call	_rtcc_get_seconds_decimal	;wreg free
 16093  01880C  0100               	movlb	0	; () banked
 16094  01880E  6F6A               	movwf	__get_time@seconds& (0+255),b
 16095                           
 16096                           ; BSR set to: 0
 16097                           ;fat16.c: 37: time = ((hours&0b11111) << 11);
 16098  018810  0100               	movlb	0	; () banked
 16099  018812  5168               	movf	__get_time@hours& (0+255),w,b
 16100  018814  0B1F               	andlw	31
 16101  018816  0100               	movlb	0	; () banked
 16102  018818  6F66               	movwf	??__get_time& (0+255),b
 16103  01881A  6B67               	clrf	(??__get_time+1)& (0+255),b
 16104  01881C  0E0B               	movlw	11
 16105  01881E                     u17945:
 16106  01881E  90D8               	bcf	status,0,c
 16107  018820  0100               	movlb	0	; () banked
 16108  018822  3766               	rlcf	??__get_time& (0+255),f,b
 16109  018824  3767               	rlcf	(??__get_time+1)& (0+255),f,b
 16110  018826  2EE8               	decfsz	wreg,f,c
 16111  018828  D7FA               	goto	u17945
 16112  01882A  C066  F06B         	movff	??__get_time,__get_time@time
 16113  01882E  C067  F06C         	movff	??__get_time+1,__get_time@time+1
 16114                           
 16115                           ; BSR set to: 0
 16116                           ;fat16.c: 38: time |= ((minutes&0b111111) << 5);
 16117  018832  0100               	movlb	0	; () banked
 16118  018834  5169               	movf	__get_time@minutes& (0+255),w,b
 16119  018836  0B3F               	andlw	63
 16120  018838  0100               	movlb	0	; () banked
 16121  01883A  6F66               	movwf	??__get_time& (0+255),b
 16122  01883C  6B67               	clrf	(??__get_time+1)& (0+255),b
 16123  01883E  0E05               	movlw	5
 16124  018840                     u17955:
 16125  018840  90D8               	bcf	status,0,c
 16126  018842  0100               	movlb	0	; () banked
 16127  018844  3766               	rlcf	??__get_time& (0+255),f,b
 16128  018846  3767               	rlcf	(??__get_time+1)& (0+255),f,b
 16129  018848  2EE8               	decfsz	wreg,f,c
 16130  01884A  D7FA               	goto	u17955
 16131  01884C  0100               	movlb	0	; () banked
 16132  01884E  5166               	movf	??__get_time& (0+255),w,b
 16133  018850  0100               	movlb	0	; () banked
 16134  018852  136B               	iorwf	__get_time@time& (0+255),f,b
 16135  018854  0100               	movlb	0	; () banked
 16136  018856  5167               	movf	(??__get_time+1)& (0+255),w,b
 16137  018858  0100               	movlb	0	; () banked
 16138  01885A  136C               	iorwf	(__get_time@time+1)& (0+255),f,b
 16139                           
 16140                           ; BSR set to: 0
 16141                           ;fat16.c: 39: time |= ((seconds>>1)&0b11111);
 16142  01885C  C06A  F066         	movff	__get_time@seconds,??__get_time
 16143  018860  0100               	movlb	0	; () banked
 16144  018862  90D8               	bcf	status,0,c
 16145  018864  3366               	rrcf	??__get_time& (0+255),f,b
 16146  018866  0E1F               	movlw	31
 16147  018868  0100               	movlb	0	; () banked
 16148  01886A  1766               	andwf	??__get_time& (0+255),f,b
 16149  01886C  0100               	movlb	0	; () banked
 16150  01886E  5166               	movf	??__get_time& (0+255),w,b
 16151  018870  0100               	movlb	0	; () banked
 16152  018872  136B               	iorwf	__get_time@time& (0+255),f,b
 16153                           
 16154                           ; BSR set to: 0
 16155                           ;fat16.c: 40: return time;
 16156  018874  C06B  F064         	movff	__get_time@time,?__get_time
 16157  018878  C06C  F065         	movff	__get_time@time+1,?__get_time+1
 16158  01887C  0012               	return	
 16159  01887E                     __end_of__get_time:
 16160                           	opt stack 0
 16161                           tblptru	equ	0xFF8
 16162                           tblptrh	equ	0xFF7
 16163                           tblptrl	equ	0xFF6
 16164                           tablat	equ	0xFF5
 16165                           prodh	equ	0xFF4
 16166                           prodl	equ	0xFF3
 16167                           intcon	equ	0xFF2
 16168                           intcon2	equ	0xFF1
 16169                           intcon3	equ	0xFF0
 16170                           postinc0	equ	0xFEE
 16171                           wreg	equ	0xFE8
 16172                           postinc1	equ	0xFE6
 16173                           postdec1	equ	0xFE5
 16174                           plusw1	equ	0xFE3
 16175                           fsr1h	equ	0xFE2
 16176                           fsr1l	equ	0xFE1
 16177                           indf2	equ	0xFDF
 16178                           postinc2	equ	0xFDE
 16179                           postdec2	equ	0xFDD
 16180                           plusw2	equ	0xFDB
 16181                           fsr2h	equ	0xFDA
 16182                           fsr2l	equ	0xFD9
 16183                           status	equ	0xFD8
 16184                           
 16185 ;; *************** function _rtcc_get_minutes_decimal *****************
 16186 ;; Defined at:
 16187 ;;		line 263 in file "rtcc.c"
 16188 ;; Parameters:    Size  Location     Type
 16189 ;;		None
 16190 ;; Auto vars:     Size  Location     Type
 16191 ;;  bcd_minutes     1    3[BANK0 ] unsigned char 
 16192 ;; Return value:  Size  Location     Type
 16193 ;;                  1    wreg      unsigned char 
 16194 ;; Registers used:
 16195 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16196 ;; Tracked objects:
 16197 ;;		On entry : 0/0
 16198 ;;		On exit  : 0/0
 16199 ;;		Unchanged: 0/0
 16200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16202 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16204 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16205 ;;Total ram usage:        1 bytes
 16206 ;; Hardware stack levels used:    1
 16207 ;; Hardware stack levels required when called:   11
 16208 ;; This function calls:
 16209 ;;		__rtcc_bdc_to_decimal
 16210 ;;		_rtcc_get_minutes
 16211 ;; This function is called by:
 16212 ;;		__get_time
 16213 ;;		__get_dateTime
 16214 ;; This function uses a non-reentrant model
 16215 ;;
 16216                           
 16217                           	psect	text67
 16218  01AAAA                     __ptext67:
 16219                           	opt stack 0
 16220  01AAAA                     _rtcc_get_minutes_decimal:
 16221                           	opt stack 16
 16222                           
 16223                           ;rtcc.c: 265: uint8_t bcd_minutes = rtcc_get_minutes();
 16224                           
 16225                           ; BSR set to: 0
 16226                           ;incstack = 0
 16227  01AAAA  EC37  F0D5         	call	_rtcc_get_minutes	;wreg free
 16228  01AAAE  0100               	movlb	0	; () banked
 16229  01AAB0  6F63               	movwf	rtcc_get_minutes_decimal@bcd_minutes& (0+255),b
 16230                           
 16231                           ; BSR set to: 0
 16232                           ;rtcc.c: 266: return _rtcc_bdc_to_decimal(bcd_minutes);
 16233  01AAB2  0100               	movlb	0	; () banked
 16234  01AAB4  5163               	movf	rtcc_get_minutes_decimal@bcd_minutes& (0+255),w,b
 16235  01AAB6  EC96  F0D3         	call	__rtcc_bdc_to_decimal
 16236  01AABA  0012               	return	
 16237  01AABC                     __end_of_rtcc_get_minutes_decimal:
 16238                           	opt stack 0
 16239                           tblptru	equ	0xFF8
 16240                           tblptrh	equ	0xFF7
 16241                           tblptrl	equ	0xFF6
 16242                           tablat	equ	0xFF5
 16243                           prodh	equ	0xFF4
 16244                           prodl	equ	0xFF3
 16245                           intcon	equ	0xFF2
 16246                           intcon2	equ	0xFF1
 16247                           intcon3	equ	0xFF0
 16248                           postinc0	equ	0xFEE
 16249                           wreg	equ	0xFE8
 16250                           postinc1	equ	0xFE6
 16251                           postdec1	equ	0xFE5
 16252                           plusw1	equ	0xFE3
 16253                           fsr1h	equ	0xFE2
 16254                           fsr1l	equ	0xFE1
 16255                           indf2	equ	0xFDF
 16256                           postinc2	equ	0xFDE
 16257                           postdec2	equ	0xFDD
 16258                           plusw2	equ	0xFDB
 16259                           fsr2h	equ	0xFDA
 16260                           fsr2l	equ	0xFD9
 16261                           status	equ	0xFD8
 16262                           
 16263 ;; *************** function _rtcc_get_hours_decimal *****************
 16264 ;; Defined at:
 16265 ;;		line 225 in file "rtcc.c"
 16266 ;; Parameters:    Size  Location     Type
 16267 ;;		None
 16268 ;; Auto vars:     Size  Location     Type
 16269 ;;  bcd_hours       1    3[BANK0 ] unsigned char 
 16270 ;; Return value:  Size  Location     Type
 16271 ;;                  1    wreg      unsigned char 
 16272 ;; Registers used:
 16273 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16274 ;; Tracked objects:
 16275 ;;		On entry : 0/0
 16276 ;;		On exit  : 0/0
 16277 ;;		Unchanged: 0/0
 16278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16280 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16282 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16283 ;;Total ram usage:        1 bytes
 16284 ;; Hardware stack levels used:    1
 16285 ;; Hardware stack levels required when called:   11
 16286 ;; This function calls:
 16287 ;;		__rtcc_bdc_to_decimal
 16288 ;;		_rtcc_get_hours
 16289 ;; This function is called by:
 16290 ;;		__get_time
 16291 ;;		__get_dateTime
 16292 ;; This function uses a non-reentrant model
 16293 ;;
 16294                           
 16295                           	psect	text68
 16296  01AABC                     __ptext68:
 16297                           	opt stack 0
 16298  01AABC                     _rtcc_get_hours_decimal:
 16299                           	opt stack 16
 16300                           
 16301                           ;rtcc.c: 227: uint8_t bcd_hours = rtcc_get_hours();
 16302                           
 16303                           ;incstack = 0
 16304  01AABC  EC41  F0D5         	call	_rtcc_get_hours	;wreg free
 16305  01AAC0  0100               	movlb	0	; () banked
 16306  01AAC2  6F63               	movwf	rtcc_get_hours_decimal@bcd_hours& (0+255),b
 16307                           
 16308                           ; BSR set to: 0
 16309                           ;rtcc.c: 228: return _rtcc_bdc_to_decimal(bcd_hours);
 16310  01AAC4  0100               	movlb	0	; () banked
 16311  01AAC6  5163               	movf	rtcc_get_hours_decimal@bcd_hours& (0+255),w,b
 16312  01AAC8  EC96  F0D3         	call	__rtcc_bdc_to_decimal
 16313  01AACC  0012               	return	
 16314  01AACE                     __end_of_rtcc_get_hours_decimal:
 16315                           	opt stack 0
 16316                           tblptru	equ	0xFF8
 16317                           tblptrh	equ	0xFF7
 16318                           tblptrl	equ	0xFF6
 16319                           tablat	equ	0xFF5
 16320                           prodh	equ	0xFF4
 16321                           prodl	equ	0xFF3
 16322                           intcon	equ	0xFF2
 16323                           intcon2	equ	0xFF1
 16324                           intcon3	equ	0xFF0
 16325                           postinc0	equ	0xFEE
 16326                           wreg	equ	0xFE8
 16327                           postinc1	equ	0xFE6
 16328                           postdec1	equ	0xFE5
 16329                           plusw1	equ	0xFE3
 16330                           fsr1h	equ	0xFE2
 16331                           fsr1l	equ	0xFE1
 16332                           indf2	equ	0xFDF
 16333                           postinc2	equ	0xFDE
 16334                           postdec2	equ	0xFDD
 16335                           plusw2	equ	0xFDB
 16336                           fsr2h	equ	0xFDA
 16337                           fsr2l	equ	0xFD9
 16338                           status	equ	0xFD8
 16339                           
 16340 ;; *************** function __get_date *****************
 16341 ;; Defined at:
 16342 ;;		line 43 in file "fat16.c"
 16343 ;; Parameters:    Size  Location     Type
 16344 ;;		None
 16345 ;; Auto vars:     Size  Location     Type
 16346 ;;  date            2   11[BANK0 ] unsigned int 
 16347 ;;  day             1   10[BANK0 ] unsigned char 
 16348 ;;  month           1    9[BANK0 ] unsigned char 
 16349 ;;  year            1    8[BANK0 ] unsigned char 
 16350 ;; Return value:  Size  Location     Type
 16351 ;;                  2    4[BANK0 ] unsigned int 
 16352 ;; Registers used:
 16353 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16354 ;; Tracked objects:
 16355 ;;		On entry : 0/0
 16356 ;;		On exit  : 0/0
 16357 ;;		Unchanged: 0/0
 16358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16359 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16360 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16361 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16362 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16363 ;;Total ram usage:        9 bytes
 16364 ;; Hardware stack levels used:    1
 16365 ;; Hardware stack levels required when called:   12
 16366 ;; This function calls:
 16367 ;;		_rtcc_get_day_decimal
 16368 ;;		_rtcc_get_month_decimal
 16369 ;;		_rtcc_get_year_decimal
 16370 ;; This function is called by:
 16371 ;;		__update_modified_time
 16372 ;;		_fat_create_file
 16373 ;; This function uses a non-reentrant model
 16374 ;;
 16375                           
 16376                           	psect	text69
 16377  018B18                     __ptext69:
 16378                           	opt stack 0
 16379  018B18                     __get_date:
 16380                           	opt stack 16
 16381                           
 16382                           ;fat16.c: 45: uint16_t date;
 16383                           ;fat16.c: 46: uint8_t year = rtcc_get_year_decimal();
 16384                           
 16385                           ;incstack = 0
 16386  018B18  EC67  F0D5         	call	_rtcc_get_year_decimal	;wreg free
 16387  018B1C  0100               	movlb	0	; () banked
 16388  018B1E  6F68               	movwf	__get_date@year& (0+255),b
 16389                           
 16390                           ;fat16.c: 47: uint8_t month = rtcc_get_month_decimal();
 16391  018B20  EC70  F0D5         	call	_rtcc_get_month_decimal	;wreg free
 16392  018B24  0100               	movlb	0	; () banked
 16393  018B26  6F69               	movwf	__get_date@month& (0+255),b
 16394                           
 16395                           ;fat16.c: 48: uint8_t day = rtcc_get_day_decimal();
 16396  018B28  EC79  F0D5         	call	_rtcc_get_day_decimal	;wreg free
 16397  018B2C  0100               	movlb	0	; () banked
 16398  018B2E  6F6A               	movwf	__get_date@day& (0+255),b
 16399                           
 16400                           ; BSR set to: 0
 16401                           ;fat16.c: 49: date = (((year+20)&0b1111111) << 9);
 16402  018B30  0100               	movlb	0	; () banked
 16403  018B32  5168               	movf	__get_date@year& (0+255),w,b
 16404  018B34  0F14               	addlw	20
 16405  018B36  0B7F               	andlw	127
 16406  018B38  0100               	movlb	0	; () banked
 16407  018B3A  6F66               	movwf	??__get_date& (0+255),b
 16408  018B3C  6B67               	clrf	(??__get_date+1)& (0+255),b
 16409  018B3E  0E09               	movlw	9
 16410  018B40                     u17965:
 16411  018B40  90D8               	bcf	status,0,c
 16412  018B42  0100               	movlb	0	; () banked
 16413  018B44  3766               	rlcf	??__get_date& (0+255),f,b
 16414  018B46  3767               	rlcf	(??__get_date+1)& (0+255),f,b
 16415  018B48  2EE8               	decfsz	wreg,f,c
 16416  018B4A  D7FA               	goto	u17965
 16417  018B4C  C066  F06B         	movff	??__get_date,__get_date@date
 16418  018B50  C067  F06C         	movff	??__get_date+1,__get_date@date+1
 16419                           
 16420                           ; BSR set to: 0
 16421                           ;fat16.c: 50: date |= ((month&0b1111) << 5);
 16422  018B54  0100               	movlb	0	; () banked
 16423  018B56  5169               	movf	__get_date@month& (0+255),w,b
 16424  018B58  0B0F               	andlw	15
 16425  018B5A  0100               	movlb	0	; () banked
 16426  018B5C  6F66               	movwf	??__get_date& (0+255),b
 16427  018B5E  6B67               	clrf	(??__get_date+1)& (0+255),b
 16428  018B60  0E05               	movlw	5
 16429  018B62                     u17975:
 16430  018B62  90D8               	bcf	status,0,c
 16431  018B64  0100               	movlb	0	; () banked
 16432  018B66  3766               	rlcf	??__get_date& (0+255),f,b
 16433  018B68  3767               	rlcf	(??__get_date+1)& (0+255),f,b
 16434  018B6A  2EE8               	decfsz	wreg,f,c
 16435  018B6C  D7FA               	goto	u17975
 16436  018B6E  0100               	movlb	0	; () banked
 16437  018B70  5166               	movf	??__get_date& (0+255),w,b
 16438  018B72  0100               	movlb	0	; () banked
 16439  018B74  136B               	iorwf	__get_date@date& (0+255),f,b
 16440  018B76  0100               	movlb	0	; () banked
 16441  018B78  5167               	movf	(??__get_date+1)& (0+255),w,b
 16442  018B7A  0100               	movlb	0	; () banked
 16443  018B7C  136C               	iorwf	(__get_date@date+1)& (0+255),f,b
 16444                           
 16445                           ; BSR set to: 0
 16446                           ;fat16.c: 51: date |= (day&0b11111);
 16447  018B7E  C06A  F066         	movff	__get_date@day,??__get_date
 16448  018B82  0E1F               	movlw	31
 16449  018B84  0100               	movlb	0	; () banked
 16450  018B86  1766               	andwf	??__get_date& (0+255),f,b
 16451  018B88  0100               	movlb	0	; () banked
 16452  018B8A  5166               	movf	??__get_date& (0+255),w,b
 16453  018B8C  0100               	movlb	0	; () banked
 16454  018B8E  136B               	iorwf	__get_date@date& (0+255),f,b
 16455                           
 16456                           ; BSR set to: 0
 16457                           ;fat16.c: 52: return date;
 16458  018B90  C06B  F064         	movff	__get_date@date,?__get_date
 16459  018B94  C06C  F065         	movff	__get_date@date+1,?__get_date+1
 16460  018B98  0012               	return	
 16461  018B9A                     __end_of__get_date:
 16462                           	opt stack 0
 16463                           tblptru	equ	0xFF8
 16464                           tblptrh	equ	0xFF7
 16465                           tblptrl	equ	0xFF6
 16466                           tablat	equ	0xFF5
 16467                           prodh	equ	0xFF4
 16468                           prodl	equ	0xFF3
 16469                           intcon	equ	0xFF2
 16470                           intcon2	equ	0xFF1
 16471                           intcon3	equ	0xFF0
 16472                           postinc0	equ	0xFEE
 16473                           wreg	equ	0xFE8
 16474                           postinc1	equ	0xFE6
 16475                           postdec1	equ	0xFE5
 16476                           plusw1	equ	0xFE3
 16477                           fsr1h	equ	0xFE2
 16478                           fsr1l	equ	0xFE1
 16479                           indf2	equ	0xFDF
 16480                           postinc2	equ	0xFDE
 16481                           postdec2	equ	0xFDD
 16482                           plusw2	equ	0xFDB
 16483                           fsr2h	equ	0xFDA
 16484                           fsr2l	equ	0xFD9
 16485                           status	equ	0xFD8
 16486                           
 16487 ;; *************** function _rtcc_get_year_decimal *****************
 16488 ;; Defined at:
 16489 ;;		line 111 in file "rtcc.c"
 16490 ;; Parameters:    Size  Location     Type
 16491 ;;		None
 16492 ;; Auto vars:     Size  Location     Type
 16493 ;;  bcd_year        1    3[BANK0 ] unsigned char 
 16494 ;; Return value:  Size  Location     Type
 16495 ;;                  1    wreg      unsigned char 
 16496 ;; Registers used:
 16497 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16498 ;; Tracked objects:
 16499 ;;		On entry : 0/0
 16500 ;;		On exit  : 0/0
 16501 ;;		Unchanged: 0/0
 16502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16504 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16506 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16507 ;;Total ram usage:        1 bytes
 16508 ;; Hardware stack levels used:    1
 16509 ;; Hardware stack levels required when called:   11
 16510 ;; This function calls:
 16511 ;;		__rtcc_bdc_to_decimal
 16512 ;;		_rtcc_get_year
 16513 ;; This function is called by:
 16514 ;;		__get_date
 16515 ;;		__get_dateTime
 16516 ;; This function uses a non-reentrant model
 16517 ;;
 16518                           
 16519                           	psect	text70
 16520  01AACE                     __ptext70:
 16521                           	opt stack 0
 16522  01AACE                     _rtcc_get_year_decimal:
 16523                           	opt stack 16
 16524                           
 16525                           ;rtcc.c: 113: uint8_t bcd_year = rtcc_get_year();
 16526                           
 16527                           ; BSR set to: 0
 16528                           ;incstack = 0
 16529  01AACE  EC19  F0D5         	call	_rtcc_get_year	;wreg free
 16530  01AAD2  0100               	movlb	0	; () banked
 16531  01AAD4  6F63               	movwf	rtcc_get_year_decimal@bcd_year& (0+255),b
 16532                           
 16533                           ; BSR set to: 0
 16534                           ;rtcc.c: 114: return _rtcc_bdc_to_decimal(bcd_year);
 16535  01AAD6  0100               	movlb	0	; () banked
 16536  01AAD8  5163               	movf	rtcc_get_year_decimal@bcd_year& (0+255),w,b
 16537  01AADA  EC96  F0D3         	call	__rtcc_bdc_to_decimal
 16538  01AADE  0012               	return	
 16539  01AAE0                     __end_of_rtcc_get_year_decimal:
 16540                           	opt stack 0
 16541                           tblptru	equ	0xFF8
 16542                           tblptrh	equ	0xFF7
 16543                           tblptrl	equ	0xFF6
 16544                           tablat	equ	0xFF5
 16545                           prodh	equ	0xFF4
 16546                           prodl	equ	0xFF3
 16547                           intcon	equ	0xFF2
 16548                           intcon2	equ	0xFF1
 16549                           intcon3	equ	0xFF0
 16550                           postinc0	equ	0xFEE
 16551                           wreg	equ	0xFE8
 16552                           postinc1	equ	0xFE6
 16553                           postdec1	equ	0xFE5
 16554                           plusw1	equ	0xFE3
 16555                           fsr1h	equ	0xFE2
 16556                           fsr1l	equ	0xFE1
 16557                           indf2	equ	0xFDF
 16558                           postinc2	equ	0xFDE
 16559                           postdec2	equ	0xFDD
 16560                           plusw2	equ	0xFDB
 16561                           fsr2h	equ	0xFDA
 16562                           fsr2l	equ	0xFD9
 16563                           status	equ	0xFD8
 16564                           
 16565 ;; *************** function _rtcc_get_month_decimal *****************
 16566 ;; Defined at:
 16567 ;;		line 149 in file "rtcc.c"
 16568 ;; Parameters:    Size  Location     Type
 16569 ;;		None
 16570 ;; Auto vars:     Size  Location     Type
 16571 ;;  bcd_month       1    3[BANK0 ] unsigned char 
 16572 ;; Return value:  Size  Location     Type
 16573 ;;                  1    wreg      unsigned char 
 16574 ;; Registers used:
 16575 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16576 ;; Tracked objects:
 16577 ;;		On entry : 0/0
 16578 ;;		On exit  : 0/0
 16579 ;;		Unchanged: 0/0
 16580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16582 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16584 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16585 ;;Total ram usage:        1 bytes
 16586 ;; Hardware stack levels used:    1
 16587 ;; Hardware stack levels required when called:   11
 16588 ;; This function calls:
 16589 ;;		__rtcc_bdc_to_decimal
 16590 ;;		_rtcc_get_month
 16591 ;; This function is called by:
 16592 ;;		__get_date
 16593 ;;		__get_dateTime
 16594 ;; This function uses a non-reentrant model
 16595 ;;
 16596                           
 16597                           	psect	text71
 16598  01AAE0                     __ptext71:
 16599                           	opt stack 0
 16600  01AAE0                     _rtcc_get_month_decimal:
 16601                           	opt stack 16
 16602                           
 16603                           ;rtcc.c: 151: uint8_t bcd_month = rtcc_get_month();
 16604                           
 16605                           ;incstack = 0
 16606  01AAE0  EC2D  F0D5         	call	_rtcc_get_month	;wreg free
 16607  01AAE4  0100               	movlb	0	; () banked
 16608  01AAE6  6F63               	movwf	rtcc_get_month_decimal@bcd_month& (0+255),b
 16609                           
 16610                           ; BSR set to: 0
 16611                           ;rtcc.c: 152: return _rtcc_bdc_to_decimal(bcd_month);
 16612  01AAE8  0100               	movlb	0	; () banked
 16613  01AAEA  5163               	movf	rtcc_get_month_decimal@bcd_month& (0+255),w,b
 16614  01AAEC  EC96  F0D3         	call	__rtcc_bdc_to_decimal
 16615  01AAF0  0012               	return	
 16616  01AAF2                     __end_of_rtcc_get_month_decimal:
 16617                           	opt stack 0
 16618                           tblptru	equ	0xFF8
 16619                           tblptrh	equ	0xFF7
 16620                           tblptrl	equ	0xFF6
 16621                           tablat	equ	0xFF5
 16622                           prodh	equ	0xFF4
 16623                           prodl	equ	0xFF3
 16624                           intcon	equ	0xFF2
 16625                           intcon2	equ	0xFF1
 16626                           intcon3	equ	0xFF0
 16627                           postinc0	equ	0xFEE
 16628                           wreg	equ	0xFE8
 16629                           postinc1	equ	0xFE6
 16630                           postdec1	equ	0xFE5
 16631                           plusw1	equ	0xFE3
 16632                           fsr1h	equ	0xFE2
 16633                           fsr1l	equ	0xFE1
 16634                           indf2	equ	0xFDF
 16635                           postinc2	equ	0xFDE
 16636                           postdec2	equ	0xFDD
 16637                           plusw2	equ	0xFDB
 16638                           fsr2h	equ	0xFDA
 16639                           fsr2l	equ	0xFD9
 16640                           status	equ	0xFD8
 16641                           
 16642 ;; *************** function _rtcc_get_day_decimal *****************
 16643 ;; Defined at:
 16644 ;;		line 187 in file "rtcc.c"
 16645 ;; Parameters:    Size  Location     Type
 16646 ;;		None
 16647 ;; Auto vars:     Size  Location     Type
 16648 ;;  bcd_day         1    3[BANK0 ] unsigned char 
 16649 ;; Return value:  Size  Location     Type
 16650 ;;                  1    wreg      unsigned char 
 16651 ;; Registers used:
 16652 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16653 ;; Tracked objects:
 16654 ;;		On entry : 0/0
 16655 ;;		On exit  : 0/0
 16656 ;;		Unchanged: 0/0
 16657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16659 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16661 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16662 ;;Total ram usage:        1 bytes
 16663 ;; Hardware stack levels used:    1
 16664 ;; Hardware stack levels required when called:   11
 16665 ;; This function calls:
 16666 ;;		__rtcc_bdc_to_decimal
 16667 ;;		_rtcc_get_day
 16668 ;; This function is called by:
 16669 ;;		__get_date
 16670 ;;		__get_dateTime
 16671 ;; This function uses a non-reentrant model
 16672 ;;
 16673                           
 16674                           	psect	text72
 16675  01AAF2                     __ptext72:
 16676                           	opt stack 0
 16677  01AAF2                     _rtcc_get_day_decimal:
 16678                           	opt stack 16
 16679                           
 16680                           ;rtcc.c: 189: uint8_t bcd_day = rtcc_get_day();
 16681                           
 16682                           ;incstack = 0
 16683  01AAF2  EC4B  F0D5         	call	_rtcc_get_day	;wreg free
 16684  01AAF6  0100               	movlb	0	; () banked
 16685  01AAF8  6F63               	movwf	rtcc_get_day_decimal@bcd_day& (0+255),b
 16686                           
 16687                           ; BSR set to: 0
 16688                           ;rtcc.c: 190: return _rtcc_bdc_to_decimal(bcd_day);
 16689  01AAFA  0100               	movlb	0	; () banked
 16690  01AAFC  5163               	movf	rtcc_get_day_decimal@bcd_day& (0+255),w,b
 16691  01AAFE  EC96  F0D3         	call	__rtcc_bdc_to_decimal
 16692  01AB02  0012               	return	
 16693  01AB04                     __end_of_rtcc_get_day_decimal:
 16694                           	opt stack 0
 16695                           tblptru	equ	0xFF8
 16696                           tblptrh	equ	0xFF7
 16697                           tblptrl	equ	0xFF6
 16698                           tablat	equ	0xFF5
 16699                           prodh	equ	0xFF4
 16700                           prodl	equ	0xFF3
 16701                           intcon	equ	0xFF2
 16702                           intcon2	equ	0xFF1
 16703                           intcon3	equ	0xFF0
 16704                           postinc0	equ	0xFEE
 16705                           wreg	equ	0xFE8
 16706                           postinc1	equ	0xFE6
 16707                           postdec1	equ	0xFE5
 16708                           plusw1	equ	0xFE3
 16709                           fsr1h	equ	0xFE2
 16710                           fsr1l	equ	0xFE1
 16711                           indf2	equ	0xFDF
 16712                           postinc2	equ	0xFDE
 16713                           postdec2	equ	0xFDD
 16714                           plusw2	equ	0xFDB
 16715                           fsr2h	equ	0xFDA
 16716                           fsr2l	equ	0xFD9
 16717                           status	equ	0xFD8
 16718                           
 16719 ;; *************** function __sector_from_cluster *****************
 16720 ;; Defined at:
 16721 ;;		line 455 in file "fat16.c"
 16722 ;; Parameters:    Size  Location     Type
 16723 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 16724 ;; Auto vars:     Size  Location     Type
 16725 ;;		None
 16726 ;; Return value:  Size  Location     Type
 16727 ;;                  2    0[BANK0 ] unsigned int 
 16728 ;; Registers used:
 16729 ;;		wreg, status,2, status,0
 16730 ;; Tracked objects:
 16731 ;;		On entry : 0/0
 16732 ;;		On exit  : 0/0
 16733 ;;		Unchanged: 0/0
 16734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16735 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16738 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16739 ;;Total ram usage:        2 bytes
 16740 ;; Hardware stack levels used:    1
 16741 ;; Hardware stack levels required when called:   10
 16742 ;; This function calls:
 16743 ;;		Nothing
 16744 ;; This function is called by:
 16745 ;;		_fat_append_to_file
 16746 ;;		_fat_read_from_file
 16747 ;; This function uses a non-reentrant model
 16748 ;;
 16749                           
 16750                           	psect	text73
 16751  01A9C8                     __ptext73:
 16752                           	opt stack 0
 16753  01A9C8                     __sector_from_cluster:
 16754                           	opt stack 18
 16755                           
 16756                           ;fat16.c: 457: return fat_cluster + 22 - 2;
 16757                           
 16758                           ;incstack = 0
 16759  01A9C8  0E14               	movlw	20
 16760  01A9CA  0100               	movlb	0	; () banked
 16761  01A9CC  2560               	addwf	__sector_from_cluster@fat_cluster& (0+255),w,b
 16762  01A9CE  0100               	movlb	0	; () banked
 16763  01A9D0  6F60               	movwf	?__sector_from_cluster& (0+255),b
 16764  01A9D2  0E00               	movlw	0
 16765  01A9D4  0100               	movlb	0	; () banked
 16766  01A9D6  2161               	addwfc	(__sector_from_cluster@fat_cluster+1)& (0+255),w,b
 16767  01A9D8  0100               	movlb	0	; () banked
 16768  01A9DA  6F61               	movwf	(?__sector_from_cluster+1)& (0+255),b
 16769  01A9DC  0012               	return	
 16770  01A9DE                     __end_of__sector_from_cluster:
 16771                           	opt stack 0
 16772                           tblptru	equ	0xFF8
 16773                           tblptrh	equ	0xFF7
 16774                           tblptrl	equ	0xFF6
 16775                           tablat	equ	0xFF5
 16776                           prodh	equ	0xFF4
 16777                           prodl	equ	0xFF3
 16778                           intcon	equ	0xFF2
 16779                           intcon2	equ	0xFF1
 16780                           intcon3	equ	0xFF0
 16781                           postinc0	equ	0xFEE
 16782                           wreg	equ	0xFE8
 16783                           postinc1	equ	0xFE6
 16784                           postdec1	equ	0xFE5
 16785                           plusw1	equ	0xFE3
 16786                           fsr1h	equ	0xFE2
 16787                           fsr1l	equ	0xFE1
 16788                           indf2	equ	0xFDF
 16789                           postinc2	equ	0xFDE
 16790                           postdec2	equ	0xFDD
 16791                           plusw2	equ	0xFDB
 16792                           fsr2h	equ	0xFDA
 16793                           fsr2l	equ	0xFD9
 16794                           status	equ	0xFD8
 16795                           
 16796 ;; *************** function __root_is_available *****************
 16797 ;; Defined at:
 16798 ;;		line 61 in file "fat16.c"
 16799 ;; Parameters:    Size  Location     Type
 16800 ;;  file_number     1    wreg     unsigned char 
 16801 ;; Auto vars:     Size  Location     Type
 16802 ;;  file_number     1   44[BANK0 ] unsigned char 
 16803 ;;  offset          2   42[BANK0 ] unsigned int 
 16804 ;;  root_sector     2   40[BANK0 ] unsigned int 
 16805 ;;  first_byte      1   45[BANK0 ] unsigned char 
 16806 ;; Return value:  Size  Location     Type
 16807 ;;                  1    wreg      unsigned char 
 16808 ;; Registers used:
 16809 ;;		wreg, status,2, status,0, cstack
 16810 ;; Tracked objects:
 16811 ;;		On entry : 0/0
 16812 ;;		On exit  : 0/0
 16813 ;;		Unchanged: 0/0
 16814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16816 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16817 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16818 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16819 ;;Total ram usage:        7 bytes
 16820 ;; Hardware stack levels used:    1
 16821 ;; Hardware stack levels required when called:   14
 16822 ;; This function calls:
 16823 ;;		_flash_partial_read
 16824 ;; This function is called by:
 16825 ;;		__get_available_root_entry
 16826 ;;		_fat_append_to_file
 16827 ;;		_fat_delete_file
 16828 ;; This function uses a non-reentrant model
 16829 ;;
 16830                           
 16831                           	psect	text74
 16832  018264                     __ptext74:
 16833                           	opt stack 0
 16834  018264                     __root_is_available:
 16835                           	opt stack 13
 16836                           
 16837                           ; BSR set to: 0
 16838                           ;incstack = 0
 16839                           ;__root_is_available@file_number stored from wreg
 16840  018264  0100               	movlb	0	; () banked
 16841  018266  6F8C               	movwf	__root_is_available@file_number& (0+255),b
 16842                           
 16843                           ;fat16.c: 63: uint16_t root_sector;
 16844                           ;fat16.c: 64: uint16_t offset;
 16845                           ;fat16.c: 65: uint8_t first_byte;
 16846                           ;fat16.c: 69: if(file_number>=64)
 16847  018268  0E3F               	movlw	63
 16848  01826A  0100               	movlb	0	; () banked
 16849  01826C  658C               	cpfsgt	__root_is_available@file_number& (0+255),b
 16850  01826E  D002               	goto	l19036
 16851                           
 16852                           ; BSR set to: 0
 16853                           ;fat16.c: 70: {
 16854                           ;fat16.c: 72: return 0;
 16855  018270  0E00               	movlw	0
 16856                           
 16857                           ; BSR set to: 0
 16858  018272  0012               	return	
 16859  018274                     l19036:
 16860                           
 16861                           ; BSR set to: 0
 16862                           ;fat16.c: 73: }
 16863                           ;fat16.c: 76: root_sector = (file_number >> 4) + 18;
 16864  018274  C08C  F087         	movff	__root_is_available@file_number,??__root_is_available
 16865  018278  0100               	movlb	0	; () banked
 16866  01827A  3B87               	swapf	??__root_is_available& (0+255),f,b
 16867  01827C  0E0F               	movlw	15
 16868  01827E  1787               	andwf	??__root_is_available& (0+255),f,b
 16869  018280  0E12               	movlw	18
 16870  018282  0100               	movlb	0	; () banked
 16871  018284  2587               	addwf	??__root_is_available& (0+255),w,b
 16872  018286  0100               	movlb	0	; () banked
 16873  018288  6F88               	movwf	__root_is_available@root_sector& (0+255),b
 16874  01828A  0100               	movlb	0	; () banked
 16875  01828C  6B89               	clrf	(__root_is_available@root_sector+1)& (0+255),b
 16876  01828E  0E00               	movlw	0
 16877  018290  2389               	addwfc	(__root_is_available@root_sector+1)& (0+255),f,b
 16878                           
 16879                           ;fat16.c: 77: offset = (file_number & 0b1111);
 16880  018292  C08C  F087         	movff	__root_is_available@file_number,??__root_is_available
 16881  018296  0E0F               	movlw	15
 16882  018298  0100               	movlb	0	; () banked
 16883  01829A  1787               	andwf	??__root_is_available& (0+255),f,b
 16884  01829C  0100               	movlb	0	; () banked
 16885  01829E  5187               	movf	??__root_is_available& (0+255),w,b
 16886  0182A0  0100               	movlb	0	; () banked
 16887  0182A2  6F8A               	movwf	__root_is_available@offset& (0+255),b
 16888  0182A4  6B8B               	clrf	(__root_is_available@offset+1)& (0+255),b
 16889                           
 16890                           ;fat16.c: 78: offset <<= 5;
 16891  0182A6  0100               	movlb	0	; () banked
 16892  0182A8  0E05               	movlw	5
 16893  0182AA                     u17995:
 16894  0182AA  90D8               	bcf	status,0,c
 16895  0182AC  378A               	rlcf	__root_is_available@offset& (0+255),f,b
 16896  0182AE  378B               	rlcf	(__root_is_available@offset+1)& (0+255),f,b
 16897  0182B0  2EE8               	decfsz	wreg,f,c
 16898  0182B2  D7FB               	goto	u17995
 16899                           
 16900                           ; BSR set to: 0
 16901                           ;fat16.c: 81: flash_partial_read(root_sector, offset, 1, &first_byte);
 16902  0182B4  C088  F073         	movff	__root_is_available@root_sector,flash_partial_read@page
 16903  0182B8  C089  F074         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 16904  0182BC  C08A  F075         	movff	__root_is_available@offset,flash_partial_read@start
 16905  0182C0  C08B  F076         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 16906  0182C4  0E00               	movlw	0
 16907  0182C6  0100               	movlb	0	; () banked
 16908  0182C8  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 16909  0182CA  0E01               	movlw	1
 16910  0182CC  6F77               	movwf	flash_partial_read@length& (0+255),b
 16911  0182CE  0E8D               	movlw	low __root_is_available@first_byte
 16912  0182D0  0100               	movlb	0	; () banked
 16913  0182D2  6F79               	movwf	flash_partial_read@data& (0+255),b
 16914  0182D4  0E00               	movlw	high __root_is_available@first_byte
 16915  0182D6  0100               	movlb	0	; () banked
 16916  0182D8  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 16917  0182DA  EC0D  F0BF         	call	_flash_partial_read	;wreg free
 16918                           
 16919                           ;fat16.c: 84: if((first_byte==0x00) || (first_byte==0xE5))
 16920  0182DE  0100               	movlb	0	; () banked
 16921  0182E0  518D               	movf	__root_is_available@first_byte& (0+255),w,b
 16922  0182E2  0100               	movlb	0	; () banked
 16923  0182E4  B4D8               	btfsc	status,2,c
 16924  0182E6  D005               	goto	l19044
 16925                           
 16926                           ; BSR set to: 0
 16927  0182E8  0EE5               	movlw	229
 16928  0182EA  0100               	movlb	0	; () banked
 16929  0182EC  198D               	xorwf	__root_is_available@first_byte& (0+255),w,b
 16930  0182EE  A4D8               	btfss	status,2,c
 16931  0182F0  D002               	goto	l19050
 16932  0182F2                     l19044:
 16933                           
 16934                           ; BSR set to: 0
 16935                           ;fat16.c: 85: {
 16936                           ;fat16.c: 87: return 1;
 16937  0182F2  0E01               	movlw	1
 16938                           
 16939                           ; BSR set to: 0
 16940                           ;fat16.c: 88: }
 16941                           
 16942                           ; BSR set to: 0
 16943  0182F4  0012               	return	
 16944  0182F6                     l19050:
 16945                           
 16946                           ; BSR set to: 0
 16947                           ;fat16.c: 89: else
 16948                           ;fat16.c: 90: {
 16949                           ;fat16.c: 92: return 0;
 16950  0182F6  0E00               	movlw	0
 16951                           
 16952                           ; BSR set to: 0
 16953  0182F8  0012               	return	
 16954  0182FA                     __end_of__root_is_available:
 16955                           	opt stack 0
 16956                           tblptru	equ	0xFF8
 16957                           tblptrh	equ	0xFF7
 16958                           tblptrl	equ	0xFF6
 16959                           tablat	equ	0xFF5
 16960                           prodh	equ	0xFF4
 16961                           prodl	equ	0xFF3
 16962                           intcon	equ	0xFF2
 16963                           intcon2	equ	0xFF1
 16964                           intcon3	equ	0xFF0
 16965                           postinc0	equ	0xFEE
 16966                           wreg	equ	0xFE8
 16967                           postinc1	equ	0xFE6
 16968                           postdec1	equ	0xFE5
 16969                           plusw1	equ	0xFE3
 16970                           fsr1h	equ	0xFE2
 16971                           fsr1l	equ	0xFE1
 16972                           indf2	equ	0xFDF
 16973                           postinc2	equ	0xFDE
 16974                           postdec2	equ	0xFDD
 16975                           plusw2	equ	0xFDB
 16976                           fsr2h	equ	0xFDA
 16977                           fsr2l	equ	0xFD9
 16978                           status	equ	0xFD8
 16979                           
 16980 ;; *************** function __read_root *****************
 16981 ;; Defined at:
 16982 ;;		line 194 in file "fat16.c"
 16983 ;; Parameters:    Size  Location     Type
 16984 ;;  slot            1    wreg     unsigned char 
 16985 ;;  data            2   39[BANK0 ] PTR struct .
 16986 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), 
 16987 ;; Auto vars:     Size  Location     Type
 16988 ;;  slot            1   46[BANK0 ] unsigned char 
 16989 ;;  offset          2   44[BANK0 ] unsigned int 
 16990 ;;  root_sector     2   42[BANK0 ] unsigned int 
 16991 ;; Return value:  Size  Location     Type
 16992 ;;                  1    wreg      void 
 16993 ;; Registers used:
 16994 ;;		wreg, status,2, status,0, cstack
 16995 ;; Tracked objects:
 16996 ;;		On entry : 0/0
 16997 ;;		On exit  : 0/0
 16998 ;;		Unchanged: 0/0
 16999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17000 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17001 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17002 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17003 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17004 ;;Total ram usage:        8 bytes
 17005 ;; Hardware stack levels used:    1
 17006 ;; Hardware stack levels required when called:   14
 17007 ;; This function calls:
 17008 ;;		_flash_partial_read
 17009 ;; This function is called by:
 17010 ;;		_fat_append_to_file
 17011 ;;		_fat_rename_file
 17012 ;;		_fat_read_from_file
 17013 ;; This function uses a non-reentrant model
 17014 ;;
 17015                           
 17016                           	psect	text75
 17017  019200                     __ptext75:
 17018                           	opt stack 0
 17019  019200                     __read_root:
 17020                           	opt stack 14
 17021                           
 17022                           ; BSR set to: 0
 17023                           ;incstack = 0
 17024                           ;__read_root@slot stored from wreg
 17025  019200  0100               	movlb	0	; () banked
 17026  019202  6F8E               	movwf	__read_root@slot& (0+255),b
 17027                           
 17028                           ;fat16.c: 196: uint16_t root_sector;
 17029                           ;fat16.c: 197: uint16_t offset;
 17030                           ;fat16.c: 198: root_sector = (slot >> 4) + 18;
 17031  019204  C08E  F089         	movff	__read_root@slot,??__read_root
 17032  019208  0100               	movlb	0	; () banked
 17033  01920A  3B89               	swapf	??__read_root& (0+255),f,b
 17034  01920C  0E0F               	movlw	15
 17035  01920E  1789               	andwf	??__read_root& (0+255),f,b
 17036  019210  0E12               	movlw	18
 17037  019212  0100               	movlb	0	; () banked
 17038  019214  2589               	addwf	??__read_root& (0+255),w,b
 17039  019216  0100               	movlb	0	; () banked
 17040  019218  6F8A               	movwf	__read_root@root_sector& (0+255),b
 17041  01921A  0100               	movlb	0	; () banked
 17042  01921C  6B8B               	clrf	(__read_root@root_sector+1)& (0+255),b
 17043  01921E  0E00               	movlw	0
 17044  019220  238B               	addwfc	(__read_root@root_sector+1)& (0+255),f,b
 17045                           
 17046                           ;fat16.c: 199: offset = (slot & 0b1111);
 17047  019222  C08E  F089         	movff	__read_root@slot,??__read_root
 17048  019226  0E0F               	movlw	15
 17049  019228  0100               	movlb	0	; () banked
 17050  01922A  1789               	andwf	??__read_root& (0+255),f,b
 17051  01922C  0100               	movlb	0	; () banked
 17052  01922E  5189               	movf	??__read_root& (0+255),w,b
 17053  019230  0100               	movlb	0	; () banked
 17054  019232  6F8C               	movwf	__read_root@offset& (0+255),b
 17055  019234  6B8D               	clrf	(__read_root@offset+1)& (0+255),b
 17056                           
 17057                           ;fat16.c: 200: offset <<= 5;
 17058  019236  0100               	movlb	0	; () banked
 17059  019238  0E05               	movlw	5
 17060  01923A                     u18795:
 17061  01923A  90D8               	bcf	status,0,c
 17062  01923C  378C               	rlcf	__read_root@offset& (0+255),f,b
 17063  01923E  378D               	rlcf	(__read_root@offset+1)& (0+255),f,b
 17064  019240  2EE8               	decfsz	wreg,f,c
 17065  019242  D7FB               	goto	u18795
 17066                           
 17067                           ; BSR set to: 0
 17068                           ;fat16.c: 201: flash_partial_read(root_sector, offset, 32, data);
 17069  019244  C08A  F073         	movff	__read_root@root_sector,flash_partial_read@page
 17070  019248  C08B  F074         	movff	__read_root@root_sector+1,flash_partial_read@page+1
 17071  01924C  C08C  F075         	movff	__read_root@offset,flash_partial_read@start
 17072  019250  C08D  F076         	movff	__read_root@offset+1,flash_partial_read@start+1
 17073  019254  0E00               	movlw	0
 17074  019256  0100               	movlb	0	; () banked
 17075  019258  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 17076  01925A  0E20               	movlw	32
 17077  01925C  6F77               	movwf	flash_partial_read@length& (0+255),b
 17078  01925E  C087  F079         	movff	__read_root@data,flash_partial_read@data
 17079  019262  C088  F07A         	movff	__read_root@data+1,flash_partial_read@data+1
 17080  019266  EC0D  F0BF         	call	_flash_partial_read	;wreg free
 17081  01926A  0012               	return		;funcret
 17082  01926C                     __end_of__read_root:
 17083                           	opt stack 0
 17084                           tblptru	equ	0xFF8
 17085                           tblptrh	equ	0xFF7
 17086                           tblptrl	equ	0xFF6
 17087                           tablat	equ	0xFF5
 17088                           prodh	equ	0xFF4
 17089                           prodl	equ	0xFF3
 17090                           intcon	equ	0xFF2
 17091                           intcon2	equ	0xFF1
 17092                           intcon3	equ	0xFF0
 17093                           postinc0	equ	0xFEE
 17094                           wreg	equ	0xFE8
 17095                           postinc1	equ	0xFE6
 17096                           postdec1	equ	0xFE5
 17097                           plusw1	equ	0xFE3
 17098                           fsr1h	equ	0xFE2
 17099                           fsr1l	equ	0xFE1
 17100                           indf2	equ	0xFDF
 17101                           postinc2	equ	0xFDE
 17102                           postdec2	equ	0xFDD
 17103                           plusw2	equ	0xFDB
 17104                           fsr2h	equ	0xFDA
 17105                           fsr2l	equ	0xFD9
 17106                           status	equ	0xFD8
 17107                           
 17108 ;; *************** function __read_fat *****************
 17109 ;; Defined at:
 17110 ;;		line 171 in file "fat16.c"
 17111 ;; Parameters:    Size  Location     Type
 17112 ;;  cluster         2   39[BANK0 ] unsigned int 
 17113 ;; Auto vars:     Size  Location     Type
 17114 ;;  value           2   45[BANK0 ] unsigned int 
 17115 ;;  offset          2   43[BANK0 ] unsigned int 
 17116 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 17117 ;; Return value:  Size  Location     Type
 17118 ;;                  2   39[BANK0 ] unsigned int 
 17119 ;; Registers used:
 17120 ;;		wreg, status,2, status,0, cstack
 17121 ;; Tracked objects:
 17122 ;;		On entry : 0/0
 17123 ;;		On exit  : 0/0
 17124 ;;		Unchanged: 0/0
 17125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17126 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17127 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17129 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17130 ;;Total ram usage:        8 bytes
 17131 ;; Hardware stack levels used:    1
 17132 ;; Hardware stack levels required when called:   14
 17133 ;; This function calls:
 17134 ;;		_flash_partial_read
 17135 ;; This function is called by:
 17136 ;;		_fat_append_to_file
 17137 ;;		_fat_delete_file
 17138 ;;		_fat_read_from_file
 17139 ;; This function uses a non-reentrant model
 17140 ;;
 17141                           
 17142                           	psect	text76
 17143  01995E                     __ptext76:
 17144                           	opt stack 0
 17145  01995E                     __read_fat:
 17146                           	opt stack 14
 17147                           
 17148                           ;fat16.c: 173: uint16_t fat_sector;
 17149                           ;fat16.c: 174: uint16_t offset;
 17150                           ;fat16.c: 175: uint16_t value;
 17151                           ;fat16.c: 176: fat_sector = cluster>>8;
 17152                           
 17153                           ;incstack = 0
 17154  01995E  0100               	movlb	0	; () banked
 17155  019960  5188               	movf	(__read_fat@cluster+1)& (0+255),w,b
 17156  019962  0100               	movlb	0	; () banked
 17157  019964  6F89               	movwf	__read_fat@fat_sector& (0+255),b
 17158  019966  6B8A               	clrf	(__read_fat@fat_sector+1)& (0+255),b
 17159                           
 17160                           ; BSR set to: 0
 17161                           ;fat16.c: 177: fat_sector += 2;
 17162  019968  0E02               	movlw	2
 17163  01996A  0100               	movlb	0	; () banked
 17164  01996C  2789               	addwf	__read_fat@fat_sector& (0+255),f,b
 17165  01996E  0E00               	movlw	0
 17166  019970  238A               	addwfc	(__read_fat@fat_sector+1)& (0+255),f,b
 17167                           
 17168                           ; BSR set to: 0
 17169                           ;fat16.c: 178: offset = cluster & 0xFF;
 17170  019972  0100               	movlb	0	; () banked
 17171  019974  5187               	movf	__read_fat@cluster& (0+255),w,b
 17172  019976  0100               	movlb	0	; () banked
 17173  019978  6F8B               	movwf	__read_fat@offset& (0+255),b
 17174  01997A  6B8C               	clrf	(__read_fat@offset+1)& (0+255),b
 17175                           
 17176                           ; BSR set to: 0
 17177                           ;fat16.c: 179: offset <<= 1;
 17178  01997C  0100               	movlb	0	; () banked
 17179  01997E  90D8               	bcf	status,0,c
 17180  019980  378B               	rlcf	__read_fat@offset& (0+255),f,b
 17181  019982  378C               	rlcf	(__read_fat@offset+1)& (0+255),f,b
 17182                           
 17183                           ; BSR set to: 0
 17184                           ;fat16.c: 180: flash_partial_read(fat_sector, offset, 2, &value);
 17185  019984  C089  F073         	movff	__read_fat@fat_sector,flash_partial_read@page
 17186  019988  C08A  F074         	movff	__read_fat@fat_sector+1,flash_partial_read@page+1
 17187  01998C  C08B  F075         	movff	__read_fat@offset,flash_partial_read@start
 17188  019990  C08C  F076         	movff	__read_fat@offset+1,flash_partial_read@start+1
 17189  019994  0E00               	movlw	0
 17190  019996  0100               	movlb	0	; () banked
 17191  019998  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 17192  01999A  0E02               	movlw	2
 17193  01999C  6F77               	movwf	flash_partial_read@length& (0+255),b
 17194  01999E  0E8D               	movlw	low __read_fat@value
 17195  0199A0  0100               	movlb	0	; () banked
 17196  0199A2  6F79               	movwf	flash_partial_read@data& (0+255),b
 17197  0199A4  0E00               	movlw	high __read_fat@value
 17198  0199A6  0100               	movlb	0	; () banked
 17199  0199A8  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 17200  0199AA  EC0D  F0BF         	call	_flash_partial_read	;wreg free
 17201                           
 17202                           ;fat16.c: 181: return value;
 17203  0199AE  C08D  F087         	movff	__read_fat@value,?__read_fat
 17204  0199B2  C08E  F088         	movff	__read_fat@value+1,?__read_fat+1
 17205  0199B6  0012               	return	
 17206  0199B8                     __end_of__read_fat:
 17207                           	opt stack 0
 17208                           tblptru	equ	0xFF8
 17209                           tblptrh	equ	0xFF7
 17210                           tblptrl	equ	0xFF6
 17211                           tablat	equ	0xFF5
 17212                           prodh	equ	0xFF4
 17213                           prodl	equ	0xFF3
 17214                           intcon	equ	0xFF2
 17215                           intcon2	equ	0xFF1
 17216                           intcon3	equ	0xFF0
 17217                           postinc0	equ	0xFEE
 17218                           wreg	equ	0xFE8
 17219                           postinc1	equ	0xFE6
 17220                           postdec1	equ	0xFE5
 17221                           plusw1	equ	0xFE3
 17222                           fsr1h	equ	0xFE2
 17223                           fsr1l	equ	0xFE1
 17224                           indf2	equ	0xFDF
 17225                           postinc2	equ	0xFDE
 17226                           postdec2	equ	0xFDD
 17227                           plusw2	equ	0xFDB
 17228                           fsr2h	equ	0xFDA
 17229                           fsr2l	equ	0xFD9
 17230                           status	equ	0xFD8
 17231                           
 17232 ;; *************** function __get_empty_cluster *****************
 17233 ;; Defined at:
 17234 ;;		line 109 in file "fat16.c"
 17235 ;; Parameters:    Size  Location     Type
 17236 ;;  first_cluste    2   39[BANK0 ] unsigned int 
 17237 ;; Auto vars:     Size  Location     Type
 17238 ;;  cluster         2   47[BANK0 ] unsigned int 
 17239 ;;  value           2   45[BANK0 ] unsigned int 
 17240 ;;  offset          2   43[BANK0 ] unsigned int 
 17241 ;;  fat_sector      2   41[BANK0 ] unsigned int 
 17242 ;; Return value:  Size  Location     Type
 17243 ;;                  2   39[BANK0 ] unsigned int 
 17244 ;; Registers used:
 17245 ;;		wreg, status,2, status,0, cstack
 17246 ;; Tracked objects:
 17247 ;;		On entry : 0/0
 17248 ;;		On exit  : 0/0
 17249 ;;		Unchanged: 0/0
 17250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17251 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17252 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17254 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17255 ;;Total ram usage:       10 bytes
 17256 ;; Hardware stack levels used:    1
 17257 ;; Hardware stack levels required when called:   14
 17258 ;; This function calls:
 17259 ;;		_flash_partial_read
 17260 ;; This function is called by:
 17261 ;;		_fat_create_file
 17262 ;;		_fat_append_to_file
 17263 ;; This function uses a non-reentrant model
 17264 ;;
 17265                           
 17266                           	psect	text77
 17267  018424                     __ptext77:
 17268                           	opt stack 0
 17269  018424                     __get_empty_cluster:
 17270                           	opt stack 14
 17271                           
 17272                           ;fat16.c: 111: uint16_t cluster;
 17273                           ;fat16.c: 112: uint16_t fat_sector;
 17274                           ;fat16.c: 113: uint16_t offset;
 17275                           ;fat16.c: 114: uint16_t value;
 17276                           ;fat16.c: 117: for(cluster=first_cluster; cluster<(4074+2); ++cluster)
 17277                           
 17278                           ;incstack = 0
 17279  018424  C087  F08F         	movff	__get_empty_cluster@first_cluster,__get_empty_cluster@cluster
 17280  018428  C088  F090         	movff	__get_empty_cluster@first_cluster+1,__get_empty_cluster@cluster+1
 17281  01842C                     l19704:
 17282  01842C  0EEC               	movlw	236
 17283  01842E  0100               	movlb	0	; () banked
 17284  018430  5D8F               	subwf	__get_empty_cluster@cluster& (0+255),w,b
 17285  018432  0E0F               	movlw	15
 17286  018434  0100               	movlb	0	; () banked
 17287  018436  5990               	subwfb	(__get_empty_cluster@cluster+1)& (0+255),w,b
 17288  018438  B0D8               	btfsc	status,0,c
 17289  01843A  D037               	goto	l19726
 17290                           
 17291                           ; BSR set to: 0
 17292                           ;fat16.c: 118: {
 17293                           ;fat16.c: 119: fat_sector = cluster>>8;
 17294                           
 17295                           ; BSR set to: 0
 17296                           
 17297                           ; BSR set to: 0
 17298  01843C  0100               	movlb	0	; () banked
 17299  01843E  5190               	movf	(__get_empty_cluster@cluster+1)& (0+255),w,b
 17300  018440  0100               	movlb	0	; () banked
 17301  018442  6F89               	movwf	__get_empty_cluster@fat_sector& (0+255),b
 17302  018444  6B8A               	clrf	(__get_empty_cluster@fat_sector+1)& (0+255),b
 17303                           
 17304                           ; BSR set to: 0
 17305                           ;fat16.c: 120: fat_sector += 2;
 17306  018446  0E02               	movlw	2
 17307  018448  0100               	movlb	0	; () banked
 17308  01844A  2789               	addwf	__get_empty_cluster@fat_sector& (0+255),f,b
 17309  01844C  0E00               	movlw	0
 17310  01844E  238A               	addwfc	(__get_empty_cluster@fat_sector+1)& (0+255),f,b
 17311                           
 17312                           ; BSR set to: 0
 17313                           ;fat16.c: 121: offset = cluster & 0xFF;
 17314  018450  0100               	movlb	0	; () banked
 17315  018452  518F               	movf	__get_empty_cluster@cluster& (0+255),w,b
 17316  018454  0100               	movlb	0	; () banked
 17317  018456  6F8B               	movwf	__get_empty_cluster@offset& (0+255),b
 17318  018458  6B8C               	clrf	(__get_empty_cluster@offset+1)& (0+255),b
 17319                           
 17320                           ; BSR set to: 0
 17321                           ;fat16.c: 122: offset <<= 1;
 17322  01845A  0100               	movlb	0	; () banked
 17323  01845C  90D8               	bcf	status,0,c
 17324  01845E  378B               	rlcf	__get_empty_cluster@offset& (0+255),f,b
 17325  018460  378C               	rlcf	(__get_empty_cluster@offset+1)& (0+255),f,b
 17326                           
 17327                           ; BSR set to: 0
 17328                           ;fat16.c: 123: flash_partial_read(fat_sector, offset, 2, &value);
 17329  018462  C089  F073         	movff	__get_empty_cluster@fat_sector,flash_partial_read@page
 17330  018466  C08A  F074         	movff	__get_empty_cluster@fat_sector+1,flash_partial_read@page+1
 17331  01846A  C08B  F075         	movff	__get_empty_cluster@offset,flash_partial_read@start
 17332  01846E  C08C  F076         	movff	__get_empty_cluster@offset+1,flash_partial_read@start+1
 17333  018472  0E00               	movlw	0
 17334  018474  0100               	movlb	0	; () banked
 17335  018476  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 17336  018478  0E02               	movlw	2
 17337  01847A  6F77               	movwf	flash_partial_read@length& (0+255),b
 17338  01847C  0E8D               	movlw	low __get_empty_cluster@value
 17339  01847E  0100               	movlb	0	; () banked
 17340  018480  6F79               	movwf	flash_partial_read@data& (0+255),b
 17341  018482  0E00               	movlw	high __get_empty_cluster@value
 17342  018484  0100               	movlb	0	; () banked
 17343  018486  6F7A               	movwf	(flash_partial_read@data+1)& (0+255),b
 17344  018488  EC0D  F0BF         	call	_flash_partial_read	;wreg free
 17345                           
 17346                           ;fat16.c: 124: if(value==0x0000)
 17347  01848C  0100               	movlb	0	; () banked
 17348  01848E  518D               	movf	__get_empty_cluster@value& (0+255),w,b
 17349  018490  0100               	movlb	0	; () banked
 17350  018492  118E               	iorwf	(__get_empty_cluster@value+1)& (0+255),w,b
 17351  018494  A4D8               	btfss	status,2,c
 17352  018496  D005               	goto	l19722
 17353                           
 17354                           ; BSR set to: 0
 17355                           ;fat16.c: 125: {
 17356                           ;fat16.c: 126: return cluster;
 17357  018498  C08F  F087         	movff	__get_empty_cluster@cluster,?__get_empty_cluster
 17358  01849C  C090  F088         	movff	__get_empty_cluster@cluster+1,?__get_empty_cluster+1
 17359  0184A0  0012               	return	
 17360  0184A2                     l19722:
 17361                           
 17362                           ; BSR set to: 0
 17363  0184A2  0100               	movlb	0	; () banked
 17364  0184A4  4B8F               	infsnz	__get_empty_cluster@cluster& (0+255),f,b
 17365  0184A6  2B90               	incf	(__get_empty_cluster@cluster+1)& (0+255),f,b
 17366  0184A8  D7C1               	goto	l19704
 17367  0184AA                     l19726:
 17368                           
 17369                           ; BSR set to: 0
 17370                           ;fat16.c: 127: }
 17371                           ;fat16.c: 128: }
 17372                           ;fat16.c: 129: return 0x0000;
 17373  0184AA  0E00               	movlw	0
 17374  0184AC  0100               	movlb	0	; () banked
 17375  0184AE  6F88               	movwf	(?__get_empty_cluster+1)& (0+255),b
 17376  0184B0  0E00               	movlw	0
 17377  0184B2  6F87               	movwf	?__get_empty_cluster& (0+255),b
 17378  0184B4  0012               	return	
 17379  0184B6                     __end_of__get_empty_cluster:
 17380                           	opt stack 0
 17381                           tblptru	equ	0xFF8
 17382                           tblptrh	equ	0xFF7
 17383                           tblptrl	equ	0xFF6
 17384                           tablat	equ	0xFF5
 17385                           prodh	equ	0xFF4
 17386                           prodl	equ	0xFF3
 17387                           intcon	equ	0xFF2
 17388                           intcon2	equ	0xFF1
 17389                           intcon3	equ	0xFF0
 17390                           postinc0	equ	0xFEE
 17391                           wreg	equ	0xFE8
 17392                           postinc1	equ	0xFE6
 17393                           postdec1	equ	0xFE5
 17394                           plusw1	equ	0xFE3
 17395                           fsr1h	equ	0xFE2
 17396                           fsr1l	equ	0xFE1
 17397                           indf2	equ	0xFDF
 17398                           postinc2	equ	0xFDE
 17399                           postdec2	equ	0xFDD
 17400                           plusw2	equ	0xFDB
 17401                           fsr2h	equ	0xFDA
 17402                           fsr2l	equ	0xFD9
 17403                           status	equ	0xFD8
 17404                           
 17405 ;; *************** function _log_get_number_of_samples *****************
 17406 ;; Defined at:
 17407 ;;		line 169 in file "log.c"
 17408 ;; Parameters:    Size  Location     Type
 17409 ;;		None
 17410 ;; Auto vars:     Size  Location     Type
 17411 ;;		None
 17412 ;; Return value:  Size  Location     Type
 17413 ;;                  2    0[BANK0 ] unsigned int 
 17414 ;; Registers used:
 17415 ;;		None
 17416 ;; Tracked objects:
 17417 ;;		On entry : 0/0
 17418 ;;		On exit  : 0/0
 17419 ;;		Unchanged: 0/0
 17420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17421 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17424 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17425 ;;Total ram usage:        2 bytes
 17426 ;; Hardware stack levels used:    1
 17427 ;; Hardware stack levels required when called:   10
 17428 ;; This function calls:
 17429 ;;		Nothing
 17430 ;; This function is called by:
 17431 ;;		_main
 17432 ;; This function uses a non-reentrant model
 17433 ;;
 17434                           
 17435                           	psect	text78
 17436  01AB7A                     __ptext78:
 17437                           	opt stack 0
 17438  01AB7A                     _log_get_number_of_samples:
 17439                           	opt stack 20
 17440                           
 17441                           ;log.c: 171: return averageCount;
 17442                           
 17443                           ; BSR set to: 0
 17444                           ;incstack = 0
 17445  01AB7A  C016  F060         	movff	_averageCount,?_log_get_number_of_samples
 17446  01AB7E  C017  F061         	movff	_averageCount+1,?_log_get_number_of_samples+1
 17447  01AB82  0012               	return		;funcret
 17448  01AB84                     __end_of_log_get_number_of_samples:
 17449                           	opt stack 0
 17450                           tblptru	equ	0xFF8
 17451                           tblptrh	equ	0xFF7
 17452                           tblptrl	equ	0xFF6
 17453                           tablat	equ	0xFF5
 17454                           prodh	equ	0xFF4
 17455                           prodl	equ	0xFF3
 17456                           intcon	equ	0xFF2
 17457                           intcon2	equ	0xFF1
 17458                           intcon3	equ	0xFF0
 17459                           postinc0	equ	0xFEE
 17460                           wreg	equ	0xFE8
 17461                           postinc1	equ	0xFE6
 17462                           postdec1	equ	0xFE5
 17463                           plusw1	equ	0xFE3
 17464                           fsr1h	equ	0xFE2
 17465                           fsr1l	equ	0xFE1
 17466                           indf2	equ	0xFDF
 17467                           postinc2	equ	0xFDE
 17468                           postdec2	equ	0xFDD
 17469                           plusw2	equ	0xFDB
 17470                           fsr2h	equ	0xFDA
 17471                           fsr2l	equ	0xFD9
 17472                           status	equ	0xFD8
 17473                           
 17474 ;; *************** function _log_collect_data *****************
 17475 ;; Defined at:
 17476 ;;		line 114 in file "log.c"
 17477 ;; Parameters:    Size  Location     Type
 17478 ;;		None
 17479 ;; Auto vars:     Size  Location     Type
 17480 ;;  temp            2   24[BANK0 ] unsigned int 
 17481 ;; Return value:  Size  Location     Type
 17482 ;;                  1    wreg      void 
 17483 ;; Registers used:
 17484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17485 ;; Tracked objects:
 17486 ;;		On entry : 0/0
 17487 ;;		On exit  : 0/0
 17488 ;;		Unchanged: 0/0
 17489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17491 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17492 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17493 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17494 ;;Total ram usage:        6 bytes
 17495 ;; Hardware stack levels used:    1
 17496 ;; Hardware stack levels required when called:   12
 17497 ;; This function calls:
 17498 ;;		__get_input_power
 17499 ;;		__get_output_power
 17500 ;;		_buck_get_mode
 17501 ;;		_rtcc_get_seconds_decimal
 17502 ;;		_system_output_is_on
 17503 ;; This function is called by:
 17504 ;;		_main
 17505 ;; This function uses a non-reentrant model
 17506 ;;
 17507                           
 17508                           	psect	text79
 17509  012D78                     __ptext79:
 17510                           	opt stack 0
 17511  012D78                     _log_collect_data:
 17512                           	opt stack 18
 17513                           
 17514                           ;log.c: 116: uint16_t temp;
 17515                           ;log.c: 119: temp = rtcc_get_seconds_decimal();
 17516                           
 17517                           ;incstack = 0
 17518  012D78  EC82  F0D5         	call	_rtcc_get_seconds_decimal	;wreg free
 17519  012D7C  0100               	movlb	0	; () banked
 17520  012D7E  6F74               	movwf	??_log_collect_data& (0+255),b
 17521  012D80  0100               	movlb	0	; () banked
 17522  012D82  5174               	movf	??_log_collect_data& (0+255),w,b
 17523  012D84  0100               	movlb	0	; () banked
 17524  012D86  6F78               	movwf	log_collect_data@temp& (0+255),b
 17525  012D88  6B79               	clrf	(log_collect_data@temp+1)& (0+255),b
 17526                           
 17527                           ; BSR set to: 0
 17528                           ;log.c: 120: if(lastSecond==temp)
 17529  012D8A  0101               	movlb	1	; () banked
 17530  012D8C  51EF               	movf	_lastSecond& (0+255),w,b
 17531  012D8E  0100               	movlb	0	; () banked
 17532  012D90  6F74               	movwf	??_log_collect_data& (0+255),b
 17533  012D92  6B75               	clrf	(??_log_collect_data+1)& (0+255),b
 17534  012D94  0100               	movlb	0	; () banked
 17535  012D96  5178               	movf	log_collect_data@temp& (0+255),w,b
 17536  012D98  0100               	movlb	0	; () banked
 17537  012D9A  1974               	xorwf	??_log_collect_data& (0+255),w,b
 17538  012D9C  E106               	bnz	l3280
 17539  012D9E  0100               	movlb	0	; () banked
 17540  012DA0  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 17541  012DA2  0100               	movlb	0	; () banked
 17542  012DA4  1975               	xorwf	(??_log_collect_data+1)& (0+255),w,b
 17543  012DA6  B4D8               	btfsc	status,2,c
 17544  012DA8  0012               	return	
 17545  012DAA                     l3280:
 17546                           
 17547                           ; BSR set to: 0
 17548                           ;log.c: 123: }
 17549                           ;log.c: 126: lastSecond = (uint8_t) temp;
 17550  012DAA  C078  F1EF         	movff	log_collect_data@temp,_lastSecond
 17551                           
 17552                           ; BSR set to: 0
 17553                           ;log.c: 129: inputVoltageSum += os.input_voltage;
 17554  012DAE  C212  F074         	movff	_os+18,??_log_collect_data	;volatile
 17555  012DB2  C213  F075         	movff	_os+19,??_log_collect_data+1	;volatile
 17556  012DB6  0E00               	movlw	0
 17557  012DB8  0100               	movlb	0	; () banked
 17558  012DBA  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17559  012DBC  0EFF               	movlw	255
 17560  012DBE  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17561  012DC0  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17562  012DC2  0100               	movlb	0	; () banked
 17563  012DC4  5174               	movf	??_log_collect_data& (0+255),w,b
 17564  012DC6  0102               	movlb	2	; () banked
 17565  012DC8  279A               	addwf	_inputVoltageSum& (0+255),f,b
 17566  012DCA  0100               	movlb	0	; () banked
 17567  012DCC  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17568  012DCE  0102               	movlb	2	; () banked
 17569  012DD0  239B               	addwfc	(_inputVoltageSum+1)& (0+255),f,b
 17570  012DD2  0100               	movlb	0	; () banked
 17571  012DD4  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17572  012DD6  0102               	movlb	2	; () banked
 17573  012DD8  239C               	addwfc	(_inputVoltageSum+2)& (0+255),f,b
 17574  012DDA  0100               	movlb	0	; () banked
 17575  012DDC  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17576  012DDE  0102               	movlb	2	; () banked
 17577  012DE0  239D               	addwfc	(_inputVoltageSum+3)& (0+255),f,b
 17578                           
 17579                           ;log.c: 130: inputCurrentSum += os.input_current;
 17580  012DE2  C21D  F074         	movff	_os+29,??_log_collect_data	;volatile
 17581  012DE6  C21E  F075         	movff	_os+30,??_log_collect_data+1	;volatile
 17582  012DEA  0E00               	movlw	0
 17583  012DEC  0100               	movlb	0	; () banked
 17584  012DEE  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17585  012DF0  0EFF               	movlw	255
 17586  012DF2  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17587  012DF4  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17588  012DF6  0100               	movlb	0	; () banked
 17589  012DF8  5174               	movf	??_log_collect_data& (0+255),w,b
 17590  012DFA  0102               	movlb	2	; () banked
 17591  012DFC  2796               	addwf	_inputCurrentSum& (0+255),f,b
 17592  012DFE  0100               	movlb	0	; () banked
 17593  012E00  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17594  012E02  0102               	movlb	2	; () banked
 17595  012E04  2397               	addwfc	(_inputCurrentSum+1)& (0+255),f,b
 17596  012E06  0100               	movlb	0	; () banked
 17597  012E08  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17598  012E0A  0102               	movlb	2	; () banked
 17599  012E0C  2398               	addwfc	(_inputCurrentSum+2)& (0+255),f,b
 17600  012E0E  0100               	movlb	0	; () banked
 17601  012E10  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17602  012E12  0102               	movlb	2	; () banked
 17603  012E14  2399               	addwfc	(_inputCurrentSum+3)& (0+255),f,b
 17604                           
 17605                           ;log.c: 131: outputVoltageSum += os.output_voltage;
 17606  012E16  C227  F074         	movff	_os+39,??_log_collect_data	;volatile
 17607  012E1A  C228  F075         	movff	_os+40,??_log_collect_data+1	;volatile
 17608  012E1E  0E00               	movlw	0
 17609  012E20  0100               	movlb	0	; () banked
 17610  012E22  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17611  012E24  0EFF               	movlw	255
 17612  012E26  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17613  012E28  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17614  012E2A  0100               	movlb	0	; () banked
 17615  012E2C  5174               	movf	??_log_collect_data& (0+255),w,b
 17616  012E2E  0102               	movlb	2	; () banked
 17617  012E30  2792               	addwf	_outputVoltageSum& (0+255),f,b
 17618  012E32  0100               	movlb	0	; () banked
 17619  012E34  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17620  012E36  0102               	movlb	2	; () banked
 17621  012E38  2393               	addwfc	(_outputVoltageSum+1)& (0+255),f,b
 17622  012E3A  0100               	movlb	0	; () banked
 17623  012E3C  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17624  012E3E  0102               	movlb	2	; () banked
 17625  012E40  2394               	addwfc	(_outputVoltageSum+2)& (0+255),f,b
 17626  012E42  0100               	movlb	0	; () banked
 17627  012E44  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17628  012E46  0102               	movlb	2	; () banked
 17629  012E48  2395               	addwfc	(_outputVoltageSum+3)& (0+255),f,b
 17630                           
 17631                           ;log.c: 132: outputCurrentSum += os.output_current;
 17632  012E4A  C232  F074         	movff	_os+50,??_log_collect_data	;volatile
 17633  012E4E  C233  F075         	movff	_os+51,??_log_collect_data+1	;volatile
 17634  012E52  0E00               	movlw	0
 17635  012E54  0100               	movlb	0	; () banked
 17636  012E56  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17637  012E58  0EFF               	movlw	255
 17638  012E5A  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17639  012E5C  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17640  012E5E  0100               	movlb	0	; () banked
 17641  012E60  5174               	movf	??_log_collect_data& (0+255),w,b
 17642  012E62  0102               	movlb	2	; () banked
 17643  012E64  278E               	addwf	_outputCurrentSum& (0+255),f,b
 17644  012E66  0100               	movlb	0	; () banked
 17645  012E68  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17646  012E6A  0102               	movlb	2	; () banked
 17647  012E6C  238F               	addwfc	(_outputCurrentSum+1)& (0+255),f,b
 17648  012E6E  0100               	movlb	0	; () banked
 17649  012E70  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17650  012E72  0102               	movlb	2	; () banked
 17651  012E74  2390               	addwfc	(_outputCurrentSum+2)& (0+255),f,b
 17652  012E76  0100               	movlb	0	; () banked
 17653  012E78  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17654  012E7A  0102               	movlb	2	; () banked
 17655  012E7C  2391               	addwfc	(_outputCurrentSum+3)& (0+255),f,b
 17656                           
 17657                           ; BSR set to: 2
 17658                           ;log.c: 133: temp = _get_input_power();
 17659  012E7E  EC4A  F0C5         	call	__get_input_power	;wreg free
 17660  012E82  C06E  F078         	movff	?__get_input_power,log_collect_data@temp
 17661  012E86  C06F  F079         	movff	?__get_input_power+1,log_collect_data@temp+1
 17662                           
 17663                           ;log.c: 134: inputPowerSum += temp>>1;
 17664  012E8A  90D8               	bcf	status,0,c
 17665  012E8C  0100               	movlb	0	; () banked
 17666  012E8E  3179               	rrcf	(log_collect_data@temp+1)& (0+255),w,b
 17667  012E90  0100               	movlb	0	; () banked
 17668  012E92  6F75               	movwf	(??_log_collect_data+1)& (0+255),b
 17669  012E94  0100               	movlb	0	; () banked
 17670  012E96  3178               	rrcf	log_collect_data@temp& (0+255),w,b
 17671  012E98  0100               	movlb	0	; () banked
 17672  012E9A  6F74               	movwf	??_log_collect_data& (0+255),b
 17673  012E9C  0100               	movlb	0	; () banked
 17674  012E9E  5174               	movf	??_log_collect_data& (0+255),w,b
 17675  012EA0  0102               	movlb	2	; () banked
 17676  012EA2  278A               	addwf	_inputPowerSum& (0+255),f,b
 17677  012EA4  0100               	movlb	0	; () banked
 17678  012EA6  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17679  012EA8  0102               	movlb	2	; () banked
 17680  012EAA  238B               	addwfc	(_inputPowerSum+1)& (0+255),f,b
 17681  012EAC  0E00               	movlw	0
 17682  012EAE  0102               	movlb	2	; () banked
 17683  012EB0  238C               	addwfc	(_inputPowerSum+2)& (0+255),f,b
 17684  012EB2  0E00               	movlw	0
 17685  012EB4  0102               	movlb	2	; () banked
 17686  012EB6  238D               	addwfc	(_inputPowerSum+3)& (0+255),f,b
 17687                           
 17688                           ; BSR set to: 2
 17689                           ;log.c: 135: inputCapacitySum += temp;
 17690  012EB8  0100               	movlb	0	; () banked
 17691  012EBA  5178               	movf	log_collect_data@temp& (0+255),w,b
 17692  012EBC  0102               	movlb	2	; () banked
 17693  012EBE  2782               	addwf	_inputCapacitySum& (0+255),f,b
 17694  012EC0  0100               	movlb	0	; () banked
 17695  012EC2  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 17696  012EC4  0102               	movlb	2	; () banked
 17697  012EC6  2383               	addwfc	(_inputCapacitySum+1)& (0+255),f,b
 17698  012EC8  0E00               	movlw	0
 17699  012ECA  0102               	movlb	2	; () banked
 17700  012ECC  2384               	addwfc	(_inputCapacitySum+2)& (0+255),f,b
 17701  012ECE  0E00               	movlw	0
 17702  012ED0  0102               	movlb	2	; () banked
 17703  012ED2  2385               	addwfc	(_inputCapacitySum+3)& (0+255),f,b
 17704                           
 17705                           ; BSR set to: 2
 17706                           ;log.c: 136: temp = _get_output_power();
 17707  012ED4  EC08  F0C5         	call	__get_output_power	;wreg free
 17708  012ED8  C06D  F078         	movff	?__get_output_power,log_collect_data@temp
 17709  012EDC  C06E  F079         	movff	?__get_output_power+1,log_collect_data@temp+1
 17710                           
 17711                           ;log.c: 137: outputPowerSum += temp>>1;
 17712  012EE0  90D8               	bcf	status,0,c
 17713  012EE2  0100               	movlb	0	; () banked
 17714  012EE4  3179               	rrcf	(log_collect_data@temp+1)& (0+255),w,b
 17715  012EE6  0100               	movlb	0	; () banked
 17716  012EE8  6F75               	movwf	(??_log_collect_data+1)& (0+255),b
 17717  012EEA  0100               	movlb	0	; () banked
 17718  012EEC  3178               	rrcf	log_collect_data@temp& (0+255),w,b
 17719  012EEE  0100               	movlb	0	; () banked
 17720  012EF0  6F74               	movwf	??_log_collect_data& (0+255),b
 17721  012EF2  0100               	movlb	0	; () banked
 17722  012EF4  5174               	movf	??_log_collect_data& (0+255),w,b
 17723  012EF6  0102               	movlb	2	; () banked
 17724  012EF8  2786               	addwf	_outputPowerSum& (0+255),f,b
 17725  012EFA  0100               	movlb	0	; () banked
 17726  012EFC  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17727  012EFE  0102               	movlb	2	; () banked
 17728  012F00  2387               	addwfc	(_outputPowerSum+1)& (0+255),f,b
 17729  012F02  0E00               	movlw	0
 17730  012F04  0102               	movlb	2	; () banked
 17731  012F06  2388               	addwfc	(_outputPowerSum+2)& (0+255),f,b
 17732  012F08  0E00               	movlw	0
 17733  012F0A  0102               	movlb	2	; () banked
 17734  012F0C  2389               	addwfc	(_outputPowerSum+3)& (0+255),f,b
 17735                           
 17736                           ; BSR set to: 2
 17737                           ;log.c: 138: outputCapacitySum += temp;
 17738  012F0E  0100               	movlb	0	; () banked
 17739  012F10  5178               	movf	log_collect_data@temp& (0+255),w,b
 17740  012F12  0102               	movlb	2	; () banked
 17741  012F14  277E               	addwf	_outputCapacitySum& (0+255),f,b
 17742  012F16  0100               	movlb	0	; () banked
 17743  012F18  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 17744  012F1A  0102               	movlb	2	; () banked
 17745  012F1C  237F               	addwfc	(_outputCapacitySum+1)& (0+255),f,b
 17746  012F1E  0E00               	movlw	0
 17747  012F20  0102               	movlb	2	; () banked
 17748  012F22  2380               	addwfc	(_outputCapacitySum+2)& (0+255),f,b
 17749  012F24  0E00               	movlw	0
 17750  012F26  0102               	movlb	2	; () banked
 17751  012F28  2381               	addwfc	(_outputCapacitySum+3)& (0+255),f,b
 17752                           
 17753                           ;log.c: 139: temperatureOnboardSum += os.temperature_onboard;
 17754  012F2A  C236  F074         	movff	_os+54,??_log_collect_data	;volatile
 17755  012F2E  C237  F075         	movff	_os+55,??_log_collect_data+1	;volatile
 17756  012F32  0E00               	movlw	0
 17757  012F34  0100               	movlb	0	; () banked
 17758  012F36  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17759  012F38  0EFF               	movlw	255
 17760  012F3A  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17761  012F3C  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17762  012F3E  0100               	movlb	0	; () banked
 17763  012F40  5174               	movf	??_log_collect_data& (0+255),w,b
 17764  012F42  0102               	movlb	2	; () banked
 17765  012F44  277A               	addwf	_temperatureOnboardSum& (0+255),f,b
 17766  012F46  0100               	movlb	0	; () banked
 17767  012F48  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17768  012F4A  0102               	movlb	2	; () banked
 17769  012F4C  237B               	addwfc	(_temperatureOnboardSum+1)& (0+255),f,b
 17770  012F4E  0100               	movlb	0	; () banked
 17771  012F50  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17772  012F52  0102               	movlb	2	; () banked
 17773  012F54  237C               	addwfc	(_temperatureOnboardSum+2)& (0+255),f,b
 17774  012F56  0100               	movlb	0	; () banked
 17775  012F58  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17776  012F5A  0102               	movlb	2	; () banked
 17777  012F5C  237D               	addwfc	(_temperatureOnboardSum+3)& (0+255),f,b
 17778                           
 17779                           ;log.c: 140: temperatureExternal1Sum += os.temperature_external_1;
 17780  012F5E  C23A  F074         	movff	_os+58,??_log_collect_data	;volatile
 17781  012F62  C23B  F075         	movff	_os+59,??_log_collect_data+1	;volatile
 17782  012F66  0E00               	movlw	0
 17783  012F68  0100               	movlb	0	; () banked
 17784  012F6A  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17785  012F6C  0EFF               	movlw	255
 17786  012F6E  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17787  012F70  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17788  012F72  0100               	movlb	0	; () banked
 17789  012F74  5174               	movf	??_log_collect_data& (0+255),w,b
 17790  012F76  0102               	movlb	2	; () banked
 17791  012F78  2776               	addwf	_temperatureExternal1Sum& (0+255),f,b
 17792  012F7A  0100               	movlb	0	; () banked
 17793  012F7C  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17794  012F7E  0102               	movlb	2	; () banked
 17795  012F80  2377               	addwfc	(_temperatureExternal1Sum+1)& (0+255),f,b
 17796  012F82  0100               	movlb	0	; () banked
 17797  012F84  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17798  012F86  0102               	movlb	2	; () banked
 17799  012F88  2378               	addwfc	(_temperatureExternal1Sum+2)& (0+255),f,b
 17800  012F8A  0100               	movlb	0	; () banked
 17801  012F8C  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17802  012F8E  0102               	movlb	2	; () banked
 17803  012F90  2379               	addwfc	(_temperatureExternal1Sum+3)& (0+255),f,b
 17804                           
 17805                           ;log.c: 141: temperatureExternal2Sum += os.temperature_external_2;
 17806  012F92  C23E  F074         	movff	_os+62,??_log_collect_data	;volatile
 17807  012F96  C23F  F075         	movff	_os+63,??_log_collect_data+1	;volatile
 17808  012F9A  0E00               	movlw	0
 17809  012F9C  0100               	movlb	0	; () banked
 17810  012F9E  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 17811  012FA0  0EFF               	movlw	255
 17812  012FA2  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 17813  012FA4  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 17814  012FA6  0100               	movlb	0	; () banked
 17815  012FA8  5174               	movf	??_log_collect_data& (0+255),w,b
 17816  012FAA  0102               	movlb	2	; () banked
 17817  012FAC  2772               	addwf	_temperatureExternal2Sum& (0+255),f,b
 17818  012FAE  0100               	movlb	0	; () banked
 17819  012FB0  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 17820  012FB2  0102               	movlb	2	; () banked
 17821  012FB4  2373               	addwfc	(_temperatureExternal2Sum+1)& (0+255),f,b
 17822  012FB6  0100               	movlb	0	; () banked
 17823  012FB8  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 17824  012FBA  0102               	movlb	2	; () banked
 17825  012FBC  2374               	addwfc	(_temperatureExternal2Sum+2)& (0+255),f,b
 17826  012FBE  0100               	movlb	0	; () banked
 17827  012FC0  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 17828  012FC2  0102               	movlb	2	; () banked
 17829  012FC4  2375               	addwfc	(_temperatureExternal2Sum+3)& (0+255),f,b
 17830                           
 17831                           ; BSR set to: 2
 17832                           ;log.c: 142: if(buck_get_mode()&0b01111111)
 17833  012FC6  ECEF  F0D5         	call	_buck_get_mode	;wreg free
 17834  012FCA  0100               	movlb	0	; () banked
 17835  012FCC  6F74               	movwf	??_log_collect_data& (0+255),b
 17836  012FCE  0E7F               	movlw	127
 17837  012FD0  0100               	movlb	0	; () banked
 17838  012FD2  1774               	andwf	??_log_collect_data& (0+255),f,b
 17839  012FD4  B4D8               	btfsc	status,2,c
 17840  012FD6  D003               	goto	l22390
 17841                           
 17842                           ; BSR set to: 0
 17843                           ;log.c: 143: {
 17844                           ;log.c: 144: ++chargerOnTime;
 17845  012FD8  0102               	movlb	2	; () banked
 17846  012FDA  4BB0               	infsnz	_chargerOnTime& (0+255),f,b
 17847  012FDC  2BB1               	incf	(_chargerOnTime+1)& (0+255),f,b
 17848  012FDE                     l22390:
 17849                           
 17850                           ;log.c: 145: }
 17851                           ;log.c: 146: if(os.boardVoltage==BOARD_VOLTAGE_LOW)
 17852  012FDE  0102               	movlb	2	; () banked
 17853  012FE0  5101               	movf	(_os+1)& (0+255),w,b	;volatile
 17854  012FE2  A4D8               	btfss	status,2,c
 17855  012FE4  D003               	goto	l22394
 17856                           
 17857                           ; BSR set to: 2
 17858                           ;log.c: 147: {
 17859                           ;log.c: 148: ++lowPowerTime;
 17860  012FE6  0102               	movlb	2	; () banked
 17861  012FE8  4BAE               	infsnz	_lowPowerTime& (0+255),f,b
 17862  012FEA  2BAF               	incf	(_lowPowerTime+1)& (0+255),f,b
 17863  012FEC                     l22394:
 17864                           
 17865                           ; BSR set to: 2
 17866                           ;log.c: 149: }
 17867                           ;log.c: 150: if(system_output_is_on(OUTPUT_1))
 17868  012FEC  0E01               	movlw	1
 17869  012FEE  EC71  F0D4         	call	_system_output_is_on
 17870  012FF2  0900               	iorlw	0
 17871  012FF4  B4D8               	btfsc	status,2,c
 17872  012FF6  D002               	goto	l22398
 17873                           
 17874                           ;log.c: 151: status |= 0b10000000;
 17875  012FF8  0101               	movlb	1	; () banked
 17876  012FFA  8FF0               	bsf	_status& (0+255),7,b
 17877  012FFC                     l22398:
 17878                           
 17879                           ;log.c: 152: if(system_output_is_on(OUTPUT_2))
 17880  012FFC  0E02               	movlw	2
 17881  012FFE  EC71  F0D4         	call	_system_output_is_on
 17882  013002  0900               	iorlw	0
 17883  013004  B4D8               	btfsc	status,2,c
 17884  013006  D002               	goto	l22402
 17885                           
 17886                           ;log.c: 153: status |= 0b01000000;
 17887  013008  0101               	movlb	1	; () banked
 17888  01300A  8DF0               	bsf	_status& (0+255),6,b
 17889  01300C                     l22402:
 17890                           
 17891                           ;log.c: 154: if(system_output_is_on(OUTPUT_3))
 17892  01300C  0E04               	movlw	4
 17893  01300E  EC71  F0D4         	call	_system_output_is_on
 17894  013012  0900               	iorlw	0
 17895  013014  B4D8               	btfsc	status,2,c
 17896  013016  D002               	goto	l22406
 17897                           
 17898                           ;log.c: 155: status |= 0b00100000;
 17899  013018  0101               	movlb	1	; () banked
 17900  01301A  8BF0               	bsf	_status& (0+255),5,b
 17901  01301C                     l22406:
 17902                           
 17903                           ;log.c: 156: if(system_output_is_on(OUTPUT_4))
 17904  01301C  0E08               	movlw	8
 17905  01301E  EC71  F0D4         	call	_system_output_is_on
 17906  013022  0900               	iorlw	0
 17907  013024  B4D8               	btfsc	status,2,c
 17908  013026  D002               	goto	l22410
 17909                           
 17910                           ;log.c: 157: status |= 0b00010000;
 17911  013028  0101               	movlb	1	; () banked
 17912  01302A  89F0               	bsf	_status& (0+255),4,b
 17913  01302C                     l22410:
 17914                           
 17915                           ;log.c: 158: if(system_output_is_on(OUTPUT_USB))
 17916  01302C  0E10               	movlw	16
 17917  01302E  EC71  F0D4         	call	_system_output_is_on
 17918  013032  0900               	iorlw	0
 17919  013034  B4D8               	btfsc	status,2,c
 17920  013036  D002               	goto	l22414
 17921                           
 17922                           ;log.c: 159: status |= 0b00001000;
 17923  013038  0101               	movlb	1	; () banked
 17924  01303A  87F0               	bsf	_status& (0+255),3,b
 17925  01303C                     l22414:
 17926                           
 17927                           ;log.c: 160: if(system_output_is_on(OUTPUT_FAN))
 17928  01303C  0E20               	movlw	32
 17929  01303E  EC71  F0D4         	call	_system_output_is_on
 17930  013042  0900               	iorlw	0
 17931  013044  B4D8               	btfsc	status,2,c
 17932  013046  D002               	goto	l3289
 17933                           
 17934                           ;log.c: 161: status |= 0b00000100;
 17935  013048  0101               	movlb	1	; () banked
 17936  01304A  85F0               	bsf	_status& (0+255),2,b
 17937  01304C                     l3289:
 17938                           
 17939                           ;log.c: 163: status |= 0b00000010;
 17940  01304C  0101               	movlb	1	; () banked
 17941  01304E  83F0               	bsf	_status& (0+255),1,b
 17942                           
 17943                           ;log.c: 164: ++averageCount;
 17944  013050  4A16               	infsnz	_averageCount,f,c
 17945  013052  2A17               	incf	_averageCount+1,f,c
 17946  013054  0012               	return		;funcret
 17947  013056                     __end_of_log_collect_data:
 17948                           	opt stack 0
 17949                           tblptru	equ	0xFF8
 17950                           tblptrh	equ	0xFF7
 17951                           tblptrl	equ	0xFF6
 17952                           tablat	equ	0xFF5
 17953                           prodh	equ	0xFF4
 17954                           prodl	equ	0xFF3
 17955                           intcon	equ	0xFF2
 17956                           intcon2	equ	0xFF1
 17957                           intcon3	equ	0xFF0
 17958                           postinc0	equ	0xFEE
 17959                           wreg	equ	0xFE8
 17960                           postinc1	equ	0xFE6
 17961                           postdec1	equ	0xFE5
 17962                           plusw1	equ	0xFE3
 17963                           fsr1h	equ	0xFE2
 17964                           fsr1l	equ	0xFE1
 17965                           indf2	equ	0xFDF
 17966                           postinc2	equ	0xFDE
 17967                           postdec2	equ	0xFDD
 17968                           plusw2	equ	0xFDB
 17969                           fsr2h	equ	0xFDA
 17970                           fsr2l	equ	0xFD9
 17971                           status	equ	0xFD8
 17972                           
 17973 ;; *************** function _system_output_is_on *****************
 17974 ;; Defined at:
 17975 ;;		line 491 in file "os.c"
 17976 ;; Parameters:    Size  Location     Type
 17977 ;;  output          1    wreg     enum E8129
 17978 ;; Auto vars:     Size  Location     Type
 17979 ;;  output          1    0[BANK0 ] enum E8129
 17980 ;; Return value:  Size  Location     Type
 17981 ;;                  1    wreg      unsigned char 
 17982 ;; Registers used:
 17983 ;;		wreg, status,2, status,0
 17984 ;; Tracked objects:
 17985 ;;		On entry : 0/0
 17986 ;;		On exit  : 0/0
 17987 ;;		Unchanged: 0/0
 17988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17990 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17992 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17993 ;;Total ram usage:        1 bytes
 17994 ;; Hardware stack levels used:    1
 17995 ;; Hardware stack levels required when called:   10
 17996 ;; This function calls:
 17997 ;;		Nothing
 17998 ;; This function is called by:
 17999 ;;		_system_output_toggle
 18000 ;;		_log_collect_data
 18001 ;; This function uses a non-reentrant model
 18002 ;;
 18003                           
 18004                           	psect	text80
 18005  01A8E2                     __ptext80:
 18006                           	opt stack 0
 18007  01A8E2                     _system_output_is_on:
 18008                           	opt stack 17
 18009                           
 18010                           ;incstack = 0
 18011                           ;system_output_is_on@output stored from wreg
 18012  01A8E2  0100               	movlb	0	; () banked
 18013  01A8E4  6F60               	movwf	system_output_is_on@output& (0+255),b
 18014                           
 18015                           ;os.c: 493: if(os.outputs&output)
 18016  01A8E6  0102               	movlb	2	; () banked
 18017  01A8E8  5105               	movf	(_os+5)& (0+255),w,b	;volatile
 18018  01A8EA  0100               	movlb	0	; () banked
 18019  01A8EC  1560               	andwf	system_output_is_on@output& (0+255),w,b
 18020  01A8EE  0900               	iorlw	0
 18021  01A8F0  B4D8               	btfsc	status,2,c
 18022  01A8F2  D002               	goto	l18836
 18023                           
 18024                           ; BSR set to: 0
 18025                           ;os.c: 494: return 1;
 18026  01A8F4  0E01               	movlw	1
 18027                           
 18028                           ; BSR set to: 0
 18029                           
 18030                           ; BSR set to: 0
 18031  01A8F6  0012               	return	
 18032  01A8F8                     l18836:
 18033                           
 18034                           ; BSR set to: 0
 18035                           ;os.c: 495: else
 18036                           ;os.c: 496: return 0;
 18037  01A8F8  0E00               	movlw	0
 18038                           
 18039                           ; BSR set to: 0
 18040  01A8FA  0012               	return	
 18041  01A8FC                     __end_of_system_output_is_on:
 18042                           	opt stack 0
 18043                           tblptru	equ	0xFF8
 18044                           tblptrh	equ	0xFF7
 18045                           tblptrl	equ	0xFF6
 18046                           tablat	equ	0xFF5
 18047                           prodh	equ	0xFF4
 18048                           prodl	equ	0xFF3
 18049                           intcon	equ	0xFF2
 18050                           intcon2	equ	0xFF1
 18051                           intcon3	equ	0xFF0
 18052                           postinc0	equ	0xFEE
 18053                           wreg	equ	0xFE8
 18054                           postinc1	equ	0xFE6
 18055                           postdec1	equ	0xFE5
 18056                           plusw1	equ	0xFE3
 18057                           fsr1h	equ	0xFE2
 18058                           fsr1l	equ	0xFE1
 18059                           indf2	equ	0xFDF
 18060                           postinc2	equ	0xFDE
 18061                           postdec2	equ	0xFDD
 18062                           plusw2	equ	0xFDB
 18063                           fsr2h	equ	0xFDA
 18064                           fsr2l	equ	0xFD9
 18065                           status	equ	0xFD8
 18066                           
 18067 ;; *************** function _rtcc_get_seconds_decimal *****************
 18068 ;; Defined at:
 18069 ;;		line 301 in file "rtcc.c"
 18070 ;; Parameters:    Size  Location     Type
 18071 ;;		None
 18072 ;; Auto vars:     Size  Location     Type
 18073 ;;  bcd_seconds     1    3[BANK0 ] unsigned char 
 18074 ;; Return value:  Size  Location     Type
 18075 ;;                  1    wreg      unsigned char 
 18076 ;; Registers used:
 18077 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18078 ;; Tracked objects:
 18079 ;;		On entry : 0/0
 18080 ;;		On exit  : 0/0
 18081 ;;		Unchanged: 0/0
 18082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18084 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18086 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18087 ;;Total ram usage:        1 bytes
 18088 ;; Hardware stack levels used:    1
 18089 ;; Hardware stack levels required when called:   11
 18090 ;; This function calls:
 18091 ;;		__rtcc_bdc_to_decimal
 18092 ;;		_rtcc_get_seconds
 18093 ;; This function is called by:
 18094 ;;		__get_time
 18095 ;;		__get_dateTime
 18096 ;;		_log_start_new
 18097 ;;		_log_collect_data
 18098 ;; This function uses a non-reentrant model
 18099 ;;
 18100                           
 18101                           	psect	text81
 18102  01AB04                     __ptext81:
 18103                           	opt stack 0
 18104  01AB04                     _rtcc_get_seconds_decimal:
 18105                           	opt stack 17
 18106                           
 18107                           ;rtcc.c: 303: uint8_t bcd_seconds = rtcc_get_seconds();
 18108                           
 18109                           ; BSR set to: 0
 18110                           ;incstack = 0
 18111  01AB04  EC23  F0D5         	call	_rtcc_get_seconds	;wreg free
 18112  01AB08  0100               	movlb	0	; () banked
 18113  01AB0A  6F63               	movwf	rtcc_get_seconds_decimal@bcd_seconds& (0+255),b
 18114                           
 18115                           ; BSR set to: 0
 18116                           ;rtcc.c: 304: return _rtcc_bdc_to_decimal(bcd_seconds);
 18117  01AB0C  0100               	movlb	0	; () banked
 18118  01AB0E  5163               	movf	rtcc_get_seconds_decimal@bcd_seconds& (0+255),w,b
 18119  01AB10  EC96  F0D3         	call	__rtcc_bdc_to_decimal
 18120  01AB14  0012               	return	
 18121  01AB16                     __end_of_rtcc_get_seconds_decimal:
 18122                           	opt stack 0
 18123                           tblptru	equ	0xFF8
 18124                           tblptrh	equ	0xFF7
 18125                           tblptrl	equ	0xFF6
 18126                           tablat	equ	0xFF5
 18127                           prodh	equ	0xFF4
 18128                           prodl	equ	0xFF3
 18129                           intcon	equ	0xFF2
 18130                           intcon2	equ	0xFF1
 18131                           intcon3	equ	0xFF0
 18132                           postinc0	equ	0xFEE
 18133                           wreg	equ	0xFE8
 18134                           postinc1	equ	0xFE6
 18135                           postdec1	equ	0xFE5
 18136                           plusw1	equ	0xFE3
 18137                           fsr1h	equ	0xFE2
 18138                           fsr1l	equ	0xFE1
 18139                           indf2	equ	0xFDF
 18140                           postinc2	equ	0xFDE
 18141                           postdec2	equ	0xFDD
 18142                           plusw2	equ	0xFDB
 18143                           fsr2h	equ	0xFDA
 18144                           fsr2l	equ	0xFD9
 18145                           status	equ	0xFD8
 18146                           
 18147 ;; *************** function __rtcc_bdc_to_decimal *****************
 18148 ;; Defined at:
 18149 ;;		line 7 in file "rtcc.c"
 18150 ;; Parameters:    Size  Location     Type
 18151 ;;  input           1    wreg     unsigned char 
 18152 ;; Auto vars:     Size  Location     Type
 18153 ;;  input           1    2[BANK0 ] unsigned char 
 18154 ;;  ones            1    1[BANK0 ] unsigned char 
 18155 ;;  tens            1    0[BANK0 ] unsigned char 
 18156 ;; Return value:  Size  Location     Type
 18157 ;;                  1    wreg      unsigned char 
 18158 ;; Registers used:
 18159 ;;		wreg, status,2, status,0, prodl, prodh
 18160 ;; Tracked objects:
 18161 ;;		On entry : 0/0
 18162 ;;		On exit  : 0/0
 18163 ;;		Unchanged: 0/0
 18164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18166 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18168 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18169 ;;Total ram usage:        3 bytes
 18170 ;; Hardware stack levels used:    1
 18171 ;; Hardware stack levels required when called:   10
 18172 ;; This function calls:
 18173 ;;		Nothing
 18174 ;; This function is called by:
 18175 ;;		_rtcc_get_year_decimal
 18176 ;;		_rtcc_get_month_decimal
 18177 ;;		_rtcc_get_day_decimal
 18178 ;;		_rtcc_get_hours_decimal
 18179 ;;		_rtcc_get_minutes_decimal
 18180 ;;		_rtcc_get_seconds_decimal
 18181 ;; This function uses a non-reentrant model
 18182 ;;
 18183                           
 18184                           	psect	text82
 18185  01A72C                     __ptext82:
 18186                           	opt stack 0
 18187  01A72C                     __rtcc_bdc_to_decimal:
 18188                           	opt stack 17
 18189                           
 18190                           ;incstack = 0
 18191                           ;__rtcc_bdc_to_decimal@input stored from wreg
 18192  01A72C  0100               	movlb	0	; () banked
 18193  01A72E  6F62               	movwf	__rtcc_bdc_to_decimal@input& (0+255),b
 18194                           
 18195                           ;rtcc.c: 9: uint8_t tens = (input & 0xF0) >> 4;
 18196  01A730  0100               	movlb	0	; () banked
 18197  01A732  3962               	swapf	__rtcc_bdc_to_decimal@input& (0+255),w,b
 18198  01A734  0B0F               	andlw	15
 18199  01A736  0B0F               	andlw	15
 18200  01A738  0100               	movlb	0	; () banked
 18201  01A73A  6F60               	movwf	__rtcc_bdc_to_decimal@tens& (0+255),b
 18202                           
 18203                           ;rtcc.c: 10: uint8_t ones = input & 0x0F;
 18204  01A73C  0100               	movlb	0	; () banked
 18205  01A73E  5162               	movf	__rtcc_bdc_to_decimal@input& (0+255),w,b
 18206  01A740  0B0F               	andlw	15
 18207  01A742  0100               	movlb	0	; () banked
 18208  01A744  6F61               	movwf	__rtcc_bdc_to_decimal@ones& (0+255),b
 18209                           
 18210                           ; BSR set to: 0
 18211                           ;rtcc.c: 11: return ((10*tens) + ones);
 18212  01A746  0100               	movlb	0	; () banked
 18213  01A748  5160               	movf	__rtcc_bdc_to_decimal@tens& (0+255),w,b
 18214  01A74A  0D0A               	mullw	10
 18215  01A74C  50F3               	movf	prodl,w,c
 18216  01A74E  0100               	movlb	0	; () banked
 18217  01A750  2561               	addwf	__rtcc_bdc_to_decimal@ones& (0+255),w,b
 18218  01A752  0012               	return	
 18219  01A754                     __end_of__rtcc_bdc_to_decimal:
 18220                           	opt stack 0
 18221                           tblptru	equ	0xFF8
 18222                           tblptrh	equ	0xFF7
 18223                           tblptrl	equ	0xFF6
 18224                           tablat	equ	0xFF5
 18225                           prodh	equ	0xFF4
 18226                           prodl	equ	0xFF3
 18227                           intcon	equ	0xFF2
 18228                           intcon2	equ	0xFF1
 18229                           intcon3	equ	0xFF0
 18230                           postinc0	equ	0xFEE
 18231                           wreg	equ	0xFE8
 18232                           postinc1	equ	0xFE6
 18233                           postdec1	equ	0xFE5
 18234                           plusw1	equ	0xFE3
 18235                           fsr1h	equ	0xFE2
 18236                           fsr1l	equ	0xFE1
 18237                           indf2	equ	0xFDF
 18238                           postinc2	equ	0xFDE
 18239                           postdec2	equ	0xFDD
 18240                           plusw2	equ	0xFDB
 18241                           fsr2h	equ	0xFDA
 18242                           fsr2l	equ	0xFD9
 18243                           status	equ	0xFD8
 18244                           
 18245 ;; *************** function __get_output_power *****************
 18246 ;; Defined at:
 18247 ;;		line 99 in file "log.c"
 18248 ;; Parameters:    Size  Location     Type
 18249 ;;		None
 18250 ;; Auto vars:     Size  Location     Type
 18251 ;;  pwr             4   15[BANK0 ] unsigned long 
 18252 ;; Return value:  Size  Location     Type
 18253 ;;                  2   13[BANK0 ] unsigned int 
 18254 ;; Registers used:
 18255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18256 ;; Tracked objects:
 18257 ;;		On entry : 0/0
 18258 ;;		On exit  : 0/0
 18259 ;;		Unchanged: 0/0
 18260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18261 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18262 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18264 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18265 ;;Total ram usage:        6 bytes
 18266 ;; Hardware stack levels used:    1
 18267 ;; Hardware stack levels required when called:   11
 18268 ;; This function calls:
 18269 ;;		___lldiv
 18270 ;;		___lmul
 18271 ;; This function is called by:
 18272 ;;		_log_collect_data
 18273 ;; This function uses a non-reentrant model
 18274 ;;
 18275                           
 18276                           	psect	text83
 18277  018A10                     __ptext83:
 18278                           	opt stack 0
 18279  018A10                     __get_output_power:
 18280                           	opt stack 18
 18281                           
 18282                           ;log.c: 101: uint32_t pwr;
 18283                           ;log.c: 102: pwr = ((int32_t) os.output_voltage) * ((int32_t) os.output_current);
 18284                           
 18285                           ; BSR set to: 0
 18286                           ;incstack = 0
 18287  018A10  EE22  F027         	lfsr	2,_os+39	;volatile
 18288  018A14  CFDE F060          	movff	postinc2,___lmul@multiplier
 18289  018A18  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 18290  018A1C  0100               	movlb	0	; () banked
 18291  018A1E  0E00               	movlw	0
 18292  018A20  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 18293  018A22  0EFF               	movlw	-1
 18294  018A24  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 18295  018A26  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 18296  018A28  EE22  F032         	lfsr	2,_os+50	;volatile
 18297  018A2C  CFDE F064          	movff	postinc2,___lmul@multiplicand
 18298  018A30  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 18299  018A34  0100               	movlb	0	; () banked
 18300  018A36  0E00               	movlw	0
 18301  018A38  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 18302  018A3A  0EFF               	movlw	-1
 18303  018A3C  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 18304  018A3E  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 18305  018A40  EC3B  F0C7         	call	___lmul	;wreg free
 18306  018A44  C060  F06F         	movff	?___lmul,__get_output_power@pwr
 18307  018A48  C061  F070         	movff	?___lmul+1,__get_output_power@pwr+1
 18308  018A4C  C062  F071         	movff	?___lmul+2,__get_output_power@pwr+2
 18309  018A50  C063  F072         	movff	?___lmul+3,__get_output_power@pwr+3
 18310                           
 18311                           ;log.c: 103: pwr /= 1000;
 18312  018A54  C06F  F060         	movff	__get_output_power@pwr,___lldiv@dividend
 18313  018A58  C070  F061         	movff	__get_output_power@pwr+1,___lldiv@dividend+1
 18314  018A5C  C071  F062         	movff	__get_output_power@pwr+2,___lldiv@dividend+2
 18315  018A60  C072  F063         	movff	__get_output_power@pwr+3,___lldiv@dividend+3
 18316  018A64  0EE8               	movlw	232
 18317  018A66  0100               	movlb	0	; () banked
 18318  018A68  6F64               	movwf	___lldiv@divisor& (0+255),b
 18319  018A6A  0E03               	movlw	3
 18320  018A6C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 18321  018A6E  0E00               	movlw	0
 18322  018A70  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 18323  018A72  0E00               	movlw	0
 18324  018A74  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 18325  018A76  ECF0  F0BC         	call	___lldiv	;wreg free
 18326  018A7A  C060  F06F         	movff	?___lldiv,__get_output_power@pwr
 18327  018A7E  C061  F070         	movff	?___lldiv+1,__get_output_power@pwr+1
 18328  018A82  C062  F071         	movff	?___lldiv+2,__get_output_power@pwr+2
 18329  018A86  C063  F072         	movff	?___lldiv+3,__get_output_power@pwr+3
 18330                           
 18331                           ;log.c: 104: return (uint16_t) pwr;
 18332  018A8A  C06F  F06D         	movff	__get_output_power@pwr,?__get_output_power
 18333  018A8E  C070  F06E         	movff	__get_output_power@pwr+1,?__get_output_power+1
 18334  018A92  0012               	return	
 18335  018A94                     __end_of__get_output_power:
 18336                           	opt stack 0
 18337                           tblptru	equ	0xFF8
 18338                           tblptrh	equ	0xFF7
 18339                           tblptrl	equ	0xFF6
 18340                           tablat	equ	0xFF5
 18341                           prodh	equ	0xFF4
 18342                           prodl	equ	0xFF3
 18343                           intcon	equ	0xFF2
 18344                           intcon2	equ	0xFF1
 18345                           intcon3	equ	0xFF0
 18346                           postinc0	equ	0xFEE
 18347                           wreg	equ	0xFE8
 18348                           postinc1	equ	0xFE6
 18349                           postdec1	equ	0xFE5
 18350                           plusw1	equ	0xFE3
 18351                           fsr1h	equ	0xFE2
 18352                           fsr1l	equ	0xFE1
 18353                           indf2	equ	0xFDF
 18354                           postinc2	equ	0xFDE
 18355                           postdec2	equ	0xFDD
 18356                           plusw2	equ	0xFDB
 18357                           fsr2h	equ	0xFDA
 18358                           fsr2l	equ	0xFD9
 18359                           status	equ	0xFD8
 18360                           
 18361 ;; *************** function __get_input_power *****************
 18362 ;; Defined at:
 18363 ;;		line 91 in file "log.c"
 18364 ;; Parameters:    Size  Location     Type
 18365 ;;		None
 18366 ;; Auto vars:     Size  Location     Type
 18367 ;;  pwr             4   16[BANK0 ] long 
 18368 ;; Return value:  Size  Location     Type
 18369 ;;                  2   14[BANK0 ] unsigned int 
 18370 ;; Registers used:
 18371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18372 ;; Tracked objects:
 18373 ;;		On entry : 0/0
 18374 ;;		On exit  : 0/0
 18375 ;;		Unchanged: 0/0
 18376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18377 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18378 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18380 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18381 ;;Total ram usage:        6 bytes
 18382 ;; Hardware stack levels used:    1
 18383 ;; Hardware stack levels required when called:   11
 18384 ;; This function calls:
 18385 ;;		___aldiv
 18386 ;;		___lmul
 18387 ;; This function is called by:
 18388 ;;		_log_collect_data
 18389 ;; This function uses a non-reentrant model
 18390 ;;
 18391                           
 18392                           	psect	text84
 18393  018A94                     __ptext84:
 18394                           	opt stack 0
 18395  018A94                     __get_input_power:
 18396                           	opt stack 18
 18397                           
 18398                           ;log.c: 93: int32_t pwr;
 18399                           ;log.c: 94: pwr = ((int32_t) os.input_voltage) * ((int32_t) os.input_current);
 18400                           
 18401                           ;incstack = 0
 18402  018A94  EE22  F012         	lfsr	2,_os+18	;volatile
 18403  018A98  CFDE F060          	movff	postinc2,___lmul@multiplier
 18404  018A9C  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 18405  018AA0  0100               	movlb	0	; () banked
 18406  018AA2  0E00               	movlw	0
 18407  018AA4  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 18408  018AA6  0EFF               	movlw	-1
 18409  018AA8  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 18410  018AAA  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 18411  018AAC  EE22  F01D         	lfsr	2,_os+29	;volatile
 18412  018AB0  CFDE F064          	movff	postinc2,___lmul@multiplicand
 18413  018AB4  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 18414  018AB8  0100               	movlb	0	; () banked
 18415  018ABA  0E00               	movlw	0
 18416  018ABC  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 18417  018ABE  0EFF               	movlw	-1
 18418  018AC0  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 18419  018AC2  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 18420  018AC4  EC3B  F0C7         	call	___lmul	;wreg free
 18421  018AC8  C060  F070         	movff	?___lmul,__get_input_power@pwr
 18422  018ACC  C061  F071         	movff	?___lmul+1,__get_input_power@pwr+1
 18423  018AD0  C062  F072         	movff	?___lmul+2,__get_input_power@pwr+2
 18424  018AD4  C063  F073         	movff	?___lmul+3,__get_input_power@pwr+3
 18425                           
 18426                           ;log.c: 95: pwr /= 1000;
 18427  018AD8  C070  F060         	movff	__get_input_power@pwr,___aldiv@dividend
 18428  018ADC  C071  F061         	movff	__get_input_power@pwr+1,___aldiv@dividend+1
 18429  018AE0  C072  F062         	movff	__get_input_power@pwr+2,___aldiv@dividend+2
 18430  018AE4  C073  F063         	movff	__get_input_power@pwr+3,___aldiv@dividend+3
 18431  018AE8  0EE8               	movlw	232
 18432  018AEA  0100               	movlb	0	; () banked
 18433  018AEC  6F64               	movwf	___aldiv@divisor& (0+255),b
 18434  018AEE  0E03               	movlw	3
 18435  018AF0  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 18436  018AF2  0E00               	movlw	0
 18437  018AF4  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 18438  018AF6  0E00               	movlw	0
 18439  018AF8  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 18440  018AFA  ECEA  F0AF         	call	___aldiv	;wreg free
 18441  018AFE  C060  F070         	movff	?___aldiv,__get_input_power@pwr
 18442  018B02  C061  F071         	movff	?___aldiv+1,__get_input_power@pwr+1
 18443  018B06  C062  F072         	movff	?___aldiv+2,__get_input_power@pwr+2
 18444  018B0A  C063  F073         	movff	?___aldiv+3,__get_input_power@pwr+3
 18445                           
 18446                           ;log.c: 96: return (uint16_t) pwr;
 18447  018B0E  C070  F06E         	movff	__get_input_power@pwr,?__get_input_power
 18448  018B12  C071  F06F         	movff	__get_input_power@pwr+1,?__get_input_power+1
 18449  018B16  0012               	return	
 18450  018B18                     __end_of__get_input_power:
 18451                           	opt stack 0
 18452                           tblptru	equ	0xFF8
 18453                           tblptrh	equ	0xFF7
 18454                           tblptrl	equ	0xFF6
 18455                           tablat	equ	0xFF5
 18456                           prodh	equ	0xFF4
 18457                           prodl	equ	0xFF3
 18458                           intcon	equ	0xFF2
 18459                           intcon2	equ	0xFF1
 18460                           intcon3	equ	0xFF0
 18461                           postinc0	equ	0xFEE
 18462                           wreg	equ	0xFE8
 18463                           postinc1	equ	0xFE6
 18464                           postdec1	equ	0xFE5
 18465                           plusw1	equ	0xFE3
 18466                           fsr1h	equ	0xFE2
 18467                           fsr1l	equ	0xFE1
 18468                           indf2	equ	0xFDF
 18469                           postinc2	equ	0xFDE
 18470                           postdec2	equ	0xFDD
 18471                           plusw2	equ	0xFDB
 18472                           fsr2h	equ	0xFDA
 18473                           fsr2l	equ	0xFD9
 18474                           status	equ	0xFD8
 18475                           
 18476 ;; *************** function _i2c_eeprom_tasks *****************
 18477 ;; Defined at:
 18478 ;;		line 779 in file "i2c.c"
 18479 ;; Parameters:    Size  Location     Type
 18480 ;;		None
 18481 ;; Auto vars:     Size  Location     Type
 18482 ;;		None
 18483 ;; Return value:  Size  Location     Type
 18484 ;;                  1    wreg      void 
 18485 ;; Registers used:
 18486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18487 ;; Tracked objects:
 18488 ;;		On entry : 0/0
 18489 ;;		On exit  : 0/0
 18490 ;;		Unchanged: 0/0
 18491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18496 ;;Total ram usage:        0 bytes
 18497 ;; Hardware stack levels used:    1
 18498 ;; Hardware stack levels required when called:   14
 18499 ;; This function calls:
 18500 ;;		__write_calibration
 18501 ;;		_get_next_eeprom_write_task
 18502 ;; This function is called by:
 18503 ;;		_main
 18504 ;; This function uses a non-reentrant model
 18505 ;;
 18506                           
 18507                           	psect	text85
 18508  019046                     __ptext85:
 18509                           	opt stack 0
 18510  019046                     _i2c_eeprom_tasks:
 18511                           	opt stack 16
 18512                           
 18513                           ;i2c.c: 781: switch(get_next_eeprom_write_task())
 18514                           
 18515                           ;incstack = 0
 18516  019046  D01C               	goto	l22066
 18517  019048                     l22050:
 18518                           
 18519                           ;i2c.c: 786: _write_calibration(CALIBRATION_INDEX_INPUT_VOLTAGE);
 18520  019048  0E00               	movlw	0
 18521  01904A  EC92  F0BC         	call	__write_calibration
 18522                           
 18523                           ;i2c.c: 787: break;
 18524  01904E  0012               	return	
 18525  019050                     l22052:
 18526                           
 18527                           ;i2c.c: 789: _write_calibration(CALIBRATION_INDEX_OUTPUT_VOLTAGE);
 18528  019050  0E01               	movlw	1
 18529  019052  EC92  F0BC         	call	__write_calibration
 18530                           
 18531                           ;i2c.c: 790: break;
 18532  019056  0012               	return	
 18533  019058                     l22054:
 18534                           
 18535                           ;i2c.c: 792: _write_calibration(CALIBRATION_INDEX_INPUT_CURRENT);
 18536  019058  0E02               	movlw	2
 18537  01905A  EC92  F0BC         	call	__write_calibration
 18538                           
 18539                           ;i2c.c: 793: break;
 18540  01905E  0012               	return	
 18541  019060                     l22056:
 18542                           
 18543                           ;i2c.c: 795: _write_calibration(CALIBRATION_INDEX_OUTPUT_CURRENT);
 18544  019060  0E03               	movlw	3
 18545  019062  EC92  F0BC         	call	__write_calibration
 18546                           
 18547                           ;i2c.c: 796: break;
 18548  019066  0012               	return	
 18549  019068                     l22058:
 18550                           
 18551                           ;i2c.c: 798: _write_calibration(CALIBRATION_INDEX_ONBOARD_TEMPERATURE);
 18552  019068  0E04               	movlw	4
 18553  01906A  EC92  F0BC         	call	__write_calibration
 18554                           
 18555                           ;i2c.c: 799: break;
 18556  01906E  0012               	return	
 18557  019070                     l22060:
 18558                           
 18559                           ;i2c.c: 801: _write_calibration(CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_1);
 18560  019070  0E05               	movlw	5
 18561  019072  EC92  F0BC         	call	__write_calibration
 18562                           
 18563                           ;i2c.c: 802: break;
 18564  019076  0012               	return	
 18565  019078                     l22062:
 18566                           
 18567                           ;i2c.c: 804: _write_calibration(CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_2);
 18568  019078  0E06               	movlw	6
 18569  01907A  EC92  F0BC         	call	__write_calibration
 18570                           
 18571                           ;i2c.c: 806: }
 18572                           
 18573                           ;i2c.c: 805: break;
 18574  01907E  0012               	return	
 18575  019080                     l22066:
 18576  019080  ECFF  F0D1         	call	_get_next_eeprom_write_task	;wreg free
 18577                           
 18578                           ; Switch size 1, requested type "space"
 18579                           ; Number of cases is 8, Range of values is 1 to 8
 18580                           ; switch strategies available:
 18581                           ; Name         Instructions Cycles
 18582                           ; simple_byte           25    13 (average)
 18583                           ;	Chosen strategy is simple_byte
 18584  019084  0A01               	xorlw	1	; case 1
 18585  019086  B4D8               	btfsc	status,2,c
 18586  019088  0012               	return	
 18587  01908A  0A03               	xorlw	3	; case 2
 18588  01908C  B4D8               	btfsc	status,2,c
 18589  01908E  D7DC               	goto	l22050
 18590  019090  0A01               	xorlw	1	; case 3
 18591  019092  B4D8               	btfsc	status,2,c
 18592  019094  D7DD               	goto	l22052
 18593  019096  0A07               	xorlw	7	; case 4
 18594  019098  B4D8               	btfsc	status,2,c
 18595  01909A  D7DE               	goto	l22054
 18596  01909C  0A01               	xorlw	1	; case 5
 18597  01909E  B4D8               	btfsc	status,2,c
 18598  0190A0  D7DF               	goto	l22056
 18599  0190A2  0A03               	xorlw	3	; case 6
 18600  0190A4  B4D8               	btfsc	status,2,c
 18601  0190A6  D7E0               	goto	l22058
 18602  0190A8  0A01               	xorlw	1	; case 7
 18603  0190AA  B4D8               	btfsc	status,2,c
 18604  0190AC  D7E1               	goto	l22060
 18605  0190AE  0A0F               	xorlw	15	; case 8
 18606  0190B0  A4D8               	btfss	status,2,c
 18607  0190B2  0012               	return	
 18608  0190B4  D7E1               	goto	l22062
 18609  0190B6                     __end_of_i2c_eeprom_tasks:
 18610                           	opt stack 0
 18611                           tblptru	equ	0xFF8
 18612                           tblptrh	equ	0xFF7
 18613                           tblptrl	equ	0xFF6
 18614                           tablat	equ	0xFF5
 18615                           prodh	equ	0xFF4
 18616                           prodl	equ	0xFF3
 18617                           intcon	equ	0xFF2
 18618                           intcon2	equ	0xFF1
 18619                           intcon3	equ	0xFF0
 18620                           postinc0	equ	0xFEE
 18621                           wreg	equ	0xFE8
 18622                           postinc1	equ	0xFE6
 18623                           postdec1	equ	0xFE5
 18624                           plusw1	equ	0xFE3
 18625                           fsr1h	equ	0xFE2
 18626                           fsr1l	equ	0xFE1
 18627                           indf2	equ	0xFDF
 18628                           postinc2	equ	0xFDE
 18629                           postdec2	equ	0xFDD
 18630                           plusw2	equ	0xFDB
 18631                           fsr2h	equ	0xFDA
 18632                           fsr2l	equ	0xFD9
 18633                           status	equ	0xFD8
 18634                           
 18635 ;; *************** function _get_next_eeprom_write_task *****************
 18636 ;; Defined at:
 18637 ;;		line 759 in file "i2c.c"
 18638 ;; Parameters:    Size  Location     Type
 18639 ;;		None
 18640 ;; Auto vars:     Size  Location     Type
 18641 ;;  task            1    0[BANK0 ] enum E8252
 18642 ;; Return value:  Size  Location     Type
 18643 ;;                  1    wreg      enum E8252
 18644 ;; Registers used:
 18645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18646 ;; Tracked objects:
 18647 ;;		On entry : 0/0
 18648 ;;		On exit  : 0/0
 18649 ;;		Unchanged: 0/0
 18650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18652 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18654 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18655 ;;Total ram usage:        1 bytes
 18656 ;; Hardware stack levels used:    1
 18657 ;; Hardware stack levels required when called:   10
 18658 ;; This function calls:
 18659 ;;		Nothing
 18660 ;; This function is called by:
 18661 ;;		_i2c_eeprom_tasks
 18662 ;; This function uses a non-reentrant model
 18663 ;;
 18664                           
 18665                           	psect	text86
 18666  01A3FE                     __ptext86:
 18667                           	opt stack 0
 18668  01A3FE                     _get_next_eeprom_write_task:
 18669                           	opt stack 19
 18670                           
 18671                           ;i2c.c: 761: eeprom_write_task_t task;
 18672                           ;i2c.c: 762: if (task_list_read_index == task_list_write_index)
 18673                           
 18674                           ;incstack = 0
 18675  01A3FE  501D               	movf	_task_list_write_index,w,c
 18676  01A400  181E               	xorwf	_task_list_read_index,w,c
 18677  01A402  A4D8               	btfss	status,2,c
 18678  01A404  D002               	goto	l20648
 18679                           
 18680                           ;i2c.c: 763: {
 18681                           ;i2c.c: 765: return EEPROM_WRITE_TASK_NONE;
 18682  01A406  0E00               	movlw	0
 18683                           
 18684                           ;i2c.c: 766: }
 18685  01A408  0012               	return	
 18686  01A40A                     l20648:
 18687                           
 18688                           ;i2c.c: 767: else
 18689                           ;i2c.c: 768: {
 18690                           ;i2c.c: 770: task = task_list[task_list_read_index];
 18691  01A40A  501E               	movf	_task_list_read_index,w,c
 18692  01A40C  0D01               	mullw	1
 18693  01A40E  0E68               	movlw	low _task_list
 18694  01A410  24F3               	addwf	prodl,w,c
 18695  01A412  6ED9               	movwf	fsr2l,c
 18696  01A414  0E04               	movlw	high _task_list
 18697  01A416  20F4               	addwfc	prodh,w,c
 18698  01A418  6EDA               	movwf	fsr2h,c
 18699  01A41A  50DF               	movf	indf2,w,c
 18700  01A41C  0100               	movlb	0	; () banked
 18701  01A41E  6F60               	movwf	get_next_eeprom_write_task@task& (0+255),b
 18702                           
 18703                           ; BSR set to: 0
 18704                           ;i2c.c: 772: ++task_list_read_index;
 18705  01A420  2A1E               	incf	_task_list_read_index,f,c
 18706                           
 18707                           ; BSR set to: 0
 18708                           ;i2c.c: 773: task_list_read_index &= 0x0F;
 18709  01A422  0E0F               	movlw	15
 18710  01A424  161E               	andwf	_task_list_read_index,f,c
 18711                           
 18712                           ; BSR set to: 0
 18713                           ;i2c.c: 775: return task;
 18714  01A426  0100               	movlb	0	; () banked
 18715  01A428  5160               	movf	get_next_eeprom_write_task@task& (0+255),w,b
 18716                           
 18717                           ; BSR set to: 0
 18718  01A42A  0012               	return	
 18719  01A42C                     __end_of_get_next_eeprom_write_task:
 18720                           	opt stack 0
 18721                           tblptru	equ	0xFF8
 18722                           tblptrh	equ	0xFF7
 18723                           tblptrl	equ	0xFF6
 18724                           tablat	equ	0xFF5
 18725                           prodh	equ	0xFF4
 18726                           prodl	equ	0xFF3
 18727                           intcon	equ	0xFF2
 18728                           intcon2	equ	0xFF1
 18729                           intcon3	equ	0xFF0
 18730                           postinc0	equ	0xFEE
 18731                           wreg	equ	0xFE8
 18732                           postinc1	equ	0xFE6
 18733                           postdec1	equ	0xFE5
 18734                           plusw1	equ	0xFE3
 18735                           fsr1h	equ	0xFE2
 18736                           fsr1l	equ	0xFE1
 18737                           indf2	equ	0xFDF
 18738                           postinc2	equ	0xFDE
 18739                           postdec2	equ	0xFDD
 18740                           plusw2	equ	0xFDB
 18741                           fsr2h	equ	0xFDA
 18742                           fsr2l	equ	0xFD9
 18743                           status	equ	0xFD8
 18744                           
 18745 ;; *************** function __write_calibration *****************
 18746 ;; Defined at:
 18747 ;;		line 715 in file "i2c.c"
 18748 ;; Parameters:    Size  Location     Type
 18749 ;;  index           1    wreg     enum E8142
 18750 ;; Auto vars:     Size  Location     Type
 18751 ;;  index           1   59[BANK0 ] enum E8142
 18752 ;;  buffer         16   39[BANK0 ] unsigned char [16]
 18753 ;;  ptr             2   57[BANK0 ] PTR unsigned char 
 18754 ;;		 -> calibrationParameters(84), 
 18755 ;;  addr            2   55[BANK0 ] unsigned int 
 18756 ;;  cntr            1   60[BANK0 ] unsigned char 
 18757 ;; Return value:  Size  Location     Type
 18758 ;;                  1    wreg      void 
 18759 ;; Registers used:
 18760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18761 ;; Tracked objects:
 18762 ;;		On entry : 0/0
 18763 ;;		On exit  : 0/0
 18764 ;;		Unchanged: 0/0
 18765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18767 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18768 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18769 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18770 ;;Total ram usage:       24 bytes
 18771 ;; Hardware stack levels used:    1
 18772 ;; Hardware stack levels required when called:   13
 18773 ;; This function calls:
 18774 ;;		_i2c_eeprom_write
 18775 ;; This function is called by:
 18776 ;;		_i2c_eeprom_tasks
 18777 ;; This function uses a non-reentrant model
 18778 ;;
 18779                           
 18780                           	psect	text87
 18781  017924                     __ptext87:
 18782                           	opt stack 0
 18783  017924                     __write_calibration:
 18784                           	opt stack 16
 18785                           
 18786                           ;incstack = 0
 18787                           ;__write_calibration@index stored from wreg
 18788  017924  0100               	movlb	0	; () banked
 18789  017926  6F9B               	movwf	__write_calibration@index& (0+255),b
 18790                           
 18791                           ;i2c.c: 717: uint8_t buffer[16];
 18792                           ;i2c.c: 718: uint8_t *ptr;
 18793                           ;i2c.c: 719: uint8_t cntr;
 18794                           ;i2c.c: 720: uint16_t addr;
 18795                           ;i2c.c: 721: buffer[0] = 0x77;
 18796  017928  0E77               	movlw	119
 18797  01792A  0100               	movlb	0	; () banked
 18798  01792C  6F87               	movwf	__write_calibration@buffer& (0+255),b
 18799                           
 18800                           ;i2c.c: 722: buffer[1] = 0x55;
 18801  01792E  0E55               	movlw	85
 18802  017930  0100               	movlb	0	; () banked
 18803  017932  6F88               	movwf	(__write_calibration@buffer+1)& (0+255),b
 18804                           
 18805                           ;i2c.c: 723: buffer[2] = 0x33;
 18806  017934  0E33               	movlw	51
 18807  017936  0100               	movlb	0	; () banked
 18808  017938  6F89               	movwf	(__write_calibration@buffer+2)& (0+255),b
 18809                           
 18810                           ; BSR set to: 0
 18811                           ;i2c.c: 724: buffer[3] = (uint8_t) index;
 18812  01793A  C09B  F08A         	movff	__write_calibration@index,__write_calibration@buffer+3
 18813                           
 18814                           ; BSR set to: 0
 18815                           ;i2c.c: 725: ptr = (uint8_t*) &calibrationParameters[index];
 18816  01793E  0100               	movlb	0	; () banked
 18817  017940  519B               	movf	__write_calibration@index& (0+255),w,b
 18818  017942  0D0C               	mullw	12
 18819  017944  0E00               	movlw	low _calibrationParameters
 18820  017946  24F3               	addwf	prodl,w,c
 18821  017948  0100               	movlb	0	; () banked
 18822  01794A  6F99               	movwf	__write_calibration@ptr& (0+255),b
 18823  01794C  0E03               	movlw	high _calibrationParameters
 18824  01794E  20F4               	addwfc	prodh,w,c
 18825  017950  0100               	movlb	0	; () banked
 18826  017952  6F9A               	movwf	(__write_calibration@ptr+1)& (0+255),b
 18827                           
 18828                           ; BSR set to: 0
 18829                           ;i2c.c: 726: for(cntr=4; cntr<16; ++cntr)
 18830  017954  0E04               	movlw	4
 18831  017956  0100               	movlb	0	; () banked
 18832  017958  6F9C               	movwf	__write_calibration@cntr& (0+255),b
 18833  01795A                     l20624:
 18834                           
 18835                           ; BSR set to: 0
 18836  01795A  0E0F               	movlw	15
 18837  01795C  0100               	movlb	0	; () banked
 18838  01795E  659C               	cpfsgt	__write_calibration@cntr& (0+255),b
 18839  017960  D001               	goto	l20628
 18840  017962  D015               	goto	l20636
 18841  017964                     l20628:
 18842                           
 18843                           ; BSR set to: 0
 18844                           ;i2c.c: 727: {
 18845                           ;i2c.c: 728: buffer[cntr] = *ptr;
 18846  017964  C099  FFD9         	movff	__write_calibration@ptr,fsr2l
 18847  017968  C09A  FFDA         	movff	__write_calibration@ptr+1,fsr2h
 18848  01796C  0100               	movlb	0	; () banked
 18849  01796E  519C               	movf	__write_calibration@cntr& (0+255),w,b
 18850  017970  0D01               	mullw	1
 18851  017972  0E87               	movlw	low __write_calibration@buffer
 18852  017974  24F3               	addwf	prodl,w,c
 18853  017976  6EE1               	movwf	fsr1l,c
 18854  017978  0E00               	movlw	high __write_calibration@buffer
 18855  01797A  20F4               	addwfc	prodh,w,c
 18856  01797C  6EE2               	movwf	fsr1h,c
 18857  01797E  CFDF FFE7          	movff	indf2,indf1
 18858                           
 18859                           ; BSR set to: 0
 18860                           ;i2c.c: 729: ++ptr;
 18861  017982  0100               	movlb	0	; () banked
 18862  017984  4B99               	infsnz	__write_calibration@ptr& (0+255),f,b
 18863  017986  2B9A               	incf	(__write_calibration@ptr+1)& (0+255),f,b
 18864                           
 18865                           ; BSR set to: 0
 18866  017988  0100               	movlb	0	; () banked
 18867  01798A  2B9C               	incf	__write_calibration@cntr& (0+255),f,b
 18868  01798C  D7E6               	goto	l20624
 18869  01798E                     l20636:
 18870                           
 18871                           ; BSR set to: 0
 18872                           ;i2c.c: 730: }
 18873                           ;i2c.c: 731: addr = 0x0100 + (index<<4);
 18874  01798E  0100               	movlb	0	; () banked
 18875  017990  519B               	movf	__write_calibration@index& (0+255),w,b
 18876  017992  0100               	movlb	0	; () banked
 18877  017994  6F85               	movwf	??__write_calibration& (0+255),b
 18878  017996  6B86               	clrf	(??__write_calibration+1)& (0+255),b
 18879  017998  0100               	movlb	0	; () banked
 18880  01799A  3B85               	swapf	??__write_calibration& (0+255),f,b
 18881  01799C  3B86               	swapf	(??__write_calibration+1)& (0+255),f,b
 18882  01799E  0EF0               	movlw	240
 18883  0179A0  1786               	andwf	(??__write_calibration+1)& (0+255),f,b
 18884  0179A2  5185               	movf	??__write_calibration& (0+255),w,b
 18885  0179A4  0B0F               	andlw	15
 18886  0179A6  1386               	iorwf	(??__write_calibration+1)& (0+255),f,b
 18887  0179A8  0EF0               	movlw	240
 18888  0179AA  1785               	andwf	??__write_calibration& (0+255),f,b
 18889  0179AC  0E00               	movlw	0
 18890  0179AE  0100               	movlb	0	; () banked
 18891  0179B0  2585               	addwf	??__write_calibration& (0+255),w,b
 18892  0179B2  0100               	movlb	0	; () banked
 18893  0179B4  6F97               	movwf	__write_calibration@addr& (0+255),b
 18894  0179B6  0E01               	movlw	1
 18895  0179B8  0100               	movlb	0	; () banked
 18896  0179BA  2186               	addwfc	(??__write_calibration+1)& (0+255),w,b
 18897  0179BC  0100               	movlb	0	; () banked
 18898  0179BE  6F98               	movwf	(__write_calibration@addr+1)& (0+255),b
 18899                           
 18900                           ; BSR set to: 0
 18901                           ;i2c.c: 732: i2c_eeprom_write(addr, &buffer[0], 16);
 18902  0179C0  C097  F06A         	movff	__write_calibration@addr,i2c_eeprom_write@address
 18903  0179C4  C098  F06B         	movff	__write_calibration@addr+1,i2c_eeprom_write@address+1
 18904  0179C8  0E87               	movlw	low __write_calibration@buffer
 18905  0179CA  0100               	movlb	0	; () banked
 18906  0179CC  6F6C               	movwf	i2c_eeprom_write@data& (0+255),b
 18907  0179CE  0E00               	movlw	high __write_calibration@buffer
 18908  0179D0  0100               	movlb	0	; () banked
 18909  0179D2  6F6D               	movwf	(i2c_eeprom_write@data+1)& (0+255),b
 18910  0179D4  0E10               	movlw	16
 18911  0179D6  0100               	movlb	0	; () banked
 18912  0179D8  6F6E               	movwf	i2c_eeprom_write@length& (0+255),b
 18913  0179DA  EC62  F0BE         	call	_i2c_eeprom_write	;wreg free
 18914  0179DE  0012               	return		;funcret
 18915  0179E0                     __end_of__write_calibration:
 18916                           	opt stack 0
 18917                           tblptru	equ	0xFF8
 18918                           tblptrh	equ	0xFF7
 18919                           tblptrl	equ	0xFF6
 18920                           tablat	equ	0xFF5
 18921                           prodh	equ	0xFF4
 18922                           prodl	equ	0xFF3
 18923                           intcon	equ	0xFF2
 18924                           intcon2	equ	0xFF1
 18925                           intcon3	equ	0xFF0
 18926                           postinc0	equ	0xFEE
 18927                           wreg	equ	0xFE8
 18928                           indf1	equ	0xFE7
 18929                           postinc1	equ	0xFE6
 18930                           postdec1	equ	0xFE5
 18931                           plusw1	equ	0xFE3
 18932                           fsr1h	equ	0xFE2
 18933                           fsr1l	equ	0xFE1
 18934                           indf2	equ	0xFDF
 18935                           postinc2	equ	0xFDE
 18936                           postdec2	equ	0xFDD
 18937                           plusw2	equ	0xFDB
 18938                           fsr2h	equ	0xFDA
 18939                           fsr2l	equ	0xFD9
 18940                           status	equ	0xFD8
 18941                           
 18942 ;; *************** function _i2c_adc_start *****************
 18943 ;; Defined at:
 18944 ;;		line 467 in file "i2c.c"
 18945 ;; Parameters:    Size  Location     Type
 18946 ;;  channel         1    wreg     enum E8224
 18947 ;;  resolution      1   10[BANK0 ] enum E8230
 18948 ;;  gain            1   11[BANK0 ] enum E8236
 18949 ;; Auto vars:     Size  Location     Type
 18950 ;;  channel         1   12[BANK0 ] enum E8224
 18951 ;;  configuratio    1   13[BANK0 ] unsigned char 
 18952 ;; Return value:  Size  Location     Type
 18953 ;;                  1    wreg      void 
 18954 ;; Registers used:
 18955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18956 ;; Tracked objects:
 18957 ;;		On entry : 0/0
 18958 ;;		On exit  : 0/0
 18959 ;;		Unchanged: 0/0
 18960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18961 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18962 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18964 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18965 ;;Total ram usage:        4 bytes
 18966 ;; Hardware stack levels used:    1
 18967 ;; Hardware stack levels required when called:   12
 18968 ;; This function calls:
 18969 ;;		__i2c_write
 18970 ;;		_i2c_set_frequency
 18971 ;; This function is called by:
 18972 ;;		_main
 18973 ;; This function uses a non-reentrant model
 18974 ;;
 18975                           
 18976                           	psect	text88
 18977  019D54                     __ptext88:
 18978                           	opt stack 0
 18979  019D54                     _i2c_adc_start:
 18980                           	opt stack 18
 18981                           
 18982                           ;incstack = 0
 18983                           ;i2c_adc_start@channel stored from wreg
 18984  019D54  0100               	movlb	0	; () banked
 18985  019D56  6F6C               	movwf	i2c_adc_start@channel& (0+255),b
 18986                           
 18987                           ;i2c.c: 469: uint8_t configuration_byte;
 18988                           ;i2c.c: 470: configuration_byte = 0b10000000;
 18989  019D58  0E80               	movlw	128
 18990  019D5A  0100               	movlb	0	; () banked
 18991  019D5C  6F6D               	movwf	i2c_adc_start@configuration_byte& (0+255),b
 18992                           
 18993                           ; BSR set to: 0
 18994                           ;i2c.c: 471: configuration_byte |= (channel<<5);
 18995  019D5E  0100               	movlb	0	; () banked
 18996  019D60  396C               	swapf	i2c_adc_start@channel& (0+255),w,b
 18997  019D62  46E8               	rlncf	wreg,f,c
 18998  019D64  0BE0               	andlw	224
 18999  019D66  0100               	movlb	0	; () banked
 19000  019D68  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 19001                           
 19002                           ; BSR set to: 0
 19003                           ;i2c.c: 472: configuration_byte |= (resolution<<2);
 19004  019D6A  0100               	movlb	0	; () banked
 19005  019D6C  456A               	rlncf	i2c_adc_start@resolution& (0+255),w,b
 19006  019D6E  46E8               	rlncf	wreg,f,c
 19007  019D70  0BFC               	andlw	252
 19008  019D72  0100               	movlb	0	; () banked
 19009  019D74  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 19010                           
 19011                           ; BSR set to: 0
 19012                           ;i2c.c: 473: configuration_byte |= gain;
 19013  019D76  0100               	movlb	0	; () banked
 19014  019D78  516B               	movf	i2c_adc_start@gain& (0+255),w,b
 19015  019D7A  0100               	movlb	0	; () banked
 19016  019D7C  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 19017                           
 19018                           ; BSR set to: 0
 19019                           ;i2c.c: 476: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 19020  019D7E  0E02               	movlw	2
 19021  019D80  EC5B  F0C8         	call	_i2c_set_frequency
 19022                           
 19023                           ;i2c.c: 478: _i2c_write(0b11010000, &configuration_byte, 1);
 19024  019D84  0E6D               	movlw	low i2c_adc_start@configuration_byte
 19025  019D86  0100               	movlb	0	; () banked
 19026  019D88  6F65               	movwf	__i2c_write@data& (0+255),b
 19027  019D8A  0E00               	movlw	high i2c_adc_start@configuration_byte
 19028  019D8C  0100               	movlb	0	; () banked
 19029  019D8E  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 19030  019D90  0E01               	movlw	1
 19031  019D92  0100               	movlb	0	; () banked
 19032  019D94  6F67               	movwf	__i2c_write@length& (0+255),b
 19033  019D96  0ED0               	movlw	208
 19034  019D98  ECDC  F0CC         	call	__i2c_write
 19035  019D9C  0012               	return		;funcret
 19036  019D9E                     __end_of_i2c_adc_start:
 19037                           	opt stack 0
 19038                           tblptru	equ	0xFF8
 19039                           tblptrh	equ	0xFF7
 19040                           tblptrl	equ	0xFF6
 19041                           tablat	equ	0xFF5
 19042                           prodh	equ	0xFF4
 19043                           prodl	equ	0xFF3
 19044                           intcon	equ	0xFF2
 19045                           intcon2	equ	0xFF1
 19046                           intcon3	equ	0xFF0
 19047                           postinc0	equ	0xFEE
 19048                           wreg	equ	0xFE8
 19049                           indf1	equ	0xFE7
 19050                           postinc1	equ	0xFE6
 19051                           postdec1	equ	0xFE5
 19052                           plusw1	equ	0xFE3
 19053                           fsr1h	equ	0xFE2
 19054                           fsr1l	equ	0xFE1
 19055                           indf2	equ	0xFDF
 19056                           postinc2	equ	0xFDE
 19057                           postdec2	equ	0xFDD
 19058                           plusw2	equ	0xFDB
 19059                           fsr2h	equ	0xFDA
 19060                           fsr2l	equ	0xFD9
 19061                           status	equ	0xFD8
 19062                           
 19063 ;; *************** function _i2c_adc_read *****************
 19064 ;; Defined at:
 19065 ;;		line 481 in file "i2c.c"
 19066 ;; Parameters:    Size  Location     Type
 19067 ;;		None
 19068 ;; Auto vars:     Size  Location     Type
 19069 ;;  result          2    8[BANK0 ] int 
 19070 ;; Return value:  Size  Location     Type
 19071 ;;                  2    5[BANK0 ] int 
 19072 ;; Registers used:
 19073 ;;		wreg, status,2, status,0, cstack
 19074 ;; Tracked objects:
 19075 ;;		On entry : 0/0
 19076 ;;		On exit  : 0/0
 19077 ;;		Unchanged: 0/0
 19078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19079 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19080 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19081 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19082 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19083 ;;Total ram usage:        5 bytes
 19084 ;; Hardware stack levels used:    1
 19085 ;; Hardware stack levels required when called:   11
 19086 ;; This function calls:
 19087 ;;		__i2c_acknowledge
 19088 ;;		__i2c_get
 19089 ;;		__i2c_not_acknowledge
 19090 ;;		__i2c_send
 19091 ;;		__i2c_start
 19092 ;;		__i2c_stop
 19093 ;;		__i2c_wait_idle
 19094 ;;		_i2c_set_frequency
 19095 ;; This function is called by:
 19096 ;;		_main
 19097 ;; This function uses a non-reentrant model
 19098 ;;
 19099                           
 19100                           	psect	text89
 19101  01984A                     __ptext89:
 19102                           	opt stack 0
 19103  01984A                     _i2c_adc_read:
 19104                           	opt stack 19
 19105                           
 19106                           ;i2c.c: 483: int16_t result;
 19107                           ;i2c.c: 486: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 19108                           
 19109                           ;incstack = 0
 19110  01984A  0E02               	movlw	2
 19111  01984C  EC5B  F0C8         	call	_i2c_set_frequency
 19112                           
 19113                           ;i2c.c: 488: _i2c_wait_idle();
 19114  019850  EC76  F0C7         	call	__i2c_wait_idle	;wreg free
 19115                           
 19116                           ;i2c.c: 489: _i2c_start();
 19117  019854  ECDF  F0D5         	call	__i2c_start	;wreg free
 19118                           
 19119                           ;i2c.c: 490: _i2c_wait_idle();
 19120  019858  EC76  F0C7         	call	__i2c_wait_idle	;wreg free
 19121                           
 19122                           ;i2c.c: 491: _i2c_send(0b11010000 | 0x01);
 19123  01985C  0ED1               	movlw	209
 19124  01985E  ECD6  F0D5         	call	__i2c_send
 19125                           
 19126                           ;i2c.c: 492: _i2c_wait_idle();
 19127  019862  EC76  F0C7         	call	__i2c_wait_idle	;wreg free
 19128                           
 19129                           ;i2c.c: 493: result = _i2c_get();
 19130  019866  ECC7  F0D5         	call	__i2c_get	;wreg free
 19131  01986A  0100               	movlb	0	; () banked
 19132  01986C  6F67               	movwf	??_i2c_adc_read& (0+255),b
 19133  01986E  0100               	movlb	0	; () banked
 19134  019870  5167               	movf	??_i2c_adc_read& (0+255),w,b
 19135  019872  0100               	movlb	0	; () banked
 19136  019874  6F68               	movwf	i2c_adc_read@result& (0+255),b
 19137  019876  6B69               	clrf	(i2c_adc_read@result+1)& (0+255),b
 19138                           
 19139                           ; BSR set to: 0
 19140                           ;i2c.c: 494: result <<= 8;
 19141  019878  0100               	movlb	0	; () banked
 19142  01987A  5168               	movf	i2c_adc_read@result& (0+255),w,b
 19143  01987C  6F69               	movwf	(i2c_adc_read@result+1)& (0+255),b
 19144  01987E  6B68               	clrf	i2c_adc_read@result& (0+255),b
 19145                           
 19146                           ; BSR set to: 0
 19147                           ;i2c.c: 495: _i2c_acknowledge();
 19148  019880  ECCC  F0D5         	call	__i2c_acknowledge	;wreg free
 19149                           
 19150                           ;i2c.c: 496: result |= _i2c_get();
 19151  019884  ECC7  F0D5         	call	__i2c_get	;wreg free
 19152  019888  0100               	movlb	0	; () banked
 19153  01988A  6F67               	movwf	??_i2c_adc_read& (0+255),b
 19154  01988C  0100               	movlb	0	; () banked
 19155  01988E  5167               	movf	??_i2c_adc_read& (0+255),w,b
 19156  019890  0100               	movlb	0	; () banked
 19157  019892  1368               	iorwf	i2c_adc_read@result& (0+255),f,b
 19158                           
 19159                           ; BSR set to: 0
 19160                           ;i2c.c: 497: _i2c_not_acknowledge();
 19161  019894  ECC2  F0D5         	call	__i2c_not_acknowledge	;wreg free
 19162                           
 19163                           ;i2c.c: 498: _i2c_stop();
 19164  019898  ECDB  F0D5         	call	__i2c_stop	;wreg free
 19165                           
 19166                           ;i2c.c: 500: return result;
 19167  01989C  C068  F065         	movff	i2c_adc_read@result,?_i2c_adc_read
 19168  0198A0  C069  F066         	movff	i2c_adc_read@result+1,?_i2c_adc_read+1
 19169  0198A4  0012               	return	
 19170  0198A6                     __end_of_i2c_adc_read:
 19171                           	opt stack 0
 19172                           tblptru	equ	0xFF8
 19173                           tblptrh	equ	0xFF7
 19174                           tblptrl	equ	0xFF6
 19175                           tablat	equ	0xFF5
 19176                           prodh	equ	0xFF4
 19177                           prodl	equ	0xFF3
 19178                           intcon	equ	0xFF2
 19179                           intcon2	equ	0xFF1
 19180                           intcon3	equ	0xFF0
 19181                           postinc0	equ	0xFEE
 19182                           wreg	equ	0xFE8
 19183                           indf1	equ	0xFE7
 19184                           postinc1	equ	0xFE6
 19185                           postdec1	equ	0xFE5
 19186                           plusw1	equ	0xFE3
 19187                           fsr1h	equ	0xFE2
 19188                           fsr1l	equ	0xFE1
 19189                           indf2	equ	0xFDF
 19190                           postinc2	equ	0xFDE
 19191                           postdec2	equ	0xFDD
 19192                           plusw2	equ	0xFDB
 19193                           fsr2h	equ	0xFDA
 19194                           fsr2l	equ	0xFD9
 19195                           status	equ	0xFD8
 19196                           
 19197 ;; *************** function __i2c_not_acknowledge *****************
 19198 ;; Defined at:
 19199 ;;		line 87 in file "i2c.c"
 19200 ;; Parameters:    Size  Location     Type
 19201 ;;		None
 19202 ;; Auto vars:     Size  Location     Type
 19203 ;;		None
 19204 ;; Return value:  Size  Location     Type
 19205 ;;                  1    wreg      void 
 19206 ;; Registers used:
 19207 ;;		None
 19208 ;; Tracked objects:
 19209 ;;		On entry : 0/0
 19210 ;;		On exit  : 0/0
 19211 ;;		Unchanged: 0/0
 19212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19217 ;;Total ram usage:        0 bytes
 19218 ;; Hardware stack levels used:    1
 19219 ;; Hardware stack levels required when called:   10
 19220 ;; This function calls:
 19221 ;;		Nothing
 19222 ;; This function is called by:
 19223 ;;		__i2c_read
 19224 ;;		_i2c_adc_read
 19225 ;; This function uses a non-reentrant model
 19226 ;;
 19227                           
 19228                           	psect	text90
 19229  01AB84                     __ptext90:
 19230                           	opt stack 0
 19231  01AB84                     __i2c_not_acknowledge:
 19232                           	opt stack 15
 19233                           
 19234                           ;i2c.c: 89: SSP1CON2bits.ACKDT = 1;
 19235                           
 19236                           ;incstack = 0
 19237  01AB84  8AC5               	bsf	4037,5,c	;volatile
 19238                           
 19239                           ;i2c.c: 90: SSP1CON2bits.ACKEN = 1;
 19240  01AB86  88C5               	bsf	4037,4,c	;volatile
 19241  01AB88                     l1521:
 19242  01AB88  A8C5               	btfss	4037,4,c	;volatile
 19243  01AB8A  0012               	return	
 19244  01AB8C  D7FD               	goto	l1521
 19245  01AB8E                     __end_of__i2c_not_acknowledge:
 19246                           	opt stack 0
 19247                           tblptru	equ	0xFF8
 19248                           tblptrh	equ	0xFF7
 19249                           tblptrl	equ	0xFF6
 19250                           tablat	equ	0xFF5
 19251                           prodh	equ	0xFF4
 19252                           prodl	equ	0xFF3
 19253                           intcon	equ	0xFF2
 19254                           intcon2	equ	0xFF1
 19255                           intcon3	equ	0xFF0
 19256                           postinc0	equ	0xFEE
 19257                           wreg	equ	0xFE8
 19258                           indf1	equ	0xFE7
 19259                           postinc1	equ	0xFE6
 19260                           postdec1	equ	0xFE5
 19261                           plusw1	equ	0xFE3
 19262                           fsr1h	equ	0xFE2
 19263                           fsr1l	equ	0xFE1
 19264                           indf2	equ	0xFDF
 19265                           postinc2	equ	0xFDE
 19266                           postdec2	equ	0xFDD
 19267                           plusw2	equ	0xFDB
 19268                           fsr2h	equ	0xFDA
 19269                           fsr2l	equ	0xFD9
 19270                           status	equ	0xFD8
 19271                           
 19272 ;; *************** function __i2c_get *****************
 19273 ;; Defined at:
 19274 ;;		line 64 in file "i2c.c"
 19275 ;; Parameters:    Size  Location     Type
 19276 ;;		None
 19277 ;; Auto vars:     Size  Location     Type
 19278 ;;		None
 19279 ;; Return value:  Size  Location     Type
 19280 ;;                  1    wreg      unsigned char 
 19281 ;; Registers used:
 19282 ;;		wreg, status,2
 19283 ;; Tracked objects:
 19284 ;;		On entry : 0/0
 19285 ;;		On exit  : 0/0
 19286 ;;		Unchanged: 0/0
 19287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19292 ;;Total ram usage:        0 bytes
 19293 ;; Hardware stack levels used:    1
 19294 ;; Hardware stack levels required when called:   10
 19295 ;; This function calls:
 19296 ;;		Nothing
 19297 ;; This function is called by:
 19298 ;;		__i2c_read
 19299 ;;		_i2c_adc_read
 19300 ;; This function uses a non-reentrant model
 19301 ;;
 19302                           
 19303                           	psect	text91
 19304  01AB8E                     __ptext91:
 19305                           	opt stack 0
 19306  01AB8E                     __i2c_get:
 19307                           	opt stack 15
 19308                           
 19309                           ;i2c.c: 66: SSP1CON2bits.RCEN = 1 ;
 19310                           
 19311                           ;incstack = 0
 19312  01AB8E  86C5               	bsf	4037,3,c	;volatile
 19313  01AB90                     l1503:
 19314  01AB90  B6C5               	btfsc	4037,3,c	;volatile
 19315  01AB92  D7FE               	goto	l1503
 19316                           
 19317                           ;i2c.c: 68: return SSP1BUF;
 19318  01AB94  50C9               	movf	4041,w,c	;volatile
 19319  01AB96  0012               	return	
 19320  01AB98                     __end_of__i2c_get:
 19321                           	opt stack 0
 19322                           tblptru	equ	0xFF8
 19323                           tblptrh	equ	0xFF7
 19324                           tblptrl	equ	0xFF6
 19325                           tablat	equ	0xFF5
 19326                           prodh	equ	0xFF4
 19327                           prodl	equ	0xFF3
 19328                           intcon	equ	0xFF2
 19329                           intcon2	equ	0xFF1
 19330                           intcon3	equ	0xFF0
 19331                           postinc0	equ	0xFEE
 19332                           wreg	equ	0xFE8
 19333                           indf1	equ	0xFE7
 19334                           postinc1	equ	0xFE6
 19335                           postdec1	equ	0xFE5
 19336                           plusw1	equ	0xFE3
 19337                           fsr1h	equ	0xFE2
 19338                           fsr1l	equ	0xFE1
 19339                           indf2	equ	0xFDF
 19340                           postinc2	equ	0xFDE
 19341                           postdec2	equ	0xFDD
 19342                           plusw2	equ	0xFDB
 19343                           fsr2h	equ	0xFDA
 19344                           fsr2l	equ	0xFD9
 19345                           status	equ	0xFD8
 19346                           
 19347 ;; *************** function __i2c_acknowledge *****************
 19348 ;; Defined at:
 19349 ;;		line 79 in file "i2c.c"
 19350 ;; Parameters:    Size  Location     Type
 19351 ;;		None
 19352 ;; Auto vars:     Size  Location     Type
 19353 ;;		None
 19354 ;; Return value:  Size  Location     Type
 19355 ;;                  1    wreg      void 
 19356 ;; Registers used:
 19357 ;;		None
 19358 ;; Tracked objects:
 19359 ;;		On entry : 0/0
 19360 ;;		On exit  : 0/0
 19361 ;;		Unchanged: 0/0
 19362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19367 ;;Total ram usage:        0 bytes
 19368 ;; Hardware stack levels used:    1
 19369 ;; Hardware stack levels required when called:   10
 19370 ;; This function calls:
 19371 ;;		Nothing
 19372 ;; This function is called by:
 19373 ;;		__i2c_read
 19374 ;;		_i2c_adc_read
 19375 ;; This function uses a non-reentrant model
 19376 ;;
 19377                           
 19378                           	psect	text92
 19379  01AB98                     __ptext92:
 19380                           	opt stack 0
 19381  01AB98                     __i2c_acknowledge:
 19382                           	opt stack 15
 19383                           
 19384                           ;i2c.c: 81: SSP1CON2bits.ACKDT = 0;
 19385                           
 19386                           ;incstack = 0
 19387  01AB98  9AC5               	bcf	4037,5,c	;volatile
 19388                           
 19389                           ;i2c.c: 82: SSP1CON2bits.ACKEN = 1;
 19390  01AB9A  88C5               	bsf	4037,4,c	;volatile
 19391  01AB9C                     l1515:
 19392  01AB9C  A8C5               	btfss	4037,4,c	;volatile
 19393  01AB9E  0012               	return	
 19394  01ABA0  D7FD               	goto	l1515
 19395  01ABA2                     __end_of__i2c_acknowledge:
 19396                           	opt stack 0
 19397                           tblptru	equ	0xFF8
 19398                           tblptrh	equ	0xFF7
 19399                           tblptrl	equ	0xFF6
 19400                           tablat	equ	0xFF5
 19401                           prodh	equ	0xFF4
 19402                           prodl	equ	0xFF3
 19403                           intcon	equ	0xFF2
 19404                           intcon2	equ	0xFF1
 19405                           intcon3	equ	0xFF0
 19406                           postinc0	equ	0xFEE
 19407                           wreg	equ	0xFE8
 19408                           indf1	equ	0xFE7
 19409                           postinc1	equ	0xFE6
 19410                           postdec1	equ	0xFE5
 19411                           plusw1	equ	0xFE3
 19412                           fsr1h	equ	0xFE2
 19413                           fsr1l	equ	0xFE1
 19414                           indf2	equ	0xFDF
 19415                           postinc2	equ	0xFDE
 19416                           postdec2	equ	0xFDD
 19417                           plusw2	equ	0xFDB
 19418                           fsr2h	equ	0xFDA
 19419                           fsr2l	equ	0xFD9
 19420                           status	equ	0xFD8
 19421                           
 19422 ;; *************** function _display_update *****************
 19423 ;; Defined at:
 19424 ;;		line 174 in file "display.c"
 19425 ;; Parameters:    Size  Location     Type
 19426 ;;		None
 19427 ;; Auto vars:     Size  Location     Type
 19428 ;;		None
 19429 ;; Return value:  Size  Location     Type
 19430 ;;                  1    wreg      void 
 19431 ;; Registers used:
 19432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19433 ;; Tracked objects:
 19434 ;;		On entry : 0/0
 19435 ;;		On exit  : 0/0
 19436 ;;		Unchanged: 0/0
 19437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19442 ;;Total ram usage:        0 bytes
 19443 ;; Hardware stack levels used:    1
 19444 ;; Hardware stack levels required when called:   14
 19445 ;; This function calls:
 19446 ;;		_i2c_display_cursor
 19447 ;;		_i2c_display_write_fixed
 19448 ;; This function is called by:
 19449 ;;		_main
 19450 ;; This function uses a non-reentrant model
 19451 ;;
 19452                           
 19453                           	psect	text93
 19454  01865E                     __ptext93:
 19455                           	opt stack 0
 19456  01865E                     _display_update:
 19457                           	opt stack 16
 19458                           
 19459                           ;display.c: 176: i2c_display_cursor(0, 0);
 19460                           
 19461                           ;incstack = 0
 19462  01865E  0E00               	movlw	0
 19463  018660  0100               	movlb	0	; () banked
 19464  018662  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 19465  018664  0E00               	movlw	0
 19466  018666  EC39  F0D1         	call	_i2c_display_cursor
 19467                           
 19468                           ;display.c: 177: i2c_display_write_fixed(&display_content[0][0], 20);
 19469  01866A  0E54               	movlw	low _display_content
 19470  01866C  0100               	movlb	0	; () banked
 19471  01866E  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 19472  018670  0E03               	movlw	high _display_content
 19473  018672  0100               	movlb	0	; () banked
 19474  018674  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 19475  018676  0E14               	movlw	20
 19476  018678  0100               	movlb	0	; () banked
 19477  01867A  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 19478  01867C  EC6E  F0CA         	call	_i2c_display_write_fixed	;wreg free
 19479                           
 19480                           ;display.c: 178: i2c_display_cursor(1, 0);
 19481  018680  0E00               	movlw	0
 19482  018682  0100               	movlb	0	; () banked
 19483  018684  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 19484  018686  0E01               	movlw	1
 19485  018688  EC39  F0D1         	call	_i2c_display_cursor
 19486                           
 19487                           ;display.c: 179: i2c_display_write_fixed(&display_content[1][0], 20);
 19488  01868C  0E68               	movlw	low (_display_content+20)
 19489  01868E  0100               	movlb	0	; () banked
 19490  018690  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 19491  018692  0E03               	movlw	high (_display_content+20)
 19492  018694  0100               	movlb	0	; () banked
 19493  018696  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 19494  018698  0E14               	movlw	20
 19495  01869A  0100               	movlb	0	; () banked
 19496  01869C  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 19497  01869E  EC6E  F0CA         	call	_i2c_display_write_fixed	;wreg free
 19498                           
 19499                           ;display.c: 180: i2c_display_cursor(2, 0);
 19500  0186A2  0E00               	movlw	0
 19501  0186A4  0100               	movlb	0	; () banked
 19502  0186A6  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 19503  0186A8  0E02               	movlw	2
 19504  0186AA  EC39  F0D1         	call	_i2c_display_cursor
 19505                           
 19506                           ;display.c: 181: i2c_display_write_fixed(&display_content[2][0], 20);
 19507  0186AE  0E7C               	movlw	low (_display_content+40)
 19508  0186B0  0100               	movlb	0	; () banked
 19509  0186B2  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 19510  0186B4  0E03               	movlw	high (_display_content+40)
 19511  0186B6  0100               	movlb	0	; () banked
 19512  0186B8  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 19513  0186BA  0E14               	movlw	20
 19514  0186BC  0100               	movlb	0	; () banked
 19515  0186BE  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 19516  0186C0  EC6E  F0CA         	call	_i2c_display_write_fixed	;wreg free
 19517                           
 19518                           ;display.c: 182: i2c_display_cursor(3, 0);
 19519  0186C4  0E00               	movlw	0
 19520  0186C6  0100               	movlb	0	; () banked
 19521  0186C8  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 19522  0186CA  0E03               	movlw	3
 19523  0186CC  EC39  F0D1         	call	_i2c_display_cursor
 19524                           
 19525                           ;display.c: 183: i2c_display_write_fixed(&display_content[3][0], 20);
 19526  0186D0  0E90               	movlw	low (_display_content+60)
 19527  0186D2  0100               	movlb	0	; () banked
 19528  0186D4  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 19529  0186D6  0E03               	movlw	high (_display_content+60)
 19530  0186D8  0100               	movlb	0	; () banked
 19531  0186DA  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 19532  0186DC  0E14               	movlw	20
 19533  0186DE  0100               	movlb	0	; () banked
 19534  0186E0  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 19535  0186E2  EC6E  F0CA         	call	_i2c_display_write_fixed	;wreg free
 19536  0186E6  0012               	return		;funcret
 19537  0186E8                     __end_of_display_update:
 19538                           	opt stack 0
 19539                           tblptru	equ	0xFF8
 19540                           tblptrh	equ	0xFF7
 19541                           tblptrl	equ	0xFF6
 19542                           tablat	equ	0xFF5
 19543                           prodh	equ	0xFF4
 19544                           prodl	equ	0xFF3
 19545                           intcon	equ	0xFF2
 19546                           intcon2	equ	0xFF1
 19547                           intcon3	equ	0xFF0
 19548                           postinc0	equ	0xFEE
 19549                           wreg	equ	0xFE8
 19550                           indf1	equ	0xFE7
 19551                           postinc1	equ	0xFE6
 19552                           postdec1	equ	0xFE5
 19553                           plusw1	equ	0xFE3
 19554                           fsr1h	equ	0xFE2
 19555                           fsr1l	equ	0xFE1
 19556                           indf2	equ	0xFDF
 19557                           postinc2	equ	0xFDE
 19558                           postdec2	equ	0xFDD
 19559                           plusw2	equ	0xFDB
 19560                           fsr2h	equ	0xFDA
 19561                           fsr2l	equ	0xFD9
 19562                           status	equ	0xFD8
 19563                           
 19564 ;; *************** function _i2c_display_write_fixed *****************
 19565 ;; Defined at:
 19566 ;;		line 364 in file "i2c.c"
 19567 ;; Parameters:    Size  Location     Type
 19568 ;;  data            2    5[BANK0 ] PTR unsigned char 
 19569 ;;		 -> display_content(80), 
 19570 ;;  length          1    7[BANK0 ] unsigned char 
 19571 ;; Auto vars:     Size  Location     Type
 19572 ;;  pos             1    8[BANK0 ] unsigned char 
 19573 ;; Return value:  Size  Location     Type
 19574 ;;                  1    wreg      void 
 19575 ;; Registers used:
 19576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19577 ;; Tracked objects:
 19578 ;;		On entry : 0/0
 19579 ;;		On exit  : 0/0
 19580 ;;		Unchanged: 0/0
 19581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19582 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19583 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19585 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19586 ;;Total ram usage:        4 bytes
 19587 ;; Hardware stack levels used:    1
 19588 ;; Hardware stack levels required when called:   11
 19589 ;; This function calls:
 19590 ;;		__i2c_send
 19591 ;;		__i2c_start
 19592 ;;		__i2c_stop
 19593 ;;		__i2c_wait_idle
 19594 ;;		_i2c_set_frequency
 19595 ;; This function is called by:
 19596 ;;		_display_update
 19597 ;; This function uses a non-reentrant model
 19598 ;;
 19599                           
 19600                           	psect	text94
 19601  0194DC                     __ptext94:
 19602                           	opt stack 0
 19603  0194DC                     _i2c_display_write_fixed:
 19604                           	opt stack 18
 19605                           
 19606                           ;i2c.c: 366: uint8_t pos;
 19607                           ;i2c.c: 369: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 19608                           
 19609                           ;incstack = 0
 19610  0194DC  0E00               	movlw	0
 19611  0194DE  EC5B  F0C8         	call	_i2c_set_frequency
 19612                           
 19613                           ;i2c.c: 371: _i2c_wait_idle();
 19614  0194E2  EC76  F0C7         	call	__i2c_wait_idle	;wreg free
 19615                           
 19616                           ;i2c.c: 372: _i2c_start();
 19617  0194E6  ECDF  F0D5         	call	__i2c_start	;wreg free
 19618                           
 19619                           ;i2c.c: 373: _i2c_wait_idle();
 19620  0194EA  EC76  F0C7         	call	__i2c_wait_idle	;wreg free
 19621                           
 19622                           ;i2c.c: 374: _i2c_send(0b01111000);
 19623  0194EE  0E78               	movlw	120
 19624  0194F0  ECD6  F0D5         	call	__i2c_send
 19625                           
 19626                           ;i2c.c: 375: _i2c_wait_idle();
 19627  0194F4  EC76  F0C7         	call	__i2c_wait_idle	;wreg free
 19628                           
 19629                           ;i2c.c: 376: _i2c_send(0b01000000);
 19630  0194F8  0E40               	movlw	64
 19631  0194FA  ECD6  F0D5         	call	__i2c_send
 19632                           
 19633                           ;i2c.c: 377: _i2c_wait_idle();
 19634  0194FE  EC76  F0C7         	call	__i2c_wait_idle	;wreg free
 19635                           
 19636                           ;i2c.c: 380: for(pos=0; pos<length; ++pos)
 19637  019502  0E00               	movlw	0
 19638  019504  0100               	movlb	0	; () banked
 19639  019506  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 19640  019508  D012               	goto	l20612
 19641  01950A                     l20606:
 19642                           
 19643                           ; BSR set to: 0
 19644                           ;i2c.c: 381: {
 19645                           ;i2c.c: 382: _i2c_send(data[pos]);
 19646  01950A  0100               	movlb	0	; () banked
 19647  01950C  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 19648  01950E  0D01               	mullw	1
 19649  019510  50F3               	movf	prodl,w,c
 19650  019512  0100               	movlb	0	; () banked
 19651  019514  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 19652  019516  6ED9               	movwf	fsr2l,c
 19653  019518  50F4               	movf	prodh,w,c
 19654  01951A  0100               	movlb	0	; () banked
 19655  01951C  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 19656  01951E  6EDA               	movwf	fsr2h,c
 19657  019520  50DF               	movf	indf2,w,c
 19658  019522  ECD6  F0D5         	call	__i2c_send
 19659                           
 19660                           ;i2c.c: 383: _i2c_wait_idle();
 19661  019526  EC76  F0C7         	call	__i2c_wait_idle	;wreg free
 19662  01952A  0100               	movlb	0	; () banked
 19663  01952C  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 19664  01952E                     l20612:
 19665                           
 19666                           ; BSR set to: 0
 19667  01952E  0100               	movlb	0	; () banked
 19668  019530  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 19669  019532  0100               	movlb	0	; () banked
 19670  019534  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 19671  019536  A0D8               	btfss	status,0,c
 19672  019538  D7E8               	goto	l20606
 19673                           
 19674                           ; BSR set to: 0
 19675                           ;i2c.c: 384: }
 19676                           ;i2c.c: 386: _i2c_stop();
 19677                           
 19678                           ; BSR set to: 0
 19679  01953A  ECDB  F0D5         	call	__i2c_stop	;wreg free
 19680  01953E  0012               	return		;funcret
 19681  019540                     __end_of_i2c_display_write_fixed:
 19682                           	opt stack 0
 19683                           tblptru	equ	0xFF8
 19684                           tblptrh	equ	0xFF7
 19685                           tblptrl	equ	0xFF6
 19686                           tablat	equ	0xFF5
 19687                           prodh	equ	0xFF4
 19688                           prodl	equ	0xFF3
 19689                           intcon	equ	0xFF2
 19690                           intcon2	equ	0xFF1
 19691                           intcon3	equ	0xFF0
 19692                           postinc0	equ	0xFEE
 19693                           wreg	equ	0xFE8
 19694                           indf1	equ	0xFE7
 19695                           postinc1	equ	0xFE6
 19696                           postdec1	equ	0xFE5
 19697                           plusw1	equ	0xFE3
 19698                           fsr1h	equ	0xFE2
 19699                           fsr1l	equ	0xFE1
 19700                           indf2	equ	0xFDF
 19701                           postinc2	equ	0xFDE
 19702                           postdec2	equ	0xFDD
 19703                           plusw2	equ	0xFDB
 19704                           fsr2h	equ	0xFDA
 19705                           fsr2l	equ	0xFD9
 19706                           status	equ	0xFD8
 19707                           
 19708 ;; *************** function _i2c_display_cursor *****************
 19709 ;; Defined at:
 19710 ;;		line 324 in file "i2c.c"
 19711 ;; Parameters:    Size  Location     Type
 19712 ;;  line            1    wreg     unsigned char 
 19713 ;;  position        1   13[BANK0 ] unsigned char 
 19714 ;; Auto vars:     Size  Location     Type
 19715 ;;  line            1   14[BANK0 ] unsigned char 
 19716 ;;  address         1   15[BANK0 ] unsigned char 
 19717 ;; Return value:  Size  Location     Type
 19718 ;;                  1    wreg      void 
 19719 ;; Registers used:
 19720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19721 ;; Tracked objects:
 19722 ;;		On entry : 0/0
 19723 ;;		On exit  : 0/0
 19724 ;;		Unchanged: 0/0
 19725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19726 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19727 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19729 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19730 ;;Total ram usage:        3 bytes
 19731 ;; Hardware stack levels used:    1
 19732 ;; Hardware stack levels required when called:   13
 19733 ;; This function calls:
 19734 ;;		__ic2_display_set_address
 19735 ;;		_i2c_set_frequency
 19736 ;; This function is called by:
 19737 ;;		_display_update
 19738 ;; This function uses a non-reentrant model
 19739 ;;
 19740                           
 19741                           	psect	text95
 19742  01A272                     __ptext95:
 19743                           	opt stack 0
 19744  01A272                     _i2c_display_cursor:
 19745                           	opt stack 16
 19746                           
 19747                           ;incstack = 0
 19748                           ;i2c_display_cursor@line stored from wreg
 19749  01A272  0100               	movlb	0	; () banked
 19750  01A274  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 19751                           
 19752                           ;i2c.c: 326: uint8_t address;
 19753                           ;i2c.c: 329: line &= 0b11;
 19754  01A276  0E03               	movlw	3
 19755  01A278  0100               	movlb	0	; () banked
 19756  01A27A  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 19757                           
 19758                           ;i2c.c: 330: address = line<<5;
 19759  01A27C  0100               	movlb	0	; () banked
 19760  01A27E  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 19761  01A280  46E8               	rlncf	wreg,f,c
 19762  01A282  0BE0               	andlw	224
 19763  01A284  0100               	movlb	0	; () banked
 19764  01A286  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 19765                           
 19766                           ;i2c.c: 331: position &= 0b11111;
 19767  01A288  0E1F               	movlw	31
 19768  01A28A  0100               	movlb	0	; () banked
 19769  01A28C  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 19770                           
 19771                           ;i2c.c: 332: address |= position;
 19772  01A28E  0100               	movlb	0	; () banked
 19773  01A290  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 19774  01A292  0100               	movlb	0	; () banked
 19775  01A294  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 19776                           
 19777                           ; BSR set to: 0
 19778                           ;i2c.c: 335: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 19779  01A296  0E00               	movlw	0
 19780  01A298  EC5B  F0C8         	call	_i2c_set_frequency
 19781                           
 19782                           ;i2c.c: 338: _ic2_display_set_address(address);
 19783  01A29C  0100               	movlb	0	; () banked
 19784  01A29E  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 19785  01A2A0  EC53  F0D1         	call	__ic2_display_set_address
 19786  01A2A4  0012               	return		;funcret
 19787  01A2A6                     __end_of_i2c_display_cursor:
 19788                           	opt stack 0
 19789                           tblptru	equ	0xFF8
 19790                           tblptrh	equ	0xFF7
 19791                           tblptrl	equ	0xFF6
 19792                           tablat	equ	0xFF5
 19793                           prodh	equ	0xFF4
 19794                           prodl	equ	0xFF3
 19795                           intcon	equ	0xFF2
 19796                           intcon2	equ	0xFF1
 19797                           intcon3	equ	0xFF0
 19798                           postinc0	equ	0xFEE
 19799                           wreg	equ	0xFE8
 19800                           indf1	equ	0xFE7
 19801                           postinc1	equ	0xFE6
 19802                           postdec1	equ	0xFE5
 19803                           plusw1	equ	0xFE3
 19804                           fsr1h	equ	0xFE2
 19805                           fsr1l	equ	0xFE1
 19806                           indf2	equ	0xFDF
 19807                           postinc2	equ	0xFDE
 19808                           postdec2	equ	0xFDD
 19809                           plusw2	equ	0xFDB
 19810                           fsr2h	equ	0xFDA
 19811                           fsr2l	equ	0xFD9
 19812                           status	equ	0xFD8
 19813                           
 19814 ;; *************** function __ic2_display_set_address *****************
 19815 ;; Defined at:
 19816 ;;		line 311 in file "i2c.c"
 19817 ;; Parameters:    Size  Location     Type
 19818 ;;  address         1    wreg     unsigned char 
 19819 ;; Auto vars:     Size  Location     Type
 19820 ;;  address         1   10[BANK0 ] unsigned char 
 19821 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 19822 ;; Return value:  Size  Location     Type
 19823 ;;                  1    wreg      void 
 19824 ;; Registers used:
 19825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19826 ;; Tracked objects:
 19827 ;;		On entry : 0/0
 19828 ;;		On exit  : 0/0
 19829 ;;		Unchanged: 0/0
 19830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19832 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19834 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19835 ;;Total ram usage:        3 bytes
 19836 ;; Hardware stack levels used:    1
 19837 ;; Hardware stack levels required when called:   12
 19838 ;; This function calls:
 19839 ;;		__i2c_write
 19840 ;;		_i2c_set_frequency
 19841 ;; This function is called by:
 19842 ;;		_i2c_display_cursor
 19843 ;; This function uses a non-reentrant model
 19844 ;;
 19845                           
 19846                           	psect	text96
 19847  01A2A6                     __ptext96:
 19848                           	opt stack 0
 19849  01A2A6                     __ic2_display_set_address:
 19850                           	opt stack 16
 19851                           
 19852                           ;incstack = 0
 19853                           ;__ic2_display_set_address@address stored from wreg
 19854  01A2A6  0100               	movlb	0	; () banked
 19855  01A2A8  6F6A               	movwf	__ic2_display_set_address@address& (0+255),b
 19856                           
 19857                           ;i2c.c: 313: uint8_t data_array[2];
 19858                           ;i2c.c: 314: data_array[0] = 0b00000000;
 19859  01A2AA  0E00               	movlw	0
 19860  01A2AC  0100               	movlb	0	; () banked
 19861  01A2AE  6F6B               	movwf	__ic2_display_set_address@data_array& (0+255),b
 19862                           
 19863                           ; BSR set to: 0
 19864                           ;i2c.c: 315: data_array[1] = 0b10000000 | address;
 19865  01A2B0  0100               	movlb	0	; () banked
 19866  01A2B2  516A               	movf	__ic2_display_set_address@address& (0+255),w,b
 19867  01A2B4  0980               	iorlw	128
 19868  01A2B6  0100               	movlb	0	; () banked
 19869  01A2B8  6F6C               	movwf	(__ic2_display_set_address@data_array+1)& (0+255),b
 19870                           
 19871                           ; BSR set to: 0
 19872                           ;i2c.c: 318: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 19873  01A2BA  0E00               	movlw	0
 19874  01A2BC  EC5B  F0C8         	call	_i2c_set_frequency
 19875                           
 19876                           ;i2c.c: 321: _i2c_write(0b01111000, &data_array[0], 2);
 19877  01A2C0  0E6B               	movlw	low __ic2_display_set_address@data_array
 19878  01A2C2  0100               	movlb	0	; () banked
 19879  01A2C4  6F65               	movwf	__i2c_write@data& (0+255),b
 19880  01A2C6  0E00               	movlw	high __ic2_display_set_address@data_array
 19881  01A2C8  0100               	movlb	0	; () banked
 19882  01A2CA  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 19883  01A2CC  0E02               	movlw	2
 19884  01A2CE  0100               	movlb	0	; () banked
 19885  01A2D0  6F67               	movwf	__i2c_write@length& (0+255),b
 19886  01A2D2  0E78               	movlw	120
 19887  01A2D4  ECDC  F0CC         	call	__i2c_write
 19888  01A2D8  0012               	return		;funcret
 19889  01A2DA                     __end_of__ic2_display_set_address:
 19890                           	opt stack 0
 19891                           tblptru	equ	0xFF8
 19892                           tblptrh	equ	0xFF7
 19893                           tblptrl	equ	0xFF6
 19894                           tablat	equ	0xFF5
 19895                           prodh	equ	0xFF4
 19896                           prodl	equ	0xFF3
 19897                           intcon	equ	0xFF2
 19898                           intcon2	equ	0xFF1
 19899                           intcon3	equ	0xFF0
 19900                           postinc0	equ	0xFEE
 19901                           wreg	equ	0xFE8
 19902                           indf1	equ	0xFE7
 19903                           postinc1	equ	0xFE6
 19904                           postdec1	equ	0xFE5
 19905                           plusw1	equ	0xFE3
 19906                           fsr1h	equ	0xFE2
 19907                           fsr1l	equ	0xFE1
 19908                           indf2	equ	0xFDF
 19909                           postinc2	equ	0xFDE
 19910                           postdec2	equ	0xFDD
 19911                           plusw2	equ	0xFDB
 19912                           fsr2h	equ	0xFDA
 19913                           fsr2l	equ	0xFD9
 19914                           status	equ	0xFD8
 19915                           
 19916 ;; *************** function _display_prepare *****************
 19917 ;; Defined at:
 19918 ;;		line 108 in file "display.c"
 19919 ;; Parameters:    Size  Location     Type
 19920 ;;  mode            1    wreg     unsigned char 
 19921 ;; Auto vars:     Size  Location     Type
 19922 ;;  mode            1  116[BANK0 ] unsigned char 
 19923 ;; Return value:  Size  Location     Type
 19924 ;;                  1    wreg      void 
 19925 ;; Registers used:
 19926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19927 ;; Tracked objects:
 19928 ;;		On entry : 0/0
 19929 ;;		On exit  : 0/0
 19930 ;;		Unchanged: 0/0
 19931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19933 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19934 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19935 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19936 ;;Total ram usage:        3 bytes
 19937 ;; Hardware stack levels used:    1
 19938 ;; Hardware stack levels required when called:   15
 19939 ;; This function calls:
 19940 ;;		__display_charger
 19941 ;;		__display_clear
 19942 ;;		__display_efficiency
 19943 ;;		__display_inout
 19944 ;;		__display_outputs
 19945 ;;		__display_temperature
 19946 ;;		__display_time
 19947 ;;		__display_usb
 19948 ;; This function is called by:
 19949 ;;		_main
 19950 ;; This function uses a non-reentrant model
 19951 ;;
 19952                           
 19953                           	psect	text97
 19954  018770                     __ptext97:
 19955                           	opt stack 0
 19956  018770                     _display_prepare:
 19957                           	opt stack 15
 19958                           
 19959                           ;incstack = 0
 19960                           ;display_prepare@mode stored from wreg
 19961  018770  0100               	movlb	0	; () banked
 19962  018772  6FD4               	movwf	display_prepare@mode& (0+255),b
 19963                           
 19964                           ;display.c: 110: _display_clear();
 19965  018774  ECA0  F0CA         	call	__display_clear	;wreg free
 19966                           
 19967                           ;display.c: 112: switch(mode&0xF0)
 19968  018778  D01C               	goto	l22330
 19969  01877A                     l22314:
 19970                           
 19971                           ;display.c: 115: _display_inout();
 19972  01877A  EC08  F0A0         	call	__display_inout	;wreg free
 19973                           
 19974                           ;display.c: 116: break;
 19975  01877E  0012               	return	
 19976  018780                     l22316:
 19977                           
 19978                           ;display.c: 118: _display_time(mode);
 19979  018780  0100               	movlb	0	; () banked
 19980  018782  51D4               	movf	display_prepare@mode& (0+255),w,b
 19981  018784  EC00  F080         	call	__display_time
 19982                           
 19983                           ;display.c: 119: break;
 19984  018788  0012               	return	
 19985  01878A                     l22318:
 19986                           
 19987                           ;display.c: 121: _display_usb();
 19988  01878A  ECF4  F0A4         	call	__display_usb	;wreg free
 19989                           
 19990                           ;display.c: 122: break;
 19991  01878E  0012               	return	
 19992  018790                     l22320:
 19993                           
 19994                           ;display.c: 124: _display_outputs(mode);
 19995  018790  0100               	movlb	0	; () banked
 19996  018792  51D4               	movf	display_prepare@mode& (0+255),w,b
 19997  018794  ECDC  F09E         	call	__display_outputs
 19998                           
 19999                           ;display.c: 125: break;
 20000  018798  0012               	return	
 20001  01879A                     l22322:
 20002                           
 20003                           ;display.c: 127: _display_charger();
 20004  01879A  EC8B  F093         	call	__display_charger	;wreg free
 20005                           
 20006                           ;display.c: 128: break;
 20007  01879E  0012               	return	
 20008  0187A0                     l22324:
 20009                           
 20010                           ;display.c: 130: _display_efficiency();
 20011  0187A0  EC18  F090         	call	__display_efficiency	;wreg free
 20012                           
 20013                           ;display.c: 131: break;
 20014  0187A4  0012               	return	
 20015  0187A6                     l22326:
 20016                           
 20017                           ;display.c: 133: _display_temperature();
 20018  0187A6  EC20  F0A2         	call	__display_temperature	;wreg free
 20019                           
 20020                           ;display.c: 134: break;
 20021  0187AA  0012               	return	
 20022  0187AC                     l22328:
 20023                           
 20024                           ;display.c: 136: _display_inout();
 20025  0187AC  EC08  F0A0         	call	__display_inout	;wreg free
 20026                           
 20027                           ;display.c: 137: }
 20028  0187B0  0012               	return	
 20029  0187B2                     l22330:
 20030  0187B2  0100               	movlb	0	; () banked
 20031  0187B4  51D4               	movf	display_prepare@mode& (0+255),w,b
 20032  0187B6  0BF0               	andlw	240
 20033  0187B8  0100               	movlb	0	; () banked
 20034  0187BA  6FD2               	movwf	??_display_prepare& (0+255),b
 20035  0187BC  6BD3               	clrf	(??_display_prepare+1)& (0+255),b
 20036                           
 20037                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20038                           ; Switch size 1, requested type "space"
 20039                           ; Number of cases is 1, Range of values is 0 to 0
 20040                           ; switch strategies available:
 20041                           ; Name         Instructions Cycles
 20042                           ; simple_byte            4     3 (average)
 20043                           ;	Chosen strategy is simple_byte
 20044  0187BE  0100               	movlb	0	; () banked
 20045  0187C0  51D3               	movf	(??_display_prepare+1)& (0+255),w,b
 20046  0187C2  0A00               	xorlw	0	; case 0
 20047  0187C4  A4D8               	btfss	status,2,c
 20048  0187C6  D7F2               	goto	l22328
 20049                           
 20050                           ; BSR set to: 0
 20051                           ; Switch size 1, requested type "space"
 20052                           ; Number of cases is 7, Range of values is 0 to 96
 20053                           ; switch strategies available:
 20054                           ; Name         Instructions Cycles
 20055                           ; simple_byte           22    12 (average)
 20056                           ;	Chosen strategy is simple_byte
 20057  0187C8  0100               	movlb	0	; () banked
 20058  0187CA  51D2               	movf	??_display_prepare& (0+255),w,b
 20059  0187CC  0A00               	xorlw	0	; case 0
 20060  0187CE  B4D8               	btfsc	status,2,c
 20061  0187D0  D7D4               	goto	l22314
 20062  0187D2  0A10               	xorlw	16	; case 16
 20063  0187D4  B4D8               	btfsc	status,2,c
 20064  0187D6  D7D4               	goto	l22316
 20065  0187D8  0A30               	xorlw	48	; case 32
 20066  0187DA  B4D8               	btfsc	status,2,c
 20067  0187DC  D7D6               	goto	l22318
 20068  0187DE  0A10               	xorlw	16	; case 48
 20069  0187E0  B4D8               	btfsc	status,2,c
 20070  0187E2  D7D6               	goto	l22320
 20071  0187E4  0A70               	xorlw	112	; case 64
 20072  0187E6  B4D8               	btfsc	status,2,c
 20073  0187E8  D7D8               	goto	l22322
 20074  0187EA  0A10               	xorlw	16	; case 80
 20075  0187EC  B4D8               	btfsc	status,2,c
 20076  0187EE  D7D8               	goto	l22324
 20077  0187F0  0A30               	xorlw	48	; case 96
 20078  0187F2  B4D8               	btfsc	status,2,c
 20079  0187F4  D7D8               	goto	l22326
 20080  0187F6  D7DA               	goto	l22328
 20081  0187F8                     __end_of_display_prepare:
 20082                           	opt stack 0
 20083                           tblptru	equ	0xFF8
 20084                           tblptrh	equ	0xFF7
 20085                           tblptrl	equ	0xFF6
 20086                           tablat	equ	0xFF5
 20087                           prodh	equ	0xFF4
 20088                           prodl	equ	0xFF3
 20089                           intcon	equ	0xFF2
 20090                           intcon2	equ	0xFF1
 20091                           intcon3	equ	0xFF0
 20092                           postinc0	equ	0xFEE
 20093                           wreg	equ	0xFE8
 20094                           indf1	equ	0xFE7
 20095                           postinc1	equ	0xFE6
 20096                           postdec1	equ	0xFE5
 20097                           plusw1	equ	0xFE3
 20098                           fsr1h	equ	0xFE2
 20099                           fsr1l	equ	0xFE1
 20100                           indf2	equ	0xFDF
 20101                           postinc2	equ	0xFDE
 20102                           postdec2	equ	0xFDD
 20103                           plusw2	equ	0xFDB
 20104                           fsr2h	equ	0xFDA
 20105                           fsr2l	equ	0xFD9
 20106                           status	equ	0xFD8
 20107                           
 20108 ;; *************** function __display_usb *****************
 20109 ;; Defined at:
 20110 ;;		line 303 in file "display.c"
 20111 ;; Parameters:    Size  Location     Type
 20112 ;;		None
 20113 ;; Auto vars:     Size  Location     Type
 20114 ;;  header         20    0[BANK0 ] const unsigned char [20]
 20115 ;;  usb_off        17   20[BANK0 ] const unsigned char [17]
 20116 ;;  usb_on         16   53[BANK0 ] const unsigned char [16]
 20117 ;;  low            16   37[BANK0 ] const unsigned char [16]
 20118 ;;  cntr            1   69[BANK0 ] unsigned char 
 20119 ;; Return value:  Size  Location     Type
 20120 ;;                  1    wreg      void 
 20121 ;; Registers used:
 20122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 20123 ;; Tracked objects:
 20124 ;;		On entry : 0/0
 20125 ;;		On exit  : 0/0
 20126 ;;		Unchanged: 0/0
 20127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20129 ;;      Locals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20131 ;;      Totals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20132 ;;Total ram usage:       70 bytes
 20133 ;; Hardware stack levels used:    1
 20134 ;; Hardware stack levels required when called:   10
 20135 ;; This function calls:
 20136 ;;		Nothing
 20137 ;; This function is called by:
 20138 ;;		_display_prepare
 20139 ;; This function uses a non-reentrant model
 20140 ;;
 20141                           
 20142                           	psect	text98
 20143  0149E8                     __ptext98:
 20144                           	opt stack 0
 20145  0149E8                     __display_usb:
 20146                           	opt stack 19
 20147                           
 20148                           ;display.c: 305: uint8_t cntr;
 20149                           ;display.c: 306: const char header[] = "USB Charger Outputs";
 20150                           
 20151                           ;incstack = 0
 20152  0149E8  0EA1               	movlw	low __display_usb@F8712
 20153  0149EA  6EF6               	movwf	tblptrl,c
 20154  0149EC                     	if	1	;There is more than 1 active tblptr byte
 20155  0149EC  0EFC               	movlw	high __display_usb@F8712
 20156  0149EE  6EF7               	movwf	tblptrh,c
 20157  0149F0                     	endif
 20158  0149F0                     	if	1	;There are 3 active tblptr bytes
 20159  0149F0  0E00               	movlw	low (__display_usb@F8712 shr (0+16))
 20160  0149F2  6EF8               	movwf	tblptru,c
 20161  0149F4                     	endif
 20162  0149F4  EE20  F060         	lfsr	2,__display_usb@header
 20163  0149F8  0E13               	movlw	19
 20164  0149FA                     u20510:
 20165  0149FA  0009               	tblrd		*+
 20166  0149FC  CFF5 FFDE          	movff	tablat,postinc2
 20167  014A00  06E8               	decf	wreg,f,c
 20168  014A02  E2FB               	bc	u20510
 20169                           
 20170                           ;display.c: 307: const char low[] = "Battery too low";
 20171  014A04  0EC5               	movlw	low __display_usb@F8714
 20172  014A06  6EF6               	movwf	tblptrl,c
 20173  014A08                     	if	1	;There is more than 1 active tblptr byte
 20174  014A08  0EFD               	movlw	high __display_usb@F8714
 20175  014A0A  6EF7               	movwf	tblptrh,c
 20176  014A0C                     	endif
 20177  014A0C                     	if	1	;There are 3 active tblptr bytes
 20178  014A0C  0E00               	movlw	low (__display_usb@F8714 shr (0+16))
 20179  014A0E  6EF8               	movwf	tblptru,c
 20180  014A10                     	endif
 20181  014A10  EE20  F085         	lfsr	2,__display_usb@low
 20182  014A14  0E0F               	movlw	15
 20183  014A16                     u20520:
 20184  014A16  0009               	tblrd		*+
 20185  014A18  CFF5 FFDE          	movff	tablat,postinc2
 20186  014A1C  06E8               	decf	wreg,f,c
 20187  014A1E  E2FB               	bc	u20520
 20188                           
 20189                           ;display.c: 308: const char usb_on[] = "USB charging on";
 20190  014A20  0EB5               	movlw	low __display_usb@F8716
 20191  014A22  6EF6               	movwf	tblptrl,c
 20192  014A24                     	if	1	;There is more than 1 active tblptr byte
 20193  014A24  0EFD               	movlw	high __display_usb@F8716
 20194  014A26  6EF7               	movwf	tblptrh,c
 20195  014A28                     	endif
 20196  014A28                     	if	1	;There are 3 active tblptr bytes
 20197  014A28  0E00               	movlw	low (__display_usb@F8716 shr (0+16))
 20198  014A2A  6EF8               	movwf	tblptru,c
 20199  014A2C                     	endif
 20200  014A2C  EE20  F095         	lfsr	2,__display_usb@usb_on
 20201  014A30  0E0F               	movlw	15
 20202  014A32                     u20530:
 20203  014A32  0009               	tblrd		*+
 20204  014A34  CFF5 FFDE          	movff	tablat,postinc2
 20205  014A38  06E8               	decf	wreg,f,c
 20206  014A3A  E2FB               	bc	u20530
 20207                           
 20208                           ;display.c: 309: const char usb_off[] = "USB charging off";
 20209  014A3C  0E84               	movlw	low __display_usb@F8718
 20210  014A3E  6EF6               	movwf	tblptrl,c
 20211  014A40                     	if	1	;There is more than 1 active tblptr byte
 20212  014A40  0EFD               	movlw	high __display_usb@F8718
 20213  014A42  6EF7               	movwf	tblptrh,c
 20214  014A44                     	endif
 20215  014A44                     	if	1	;There are 3 active tblptr bytes
 20216  014A44  0E00               	movlw	low (__display_usb@F8718 shr (0+16))
 20217  014A46  6EF8               	movwf	tblptru,c
 20218  014A48                     	endif
 20219  014A48  EE20  F074         	lfsr	2,__display_usb@usb_off
 20220  014A4C  0E10               	movlw	16
 20221  014A4E                     u20540:
 20222  014A4E  0009               	tblrd		*+
 20223  014A50  CFF5 FFDE          	movff	tablat,postinc2
 20224  014A54  06E8               	decf	wreg,f,c
 20225  014A56  E2FB               	bc	u20540
 20226                           
 20227                           ;display.c: 312: cntr = 0;
 20228  014A58  0E00               	movlw	0
 20229  014A5A  0100               	movlb	0	; () banked
 20230  014A5C  6FA5               	movwf	__display_usb@cntr& (0+255),b
 20231                           
 20232                           ;display.c: 313: while(header[cntr])
 20233  014A5E  D016               	goto	l21116
 20234  014A60                     l21112:
 20235                           
 20236                           ; BSR set to: 0
 20237                           ;display.c: 314: display_content[0][cntr] = header[cntr++];
 20238  014A60  0100               	movlb	0	; () banked
 20239  014A62  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20240  014A64  0D01               	mullw	1
 20241  014A66  0E60               	movlw	low __display_usb@header
 20242  014A68  24F3               	addwf	prodl,w,c
 20243  014A6A  6ED9               	movwf	fsr2l,c
 20244  014A6C  0E00               	movlw	high __display_usb@header
 20245  014A6E  20F4               	addwfc	prodh,w,c
 20246  014A70  6EDA               	movwf	fsr2h,c
 20247  014A72  0100               	movlb	0	; () banked
 20248  014A74  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20249  014A76  0D01               	mullw	1
 20250  014A78  0E54               	movlw	low _display_content
 20251  014A7A  24F3               	addwf	prodl,w,c
 20252  014A7C  6EE1               	movwf	fsr1l,c
 20253  014A7E  0E03               	movlw	high _display_content
 20254  014A80  20F4               	addwfc	prodh,w,c
 20255  014A82  6EE2               	movwf	fsr1h,c
 20256  014A84  CFDF FFE7          	movff	indf2,indf1
 20257                           
 20258                           ; BSR set to: 0
 20259  014A88  0100               	movlb	0	; () banked
 20260  014A8A  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 20261  014A8C                     l21116:
 20262                           
 20263                           ; BSR set to: 0
 20264  014A8C  0100               	movlb	0	; () banked
 20265  014A8E  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20266  014A90  0D01               	mullw	1
 20267  014A92  0E60               	movlw	low __display_usb@header
 20268  014A94  24F3               	addwf	prodl,w,c
 20269  014A96  6ED9               	movwf	fsr2l,c
 20270  014A98  0E00               	movlw	high __display_usb@header
 20271  014A9A  20F4               	addwfc	prodh,w,c
 20272  014A9C  6EDA               	movwf	fsr2h,c
 20273  014A9E  50DF               	movf	indf2,w,c
 20274  014AA0  A4D8               	btfss	status,2,c
 20275  014AA2  D7DE               	goto	l21112
 20276                           
 20277                           ; BSR set to: 0
 20278                           ;display.c: 316: if(os.output_voltage<12000)
 20279                           
 20280                           ; BSR set to: 0
 20281  014AA4  0102               	movlb	2	; () banked
 20282  014AA6  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
 20283  014AA8  D008               	goto	l21120
 20284  014AAA  0EE0               	movlw	224
 20285  014AAC  0102               	movlb	2	; () banked
 20286  014AAE  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
 20287  014AB0  0E2E               	movlw	46
 20288  014AB2  0102               	movlb	2	; () banked
 20289  014AB4  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
 20290  014AB6  B0D8               	btfsc	status,0,c
 20291  014AB8  D026               	goto	l21128
 20292  014ABA                     l21120:
 20293                           
 20294                           ; BSR set to: 2
 20295                           ;display.c: 317: {
 20296                           ;display.c: 318: cntr = 0;
 20297  014ABA  0E00               	movlw	0
 20298  014ABC  0100               	movlb	0	; () banked
 20299  014ABE  6FA5               	movwf	__display_usb@cntr& (0+255),b
 20300                           
 20301                           ;display.c: 319: while(low[cntr])
 20302  014AC0  D016               	goto	l21126
 20303  014AC2                     l21122:
 20304                           
 20305                           ; BSR set to: 0
 20306                           ;display.c: 320: display_content[2][cntr] = low[cntr++];
 20307  014AC2  0100               	movlb	0	; () banked
 20308  014AC4  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20309  014AC6  0D01               	mullw	1
 20310  014AC8  0E85               	movlw	low __display_usb@low
 20311  014ACA  24F3               	addwf	prodl,w,c
 20312  014ACC  6ED9               	movwf	fsr2l,c
 20313  014ACE  0E00               	movlw	high __display_usb@low
 20314  014AD0  20F4               	addwfc	prodh,w,c
 20315  014AD2  6EDA               	movwf	fsr2h,c
 20316  014AD4  0100               	movlb	0	; () banked
 20317  014AD6  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20318  014AD8  0D01               	mullw	1
 20319  014ADA  0E7C               	movlw	low (_display_content+40)
 20320  014ADC  24F3               	addwf	prodl,w,c
 20321  014ADE  6EE1               	movwf	fsr1l,c
 20322  014AE0  0E03               	movlw	high (_display_content+40)
 20323  014AE2  20F4               	addwfc	prodh,w,c
 20324  014AE4  6EE2               	movwf	fsr1h,c
 20325  014AE6  CFDF FFE7          	movff	indf2,indf1
 20326                           
 20327                           ; BSR set to: 0
 20328  014AEA  0100               	movlb	0	; () banked
 20329  014AEC  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 20330  014AEE                     l21126:
 20331                           
 20332                           ; BSR set to: 0
 20333  014AEE  0100               	movlb	0	; () banked
 20334  014AF0  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20335  014AF2  0D01               	mullw	1
 20336  014AF4  0E85               	movlw	low __display_usb@low
 20337  014AF6  24F3               	addwf	prodl,w,c
 20338  014AF8  6ED9               	movwf	fsr2l,c
 20339  014AFA  0E00               	movlw	high __display_usb@low
 20340  014AFC  20F4               	addwfc	prodh,w,c
 20341  014AFE  6EDA               	movwf	fsr2h,c
 20342  014B00  50DF               	movf	indf2,w,c
 20343  014B02  A4D8               	btfss	status,2,c
 20344  014B04  D7DE               	goto	l21122
 20345  014B06                     l21128:
 20346                           
 20347                           ;display.c: 321: }
 20348                           ;display.c: 323: cntr = 0;
 20349  014B06  0E00               	movlw	0
 20350  014B08  0100               	movlb	0	; () banked
 20351  014B0A  6FA5               	movwf	__display_usb@cntr& (0+255),b
 20352                           
 20353                           ; BSR set to: 0
 20354                           ;display.c: 324: if(LATDbits.LD3)
 20355  014B0C  B68C               	btfsc	3980,3,c	;volatile
 20356  014B0E  D017               	goto	l21138
 20357  014B10  D039               	goto	l21144
 20358  014B12                     l21134:
 20359                           
 20360                           ; BSR set to: 0
 20361                           ;display.c: 327: display_content[3][cntr] = usb_on[cntr++];
 20362  014B12  0100               	movlb	0	; () banked
 20363  014B14  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20364  014B16  0D01               	mullw	1
 20365  014B18  0E95               	movlw	low __display_usb@usb_on
 20366  014B1A  24F3               	addwf	prodl,w,c
 20367  014B1C  6ED9               	movwf	fsr2l,c
 20368  014B1E  0E00               	movlw	high __display_usb@usb_on
 20369  014B20  20F4               	addwfc	prodh,w,c
 20370  014B22  6EDA               	movwf	fsr2h,c
 20371  014B24  0100               	movlb	0	; () banked
 20372  014B26  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20373  014B28  0D01               	mullw	1
 20374  014B2A  0E90               	movlw	low (_display_content+60)
 20375  014B2C  24F3               	addwf	prodl,w,c
 20376  014B2E  6EE1               	movwf	fsr1l,c
 20377  014B30  0E03               	movlw	high (_display_content+60)
 20378  014B32  20F4               	addwfc	prodh,w,c
 20379  014B34  6EE2               	movwf	fsr1h,c
 20380  014B36  CFDF FFE7          	movff	indf2,indf1
 20381                           
 20382                           ; BSR set to: 0
 20383  014B3A  0100               	movlb	0	; () banked
 20384  014B3C  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 20385  014B3E                     l21138:
 20386                           
 20387                           ; BSR set to: 0
 20388  014B3E  0100               	movlb	0	; () banked
 20389  014B40  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20390  014B42  0D01               	mullw	1
 20391  014B44  0E95               	movlw	low __display_usb@usb_on
 20392  014B46  24F3               	addwf	prodl,w,c
 20393  014B48  6ED9               	movwf	fsr2l,c
 20394  014B4A  0E00               	movlw	high __display_usb@usb_on
 20395  014B4C  20F4               	addwfc	prodh,w,c
 20396  014B4E  6EDA               	movwf	fsr2h,c
 20397  014B50  50DF               	movf	indf2,w,c
 20398  014B52  B4D8               	btfsc	status,2,c
 20399  014B54  0012               	return	
 20400  014B56  D7DD               	goto	l21134
 20401  014B58                     l21140:
 20402                           
 20403                           ; BSR set to: 0
 20404                           ;display.c: 332: display_content[3][cntr] = usb_off[cntr++];
 20405  014B58  0100               	movlb	0	; () banked
 20406  014B5A  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20407  014B5C  0D01               	mullw	1
 20408  014B5E  0E74               	movlw	low __display_usb@usb_off
 20409  014B60  24F3               	addwf	prodl,w,c
 20410  014B62  6ED9               	movwf	fsr2l,c
 20411  014B64  0E00               	movlw	high __display_usb@usb_off
 20412  014B66  20F4               	addwfc	prodh,w,c
 20413  014B68  6EDA               	movwf	fsr2h,c
 20414  014B6A  0100               	movlb	0	; () banked
 20415  014B6C  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20416  014B6E  0D01               	mullw	1
 20417  014B70  0E90               	movlw	low (_display_content+60)
 20418  014B72  24F3               	addwf	prodl,w,c
 20419  014B74  6EE1               	movwf	fsr1l,c
 20420  014B76  0E03               	movlw	high (_display_content+60)
 20421  014B78  20F4               	addwfc	prodh,w,c
 20422  014B7A  6EE2               	movwf	fsr1h,c
 20423  014B7C  CFDF FFE7          	movff	indf2,indf1
 20424                           
 20425                           ; BSR set to: 0
 20426  014B80  0100               	movlb	0	; () banked
 20427  014B82  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 20428  014B84                     l21144:
 20429                           
 20430                           ; BSR set to: 0
 20431  014B84  0100               	movlb	0	; () banked
 20432  014B86  51A5               	movf	__display_usb@cntr& (0+255),w,b
 20433  014B88  0D01               	mullw	1
 20434  014B8A  0E74               	movlw	low __display_usb@usb_off
 20435  014B8C  24F3               	addwf	prodl,w,c
 20436  014B8E  6ED9               	movwf	fsr2l,c
 20437  014B90  0E00               	movlw	high __display_usb@usb_off
 20438  014B92  20F4               	addwfc	prodh,w,c
 20439  014B94  6EDA               	movwf	fsr2h,c
 20440  014B96  50DF               	movf	indf2,w,c
 20441  014B98  B4D8               	btfsc	status,2,c
 20442  014B9A  0012               	return	
 20443  014B9C  D7DD               	goto	l21140
 20444  014B9E                     __end_of__display_usb:
 20445                           	opt stack 0
 20446                           tblptru	equ	0xFF8
 20447                           tblptrh	equ	0xFF7
 20448                           tblptrl	equ	0xFF6
 20449                           tablat	equ	0xFF5
 20450                           prodh	equ	0xFF4
 20451                           prodl	equ	0xFF3
 20452                           intcon	equ	0xFF2
 20453                           intcon2	equ	0xFF1
 20454                           intcon3	equ	0xFF0
 20455                           postinc0	equ	0xFEE
 20456                           wreg	equ	0xFE8
 20457                           indf1	equ	0xFE7
 20458                           postinc1	equ	0xFE6
 20459                           postdec1	equ	0xFE5
 20460                           plusw1	equ	0xFE3
 20461                           fsr1h	equ	0xFE2
 20462                           fsr1l	equ	0xFE1
 20463                           indf2	equ	0xFDF
 20464                           postinc2	equ	0xFDE
 20465                           postdec2	equ	0xFDD
 20466                           plusw2	equ	0xFDB
 20467                           fsr2h	equ	0xFDA
 20468                           fsr2l	equ	0xFD9
 20469                           status	equ	0xFD8
 20470                           
 20471 ;; *************** function __display_time *****************
 20472 ;; Defined at:
 20473 ;;		line 186 in file "display.c"
 20474 ;; Parameters:    Size  Location     Type
 20475 ;;  mode            1    wreg     unsigned char 
 20476 ;; Auto vars:     Size  Location     Type
 20477 ;;  mode            1  203[BANK1 ] unsigned char 
 20478 ;;  pressseconds   20   40[BANK1 ] const unsigned char [20]
 20479 ;;  pressminutes   20   20[BANK1 ] const unsigned char [20]
 20480 ;;  pts            20    0[BANK1 ] const unsigned char [20]
 20481 ;;  presshours     18   78[BANK1 ] const unsigned char [18]
 20482 ;;  pressmonth     18   60[BANK1 ] const unsigned char [18]
 20483 ;;  presssave      16  112[BANK1 ] const unsigned char [16]
 20484 ;;  pressday       16   96[BANK1 ] const unsigned char [16]
 20485 ;;  tad            14  128[BANK1 ] const unsigned char [14]
 20486 ;;  setseconds     12  154[BANK1 ] const unsigned char [12]
 20487 ;;  setminutes     12  142[BANK1 ] const unsigned char [12]
 20488 ;;  sethours       10  176[BANK1 ] const unsigned char [10]
 20489 ;;  setmonth       10  166[BANK1 ] const unsigned char [10]
 20490 ;;  setyear         9  186[BANK1 ] const unsigned char [9]
 20491 ;;  setday          8  195[BANK1 ] const unsigned char [8]
 20492 ;;  cntr            1  210[BANK1 ] unsigned char 
 20493 ;;  seconds         1  209[BANK1 ] unsigned char 
 20494 ;;  minutes         1  208[BANK1 ] unsigned char 
 20495 ;;  hours           1  207[BANK1 ] unsigned char 
 20496 ;;  day             1  206[BANK1 ] unsigned char 
 20497 ;;  month           1  205[BANK1 ] unsigned char 
 20498 ;;  year            1  204[BANK1 ] unsigned char 
 20499 ;; Return value:  Size  Location     Type
 20500 ;;                  1    wreg      void 
 20501 ;; Registers used:
 20502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20503 ;; Tracked objects:
 20504 ;;		On entry : 0/0
 20505 ;;		On exit  : 0/0
 20506 ;;		Unchanged: 0/0
 20507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20509 ;;      Locals:         0       0     211       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20511 ;;      Totals:         0       0     211       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20512 ;;Total ram usage:      211 bytes
 20513 ;; Hardware stack levels used:    1
 20514 ;; Hardware stack levels required when called:   11
 20515 ;; This function calls:
 20516 ;;		_rtcc_get_day
 20517 ;;		_rtcc_get_hours
 20518 ;;		_rtcc_get_minutes
 20519 ;;		_rtcc_get_month
 20520 ;;		_rtcc_get_seconds
 20521 ;;		_rtcc_get_year
 20522 ;; This function is called by:
 20523 ;;		_display_prepare
 20524 ;; This function uses a non-reentrant model
 20525 ;;
 20526                           
 20527                           	psect	text99
 20528  010000                     __ptext99:
 20529                           	opt stack 0
 20530  010000                     __display_time:
 20531                           	opt stack 18
 20532                           
 20533                           ; BSR set to: 0
 20534                           ;incstack = 0
 20535                           ;__display_time@mode stored from wreg
 20536  010000  0101               	movlb	1	; () banked
 20537  010002  6FCB               	movwf	__display_time@mode& (0+255),b
 20538                           
 20539                           ;display.c: 188: const char tad[] = "Time and Date";
 20540  010004  0E11               	movlw	low __display_time@F8675
 20541  010006  6EF6               	movwf	tblptrl,c
 20542  010008                     	if	1	;There is more than 1 active tblptr byte
 20543  010008  0EFE               	movlw	high __display_time@F8675
 20544  01000A  6EF7               	movwf	tblptrh,c
 20545  01000C                     	endif
 20546  01000C                     	if	1	;There are 3 active tblptr bytes
 20547  01000C  0E00               	movlw	low (__display_time@F8675 shr (0+16))
 20548  01000E  6EF8               	movwf	tblptru,c
 20549  010010                     	endif
 20550  010010  EE21  F080         	lfsr	2,__display_time@tad
 20551  010014  0E0D               	movlw	13
 20552  010016                     u20230:
 20553  010016  0009               	tblrd		*+
 20554  010018  CFF5 FFDE          	movff	tablat,postinc2
 20555  01001C  06E8               	decf	wreg,f,c
 20556  01001E  E2FB               	bc	u20230
 20557                           
 20558                           ;display.c: 189: const char setyear[] = "Set year";
 20559  010020  0E88               	movlw	low __display_time@F8677
 20560  010022  6EF6               	movwf	tblptrl,c
 20561  010024                     	if	1	;There is more than 1 active tblptr byte
 20562  010024  0EFE               	movlw	high __display_time@F8677
 20563  010026  6EF7               	movwf	tblptrh,c
 20564  010028                     	endif
 20565  010028                     	if	1	;There are 3 active tblptr bytes
 20566  010028  0E00               	movlw	low (__display_time@F8677 shr (0+16))
 20567  01002A  6EF8               	movwf	tblptru,c
 20568  01002C                     	endif
 20569  01002C  EE21  F0BA         	lfsr	2,__display_time@setyear
 20570  010030  0E08               	movlw	8
 20571  010032                     u20240:
 20572  010032  0009               	tblrd		*+
 20573  010034  CFF5 FFDE          	movff	tablat,postinc2
 20574  010038  06E8               	decf	wreg,f,c
 20575  01003A  E2FB               	bc	u20240
 20576                           
 20577                           ;display.c: 190: const char setmonth[] = "Set month";
 20578  01003C  0E7E               	movlw	low __display_time@F8679
 20579  01003E  6EF6               	movwf	tblptrl,c
 20580  010040                     	if	1	;There is more than 1 active tblptr byte
 20581  010040  0EFE               	movlw	high __display_time@F8679
 20582  010042  6EF7               	movwf	tblptrh,c
 20583  010044                     	endif
 20584  010044                     	if	1	;There are 3 active tblptr bytes
 20585  010044  0E00               	movlw	low (__display_time@F8679 shr (0+16))
 20586  010046  6EF8               	movwf	tblptru,c
 20587  010048                     	endif
 20588  010048  EE21  F0A6         	lfsr	2,__display_time@setmonth
 20589  01004C  0E09               	movlw	9
 20590  01004E                     u20250:
 20591  01004E  0009               	tblrd		*+
 20592  010050  CFF5 FFDE          	movff	tablat,postinc2
 20593  010054  06E8               	decf	wreg,f,c
 20594  010056  E2FB               	bc	u20250
 20595                           
 20596                           ;display.c: 191: const char setday[] = "Set day";
 20597  010058  0E99               	movlw	low __display_time@F8681
 20598  01005A  6EF6               	movwf	tblptrl,c
 20599  01005C                     	if	1	;There is more than 1 active tblptr byte
 20600  01005C  0EFE               	movlw	high __display_time@F8681
 20601  01005E  6EF7               	movwf	tblptrh,c
 20602  010060                     	endif
 20603  010060                     	if	1	;There are 3 active tblptr bytes
 20604  010060  0E00               	movlw	low (__display_time@F8681 shr (0+16))
 20605  010062  6EF8               	movwf	tblptru,c
 20606  010064                     	endif
 20607  010064  EE21  F0C3         	lfsr	2,__display_time@setday
 20608  010068  0E07               	movlw	7
 20609  01006A                     u20260:
 20610  01006A  0009               	tblrd		*+
 20611  01006C  CFF5 FFDE          	movff	tablat,postinc2
 20612  010070  06E8               	decf	wreg,f,c
 20613  010072  E2FB               	bc	u20260
 20614                           
 20615                           ;display.c: 192: const char sethours[] = "Set hours";
 20616  010074  0E74               	movlw	low __display_time@F8683
 20617  010076  6EF6               	movwf	tblptrl,c
 20618  010078                     	if	1	;There is more than 1 active tblptr byte
 20619  010078  0EFE               	movlw	high __display_time@F8683
 20620  01007A  6EF7               	movwf	tblptrh,c
 20621  01007C                     	endif
 20622  01007C                     	if	1	;There are 3 active tblptr bytes
 20623  01007C  0E00               	movlw	low (__display_time@F8683 shr (0+16))
 20624  01007E  6EF8               	movwf	tblptru,c
 20625  010080                     	endif
 20626  010080  EE21  F0B0         	lfsr	2,__display_time@sethours
 20627  010084  0E09               	movlw	9
 20628  010086                     u20270:
 20629  010086  0009               	tblrd		*+
 20630  010088  CFF5 FFDE          	movff	tablat,postinc2
 20631  01008C  06E8               	decf	wreg,f,c
 20632  01008E  E2FB               	bc	u20270
 20633                           
 20634                           ;display.c: 193: const char setminutes[] = "Set minutes";
 20635  010090  0E5D               	movlw	low __display_time@F8685
 20636  010092  6EF6               	movwf	tblptrl,c
 20637  010094                     	if	1	;There is more than 1 active tblptr byte
 20638  010094  0EFE               	movlw	high __display_time@F8685
 20639  010096  6EF7               	movwf	tblptrh,c
 20640  010098                     	endif
 20641  010098                     	if	1	;There are 3 active tblptr bytes
 20642  010098  0E00               	movlw	low (__display_time@F8685 shr (0+16))
 20643  01009A  6EF8               	movwf	tblptru,c
 20644  01009C                     	endif
 20645  01009C  EE21  F08E         	lfsr	2,__display_time@setminutes
 20646  0100A0  0E0B               	movlw	11
 20647  0100A2                     u20280:
 20648  0100A2  0009               	tblrd		*+
 20649  0100A4  CFF5 FFDE          	movff	tablat,postinc2
 20650  0100A8  06E8               	decf	wreg,f,c
 20651  0100AA  E2FB               	bc	u20280
 20652                           
 20653                           ;display.c: 194: const char setseconds[] = "Set seconds";
 20654  0100AC  0E51               	movlw	low __display_time@F8687
 20655  0100AE  6EF6               	movwf	tblptrl,c
 20656  0100B0                     	if	1	;There is more than 1 active tblptr byte
 20657  0100B0  0EFE               	movlw	high __display_time@F8687
 20658  0100B2  6EF7               	movwf	tblptrh,c
 20659  0100B4                     	endif
 20660  0100B4                     	if	1	;There are 3 active tblptr bytes
 20661  0100B4  0E00               	movlw	low (__display_time@F8687 shr (0+16))
 20662  0100B6  6EF8               	movwf	tblptru,c
 20663  0100B8                     	endif
 20664  0100B8  EE21  F09A         	lfsr	2,__display_time@setseconds
 20665  0100BC  0E0B               	movlw	11
 20666  0100BE                     u20290:
 20667  0100BE  0009               	tblrd		*+
 20668  0100C0  CFF5 FFDE          	movff	tablat,postinc2
 20669  0100C4  06E8               	decf	wreg,f,c
 20670  0100C6  E2FB               	bc	u20290
 20671                           
 20672                           ;display.c: 195: const char pts[] = "->Press to set time";
 20673  0100C8  0EDD               	movlw	low __display_time@F8689
 20674  0100CA  6EF6               	movwf	tblptrl,c
 20675  0100CC                     	if	1	;There is more than 1 active tblptr byte
 20676  0100CC  0EFC               	movlw	high __display_time@F8689
 20677  0100CE  6EF7               	movwf	tblptrh,c
 20678  0100D0                     	endif
 20679  0100D0                     	if	1	;There are 3 active tblptr bytes
 20680  0100D0  0E00               	movlw	low (__display_time@F8689 shr (0+16))
 20681  0100D2  6EF8               	movwf	tblptru,c
 20682  0100D4                     	endif
 20683  0100D4  EE21  F000         	lfsr	2,__display_time@pts
 20684  0100D8  0E13               	movlw	19
 20685  0100DA                     u20300:
 20686  0100DA  0009               	tblrd		*+
 20687  0100DC  CFF5 FFDE          	movff	tablat,postinc2
 20688  0100E0  06E8               	decf	wreg,f,c
 20689  0100E2  E2FB               	bc	u20300
 20690                           
 20691                           ;display.c: 196: const char pressmonth[] = "->Press for month";
 20692  0100E4  0E4E               	movlw	low __display_time@F8691
 20693  0100E6  6EF6               	movwf	tblptrl,c
 20694  0100E8                     	if	1	;There is more than 1 active tblptr byte
 20695  0100E8  0EFD               	movlw	high __display_time@F8691
 20696  0100EA  6EF7               	movwf	tblptrh,c
 20697  0100EC                     	endif
 20698  0100EC                     	if	1	;There are 3 active tblptr bytes
 20699  0100EC  0E00               	movlw	low (__display_time@F8691 shr (0+16))
 20700  0100EE  6EF8               	movwf	tblptru,c
 20701  0100F0                     	endif
 20702  0100F0  EE21  F03C         	lfsr	2,__display_time@pressmonth
 20703  0100F4  0E11               	movlw	17
 20704  0100F6                     u20310:
 20705  0100F6  0009               	tblrd		*+
 20706  0100F8  CFF5 FFDE          	movff	tablat,postinc2
 20707  0100FC  06E8               	decf	wreg,f,c
 20708  0100FE  E2FB               	bc	u20310
 20709                           
 20710                           ;display.c: 197: const char pressday[] = "->Press for day";
 20711  010100  0EE5               	movlw	low __display_time@F8693
 20712  010102  6EF6               	movwf	tblptrl,c
 20713  010104                     	if	1	;There is more than 1 active tblptr byte
 20714  010104  0EFD               	movlw	high __display_time@F8693
 20715  010106  6EF7               	movwf	tblptrh,c
 20716  010108                     	endif
 20717  010108                     	if	1	;There are 3 active tblptr bytes
 20718  010108  0E00               	movlw	low (__display_time@F8693 shr (0+16))
 20719  01010A  6EF8               	movwf	tblptru,c
 20720  01010C                     	endif
 20721  01010C  EE21  F060         	lfsr	2,__display_time@pressday
 20722  010110  0E0F               	movlw	15
 20723  010112                     u20320:
 20724  010112  0009               	tblrd		*+
 20725  010114  CFF5 FFDE          	movff	tablat,postinc2
 20726  010118  06E8               	decf	wreg,f,c
 20727  01011A  E2FB               	bc	u20320
 20728                           
 20729                           ;display.c: 198: const char presshours[] = "->Press for hours";
 20730  01011C  0E3C               	movlw	low __display_time@F8695
 20731  01011E  6EF6               	movwf	tblptrl,c
 20732  010120                     	if	1	;There is more than 1 active tblptr byte
 20733  010120  0EFD               	movlw	high __display_time@F8695
 20734  010122  6EF7               	movwf	tblptrh,c
 20735  010124                     	endif
 20736  010124                     	if	1	;There are 3 active tblptr bytes
 20737  010124  0E00               	movlw	low (__display_time@F8695 shr (0+16))
 20738  010126  6EF8               	movwf	tblptru,c
 20739  010128                     	endif
 20740  010128  EE21  F04E         	lfsr	2,__display_time@presshours
 20741  01012C  0E11               	movlw	17
 20742  01012E                     u20330:
 20743  01012E  0009               	tblrd		*+
 20744  010130  CFF5 FFDE          	movff	tablat,postinc2
 20745  010134  06E8               	decf	wreg,f,c
 20746  010136  E2FB               	bc	u20330
 20747                           
 20748                           ;display.c: 199: const char pressminutes[] = "->Press for minutes";
 20749  010138  0EC9               	movlw	low __display_time@F8697
 20750  01013A  6EF6               	movwf	tblptrl,c
 20751  01013C                     	if	1	;There is more than 1 active tblptr byte
 20752  01013C  0EFC               	movlw	high __display_time@F8697
 20753  01013E  6EF7               	movwf	tblptrh,c
 20754  010140                     	endif
 20755  010140                     	if	1	;There are 3 active tblptr bytes
 20756  010140  0E00               	movlw	low (__display_time@F8697 shr (0+16))
 20757  010142  6EF8               	movwf	tblptru,c
 20758  010144                     	endif
 20759  010144  EE21  F014         	lfsr	2,__display_time@pressminutes
 20760  010148  0E13               	movlw	19
 20761  01014A                     u20340:
 20762  01014A  0009               	tblrd		*+
 20763  01014C  CFF5 FFDE          	movff	tablat,postinc2
 20764  010150  06E8               	decf	wreg,f,c
 20765  010152  E2FB               	bc	u20340
 20766                           
 20767                           ;display.c: 200: const char pressseconds[] = "->Press for seconds";
 20768  010154  0EB5               	movlw	low __display_time@F8699
 20769  010156  6EF6               	movwf	tblptrl,c
 20770  010158                     	if	1	;There is more than 1 active tblptr byte
 20771  010158  0EFC               	movlw	high __display_time@F8699
 20772  01015A  6EF7               	movwf	tblptrh,c
 20773  01015C                     	endif
 20774  01015C                     	if	1	;There are 3 active tblptr bytes
 20775  01015C  0E00               	movlw	low (__display_time@F8699 shr (0+16))
 20776  01015E  6EF8               	movwf	tblptru,c
 20777  010160                     	endif
 20778  010160  EE21  F028         	lfsr	2,__display_time@pressseconds
 20779  010164  0E13               	movlw	19
 20780  010166                     u20350:
 20781  010166  0009               	tblrd		*+
 20782  010168  CFF5 FFDE          	movff	tablat,postinc2
 20783  01016C  06E8               	decf	wreg,f,c
 20784  01016E  E2FB               	bc	u20350
 20785                           
 20786                           ;display.c: 201: const char presssave[] = "->Press to save";
 20787  010170  0ED5               	movlw	low __display_time@F8701
 20788  010172  6EF6               	movwf	tblptrl,c
 20789  010174                     	if	1	;There is more than 1 active tblptr byte
 20790  010174  0EFD               	movlw	high __display_time@F8701
 20791  010176  6EF7               	movwf	tblptrh,c
 20792  010178                     	endif
 20793  010178                     	if	1	;There are 3 active tblptr bytes
 20794  010178  0E00               	movlw	low (__display_time@F8701 shr (0+16))
 20795  01017A  6EF8               	movwf	tblptru,c
 20796  01017C                     	endif
 20797  01017C  EE21  F070         	lfsr	2,__display_time@presssave
 20798  010180  0E0F               	movlw	15
 20799  010182                     u20360:
 20800  010182  0009               	tblrd		*+
 20801  010184  CFF5 FFDE          	movff	tablat,postinc2
 20802  010188  06E8               	decf	wreg,f,c
 20803  01018A  E2FB               	bc	u20360
 20804                           
 20805                           ;display.c: 203: uint8_t cntr;
 20806                           ;display.c: 204: uint8_t year = rtcc_get_year();
 20807  01018C  EC19  F0D5         	call	_rtcc_get_year	;wreg free
 20808  010190  0101               	movlb	1	; () banked
 20809  010192  6FCC               	movwf	__display_time@year& (0+255),b
 20810                           
 20811                           ; BSR set to: 1
 20812                           ;display.c: 205: uint8_t month = rtcc_get_month();
 20813  010194  EC2D  F0D5         	call	_rtcc_get_month	;wreg free
 20814  010198  0101               	movlb	1	; () banked
 20815  01019A  6FCD               	movwf	__display_time@month& (0+255),b
 20816                           
 20817                           ; BSR set to: 1
 20818                           ;display.c: 206: uint8_t day = rtcc_get_day();
 20819  01019C  EC4B  F0D5         	call	_rtcc_get_day	;wreg free
 20820  0101A0  0101               	movlb	1	; () banked
 20821  0101A2  6FCE               	movwf	__display_time@day& (0+255),b
 20822                           
 20823                           ; BSR set to: 1
 20824                           ;display.c: 207: uint8_t hours = rtcc_get_hours();
 20825  0101A4  EC41  F0D5         	call	_rtcc_get_hours	;wreg free
 20826  0101A8  0101               	movlb	1	; () banked
 20827  0101AA  6FCF               	movwf	__display_time@hours& (0+255),b
 20828                           
 20829                           ; BSR set to: 1
 20830                           ;display.c: 208: uint8_t minutes = rtcc_get_minutes();
 20831  0101AC  EC37  F0D5         	call	_rtcc_get_minutes	;wreg free
 20832  0101B0  0101               	movlb	1	; () banked
 20833  0101B2  6FD0               	movwf	__display_time@minutes& (0+255),b
 20834                           
 20835                           ; BSR set to: 1
 20836                           ;display.c: 209: uint8_t seconds = rtcc_get_seconds();
 20837  0101B4  EC23  F0D5         	call	_rtcc_get_seconds	;wreg free
 20838  0101B8  0101               	movlb	1	; () banked
 20839  0101BA  6FD1               	movwf	__display_time@seconds& (0+255),b
 20840                           
 20841                           ;display.c: 211: switch(mode)
 20842  0101BC  D21B               	goto	l21080
 20843  0101BE                     l20966:
 20844                           
 20845                           ; BSR set to: 1
 20846                           ;display.c: 214: cntr = 0;
 20847  0101BE  0E00               	movlw	0
 20848  0101C0  0101               	movlb	1	; () banked
 20849  0101C2  6FD2               	movwf	__display_time@cntr& (0+255),b
 20850                           
 20851                           ;display.c: 215: while(tad[cntr])
 20852  0101C4  D016               	goto	l20972
 20853  0101C6                     l20968:
 20854                           
 20855                           ; BSR set to: 1
 20856                           ;display.c: 216: display_content[0][cntr] = tad[cntr++];
 20857  0101C6  0101               	movlb	1	; () banked
 20858  0101C8  51D2               	movf	__display_time@cntr& (0+255),w,b
 20859  0101CA  0D01               	mullw	1
 20860  0101CC  0E80               	movlw	low __display_time@tad
 20861  0101CE  24F3               	addwf	prodl,w,c
 20862  0101D0  6ED9               	movwf	fsr2l,c
 20863  0101D2  0E01               	movlw	high __display_time@tad
 20864  0101D4  20F4               	addwfc	prodh,w,c
 20865  0101D6  6EDA               	movwf	fsr2h,c
 20866  0101D8  0101               	movlb	1	; () banked
 20867  0101DA  51D2               	movf	__display_time@cntr& (0+255),w,b
 20868  0101DC  0D01               	mullw	1
 20869  0101DE  0E54               	movlw	low _display_content
 20870  0101E0  24F3               	addwf	prodl,w,c
 20871  0101E2  6EE1               	movwf	fsr1l,c
 20872  0101E4  0E03               	movlw	high _display_content
 20873  0101E6  20F4               	addwfc	prodh,w,c
 20874  0101E8  6EE2               	movwf	fsr1h,c
 20875  0101EA  CFDF FFE7          	movff	indf2,indf1
 20876                           
 20877                           ; BSR set to: 1
 20878  0101EE  0101               	movlb	1	; () banked
 20879  0101F0  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20880  0101F2                     l20972:
 20881                           
 20882                           ; BSR set to: 1
 20883  0101F2  0101               	movlb	1	; () banked
 20884  0101F4  51D2               	movf	__display_time@cntr& (0+255),w,b
 20885  0101F6  0D01               	mullw	1
 20886  0101F8  0E80               	movlw	low __display_time@tad
 20887  0101FA  24F3               	addwf	prodl,w,c
 20888  0101FC  6ED9               	movwf	fsr2l,c
 20889  0101FE  0E01               	movlw	high __display_time@tad
 20890  010200  20F4               	addwfc	prodh,w,c
 20891  010202  6EDA               	movwf	fsr2h,c
 20892  010204  50DF               	movf	indf2,w,c
 20893  010206  A4D8               	btfss	status,2,c
 20894  010208  D7DE               	goto	l20968
 20895                           
 20896                           ; BSR set to: 1
 20897                           ;display.c: 217: cntr = 0;
 20898                           
 20899                           ; BSR set to: 1
 20900  01020A  0E00               	movlw	0
 20901  01020C  0101               	movlb	1	; () banked
 20902  01020E  6FD2               	movwf	__display_time@cntr& (0+255),b
 20903                           
 20904                           ;display.c: 218: while(pts[cntr])
 20905  010210  D016               	goto	l20980
 20906  010212                     l20976:
 20907                           
 20908                           ; BSR set to: 1
 20909                           ;display.c: 219: display_content[3][cntr] = pts[cntr++];
 20910  010212  0101               	movlb	1	; () banked
 20911  010214  51D2               	movf	__display_time@cntr& (0+255),w,b
 20912  010216  0D01               	mullw	1
 20913  010218  0E00               	movlw	low __display_time@pts
 20914  01021A  24F3               	addwf	prodl,w,c
 20915  01021C  6ED9               	movwf	fsr2l,c
 20916  01021E  0E01               	movlw	high __display_time@pts
 20917  010220  20F4               	addwfc	prodh,w,c
 20918  010222  6EDA               	movwf	fsr2h,c
 20919  010224  0101               	movlb	1	; () banked
 20920  010226  51D2               	movf	__display_time@cntr& (0+255),w,b
 20921  010228  0D01               	mullw	1
 20922  01022A  0E90               	movlw	low (_display_content+60)
 20923  01022C  24F3               	addwf	prodl,w,c
 20924  01022E  6EE1               	movwf	fsr1l,c
 20925  010230  0E03               	movlw	high (_display_content+60)
 20926  010232  20F4               	addwfc	prodh,w,c
 20927  010234  6EE2               	movwf	fsr1h,c
 20928  010236  CFDF FFE7          	movff	indf2,indf1
 20929                           
 20930                           ; BSR set to: 1
 20931  01023A  0101               	movlb	1	; () banked
 20932  01023C  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20933  01023E                     l20980:
 20934                           
 20935                           ; BSR set to: 1
 20936  01023E  0101               	movlb	1	; () banked
 20937  010240  51D2               	movf	__display_time@cntr& (0+255),w,b
 20938  010242  0D01               	mullw	1
 20939  010244  0E00               	movlw	low __display_time@pts
 20940  010246  24F3               	addwf	prodl,w,c
 20941  010248  6ED9               	movwf	fsr2l,c
 20942  01024A  0E01               	movlw	high __display_time@pts
 20943  01024C  20F4               	addwfc	prodh,w,c
 20944  01024E  6EDA               	movwf	fsr2h,c
 20945  010250  50DF               	movf	indf2,w,c
 20946  010252  B4D8               	btfsc	status,2,c
 20947  010254  D1E6               	goto	l21082
 20948  010256  D7DD               	goto	l20976
 20949  010258                     l20982:
 20950                           
 20951                           ; BSR set to: 1
 20952                           ;display.c: 223: cntr = 0;
 20953  010258  0E00               	movlw	0
 20954  01025A  0101               	movlb	1	; () banked
 20955  01025C  6FD2               	movwf	__display_time@cntr& (0+255),b
 20956                           
 20957                           ;display.c: 224: while(setyear[cntr])
 20958  01025E  D016               	goto	l20988
 20959  010260                     l20984:
 20960                           
 20961                           ; BSR set to: 1
 20962                           ;display.c: 225: display_content[0][cntr] = setyear[cntr++];
 20963  010260  0101               	movlb	1	; () banked
 20964  010262  51D2               	movf	__display_time@cntr& (0+255),w,b
 20965  010264  0D01               	mullw	1
 20966  010266  0EBA               	movlw	low __display_time@setyear
 20967  010268  24F3               	addwf	prodl,w,c
 20968  01026A  6ED9               	movwf	fsr2l,c
 20969  01026C  0E01               	movlw	high __display_time@setyear
 20970  01026E  20F4               	addwfc	prodh,w,c
 20971  010270  6EDA               	movwf	fsr2h,c
 20972  010272  0101               	movlb	1	; () banked
 20973  010274  51D2               	movf	__display_time@cntr& (0+255),w,b
 20974  010276  0D01               	mullw	1
 20975  010278  0E54               	movlw	low _display_content
 20976  01027A  24F3               	addwf	prodl,w,c
 20977  01027C  6EE1               	movwf	fsr1l,c
 20978  01027E  0E03               	movlw	high _display_content
 20979  010280  20F4               	addwfc	prodh,w,c
 20980  010282  6EE2               	movwf	fsr1h,c
 20981  010284  CFDF FFE7          	movff	indf2,indf1
 20982                           
 20983                           ; BSR set to: 1
 20984  010288  0101               	movlb	1	; () banked
 20985  01028A  2BD2               	incf	__display_time@cntr& (0+255),f,b
 20986  01028C                     l20988:
 20987                           
 20988                           ; BSR set to: 1
 20989  01028C  0101               	movlb	1	; () banked
 20990  01028E  51D2               	movf	__display_time@cntr& (0+255),w,b
 20991  010290  0D01               	mullw	1
 20992  010292  0EBA               	movlw	low __display_time@setyear
 20993  010294  24F3               	addwf	prodl,w,c
 20994  010296  6ED9               	movwf	fsr2l,c
 20995  010298  0E01               	movlw	high __display_time@setyear
 20996  01029A  20F4               	addwfc	prodh,w,c
 20997  01029C  6EDA               	movwf	fsr2h,c
 20998  01029E  50DF               	movf	indf2,w,c
 20999  0102A0  A4D8               	btfss	status,2,c
 21000  0102A2  D7DE               	goto	l20984
 21001                           
 21002                           ; BSR set to: 1
 21003                           ;display.c: 226: cntr = 0;
 21004                           
 21005                           ; BSR set to: 1
 21006  0102A4  0E00               	movlw	0
 21007  0102A6  0101               	movlb	1	; () banked
 21008  0102A8  6FD2               	movwf	__display_time@cntr& (0+255),b
 21009                           
 21010                           ;display.c: 227: while(pressmonth[cntr])
 21011  0102AA  D016               	goto	l20996
 21012  0102AC                     l20992:
 21013                           
 21014                           ; BSR set to: 1
 21015                           ;display.c: 228: display_content[3][cntr] = pressmonth[cntr++];
 21016  0102AC  0101               	movlb	1	; () banked
 21017  0102AE  51D2               	movf	__display_time@cntr& (0+255),w,b
 21018  0102B0  0D01               	mullw	1
 21019  0102B2  0E3C               	movlw	low __display_time@pressmonth
 21020  0102B4  24F3               	addwf	prodl,w,c
 21021  0102B6  6ED9               	movwf	fsr2l,c
 21022  0102B8  0E01               	movlw	high __display_time@pressmonth
 21023  0102BA  20F4               	addwfc	prodh,w,c
 21024  0102BC  6EDA               	movwf	fsr2h,c
 21025  0102BE  0101               	movlb	1	; () banked
 21026  0102C0  51D2               	movf	__display_time@cntr& (0+255),w,b
 21027  0102C2  0D01               	mullw	1
 21028  0102C4  0E90               	movlw	low (_display_content+60)
 21029  0102C6  24F3               	addwf	prodl,w,c
 21030  0102C8  6EE1               	movwf	fsr1l,c
 21031  0102CA  0E03               	movlw	high (_display_content+60)
 21032  0102CC  20F4               	addwfc	prodh,w,c
 21033  0102CE  6EE2               	movwf	fsr1h,c
 21034  0102D0  CFDF FFE7          	movff	indf2,indf1
 21035                           
 21036                           ; BSR set to: 1
 21037  0102D4  0101               	movlb	1	; () banked
 21038  0102D6  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21039  0102D8                     l20996:
 21040                           
 21041                           ; BSR set to: 1
 21042  0102D8  0101               	movlb	1	; () banked
 21043  0102DA  51D2               	movf	__display_time@cntr& (0+255),w,b
 21044  0102DC  0D01               	mullw	1
 21045  0102DE  0E3C               	movlw	low __display_time@pressmonth
 21046  0102E0  24F3               	addwf	prodl,w,c
 21047  0102E2  6ED9               	movwf	fsr2l,c
 21048  0102E4  0E01               	movlw	high __display_time@pressmonth
 21049  0102E6  20F4               	addwfc	prodh,w,c
 21050  0102E8  6EDA               	movwf	fsr2h,c
 21051  0102EA  50DF               	movf	indf2,w,c
 21052  0102EC  B4D8               	btfsc	status,2,c
 21053  0102EE  D199               	goto	l21082
 21054  0102F0  D7DD               	goto	l20992
 21055  0102F2                     l20998:
 21056                           
 21057                           ; BSR set to: 1
 21058                           ;display.c: 232: cntr = 0;
 21059  0102F2  0E00               	movlw	0
 21060  0102F4  0101               	movlb	1	; () banked
 21061  0102F6  6FD2               	movwf	__display_time@cntr& (0+255),b
 21062                           
 21063                           ;display.c: 233: while(setmonth[cntr])
 21064  0102F8  D016               	goto	l21004
 21065  0102FA                     l21000:
 21066                           
 21067                           ; BSR set to: 1
 21068                           ;display.c: 234: display_content[0][cntr] = setmonth[cntr++];
 21069  0102FA  0101               	movlb	1	; () banked
 21070  0102FC  51D2               	movf	__display_time@cntr& (0+255),w,b
 21071  0102FE  0D01               	mullw	1
 21072  010300  0EA6               	movlw	low __display_time@setmonth
 21073  010302  24F3               	addwf	prodl,w,c
 21074  010304  6ED9               	movwf	fsr2l,c
 21075  010306  0E01               	movlw	high __display_time@setmonth
 21076  010308  20F4               	addwfc	prodh,w,c
 21077  01030A  6EDA               	movwf	fsr2h,c
 21078  01030C  0101               	movlb	1	; () banked
 21079  01030E  51D2               	movf	__display_time@cntr& (0+255),w,b
 21080  010310  0D01               	mullw	1
 21081  010312  0E54               	movlw	low _display_content
 21082  010314  24F3               	addwf	prodl,w,c
 21083  010316  6EE1               	movwf	fsr1l,c
 21084  010318  0E03               	movlw	high _display_content
 21085  01031A  20F4               	addwfc	prodh,w,c
 21086  01031C  6EE2               	movwf	fsr1h,c
 21087  01031E  CFDF FFE7          	movff	indf2,indf1
 21088                           
 21089                           ; BSR set to: 1
 21090  010322  0101               	movlb	1	; () banked
 21091  010324  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21092  010326                     l21004:
 21093                           
 21094                           ; BSR set to: 1
 21095  010326  0101               	movlb	1	; () banked
 21096  010328  51D2               	movf	__display_time@cntr& (0+255),w,b
 21097  01032A  0D01               	mullw	1
 21098  01032C  0EA6               	movlw	low __display_time@setmonth
 21099  01032E  24F3               	addwf	prodl,w,c
 21100  010330  6ED9               	movwf	fsr2l,c
 21101  010332  0E01               	movlw	high __display_time@setmonth
 21102  010334  20F4               	addwfc	prodh,w,c
 21103  010336  6EDA               	movwf	fsr2h,c
 21104  010338  50DF               	movf	indf2,w,c
 21105  01033A  A4D8               	btfss	status,2,c
 21106  01033C  D7DE               	goto	l21000
 21107                           
 21108                           ; BSR set to: 1
 21109                           ;display.c: 235: cntr = 0;
 21110                           
 21111                           ; BSR set to: 1
 21112  01033E  0E00               	movlw	0
 21113  010340  0101               	movlb	1	; () banked
 21114  010342  6FD2               	movwf	__display_time@cntr& (0+255),b
 21115                           
 21116                           ;display.c: 236: while(pressday[cntr])
 21117  010344  D016               	goto	l21012
 21118  010346                     l21008:
 21119                           
 21120                           ; BSR set to: 1
 21121                           ;display.c: 237: display_content[3][cntr] = pressday[cntr++];
 21122  010346  0101               	movlb	1	; () banked
 21123  010348  51D2               	movf	__display_time@cntr& (0+255),w,b
 21124  01034A  0D01               	mullw	1
 21125  01034C  0E60               	movlw	low __display_time@pressday
 21126  01034E  24F3               	addwf	prodl,w,c
 21127  010350  6ED9               	movwf	fsr2l,c
 21128  010352  0E01               	movlw	high __display_time@pressday
 21129  010354  20F4               	addwfc	prodh,w,c
 21130  010356  6EDA               	movwf	fsr2h,c
 21131  010358  0101               	movlb	1	; () banked
 21132  01035A  51D2               	movf	__display_time@cntr& (0+255),w,b
 21133  01035C  0D01               	mullw	1
 21134  01035E  0E90               	movlw	low (_display_content+60)
 21135  010360  24F3               	addwf	prodl,w,c
 21136  010362  6EE1               	movwf	fsr1l,c
 21137  010364  0E03               	movlw	high (_display_content+60)
 21138  010366  20F4               	addwfc	prodh,w,c
 21139  010368  6EE2               	movwf	fsr1h,c
 21140  01036A  CFDF FFE7          	movff	indf2,indf1
 21141                           
 21142                           ; BSR set to: 1
 21143  01036E  0101               	movlb	1	; () banked
 21144  010370  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21145  010372                     l21012:
 21146                           
 21147                           ; BSR set to: 1
 21148  010372  0101               	movlb	1	; () banked
 21149  010374  51D2               	movf	__display_time@cntr& (0+255),w,b
 21150  010376  0D01               	mullw	1
 21151  010378  0E60               	movlw	low __display_time@pressday
 21152  01037A  24F3               	addwf	prodl,w,c
 21153  01037C  6ED9               	movwf	fsr2l,c
 21154  01037E  0E01               	movlw	high __display_time@pressday
 21155  010380  20F4               	addwfc	prodh,w,c
 21156  010382  6EDA               	movwf	fsr2h,c
 21157  010384  50DF               	movf	indf2,w,c
 21158  010386  B4D8               	btfsc	status,2,c
 21159  010388  D14C               	goto	l21082
 21160  01038A  D7DD               	goto	l21008
 21161  01038C                     l21014:
 21162                           
 21163                           ; BSR set to: 1
 21164                           ;display.c: 241: cntr = 0;
 21165  01038C  0E00               	movlw	0
 21166  01038E  0101               	movlb	1	; () banked
 21167  010390  6FD2               	movwf	__display_time@cntr& (0+255),b
 21168                           
 21169                           ;display.c: 242: while(setday[cntr])
 21170  010392  D016               	goto	l21020
 21171  010394                     l21016:
 21172                           
 21173                           ; BSR set to: 1
 21174                           ;display.c: 243: display_content[0][cntr] = setday[cntr++];
 21175  010394  0101               	movlb	1	; () banked
 21176  010396  51D2               	movf	__display_time@cntr& (0+255),w,b
 21177  010398  0D01               	mullw	1
 21178  01039A  0EC3               	movlw	low __display_time@setday
 21179  01039C  24F3               	addwf	prodl,w,c
 21180  01039E  6ED9               	movwf	fsr2l,c
 21181  0103A0  0E01               	movlw	high __display_time@setday
 21182  0103A2  20F4               	addwfc	prodh,w,c
 21183  0103A4  6EDA               	movwf	fsr2h,c
 21184  0103A6  0101               	movlb	1	; () banked
 21185  0103A8  51D2               	movf	__display_time@cntr& (0+255),w,b
 21186  0103AA  0D01               	mullw	1
 21187  0103AC  0E54               	movlw	low _display_content
 21188  0103AE  24F3               	addwf	prodl,w,c
 21189  0103B0  6EE1               	movwf	fsr1l,c
 21190  0103B2  0E03               	movlw	high _display_content
 21191  0103B4  20F4               	addwfc	prodh,w,c
 21192  0103B6  6EE2               	movwf	fsr1h,c
 21193  0103B8  CFDF FFE7          	movff	indf2,indf1
 21194                           
 21195                           ; BSR set to: 1
 21196  0103BC  0101               	movlb	1	; () banked
 21197  0103BE  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21198  0103C0                     l21020:
 21199                           
 21200                           ; BSR set to: 1
 21201  0103C0  0101               	movlb	1	; () banked
 21202  0103C2  51D2               	movf	__display_time@cntr& (0+255),w,b
 21203  0103C4  0D01               	mullw	1
 21204  0103C6  0EC3               	movlw	low __display_time@setday
 21205  0103C8  24F3               	addwf	prodl,w,c
 21206  0103CA  6ED9               	movwf	fsr2l,c
 21207  0103CC  0E01               	movlw	high __display_time@setday
 21208  0103CE  20F4               	addwfc	prodh,w,c
 21209  0103D0  6EDA               	movwf	fsr2h,c
 21210  0103D2  50DF               	movf	indf2,w,c
 21211  0103D4  A4D8               	btfss	status,2,c
 21212  0103D6  D7DE               	goto	l21016
 21213                           
 21214                           ; BSR set to: 1
 21215                           ;display.c: 244: cntr = 0;
 21216                           
 21217                           ; BSR set to: 1
 21218  0103D8  0E00               	movlw	0
 21219  0103DA  0101               	movlb	1	; () banked
 21220  0103DC  6FD2               	movwf	__display_time@cntr& (0+255),b
 21221                           
 21222                           ;display.c: 245: while(presshours[cntr])
 21223  0103DE  D016               	goto	l21028
 21224  0103E0                     l21024:
 21225                           
 21226                           ; BSR set to: 1
 21227                           ;display.c: 246: display_content[3][cntr] = presshours[cntr++];
 21228  0103E0  0101               	movlb	1	; () banked
 21229  0103E2  51D2               	movf	__display_time@cntr& (0+255),w,b
 21230  0103E4  0D01               	mullw	1
 21231  0103E6  0E4E               	movlw	low __display_time@presshours
 21232  0103E8  24F3               	addwf	prodl,w,c
 21233  0103EA  6ED9               	movwf	fsr2l,c
 21234  0103EC  0E01               	movlw	high __display_time@presshours
 21235  0103EE  20F4               	addwfc	prodh,w,c
 21236  0103F0  6EDA               	movwf	fsr2h,c
 21237  0103F2  0101               	movlb	1	; () banked
 21238  0103F4  51D2               	movf	__display_time@cntr& (0+255),w,b
 21239  0103F6  0D01               	mullw	1
 21240  0103F8  0E90               	movlw	low (_display_content+60)
 21241  0103FA  24F3               	addwf	prodl,w,c
 21242  0103FC  6EE1               	movwf	fsr1l,c
 21243  0103FE  0E03               	movlw	high (_display_content+60)
 21244  010400  20F4               	addwfc	prodh,w,c
 21245  010402  6EE2               	movwf	fsr1h,c
 21246  010404  CFDF FFE7          	movff	indf2,indf1
 21247                           
 21248                           ; BSR set to: 1
 21249  010408  0101               	movlb	1	; () banked
 21250  01040A  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21251  01040C                     l21028:
 21252                           
 21253                           ; BSR set to: 1
 21254  01040C  0101               	movlb	1	; () banked
 21255  01040E  51D2               	movf	__display_time@cntr& (0+255),w,b
 21256  010410  0D01               	mullw	1
 21257  010412  0E4E               	movlw	low __display_time@presshours
 21258  010414  24F3               	addwf	prodl,w,c
 21259  010416  6ED9               	movwf	fsr2l,c
 21260  010418  0E01               	movlw	high __display_time@presshours
 21261  01041A  20F4               	addwfc	prodh,w,c
 21262  01041C  6EDA               	movwf	fsr2h,c
 21263  01041E  50DF               	movf	indf2,w,c
 21264  010420  B4D8               	btfsc	status,2,c
 21265  010422  D0FF               	goto	l21082
 21266  010424  D7DD               	goto	l21024
 21267  010426                     l21030:
 21268                           
 21269                           ; BSR set to: 1
 21270                           ;display.c: 250: cntr = 0;
 21271  010426  0E00               	movlw	0
 21272  010428  0101               	movlb	1	; () banked
 21273  01042A  6FD2               	movwf	__display_time@cntr& (0+255),b
 21274                           
 21275                           ;display.c: 251: while(sethours[cntr])
 21276  01042C  D016               	goto	l21036
 21277  01042E                     l21032:
 21278                           
 21279                           ; BSR set to: 1
 21280                           ;display.c: 252: display_content[0][cntr] = sethours[cntr++];
 21281  01042E  0101               	movlb	1	; () banked
 21282  010430  51D2               	movf	__display_time@cntr& (0+255),w,b
 21283  010432  0D01               	mullw	1
 21284  010434  0EB0               	movlw	low __display_time@sethours
 21285  010436  24F3               	addwf	prodl,w,c
 21286  010438  6ED9               	movwf	fsr2l,c
 21287  01043A  0E01               	movlw	high __display_time@sethours
 21288  01043C  20F4               	addwfc	prodh,w,c
 21289  01043E  6EDA               	movwf	fsr2h,c
 21290  010440  0101               	movlb	1	; () banked
 21291  010442  51D2               	movf	__display_time@cntr& (0+255),w,b
 21292  010444  0D01               	mullw	1
 21293  010446  0E54               	movlw	low _display_content
 21294  010448  24F3               	addwf	prodl,w,c
 21295  01044A  6EE1               	movwf	fsr1l,c
 21296  01044C  0E03               	movlw	high _display_content
 21297  01044E  20F4               	addwfc	prodh,w,c
 21298  010450  6EE2               	movwf	fsr1h,c
 21299  010452  CFDF FFE7          	movff	indf2,indf1
 21300                           
 21301                           ; BSR set to: 1
 21302  010456  0101               	movlb	1	; () banked
 21303  010458  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21304  01045A                     l21036:
 21305                           
 21306                           ; BSR set to: 1
 21307  01045A  0101               	movlb	1	; () banked
 21308  01045C  51D2               	movf	__display_time@cntr& (0+255),w,b
 21309  01045E  0D01               	mullw	1
 21310  010460  0EB0               	movlw	low __display_time@sethours
 21311  010462  24F3               	addwf	prodl,w,c
 21312  010464  6ED9               	movwf	fsr2l,c
 21313  010466  0E01               	movlw	high __display_time@sethours
 21314  010468  20F4               	addwfc	prodh,w,c
 21315  01046A  6EDA               	movwf	fsr2h,c
 21316  01046C  50DF               	movf	indf2,w,c
 21317  01046E  A4D8               	btfss	status,2,c
 21318  010470  D7DE               	goto	l21032
 21319                           
 21320                           ; BSR set to: 1
 21321                           ;display.c: 253: cntr = 0;
 21322                           
 21323                           ; BSR set to: 1
 21324  010472  0E00               	movlw	0
 21325  010474  0101               	movlb	1	; () banked
 21326  010476  6FD2               	movwf	__display_time@cntr& (0+255),b
 21327                           
 21328                           ;display.c: 254: while(pressminutes[cntr])
 21329  010478  D016               	goto	l21044
 21330  01047A                     l21040:
 21331                           
 21332                           ; BSR set to: 1
 21333                           ;display.c: 255: display_content[3][cntr] = pressminutes[cntr++];
 21334  01047A  0101               	movlb	1	; () banked
 21335  01047C  51D2               	movf	__display_time@cntr& (0+255),w,b
 21336  01047E  0D01               	mullw	1
 21337  010480  0E14               	movlw	low __display_time@pressminutes
 21338  010482  24F3               	addwf	prodl,w,c
 21339  010484  6ED9               	movwf	fsr2l,c
 21340  010486  0E01               	movlw	high __display_time@pressminutes
 21341  010488  20F4               	addwfc	prodh,w,c
 21342  01048A  6EDA               	movwf	fsr2h,c
 21343  01048C  0101               	movlb	1	; () banked
 21344  01048E  51D2               	movf	__display_time@cntr& (0+255),w,b
 21345  010490  0D01               	mullw	1
 21346  010492  0E90               	movlw	low (_display_content+60)
 21347  010494  24F3               	addwf	prodl,w,c
 21348  010496  6EE1               	movwf	fsr1l,c
 21349  010498  0E03               	movlw	high (_display_content+60)
 21350  01049A  20F4               	addwfc	prodh,w,c
 21351  01049C  6EE2               	movwf	fsr1h,c
 21352  01049E  CFDF FFE7          	movff	indf2,indf1
 21353                           
 21354                           ; BSR set to: 1
 21355  0104A2  0101               	movlb	1	; () banked
 21356  0104A4  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21357  0104A6                     l21044:
 21358                           
 21359                           ; BSR set to: 1
 21360  0104A6  0101               	movlb	1	; () banked
 21361  0104A8  51D2               	movf	__display_time@cntr& (0+255),w,b
 21362  0104AA  0D01               	mullw	1
 21363  0104AC  0E14               	movlw	low __display_time@pressminutes
 21364  0104AE  24F3               	addwf	prodl,w,c
 21365  0104B0  6ED9               	movwf	fsr2l,c
 21366  0104B2  0E01               	movlw	high __display_time@pressminutes
 21367  0104B4  20F4               	addwfc	prodh,w,c
 21368  0104B6  6EDA               	movwf	fsr2h,c
 21369  0104B8  50DF               	movf	indf2,w,c
 21370  0104BA  B4D8               	btfsc	status,2,c
 21371  0104BC  D0B2               	goto	l21082
 21372  0104BE  D7DD               	goto	l21040
 21373  0104C0                     l21046:
 21374                           
 21375                           ; BSR set to: 1
 21376                           ;display.c: 259: cntr = 0;
 21377  0104C0  0E00               	movlw	0
 21378  0104C2  0101               	movlb	1	; () banked
 21379  0104C4  6FD2               	movwf	__display_time@cntr& (0+255),b
 21380                           
 21381                           ;display.c: 260: while(setminutes[cntr])
 21382  0104C6  D016               	goto	l21052
 21383  0104C8                     l21048:
 21384                           
 21385                           ; BSR set to: 1
 21386                           ;display.c: 261: display_content[0][cntr] = setminutes[cntr++];
 21387  0104C8  0101               	movlb	1	; () banked
 21388  0104CA  51D2               	movf	__display_time@cntr& (0+255),w,b
 21389  0104CC  0D01               	mullw	1
 21390  0104CE  0E8E               	movlw	low __display_time@setminutes
 21391  0104D0  24F3               	addwf	prodl,w,c
 21392  0104D2  6ED9               	movwf	fsr2l,c
 21393  0104D4  0E01               	movlw	high __display_time@setminutes
 21394  0104D6  20F4               	addwfc	prodh,w,c
 21395  0104D8  6EDA               	movwf	fsr2h,c
 21396  0104DA  0101               	movlb	1	; () banked
 21397  0104DC  51D2               	movf	__display_time@cntr& (0+255),w,b
 21398  0104DE  0D01               	mullw	1
 21399  0104E0  0E54               	movlw	low _display_content
 21400  0104E2  24F3               	addwf	prodl,w,c
 21401  0104E4  6EE1               	movwf	fsr1l,c
 21402  0104E6  0E03               	movlw	high _display_content
 21403  0104E8  20F4               	addwfc	prodh,w,c
 21404  0104EA  6EE2               	movwf	fsr1h,c
 21405  0104EC  CFDF FFE7          	movff	indf2,indf1
 21406                           
 21407                           ; BSR set to: 1
 21408  0104F0  0101               	movlb	1	; () banked
 21409  0104F2  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21410  0104F4                     l21052:
 21411                           
 21412                           ; BSR set to: 1
 21413  0104F4  0101               	movlb	1	; () banked
 21414  0104F6  51D2               	movf	__display_time@cntr& (0+255),w,b
 21415  0104F8  0D01               	mullw	1
 21416  0104FA  0E8E               	movlw	low __display_time@setminutes
 21417  0104FC  24F3               	addwf	prodl,w,c
 21418  0104FE  6ED9               	movwf	fsr2l,c
 21419  010500  0E01               	movlw	high __display_time@setminutes
 21420  010502  20F4               	addwfc	prodh,w,c
 21421  010504  6EDA               	movwf	fsr2h,c
 21422  010506  50DF               	movf	indf2,w,c
 21423  010508  A4D8               	btfss	status,2,c
 21424  01050A  D7DE               	goto	l21048
 21425                           
 21426                           ; BSR set to: 1
 21427                           ;display.c: 262: cntr = 0;
 21428                           
 21429                           ; BSR set to: 1
 21430  01050C  0E00               	movlw	0
 21431  01050E  0101               	movlb	1	; () banked
 21432  010510  6FD2               	movwf	__display_time@cntr& (0+255),b
 21433                           
 21434                           ;display.c: 263: while(pressseconds[cntr])
 21435  010512  D016               	goto	l21060
 21436  010514                     l21056:
 21437                           
 21438                           ; BSR set to: 1
 21439                           ;display.c: 264: display_content[3][cntr] = pressseconds[cntr++];
 21440  010514  0101               	movlb	1	; () banked
 21441  010516  51D2               	movf	__display_time@cntr& (0+255),w,b
 21442  010518  0D01               	mullw	1
 21443  01051A  0E28               	movlw	low __display_time@pressseconds
 21444  01051C  24F3               	addwf	prodl,w,c
 21445  01051E  6ED9               	movwf	fsr2l,c
 21446  010520  0E01               	movlw	high __display_time@pressseconds
 21447  010522  20F4               	addwfc	prodh,w,c
 21448  010524  6EDA               	movwf	fsr2h,c
 21449  010526  0101               	movlb	1	; () banked
 21450  010528  51D2               	movf	__display_time@cntr& (0+255),w,b
 21451  01052A  0D01               	mullw	1
 21452  01052C  0E90               	movlw	low (_display_content+60)
 21453  01052E  24F3               	addwf	prodl,w,c
 21454  010530  6EE1               	movwf	fsr1l,c
 21455  010532  0E03               	movlw	high (_display_content+60)
 21456  010534  20F4               	addwfc	prodh,w,c
 21457  010536  6EE2               	movwf	fsr1h,c
 21458  010538  CFDF FFE7          	movff	indf2,indf1
 21459                           
 21460                           ; BSR set to: 1
 21461  01053C  0101               	movlb	1	; () banked
 21462  01053E  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21463  010540                     l21060:
 21464                           
 21465                           ; BSR set to: 1
 21466  010540  0101               	movlb	1	; () banked
 21467  010542  51D2               	movf	__display_time@cntr& (0+255),w,b
 21468  010544  0D01               	mullw	1
 21469  010546  0E28               	movlw	low __display_time@pressseconds
 21470  010548  24F3               	addwf	prodl,w,c
 21471  01054A  6ED9               	movwf	fsr2l,c
 21472  01054C  0E01               	movlw	high __display_time@pressseconds
 21473  01054E  20F4               	addwfc	prodh,w,c
 21474  010550  6EDA               	movwf	fsr2h,c
 21475  010552  50DF               	movf	indf2,w,c
 21476  010554  B4D8               	btfsc	status,2,c
 21477  010556  D065               	goto	l21082
 21478  010558  D7DD               	goto	l21056
 21479  01055A                     l21062:
 21480                           
 21481                           ; BSR set to: 1
 21482                           ;display.c: 268: cntr = 0;
 21483  01055A  0E00               	movlw	0
 21484  01055C  0101               	movlb	1	; () banked
 21485  01055E  6FD2               	movwf	__display_time@cntr& (0+255),b
 21486                           
 21487                           ;display.c: 269: while(setseconds[cntr])
 21488  010560  D016               	goto	l21068
 21489  010562                     l21064:
 21490                           
 21491                           ; BSR set to: 1
 21492                           ;display.c: 270: display_content[0][cntr] = setseconds[cntr++];
 21493  010562  0101               	movlb	1	; () banked
 21494  010564  51D2               	movf	__display_time@cntr& (0+255),w,b
 21495  010566  0D01               	mullw	1
 21496  010568  0E9A               	movlw	low __display_time@setseconds
 21497  01056A  24F3               	addwf	prodl,w,c
 21498  01056C  6ED9               	movwf	fsr2l,c
 21499  01056E  0E01               	movlw	high __display_time@setseconds
 21500  010570  20F4               	addwfc	prodh,w,c
 21501  010572  6EDA               	movwf	fsr2h,c
 21502  010574  0101               	movlb	1	; () banked
 21503  010576  51D2               	movf	__display_time@cntr& (0+255),w,b
 21504  010578  0D01               	mullw	1
 21505  01057A  0E54               	movlw	low _display_content
 21506  01057C  24F3               	addwf	prodl,w,c
 21507  01057E  6EE1               	movwf	fsr1l,c
 21508  010580  0E03               	movlw	high _display_content
 21509  010582  20F4               	addwfc	prodh,w,c
 21510  010584  6EE2               	movwf	fsr1h,c
 21511  010586  CFDF FFE7          	movff	indf2,indf1
 21512                           
 21513                           ; BSR set to: 1
 21514  01058A  0101               	movlb	1	; () banked
 21515  01058C  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21516  01058E                     l21068:
 21517                           
 21518                           ; BSR set to: 1
 21519  01058E  0101               	movlb	1	; () banked
 21520  010590  51D2               	movf	__display_time@cntr& (0+255),w,b
 21521  010592  0D01               	mullw	1
 21522  010594  0E9A               	movlw	low __display_time@setseconds
 21523  010596  24F3               	addwf	prodl,w,c
 21524  010598  6ED9               	movwf	fsr2l,c
 21525  01059A  0E01               	movlw	high __display_time@setseconds
 21526  01059C  20F4               	addwfc	prodh,w,c
 21527  01059E  6EDA               	movwf	fsr2h,c
 21528  0105A0  50DF               	movf	indf2,w,c
 21529  0105A2  A4D8               	btfss	status,2,c
 21530  0105A4  D7DE               	goto	l21064
 21531                           
 21532                           ; BSR set to: 1
 21533                           ;display.c: 271: cntr = 0;
 21534                           
 21535                           ; BSR set to: 1
 21536  0105A6  0E00               	movlw	0
 21537  0105A8  0101               	movlb	1	; () banked
 21538  0105AA  6FD2               	movwf	__display_time@cntr& (0+255),b
 21539                           
 21540                           ;display.c: 272: while(presssave[cntr])
 21541  0105AC  D016               	goto	l21076
 21542  0105AE                     l21072:
 21543                           
 21544                           ; BSR set to: 1
 21545                           ;display.c: 273: display_content[3][cntr] = presssave[cntr++];
 21546  0105AE  0101               	movlb	1	; () banked
 21547  0105B0  51D2               	movf	__display_time@cntr& (0+255),w,b
 21548  0105B2  0D01               	mullw	1
 21549  0105B4  0E70               	movlw	low __display_time@presssave
 21550  0105B6  24F3               	addwf	prodl,w,c
 21551  0105B8  6ED9               	movwf	fsr2l,c
 21552  0105BA  0E01               	movlw	high __display_time@presssave
 21553  0105BC  20F4               	addwfc	prodh,w,c
 21554  0105BE  6EDA               	movwf	fsr2h,c
 21555  0105C0  0101               	movlb	1	; () banked
 21556  0105C2  51D2               	movf	__display_time@cntr& (0+255),w,b
 21557  0105C4  0D01               	mullw	1
 21558  0105C6  0E90               	movlw	low (_display_content+60)
 21559  0105C8  24F3               	addwf	prodl,w,c
 21560  0105CA  6EE1               	movwf	fsr1l,c
 21561  0105CC  0E03               	movlw	high (_display_content+60)
 21562  0105CE  20F4               	addwfc	prodh,w,c
 21563  0105D0  6EE2               	movwf	fsr1h,c
 21564  0105D2  CFDF FFE7          	movff	indf2,indf1
 21565                           
 21566                           ; BSR set to: 1
 21567  0105D6  0101               	movlb	1	; () banked
 21568  0105D8  2BD2               	incf	__display_time@cntr& (0+255),f,b
 21569  0105DA                     l21076:
 21570                           
 21571                           ; BSR set to: 1
 21572  0105DA  0101               	movlb	1	; () banked
 21573  0105DC  51D2               	movf	__display_time@cntr& (0+255),w,b
 21574  0105DE  0D01               	mullw	1
 21575  0105E0  0E70               	movlw	low __display_time@presssave
 21576  0105E2  24F3               	addwf	prodl,w,c
 21577  0105E4  6ED9               	movwf	fsr2l,c
 21578  0105E6  0E01               	movlw	high __display_time@presssave
 21579  0105E8  20F4               	addwfc	prodh,w,c
 21580  0105EA  6EDA               	movwf	fsr2h,c
 21581  0105EC  50DF               	movf	indf2,w,c
 21582  0105EE  B4D8               	btfsc	status,2,c
 21583  0105F0  D018               	goto	l21082
 21584  0105F2  D7DD               	goto	l21072
 21585  0105F4                     l21080:
 21586                           
 21587                           ; BSR set to: 1
 21588  0105F4  0101               	movlb	1	; () banked
 21589  0105F6  51CB               	movf	__display_time@mode& (0+255),w,b
 21590                           
 21591                           ; Switch size 1, requested type "space"
 21592                           ; Number of cases is 7, Range of values is 16 to 22
 21593                           ; switch strategies available:
 21594                           ; Name         Instructions Cycles
 21595                           ; simple_byte           22    12 (average)
 21596                           ;	Chosen strategy is simple_byte
 21597  0105F8  0A10               	xorlw	16	; case 16
 21598  0105FA  B4D8               	btfsc	status,2,c
 21599  0105FC  D5E0               	goto	l20966
 21600  0105FE  0A01               	xorlw	1	; case 17
 21601  010600  B4D8               	btfsc	status,2,c
 21602  010602  D62A               	goto	l20982
 21603  010604  0A03               	xorlw	3	; case 18
 21604  010606  B4D8               	btfsc	status,2,c
 21605  010608  D674               	goto	l20998
 21606  01060A  0A01               	xorlw	1	; case 19
 21607  01060C  B4D8               	btfsc	status,2,c
 21608  01060E  D6BE               	goto	l21014
 21609  010610  0A07               	xorlw	7	; case 20
 21610  010612  B4D8               	btfsc	status,2,c
 21611  010614  D708               	goto	l21030
 21612  010616  0A01               	xorlw	1	; case 21
 21613  010618  B4D8               	btfsc	status,2,c
 21614  01061A  D752               	goto	l21046
 21615  01061C  0A03               	xorlw	3	; case 22
 21616  01061E  B4D8               	btfsc	status,2,c
 21617  010620  D79C               	goto	l21062
 21618  010622                     l21082:
 21619                           
 21620                           ; BSR set to: 1
 21621                           ;display.c: 278: display_content[1][0] = '2';
 21622  010622  0E32               	movlw	50
 21623  010624  0103               	movlb	3	; () banked
 21624  010626  6F68               	movwf	(_display_content+20)& (0+255),b
 21625                           
 21626                           ;display.c: 279: display_content[1][1] = '0';
 21627  010628  0E30               	movlw	48
 21628  01062A  0103               	movlb	3	; () banked
 21629  01062C  6F69               	movwf	(_display_content+21)& (0+255),b
 21630                           
 21631                           ; BSR set to: 3
 21632                           ;display.c: 280: display_content[1][2] = (year>>4) + 48;
 21633  01062E  0101               	movlb	1	; () banked
 21634  010630  39CC               	swapf	__display_time@year& (0+255),w,b
 21635  010632  0B0F               	andlw	15
 21636  010634  0F30               	addlw	48
 21637  010636  0103               	movlb	3	; () banked
 21638  010638  6F6A               	movwf	(_display_content+22)& (0+255),b
 21639                           
 21640                           ; BSR set to: 3
 21641                           ;display.c: 281: display_content[1][3] = (year&0x0F) + 48;
 21642  01063A  0101               	movlb	1	; () banked
 21643  01063C  51CC               	movf	__display_time@year& (0+255),w,b
 21644  01063E  0B0F               	andlw	15
 21645  010640  0F30               	addlw	48
 21646  010642  0103               	movlb	3	; () banked
 21647  010644  6F6B               	movwf	(_display_content+23)& (0+255),b
 21648                           
 21649                           ;display.c: 283: display_content[1][4] = '-';
 21650  010646  0E2D               	movlw	45
 21651  010648  0103               	movlb	3	; () banked
 21652  01064A  6F6C               	movwf	(_display_content+24)& (0+255),b
 21653                           
 21654                           ; BSR set to: 3
 21655                           ;display.c: 284: display_content[1][5] = (month>>4) + 48;
 21656  01064C  0101               	movlb	1	; () banked
 21657  01064E  39CD               	swapf	__display_time@month& (0+255),w,b
 21658  010650  0B0F               	andlw	15
 21659  010652  0F30               	addlw	48
 21660  010654  0103               	movlb	3	; () banked
 21661  010656  6F6D               	movwf	(_display_content+25)& (0+255),b
 21662                           
 21663                           ; BSR set to: 3
 21664                           ;display.c: 285: display_content[1][6] = (month&0x0F) + 48;
 21665  010658  0101               	movlb	1	; () banked
 21666  01065A  51CD               	movf	__display_time@month& (0+255),w,b
 21667  01065C  0B0F               	andlw	15
 21668  01065E  0F30               	addlw	48
 21669  010660  0103               	movlb	3	; () banked
 21670  010662  6F6E               	movwf	(_display_content+26)& (0+255),b
 21671                           
 21672                           ;display.c: 287: display_content[1][7] = '-';
 21673  010664  0E2D               	movlw	45
 21674  010666  0103               	movlb	3	; () banked
 21675  010668  6F6F               	movwf	(_display_content+27)& (0+255),b
 21676                           
 21677                           ; BSR set to: 3
 21678                           ;display.c: 288: display_content[1][8] = (day>>4) + 48;
 21679  01066A  0101               	movlb	1	; () banked
 21680  01066C  39CE               	swapf	__display_time@day& (0+255),w,b
 21681  01066E  0B0F               	andlw	15
 21682  010670  0F30               	addlw	48
 21683  010672  0103               	movlb	3	; () banked
 21684  010674  6F70               	movwf	(_display_content+28)& (0+255),b
 21685                           
 21686                           ; BSR set to: 3
 21687                           ;display.c: 289: display_content[1][9] = (day&0x0F) + 48;
 21688  010676  0101               	movlb	1	; () banked
 21689  010678  51CE               	movf	__display_time@day& (0+255),w,b
 21690  01067A  0B0F               	andlw	15
 21691  01067C  0F30               	addlw	48
 21692  01067E  0103               	movlb	3	; () banked
 21693  010680  6F71               	movwf	(_display_content+29)& (0+255),b
 21694                           
 21695                           ; BSR set to: 3
 21696                           ;display.c: 291: display_content[2][0] = (hours>>4) + 48;
 21697  010682  0101               	movlb	1	; () banked
 21698  010684  39CF               	swapf	__display_time@hours& (0+255),w,b
 21699  010686  0B0F               	andlw	15
 21700  010688  0F30               	addlw	48
 21701  01068A  0103               	movlb	3	; () banked
 21702  01068C  6F7C               	movwf	(_display_content+40)& (0+255),b
 21703                           
 21704                           ; BSR set to: 3
 21705                           ;display.c: 292: display_content[2][1] = (hours&0x0F) + 48;
 21706  01068E  0101               	movlb	1	; () banked
 21707  010690  51CF               	movf	__display_time@hours& (0+255),w,b
 21708  010692  0B0F               	andlw	15
 21709  010694  0F30               	addlw	48
 21710  010696  0103               	movlb	3	; () banked
 21711  010698  6F7D               	movwf	(_display_content+41)& (0+255),b
 21712                           
 21713                           ;display.c: 294: display_content[2][2] = ':';
 21714  01069A  0E3A               	movlw	58
 21715  01069C  0103               	movlb	3	; () banked
 21716  01069E  6F7E               	movwf	(_display_content+42)& (0+255),b
 21717                           
 21718                           ; BSR set to: 3
 21719                           ;display.c: 295: display_content[2][3] = (minutes>>4) + 48;
 21720  0106A0  0101               	movlb	1	; () banked
 21721  0106A2  39D0               	swapf	__display_time@minutes& (0+255),w,b
 21722  0106A4  0B0F               	andlw	15
 21723  0106A6  0F30               	addlw	48
 21724  0106A8  0103               	movlb	3	; () banked
 21725  0106AA  6F7F               	movwf	(_display_content+43)& (0+255),b
 21726                           
 21727                           ; BSR set to: 3
 21728                           ;display.c: 296: display_content[2][4] = (minutes&0x0F) + 48;
 21729  0106AC  0101               	movlb	1	; () banked
 21730  0106AE  51D0               	movf	__display_time@minutes& (0+255),w,b
 21731  0106B0  0B0F               	andlw	15
 21732  0106B2  0F30               	addlw	48
 21733  0106B4  0103               	movlb	3	; () banked
 21734  0106B6  6F80               	movwf	(_display_content+44)& (0+255),b
 21735                           
 21736                           ;display.c: 298: display_content[2][5] = ':';
 21737  0106B8  0E3A               	movlw	58
 21738  0106BA  0103               	movlb	3	; () banked
 21739  0106BC  6F81               	movwf	(_display_content+45)& (0+255),b
 21740                           
 21741                           ; BSR set to: 3
 21742                           ;display.c: 299: display_content[2][6] = (seconds>>4) + 48;
 21743  0106BE  0101               	movlb	1	; () banked
 21744  0106C0  39D1               	swapf	__display_time@seconds& (0+255),w,b
 21745  0106C2  0B0F               	andlw	15
 21746  0106C4  0F30               	addlw	48
 21747  0106C6  0103               	movlb	3	; () banked
 21748  0106C8  6F82               	movwf	(_display_content+46)& (0+255),b
 21749                           
 21750                           ; BSR set to: 3
 21751                           ;display.c: 300: display_content[2][7] = (seconds&0x0F) + 48;
 21752  0106CA  0101               	movlb	1	; () banked
 21753  0106CC  51D1               	movf	__display_time@seconds& (0+255),w,b
 21754  0106CE  0B0F               	andlw	15
 21755  0106D0  0F30               	addlw	48
 21756  0106D2  0103               	movlb	3	; () banked
 21757  0106D4  6F83               	movwf	(_display_content+47)& (0+255),b
 21758                           
 21759                           ; BSR set to: 3
 21760  0106D6  0012               	return		;funcret
 21761  0106D8                     __end_of__display_time:
 21762                           	opt stack 0
 21763                           tblptru	equ	0xFF8
 21764                           tblptrh	equ	0xFF7
 21765                           tblptrl	equ	0xFF6
 21766                           tablat	equ	0xFF5
 21767                           prodh	equ	0xFF4
 21768                           prodl	equ	0xFF3
 21769                           intcon	equ	0xFF2
 21770                           intcon2	equ	0xFF1
 21771                           intcon3	equ	0xFF0
 21772                           postinc0	equ	0xFEE
 21773                           wreg	equ	0xFE8
 21774                           indf1	equ	0xFE7
 21775                           postinc1	equ	0xFE6
 21776                           postdec1	equ	0xFE5
 21777                           plusw1	equ	0xFE3
 21778                           fsr1h	equ	0xFE2
 21779                           fsr1l	equ	0xFE1
 21780                           indf2	equ	0xFDF
 21781                           postinc2	equ	0xFDE
 21782                           postdec2	equ	0xFDD
 21783                           plusw2	equ	0xFDB
 21784                           fsr2h	equ	0xFDA
 21785                           fsr2l	equ	0xFD9
 21786                           status	equ	0xFD8
 21787                           
 21788 ;; *************** function __display_temperature *****************
 21789 ;; Defined at:
 21790 ;;		line 513 in file "display.c"
 21791 ;; Parameters:    Size  Location     Type
 21792 ;;		None
 21793 ;; Auto vars:     Size  Location     Type
 21794 ;;  header         20   48[BANK0 ] const unsigned char [20]
 21795 ;;  external2      12   80[BANK0 ] const unsigned char [12]
 21796 ;;  external1      12   68[BANK0 ] const unsigned char [12]
 21797 ;;  internal       11   92[BANK0 ] const unsigned char [11]
 21798 ;;  cntr            1  103[BANK0 ] unsigned char 
 21799 ;; Return value:  Size  Location     Type
 21800 ;;                  1    wreg      void 
 21801 ;; Registers used:
 21802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21803 ;; Tracked objects:
 21804 ;;		On entry : 0/0
 21805 ;;		On exit  : 0/0
 21806 ;;		Unchanged: 0/0
 21807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21809 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21811 ;;      Totals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21812 ;;Total ram usage:       56 bytes
 21813 ;; Hardware stack levels used:    1
 21814 ;; Hardware stack levels required when called:   14
 21815 ;; This function calls:
 21816 ;;		__display_itoa
 21817 ;; This function is called by:
 21818 ;;		_display_prepare
 21819 ;; This function uses a non-reentrant model
 21820 ;;
 21821                           
 21822                           	psect	text100
 21823  014440                     __ptext100:
 21824                           	opt stack 0
 21825  014440                     __display_temperature:
 21826                           	opt stack 15
 21827                           
 21828                           ;display.c: 515: uint8_t cntr;
 21829                           ;display.c: 516: const char header[] = "Temperature Monitor";
 21830                           
 21831                           ; BSR set to: 3
 21832                           ;incstack = 0
 21833  014440  0E79               	movlw	low __display_temperature@F8773
 21834  014442  6EF6               	movwf	tblptrl,c
 21835  014444                     	if	1	;There is more than 1 active tblptr byte
 21836  014444  0EFC               	movlw	high __display_temperature@F8773
 21837  014446  6EF7               	movwf	tblptrh,c
 21838  014448                     	endif
 21839  014448                     	if	1	;There are 3 active tblptr bytes
 21840  014448  0E00               	movlw	low (__display_temperature@F8773 shr (0+16))
 21841  01444A  6EF8               	movwf	tblptru,c
 21842  01444C                     	endif
 21843  01444C  EE20  F090         	lfsr	2,__display_temperature@header
 21844  014450  0E13               	movlw	19
 21845  014452                     u20970:
 21846  014452  0009               	tblrd		*+
 21847  014454  CFF5 FFDE          	movff	tablat,postinc2
 21848  014458  06E8               	decf	wreg,f,c
 21849  01445A  E2FB               	bc	u20970
 21850                           
 21851                           ;display.c: 517: const char internal[] = "On-board: ";
 21852  01445C  0E69               	movlw	low __display_temperature@F8775
 21853  01445E  6EF6               	movwf	tblptrl,c
 21854  014460                     	if	1	;There is more than 1 active tblptr byte
 21855  014460  0EFE               	movlw	high __display_temperature@F8775
 21856  014462  6EF7               	movwf	tblptrh,c
 21857  014464                     	endif
 21858  014464                     	if	1	;There are 3 active tblptr bytes
 21859  014464  0E00               	movlw	low (__display_temperature@F8775 shr (0+16))
 21860  014466  6EF8               	movwf	tblptru,c
 21861  014468                     	endif
 21862  014468  EE20  F0BC         	lfsr	2,__display_temperature@internal
 21863  01446C  0E0A               	movlw	10
 21864  01446E                     u20980:
 21865  01446E  0009               	tblrd		*+
 21866  014470  CFF5 FFDE          	movff	tablat,postinc2
 21867  014474  06E8               	decf	wreg,f,c
 21868  014476  E2FB               	bc	u20980
 21869                           
 21870                           ;display.c: 518: const char external1[] = "External 1:";
 21871  014478  0E39               	movlw	low __display_temperature@F8777
 21872  01447A  6EF6               	movwf	tblptrl,c
 21873  01447C                     	if	1	;There is more than 1 active tblptr byte
 21874  01447C  0EFE               	movlw	high __display_temperature@F8777
 21875  01447E  6EF7               	movwf	tblptrh,c
 21876  014480                     	endif
 21877  014480                     	if	1	;There are 3 active tblptr bytes
 21878  014480  0E00               	movlw	low (__display_temperature@F8777 shr (0+16))
 21879  014482  6EF8               	movwf	tblptru,c
 21880  014484                     	endif
 21881  014484  EE20  F0A4         	lfsr	2,__display_temperature@external1
 21882  014488  0E0B               	movlw	11
 21883  01448A                     u20990:
 21884  01448A  0009               	tblrd		*+
 21885  01448C  CFF5 FFDE          	movff	tablat,postinc2
 21886  014490  06E8               	decf	wreg,f,c
 21887  014492  E2FB               	bc	u20990
 21888                           
 21889                           ;display.c: 519: const char external2[] = "External 2:";
 21890  014494  0E2D               	movlw	low __display_temperature@F8779
 21891  014496  6EF6               	movwf	tblptrl,c
 21892  014498                     	if	1	;There is more than 1 active tblptr byte
 21893  014498  0EFE               	movlw	high __display_temperature@F8779
 21894  01449A  6EF7               	movwf	tblptrh,c
 21895  01449C                     	endif
 21896  01449C                     	if	1	;There are 3 active tblptr bytes
 21897  01449C  0E00               	movlw	low (__display_temperature@F8779 shr (0+16))
 21898  01449E  6EF8               	movwf	tblptru,c
 21899  0144A0                     	endif
 21900  0144A0  EE20  F0B0         	lfsr	2,__display_temperature@external2
 21901  0144A4  0E0B               	movlw	11
 21902  0144A6                     u21000:
 21903  0144A6  0009               	tblrd		*+
 21904  0144A8  CFF5 FFDE          	movff	tablat,postinc2
 21905  0144AC  06E8               	decf	wreg,f,c
 21906  0144AE  E2FB               	bc	u21000
 21907                           
 21908                           ;display.c: 521: cntr = 0;
 21909  0144B0  0E00               	movlw	0
 21910  0144B2  0100               	movlb	0	; () banked
 21911  0144B4  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 21912                           
 21913                           ;display.c: 522: while(header[cntr])
 21914  0144B6  D016               	goto	l21320
 21915  0144B8                     l21316:
 21916                           
 21917                           ; BSR set to: 0
 21918                           ;display.c: 523: display_content[0][cntr] = header[cntr++];
 21919  0144B8  0100               	movlb	0	; () banked
 21920  0144BA  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21921  0144BC  0D01               	mullw	1
 21922  0144BE  0E90               	movlw	low __display_temperature@header
 21923  0144C0  24F3               	addwf	prodl,w,c
 21924  0144C2  6ED9               	movwf	fsr2l,c
 21925  0144C4  0E00               	movlw	high __display_temperature@header
 21926  0144C6  20F4               	addwfc	prodh,w,c
 21927  0144C8  6EDA               	movwf	fsr2h,c
 21928  0144CA  0100               	movlb	0	; () banked
 21929  0144CC  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21930  0144CE  0D01               	mullw	1
 21931  0144D0  0E54               	movlw	low _display_content
 21932  0144D2  24F3               	addwf	prodl,w,c
 21933  0144D4  6EE1               	movwf	fsr1l,c
 21934  0144D6  0E03               	movlw	high _display_content
 21935  0144D8  20F4               	addwfc	prodh,w,c
 21936  0144DA  6EE2               	movwf	fsr1h,c
 21937  0144DC  CFDF FFE7          	movff	indf2,indf1
 21938                           
 21939                           ; BSR set to: 0
 21940  0144E0  0100               	movlb	0	; () banked
 21941  0144E2  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 21942  0144E4                     l21320:
 21943                           
 21944                           ; BSR set to: 0
 21945  0144E4  0100               	movlb	0	; () banked
 21946  0144E6  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21947  0144E8  0D01               	mullw	1
 21948  0144EA  0E90               	movlw	low __display_temperature@header
 21949  0144EC  24F3               	addwf	prodl,w,c
 21950  0144EE  6ED9               	movwf	fsr2l,c
 21951  0144F0  0E00               	movlw	high __display_temperature@header
 21952  0144F2  20F4               	addwfc	prodh,w,c
 21953  0144F4  6EDA               	movwf	fsr2h,c
 21954  0144F6  50DF               	movf	indf2,w,c
 21955  0144F8  A4D8               	btfss	status,2,c
 21956  0144FA  D7DE               	goto	l21316
 21957                           
 21958                           ; BSR set to: 0
 21959                           ;display.c: 525: cntr = 0;
 21960                           
 21961                           ; BSR set to: 0
 21962  0144FC  0E00               	movlw	0
 21963  0144FE  0100               	movlb	0	; () banked
 21964  014500  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 21965                           
 21966                           ;display.c: 526: while(internal[cntr])
 21967  014502  D016               	goto	l21328
 21968  014504                     l21324:
 21969                           
 21970                           ; BSR set to: 0
 21971                           ;display.c: 527: display_content[1][cntr] = internal[cntr++];
 21972  014504  0100               	movlb	0	; () banked
 21973  014506  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21974  014508  0D01               	mullw	1
 21975  01450A  0EBC               	movlw	low __display_temperature@internal
 21976  01450C  24F3               	addwf	prodl,w,c
 21977  01450E  6ED9               	movwf	fsr2l,c
 21978  014510  0E00               	movlw	high __display_temperature@internal
 21979  014512  20F4               	addwfc	prodh,w,c
 21980  014514  6EDA               	movwf	fsr2h,c
 21981  014516  0100               	movlb	0	; () banked
 21982  014518  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 21983  01451A  0D01               	mullw	1
 21984  01451C  0E68               	movlw	low (_display_content+20)
 21985  01451E  24F3               	addwf	prodl,w,c
 21986  014520  6EE1               	movwf	fsr1l,c
 21987  014522  0E03               	movlw	high (_display_content+20)
 21988  014524  20F4               	addwfc	prodh,w,c
 21989  014526  6EE2               	movwf	fsr1h,c
 21990  014528  CFDF FFE7          	movff	indf2,indf1
 21991                           
 21992                           ; BSR set to: 0
 21993  01452C  0100               	movlb	0	; () banked
 21994  01452E  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 21995  014530                     l21328:
 21996                           
 21997                           ; BSR set to: 0
 21998  014530  0100               	movlb	0	; () banked
 21999  014532  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22000  014534  0D01               	mullw	1
 22001  014536  0EBC               	movlw	low __display_temperature@internal
 22002  014538  24F3               	addwf	prodl,w,c
 22003  01453A  6ED9               	movwf	fsr2l,c
 22004  01453C  0E00               	movlw	high __display_temperature@internal
 22005  01453E  20F4               	addwfc	prodh,w,c
 22006  014540  6EDA               	movwf	fsr2h,c
 22007  014542  50DF               	movf	indf2,w,c
 22008  014544  A4D8               	btfss	status,2,c
 22009  014546  D7DE               	goto	l21324
 22010                           
 22011                           ; BSR set to: 0
 22012                           ;display.c: 529: _display_itoa(os.temperature_onboard, 2, &display_content[1][12]);
 22013                           
 22014                           ; BSR set to: 0
 22015  014548  C236  F078         	movff	_os+54,__display_itoa@value	;volatile
 22016  01454C  C237  F079         	movff	_os+55,__display_itoa@value+1	;volatile
 22017  014550  0E02               	movlw	2
 22018  014552  0100               	movlb	0	; () banked
 22019  014554  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22020  014556  0E74               	movlw	low (_display_content+32)
 22021  014558  0100               	movlb	0	; () banked
 22022  01455A  6F7B               	movwf	__display_itoa@text& (0+255),b
 22023  01455C  0E03               	movlw	high (_display_content+32)
 22024  01455E  0100               	movlb	0	; () banked
 22025  014560  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22026  014562  EC8A  F099         	call	__display_itoa	;wreg free
 22027                           
 22028                           ;display.c: 531: cntr = 0;
 22029  014566  0E00               	movlw	0
 22030  014568  0100               	movlb	0	; () banked
 22031  01456A  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 22032                           
 22033                           ;display.c: 532: while(external1[cntr])
 22034  01456C  D016               	goto	l21338
 22035  01456E                     l21334:
 22036                           
 22037                           ; BSR set to: 0
 22038                           ;display.c: 533: display_content[2][cntr] = external1[cntr++];
 22039  01456E  0100               	movlb	0	; () banked
 22040  014570  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22041  014572  0D01               	mullw	1
 22042  014574  0EA4               	movlw	low __display_temperature@external1
 22043  014576  24F3               	addwf	prodl,w,c
 22044  014578  6ED9               	movwf	fsr2l,c
 22045  01457A  0E00               	movlw	high __display_temperature@external1
 22046  01457C  20F4               	addwfc	prodh,w,c
 22047  01457E  6EDA               	movwf	fsr2h,c
 22048  014580  0100               	movlb	0	; () banked
 22049  014582  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22050  014584  0D01               	mullw	1
 22051  014586  0E7C               	movlw	low (_display_content+40)
 22052  014588  24F3               	addwf	prodl,w,c
 22053  01458A  6EE1               	movwf	fsr1l,c
 22054  01458C  0E03               	movlw	high (_display_content+40)
 22055  01458E  20F4               	addwfc	prodh,w,c
 22056  014590  6EE2               	movwf	fsr1h,c
 22057  014592  CFDF FFE7          	movff	indf2,indf1
 22058                           
 22059                           ; BSR set to: 0
 22060  014596  0100               	movlb	0	; () banked
 22061  014598  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 22062  01459A                     l21338:
 22063                           
 22064                           ; BSR set to: 0
 22065  01459A  0100               	movlb	0	; () banked
 22066  01459C  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22067  01459E  0D01               	mullw	1
 22068  0145A0  0EA4               	movlw	low __display_temperature@external1
 22069  0145A2  24F3               	addwf	prodl,w,c
 22070  0145A4  6ED9               	movwf	fsr2l,c
 22071  0145A6  0E00               	movlw	high __display_temperature@external1
 22072  0145A8  20F4               	addwfc	prodh,w,c
 22073  0145AA  6EDA               	movwf	fsr2h,c
 22074  0145AC  50DF               	movf	indf2,w,c
 22075  0145AE  A4D8               	btfss	status,2,c
 22076  0145B0  D7DE               	goto	l21334
 22077                           
 22078                           ; BSR set to: 0
 22079                           ;display.c: 535: _display_itoa(os.temperature_external_1, 2, &display_content[2][12]);
 22080                           
 22081                           ; BSR set to: 0
 22082  0145B2  C23A  F078         	movff	_os+58,__display_itoa@value	;volatile
 22083  0145B6  C23B  F079         	movff	_os+59,__display_itoa@value+1	;volatile
 22084  0145BA  0E02               	movlw	2
 22085  0145BC  0100               	movlb	0	; () banked
 22086  0145BE  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22087  0145C0  0E88               	movlw	low (_display_content+52)
 22088  0145C2  0100               	movlb	0	; () banked
 22089  0145C4  6F7B               	movwf	__display_itoa@text& (0+255),b
 22090  0145C6  0E03               	movlw	high (_display_content+52)
 22091  0145C8  0100               	movlb	0	; () banked
 22092  0145CA  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22093  0145CC  EC8A  F099         	call	__display_itoa	;wreg free
 22094                           
 22095                           ;display.c: 537: cntr = 0;
 22096  0145D0  0E00               	movlw	0
 22097  0145D2  0100               	movlb	0	; () banked
 22098  0145D4  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 22099                           
 22100                           ;display.c: 538: while(external2[cntr])
 22101  0145D6  D016               	goto	l21348
 22102  0145D8                     l21344:
 22103                           
 22104                           ; BSR set to: 0
 22105                           ;display.c: 539: display_content[3][cntr] = external2[cntr++];
 22106  0145D8  0100               	movlb	0	; () banked
 22107  0145DA  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22108  0145DC  0D01               	mullw	1
 22109  0145DE  0EB0               	movlw	low __display_temperature@external2
 22110  0145E0  24F3               	addwf	prodl,w,c
 22111  0145E2  6ED9               	movwf	fsr2l,c
 22112  0145E4  0E00               	movlw	high __display_temperature@external2
 22113  0145E6  20F4               	addwfc	prodh,w,c
 22114  0145E8  6EDA               	movwf	fsr2h,c
 22115  0145EA  0100               	movlb	0	; () banked
 22116  0145EC  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22117  0145EE  0D01               	mullw	1
 22118  0145F0  0E90               	movlw	low (_display_content+60)
 22119  0145F2  24F3               	addwf	prodl,w,c
 22120  0145F4  6EE1               	movwf	fsr1l,c
 22121  0145F6  0E03               	movlw	high (_display_content+60)
 22122  0145F8  20F4               	addwfc	prodh,w,c
 22123  0145FA  6EE2               	movwf	fsr1h,c
 22124  0145FC  CFDF FFE7          	movff	indf2,indf1
 22125                           
 22126                           ; BSR set to: 0
 22127  014600  0100               	movlb	0	; () banked
 22128  014602  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 22129  014604                     l21348:
 22130                           
 22131                           ; BSR set to: 0
 22132  014604  0100               	movlb	0	; () banked
 22133  014606  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 22134  014608  0D01               	mullw	1
 22135  01460A  0EB0               	movlw	low __display_temperature@external2
 22136  01460C  24F3               	addwf	prodl,w,c
 22137  01460E  6ED9               	movwf	fsr2l,c
 22138  014610  0E00               	movlw	high __display_temperature@external2
 22139  014612  20F4               	addwfc	prodh,w,c
 22140  014614  6EDA               	movwf	fsr2h,c
 22141  014616  50DF               	movf	indf2,w,c
 22142  014618  A4D8               	btfss	status,2,c
 22143  01461A  D7DE               	goto	l21344
 22144                           
 22145                           ; BSR set to: 0
 22146                           ;display.c: 541: _display_itoa(os.temperature_external_2, 2, &display_content[3][12]);
 22147                           
 22148                           ; BSR set to: 0
 22149  01461C  C23E  F078         	movff	_os+62,__display_itoa@value	;volatile
 22150  014620  C23F  F079         	movff	_os+63,__display_itoa@value+1	;volatile
 22151  014624  0E02               	movlw	2
 22152  014626  0100               	movlb	0	; () banked
 22153  014628  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 22154  01462A  0E9C               	movlw	low (_display_content+72)
 22155  01462C  0100               	movlb	0	; () banked
 22156  01462E  6F7B               	movwf	__display_itoa@text& (0+255),b
 22157  014630  0E03               	movlw	high (_display_content+72)
 22158  014632  0100               	movlb	0	; () banked
 22159  014634  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 22160  014636  EC8A  F099         	call	__display_itoa	;wreg free
 22161  01463A  0012               	return		;funcret
 22162  01463C                     __end_of__display_temperature:
 22163                           	opt stack 0
 22164                           tblptru	equ	0xFF8
 22165                           tblptrh	equ	0xFF7
 22166                           tblptrl	equ	0xFF6
 22167                           tablat	equ	0xFF5
 22168                           prodh	equ	0xFF4
 22169                           prodl	equ	0xFF3
 22170                           intcon	equ	0xFF2
 22171                           intcon2	equ	0xFF1
 22172                           intcon3	equ	0xFF0
 22173                           postinc0	equ	0xFEE
 22174                           wreg	equ	0xFE8
 22175                           indf1	equ	0xFE7
 22176                           postinc1	equ	0xFE6
 22177                           postdec1	equ	0xFE5
 22178                           plusw1	equ	0xFE3
 22179                           fsr1h	equ	0xFE2
 22180                           fsr1l	equ	0xFE1
 22181                           indf2	equ	0xFDF
 22182                           postinc2	equ	0xFDE
 22183                           postdec2	equ	0xFDD
 22184                           plusw2	equ	0xFDB
 22185                           fsr2h	equ	0xFDA
 22186                           fsr2l	equ	0xFD9
 22187                           status	equ	0xFD8
 22188                           
 22189 ;; *************** function __display_outputs *****************
 22190 ;; Defined at:
 22191 ;;		line 336 in file "display.c"
 22192 ;; Parameters:    Size  Location     Type
 22193 ;;  mode            1    wreg     unsigned char 
 22194 ;; Auto vars:     Size  Location     Type
 22195 ;;  mode            1   72[BANK0 ] unsigned char 
 22196 ;;  line4          21   21[BANK0 ] const unsigned char [21]
 22197 ;;  line3          21    0[BANK0 ] const unsigned char [21]
 22198 ;;  low            16   42[BANK0 ] const unsigned char [16]
 22199 ;;  header         14   58[BANK0 ] const unsigned char [14]
 22200 ;;  cntr            1   73[BANK0 ] unsigned char 
 22201 ;; Return value:  Size  Location     Type
 22202 ;;                  1    wreg      void 
 22203 ;; Registers used:
 22204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 22205 ;; Tracked objects:
 22206 ;;		On entry : 0/0
 22207 ;;		On exit  : 0/0
 22208 ;;		Unchanged: 0/0
 22209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22211 ;;      Locals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22213 ;;      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22214 ;;Total ram usage:       74 bytes
 22215 ;; Hardware stack levels used:    1
 22216 ;; Hardware stack levels required when called:   10
 22217 ;; This function calls:
 22218 ;;		Nothing
 22219 ;; This function is called by:
 22220 ;;		_display_prepare
 22221 ;; This function uses a non-reentrant model
 22222 ;;
 22223                           
 22224                           	psect	text101
 22225  013DB8                     __ptext101:
 22226                           	opt stack 0
 22227  013DB8                     __display_outputs:
 22228                           	opt stack 19
 22229                           
 22230                           ;incstack = 0
 22231                           ;__display_outputs@mode stored from wreg
 22232  013DB8  0100               	movlb	0	; () banked
 22233  013DBA  6FA8               	movwf	__display_outputs@mode& (0+255),b
 22234                           
 22235                           ;display.c: 338: uint8_t cntr;
 22236                           ;display.c: 339: const char header[] = "Power Outputs";
 22237  013DBC  0E03               	movlw	low __display_outputs@F8722
 22238  013DBE  6EF6               	movwf	tblptrl,c
 22239  013DC0                     	if	1	;There is more than 1 active tblptr byte
 22240  013DC0  0EFE               	movlw	high __display_outputs@F8722
 22241  013DC2  6EF7               	movwf	tblptrh,c
 22242  013DC4                     	endif
 22243  013DC4                     	if	1	;There are 3 active tblptr bytes
 22244  013DC4  0E00               	movlw	low (__display_outputs@F8722 shr (0+16))
 22245  013DC6  6EF8               	movwf	tblptru,c
 22246  013DC8                     	endif
 22247  013DC8  EE20  F09A         	lfsr	2,__display_outputs@header
 22248  013DCC  0E0D               	movlw	13
 22249  013DCE                     u20610:
 22250  013DCE  0009               	tblrd		*+
 22251  013DD0  CFF5 FFDE          	movff	tablat,postinc2
 22252  013DD4  06E8               	decf	wreg,f,c
 22253  013DD6  E2FB               	bc	u20610
 22254                           
 22255                           ;display.c: 340: const char low[] = "Battery too low";
 22256  013DD8  0EA5               	movlw	low __display_outputs@F8724
 22257  013DDA  6EF6               	movwf	tblptrl,c
 22258  013DDC                     	if	1	;There is more than 1 active tblptr byte
 22259  013DDC  0EFD               	movlw	high __display_outputs@F8724
 22260  013DDE  6EF7               	movwf	tblptrh,c
 22261  013DE0                     	endif
 22262  013DE0                     	if	1	;There are 3 active tblptr bytes
 22263  013DE0  0E00               	movlw	low (__display_outputs@F8724 shr (0+16))
 22264  013DE2  6EF8               	movwf	tblptru,c
 22265  013DE4                     	endif
 22266  013DE4  EE20  F08A         	lfsr	2,__display_outputs@low
 22267  013DE8  0E0F               	movlw	15
 22268  013DEA                     u20620:
 22269  013DEA  0009               	tblrd		*+
 22270  013DEC  CFF5 FFDE          	movff	tablat,postinc2
 22271  013DF0  06E8               	decf	wreg,f,c
 22272  013DF2  E2FB               	bc	u20620
 22273                           
 22274                           ;display.c: 341: const char line3[] = "  Out1 off  Out2 off";
 22275  013DF4  0E64               	movlw	low __display_outputs@F8726
 22276  013DF6  6EF6               	movwf	tblptrl,c
 22277  013DF8                     	if	1	;There is more than 1 active tblptr byte
 22278  013DF8  0EFC               	movlw	high __display_outputs@F8726
 22279  013DFA  6EF7               	movwf	tblptrh,c
 22280  013DFC                     	endif
 22281  013DFC                     	if	1	;There are 3 active tblptr bytes
 22282  013DFC  0E00               	movlw	low (__display_outputs@F8726 shr (0+16))
 22283  013DFE  6EF8               	movwf	tblptru,c
 22284  013E00                     	endif
 22285  013E00  EE20  F060         	lfsr	2,__display_outputs@line3
 22286  013E04  0E14               	movlw	20
 22287  013E06                     u20630:
 22288  013E06  0009               	tblrd		*+
 22289  013E08  CFF5 FFDE          	movff	tablat,postinc2
 22290  013E0C  06E8               	decf	wreg,f,c
 22291  013E0E  E2FB               	bc	u20630
 22292                           
 22293                           ;display.c: 342: const char line4[] = "  Out3 off  Out4 off";
 22294  013E10  0E4F               	movlw	low __display_outputs@F8728
 22295  013E12  6EF6               	movwf	tblptrl,c
 22296  013E14                     	if	1	;There is more than 1 active tblptr byte
 22297  013E14  0EFC               	movlw	high __display_outputs@F8728
 22298  013E16  6EF7               	movwf	tblptrh,c
 22299  013E18                     	endif
 22300  013E18                     	if	1	;There are 3 active tblptr bytes
 22301  013E18  0E00               	movlw	low (__display_outputs@F8728 shr (0+16))
 22302  013E1A  6EF8               	movwf	tblptru,c
 22303  013E1C                     	endif
 22304  013E1C  EE20  F075         	lfsr	2,__display_outputs@line4
 22305  013E20  0E14               	movlw	20
 22306  013E22                     u20640:
 22307  013E22  0009               	tblrd		*+
 22308  013E24  CFF5 FFDE          	movff	tablat,postinc2
 22309  013E28  06E8               	decf	wreg,f,c
 22310  013E2A  E2FB               	bc	u20640
 22311                           
 22312                           ;display.c: 344: cntr = 0;
 22313  013E2C  0E00               	movlw	0
 22314  013E2E  0100               	movlb	0	; () banked
 22315  013E30  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 22316                           
 22317                           ;display.c: 345: while(header[cntr])
 22318  013E32  D016               	goto	l21154
 22319  013E34                     l21150:
 22320                           
 22321                           ; BSR set to: 0
 22322                           ;display.c: 346: display_content[0][cntr] = header[cntr++];
 22323  013E34  0100               	movlb	0	; () banked
 22324  013E36  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22325  013E38  0D01               	mullw	1
 22326  013E3A  0E9A               	movlw	low __display_outputs@header
 22327  013E3C  24F3               	addwf	prodl,w,c
 22328  013E3E  6ED9               	movwf	fsr2l,c
 22329  013E40  0E00               	movlw	high __display_outputs@header
 22330  013E42  20F4               	addwfc	prodh,w,c
 22331  013E44  6EDA               	movwf	fsr2h,c
 22332  013E46  0100               	movlb	0	; () banked
 22333  013E48  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22334  013E4A  0D01               	mullw	1
 22335  013E4C  0E54               	movlw	low _display_content
 22336  013E4E  24F3               	addwf	prodl,w,c
 22337  013E50  6EE1               	movwf	fsr1l,c
 22338  013E52  0E03               	movlw	high _display_content
 22339  013E54  20F4               	addwfc	prodh,w,c
 22340  013E56  6EE2               	movwf	fsr1h,c
 22341  013E58  CFDF FFE7          	movff	indf2,indf1
 22342                           
 22343                           ; BSR set to: 0
 22344  013E5C  0100               	movlb	0	; () banked
 22345  013E5E  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 22346  013E60                     l21154:
 22347                           
 22348                           ; BSR set to: 0
 22349  013E60  0100               	movlb	0	; () banked
 22350  013E62  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22351  013E64  0D01               	mullw	1
 22352  013E66  0E9A               	movlw	low __display_outputs@header
 22353  013E68  24F3               	addwf	prodl,w,c
 22354  013E6A  6ED9               	movwf	fsr2l,c
 22355  013E6C  0E00               	movlw	high __display_outputs@header
 22356  013E6E  20F4               	addwfc	prodh,w,c
 22357  013E70  6EDA               	movwf	fsr2h,c
 22358  013E72  50DF               	movf	indf2,w,c
 22359  013E74  A4D8               	btfss	status,2,c
 22360  013E76  D7DE               	goto	l21150
 22361                           
 22362                           ; BSR set to: 0
 22363                           ;display.c: 348: if(os.output_voltage<-1)
 22364                           
 22365                           ; BSR set to: 0
 22366  013E78  0102               	movlb	2	; () banked
 22367  013E7A  AF28               	btfss	(_os+40)& (0+255),7,b	;volatile
 22368  013E7C  D02D               	goto	l21166
 22369  013E7E  0102               	movlb	2	; () banked
 22370  013E80  2927               	incf	(_os+39)& (0+255),w,b	;volatile
 22371  013E82  0EFF               	movlw	255
 22372  013E84  0102               	movlb	2	; () banked
 22373  013E86  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
 22374  013E88  B0D8               	btfsc	status,0,c
 22375  013E8A  D026               	goto	l21166
 22376                           
 22377                           ; BSR set to: 2
 22378                           ;display.c: 349: {
 22379                           ;display.c: 350: cntr = 0;
 22380  013E8C  0E00               	movlw	0
 22381  013E8E  0100               	movlb	0	; () banked
 22382  013E90  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 22383                           
 22384                           ;display.c: 351: while(low[cntr])
 22385  013E92  D016               	goto	l21164
 22386  013E94                     l21160:
 22387                           
 22388                           ; BSR set to: 0
 22389                           ;display.c: 352: display_content[1][cntr] = low[cntr++];
 22390  013E94  0100               	movlb	0	; () banked
 22391  013E96  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22392  013E98  0D01               	mullw	1
 22393  013E9A  0E8A               	movlw	low __display_outputs@low
 22394  013E9C  24F3               	addwf	prodl,w,c
 22395  013E9E  6ED9               	movwf	fsr2l,c
 22396  013EA0  0E00               	movlw	high __display_outputs@low
 22397  013EA2  20F4               	addwfc	prodh,w,c
 22398  013EA4  6EDA               	movwf	fsr2h,c
 22399  013EA6  0100               	movlb	0	; () banked
 22400  013EA8  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22401  013EAA  0D01               	mullw	1
 22402  013EAC  0E68               	movlw	low (_display_content+20)
 22403  013EAE  24F3               	addwf	prodl,w,c
 22404  013EB0  6EE1               	movwf	fsr1l,c
 22405  013EB2  0E03               	movlw	high (_display_content+20)
 22406  013EB4  20F4               	addwfc	prodh,w,c
 22407  013EB6  6EE2               	movwf	fsr1h,c
 22408  013EB8  CFDF FFE7          	movff	indf2,indf1
 22409                           
 22410                           ; BSR set to: 0
 22411  013EBC  0100               	movlb	0	; () banked
 22412  013EBE  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 22413  013EC0                     l21164:
 22414                           
 22415                           ; BSR set to: 0
 22416  013EC0  0100               	movlb	0	; () banked
 22417  013EC2  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22418  013EC4  0D01               	mullw	1
 22419  013EC6  0E8A               	movlw	low __display_outputs@low
 22420  013EC8  24F3               	addwf	prodl,w,c
 22421  013ECA  6ED9               	movwf	fsr2l,c
 22422  013ECC  0E00               	movlw	high __display_outputs@low
 22423  013ECE  20F4               	addwfc	prodh,w,c
 22424  013ED0  6EDA               	movwf	fsr2h,c
 22425  013ED2  50DF               	movf	indf2,w,c
 22426  013ED4  A4D8               	btfss	status,2,c
 22427  013ED6  D7DE               	goto	l21160
 22428  013ED8                     l21166:
 22429                           
 22430                           ;display.c: 353: }
 22431                           ;display.c: 355: cntr = 0;
 22432  013ED8  0E00               	movlw	0
 22433  013EDA  0100               	movlb	0	; () banked
 22434  013EDC  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 22435                           
 22436                           ;display.c: 356: while(line3[cntr])
 22437  013EDE  D016               	goto	l21172
 22438  013EE0                     l21168:
 22439                           
 22440                           ; BSR set to: 0
 22441                           ;display.c: 357: display_content[2][cntr] = line3[cntr++];
 22442  013EE0  0100               	movlb	0	; () banked
 22443  013EE2  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22444  013EE4  0D01               	mullw	1
 22445  013EE6  0E60               	movlw	low __display_outputs@line3
 22446  013EE8  24F3               	addwf	prodl,w,c
 22447  013EEA  6ED9               	movwf	fsr2l,c
 22448  013EEC  0E00               	movlw	high __display_outputs@line3
 22449  013EEE  20F4               	addwfc	prodh,w,c
 22450  013EF0  6EDA               	movwf	fsr2h,c
 22451  013EF2  0100               	movlb	0	; () banked
 22452  013EF4  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22453  013EF6  0D01               	mullw	1
 22454  013EF8  0E7C               	movlw	low (_display_content+40)
 22455  013EFA  24F3               	addwf	prodl,w,c
 22456  013EFC  6EE1               	movwf	fsr1l,c
 22457  013EFE  0E03               	movlw	high (_display_content+40)
 22458  013F00  20F4               	addwfc	prodh,w,c
 22459  013F02  6EE2               	movwf	fsr1h,c
 22460  013F04  CFDF FFE7          	movff	indf2,indf1
 22461                           
 22462                           ; BSR set to: 0
 22463  013F08  0100               	movlb	0	; () banked
 22464  013F0A  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 22465  013F0C                     l21172:
 22466                           
 22467                           ; BSR set to: 0
 22468  013F0C  0100               	movlb	0	; () banked
 22469  013F0E  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22470  013F10  0D01               	mullw	1
 22471  013F12  0E60               	movlw	low __display_outputs@line3
 22472  013F14  24F3               	addwf	prodl,w,c
 22473  013F16  6ED9               	movwf	fsr2l,c
 22474  013F18  0E00               	movlw	high __display_outputs@line3
 22475  013F1A  20F4               	addwfc	prodh,w,c
 22476  013F1C  6EDA               	movwf	fsr2h,c
 22477  013F1E  50DF               	movf	indf2,w,c
 22478  013F20  A4D8               	btfss	status,2,c
 22479  013F22  D7DE               	goto	l21168
 22480                           
 22481                           ; BSR set to: 0
 22482                           ;display.c: 359: cntr = 0;
 22483                           
 22484                           ; BSR set to: 0
 22485  013F24  0E00               	movlw	0
 22486  013F26  0100               	movlb	0	; () banked
 22487  013F28  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 22488                           
 22489                           ;display.c: 360: while(line4[cntr])
 22490  013F2A  D016               	goto	l21180
 22491  013F2C                     l21176:
 22492                           
 22493                           ; BSR set to: 0
 22494                           ;display.c: 361: display_content[3][cntr] = line4[cntr++];
 22495  013F2C  0100               	movlb	0	; () banked
 22496  013F2E  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22497  013F30  0D01               	mullw	1
 22498  013F32  0E75               	movlw	low __display_outputs@line4
 22499  013F34  24F3               	addwf	prodl,w,c
 22500  013F36  6ED9               	movwf	fsr2l,c
 22501  013F38  0E00               	movlw	high __display_outputs@line4
 22502  013F3A  20F4               	addwfc	prodh,w,c
 22503  013F3C  6EDA               	movwf	fsr2h,c
 22504  013F3E  0100               	movlb	0	; () banked
 22505  013F40  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22506  013F42  0D01               	mullw	1
 22507  013F44  0E90               	movlw	low (_display_content+60)
 22508  013F46  24F3               	addwf	prodl,w,c
 22509  013F48  6EE1               	movwf	fsr1l,c
 22510  013F4A  0E03               	movlw	high (_display_content+60)
 22511  013F4C  20F4               	addwfc	prodh,w,c
 22512  013F4E  6EE2               	movwf	fsr1h,c
 22513  013F50  CFDF FFE7          	movff	indf2,indf1
 22514                           
 22515                           ; BSR set to: 0
 22516  013F54  0100               	movlb	0	; () banked
 22517  013F56  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 22518  013F58                     l21180:
 22519                           
 22520                           ; BSR set to: 0
 22521  013F58  0100               	movlb	0	; () banked
 22522  013F5A  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 22523  013F5C  0D01               	mullw	1
 22524  013F5E  0E75               	movlw	low __display_outputs@line4
 22525  013F60  24F3               	addwf	prodl,w,c
 22526  013F62  6ED9               	movwf	fsr2l,c
 22527  013F64  0E00               	movlw	high __display_outputs@line4
 22528  013F66  20F4               	addwfc	prodh,w,c
 22529  013F68  6EDA               	movwf	fsr2h,c
 22530  013F6A  50DF               	movf	indf2,w,c
 22531  013F6C  A4D8               	btfss	status,2,c
 22532  013F6E  D7DE               	goto	l21176
 22533                           
 22534                           ; BSR set to: 0
 22535                           ;display.c: 363: if(os.outputs & OUTPUT_1)
 22536  013F70  0102               	movlb	2	; () banked
 22537  013F72  A105               	btfss	(_os+5)& (0+255),0,b	;volatile
 22538  013F74  D006               	goto	l21184
 22539                           
 22540                           ; BSR set to: 2
 22541                           ;display.c: 364: {
 22542                           ;display.c: 365: display_content[2][8] = 'n';
 22543  013F76  0E6E               	movlw	110
 22544  013F78  0103               	movlb	3	; () banked
 22545  013F7A  6F84               	movwf	(_display_content+48)& (0+255),b
 22546                           
 22547                           ;display.c: 366: display_content[2][9] = ' ';
 22548  013F7C  0E20               	movlw	32
 22549  013F7E  0103               	movlb	3	; () banked
 22550  013F80  6F85               	movwf	(_display_content+49)& (0+255),b
 22551  013F82                     l21184:
 22552                           
 22553                           ;display.c: 367: }
 22554                           ;display.c: 368: if(os.outputs & OUTPUT_2)
 22555  013F82  0102               	movlb	2	; () banked
 22556  013F84  A305               	btfss	(_os+5)& (0+255),1,b	;volatile
 22557  013F86  D006               	goto	l21188
 22558                           
 22559                           ; BSR set to: 2
 22560                           ;display.c: 369: {
 22561                           ;display.c: 370: display_content[2][18] = 'n';
 22562  013F88  0E6E               	movlw	110
 22563  013F8A  0103               	movlb	3	; () banked
 22564  013F8C  6F8E               	movwf	(_display_content+58)& (0+255),b
 22565                           
 22566                           ;display.c: 371: display_content[2][19] = ' ';
 22567  013F8E  0E20               	movlw	32
 22568  013F90  0103               	movlb	3	; () banked
 22569  013F92  6F8F               	movwf	(_display_content+59)& (0+255),b
 22570  013F94                     l21188:
 22571                           
 22572                           ;display.c: 372: }
 22573                           ;display.c: 373: if(os.outputs & OUTPUT_3)
 22574  013F94  0102               	movlb	2	; () banked
 22575  013F96  A505               	btfss	(_os+5)& (0+255),2,b	;volatile
 22576  013F98  D006               	goto	l21192
 22577                           
 22578                           ; BSR set to: 2
 22579                           ;display.c: 374: {
 22580                           ;display.c: 375: display_content[3][8] = 'n';
 22581  013F9A  0E6E               	movlw	110
 22582  013F9C  0103               	movlb	3	; () banked
 22583  013F9E  6F98               	movwf	(_display_content+68)& (0+255),b
 22584                           
 22585                           ;display.c: 376: display_content[3][9] = ' ';
 22586  013FA0  0E20               	movlw	32
 22587  013FA2  0103               	movlb	3	; () banked
 22588  013FA4  6F99               	movwf	(_display_content+69)& (0+255),b
 22589  013FA6                     l21192:
 22590                           
 22591                           ;display.c: 377: }
 22592                           ;display.c: 378: if(os.outputs & OUTPUT_4)
 22593  013FA6  0102               	movlb	2	; () banked
 22594  013FA8  A705               	btfss	(_os+5)& (0+255),3,b	;volatile
 22595  013FAA  D023               	goto	l21206
 22596                           
 22597                           ; BSR set to: 2
 22598                           ;display.c: 379: {
 22599                           ;display.c: 380: display_content[3][18] = 'n';
 22600  013FAC  0E6E               	movlw	110
 22601  013FAE  0103               	movlb	3	; () banked
 22602  013FB0  6FA2               	movwf	(_display_content+78)& (0+255),b
 22603                           
 22604                           ;display.c: 381: display_content[3][19] = ' ';
 22605  013FB2  0E20               	movlw	32
 22606  013FB4  0103               	movlb	3	; () banked
 22607  013FB6  6FA3               	movwf	(_display_content+79)& (0+255),b
 22608                           
 22609                           ; BSR set to: 3
 22610                           ;display.c: 382: }
 22611                           ;display.c: 384: switch(mode)
 22612  013FB8  D01C               	goto	l21206
 22613  013FBA                     l21196:
 22614                           
 22615                           ;display.c: 387: display_content[2][0] = '-';
 22616  013FBA  0E2D               	movlw	45
 22617  013FBC  0103               	movlb	3	; () banked
 22618  013FBE  6F7C               	movwf	(_display_content+40)& (0+255),b
 22619                           
 22620                           ;display.c: 388: display_content[2][1] = '>';
 22621  013FC0  0E3E               	movlw	62
 22622  013FC2  0103               	movlb	3	; () banked
 22623  013FC4  6F7D               	movwf	(_display_content+41)& (0+255),b
 22624                           
 22625                           ;display.c: 389: break;
 22626  013FC6  0012               	return	
 22627  013FC8                     l21198:
 22628                           
 22629                           ;display.c: 391: display_content[2][10] = '-';
 22630  013FC8  0E2D               	movlw	45
 22631  013FCA  0103               	movlb	3	; () banked
 22632  013FCC  6F86               	movwf	(_display_content+50)& (0+255),b
 22633                           
 22634                           ;display.c: 392: display_content[2][11] = '>';
 22635  013FCE  0E3E               	movlw	62
 22636  013FD0  0103               	movlb	3	; () banked
 22637  013FD2  6F87               	movwf	(_display_content+51)& (0+255),b
 22638                           
 22639                           ;display.c: 393: break;
 22640  013FD4  0012               	return	
 22641  013FD6                     l21200:
 22642                           
 22643                           ;display.c: 395: display_content[3][0] = '-';
 22644  013FD6  0E2D               	movlw	45
 22645  013FD8  0103               	movlb	3	; () banked
 22646  013FDA  6F90               	movwf	(_display_content+60)& (0+255),b
 22647                           
 22648                           ;display.c: 396: display_content[3][1] = '>';
 22649  013FDC  0E3E               	movlw	62
 22650  013FDE  0103               	movlb	3	; () banked
 22651  013FE0  6F91               	movwf	(_display_content+61)& (0+255),b
 22652                           
 22653                           ;display.c: 397: break;
 22654  013FE2  0012               	return	
 22655  013FE4                     l21202:
 22656                           
 22657                           ;display.c: 399: display_content[3][10] = '-';
 22658  013FE4  0E2D               	movlw	45
 22659  013FE6  0103               	movlb	3	; () banked
 22660  013FE8  6F9A               	movwf	(_display_content+70)& (0+255),b
 22661                           
 22662                           ;display.c: 400: display_content[3][11] = '>';
 22663  013FEA  0E3E               	movlw	62
 22664  013FEC  0103               	movlb	3	; () banked
 22665  013FEE  6F9B               	movwf	(_display_content+71)& (0+255),b
 22666                           
 22667                           ; BSR set to: 3
 22668                           ;display.c: 402: }
 22669                           
 22670                           ;display.c: 401: break;
 22671  013FF0  0012               	return	
 22672  013FF2                     l21206:
 22673  013FF2  0100               	movlb	0	; () banked
 22674  013FF4  51A8               	movf	__display_outputs@mode& (0+255),w,b
 22675                           
 22676                           ; Switch size 1, requested type "space"
 22677                           ; Number of cases is 4, Range of values is 49 to 52
 22678                           ; switch strategies available:
 22679                           ; Name         Instructions Cycles
 22680                           ; simple_byte           13     7 (average)
 22681                           ;	Chosen strategy is simple_byte
 22682  013FF6  0A31               	xorlw	49	; case 49
 22683  013FF8  B4D8               	btfsc	status,2,c
 22684  013FFA  D7DF               	goto	l21196
 22685  013FFC  0A03               	xorlw	3	; case 50
 22686  013FFE  B4D8               	btfsc	status,2,c
 22687  014000  D7E3               	goto	l21198
 22688  014002  0A01               	xorlw	1	; case 51
 22689  014004  B4D8               	btfsc	status,2,c
 22690  014006  D7E7               	goto	l21200
 22691  014008  0A07               	xorlw	7	; case 52
 22692  01400A  A4D8               	btfss	status,2,c
 22693  01400C  0012               	return	
 22694  01400E  D7EA               	goto	l21202
 22695  014010                     __end_of__display_outputs:
 22696                           	opt stack 0
 22697                           tblptru	equ	0xFF8
 22698                           tblptrh	equ	0xFF7
 22699                           tblptrl	equ	0xFF6
 22700                           tablat	equ	0xFF5
 22701                           prodh	equ	0xFF4
 22702                           prodl	equ	0xFF3
 22703                           intcon	equ	0xFF2
 22704                           intcon2	equ	0xFF1
 22705                           intcon3	equ	0xFF0
 22706                           postinc0	equ	0xFEE
 22707                           wreg	equ	0xFE8
 22708                           indf1	equ	0xFE7
 22709                           postinc1	equ	0xFE6
 22710                           postdec1	equ	0xFE5
 22711                           plusw1	equ	0xFE3
 22712                           fsr1h	equ	0xFE2
 22713                           fsr1l	equ	0xFE1
 22714                           indf2	equ	0xFDF
 22715                           postinc2	equ	0xFDE
 22716                           postdec2	equ	0xFDD
 22717                           plusw2	equ	0xFDB
 22718                           fsr2h	equ	0xFDA
 22719                           fsr2l	equ	0xFD9
 22720                           status	equ	0xFD8
 22721                           
 22722 ;; *************** function __display_inout *****************
 22723 ;; Defined at:
 22724 ;;		line 141 in file "display.c"
 22725 ;; Parameters:    Size  Location     Type
 22726 ;;		None
 22727 ;; Auto vars:     Size  Location     Type
 22728 ;;  line2          18   66[BANK0 ] const unsigned char [18]
 22729 ;;  line1          18   48[BANK0 ] const unsigned char [18]
 22730 ;;  line4          14   84[BANK0 ] const unsigned char [14]
 22731 ;;  line3           3   98[BANK0 ] const unsigned char [3]
 22732 ;;  cntr            1  101[BANK0 ] unsigned char 
 22733 ;; Return value:  Size  Location     Type
 22734 ;;                  1    wreg      void 
 22735 ;; Registers used:
 22736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22737 ;; Tracked objects:
 22738 ;;		On entry : 0/0
 22739 ;;		On exit  : 0/0
 22740 ;;		Unchanged: 0/0
 22741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22743 ;;      Locals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22745 ;;      Totals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22746 ;;Total ram usage:       54 bytes
 22747 ;; Hardware stack levels used:    1
 22748 ;; Hardware stack levels required when called:   14
 22749 ;; This function calls:
 22750 ;;		__display_itoa
 22751 ;;		_buck_get_mode
 22752 ;; This function is called by:
 22753 ;;		_display_prepare
 22754 ;; This function uses a non-reentrant model
 22755 ;;
 22756                           
 22757                           	psect	text102
 22758  014010                     __ptext102:
 22759                           	opt stack 0
 22760  014010                     __display_inout:
 22761                           	opt stack 15
 22762                           
 22763                           ;display.c: 143: uint8_t cntr;
 22764                           ;display.c: 144: const char line1[] = "Voltage & Current";
 22765                           
 22766                           ;incstack = 0
 22767  014010  0E72               	movlw	low __display_inout@F8665
 22768  014012  6EF6               	movwf	tblptrl,c
 22769  014014                     	if	1	;There is more than 1 active tblptr byte
 22770  014014  0EFD               	movlw	high __display_inout@F8665
 22771  014016  6EF7               	movwf	tblptrh,c
 22772  014018                     	endif
 22773  014018                     	if	1	;There are 3 active tblptr bytes
 22774  014018  0E00               	movlw	low (__display_inout@F8665 shr (0+16))
 22775  01401A  6EF8               	movwf	tblptru,c
 22776  01401C                     	endif
 22777  01401C  EE20  F090         	lfsr	2,__display_inout@line1
 22778  014020  0E11               	movlw	17
 22779  014022                     u20150:
 22780  014022  0009               	tblrd		*+
 22781  014024  CFF5 FFDE          	movff	tablat,postinc2
 22782  014028  06E8               	decf	wreg,f,c
 22783  01402A  E2FB               	bc	u20150
 22784                           
 22785                           ;display.c: 145: const char line2[] = "   Input   Output";
 22786  01402C  0E60               	movlw	low __display_inout@F8667
 22787  01402E  6EF6               	movwf	tblptrl,c
 22788  014030                     	if	1	;There is more than 1 active tblptr byte
 22789  014030  0EFD               	movlw	high __display_inout@F8667
 22790  014032  6EF7               	movwf	tblptrh,c
 22791  014034                     	endif
 22792  014034                     	if	1	;There are 3 active tblptr bytes
 22793  014034  0E00               	movlw	low (__display_inout@F8667 shr (0+16))
 22794  014036  6EF8               	movwf	tblptru,c
 22795  014038                     	endif
 22796  014038  EE20  F0A2         	lfsr	2,__display_inout@line2
 22797  01403C  0E11               	movlw	17
 22798  01403E                     u20160:
 22799  01403E  0009               	tblrd		*+
 22800  014040  CFF5 FFDE          	movff	tablat,postinc2
 22801  014044  06E8               	decf	wreg,f,c
 22802  014046  E2FB               	bc	u20160
 22803                           
 22804                           ;display.c: 146: const char line3[] = "V:";
 22805  014048  0EB0               	movlw	low __display_inout@F8669
 22806  01404A  6EF6               	movwf	tblptrl,c
 22807  01404C                     	if	1	;There is more than 1 active tblptr byte
 22808  01404C  0EFE               	movlw	high __display_inout@F8669
 22809  01404E  6EF7               	movwf	tblptrh,c
 22810  014050                     	endif
 22811  014050                     	if	1	;There are 3 active tblptr bytes
 22812  014050  0E00               	movlw	low (__display_inout@F8669 shr (0+16))
 22813  014052  6EF8               	movwf	tblptru,c
 22814  014054                     	endif
 22815  014054  0009               	tblrd		*+
 22816  014056  CFF5 F0C2          	movff	tablat,__display_inout@line3
 22817  01405A  0009               	tblrd		*+
 22818  01405C  CFF5 F0C3          	movff	tablat,__display_inout@line3+1
 22819  014060  000A               	tblrd		*-
 22820  014062  CFF5 F0C4          	movff	tablat,__display_inout@line3+2
 22821                           
 22822                           ;display.c: 147: const char line4[] = "A: --      --";
 22823  014066  0E1F               	movlw	low __display_inout@F8671
 22824  014068  6EF6               	movwf	tblptrl,c
 22825  01406A                     	if	1	;There is more than 1 active tblptr byte
 22826  01406A  0EFE               	movlw	high __display_inout@F8671
 22827  01406C  6EF7               	movwf	tblptrh,c
 22828  01406E                     	endif
 22829  01406E                     	if	1	;There are 3 active tblptr bytes
 22830  01406E  0E00               	movlw	low (__display_inout@F8671 shr (0+16))
 22831  014070  6EF8               	movwf	tblptru,c
 22832  014072                     	endif
 22833  014072  EE20  F0B4         	lfsr	2,__display_inout@line4
 22834  014076  0E0D               	movlw	13
 22835  014078                     u20170:
 22836  014078  0009               	tblrd		*+
 22837  01407A  CFF5 FFDE          	movff	tablat,postinc2
 22838  01407E  06E8               	decf	wreg,f,c
 22839  014080  E2FB               	bc	u20170
 22840                           
 22841                           ;display.c: 149: cntr = 0;
 22842  014082  0E00               	movlw	0
 22843  014084  0100               	movlb	0	; () banked
 22844  014086  6FC5               	movwf	__display_inout@cntr& (0+255),b
 22845                           
 22846                           ;display.c: 150: while(line1[cntr])
 22847  014088  D016               	goto	l20920
 22848  01408A                     l20916:
 22849                           
 22850                           ; BSR set to: 0
 22851                           ;display.c: 151: display_content[0][cntr] = line1[cntr++];
 22852  01408A  0100               	movlb	0	; () banked
 22853  01408C  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22854  01408E  0D01               	mullw	1
 22855  014090  0E90               	movlw	low __display_inout@line1
 22856  014092  24F3               	addwf	prodl,w,c
 22857  014094  6ED9               	movwf	fsr2l,c
 22858  014096  0E00               	movlw	high __display_inout@line1
 22859  014098  20F4               	addwfc	prodh,w,c
 22860  01409A  6EDA               	movwf	fsr2h,c
 22861  01409C  0100               	movlb	0	; () banked
 22862  01409E  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22863  0140A0  0D01               	mullw	1
 22864  0140A2  0E54               	movlw	low _display_content
 22865  0140A4  24F3               	addwf	prodl,w,c
 22866  0140A6  6EE1               	movwf	fsr1l,c
 22867  0140A8  0E03               	movlw	high _display_content
 22868  0140AA  20F4               	addwfc	prodh,w,c
 22869  0140AC  6EE2               	movwf	fsr1h,c
 22870  0140AE  CFDF FFE7          	movff	indf2,indf1
 22871                           
 22872                           ; BSR set to: 0
 22873  0140B2  0100               	movlb	0	; () banked
 22874  0140B4  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 22875  0140B6                     l20920:
 22876                           
 22877                           ; BSR set to: 0
 22878  0140B6  0100               	movlb	0	; () banked
 22879  0140B8  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22880  0140BA  0D01               	mullw	1
 22881  0140BC  0E90               	movlw	low __display_inout@line1
 22882  0140BE  24F3               	addwf	prodl,w,c
 22883  0140C0  6ED9               	movwf	fsr2l,c
 22884  0140C2  0E00               	movlw	high __display_inout@line1
 22885  0140C4  20F4               	addwfc	prodh,w,c
 22886  0140C6  6EDA               	movwf	fsr2h,c
 22887  0140C8  50DF               	movf	indf2,w,c
 22888  0140CA  A4D8               	btfss	status,2,c
 22889  0140CC  D7DE               	goto	l20916
 22890                           
 22891                           ; BSR set to: 0
 22892                           ;display.c: 153: cntr = 0;
 22893                           
 22894                           ; BSR set to: 0
 22895  0140CE  0E00               	movlw	0
 22896  0140D0  0100               	movlb	0	; () banked
 22897  0140D2  6FC5               	movwf	__display_inout@cntr& (0+255),b
 22898                           
 22899                           ;display.c: 154: while(line2[cntr])
 22900  0140D4  D016               	goto	l20928
 22901  0140D6                     l20924:
 22902                           
 22903                           ; BSR set to: 0
 22904                           ;display.c: 155: display_content[1][cntr] = line2[cntr++];
 22905  0140D6  0100               	movlb	0	; () banked
 22906  0140D8  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22907  0140DA  0D01               	mullw	1
 22908  0140DC  0EA2               	movlw	low __display_inout@line2
 22909  0140DE  24F3               	addwf	prodl,w,c
 22910  0140E0  6ED9               	movwf	fsr2l,c
 22911  0140E2  0E00               	movlw	high __display_inout@line2
 22912  0140E4  20F4               	addwfc	prodh,w,c
 22913  0140E6  6EDA               	movwf	fsr2h,c
 22914  0140E8  0100               	movlb	0	; () banked
 22915  0140EA  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22916  0140EC  0D01               	mullw	1
 22917  0140EE  0E68               	movlw	low (_display_content+20)
 22918  0140F0  24F3               	addwf	prodl,w,c
 22919  0140F2  6EE1               	movwf	fsr1l,c
 22920  0140F4  0E03               	movlw	high (_display_content+20)
 22921  0140F6  20F4               	addwfc	prodh,w,c
 22922  0140F8  6EE2               	movwf	fsr1h,c
 22923  0140FA  CFDF FFE7          	movff	indf2,indf1
 22924                           
 22925                           ; BSR set to: 0
 22926  0140FE  0100               	movlb	0	; () banked
 22927  014100  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 22928  014102                     l20928:
 22929                           
 22930                           ; BSR set to: 0
 22931  014102  0100               	movlb	0	; () banked
 22932  014104  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22933  014106  0D01               	mullw	1
 22934  014108  0EA2               	movlw	low __display_inout@line2
 22935  01410A  24F3               	addwf	prodl,w,c
 22936  01410C  6ED9               	movwf	fsr2l,c
 22937  01410E  0E00               	movlw	high __display_inout@line2
 22938  014110  20F4               	addwfc	prodh,w,c
 22939  014112  6EDA               	movwf	fsr2h,c
 22940  014114  50DF               	movf	indf2,w,c
 22941  014116  A4D8               	btfss	status,2,c
 22942  014118  D7DE               	goto	l20924
 22943                           
 22944                           ; BSR set to: 0
 22945                           ;display.c: 157: cntr = 0;
 22946                           
 22947                           ; BSR set to: 0
 22948  01411A  0E00               	movlw	0
 22949  01411C  0100               	movlb	0	; () banked
 22950  01411E  6FC5               	movwf	__display_inout@cntr& (0+255),b
 22951                           
 22952                           ;display.c: 158: while(line3[cntr])
 22953  014120  D016               	goto	l20936
 22954  014122                     l20932:
 22955                           
 22956                           ; BSR set to: 0
 22957                           ;display.c: 159: display_content[2][cntr] = line3[cntr++];
 22958  014122  0100               	movlb	0	; () banked
 22959  014124  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22960  014126  0D01               	mullw	1
 22961  014128  0EC2               	movlw	low __display_inout@line3
 22962  01412A  24F3               	addwf	prodl,w,c
 22963  01412C  6ED9               	movwf	fsr2l,c
 22964  01412E  0E00               	movlw	high __display_inout@line3
 22965  014130  20F4               	addwfc	prodh,w,c
 22966  014132  6EDA               	movwf	fsr2h,c
 22967  014134  0100               	movlb	0	; () banked
 22968  014136  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22969  014138  0D01               	mullw	1
 22970  01413A  0E7C               	movlw	low (_display_content+40)
 22971  01413C  24F3               	addwf	prodl,w,c
 22972  01413E  6EE1               	movwf	fsr1l,c
 22973  014140  0E03               	movlw	high (_display_content+40)
 22974  014142  20F4               	addwfc	prodh,w,c
 22975  014144  6EE2               	movwf	fsr1h,c
 22976  014146  CFDF FFE7          	movff	indf2,indf1
 22977                           
 22978                           ; BSR set to: 0
 22979  01414A  0100               	movlb	0	; () banked
 22980  01414C  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 22981  01414E                     l20936:
 22982                           
 22983                           ; BSR set to: 0
 22984  01414E  0100               	movlb	0	; () banked
 22985  014150  51C5               	movf	__display_inout@cntr& (0+255),w,b
 22986  014152  0D01               	mullw	1
 22987  014154  0EC2               	movlw	low __display_inout@line3
 22988  014156  24F3               	addwf	prodl,w,c
 22989  014158  6ED9               	movwf	fsr2l,c
 22990  01415A  0E00               	movlw	high __display_inout@line3
 22991  01415C  20F4               	addwfc	prodh,w,c
 22992  01415E  6EDA               	movwf	fsr2h,c
 22993  014160  50DF               	movf	indf2,w,c
 22994  014162  A4D8               	btfss	status,2,c
 22995  014164  D7DE               	goto	l20932
 22996                           
 22997                           ; BSR set to: 0
 22998                           ;display.c: 160: _display_itoa(os.input_voltage, 3, &display_content[2][3]);
 22999                           
 23000                           ; BSR set to: 0
 23001  014166  C212  F078         	movff	_os+18,__display_itoa@value	;volatile
 23002  01416A  C213  F079         	movff	_os+19,__display_itoa@value+1	;volatile
 23003  01416E  0E03               	movlw	3
 23004  014170  0100               	movlb	0	; () banked
 23005  014172  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23006  014174  0E7F               	movlw	low (_display_content+43)
 23007  014176  0100               	movlb	0	; () banked
 23008  014178  6F7B               	movwf	__display_itoa@text& (0+255),b
 23009  01417A  0E03               	movlw	high (_display_content+43)
 23010  01417C  0100               	movlb	0	; () banked
 23011  01417E  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23012  014180  EC8A  F099         	call	__display_itoa	;wreg free
 23013                           
 23014                           ;display.c: 161: _display_itoa(os.output_voltage, 3, &display_content[2][11]);
 23015  014184  C227  F078         	movff	_os+39,__display_itoa@value	;volatile
 23016  014188  C228  F079         	movff	_os+40,__display_itoa@value+1	;volatile
 23017  01418C  0E03               	movlw	3
 23018  01418E  0100               	movlb	0	; () banked
 23019  014190  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23020  014192  0E87               	movlw	low (_display_content+51)
 23021  014194  0100               	movlb	0	; () banked
 23022  014196  6F7B               	movwf	__display_itoa@text& (0+255),b
 23023  014198  0E03               	movlw	high (_display_content+51)
 23024  01419A  0100               	movlb	0	; () banked
 23025  01419C  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23026  01419E  EC8A  F099         	call	__display_itoa	;wreg free
 23027                           
 23028                           ;display.c: 163: cntr = 0;
 23029  0141A2  0E00               	movlw	0
 23030  0141A4  0100               	movlb	0	; () banked
 23031  0141A6  6FC5               	movwf	__display_inout@cntr& (0+255),b
 23032                           
 23033                           ;display.c: 164: while(line4[cntr])
 23034  0141A8  D016               	goto	l20946
 23035  0141AA                     l20942:
 23036                           
 23037                           ; BSR set to: 0
 23038                           ;display.c: 165: display_content[3][cntr] = line4[cntr++];
 23039  0141AA  0100               	movlb	0	; () banked
 23040  0141AC  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23041  0141AE  0D01               	mullw	1
 23042  0141B0  0EB4               	movlw	low __display_inout@line4
 23043  0141B2  24F3               	addwf	prodl,w,c
 23044  0141B4  6ED9               	movwf	fsr2l,c
 23045  0141B6  0E00               	movlw	high __display_inout@line4
 23046  0141B8  20F4               	addwfc	prodh,w,c
 23047  0141BA  6EDA               	movwf	fsr2h,c
 23048  0141BC  0100               	movlb	0	; () banked
 23049  0141BE  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23050  0141C0  0D01               	mullw	1
 23051  0141C2  0E90               	movlw	low (_display_content+60)
 23052  0141C4  24F3               	addwf	prodl,w,c
 23053  0141C6  6EE1               	movwf	fsr1l,c
 23054  0141C8  0E03               	movlw	high (_display_content+60)
 23055  0141CA  20F4               	addwfc	prodh,w,c
 23056  0141CC  6EE2               	movwf	fsr1h,c
 23057  0141CE  CFDF FFE7          	movff	indf2,indf1
 23058                           
 23059                           ; BSR set to: 0
 23060  0141D2  0100               	movlb	0	; () banked
 23061  0141D4  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 23062  0141D6                     l20946:
 23063                           
 23064                           ; BSR set to: 0
 23065  0141D6  0100               	movlb	0	; () banked
 23066  0141D8  51C5               	movf	__display_inout@cntr& (0+255),w,b
 23067  0141DA  0D01               	mullw	1
 23068  0141DC  0EB4               	movlw	low __display_inout@line4
 23069  0141DE  24F3               	addwf	prodl,w,c
 23070  0141E0  6ED9               	movwf	fsr2l,c
 23071  0141E2  0E00               	movlw	high __display_inout@line4
 23072  0141E4  20F4               	addwfc	prodh,w,c
 23073  0141E6  6EDA               	movwf	fsr2h,c
 23074  0141E8  50DF               	movf	indf2,w,c
 23075  0141EA  A4D8               	btfss	status,2,c
 23076  0141EC  D7DE               	goto	l20942
 23077                           
 23078                           ;display.c: 167: {
 23079                           ;display.c: 168: _display_itoa(os.input_current, 3, &display_content[3][3]);
 23080                           
 23081                           ; BSR set to: 0
 23082                           
 23083                           ; BSR set to: 0
 23084                           ;display.c: 166: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
 23085  0141EE  C21D  F078         	movff	_os+29,__display_itoa@value	;volatile
 23086  0141F2  C21E  F079         	movff	_os+30,__display_itoa@value+1	;volatile
 23087  0141F6  0E03               	movlw	3
 23088  0141F8  0100               	movlb	0	; () banked
 23089  0141FA  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23090  0141FC  0E93               	movlw	low (_display_content+63)
 23091  0141FE  0100               	movlb	0	; () banked
 23092  014200  6F7B               	movwf	__display_itoa@text& (0+255),b
 23093  014202  0E03               	movlw	high (_display_content+63)
 23094  014204  0100               	movlb	0	; () banked
 23095  014206  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23096  014208  EC8A  F099         	call	__display_itoa	;wreg free
 23097                           
 23098                           ;display.c: 169: _display_itoa(os.output_current, 3, &display_content[3][11]);
 23099  01420C  C232  F078         	movff	_os+50,__display_itoa@value	;volatile
 23100  014210  C233  F079         	movff	_os+51,__display_itoa@value+1	;volatile
 23101  014214  0E03               	movlw	3
 23102  014216  0100               	movlb	0	; () banked
 23103  014218  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23104  01421A  0E9B               	movlw	low (_display_content+71)
 23105  01421C  0100               	movlb	0	; () banked
 23106  01421E  6F7B               	movwf	__display_itoa@text& (0+255),b
 23107  014220  0E03               	movlw	high (_display_content+71)
 23108  014222  0100               	movlb	0	; () banked
 23109  014224  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23110  014226  EC8A  F099         	call	__display_itoa	;wreg free
 23111  01422A  0012               	return	
 23112  01422C                     __end_of__display_inout:
 23113                           	opt stack 0
 23114                           tblptru	equ	0xFF8
 23115                           tblptrh	equ	0xFF7
 23116                           tblptrl	equ	0xFF6
 23117                           tablat	equ	0xFF5
 23118                           prodh	equ	0xFF4
 23119                           prodl	equ	0xFF3
 23120                           intcon	equ	0xFF2
 23121                           intcon2	equ	0xFF1
 23122                           intcon3	equ	0xFF0
 23123                           postinc0	equ	0xFEE
 23124                           wreg	equ	0xFE8
 23125                           indf1	equ	0xFE7
 23126                           postinc1	equ	0xFE6
 23127                           postdec1	equ	0xFE5
 23128                           plusw1	equ	0xFE3
 23129                           fsr1h	equ	0xFE2
 23130                           fsr1l	equ	0xFE1
 23131                           indf2	equ	0xFDF
 23132                           postinc2	equ	0xFDE
 23133                           postdec2	equ	0xFDD
 23134                           plusw2	equ	0xFDB
 23135                           fsr2h	equ	0xFDA
 23136                           fsr2l	equ	0xFD9
 23137                           status	equ	0xFD8
 23138                           
 23139 ;; *************** function __display_efficiency *****************
 23140 ;; Defined at:
 23141 ;;		line 475 in file "display.c"
 23142 ;; Parameters:    Size  Location     Type
 23143 ;;		None
 23144 ;; Auto vars:     Size  Location     Type
 23145 ;;  source         19   69[BANK0 ] const unsigned char [19]
 23146 ;;  header         19   50[BANK0 ] const unsigned char [19]
 23147 ;;  footer         14   88[BANK0 ] const unsigned char [14]
 23148 ;;  battery         4  109[BANK0 ] long 
 23149 ;;  panel           4  105[BANK0 ] long 
 23150 ;;  efficiency      3  102[BANK0 ] float 
 23151 ;;  cntr            1  113[BANK0 ] unsigned char 
 23152 ;; Return value:  Size  Location     Type
 23153 ;;                  1    wreg      void 
 23154 ;; Registers used:
 23155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23156 ;; Tracked objects:
 23157 ;;		On entry : 0/0
 23158 ;;		On exit  : 0/0
 23159 ;;		Unchanged: 0/0
 23160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23162 ;;      Locals:         0      64       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23163 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23164 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23165 ;;Total ram usage:       66 bytes
 23166 ;; Hardware stack levels used:    1
 23167 ;; Hardware stack levels required when called:   14
 23168 ;; This function calls:
 23169 ;;		___aldiv
 23170 ;;		___altoft
 23171 ;;		___fttol
 23172 ;;		___lmul
 23173 ;;		__display_itoa
 23174 ;; This function is called by:
 23175 ;;		_display_prepare
 23176 ;; This function uses a non-reentrant model
 23177 ;;
 23178                           
 23179                           	psect	text103
 23180  012030                     __ptext103:
 23181                           	opt stack 0
 23182  012030                     __display_efficiency:
 23183                           	opt stack 15
 23184                           
 23185                           ;display.c: 477: uint8_t cntr;
 23186                           ;display.c: 478: const char header[] = "Charger Efficiency";
 23187                           
 23188                           ;incstack = 0
 23189  012030  0E04               	movlw	low __display_efficiency@F8753
 23190  012032  6EF6               	movwf	tblptrl,c
 23191  012034                     	if	1	;There is more than 1 active tblptr byte
 23192  012034  0EFD               	movlw	high __display_efficiency@F8753
 23193  012036  6EF7               	movwf	tblptrh,c
 23194  012038                     	endif
 23195  012038                     	if	1	;There are 3 active tblptr bytes
 23196  012038  0E00               	movlw	low (__display_efficiency@F8753 shr (0+16))
 23197  01203A  6EF8               	movwf	tblptru,c
 23198  01203C                     	endif
 23199  01203C  EE20  F092         	lfsr	2,__display_efficiency@header
 23200  012040  0E12               	movlw	18
 23201  012042                     u20910:
 23202  012042  0009               	tblrd		*+
 23203  012044  CFF5 FFDE          	movff	tablat,postinc2
 23204  012048  06E8               	decf	wreg,f,c
 23205  01204A  E2FB               	bc	u20910
 23206                           
 23207                           ;display.c: 479: const char source[] = "Panel:    Battery:";
 23208  01204C  0EF1               	movlw	low __display_efficiency@F8755
 23209  01204E  6EF6               	movwf	tblptrl,c
 23210  012050                     	if	1	;There is more than 1 active tblptr byte
 23211  012050  0EFC               	movlw	high __display_efficiency@F8755
 23212  012052  6EF7               	movwf	tblptrh,c
 23213  012054                     	endif
 23214  012054                     	if	1	;There are 3 active tblptr bytes
 23215  012054  0E00               	movlw	low (__display_efficiency@F8755 shr (0+16))
 23216  012056  6EF8               	movwf	tblptru,c
 23217  012058                     	endif
 23218  012058  EE20  F0A5         	lfsr	2,__display_efficiency@source
 23219  01205C  0E12               	movlw	18
 23220  01205E                     u20920:
 23221  01205E  0009               	tblrd		*+
 23222  012060  CFF5 FFDE          	movff	tablat,postinc2
 23223  012064  06E8               	decf	wreg,f,c
 23224  012066  E2FB               	bc	u20920
 23225                           
 23226                           ;display.c: 480: const char footer[] = "E:         L:";
 23227  012068  0EF5               	movlw	low __display_efficiency@F8757
 23228  01206A  6EF6               	movwf	tblptrl,c
 23229  01206C                     	if	1	;There is more than 1 active tblptr byte
 23230  01206C  0EFD               	movlw	high __display_efficiency@F8757
 23231  01206E  6EF7               	movwf	tblptrh,c
 23232  012070                     	endif
 23233  012070                     	if	1	;There are 3 active tblptr bytes
 23234  012070  0E00               	movlw	low (__display_efficiency@F8757 shr (0+16))
 23235  012072  6EF8               	movwf	tblptru,c
 23236  012074                     	endif
 23237  012074  EE20  F0B8         	lfsr	2,__display_efficiency@footer
 23238  012078  0E0D               	movlw	13
 23239  01207A                     u20930:
 23240  01207A  0009               	tblrd		*+
 23241  01207C  CFF5 FFDE          	movff	tablat,postinc2
 23242  012080  06E8               	decf	wreg,f,c
 23243  012082  E2FB               	bc	u20930
 23244                           
 23245                           ;display.c: 481: int32_t panel;
 23246                           ;display.c: 482: int32_t battery = (int32_t) os.output_voltage * (int32_t) os.output_cur
      +                          rent;
 23247  012084  EE22  F027         	lfsr	2,_os+39	;volatile
 23248  012088  CFDE F060          	movff	postinc2,___lmul@multiplier
 23249  01208C  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 23250  012090  0100               	movlb	0	; () banked
 23251  012092  0E00               	movlw	0
 23252  012094  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 23253  012096  0EFF               	movlw	-1
 23254  012098  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 23255  01209A  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 23256  01209C  EE22  F032         	lfsr	2,_os+50	;volatile
 23257  0120A0  CFDE F064          	movff	postinc2,___lmul@multiplicand
 23258  0120A4  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 23259  0120A8  0100               	movlb	0	; () banked
 23260  0120AA  0E00               	movlw	0
 23261  0120AC  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 23262  0120AE  0EFF               	movlw	-1
 23263  0120B0  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23264  0120B2  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23265  0120B4  EC3B  F0C7         	call	___lmul	;wreg free
 23266  0120B8  C060  F0CD         	movff	?___lmul,__display_efficiency@battery
 23267  0120BC  C061  F0CE         	movff	?___lmul+1,__display_efficiency@battery+1
 23268  0120C0  C062  F0CF         	movff	?___lmul+2,__display_efficiency@battery+2
 23269  0120C4  C063  F0D0         	movff	?___lmul+3,__display_efficiency@battery+3
 23270                           
 23271                           ;display.c: 483: float efficiency;
 23272                           ;display.c: 485: panel = (int32_t) os.input_voltage;
 23273  0120C8  EE22  F012         	lfsr	2,_os+18	;volatile
 23274  0120CC  CFDE F0C9          	movff	postinc2,__display_efficiency@panel
 23275  0120D0  CFDD F0CA          	movff	postdec2,__display_efficiency@panel+1
 23276  0120D4  0100               	movlb	0	; () banked
 23277  0120D6  0E00               	movlw	0
 23278  0120D8  BFCA               	btfsc	(__display_efficiency@panel+1)& (0+255),7,b
 23279  0120DA  0EFF               	movlw	-1
 23280  0120DC  6FCB               	movwf	(__display_efficiency@panel+2)& (0+255),b
 23281  0120DE  6FCC               	movwf	(__display_efficiency@panel+3)& (0+255),b
 23282                           
 23283                           ; BSR set to: 0
 23284                           ;display.c: 486: panel *= (int32_t) os.input_current;
 23285  0120E0  C0C9  F060         	movff	__display_efficiency@panel,___lmul@multiplier
 23286  0120E4  C0CA  F061         	movff	__display_efficiency@panel+1,___lmul@multiplier+1
 23287  0120E8  C0CB  F062         	movff	__display_efficiency@panel+2,___lmul@multiplier+2
 23288  0120EC  C0CC  F063         	movff	__display_efficiency@panel+3,___lmul@multiplier+3
 23289  0120F0  EE22  F01D         	lfsr	2,_os+29	;volatile
 23290  0120F4  CFDE F064          	movff	postinc2,___lmul@multiplicand
 23291  0120F8  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 23292  0120FC  0100               	movlb	0	; () banked
 23293  0120FE  0E00               	movlw	0
 23294  012100  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 23295  012102  0EFF               	movlw	-1
 23296  012104  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23297  012106  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23298  012108  EC3B  F0C7         	call	___lmul	;wreg free
 23299  01210C  C060  F0C9         	movff	?___lmul,__display_efficiency@panel
 23300  012110  C061  F0CA         	movff	?___lmul+1,__display_efficiency@panel+1
 23301  012114  C062  F0CB         	movff	?___lmul+2,__display_efficiency@panel+2
 23302  012118  C063  F0CC         	movff	?___lmul+3,__display_efficiency@panel+3
 23303                           
 23304                           ;display.c: 487: panel /= 1000;
 23305  01211C  C0C9  F060         	movff	__display_efficiency@panel,___aldiv@dividend
 23306  012120  C0CA  F061         	movff	__display_efficiency@panel+1,___aldiv@dividend+1
 23307  012124  C0CB  F062         	movff	__display_efficiency@panel+2,___aldiv@dividend+2
 23308  012128  C0CC  F063         	movff	__display_efficiency@panel+3,___aldiv@dividend+3
 23309  01212C  0EE8               	movlw	232
 23310  01212E  0100               	movlb	0	; () banked
 23311  012130  6F64               	movwf	___aldiv@divisor& (0+255),b
 23312  012132  0E03               	movlw	3
 23313  012134  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 23314  012136  0E00               	movlw	0
 23315  012138  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 23316  01213A  0E00               	movlw	0
 23317  01213C  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 23318  01213E  ECEA  F0AF         	call	___aldiv	;wreg free
 23319  012142  C060  F0C9         	movff	?___aldiv,__display_efficiency@panel
 23320  012146  C061  F0CA         	movff	?___aldiv+1,__display_efficiency@panel+1
 23321  01214A  C062  F0CB         	movff	?___aldiv+2,__display_efficiency@panel+2
 23322  01214E  C063  F0CC         	movff	?___aldiv+3,__display_efficiency@panel+3
 23323                           
 23324                           ;display.c: 489: battery = (int32_t) os.output_voltage;
 23325  012152  EE22  F027         	lfsr	2,_os+39	;volatile
 23326  012156  CFDE F0CD          	movff	postinc2,__display_efficiency@battery
 23327  01215A  CFDD F0CE          	movff	postdec2,__display_efficiency@battery+1
 23328  01215E  0100               	movlb	0	; () banked
 23329  012160  0E00               	movlw	0
 23330  012162  BFCE               	btfsc	(__display_efficiency@battery+1)& (0+255),7,b
 23331  012164  0EFF               	movlw	-1
 23332  012166  6FCF               	movwf	(__display_efficiency@battery+2)& (0+255),b
 23333  012168  6FD0               	movwf	(__display_efficiency@battery+3)& (0+255),b
 23334                           
 23335                           ; BSR set to: 0
 23336                           ;display.c: 490: battery *= os.output_current;
 23337  01216A  C0CD  F060         	movff	__display_efficiency@battery,___lmul@multiplier
 23338  01216E  C0CE  F061         	movff	__display_efficiency@battery+1,___lmul@multiplier+1
 23339  012172  C0CF  F062         	movff	__display_efficiency@battery+2,___lmul@multiplier+2
 23340  012176  C0D0  F063         	movff	__display_efficiency@battery+3,___lmul@multiplier+3
 23341  01217A  EE22  F032         	lfsr	2,_os+50	;volatile
 23342  01217E  CFDE F064          	movff	postinc2,___lmul@multiplicand
 23343  012182  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 23344  012186  0100               	movlb	0	; () banked
 23345  012188  0E00               	movlw	0
 23346  01218A  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 23347  01218C  0EFF               	movlw	-1
 23348  01218E  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23349  012190  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23350  012192  EC3B  F0C7         	call	___lmul	;wreg free
 23351  012196  C060  F0CD         	movff	?___lmul,__display_efficiency@battery
 23352  01219A  C061  F0CE         	movff	?___lmul+1,__display_efficiency@battery+1
 23353  01219E  C062  F0CF         	movff	?___lmul+2,__display_efficiency@battery+2
 23354  0121A2  C063  F0D0         	movff	?___lmul+3,__display_efficiency@battery+3
 23355                           
 23356                           ;display.c: 491: efficiency = battery / panel;
 23357  0121A6  C0C9  F064         	movff	__display_efficiency@panel,___aldiv@divisor
 23358  0121AA  C0CA  F065         	movff	__display_efficiency@panel+1,___aldiv@divisor+1
 23359  0121AE  C0CB  F066         	movff	__display_efficiency@panel+2,___aldiv@divisor+2
 23360  0121B2  C0CC  F067         	movff	__display_efficiency@panel+3,___aldiv@divisor+3
 23361  0121B6  C0CD  F060         	movff	__display_efficiency@battery,___aldiv@dividend
 23362  0121BA  C0CE  F061         	movff	__display_efficiency@battery+1,___aldiv@dividend+1
 23363  0121BE  C0CF  F062         	movff	__display_efficiency@battery+2,___aldiv@dividend+2
 23364  0121C2  C0D0  F063         	movff	__display_efficiency@battery+3,___aldiv@dividend+3
 23365  0121C6  ECEA  F0AF         	call	___aldiv	;wreg free
 23366  0121CA  C060  F06E         	movff	?___aldiv,___altoft@c
 23367  0121CE  C061  F06F         	movff	?___aldiv+1,___altoft@c+1
 23368  0121D2  C062  F070         	movff	?___aldiv+2,___altoft@c+2
 23369  0121D6  C063  F071         	movff	?___aldiv+3,___altoft@c+3
 23370  0121DA  ECAF  F0BF         	call	___altoft	;wreg free
 23371  0121DE  C06E  F0C6         	movff	?___altoft,__display_efficiency@efficiency
 23372  0121E2  C06F  F0C7         	movff	?___altoft+1,__display_efficiency@efficiency+1
 23373  0121E6  C070  F0C8         	movff	?___altoft+2,__display_efficiency@efficiency+2
 23374                           
 23375                           ;display.c: 492: battery /= 1000;
 23376  0121EA  C0CD  F060         	movff	__display_efficiency@battery,___aldiv@dividend
 23377  0121EE  C0CE  F061         	movff	__display_efficiency@battery+1,___aldiv@dividend+1
 23378  0121F2  C0CF  F062         	movff	__display_efficiency@battery+2,___aldiv@dividend+2
 23379  0121F6  C0D0  F063         	movff	__display_efficiency@battery+3,___aldiv@dividend+3
 23380  0121FA  0EE8               	movlw	232
 23381  0121FC  0100               	movlb	0	; () banked
 23382  0121FE  6F64               	movwf	___aldiv@divisor& (0+255),b
 23383  012200  0E03               	movlw	3
 23384  012202  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 23385  012204  0E00               	movlw	0
 23386  012206  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 23387  012208  0E00               	movlw	0
 23388  01220A  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 23389  01220C  ECEA  F0AF         	call	___aldiv	;wreg free
 23390  012210  C060  F0CD         	movff	?___aldiv,__display_efficiency@battery
 23391  012214  C061  F0CE         	movff	?___aldiv+1,__display_efficiency@battery+1
 23392  012218  C062  F0CF         	movff	?___aldiv+2,__display_efficiency@battery+2
 23393  01221C  C063  F0D0         	movff	?___aldiv+3,__display_efficiency@battery+3
 23394                           
 23395                           ;display.c: 494: cntr = 0;
 23396  012220  0E00               	movlw	0
 23397  012222  0100               	movlb	0	; () banked
 23398  012224  6FD1               	movwf	__display_efficiency@cntr& (0+255),b
 23399                           
 23400                           ;display.c: 495: while(header[cntr])
 23401  012226  D016               	goto	l21290
 23402  012228                     l21286:
 23403                           
 23404                           ; BSR set to: 0
 23405                           ;display.c: 496: display_content[0][cntr] = header[cntr++];
 23406  012228  0100               	movlb	0	; () banked
 23407  01222A  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23408  01222C  0D01               	mullw	1
 23409  01222E  0E92               	movlw	low __display_efficiency@header
 23410  012230  24F3               	addwf	prodl,w,c
 23411  012232  6ED9               	movwf	fsr2l,c
 23412  012234  0E00               	movlw	high __display_efficiency@header
 23413  012236  20F4               	addwfc	prodh,w,c
 23414  012238  6EDA               	movwf	fsr2h,c
 23415  01223A  0100               	movlb	0	; () banked
 23416  01223C  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23417  01223E  0D01               	mullw	1
 23418  012240  0E54               	movlw	low _display_content
 23419  012242  24F3               	addwf	prodl,w,c
 23420  012244  6EE1               	movwf	fsr1l,c
 23421  012246  0E03               	movlw	high _display_content
 23422  012248  20F4               	addwfc	prodh,w,c
 23423  01224A  6EE2               	movwf	fsr1h,c
 23424  01224C  CFDF FFE7          	movff	indf2,indf1
 23425                           
 23426                           ; BSR set to: 0
 23427  012250  0100               	movlb	0	; () banked
 23428  012252  2BD1               	incf	__display_efficiency@cntr& (0+255),f,b
 23429  012254                     l21290:
 23430                           
 23431                           ; BSR set to: 0
 23432  012254  0100               	movlb	0	; () banked
 23433  012256  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23434  012258  0D01               	mullw	1
 23435  01225A  0E92               	movlw	low __display_efficiency@header
 23436  01225C  24F3               	addwf	prodl,w,c
 23437  01225E  6ED9               	movwf	fsr2l,c
 23438  012260  0E00               	movlw	high __display_efficiency@header
 23439  012262  20F4               	addwfc	prodh,w,c
 23440  012264  6EDA               	movwf	fsr2h,c
 23441  012266  50DF               	movf	indf2,w,c
 23442  012268  A4D8               	btfss	status,2,c
 23443  01226A  D7DE               	goto	l21286
 23444                           
 23445                           ; BSR set to: 0
 23446                           ;display.c: 498: cntr = 0;
 23447                           
 23448                           ; BSR set to: 0
 23449  01226C  0E00               	movlw	0
 23450  01226E  0100               	movlb	0	; () banked
 23451  012270  6FD1               	movwf	__display_efficiency@cntr& (0+255),b
 23452                           
 23453                           ;display.c: 499: while(source[cntr])
 23454  012272  D016               	goto	l21298
 23455  012274                     l21294:
 23456                           
 23457                           ; BSR set to: 0
 23458                           ;display.c: 500: display_content[1][cntr] = source[cntr++];
 23459  012274  0100               	movlb	0	; () banked
 23460  012276  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23461  012278  0D01               	mullw	1
 23462  01227A  0EA5               	movlw	low __display_efficiency@source
 23463  01227C  24F3               	addwf	prodl,w,c
 23464  01227E  6ED9               	movwf	fsr2l,c
 23465  012280  0E00               	movlw	high __display_efficiency@source
 23466  012282  20F4               	addwfc	prodh,w,c
 23467  012284  6EDA               	movwf	fsr2h,c
 23468  012286  0100               	movlb	0	; () banked
 23469  012288  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23470  01228A  0D01               	mullw	1
 23471  01228C  0E68               	movlw	low (_display_content+20)
 23472  01228E  24F3               	addwf	prodl,w,c
 23473  012290  6EE1               	movwf	fsr1l,c
 23474  012292  0E03               	movlw	high (_display_content+20)
 23475  012294  20F4               	addwfc	prodh,w,c
 23476  012296  6EE2               	movwf	fsr1h,c
 23477  012298  CFDF FFE7          	movff	indf2,indf1
 23478                           
 23479                           ; BSR set to: 0
 23480  01229C  0100               	movlb	0	; () banked
 23481  01229E  2BD1               	incf	__display_efficiency@cntr& (0+255),f,b
 23482  0122A0                     l21298:
 23483                           
 23484                           ; BSR set to: 0
 23485  0122A0  0100               	movlb	0	; () banked
 23486  0122A2  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23487  0122A4  0D01               	mullw	1
 23488  0122A6  0EA5               	movlw	low __display_efficiency@source
 23489  0122A8  24F3               	addwf	prodl,w,c
 23490  0122AA  6ED9               	movwf	fsr2l,c
 23491  0122AC  0E00               	movlw	high __display_efficiency@source
 23492  0122AE  20F4               	addwfc	prodh,w,c
 23493  0122B0  6EDA               	movwf	fsr2h,c
 23494  0122B2  50DF               	movf	indf2,w,c
 23495  0122B4  A4D8               	btfss	status,2,c
 23496  0122B6  D7DE               	goto	l21294
 23497                           
 23498                           ; BSR set to: 0
 23499                           ;display.c: 502: _display_itoa((int16_t) panel, 3, &display_content[2][0]);
 23500                           
 23501                           ; BSR set to: 0
 23502  0122B8  C0C9  F078         	movff	__display_efficiency@panel,__display_itoa@value
 23503  0122BC  C0CA  F079         	movff	__display_efficiency@panel+1,__display_itoa@value+1
 23504  0122C0  0E03               	movlw	3
 23505  0122C2  0100               	movlb	0	; () banked
 23506  0122C4  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23507  0122C6  0E7C               	movlw	low (_display_content+40)
 23508  0122C8  0100               	movlb	0	; () banked
 23509  0122CA  6F7B               	movwf	__display_itoa@text& (0+255),b
 23510  0122CC  0E03               	movlw	high (_display_content+40)
 23511  0122CE  0100               	movlb	0	; () banked
 23512  0122D0  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23513  0122D2  EC8A  F099         	call	__display_itoa	;wreg free
 23514                           
 23515                           ;display.c: 503: _display_itoa((int16_t) battery, 3, &display_content[2][10]);
 23516  0122D6  C0CD  F078         	movff	__display_efficiency@battery,__display_itoa@value
 23517  0122DA  C0CE  F079         	movff	__display_efficiency@battery+1,__display_itoa@value+1
 23518  0122DE  0E03               	movlw	3
 23519  0122E0  0100               	movlb	0	; () banked
 23520  0122E2  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23521  0122E4  0E86               	movlw	low (_display_content+50)
 23522  0122E6  0100               	movlb	0	; () banked
 23523  0122E8  6F7B               	movwf	__display_itoa@text& (0+255),b
 23524  0122EA  0E03               	movlw	high (_display_content+50)
 23525  0122EC  0100               	movlb	0	; () banked
 23526  0122EE  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23527  0122F0  EC8A  F099         	call	__display_itoa	;wreg free
 23528                           
 23529                           ;display.c: 505: cntr = 0;
 23530  0122F4  0E00               	movlw	0
 23531  0122F6  0100               	movlb	0	; () banked
 23532  0122F8  6FD1               	movwf	__display_efficiency@cntr& (0+255),b
 23533                           
 23534                           ;display.c: 506: while(footer[cntr])
 23535  0122FA  D016               	goto	l21308
 23536  0122FC                     l21304:
 23537                           
 23538                           ; BSR set to: 0
 23539                           ;display.c: 507: display_content[3][cntr] = footer[cntr++];
 23540  0122FC  0100               	movlb	0	; () banked
 23541  0122FE  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23542  012300  0D01               	mullw	1
 23543  012302  0EB8               	movlw	low __display_efficiency@footer
 23544  012304  24F3               	addwf	prodl,w,c
 23545  012306  6ED9               	movwf	fsr2l,c
 23546  012308  0E00               	movlw	high __display_efficiency@footer
 23547  01230A  20F4               	addwfc	prodh,w,c
 23548  01230C  6EDA               	movwf	fsr2h,c
 23549  01230E  0100               	movlb	0	; () banked
 23550  012310  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23551  012312  0D01               	mullw	1
 23552  012314  0E90               	movlw	low (_display_content+60)
 23553  012316  24F3               	addwf	prodl,w,c
 23554  012318  6EE1               	movwf	fsr1l,c
 23555  01231A  0E03               	movlw	high (_display_content+60)
 23556  01231C  20F4               	addwfc	prodh,w,c
 23557  01231E  6EE2               	movwf	fsr1h,c
 23558  012320  CFDF FFE7          	movff	indf2,indf1
 23559                           
 23560                           ; BSR set to: 0
 23561  012324  0100               	movlb	0	; () banked
 23562  012326  2BD1               	incf	__display_efficiency@cntr& (0+255),f,b
 23563  012328                     l21308:
 23564                           
 23565                           ; BSR set to: 0
 23566  012328  0100               	movlb	0	; () banked
 23567  01232A  51D1               	movf	__display_efficiency@cntr& (0+255),w,b
 23568  01232C  0D01               	mullw	1
 23569  01232E  0EB8               	movlw	low __display_efficiency@footer
 23570  012330  24F3               	addwf	prodl,w,c
 23571  012332  6ED9               	movwf	fsr2l,c
 23572  012334  0E00               	movlw	high __display_efficiency@footer
 23573  012336  20F4               	addwfc	prodh,w,c
 23574  012338  6EDA               	movwf	fsr2h,c
 23575  01233A  50DF               	movf	indf2,w,c
 23576  01233C  A4D8               	btfss	status,2,c
 23577  01233E  D7DE               	goto	l21304
 23578                           
 23579                           ; BSR set to: 0
 23580                           ;display.c: 509: _display_itoa((int16_t) efficiency, 1, &display_content[3][3]);
 23581                           
 23582                           ; BSR set to: 0
 23583  012340  C0C6  F060         	movff	__display_efficiency@efficiency,___fttol@f1
 23584  012344  C0C7  F061         	movff	__display_efficiency@efficiency+1,___fttol@f1+1
 23585  012348  C0C8  F062         	movff	__display_efficiency@efficiency+2,___fttol@f1+2
 23586  01234C  EC25  F0AB         	call	___fttol	;wreg free
 23587  012350  C060  F078         	movff	?___fttol,__display_itoa@value
 23588  012354  C061  F079         	movff	?___fttol+1,__display_itoa@value+1
 23589  012358  0E01               	movlw	1
 23590  01235A  0100               	movlb	0	; () banked
 23591  01235C  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23592  01235E  0E93               	movlw	low (_display_content+63)
 23593  012360  0100               	movlb	0	; () banked
 23594  012362  6F7B               	movwf	__display_itoa@text& (0+255),b
 23595  012364  0E03               	movlw	high (_display_content+63)
 23596  012366  0100               	movlb	0	; () banked
 23597  012368  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23598  01236A  EC8A  F099         	call	__display_itoa	;wreg free
 23599                           
 23600                           ;display.c: 510: _display_itoa((int16_t) (panel-battery), 3, &display_content[3][14]);
 23601  01236E  C0CD  F090         	movff	__display_efficiency@battery,??__display_efficiency
 23602  012372  C0CE  F091         	movff	__display_efficiency@battery+1,??__display_efficiency+1
 23603  012376  0100               	movlb	0	; () banked
 23604  012378  1F90               	comf	??__display_efficiency& (0+255),f,b
 23605  01237A  1F91               	comf	(??__display_efficiency+1)& (0+255),f,b
 23606  01237C  4B90               	infsnz	??__display_efficiency& (0+255),f,b
 23607  01237E  2B91               	incf	(??__display_efficiency+1)& (0+255),f,b
 23608  012380  0100               	movlb	0	; () banked
 23609  012382  51C9               	movf	__display_efficiency@panel& (0+255),w,b
 23610  012384  0100               	movlb	0	; () banked
 23611  012386  2590               	addwf	??__display_efficiency& (0+255),w,b
 23612  012388  0100               	movlb	0	; () banked
 23613  01238A  6F78               	movwf	__display_itoa@value& (0+255),b
 23614  01238C  0100               	movlb	0	; () banked
 23615  01238E  51CA               	movf	(__display_efficiency@panel+1)& (0+255),w,b
 23616  012390  0100               	movlb	0	; () banked
 23617  012392  2191               	addwfc	(??__display_efficiency+1)& (0+255),w,b
 23618  012394  0100               	movlb	0	; () banked
 23619  012396  6F79               	movwf	(__display_itoa@value+1)& (0+255),b
 23620  012398  0E03               	movlw	3
 23621  01239A  0100               	movlb	0	; () banked
 23622  01239C  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 23623  01239E  0E9E               	movlw	low (_display_content+74)
 23624  0123A0  0100               	movlb	0	; () banked
 23625  0123A2  6F7B               	movwf	__display_itoa@text& (0+255),b
 23626  0123A4  0E03               	movlw	high (_display_content+74)
 23627  0123A6  0100               	movlb	0	; () banked
 23628  0123A8  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 23629  0123AA  EC8A  F099         	call	__display_itoa	;wreg free
 23630  0123AE  0012               	return		;funcret
 23631  0123B0                     __end_of__display_efficiency:
 23632                           	opt stack 0
 23633                           tblptru	equ	0xFF8
 23634                           tblptrh	equ	0xFF7
 23635                           tblptrl	equ	0xFF6
 23636                           tablat	equ	0xFF5
 23637                           prodh	equ	0xFF4
 23638                           prodl	equ	0xFF3
 23639                           intcon	equ	0xFF2
 23640                           intcon2	equ	0xFF1
 23641                           intcon3	equ	0xFF0
 23642                           postinc0	equ	0xFEE
 23643                           wreg	equ	0xFE8
 23644                           indf1	equ	0xFE7
 23645                           postinc1	equ	0xFE6
 23646                           postdec1	equ	0xFE5
 23647                           plusw1	equ	0xFE3
 23648                           fsr1h	equ	0xFE2
 23649                           fsr1l	equ	0xFE1
 23650                           indf2	equ	0xFDF
 23651                           postinc2	equ	0xFDE
 23652                           postdec2	equ	0xFDD
 23653                           plusw2	equ	0xFDB
 23654                           fsr2h	equ	0xFDA
 23655                           fsr2l	equ	0xFD9
 23656                           status	equ	0xFD8
 23657                           
 23658 ;; *************** function ___fttol *****************
 23659 ;; Defined at:
 23660 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
 23661 ;; Parameters:    Size  Location     Type
 23662 ;;  f1              3    0[BANK0 ] float 
 23663 ;; Auto vars:     Size  Location     Type
 23664 ;;  lval            4   10[BANK0 ] unsigned long 
 23665 ;;  exp1            1   14[BANK0 ] unsigned char 
 23666 ;;  sign1           1    9[BANK0 ] unsigned char 
 23667 ;; Return value:  Size  Location     Type
 23668 ;;                  4    0[BANK0 ] long 
 23669 ;; Registers used:
 23670 ;;		wreg, status,2, status,0
 23671 ;; Tracked objects:
 23672 ;;		On entry : 0/0
 23673 ;;		On exit  : 0/0
 23674 ;;		Unchanged: 0/0
 23675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23676 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23677 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23678 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23679 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23680 ;;Total ram usage:       15 bytes
 23681 ;; Hardware stack levels used:    1
 23682 ;; Hardware stack levels required when called:   10
 23683 ;; This function calls:
 23684 ;;		Nothing
 23685 ;; This function is called by:
 23686 ;;		__display_efficiency
 23687 ;; This function uses a non-reentrant model
 23688 ;;
 23689                           
 23690                           	psect	text104
 23691  01564A                     __ptext104:
 23692                           	opt stack 0
 23693  01564A                     ___fttol:
 23694                           	opt stack 18
 23695                           
 23696                           ;incstack = 0
 23697  01564A  C062  F064         	movff	___fttol@f1+2,??___fttol
 23698  01564E  0100               	movlb	0	; () banked
 23699  015650  6B65               	clrf	(??___fttol+1)& (0+255),b
 23700  015652  6B66               	clrf	(??___fttol+2)& (0+255),b
 23701  015654  0100               	movlb	0	; () banked
 23702  015656  3561               	rlcf	(___fttol@f1+1)& (0+255),w,b
 23703  015658  0100               	movlb	0	; () banked
 23704  01565A  3764               	rlcf	??___fttol& (0+255),f,b
 23705  01565C  E301               	bnc	u19051
 23706  01565E  8165               	bsf	(??___fttol+1)& (0+255),0,b
 23707  015660                     u19051:
 23708  015660  0100               	movlb	0	; () banked
 23709  015662  5164               	movf	??___fttol& (0+255),w,b
 23710  015664  0100               	movlb	0	; () banked
 23711  015666  6F6E               	movwf	___fttol@exp1& (0+255),b
 23712  015668  0100               	movlb	0	; () banked
 23713  01566A  516E               	movf	___fttol@exp1& (0+255),w,b
 23714  01566C  A4D8               	btfss	status,2,c
 23715  01566E  D00A               	goto	l19962
 23716                           
 23717                           ; BSR set to: 0
 23718  015670  0E00               	movlw	0
 23719  015672  0100               	movlb	0	; () banked
 23720  015674  6F60               	movwf	?___fttol& (0+255),b
 23721  015676  0E00               	movlw	0
 23722  015678  6F61               	movwf	(?___fttol+1)& (0+255),b
 23723  01567A  0E00               	movlw	0
 23724  01567C  6F62               	movwf	(?___fttol+2)& (0+255),b
 23725  01567E  0E00               	movlw	0
 23726  015680  6F63               	movwf	(?___fttol+3)& (0+255),b
 23727                           
 23728                           ; BSR set to: 0
 23729  015682  0012               	return	
 23730  015684                     l19962:
 23731                           
 23732                           ; BSR set to: 0
 23733  015684  0E17               	movlw	23
 23734  015686  0100               	movlb	0	; () banked
 23735  015688  6F64               	movwf	??___fttol& (0+255),b
 23736  01568A  C060  F065         	movff	___fttol@f1,??___fttol+1
 23737  01568E  C061  F066         	movff	___fttol@f1+1,??___fttol+2
 23738  015692  C062  F067         	movff	___fttol@f1+2,??___fttol+3
 23739  015696  0100               	movlb	0	; () banked
 23740  015698  2964               	incf	??___fttol& (0+255),w,b
 23741  01569A  0100               	movlb	0	; () banked
 23742  01569C  6F68               	movwf	(??___fttol+4)& (0+255),b
 23743  01569E  D005               	goto	u19070
 23744  0156A0                     u19075:
 23745  0156A0  0100               	movlb	0	; () banked
 23746  0156A2  90D8               	bcf	status,0,c
 23747  0156A4  3367               	rrcf	(??___fttol+3)& (0+255),f,b
 23748  0156A6  3366               	rrcf	(??___fttol+2)& (0+255),f,b
 23749  0156A8  3365               	rrcf	(??___fttol+1)& (0+255),f,b
 23750  0156AA                     u19070:
 23751  0156AA  0100               	movlb	0	; () banked
 23752  0156AC  2F68               	decfsz	(??___fttol+4)& (0+255),f,b
 23753  0156AE  D7F8               	goto	u19075
 23754  0156B0  0100               	movlb	0	; () banked
 23755  0156B2  5165               	movf	(??___fttol+1)& (0+255),w,b
 23756  0156B4  0100               	movlb	0	; () banked
 23757  0156B6  6F69               	movwf	___fttol@sign1& (0+255),b
 23758                           
 23759                           ; BSR set to: 0
 23760  0156B8  0100               	movlb	0	; () banked
 23761  0156BA  8F61               	bsf	(___fttol@f1+1)& (0+255),7,b
 23762                           
 23763                           ; BSR set to: 0
 23764  0156BC  0EFF               	movlw	255
 23765  0156BE  0100               	movlb	0	; () banked
 23766  0156C0  1760               	andwf	___fttol@f1& (0+255),f,b
 23767  0156C2  0EFF               	movlw	255
 23768  0156C4  0100               	movlb	0	; () banked
 23769  0156C6  1761               	andwf	(___fttol@f1+1)& (0+255),f,b
 23770  0156C8  0E00               	movlw	0
 23771  0156CA  0100               	movlb	0	; () banked
 23772  0156CC  1762               	andwf	(___fttol@f1+2)& (0+255),f,b
 23773                           
 23774                           ; BSR set to: 0
 23775  0156CE  0100               	movlb	0	; () banked
 23776  0156D0  5160               	movf	___fttol@f1& (0+255),w,b
 23777  0156D2  0100               	movlb	0	; () banked
 23778  0156D4  6F6A               	movwf	___fttol@lval& (0+255),b
 23779  0156D6  0100               	movlb	0	; () banked
 23780  0156D8  5161               	movf	(___fttol@f1+1)& (0+255),w,b
 23781  0156DA  0100               	movlb	0	; () banked
 23782  0156DC  6F6B               	movwf	(___fttol@lval+1)& (0+255),b
 23783  0156DE  0100               	movlb	0	; () banked
 23784  0156E0  5162               	movf	(___fttol@f1+2)& (0+255),w,b
 23785  0156E2  0100               	movlb	0	; () banked
 23786  0156E4  6F6C               	movwf	(___fttol@lval+2)& (0+255),b
 23787  0156E6  0100               	movlb	0	; () banked
 23788  0156E8  6B6D               	clrf	(___fttol@lval+3)& (0+255),b
 23789                           
 23790                           ; BSR set to: 0
 23791  0156EA  0E8E               	movlw	142
 23792  0156EC  0100               	movlb	0	; () banked
 23793  0156EE  5F6E               	subwf	___fttol@exp1& (0+255),f,b
 23794                           
 23795                           ; BSR set to: 0
 23796  0156F0  0100               	movlb	0	; () banked
 23797  0156F2  AF6E               	btfss	___fttol@exp1& (0+255),7,b
 23798  0156F4  D01A               	goto	l19984
 23799                           
 23800                           ; BSR set to: 0
 23801  0156F6  0100               	movlb	0	; () banked
 23802  0156F8  516E               	movf	___fttol@exp1& (0+255),w,b
 23803  0156FA  0A80               	xorlw	128
 23804  0156FC  0F8F               	addlw	143
 23805  0156FE  B0D8               	btfsc	status,0,c
 23806  015700  D00A               	goto	l19980
 23807                           
 23808                           ; BSR set to: 0
 23809  015702  0E00               	movlw	0
 23810  015704  0100               	movlb	0	; () banked
 23811  015706  6F60               	movwf	?___fttol& (0+255),b
 23812  015708  0E00               	movlw	0
 23813  01570A  6F61               	movwf	(?___fttol+1)& (0+255),b
 23814  01570C  0E00               	movlw	0
 23815  01570E  6F62               	movwf	(?___fttol+2)& (0+255),b
 23816  015710  0E00               	movlw	0
 23817  015712  6F63               	movwf	(?___fttol+3)& (0+255),b
 23818                           
 23819                           ; BSR set to: 0
 23820  015714  0012               	return	
 23821  015716                     l19980:
 23822                           
 23823                           ; BSR set to: 0
 23824  015716  0100               	movlb	0	; () banked
 23825  015718  90D8               	bcf	status,0,c
 23826  01571A  336D               	rrcf	(___fttol@lval+3)& (0+255),f,b
 23827  01571C  336C               	rrcf	(___fttol@lval+2)& (0+255),f,b
 23828  01571E  336B               	rrcf	(___fttol@lval+1)& (0+255),f,b
 23829  015720  336A               	rrcf	___fttol@lval& (0+255),f,b
 23830                           
 23831                           ; BSR set to: 0
 23832  015722  0100               	movlb	0	; () banked
 23833  015724  3F6E               	incfsz	___fttol@exp1& (0+255),f,b
 23834  015726  D7F7               	goto	l19980
 23835                           
 23836                           ; BSR set to: 0
 23837  015728  D01B               	goto	l19994
 23838  01572A                     l19984:
 23839                           
 23840                           ; BSR set to: 0
 23841  01572A  0E17               	movlw	23
 23842  01572C  0100               	movlb	0	; () banked
 23843  01572E  656E               	cpfsgt	___fttol@exp1& (0+255),b
 23844  015730  D012               	goto	l19992
 23845                           
 23846                           ; BSR set to: 0
 23847  015732  0E00               	movlw	0
 23848  015734  0100               	movlb	0	; () banked
 23849  015736  6F60               	movwf	?___fttol& (0+255),b
 23850  015738  0E00               	movlw	0
 23851  01573A  6F61               	movwf	(?___fttol+1)& (0+255),b
 23852  01573C  0E00               	movlw	0
 23853  01573E  6F62               	movwf	(?___fttol+2)& (0+255),b
 23854  015740  0E00               	movlw	0
 23855  015742  6F63               	movwf	(?___fttol+3)& (0+255),b
 23856                           
 23857                           ; BSR set to: 0
 23858  015744  0012               	return	
 23859  015746                     l19990:
 23860                           
 23861                           ; BSR set to: 0
 23862  015746  0100               	movlb	0	; () banked
 23863  015748  90D8               	bcf	status,0,c
 23864  01574A  376A               	rlcf	___fttol@lval& (0+255),f,b
 23865  01574C  376B               	rlcf	(___fttol@lval+1)& (0+255),f,b
 23866  01574E  376C               	rlcf	(___fttol@lval+2)& (0+255),f,b
 23867  015750  376D               	rlcf	(___fttol@lval+3)& (0+255),f,b
 23868  015752  0100               	movlb	0	; () banked
 23869  015754  076E               	decf	___fttol@exp1& (0+255),f,b
 23870  015756                     l19992:
 23871                           
 23872                           ; BSR set to: 0
 23873  015756  0100               	movlb	0	; () banked
 23874  015758  516E               	movf	___fttol@exp1& (0+255),w,b
 23875  01575A  0100               	movlb	0	; () banked
 23876  01575C  A4D8               	btfss	status,2,c
 23877  01575E  D7F3               	goto	l19990
 23878  015760                     l19994:
 23879                           
 23880                           ; BSR set to: 0
 23881  015760  0100               	movlb	0	; () banked
 23882  015762  5169               	movf	___fttol@sign1& (0+255),w,b
 23883  015764  0100               	movlb	0	; () banked
 23884  015766  B4D8               	btfsc	status,2,c
 23885  015768  D009               	goto	l19998
 23886                           
 23887                           ; BSR set to: 0
 23888  01576A  0100               	movlb	0	; () banked
 23889  01576C  1F6D               	comf	(___fttol@lval+3)& (0+255),f,b
 23890  01576E  1F6C               	comf	(___fttol@lval+2)& (0+255),f,b
 23891  015770  1F6B               	comf	(___fttol@lval+1)& (0+255),f,b
 23892  015772  6D6A               	negf	___fttol@lval& (0+255),b
 23893  015774  0E00               	movlw	0
 23894  015776  236B               	addwfc	(___fttol@lval+1)& (0+255),f,b
 23895  015778  236C               	addwfc	(___fttol@lval+2)& (0+255),f,b
 23896  01577A  236D               	addwfc	(___fttol@lval+3)& (0+255),f,b
 23897  01577C                     l19998:
 23898                           
 23899                           ; BSR set to: 0
 23900  01577C  C06A  F060         	movff	___fttol@lval,?___fttol
 23901  015780  C06B  F061         	movff	___fttol@lval+1,?___fttol+1
 23902  015784  C06C  F062         	movff	___fttol@lval+2,?___fttol+2
 23903  015788  C06D  F063         	movff	___fttol@lval+3,?___fttol+3
 23904  01578C  0012               	return	
 23905  01578E                     __end_of___fttol:
 23906                           	opt stack 0
 23907                           tblptru	equ	0xFF8
 23908                           tblptrh	equ	0xFF7
 23909                           tblptrl	equ	0xFF6
 23910                           tablat	equ	0xFF5
 23911                           prodh	equ	0xFF4
 23912                           prodl	equ	0xFF3
 23913                           intcon	equ	0xFF2
 23914                           intcon2	equ	0xFF1
 23915                           intcon3	equ	0xFF0
 23916                           postinc0	equ	0xFEE
 23917                           wreg	equ	0xFE8
 23918                           indf1	equ	0xFE7
 23919                           postinc1	equ	0xFE6
 23920                           postdec1	equ	0xFE5
 23921                           plusw1	equ	0xFE3
 23922                           fsr1h	equ	0xFE2
 23923                           fsr1l	equ	0xFE1
 23924                           indf2	equ	0xFDF
 23925                           postinc2	equ	0xFDE
 23926                           postdec2	equ	0xFDD
 23927                           plusw2	equ	0xFDB
 23928                           fsr2h	equ	0xFDA
 23929                           fsr2l	equ	0xFD9
 23930                           status	equ	0xFD8
 23931                           
 23932 ;; *************** function ___altoft *****************
 23933 ;; Defined at:
 23934 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\altoft.c"
 23935 ;; Parameters:    Size  Location     Type
 23936 ;;  c               4   14[BANK0 ] long 
 23937 ;; Auto vars:     Size  Location     Type
 23938 ;;  sign            1   23[BANK0 ] unsigned char 
 23939 ;;  exp             1   22[BANK0 ] unsigned char 
 23940 ;; Return value:  Size  Location     Type
 23941 ;;                  3   14[BANK0 ] float 
 23942 ;; Registers used:
 23943 ;;		wreg, status,2, status,0, cstack
 23944 ;; Tracked objects:
 23945 ;;		On entry : 0/0
 23946 ;;		On exit  : 0/0
 23947 ;;		Unchanged: 0/0
 23948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23949 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23950 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23951 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23952 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23953 ;;Total ram usage:       10 bytes
 23954 ;; Hardware stack levels used:    1
 23955 ;; Hardware stack levels required when called:   11
 23956 ;; This function calls:
 23957 ;;		___ftpack
 23958 ;; This function is called by:
 23959 ;;		__display_efficiency
 23960 ;; This function uses a non-reentrant model
 23961 ;;
 23962                           
 23963                           	psect	text105
 23964  017F5E                     __ptext105:
 23965                           	opt stack 0
 23966  017F5E                     ___altoft:
 23967                           	opt stack 17
 23968                           
 23969                           ; BSR set to: 0
 23970                           ;incstack = 0
 23971  017F5E  0E00               	movlw	0
 23972  017F60  0100               	movlb	0	; () banked
 23973  017F62  6F77               	movwf	___altoft@sign& (0+255),b
 23974  017F64  0E8E               	movlw	142
 23975  017F66  0100               	movlb	0	; () banked
 23976  017F68  6F76               	movwf	___altoft@exp& (0+255),b
 23977                           
 23978                           ; BSR set to: 0
 23979  017F6A  0100               	movlb	0	; () banked
 23980  017F6C  AF71               	btfss	(___altoft@c+3)& (0+255),7,b
 23981  017F6E  D015               	goto	l19950
 23982                           
 23983                           ; BSR set to: 0
 23984  017F70  0100               	movlb	0	; () banked
 23985  017F72  1F71               	comf	(___altoft@c+3)& (0+255),f,b
 23986  017F74  1F70               	comf	(___altoft@c+2)& (0+255),f,b
 23987  017F76  1F6F               	comf	(___altoft@c+1)& (0+255),f,b
 23988  017F78  6D6E               	negf	___altoft@c& (0+255),b
 23989  017F7A  0E00               	movlw	0
 23990  017F7C  236F               	addwfc	(___altoft@c+1)& (0+255),f,b
 23991  017F7E  2370               	addwfc	(___altoft@c+2)& (0+255),f,b
 23992  017F80  2371               	addwfc	(___altoft@c+3)& (0+255),f,b
 23993                           
 23994                           ; BSR set to: 0
 23995  017F82  0E01               	movlw	1
 23996  017F84  0100               	movlb	0	; () banked
 23997  017F86  6F77               	movwf	___altoft@sign& (0+255),b
 23998                           
 23999                           ; BSR set to: 0
 24000  017F88  D008               	goto	l19950
 24001  017F8A                     l19948:
 24002                           
 24003                           ; BSR set to: 0
 24004  017F8A  0100               	movlb	0	; () banked
 24005  017F8C  90D8               	bcf	status,0,c
 24006  017F8E  3371               	rrcf	(___altoft@c+3)& (0+255),f,b
 24007  017F90  3370               	rrcf	(___altoft@c+2)& (0+255),f,b
 24008  017F92  336F               	rrcf	(___altoft@c+1)& (0+255),f,b
 24009  017F94  336E               	rrcf	___altoft@c& (0+255),f,b
 24010  017F96  0100               	movlb	0	; () banked
 24011  017F98  2B76               	incf	___altoft@exp& (0+255),f,b
 24012  017F9A                     l19950:
 24013                           
 24014                           ; BSR set to: 0
 24015  017F9A  0E00               	movlw	0
 24016  017F9C  0100               	movlb	0	; () banked
 24017  017F9E  156E               	andwf	___altoft@c& (0+255),w,b
 24018  017FA0  0100               	movlb	0	; () banked
 24019  017FA2  6F72               	movwf	??___altoft& (0+255),b
 24020  017FA4  0E00               	movlw	0
 24021  017FA6  0100               	movlb	0	; () banked
 24022  017FA8  156F               	andwf	(___altoft@c+1)& (0+255),w,b
 24023  017FAA  0100               	movlb	0	; () banked
 24024  017FAC  6F73               	movwf	(??___altoft+1)& (0+255),b
 24025  017FAE  0E00               	movlw	0
 24026  017FB0  0100               	movlb	0	; () banked
 24027  017FB2  1570               	andwf	(___altoft@c+2)& (0+255),w,b
 24028  017FB4  0100               	movlb	0	; () banked
 24029  017FB6  6F74               	movwf	(??___altoft+2)& (0+255),b
 24030  017FB8  0EFF               	movlw	255
 24031  017FBA  0100               	movlb	0	; () banked
 24032  017FBC  1571               	andwf	(___altoft@c+3)& (0+255),w,b
 24033  017FBE  0100               	movlb	0	; () banked
 24034  017FC0  6F75               	movwf	(??___altoft+3)& (0+255),b
 24035  017FC2  0100               	movlb	0	; () banked
 24036  017FC4  5172               	movf	??___altoft& (0+255),w,b
 24037  017FC6  0100               	movlb	0	; () banked
 24038  017FC8  1173               	iorwf	(??___altoft+1)& (0+255),w,b
 24039  017FCA  0100               	movlb	0	; () banked
 24040  017FCC  1174               	iorwf	(??___altoft+2)& (0+255),w,b
 24041  017FCE  0100               	movlb	0	; () banked
 24042  017FD0  1175               	iorwf	(??___altoft+3)& (0+255),w,b
 24043  017FD2  A4D8               	btfss	status,2,c
 24044  017FD4  D7DA               	goto	l19948
 24045                           
 24046                           ; BSR set to: 0
 24047                           
 24048                           ; BSR set to: 0
 24049  017FD6  C06E  F060         	movff	___altoft@c,___ftpack@arg
 24050  017FDA  C06F  F061         	movff	___altoft@c+1,___ftpack@arg+1
 24051  017FDE  C070  F062         	movff	___altoft@c+2,___ftpack@arg+2
 24052  017FE2  C076  F063         	movff	___altoft@exp,___ftpack@exp
 24053  017FE6  C077  F064         	movff	___altoft@sign,___ftpack@sign
 24054  017FEA  EC45  F000         	call	___ftpack	;wreg free
 24055  017FEE  C060  F06E         	movff	?___ftpack,?___altoft
 24056  017FF2  C061  F06F         	movff	?___ftpack+1,?___altoft+1
 24057  017FF6  C062  F070         	movff	?___ftpack+2,?___altoft+2
 24058  017FFA  0012               	return	
 24059  017FFC                     __end_of___altoft:
 24060                           	opt stack 0
 24061                           tblptru	equ	0xFF8
 24062                           tblptrh	equ	0xFF7
 24063                           tblptrl	equ	0xFF6
 24064                           tablat	equ	0xFF5
 24065                           prodh	equ	0xFF4
 24066                           prodl	equ	0xFF3
 24067                           intcon	equ	0xFF2
 24068                           intcon2	equ	0xFF1
 24069                           intcon3	equ	0xFF0
 24070                           postinc0	equ	0xFEE
 24071                           wreg	equ	0xFE8
 24072                           indf1	equ	0xFE7
 24073                           postinc1	equ	0xFE6
 24074                           postdec1	equ	0xFE5
 24075                           plusw1	equ	0xFE3
 24076                           fsr1h	equ	0xFE2
 24077                           fsr1l	equ	0xFE1
 24078                           indf2	equ	0xFDF
 24079                           postinc2	equ	0xFDE
 24080                           postdec2	equ	0xFDD
 24081                           plusw2	equ	0xFDB
 24082                           fsr2h	equ	0xFDA
 24083                           fsr2l	equ	0xFD9
 24084                           status	equ	0xFD8
 24085                           
 24086 ;; *************** function ___ftpack *****************
 24087 ;; Defined at:
 24088 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
 24089 ;; Parameters:    Size  Location     Type
 24090 ;;  arg             3    0[BANK0 ] unsigned um
 24091 ;;  exp             1    3[BANK0 ] unsigned char 
 24092 ;;  sign            1    4[BANK0 ] unsigned char 
 24093 ;; Auto vars:     Size  Location     Type
 24094 ;;		None
 24095 ;; Return value:  Size  Location     Type
 24096 ;;                  3    0[BANK0 ] float 
 24097 ;; Registers used:
 24098 ;;		wreg, status,2, status,0
 24099 ;; Tracked objects:
 24100 ;;		On entry : 0/0
 24101 ;;		On exit  : 0/0
 24102 ;;		Unchanged: 0/0
 24103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24104 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24106 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24107 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24108 ;;Total ram usage:        8 bytes
 24109 ;; Hardware stack levels used:    1
 24110 ;; Hardware stack levels required when called:   10
 24111 ;; This function calls:
 24112 ;;		Nothing
 24113 ;; This function is called by:
 24114 ;;		___altoft
 24115 ;; This function uses a non-reentrant model
 24116 ;;
 24117                           
 24118                           	psect	text106
 24119  00008A                     __ptext106:
 24120                           	opt stack 0
 24121  00008A                     ___ftpack:
 24122                           	opt stack 17
 24123                           
 24124                           ;incstack = 0
 24125  00008A  0100               	movlb	0	; () banked
 24126  00008C  5163               	movf	___ftpack@exp& (0+255),w,b
 24127  00008E  0100               	movlb	0	; () banked
 24128  000090  B4D8               	btfsc	status,2,c
 24129  000092  D008               	goto	l19076
 24130                           
 24131                           ; BSR set to: 0
 24132  000094  0100               	movlb	0	; () banked
 24133  000096  5160               	movf	___ftpack@arg& (0+255),w,b
 24134  000098  0100               	movlb	0	; () banked
 24135  00009A  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 24136  00009C  0100               	movlb	0	; () banked
 24137  00009E  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 24138  0000A0  A4D8               	btfss	status,2,c
 24139  0000A2  D011               	goto	l19082
 24140  0000A4                     l19076:
 24141                           
 24142                           ; BSR set to: 0
 24143  0000A4  0E00               	movlw	0
 24144  0000A6  0100               	movlb	0	; () banked
 24145  0000A8  6F60               	movwf	?___ftpack& (0+255),b
 24146  0000AA  0E00               	movlw	0
 24147  0000AC  0100               	movlb	0	; () banked
 24148  0000AE  6F61               	movwf	(?___ftpack+1)& (0+255),b
 24149  0000B0  0E00               	movlw	0
 24150  0000B2  0100               	movlb	0	; () banked
 24151  0000B4  6F62               	movwf	(?___ftpack+2)& (0+255),b
 24152                           
 24153                           ; BSR set to: 0
 24154  0000B6  0012               	return	
 24155  0000B8                     l19080:
 24156                           
 24157                           ; BSR set to: 0
 24158  0000B8  0100               	movlb	0	; () banked
 24159  0000BA  2B63               	incf	___ftpack@exp& (0+255),f,b
 24160  0000BC  0100               	movlb	0	; () banked
 24161  0000BE  90D8               	bcf	status,0,c
 24162  0000C0  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 24163  0000C2  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 24164  0000C4  3360               	rrcf	___ftpack@arg& (0+255),f,b
 24165  0000C6                     l19082:
 24166                           
 24167                           ; BSR set to: 0
 24168  0000C6  0E00               	movlw	0
 24169  0000C8  0100               	movlb	0	; () banked
 24170  0000CA  1560               	andwf	___ftpack@arg& (0+255),w,b
 24171  0000CC  0100               	movlb	0	; () banked
 24172  0000CE  6F65               	movwf	??___ftpack& (0+255),b
 24173  0000D0  0E00               	movlw	0
 24174  0000D2  0100               	movlb	0	; () banked
 24175  0000D4  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 24176  0000D6  0100               	movlb	0	; () banked
 24177  0000D8  6F66               	movwf	(??___ftpack+1)& (0+255),b
 24178  0000DA  0EFE               	movlw	254
 24179  0000DC  0100               	movlb	0	; () banked
 24180  0000DE  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 24181  0000E0  0100               	movlb	0	; () banked
 24182  0000E2  6F67               	movwf	(??___ftpack+2)& (0+255),b
 24183  0000E4  0100               	movlb	0	; () banked
 24184  0000E6  5165               	movf	??___ftpack& (0+255),w,b
 24185  0000E8  0100               	movlb	0	; () banked
 24186  0000EA  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 24187  0000EC  0100               	movlb	0	; () banked
 24188  0000EE  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 24189  0000F0  B4D8               	btfsc	status,2,c
 24190  0000F2  D011               	goto	l19088
 24191  0000F4  D7E1               	goto	l19080
 24192  0000F6                     l19084:
 24193                           
 24194                           ; BSR set to: 0
 24195  0000F6  0100               	movlb	0	; () banked
 24196  0000F8  2B63               	incf	___ftpack@exp& (0+255),f,b
 24197                           
 24198                           ; BSR set to: 0
 24199  0000FA  0E01               	movlw	1
 24200  0000FC  0100               	movlb	0	; () banked
 24201  0000FE  2760               	addwf	___ftpack@arg& (0+255),f,b
 24202  000100  0E00               	movlw	0
 24203  000102  0100               	movlb	0	; () banked
 24204  000104  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 24205  000106  0E00               	movlw	0
 24206  000108  0100               	movlb	0	; () banked
 24207  00010A  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 24208  00010C  0100               	movlb	0	; () banked
 24209  00010E  90D8               	bcf	status,0,c
 24210  000110  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 24211  000112  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 24212  000114  3360               	rrcf	___ftpack@arg& (0+255),f,b
 24213  000116                     l19088:
 24214                           
 24215                           ; BSR set to: 0
 24216  000116  0E00               	movlw	0
 24217  000118  0100               	movlb	0	; () banked
 24218  00011A  1560               	andwf	___ftpack@arg& (0+255),w,b
 24219  00011C  0100               	movlb	0	; () banked
 24220  00011E  6F65               	movwf	??___ftpack& (0+255),b
 24221  000120  0E00               	movlw	0
 24222  000122  0100               	movlb	0	; () banked
 24223  000124  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 24224  000126  0100               	movlb	0	; () banked
 24225  000128  6F66               	movwf	(??___ftpack+1)& (0+255),b
 24226  00012A  0EFF               	movlw	255
 24227  00012C  0100               	movlb	0	; () banked
 24228  00012E  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 24229  000130  0100               	movlb	0	; () banked
 24230  000132  6F67               	movwf	(??___ftpack+2)& (0+255),b
 24231  000134  0100               	movlb	0	; () banked
 24232  000136  5165               	movf	??___ftpack& (0+255),w,b
 24233  000138  0100               	movlb	0	; () banked
 24234  00013A  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 24235  00013C  0100               	movlb	0	; () banked
 24236  00013E  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 24237  000140  B4D8               	btfsc	status,2,c
 24238  000142  D008               	goto	l19092
 24239  000144  D7D8               	goto	l19084
 24240  000146                     l19090:
 24241                           
 24242                           ; BSR set to: 0
 24243  000146  0100               	movlb	0	; () banked
 24244  000148  0763               	decf	___ftpack@exp& (0+255),f,b
 24245  00014A  0100               	movlb	0	; () banked
 24246  00014C  90D8               	bcf	status,0,c
 24247  00014E  3760               	rlcf	___ftpack@arg& (0+255),f,b
 24248  000150  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 24249  000152  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 24250  000154                     l19092:
 24251                           
 24252                           ; BSR set to: 0
 24253  000154  0100               	movlb	0	; () banked
 24254  000156  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 24255  000158  D004               	goto	l3524
 24256                           
 24257                           ; BSR set to: 0
 24258  00015A  0E02               	movlw	2
 24259  00015C  0100               	movlb	0	; () banked
 24260  00015E  6163               	cpfslt	___ftpack@exp& (0+255),b
 24261  000160  D7F2               	goto	l19090
 24262  000162                     l3524:
 24263                           
 24264                           ; BSR set to: 0
 24265  000162  0100               	movlb	0	; () banked
 24266  000164  B163               	btfsc	___ftpack@exp& (0+255),0,b
 24267  000166  D002               	goto	l19098
 24268                           
 24269                           ; BSR set to: 0
 24270  000168  0100               	movlb	0	; () banked
 24271  00016A  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 24272  00016C                     l19098:
 24273                           
 24274                           ; BSR set to: 0
 24275  00016C  0100               	movlb	0	; () banked
 24276  00016E  90D8               	bcf	status,0,c
 24277  000170  3363               	rrcf	___ftpack@exp& (0+255),f,b
 24278  000172  0100               	movlb	0	; () banked
 24279  000174  5163               	movf	___ftpack@exp& (0+255),w,b
 24280  000176  0100               	movlb	0	; () banked
 24281  000178  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 24282                           
 24283                           ; BSR set to: 0
 24284  00017A  0100               	movlb	0	; () banked
 24285  00017C  5164               	movf	___ftpack@sign& (0+255),w,b
 24286  00017E  0100               	movlb	0	; () banked
 24287  000180  B4D8               	btfsc	status,2,c
 24288  000182  D002               	goto	l19104
 24289                           
 24290                           ; BSR set to: 0
 24291  000184  0100               	movlb	0	; () banked
 24292  000186  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 24293  000188                     l19104:
 24294                           
 24295                           ; BSR set to: 0
 24296  000188  C060  F060         	movff	___ftpack@arg,?___ftpack
 24297  00018C  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 24298  000190  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 24299  000194  0012               	return	
 24300  000196                     __end_of___ftpack:
 24301                           	opt stack 0
 24302                           tblptru	equ	0xFF8
 24303                           tblptrh	equ	0xFF7
 24304                           tblptrl	equ	0xFF6
 24305                           tablat	equ	0xFF5
 24306                           prodh	equ	0xFF4
 24307                           prodl	equ	0xFF3
 24308                           intcon	equ	0xFF2
 24309                           intcon2	equ	0xFF1
 24310                           intcon3	equ	0xFF0
 24311                           postinc0	equ	0xFEE
 24312                           wreg	equ	0xFE8
 24313                           indf1	equ	0xFE7
 24314                           postinc1	equ	0xFE6
 24315                           postdec1	equ	0xFE5
 24316                           plusw1	equ	0xFE3
 24317                           fsr1h	equ	0xFE2
 24318                           fsr1l	equ	0xFE1
 24319                           indf2	equ	0xFDF
 24320                           postinc2	equ	0xFDE
 24321                           postdec2	equ	0xFDD
 24322                           plusw2	equ	0xFDB
 24323                           fsr2h	equ	0xFDA
 24324                           fsr2l	equ	0xFD9
 24325                           status	equ	0xFD8
 24326                           
 24327 ;; *************** function ___aldiv *****************
 24328 ;; Defined at:
 24329 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\aldiv.c"
 24330 ;; Parameters:    Size  Location     Type
 24331 ;;  dividend        4    0[BANK0 ] long 
 24332 ;;  divisor         4    4[BANK0 ] long 
 24333 ;; Auto vars:     Size  Location     Type
 24334 ;;  quotient        4   10[BANK0 ] long 
 24335 ;;  sign            1    9[BANK0 ] unsigned char 
 24336 ;;  counter         1    8[BANK0 ] unsigned char 
 24337 ;; Return value:  Size  Location     Type
 24338 ;;                  4    0[BANK0 ] long 
 24339 ;; Registers used:
 24340 ;;		wreg, status,2, status,0
 24341 ;; Tracked objects:
 24342 ;;		On entry : 0/0
 24343 ;;		On exit  : 0/0
 24344 ;;		Unchanged: 0/0
 24345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24346 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24347 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24349 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24350 ;;Total ram usage:       14 bytes
 24351 ;; Hardware stack levels used:    1
 24352 ;; Hardware stack levels required when called:   10
 24353 ;; This function calls:
 24354 ;;		Nothing
 24355 ;; This function is called by:
 24356 ;;		__display_efficiency
 24357 ;;		__get_input_power
 24358 ;;		_log_generate_entry
 24359 ;; This function uses a non-reentrant model
 24360 ;;
 24361                           
 24362                           	psect	text107
 24363  015FD4                     __ptext107:
 24364                           	opt stack 0
 24365  015FD4                     ___aldiv:
 24366                           	opt stack 18
 24367                           
 24368                           ; BSR set to: 0
 24369                           ;incstack = 0
 24370  015FD4  0E00               	movlw	0
 24371  015FD6  0100               	movlb	0	; () banked
 24372  015FD8  6F69               	movwf	___aldiv@sign& (0+255),b
 24373                           
 24374                           ; BSR set to: 0
 24375  015FDA  0100               	movlb	0	; () banked
 24376  015FDC  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 24377  015FDE  D00C               	goto	l19904
 24378                           
 24379                           ; BSR set to: 0
 24380  015FE0  0100               	movlb	0	; () banked
 24381  015FE2  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 24382  015FE4  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 24383  015FE6  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 24384  015FE8  6D64               	negf	___aldiv@divisor& (0+255),b
 24385  015FEA  0E00               	movlw	0
 24386  015FEC  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 24387  015FEE  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 24388  015FF0  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 24389                           
 24390                           ; BSR set to: 0
 24391  015FF2  0E01               	movlw	1
 24392  015FF4  0100               	movlb	0	; () banked
 24393  015FF6  6F69               	movwf	___aldiv@sign& (0+255),b
 24394  015FF8                     l19904:
 24395                           
 24396                           ; BSR set to: 0
 24397  015FF8  0100               	movlb	0	; () banked
 24398  015FFA  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 24399  015FFC  D00C               	goto	l19910
 24400                           
 24401                           ; BSR set to: 0
 24402  015FFE  0100               	movlb	0	; () banked
 24403  016000  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 24404  016002  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 24405  016004  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 24406  016006  6D60               	negf	___aldiv@dividend& (0+255),b
 24407  016008  0E00               	movlw	0
 24408  01600A  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 24409  01600C  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 24410  01600E  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 24411                           
 24412                           ; BSR set to: 0
 24413  016010  0E01               	movlw	1
 24414  016012  0100               	movlb	0	; () banked
 24415  016014  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 24416  016016                     l19910:
 24417                           
 24418                           ; BSR set to: 0
 24419  016016  0E00               	movlw	0
 24420  016018  0100               	movlb	0	; () banked
 24421  01601A  6F6A               	movwf	___aldiv@quotient& (0+255),b
 24422  01601C  0E00               	movlw	0
 24423  01601E  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 24424  016020  0E00               	movlw	0
 24425  016022  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 24426  016024  0E00               	movlw	0
 24427  016026  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 24428                           
 24429                           ; BSR set to: 0
 24430  016028  0100               	movlb	0	; () banked
 24431  01602A  5164               	movf	___aldiv@divisor& (0+255),w,b
 24432  01602C  0100               	movlb	0	; () banked
 24433  01602E  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 24434  016030  0100               	movlb	0	; () banked
 24435  016032  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 24436  016034  0100               	movlb	0	; () banked
 24437  016036  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 24438  016038  B4D8               	btfsc	status,2,c
 24439  01603A  D042               	goto	l19932
 24440                           
 24441                           ; BSR set to: 0
 24442  01603C  0E01               	movlw	1
 24443  01603E  0100               	movlb	0	; () banked
 24444  016040  6F68               	movwf	___aldiv@counter& (0+255),b
 24445  016042  D008               	goto	l19918
 24446  016044                     l19916:
 24447                           
 24448                           ; BSR set to: 0
 24449  016044  0100               	movlb	0	; () banked
 24450  016046  90D8               	bcf	status,0,c
 24451  016048  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 24452  01604A  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 24453  01604C  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 24454  01604E  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 24455  016050  0100               	movlb	0	; () banked
 24456  016052  2B68               	incf	___aldiv@counter& (0+255),f,b
 24457  016054                     l19918:
 24458                           
 24459                           ; BSR set to: 0
 24460  016054  0100               	movlb	0	; () banked
 24461  016056  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 24462  016058  D7F5               	goto	l19916
 24463  01605A                     l19920:
 24464                           
 24465                           ; BSR set to: 0
 24466  01605A  0100               	movlb	0	; () banked
 24467  01605C  90D8               	bcf	status,0,c
 24468  01605E  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 24469  016060  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 24470  016062  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 24471  016064  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 24472                           
 24473                           ; BSR set to: 0
 24474  016066  0100               	movlb	0	; () banked
 24475  016068  5164               	movf	___aldiv@divisor& (0+255),w,b
 24476  01606A  0100               	movlb	0	; () banked
 24477  01606C  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 24478  01606E  0100               	movlb	0	; () banked
 24479  016070  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 24480  016072  0100               	movlb	0	; () banked
 24481  016074  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 24482  016076  0100               	movlb	0	; () banked
 24483  016078  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 24484  01607A  0100               	movlb	0	; () banked
 24485  01607C  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 24486  01607E  0100               	movlb	0	; () banked
 24487  016080  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 24488  016082  0100               	movlb	0	; () banked
 24489  016084  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 24490  016086  A0D8               	btfss	status,0,c
 24491  016088  D012               	goto	l19928
 24492                           
 24493                           ; BSR set to: 0
 24494  01608A  0100               	movlb	0	; () banked
 24495  01608C  5164               	movf	___aldiv@divisor& (0+255),w,b
 24496  01608E  0100               	movlb	0	; () banked
 24497  016090  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 24498  016092  0100               	movlb	0	; () banked
 24499  016094  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 24500  016096  0100               	movlb	0	; () banked
 24501  016098  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 24502  01609A  0100               	movlb	0	; () banked
 24503  01609C  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 24504  01609E  0100               	movlb	0	; () banked
 24505  0160A0  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 24506  0160A2  0100               	movlb	0	; () banked
 24507  0160A4  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 24508  0160A6  0100               	movlb	0	; () banked
 24509  0160A8  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 24510                           
 24511                           ; BSR set to: 0
 24512  0160AA  0100               	movlb	0	; () banked
 24513  0160AC  816A               	bsf	___aldiv@quotient& (0+255),0,b
 24514  0160AE                     l19928:
 24515                           
 24516                           ; BSR set to: 0
 24517  0160AE  0100               	movlb	0	; () banked
 24518  0160B0  90D8               	bcf	status,0,c
 24519  0160B2  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 24520  0160B4  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 24521  0160B6  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 24522  0160B8  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 24523                           
 24524                           ; BSR set to: 0
 24525  0160BA  0100               	movlb	0	; () banked
 24526  0160BC  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 24527  0160BE  D7CD               	goto	l19920
 24528  0160C0                     l19932:
 24529                           
 24530                           ; BSR set to: 0
 24531  0160C0  0100               	movlb	0	; () banked
 24532  0160C2  5169               	movf	___aldiv@sign& (0+255),w,b
 24533  0160C4  0100               	movlb	0	; () banked
 24534  0160C6  B4D8               	btfsc	status,2,c
 24535  0160C8  D009               	goto	l19936
 24536                           
 24537                           ; BSR set to: 0
 24538  0160CA  0100               	movlb	0	; () banked
 24539  0160CC  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 24540  0160CE  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 24541  0160D0  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 24542  0160D2  6D6A               	negf	___aldiv@quotient& (0+255),b
 24543  0160D4  0E00               	movlw	0
 24544  0160D6  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 24545  0160D8  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 24546  0160DA  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 24547  0160DC                     l19936:
 24548                           
 24549                           ; BSR set to: 0
 24550  0160DC  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 24551  0160E0  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 24552  0160E4  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 24553  0160E8  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 24554  0160EC  0012               	return	
 24555  0160EE                     __end_of___aldiv:
 24556                           	opt stack 0
 24557                           tblptru	equ	0xFF8
 24558                           tblptrh	equ	0xFF7
 24559                           tblptrl	equ	0xFF6
 24560                           tablat	equ	0xFF5
 24561                           prodh	equ	0xFF4
 24562                           prodl	equ	0xFF3
 24563                           intcon	equ	0xFF2
 24564                           intcon2	equ	0xFF1
 24565                           intcon3	equ	0xFF0
 24566                           postinc0	equ	0xFEE
 24567                           wreg	equ	0xFE8
 24568                           indf1	equ	0xFE7
 24569                           postinc1	equ	0xFE6
 24570                           postdec1	equ	0xFE5
 24571                           plusw1	equ	0xFE3
 24572                           fsr1h	equ	0xFE2
 24573                           fsr1l	equ	0xFE1
 24574                           indf2	equ	0xFDF
 24575                           postinc2	equ	0xFDE
 24576                           postdec2	equ	0xFDD
 24577                           plusw2	equ	0xFDB
 24578                           fsr2h	equ	0xFDA
 24579                           fsr2l	equ	0xFD9
 24580                           status	equ	0xFD8
 24581                           
 24582 ;; *************** function __display_clear *****************
 24583 ;; Defined at:
 24584 ;;		line 28 in file "display.c"
 24585 ;; Parameters:    Size  Location     Type
 24586 ;;		None
 24587 ;; Auto vars:     Size  Location     Type
 24588 ;;  col             1    3[BANK0 ] unsigned char 
 24589 ;;  row             1    2[BANK0 ] unsigned char 
 24590 ;; Return value:  Size  Location     Type
 24591 ;;                  1    wreg      void 
 24592 ;; Registers used:
 24593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24594 ;; Tracked objects:
 24595 ;;		On entry : 0/0
 24596 ;;		On exit  : 0/0
 24597 ;;		Unchanged: 0/0
 24598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24600 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24601 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24602 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24603 ;;Total ram usage:        4 bytes
 24604 ;; Hardware stack levels used:    1
 24605 ;; Hardware stack levels required when called:   10
 24606 ;; This function calls:
 24607 ;;		Nothing
 24608 ;; This function is called by:
 24609 ;;		_display_prepare
 24610 ;; This function uses a non-reentrant model
 24611 ;;
 24612                           
 24613                           	psect	text108
 24614  019540                     __ptext108:
 24615                           	opt stack 0
 24616  019540                     __display_clear:
 24617                           	opt stack 19
 24618                           
 24619                           ;display.c: 30: uint8_t row;
 24620                           ;display.c: 31: uint8_t col;
 24621                           ;display.c: 32: for(row=0;row<4;++row)
 24622                           
 24623                           ; BSR set to: 0
 24624                           ;incstack = 0
 24625  019540  0E00               	movlw	0
 24626  019542  0100               	movlb	0	; () banked
 24627  019544  6F62               	movwf	__display_clear@row& (0+255),b
 24628  019546                     l20888:
 24629                           
 24630                           ; BSR set to: 0
 24631  019546  0E03               	movlw	3
 24632  019548  0100               	movlb	0	; () banked
 24633  01954A  6562               	cpfsgt	__display_clear@row& (0+255),b
 24634  01954C  D001               	goto	l20892
 24635  01954E  0012               	return	
 24636  019550                     l20892:
 24637                           
 24638                           ; BSR set to: 0
 24639                           ;display.c: 33: {
 24640                           ;display.c: 34: for(col=0;col<20;++col)
 24641  019550  0E00               	movlw	0
 24642  019552  0100               	movlb	0	; () banked
 24643  019554  6F63               	movwf	__display_clear@col& (0+255),b
 24644  019556                     l20894:
 24645                           
 24646                           ; BSR set to: 0
 24647  019556  0E13               	movlw	19
 24648  019558  0100               	movlb	0	; () banked
 24649  01955A  6563               	cpfsgt	__display_clear@col& (0+255),b
 24650  01955C  D001               	goto	l20898
 24651  01955E  D01F               	goto	l20904
 24652  019560                     l20898:
 24653                           
 24654                           ; BSR set to: 0
 24655                           ;display.c: 35: {
 24656                           ;display.c: 36: display_content[row][col] = ' ';
 24657  019560  0100               	movlb	0	; () banked
 24658  019562  5162               	movf	__display_clear@row& (0+255),w,b
 24659  019564  0D14               	mullw	20
 24660  019566  0E54               	movlw	low _display_content
 24661  019568  0100               	movlb	0	; () banked
 24662  01956A  6F60               	movwf	??__display_clear& (0+255),b
 24663  01956C  0E03               	movlw	high _display_content
 24664  01956E  0100               	movlb	0	; () banked
 24665  019570  6F61               	movwf	(??__display_clear+1)& (0+255),b
 24666  019572  50F3               	movf	prodl,w,c
 24667  019574  0100               	movlb	0	; () banked
 24668  019576  2760               	addwf	??__display_clear& (0+255),f,b
 24669  019578  50F4               	movf	prodh,w,c
 24670  01957A  0100               	movlb	0	; () banked
 24671  01957C  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 24672  01957E  0100               	movlb	0	; () banked
 24673  019580  5163               	movf	__display_clear@col& (0+255),w,b
 24674  019582  0D01               	mullw	1
 24675  019584  50F3               	movf	prodl,w,c
 24676  019586  0100               	movlb	0	; () banked
 24677  019588  2560               	addwf	??__display_clear& (0+255),w,b
 24678  01958A  6ED9               	movwf	fsr2l,c
 24679  01958C  50F4               	movf	prodh,w,c
 24680  01958E  0100               	movlb	0	; () banked
 24681  019590  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 24682  019592  6EDA               	movwf	fsr2h,c
 24683  019594  0E20               	movlw	32
 24684  019596  6EDF               	movwf	indf2,c
 24685                           
 24686                           ; BSR set to: 0
 24687  019598  0100               	movlb	0	; () banked
 24688  01959A  2B63               	incf	__display_clear@col& (0+255),f,b
 24689  01959C  D7DC               	goto	l20894
 24690  01959E                     l20904:
 24691                           
 24692                           ; BSR set to: 0
 24693  01959E  0100               	movlb	0	; () banked
 24694  0195A0  2B62               	incf	__display_clear@row& (0+255),f,b
 24695  0195A2  D7D1               	goto	l20888
 24696  0195A4                     __end_of__display_clear:
 24697                           	opt stack 0
 24698                           tblptru	equ	0xFF8
 24699                           tblptrh	equ	0xFF7
 24700                           tblptrl	equ	0xFF6
 24701                           tablat	equ	0xFF5
 24702                           prodh	equ	0xFF4
 24703                           prodl	equ	0xFF3
 24704                           intcon	equ	0xFF2
 24705                           intcon2	equ	0xFF1
 24706                           intcon3	equ	0xFF0
 24707                           postinc0	equ	0xFEE
 24708                           wreg	equ	0xFE8
 24709                           indf1	equ	0xFE7
 24710                           postinc1	equ	0xFE6
 24711                           postdec1	equ	0xFE5
 24712                           plusw1	equ	0xFE3
 24713                           fsr1h	equ	0xFE2
 24714                           fsr1l	equ	0xFE1
 24715                           indf2	equ	0xFDF
 24716                           postinc2	equ	0xFDE
 24717                           postdec2	equ	0xFDD
 24718                           plusw2	equ	0xFDB
 24719                           fsr2h	equ	0xFDA
 24720                           fsr2l	equ	0xFD9
 24721                           status	equ	0xFD8
 24722                           
 24723 ;; *************** function __display_charger *****************
 24724 ;; Defined at:
 24725 ;;		line 405 in file "display.c"
 24726 ;; Parameters:    Size  Location     Type
 24727 ;;		None
 24728 ;; Auto vars:     Size  Location     Type
 24729 ;;  charger_asyn   21   36[BANK1 ] const unsigned char [21]
 24730 ;;  header         21   15[BANK1 ] const unsigned char [21]
 24731 ;;  charger_sync   20   57[BANK1 ] const unsigned char [20]
 24732 ;;  supply_off     19   77[BANK1 ] const unsigned char [19]
 24733 ;;  supply_on      18   96[BANK1 ] const unsigned char [18]
 24734 ;;  charger_star   16  114[BANK1 ] const unsigned char [16]
 24735 ;;  charger_off    12  130[BANK1 ] const unsigned char [12]
 24736 ;;  fan_off         8    0[BANK1 ] const unsigned char [8]
 24737 ;;  fan_on          7    8[BANK1 ] const unsigned char [7]
 24738 ;;  cntr            1  142[BANK1 ] unsigned char 
 24739 ;; Return value:  Size  Location     Type
 24740 ;;                  1    wreg      void 
 24741 ;; Registers used:
 24742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24743 ;; Tracked objects:
 24744 ;;		On entry : 0/0
 24745 ;;		On exit  : 0/0
 24746 ;;		Unchanged: 0/0
 24747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24749 ;;      Locals:         0       0     143       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24750 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24751 ;;      Totals:         0       1     143       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24752 ;;Total ram usage:      144 bytes
 24753 ;; Hardware stack levels used:    1
 24754 ;; Hardware stack levels required when called:   14
 24755 ;; This function calls:
 24756 ;;		__display_itoa
 24757 ;;		_buck_get_dutycycle
 24758 ;;		_buck_get_mode
 24759 ;; This function is called by:
 24760 ;;		_display_prepare
 24761 ;; This function uses a non-reentrant model
 24762 ;;
 24763                           
 24764                           	psect	text109
 24765  012716                     __ptext109:
 24766                           	opt stack 0
 24767  012716                     __display_charger:
 24768                           	opt stack 15
 24769                           
 24770                           ;display.c: 407: uint8_t cntr;
 24771                           ;display.c: 408: const char header[] = "MPPT Charger Details";
 24772                           
 24773                           ; BSR set to: 0
 24774                           ;incstack = 0
 24775  012716  0E3A               	movlw	low __display_charger@F8732
 24776  012718  6EF6               	movwf	tblptrl,c
 24777  01271A                     	if	1	;There is more than 1 active tblptr byte
 24778  01271A  0EFC               	movlw	high __display_charger@F8732
 24779  01271C  6EF7               	movwf	tblptrh,c
 24780  01271E                     	endif
 24781  01271E                     	if	1	;There are 3 active tblptr bytes
 24782  01271E  0E00               	movlw	low (__display_charger@F8732 shr (0+16))
 24783  012720  6EF8               	movwf	tblptru,c
 24784  012722                     	endif
 24785  012722  EE21  F00F         	lfsr	2,__display_charger@header
 24786  012726  0E14               	movlw	20
 24787  012728                     u20740:
 24788  012728  0009               	tblrd		*+
 24789  01272A  CFF5 FFDE          	movff	tablat,postinc2
 24790  01272E  06E8               	decf	wreg,f,c
 24791  012730  E2FB               	bc	u20740
 24792                           
 24793                           ;display.c: 409: const char supply_on[] = "Charger supply on";
 24794  012732  0E2A               	movlw	low __display_charger@F8734
 24795  012734  6EF6               	movwf	tblptrl,c
 24796  012736                     	if	1	;There is more than 1 active tblptr byte
 24797  012736  0EFD               	movlw	high __display_charger@F8734
 24798  012738  6EF7               	movwf	tblptrh,c
 24799  01273A                     	endif
 24800  01273A                     	if	1	;There are 3 active tblptr bytes
 24801  01273A  0E00               	movlw	low (__display_charger@F8734 shr (0+16))
 24802  01273C  6EF8               	movwf	tblptru,c
 24803  01273E                     	endif
 24804  01273E  EE21  F060         	lfsr	2,__display_charger@supply_on
 24805  012742  0E11               	movlw	17
 24806  012744                     u20750:
 24807  012744  0009               	tblrd		*+
 24808  012746  CFF5 FFDE          	movff	tablat,postinc2
 24809  01274A  06E8               	decf	wreg,f,c
 24810  01274C  E2FB               	bc	u20750
 24811                           
 24812                           ;display.c: 410: const char supply_off[] = "Charger supply off";
 24813  01274E  0E17               	movlw	low __display_charger@F8736
 24814  012750  6EF6               	movwf	tblptrl,c
 24815  012752                     	if	1	;There is more than 1 active tblptr byte
 24816  012752  0EFD               	movlw	high __display_charger@F8736
 24817  012754  6EF7               	movwf	tblptrh,c
 24818  012756                     	endif
 24819  012756                     	if	1	;There are 3 active tblptr bytes
 24820  012756  0E00               	movlw	low (__display_charger@F8736 shr (0+16))
 24821  012758  6EF8               	movwf	tblptru,c
 24822  01275A                     	endif
 24823  01275A  EE21  F04D         	lfsr	2,__display_charger@supply_off
 24824  01275E  0E12               	movlw	18
 24825  012760                     u20760:
 24826  012760  0009               	tblrd		*+
 24827  012762  CFF5 FFDE          	movff	tablat,postinc2
 24828  012766  06E8               	decf	wreg,f,c
 24829  012768  E2FB               	bc	u20760
 24830                           
 24831                           ;display.c: 411: const char fan_on[] = "Fan on";
 24832  01276A  0EA9               	movlw	low __display_charger@F8738
 24833  01276C  6EF6               	movwf	tblptrl,c
 24834  01276E                     	if	1	;There is more than 1 active tblptr byte
 24835  01276E  0EFE               	movlw	high __display_charger@F8738
 24836  012770  6EF7               	movwf	tblptrh,c
 24837  012772                     	endif
 24838  012772                     	if	1	;There are 3 active tblptr bytes
 24839  012772  0E00               	movlw	low (__display_charger@F8738 shr (0+16))
 24840  012774  6EF8               	movwf	tblptru,c
 24841  012776                     	endif
 24842  012776  EE21  F008         	lfsr	2,__display_charger@fan_on
 24843  01277A  0E06               	movlw	6
 24844  01277C                     u20770:
 24845  01277C  0009               	tblrd		*+
 24846  01277E  CFF5 FFDE          	movff	tablat,postinc2
 24847  012782  06E8               	decf	wreg,f,c
 24848  012784  E2FB               	bc	u20770
 24849                           
 24850                           ;display.c: 412: const char fan_off[] = "Fan off";
 24851  012786  0E91               	movlw	low __display_charger@F8740
 24852  012788  6EF6               	movwf	tblptrl,c
 24853  01278A                     	if	1	;There is more than 1 active tblptr byte
 24854  01278A  0EFE               	movlw	high __display_charger@F8740
 24855  01278C  6EF7               	movwf	tblptrh,c
 24856  01278E                     	endif
 24857  01278E                     	if	1	;There are 3 active tblptr bytes
 24858  01278E  0E00               	movlw	low (__display_charger@F8740 shr (0+16))
 24859  012790  6EF8               	movwf	tblptru,c
 24860  012792                     	endif
 24861  012792  EE21  F000         	lfsr	2,__display_charger@fan_off
 24862  012796  0E07               	movlw	7
 24863  012798                     u20780:
 24864  012798  0009               	tblrd		*+
 24865  01279A  CFF5 FFDE          	movff	tablat,postinc2
 24866  01279E  06E8               	decf	wreg,f,c
 24867  0127A0  E2FB               	bc	u20780
 24868                           
 24869                           ;display.c: 414: const char charger_off[] = "Charger off";
 24870  0127A2  0E45               	movlw	low __display_charger@F8742
 24871  0127A4  6EF6               	movwf	tblptrl,c
 24872  0127A6                     	if	1	;There is more than 1 active tblptr byte
 24873  0127A6  0EFE               	movlw	high __display_charger@F8742
 24874  0127A8  6EF7               	movwf	tblptrh,c
 24875  0127AA                     	endif
 24876  0127AA                     	if	1	;There are 3 active tblptr bytes
 24877  0127AA  0E00               	movlw	low (__display_charger@F8742 shr (0+16))
 24878  0127AC  6EF8               	movwf	tblptru,c
 24879  0127AE                     	endif
 24880  0127AE  EE21  F082         	lfsr	2,__display_charger@charger_off
 24881  0127B2  0E0B               	movlw	11
 24882  0127B4                     u20790:
 24883  0127B4  0009               	tblrd		*+
 24884  0127B6  CFF5 FFDE          	movff	tablat,postinc2
 24885  0127BA  06E8               	decf	wreg,f,c
 24886  0127BC  E2FB               	bc	u20790
 24887                           
 24888                           ;display.c: 415: const char charger_startup[] = "Charger Startup";
 24889  0127BE  0E95               	movlw	low __display_charger@F8744
 24890  0127C0  6EF6               	movwf	tblptrl,c
 24891  0127C2                     	if	1	;There is more than 1 active tblptr byte
 24892  0127C2  0EFD               	movlw	high __display_charger@F8744
 24893  0127C4  6EF7               	movwf	tblptrh,c
 24894  0127C6                     	endif
 24895  0127C6                     	if	1	;There are 3 active tblptr bytes
 24896  0127C6  0E00               	movlw	low (__display_charger@F8744 shr (0+16))
 24897  0127C8  6EF8               	movwf	tblptru,c
 24898  0127CA                     	endif
 24899  0127CA  EE21  F072         	lfsr	2,__display_charger@charger_startup
 24900  0127CE  0E0F               	movlw	15
 24901  0127D0                     u20800:
 24902  0127D0  0009               	tblrd		*+
 24903  0127D2  CFF5 FFDE          	movff	tablat,postinc2
 24904  0127D6  06E8               	decf	wreg,f,c
 24905  0127D8  E2FB               	bc	u20800
 24906                           
 24907                           ;display.c: 416: const char charger_async[] = "Charger Asynchronous";
 24908  0127DA  0E25               	movlw	low __display_charger@F8746
 24909  0127DC  6EF6               	movwf	tblptrl,c
 24910  0127DE                     	if	1	;There is more than 1 active tblptr byte
 24911  0127DE  0EFC               	movlw	high __display_charger@F8746
 24912  0127E0  6EF7               	movwf	tblptrh,c
 24913  0127E2                     	endif
 24914  0127E2                     	if	1	;There are 3 active tblptr bytes
 24915  0127E2  0E00               	movlw	low (__display_charger@F8746 shr (0+16))
 24916  0127E4  6EF8               	movwf	tblptru,c
 24917  0127E6                     	endif
 24918  0127E6  EE21  F024         	lfsr	2,__display_charger@charger_async
 24919  0127EA  0E14               	movlw	20
 24920  0127EC                     u20810:
 24921  0127EC  0009               	tblrd		*+
 24922  0127EE  CFF5 FFDE          	movff	tablat,postinc2
 24923  0127F2  06E8               	decf	wreg,f,c
 24924  0127F4  E2FB               	bc	u20810
 24925                           
 24926                           ;display.c: 417: const char charger_sync[] = "Charger Synchronous";
 24927  0127F6  0E8D               	movlw	low __display_charger@F8748
 24928  0127F8  6EF6               	movwf	tblptrl,c
 24929  0127FA                     	if	1	;There is more than 1 active tblptr byte
 24930  0127FA  0EFC               	movlw	high __display_charger@F8748
 24931  0127FC  6EF7               	movwf	tblptrh,c
 24932  0127FE                     	endif
 24933  0127FE                     	if	1	;There are 3 active tblptr bytes
 24934  0127FE  0E00               	movlw	low (__display_charger@F8748 shr (0+16))
 24935  012800  6EF8               	movwf	tblptru,c
 24936  012802                     	endif
 24937  012802  EE21  F039         	lfsr	2,__display_charger@charger_sync
 24938  012806  0E13               	movlw	19
 24939  012808                     u20820:
 24940  012808  0009               	tblrd		*+
 24941  01280A  CFF5 FFDE          	movff	tablat,postinc2
 24942  01280E  06E8               	decf	wreg,f,c
 24943  012810  E2FB               	bc	u20820
 24944                           
 24945                           ;display.c: 419: cntr = 0;
 24946  012812  0E00               	movlw	0
 24947  012814  0101               	movlb	1	; () banked
 24948  012816  6F8E               	movwf	__display_charger@cntr& (0+255),b
 24949                           
 24950                           ;display.c: 420: while(header[cntr])
 24951  012818  D016               	goto	l21216
 24952  01281A                     l21212:
 24953                           
 24954                           ; BSR set to: 1
 24955                           ;display.c: 421: display_content[0][cntr] = header[cntr++];
 24956  01281A  0101               	movlb	1	; () banked
 24957  01281C  518E               	movf	__display_charger@cntr& (0+255),w,b
 24958  01281E  0D01               	mullw	1
 24959  012820  0E0F               	movlw	low __display_charger@header
 24960  012822  24F3               	addwf	prodl,w,c
 24961  012824  6ED9               	movwf	fsr2l,c
 24962  012826  0E01               	movlw	high __display_charger@header
 24963  012828  20F4               	addwfc	prodh,w,c
 24964  01282A  6EDA               	movwf	fsr2h,c
 24965  01282C  0101               	movlb	1	; () banked
 24966  01282E  518E               	movf	__display_charger@cntr& (0+255),w,b
 24967  012830  0D01               	mullw	1
 24968  012832  0E54               	movlw	low _display_content
 24969  012834  24F3               	addwf	prodl,w,c
 24970  012836  6EE1               	movwf	fsr1l,c
 24971  012838  0E03               	movlw	high _display_content
 24972  01283A  20F4               	addwfc	prodh,w,c
 24973  01283C  6EE2               	movwf	fsr1h,c
 24974  01283E  CFDF FFE7          	movff	indf2,indf1
 24975                           
 24976                           ; BSR set to: 1
 24977  012842  0101               	movlb	1	; () banked
 24978  012844  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 24979  012846                     l21216:
 24980                           
 24981                           ; BSR set to: 1
 24982  012846  0101               	movlb	1	; () banked
 24983  012848  518E               	movf	__display_charger@cntr& (0+255),w,b
 24984  01284A  0D01               	mullw	1
 24985  01284C  0E0F               	movlw	low __display_charger@header
 24986  01284E  24F3               	addwf	prodl,w,c
 24987  012850  6ED9               	movwf	fsr2l,c
 24988  012852  0E01               	movlw	high __display_charger@header
 24989  012854  20F4               	addwfc	prodh,w,c
 24990  012856  6EDA               	movwf	fsr2h,c
 24991  012858  50DF               	movf	indf2,w,c
 24992  01285A  A4D8               	btfss	status,2,c
 24993  01285C  D7DE               	goto	l21212
 24994                           
 24995                           ; BSR set to: 1
 24996                           ;display.c: 423: cntr = 0;
 24997                           
 24998                           ; BSR set to: 1
 24999  01285E  0E00               	movlw	0
 25000  012860  0101               	movlb	1	; () banked
 25001  012862  6F8E               	movwf	__display_charger@cntr& (0+255),b
 25002                           
 25003                           ;display.c: 424: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
 25004  012864  D016               	goto	l21226
 25005  012866                     l21222:
 25006                           
 25007                           ;display.c: 427: display_content[1][cntr] = supply_on[cntr++];
 25008  012866  0101               	movlb	1	; () banked
 25009  012868  518E               	movf	__display_charger@cntr& (0+255),w,b
 25010  01286A  0D01               	mullw	1
 25011  01286C  0E60               	movlw	low __display_charger@supply_on
 25012  01286E  24F3               	addwf	prodl,w,c
 25013  012870  6ED9               	movwf	fsr2l,c
 25014  012872  0E01               	movlw	high __display_charger@supply_on
 25015  012874  20F4               	addwfc	prodh,w,c
 25016  012876  6EDA               	movwf	fsr2h,c
 25017  012878  0101               	movlb	1	; () banked
 25018  01287A  518E               	movf	__display_charger@cntr& (0+255),w,b
 25019  01287C  0D01               	mullw	1
 25020  01287E  0E68               	movlw	low (_display_content+20)
 25021  012880  24F3               	addwf	prodl,w,c
 25022  012882  6EE1               	movwf	fsr1l,c
 25023  012884  0E03               	movlw	high (_display_content+20)
 25024  012886  20F4               	addwfc	prodh,w,c
 25025  012888  6EE2               	movwf	fsr1h,c
 25026  01288A  CFDF FFE7          	movff	indf2,indf1
 25027                           
 25028                           ; BSR set to: 1
 25029  01288E  0101               	movlb	1	; () banked
 25030  012890  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 25031  012892                     l21226:
 25032  012892  0101               	movlb	1	; () banked
 25033  012894  518E               	movf	__display_charger@cntr& (0+255),w,b
 25034  012896  0D01               	mullw	1
 25035  012898  0E60               	movlw	low __display_charger@supply_on
 25036  01289A  24F3               	addwf	prodl,w,c
 25037  01289C  6ED9               	movwf	fsr2l,c
 25038  01289E  0E01               	movlw	high __display_charger@supply_on
 25039  0128A0  20F4               	addwfc	prodh,w,c
 25040  0128A2  6EDA               	movwf	fsr2h,c
 25041  0128A4  50DF               	movf	indf2,w,c
 25042  0128A6  B4D8               	btfsc	status,2,c
 25043  0128A8  D023               	goto	l21234
 25044  0128AA  D7DD               	goto	l21222
 25045  0128AC                     l21228:
 25046                           
 25047                           ; BSR set to: 1
 25048                           ;display.c: 432: display_content[1][cntr] = supply_off[cntr++];
 25049  0128AC  0101               	movlb	1	; () banked
 25050  0128AE  518E               	movf	__display_charger@cntr& (0+255),w,b
 25051  0128B0  0D01               	mullw	1
 25052  0128B2  0E4D               	movlw	low __display_charger@supply_off
 25053  0128B4  24F3               	addwf	prodl,w,c
 25054  0128B6  6ED9               	movwf	fsr2l,c
 25055  0128B8  0E01               	movlw	high __display_charger@supply_off
 25056  0128BA  20F4               	addwfc	prodh,w,c
 25057  0128BC  6EDA               	movwf	fsr2h,c
 25058  0128BE  0101               	movlb	1	; () banked
 25059  0128C0  518E               	movf	__display_charger@cntr& (0+255),w,b
 25060  0128C2  0D01               	mullw	1
 25061  0128C4  0E68               	movlw	low (_display_content+20)
 25062  0128C6  24F3               	addwf	prodl,w,c
 25063  0128C8  6EE1               	movwf	fsr1l,c
 25064  0128CA  0E03               	movlw	high (_display_content+20)
 25065  0128CC  20F4               	addwfc	prodh,w,c
 25066  0128CE  6EE2               	movwf	fsr1h,c
 25067  0128D0  CFDF FFE7          	movff	indf2,indf1
 25068                           
 25069                           ; BSR set to: 1
 25070  0128D4  0101               	movlb	1	; () banked
 25071  0128D6  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 25072                           
 25073                           ; BSR set to: 1
 25074  0128D8  0101               	movlb	1	; () banked
 25075  0128DA  518E               	movf	__display_charger@cntr& (0+255),w,b
 25076  0128DC  0D01               	mullw	1
 25077  0128DE  0E4D               	movlw	low __display_charger@supply_off
 25078  0128E0  24F3               	addwf	prodl,w,c
 25079  0128E2  6ED9               	movwf	fsr2l,c
 25080  0128E4  0E01               	movlw	high __display_charger@supply_off
 25081  0128E6  20F4               	addwfc	prodh,w,c
 25082  0128E8  6EDA               	movwf	fsr2h,c
 25083  0128EA  50DF               	movf	indf2,w,c
 25084  0128EC  A4D8               	btfss	status,2,c
 25085  0128EE  D7DE               	goto	l21228
 25086  0128F0                     l21234:
 25087                           
 25088                           ; BSR set to: 1
 25089                           ;display.c: 433: }
 25090                           ;display.c: 435: cntr = 0;
 25091  0128F0  0E00               	movlw	0
 25092  0128F2  0101               	movlb	1	; () banked
 25093  0128F4  6F8E               	movwf	__display_charger@cntr& (0+255),b
 25094                           
 25095                           ;display.c: 436: switch(buck_get_mode())
 25096  0128F6  D08C               	goto	l21262
 25097  0128F8                     l21236:
 25098                           
 25099                           ; BSR set to: 1
 25100                           ;display.c: 440: display_content[2][cntr] = charger_off[cntr++];
 25101  0128F8  0101               	movlb	1	; () banked
 25102  0128FA  518E               	movf	__display_charger@cntr& (0+255),w,b
 25103  0128FC  0D01               	mullw	1
 25104  0128FE  0E82               	movlw	low __display_charger@charger_off
 25105  012900  24F3               	addwf	prodl,w,c
 25106  012902  6ED9               	movwf	fsr2l,c
 25107  012904  0E01               	movlw	high __display_charger@charger_off
 25108  012906  20F4               	addwfc	prodh,w,c
 25109  012908  6EDA               	movwf	fsr2h,c
 25110  01290A  0101               	movlb	1	; () banked
 25111  01290C  518E               	movf	__display_charger@cntr& (0+255),w,b
 25112  01290E  0D01               	mullw	1
 25113  012910  0E7C               	movlw	low (_display_content+40)
 25114  012912  24F3               	addwf	prodl,w,c
 25115  012914  6EE1               	movwf	fsr1l,c
 25116  012916  0E03               	movlw	high (_display_content+40)
 25117  012918  20F4               	addwfc	prodh,w,c
 25118  01291A  6EE2               	movwf	fsr1h,c
 25119  01291C  CFDF FFE7          	movff	indf2,indf1
 25120                           
 25121                           ; BSR set to: 1
 25122  012920  0101               	movlb	1	; () banked
 25123  012922  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 25124  012924                     l21240:
 25125  012924  0101               	movlb	1	; () banked
 25126  012926  518E               	movf	__display_charger@cntr& (0+255),w,b
 25127  012928  0D01               	mullw	1
 25128  01292A  0E82               	movlw	low __display_charger@charger_off
 25129  01292C  24F3               	addwf	prodl,w,c
 25130  01292E  6ED9               	movwf	fsr2l,c
 25131  012930  0E01               	movlw	high __display_charger@charger_off
 25132  012932  20F4               	addwfc	prodh,w,c
 25133  012934  6EDA               	movwf	fsr2h,c
 25134  012936  50DF               	movf	indf2,w,c
 25135  012938  B4D8               	btfsc	status,2,c
 25136  01293A  D078               	goto	l21264
 25137  01293C  D7DD               	goto	l21236
 25138  01293E                     l21242:
 25139                           
 25140                           ; BSR set to: 1
 25141                           ;display.c: 445: display_content[2][cntr] = charger_startup[cntr++];
 25142  01293E  0101               	movlb	1	; () banked
 25143  012940  518E               	movf	__display_charger@cntr& (0+255),w,b
 25144  012942  0D01               	mullw	1
 25145  012944  0E72               	movlw	low __display_charger@charger_startup
 25146  012946  24F3               	addwf	prodl,w,c
 25147  012948  6ED9               	movwf	fsr2l,c
 25148  01294A  0E01               	movlw	high __display_charger@charger_startup
 25149  01294C  20F4               	addwfc	prodh,w,c
 25150  01294E  6EDA               	movwf	fsr2h,c
 25151  012950  0101               	movlb	1	; () banked
 25152  012952  518E               	movf	__display_charger@cntr& (0+255),w,b
 25153  012954  0D01               	mullw	1
 25154  012956  0E7C               	movlw	low (_display_content+40)
 25155  012958  24F3               	addwf	prodl,w,c
 25156  01295A  6EE1               	movwf	fsr1l,c
 25157  01295C  0E03               	movlw	high (_display_content+40)
 25158  01295E  20F4               	addwfc	prodh,w,c
 25159  012960  6EE2               	movwf	fsr1h,c
 25160  012962  CFDF FFE7          	movff	indf2,indf1
 25161                           
 25162                           ; BSR set to: 1
 25163  012966  0101               	movlb	1	; () banked
 25164  012968  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 25165  01296A                     l21246:
 25166  01296A  0101               	movlb	1	; () banked
 25167  01296C  518E               	movf	__display_charger@cntr& (0+255),w,b
 25168  01296E  0D01               	mullw	1
 25169  012970  0E72               	movlw	low __display_charger@charger_startup
 25170  012972  24F3               	addwf	prodl,w,c
 25171  012974  6ED9               	movwf	fsr2l,c
 25172  012976  0E01               	movlw	high __display_charger@charger_startup
 25173  012978  20F4               	addwfc	prodh,w,c
 25174  01297A  6EDA               	movwf	fsr2h,c
 25175  01297C  50DF               	movf	indf2,w,c
 25176  01297E  B4D8               	btfsc	status,2,c
 25177  012980  D055               	goto	l21264
 25178  012982  D7DD               	goto	l21242
 25179  012984                     l21248:
 25180                           
 25181                           ; BSR set to: 1
 25182                           ;display.c: 450: display_content[2][cntr] = charger_async[cntr++];
 25183  012984  0101               	movlb	1	; () banked
 25184  012986  518E               	movf	__display_charger@cntr& (0+255),w,b
 25185  012988  0D01               	mullw	1
 25186  01298A  0E24               	movlw	low __display_charger@charger_async
 25187  01298C  24F3               	addwf	prodl,w,c
 25188  01298E  6ED9               	movwf	fsr2l,c
 25189  012990  0E01               	movlw	high __display_charger@charger_async
 25190  012992  20F4               	addwfc	prodh,w,c
 25191  012994  6EDA               	movwf	fsr2h,c
 25192  012996  0101               	movlb	1	; () banked
 25193  012998  518E               	movf	__display_charger@cntr& (0+255),w,b
 25194  01299A  0D01               	mullw	1
 25195  01299C  0E7C               	movlw	low (_display_content+40)
 25196  01299E  24F3               	addwf	prodl,w,c
 25197  0129A0  6EE1               	movwf	fsr1l,c
 25198  0129A2  0E03               	movlw	high (_display_content+40)
 25199  0129A4  20F4               	addwfc	prodh,w,c
 25200  0129A6  6EE2               	movwf	fsr1h,c
 25201  0129A8  CFDF FFE7          	movff	indf2,indf1
 25202                           
 25203                           ; BSR set to: 1
 25204  0129AC  0101               	movlb	1	; () banked
 25205  0129AE  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 25206  0129B0                     l21252:
 25207  0129B0  0101               	movlb	1	; () banked
 25208  0129B2  518E               	movf	__display_charger@cntr& (0+255),w,b
 25209  0129B4  0D01               	mullw	1
 25210  0129B6  0E24               	movlw	low __display_charger@charger_async
 25211  0129B8  24F3               	addwf	prodl,w,c
 25212  0129BA  6ED9               	movwf	fsr2l,c
 25213  0129BC  0E01               	movlw	high __display_charger@charger_async
 25214  0129BE  20F4               	addwfc	prodh,w,c
 25215  0129C0  6EDA               	movwf	fsr2h,c
 25216  0129C2  50DF               	movf	indf2,w,c
 25217  0129C4  B4D8               	btfsc	status,2,c
 25218  0129C6  D032               	goto	l21264
 25219  0129C8  D7DD               	goto	l21248
 25220  0129CA                     l21254:
 25221                           
 25222                           ; BSR set to: 1
 25223                           ;display.c: 455: display_content[2][cntr] = charger_sync[cntr++];
 25224  0129CA  0101               	movlb	1	; () banked
 25225  0129CC  518E               	movf	__display_charger@cntr& (0+255),w,b
 25226  0129CE  0D01               	mullw	1
 25227  0129D0  0E39               	movlw	low __display_charger@charger_sync
 25228  0129D2  24F3               	addwf	prodl,w,c
 25229  0129D4  6ED9               	movwf	fsr2l,c
 25230  0129D6  0E01               	movlw	high __display_charger@charger_sync
 25231  0129D8  20F4               	addwfc	prodh,w,c
 25232  0129DA  6EDA               	movwf	fsr2h,c
 25233  0129DC  0101               	movlb	1	; () banked
 25234  0129DE  518E               	movf	__display_charger@cntr& (0+255),w,b
 25235  0129E0  0D01               	mullw	1
 25236  0129E2  0E7C               	movlw	low (_display_content+40)
 25237  0129E4  24F3               	addwf	prodl,w,c
 25238  0129E6  6EE1               	movwf	fsr1l,c
 25239  0129E8  0E03               	movlw	high (_display_content+40)
 25240  0129EA  20F4               	addwfc	prodh,w,c
 25241  0129EC  6EE2               	movwf	fsr1h,c
 25242  0129EE  CFDF FFE7          	movff	indf2,indf1
 25243                           
 25244                           ; BSR set to: 1
 25245  0129F2  0101               	movlb	1	; () banked
 25246  0129F4  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 25247  0129F6                     l21258:
 25248  0129F6  0101               	movlb	1	; () banked
 25249  0129F8  518E               	movf	__display_charger@cntr& (0+255),w,b
 25250  0129FA  0D01               	mullw	1
 25251  0129FC  0E39               	movlw	low __display_charger@charger_sync
 25252  0129FE  24F3               	addwf	prodl,w,c
 25253  012A00  6ED9               	movwf	fsr2l,c
 25254  012A02  0E01               	movlw	high __display_charger@charger_sync
 25255  012A04  20F4               	addwfc	prodh,w,c
 25256  012A06  6EDA               	movwf	fsr2h,c
 25257  012A08  50DF               	movf	indf2,w,c
 25258  012A0A  B4D8               	btfsc	status,2,c
 25259  012A0C  D00F               	goto	l21264
 25260  012A0E  D7DD               	goto	l21254
 25261  012A10                     l21262:
 25262                           
 25263                           ; BSR set to: 1
 25264  012A10  ECEF  F0D5         	call	_buck_get_mode	;wreg free
 25265                           
 25266                           ; Switch size 1, requested type "space"
 25267                           ; Number of cases is 4, Range of values is 0 to 3
 25268                           ; switch strategies available:
 25269                           ; Name         Instructions Cycles
 25270                           ; simple_byte           13     7 (average)
 25271                           ;	Chosen strategy is simple_byte
 25272  012A14  0A00               	xorlw	0	; case 0
 25273  012A16  B4D8               	btfsc	status,2,c
 25274  012A18  D785               	goto	l21240
 25275  012A1A  0A01               	xorlw	1	; case 1
 25276  012A1C  B4D8               	btfsc	status,2,c
 25277  012A1E  D7A5               	goto	l21246
 25278  012A20  0A03               	xorlw	3	; case 2
 25279  012A22  B4D8               	btfsc	status,2,c
 25280  012A24  D7C5               	goto	l21252
 25281  012A26  0A01               	xorlw	1	; case 3
 25282  012A28  B4D8               	btfsc	status,2,c
 25283  012A2A  D7E5               	goto	l21258
 25284  012A2C                     l21264:
 25285                           
 25286                           ;display.c: 459: _display_itoa((int16_t) buck_get_dutycycle(), 0, &display_content[3][0]
      +                          );
 25287  012A2C  ECEC  F0D5         	call	_buck_get_dutycycle	;wreg free
 25288  012A30  0100               	movlb	0	; () banked
 25289  012A32  6F90               	movwf	??__display_charger& (0+255),b
 25290  012A34  0100               	movlb	0	; () banked
 25291  012A36  5190               	movf	??__display_charger& (0+255),w,b
 25292  012A38  0100               	movlb	0	; () banked
 25293  012A3A  6F78               	movwf	__display_itoa@value& (0+255),b
 25294  012A3C  6B79               	clrf	(__display_itoa@value+1)& (0+255),b
 25295  012A3E  0E00               	movlw	0
 25296  012A40  0100               	movlb	0	; () banked
 25297  012A42  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 25298  012A44  0E90               	movlw	low (_display_content+60)
 25299  012A46  0100               	movlb	0	; () banked
 25300  012A48  6F7B               	movwf	__display_itoa@text& (0+255),b
 25301  012A4A  0E03               	movlw	high (_display_content+60)
 25302  012A4C  0100               	movlb	0	; () banked
 25303  012A4E  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 25304  012A50  EC8A  F099         	call	__display_itoa	;wreg free
 25305  012A54  0012               	return		;funcret
 25306  012A56                     __end_of__display_charger:
 25307                           	opt stack 0
 25308                           tblptru	equ	0xFF8
 25309                           tblptrh	equ	0xFF7
 25310                           tblptrl	equ	0xFF6
 25311                           tablat	equ	0xFF5
 25312                           prodh	equ	0xFF4
 25313                           prodl	equ	0xFF3
 25314                           intcon	equ	0xFF2
 25315                           intcon2	equ	0xFF1
 25316                           intcon3	equ	0xFF0
 25317                           postinc0	equ	0xFEE
 25318                           wreg	equ	0xFE8
 25319                           indf1	equ	0xFE7
 25320                           postinc1	equ	0xFE6
 25321                           postdec1	equ	0xFE5
 25322                           plusw1	equ	0xFE3
 25323                           fsr1h	equ	0xFE2
 25324                           fsr1l	equ	0xFE1
 25325                           indf2	equ	0xFDF
 25326                           postinc2	equ	0xFDE
 25327                           postdec2	equ	0xFDD
 25328                           plusw2	equ	0xFDB
 25329                           fsr2h	equ	0xFDA
 25330                           fsr2l	equ	0xFD9
 25331                           status	equ	0xFD8
 25332                           
 25333 ;; *************** function __display_itoa *****************
 25334 ;; Defined at:
 25335 ;;		line 41 in file "display.c"
 25336 ;; Parameters:    Size  Location     Type
 25337 ;;  value           2   24[BANK0 ] int 
 25338 ;;  decimals        1   26[BANK0 ] unsigned char 
 25339 ;;  text            2   27[BANK0 ] PTR unsigned char 
 25340 ;;		 -> display_content(80), 
 25341 ;; Auto vars:     Size  Location     Type
 25342 ;;  tmp            10   35[BANK0 ] unsigned char [10]
 25343 ;;  pos             1   47[BANK0 ] unsigned char 
 25344 ;;  missing         1   46[BANK0 ] char 
 25345 ;;  len             1   45[BANK0 ] unsigned char 
 25346 ;; Return value:  Size  Location     Type
 25347 ;;                  1    wreg      void 
 25348 ;; Registers used:
 25349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25350 ;; Tracked objects:
 25351 ;;		On entry : 0/0
 25352 ;;		On exit  : 0/0
 25353 ;;		Unchanged: 0/0
 25354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25355 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25356 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25357 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25358 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25359 ;;Total ram usage:       24 bytes
 25360 ;; Hardware stack levels used:    1
 25361 ;; Hardware stack levels required when called:   13
 25362 ;; This function calls:
 25363 ;;		_itoa
 25364 ;;		_strlen
 25365 ;; This function is called by:
 25366 ;;		__display_inout
 25367 ;;		__display_charger
 25368 ;;		__display_efficiency
 25369 ;;		__display_temperature
 25370 ;; This function uses a non-reentrant model
 25371 ;;
 25372                           
 25373                           	psect	text110
 25374  013314                     __ptext110:
 25375                           	opt stack 0
 25376  013314                     __display_itoa:
 25377                           	opt stack 15
 25378                           
 25379                           ;display.c: 43: uint8_t pos;
 25380                           ;display.c: 44: uint8_t len;
 25381                           ;display.c: 45: int8_t missing;
 25382                           ;display.c: 46: char tmp[10];
 25383                           ;display.c: 47: itoa(tmp, value, 10);
 25384                           
 25385                           ;incstack = 0
 25386  013314  0E83               	movlw	low __display_itoa@tmp
 25387  013316  0100               	movlb	0	; () banked
 25388  013318  6F70               	movwf	itoa@buf& (0+255),b
 25389  01331A  0E00               	movlw	high __display_itoa@tmp
 25390  01331C  0100               	movlb	0	; () banked
 25391  01331E  6F71               	movwf	(itoa@buf+1)& (0+255),b
 25392  013320  C078  F072         	movff	__display_itoa@value,itoa@val
 25393  013324  C079  F073         	movff	__display_itoa@value+1,itoa@val+1
 25394  013328  0E00               	movlw	0
 25395  01332A  0100               	movlb	0	; () banked
 25396  01332C  6F75               	movwf	(itoa@base+1)& (0+255),b
 25397  01332E  0E0A               	movlw	10
 25398  013330  6F74               	movwf	itoa@base& (0+255),b
 25399  013332  EC18  F0CF         	call	_itoa	;wreg free
 25400                           
 25401                           ;display.c: 48: len = strlen(tmp);
 25402  013336  0E83               	movlw	low __display_itoa@tmp
 25403  013338  0100               	movlb	0	; () banked
 25404  01333A  6F60               	movwf	strlen@s& (0+255),b
 25405  01333C  0E00               	movlw	high __display_itoa@tmp
 25406  01333E  0100               	movlb	0	; () banked
 25407  013340  6F61               	movwf	(strlen@s+1)& (0+255),b
 25408  013342  ECCF  F0CE         	call	_strlen	;wreg free
 25409  013346  0100               	movlb	0	; () banked
 25410  013348  5160               	movf	?_strlen& (0+255),w,b
 25411  01334A  0100               	movlb	0	; () banked
 25412  01334C  6F8D               	movwf	__display_itoa@len& (0+255),b
 25413                           
 25414                           ; BSR set to: 0
 25415                           ;display.c: 50: if(value<0)
 25416  01334E  0100               	movlb	0	; () banked
 25417  013350  AF79               	btfss	(__display_itoa@value+1)& (0+255),7,b
 25418  013352  D072               	goto	l19530
 25419                           
 25420                           ; BSR set to: 0
 25421                           ;display.c: 51: {
 25422                           ;display.c: 52: missing = decimals + 2 - len;
 25423  013354  0100               	movlb	0	; () banked
 25424  013356  518D               	movf	__display_itoa@len& (0+255),w,b
 25425  013358  0800               	sublw	0
 25426  01335A  0100               	movlb	0	; () banked
 25427  01335C  257A               	addwf	__display_itoa@decimals& (0+255),w,b
 25428  01335E  0F02               	addlw	2
 25429  013360  0100               	movlb	0	; () banked
 25430  013362  6F8E               	movwf	__display_itoa@missing& (0+255),b
 25431                           
 25432                           ;display.c: 53: if(missing>0)
 25433  013364  0100               	movlb	0	; () banked
 25434  013366  518E               	movf	__display_itoa@missing& (0+255),w,b
 25435  013368  0A80               	xorlw	128
 25436  01336A  0F7F               	addlw	-129
 25437  01336C  A0D8               	btfss	status,0,c
 25438  01336E  D0C2               	goto	l1919
 25439                           
 25440                           ; BSR set to: 0
 25441                           ;display.c: 54: {
 25442                           ;display.c: 55: for(pos=decimals;pos!=0xFF;--pos)
 25443  013370  C07A  F08F         	movff	__display_itoa@decimals,__display_itoa@pos
 25444  013374                     l19514:
 25445                           
 25446                           ; BSR set to: 0
 25447  013374  0100               	movlb	0	; () banked
 25448  013376  298F               	incf	__display_itoa@pos& (0+255),w,b
 25449  013378  B4D8               	btfsc	status,2,c
 25450  01337A  D05A               	goto	l19528
 25451                           
 25452                           ; BSR set to: 0
 25453                           ;display.c: 56: {
 25454                           ;display.c: 57: if(pos>=missing)
 25455                           
 25456                           ; BSR set to: 0
 25457                           
 25458                           ; BSR set to: 0
 25459  01337C  0100               	movlb	0	; () banked
 25460  01337E  518F               	movf	__display_itoa@pos& (0+255),w,b
 25461  013380  0100               	movlb	0	; () banked
 25462  013382  BF8E               	btfsc	__display_itoa@missing& (0+255),7,b
 25463  013384  D004               	goto	l19520
 25464  013386  0AFF               	xorlw	255
 25465  013388  258E               	addwf	__display_itoa@missing& (0+255),w,b
 25466  01338A  B0D8               	btfsc	status,0,c
 25467  01338C  D03A               	goto	l19522
 25468  01338E                     l19520:
 25469                           
 25470                           ; BSR set to: 0
 25471                           ;display.c: 58: {
 25472                           ;display.c: 59: tmp[pos+1] = tmp[pos+1-missing];
 25473  01338E  C08E  F07D         	movff	__display_itoa@missing,??__display_itoa
 25474  013392  0100               	movlb	0	; () banked
 25475  013394  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 25476  013396  BF7D               	btfsc	??__display_itoa& (0+255),7,b
 25477  013398  077E               	decf	(??__display_itoa+1)& (0+255),f,b
 25478  01339A  0100               	movlb	0	; () banked
 25479  01339C  1F7D               	comf	??__display_itoa& (0+255),f,b
 25480  01339E  1F7E               	comf	(??__display_itoa+1)& (0+255),f,b
 25481  0133A0  4B7D               	infsnz	??__display_itoa& (0+255),f,b
 25482  0133A2  2B7E               	incf	(??__display_itoa+1)& (0+255),f,b
 25483  0133A4  0100               	movlb	0	; () banked
 25484  0133A6  518F               	movf	__display_itoa@pos& (0+255),w,b
 25485  0133A8  0100               	movlb	0	; () banked
 25486  0133AA  6F7F               	movwf	(??__display_itoa+2)& (0+255),b
 25487  0133AC  6B80               	clrf	(??__display_itoa+3)& (0+255),b
 25488  0133AE  0100               	movlb	0	; () banked
 25489  0133B0  517D               	movf	??__display_itoa& (0+255),w,b
 25490  0133B2  0100               	movlb	0	; () banked
 25491  0133B4  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 25492  0133B6  0100               	movlb	0	; () banked
 25493  0133B8  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 25494  0133BA  0100               	movlb	0	; () banked
 25495  0133BC  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 25496  0133BE  0E01               	movlw	1
 25497  0133C0  0100               	movlb	0	; () banked
 25498  0133C2  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 25499  0133C4  0E00               	movlw	0
 25500  0133C6  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 25501  0133C8  0E83               	movlw	low __display_itoa@tmp
 25502  0133CA  0100               	movlb	0	; () banked
 25503  0133CC  257F               	addwf	(??__display_itoa+2)& (0+255),w,b
 25504  0133CE  6ED9               	movwf	fsr2l,c
 25505  0133D0  0E00               	movlw	high __display_itoa@tmp
 25506  0133D2  0100               	movlb	0	; () banked
 25507  0133D4  2180               	addwfc	(??__display_itoa+3)& (0+255),w,b
 25508  0133D6  6EDA               	movwf	fsr2h,c
 25509  0133D8  0100               	movlb	0	; () banked
 25510  0133DA  518F               	movf	__display_itoa@pos& (0+255),w,b
 25511  0133DC  0100               	movlb	0	; () banked
 25512  0133DE  6F81               	movwf	(??__display_itoa+4)& (0+255),b
 25513  0133E0  6B82               	clrf	(??__display_itoa+5)& (0+255),b
 25514  0133E2  0E01               	movlw	1
 25515  0133E4  0100               	movlb	0	; () banked
 25516  0133E6  2781               	addwf	(??__display_itoa+4)& (0+255),f,b
 25517  0133E8  0E00               	movlw	0
 25518  0133EA  2382               	addwfc	(??__display_itoa+5)& (0+255),f,b
 25519  0133EC  0E83               	movlw	low __display_itoa@tmp
 25520  0133EE  0100               	movlb	0	; () banked
 25521  0133F0  2581               	addwf	(??__display_itoa+4)& (0+255),w,b
 25522  0133F2  6EE1               	movwf	fsr1l,c
 25523  0133F4  0E00               	movlw	high __display_itoa@tmp
 25524  0133F6  0100               	movlb	0	; () banked
 25525  0133F8  2182               	addwfc	(??__display_itoa+5)& (0+255),w,b
 25526  0133FA  6EE2               	movwf	fsr1h,c
 25527  0133FC  CFDF FFE7          	movff	indf2,indf1
 25528                           
 25529                           ;display.c: 60: }
 25530  013400  D014               	goto	l19524
 25531  013402                     l19522:
 25532                           
 25533                           ; BSR set to: 0
 25534                           ;display.c: 61: else
 25535                           ;display.c: 62: {
 25536                           ;display.c: 63: tmp[pos+1] = '0';
 25537  013402  0100               	movlb	0	; () banked
 25538  013404  518F               	movf	__display_itoa@pos& (0+255),w,b
 25539  013406  0100               	movlb	0	; () banked
 25540  013408  6F7D               	movwf	??__display_itoa& (0+255),b
 25541  01340A  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 25542  01340C  0E01               	movlw	1
 25543  01340E  0100               	movlb	0	; () banked
 25544  013410  277D               	addwf	??__display_itoa& (0+255),f,b
 25545  013412  0E00               	movlw	0
 25546  013414  237E               	addwfc	(??__display_itoa+1)& (0+255),f,b
 25547  013416  0E83               	movlw	low __display_itoa@tmp
 25548  013418  0100               	movlb	0	; () banked
 25549  01341A  257D               	addwf	??__display_itoa& (0+255),w,b
 25550  01341C  6ED9               	movwf	fsr2l,c
 25551  01341E  0E00               	movlw	high __display_itoa@tmp
 25552  013420  0100               	movlb	0	; () banked
 25553  013422  217E               	addwfc	(??__display_itoa+1)& (0+255),w,b
 25554  013424  6EDA               	movwf	fsr2h,c
 25555  013426  0E30               	movlw	48
 25556  013428  6EDF               	movwf	indf2,c
 25557  01342A                     l19524:
 25558                           
 25559                           ; BSR set to: 0
 25560  01342A  0100               	movlb	0	; () banked
 25561  01342C  078F               	decf	__display_itoa@pos& (0+255),f,b
 25562  01342E  D7A2               	goto	l19514
 25563  013430                     l19528:
 25564                           
 25565                           ; BSR set to: 0
 25566                           ;display.c: 64: }
 25567                           ;display.c: 65: }
 25568                           ;display.c: 66: len = decimals + 2;
 25569  013430  0100               	movlb	0	; () banked
 25570  013432  517A               	movf	__display_itoa@decimals& (0+255),w,b
 25571  013434  0F02               	addlw	2
 25572  013436  D05C               	goto	L11
 25573  013438                     l19530:
 25574                           
 25575                           ; BSR set to: 0
 25576                           ;display.c: 69: else
 25577                           ;display.c: 70: {
 25578                           ;display.c: 71: missing = decimals + 1 - len;
 25579  013438  0100               	movlb	0	; () banked
 25580  01343A  518D               	movf	__display_itoa@len& (0+255),w,b
 25581  01343C  0800               	sublw	0
 25582  01343E  0100               	movlb	0	; () banked
 25583  013440  257A               	addwf	__display_itoa@decimals& (0+255),w,b
 25584  013442  0100               	movlb	0	; () banked
 25585  013444  6F7D               	movwf	??__display_itoa& (0+255),b
 25586  013446  0100               	movlb	0	; () banked
 25587  013448  297D               	incf	??__display_itoa& (0+255),w,b
 25588  01344A  0100               	movlb	0	; () banked
 25589  01344C  6F8E               	movwf	__display_itoa@missing& (0+255),b
 25590                           
 25591                           ;display.c: 72: if(missing>0)
 25592  01344E  0100               	movlb	0	; () banked
 25593  013450  518E               	movf	__display_itoa@missing& (0+255),w,b
 25594  013452  0A80               	xorlw	128
 25595  013454  0F7F               	addlw	-129
 25596  013456  A0D8               	btfss	status,0,c
 25597  013458  D04D               	goto	l1919
 25598                           
 25599                           ; BSR set to: 0
 25600                           ;display.c: 73: {
 25601                           ;display.c: 74: for(pos=decimals;pos!=0xFF;--pos)
 25602  01345A  C07A  F08F         	movff	__display_itoa@decimals,__display_itoa@pos
 25603  01345E                     l19534:
 25604                           
 25605                           ; BSR set to: 0
 25606  01345E  0100               	movlb	0	; () banked
 25607  013460  298F               	incf	__display_itoa@pos& (0+255),w,b
 25608  013462  B4D8               	btfsc	status,2,c
 25609  013464  D043               	goto	l19548
 25610                           
 25611                           ; BSR set to: 0
 25612                           ;display.c: 75: {
 25613                           ;display.c: 76: if(pos>=missing)
 25614                           
 25615                           ; BSR set to: 0
 25616                           
 25617                           ; BSR set to: 0
 25618  013466  0100               	movlb	0	; () banked
 25619  013468  518F               	movf	__display_itoa@pos& (0+255),w,b
 25620  01346A  0100               	movlb	0	; () banked
 25621  01346C  BF8E               	btfsc	__display_itoa@missing& (0+255),7,b
 25622  01346E  D004               	goto	l19540
 25623  013470  0AFF               	xorlw	255
 25624  013472  258E               	addwf	__display_itoa@missing& (0+255),w,b
 25625  013474  B0D8               	btfsc	status,0,c
 25626  013476  D02C               	goto	l19542
 25627  013478                     l19540:
 25628                           
 25629                           ; BSR set to: 0
 25630                           ;display.c: 77: {
 25631                           ;display.c: 78: tmp[pos] = tmp[pos-missing];
 25632  013478  C08E  F07D         	movff	__display_itoa@missing,??__display_itoa
 25633  01347C  0100               	movlb	0	; () banked
 25634  01347E  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 25635  013480  BF7D               	btfsc	??__display_itoa& (0+255),7,b
 25636  013482  077E               	decf	(??__display_itoa+1)& (0+255),f,b
 25637  013484  0100               	movlb	0	; () banked
 25638  013486  1F7D               	comf	??__display_itoa& (0+255),f,b
 25639  013488  1F7E               	comf	(??__display_itoa+1)& (0+255),f,b
 25640  01348A  4B7D               	infsnz	??__display_itoa& (0+255),f,b
 25641  01348C  2B7E               	incf	(??__display_itoa+1)& (0+255),f,b
 25642  01348E  0100               	movlb	0	; () banked
 25643  013490  518F               	movf	__display_itoa@pos& (0+255),w,b
 25644  013492  0100               	movlb	0	; () banked
 25645  013494  6F7F               	movwf	(??__display_itoa+2)& (0+255),b
 25646  013496  6B80               	clrf	(??__display_itoa+3)& (0+255),b
 25647  013498  0100               	movlb	0	; () banked
 25648  01349A  517D               	movf	??__display_itoa& (0+255),w,b
 25649  01349C  0100               	movlb	0	; () banked
 25650  01349E  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 25651  0134A0  0100               	movlb	0	; () banked
 25652  0134A2  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 25653  0134A4  0100               	movlb	0	; () banked
 25654  0134A6  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 25655  0134A8  0E83               	movlw	low __display_itoa@tmp
 25656  0134AA  0100               	movlb	0	; () banked
 25657  0134AC  257F               	addwf	(??__display_itoa+2)& (0+255),w,b
 25658  0134AE  6ED9               	movwf	fsr2l,c
 25659  0134B0  0E00               	movlw	high __display_itoa@tmp
 25660  0134B2  0100               	movlb	0	; () banked
 25661  0134B4  2180               	addwfc	(??__display_itoa+3)& (0+255),w,b
 25662  0134B6  6EDA               	movwf	fsr2h,c
 25663  0134B8  0100               	movlb	0	; () banked
 25664  0134BA  518F               	movf	__display_itoa@pos& (0+255),w,b
 25665  0134BC  0D01               	mullw	1
 25666  0134BE  0E83               	movlw	low __display_itoa@tmp
 25667  0134C0  24F3               	addwf	prodl,w,c
 25668  0134C2  6EE1               	movwf	fsr1l,c
 25669  0134C4  0E00               	movlw	high __display_itoa@tmp
 25670  0134C6  20F4               	addwfc	prodh,w,c
 25671  0134C8  6EE2               	movwf	fsr1h,c
 25672  0134CA  CFDF FFE7          	movff	indf2,indf1
 25673                           
 25674                           ;display.c: 79: }
 25675  0134CE  D00B               	goto	l19544
 25676  0134D0                     l19542:
 25677                           
 25678                           ; BSR set to: 0
 25679                           ;display.c: 80: else
 25680                           ;display.c: 81: {
 25681                           ;display.c: 82: tmp[pos] = '0';
 25682  0134D0  0100               	movlb	0	; () banked
 25683  0134D2  518F               	movf	__display_itoa@pos& (0+255),w,b
 25684  0134D4  0D01               	mullw	1
 25685  0134D6  0E83               	movlw	low __display_itoa@tmp
 25686  0134D8  24F3               	addwf	prodl,w,c
 25687  0134DA  6ED9               	movwf	fsr2l,c
 25688  0134DC  0E00               	movlw	high __display_itoa@tmp
 25689  0134DE  20F4               	addwfc	prodh,w,c
 25690  0134E0  6EDA               	movwf	fsr2h,c
 25691  0134E2  0E30               	movlw	48
 25692  0134E4  6EDF               	movwf	indf2,c
 25693  0134E6                     l19544:
 25694                           
 25695                           ; BSR set to: 0
 25696  0134E6  0100               	movlb	0	; () banked
 25697  0134E8  078F               	decf	__display_itoa@pos& (0+255),f,b
 25698  0134EA  D7B9               	goto	l19534
 25699  0134EC                     l19548:
 25700                           
 25701                           ; BSR set to: 0
 25702                           ;display.c: 83: }
 25703                           ;display.c: 84: }
 25704                           ;display.c: 85: len = decimals + 1;
 25705  0134EC  0100               	movlb	0	; () banked
 25706  0134EE  297A               	incf	__display_itoa@decimals& (0+255),w,b
 25707  0134F0                     L11:
 25708  0134F0  0100               	movlb	0	; () banked
 25709  0134F2  6F8D               	movwf	__display_itoa@len& (0+255),b
 25710  0134F4                     l1919:
 25711                           
 25712                           ; BSR set to: 0
 25713                           ;display.c: 86: }
 25714                           ;display.c: 87: }
 25715                           ;display.c: 89: decimals = len - decimals - 1;
 25716  0134F4  0100               	movlb	0	; () banked
 25717  0134F6  517A               	movf	__display_itoa@decimals& (0+255),w,b
 25718  0134F8  0800               	sublw	0
 25719  0134FA  0100               	movlb	0	; () banked
 25720  0134FC  258D               	addwf	__display_itoa@len& (0+255),w,b
 25721  0134FE  0100               	movlb	0	; () banked
 25722  013500  6F7D               	movwf	??__display_itoa& (0+255),b
 25723  013502  0100               	movlb	0	; () banked
 25724  013504  057D               	decf	??__display_itoa& (0+255),w,b
 25725  013506  0100               	movlb	0	; () banked
 25726  013508  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 25727                           
 25728                           ; BSR set to: 0
 25729                           ;display.c: 91: for(pos=0;pos<len;++pos)
 25730  01350A  0E00               	movlw	0
 25731  01350C  0100               	movlb	0	; () banked
 25732  01350E  6F8F               	movwf	__display_itoa@pos& (0+255),b
 25733  013510  D02E               	goto	l19562
 25734  013512                     l19552:
 25735                           
 25736                           ; BSR set to: 0
 25737                           ;display.c: 92: {
 25738                           ;display.c: 93: text[pos] = tmp[pos];
 25739  013512  0100               	movlb	0	; () banked
 25740  013514  518F               	movf	__display_itoa@pos& (0+255),w,b
 25741  013516  0D01               	mullw	1
 25742  013518  0E83               	movlw	low __display_itoa@tmp
 25743  01351A  24F3               	addwf	prodl,w,c
 25744  01351C  6ED9               	movwf	fsr2l,c
 25745  01351E  0E00               	movlw	high __display_itoa@tmp
 25746  013520  20F4               	addwfc	prodh,w,c
 25747  013522  6EDA               	movwf	fsr2h,c
 25748  013524  0100               	movlb	0	; () banked
 25749  013526  518F               	movf	__display_itoa@pos& (0+255),w,b
 25750  013528  0D01               	mullw	1
 25751  01352A  50F3               	movf	prodl,w,c
 25752  01352C  0100               	movlb	0	; () banked
 25753  01352E  257B               	addwf	__display_itoa@text& (0+255),w,b
 25754  013530  6EE1               	movwf	fsr1l,c
 25755  013532  50F4               	movf	prodh,w,c
 25756  013534  0100               	movlb	0	; () banked
 25757  013536  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 25758  013538  6EE2               	movwf	fsr1h,c
 25759  01353A  CFDF FFE7          	movff	indf2,indf1
 25760                           
 25761                           ; BSR set to: 0
 25762                           ;display.c: 94: if(pos==decimals)
 25763  01353E  0100               	movlb	0	; () banked
 25764  013540  517A               	movf	__display_itoa@decimals& (0+255),w,b
 25765  013542  0100               	movlb	0	; () banked
 25766  013544  198F               	xorwf	__display_itoa@pos& (0+255),w,b
 25767  013546  A4D8               	btfss	status,2,c
 25768  013548  D010               	goto	l19560
 25769                           
 25770                           ; BSR set to: 0
 25771                           ;display.c: 95: {
 25772                           ;display.c: 97: ++pos;
 25773  01354A  0100               	movlb	0	; () banked
 25774  01354C  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 25775                           
 25776                           ; BSR set to: 0
 25777                           ;display.c: 98: text[pos] = '.';
 25778  01354E  0100               	movlb	0	; () banked
 25779  013550  518F               	movf	__display_itoa@pos& (0+255),w,b
 25780  013552  0D01               	mullw	1
 25781  013554  50F3               	movf	prodl,w,c
 25782  013556  0100               	movlb	0	; () banked
 25783  013558  257B               	addwf	__display_itoa@text& (0+255),w,b
 25784  01355A  6ED9               	movwf	fsr2l,c
 25785  01355C  50F4               	movf	prodh,w,c
 25786  01355E  0100               	movlb	0	; () banked
 25787  013560  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 25788  013562  6EDA               	movwf	fsr2h,c
 25789  013564  0E2E               	movlw	46
 25790  013566  6EDF               	movwf	indf2,c
 25791                           
 25792                           ;display.c: 99: break;
 25793  013568  D02A               	goto	l19568
 25794  01356A                     l19560:
 25795                           
 25796                           ; BSR set to: 0
 25797  01356A  0100               	movlb	0	; () banked
 25798  01356C  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 25799  01356E                     l19562:
 25800                           
 25801                           ; BSR set to: 0
 25802  01356E  0100               	movlb	0	; () banked
 25803  013570  518D               	movf	__display_itoa@len& (0+255),w,b
 25804  013572  0100               	movlb	0	; () banked
 25805  013574  5D8F               	subwf	__display_itoa@pos& (0+255),w,b
 25806  013576  B0D8               	btfsc	status,0,c
 25807  013578  D022               	goto	l19568
 25808  01357A  D7CB               	goto	l19552
 25809  01357C                     l19564:
 25810                           
 25811                           ; BSR set to: 0
 25812                           ;display.c: 103: {
 25813                           ;display.c: 104: text[pos+1] = tmp[pos];
 25814  01357C  0100               	movlb	0	; () banked
 25815  01357E  518F               	movf	__display_itoa@pos& (0+255),w,b
 25816  013580  0D01               	mullw	1
 25817  013582  0E83               	movlw	low __display_itoa@tmp
 25818  013584  24F3               	addwf	prodl,w,c
 25819  013586  6ED9               	movwf	fsr2l,c
 25820  013588  0E00               	movlw	high __display_itoa@tmp
 25821  01358A  20F4               	addwfc	prodh,w,c
 25822  01358C  6EDA               	movwf	fsr2h,c
 25823  01358E  0100               	movlb	0	; () banked
 25824  013590  518F               	movf	__display_itoa@pos& (0+255),w,b
 25825  013592  0100               	movlb	0	; () banked
 25826  013594  6F7D               	movwf	??__display_itoa& (0+255),b
 25827  013596  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 25828  013598  0E01               	movlw	1
 25829  01359A  0100               	movlb	0	; () banked
 25830  01359C  277D               	addwf	??__display_itoa& (0+255),f,b
 25831  01359E  0E00               	movlw	0
 25832  0135A0  237E               	addwfc	(??__display_itoa+1)& (0+255),f,b
 25833  0135A2  0100               	movlb	0	; () banked
 25834  0135A4  517D               	movf	??__display_itoa& (0+255),w,b
 25835  0135A6  0100               	movlb	0	; () banked
 25836  0135A8  257B               	addwf	__display_itoa@text& (0+255),w,b
 25837  0135AA  6EE1               	movwf	fsr1l,c
 25838  0135AC  0100               	movlb	0	; () banked
 25839  0135AE  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 25840  0135B0  0100               	movlb	0	; () banked
 25841  0135B2  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 25842  0135B4  6EE2               	movwf	fsr1h,c
 25843  0135B6  CFDF FFE7          	movff	indf2,indf1
 25844                           
 25845                           ; BSR set to: 0
 25846  0135BA  0100               	movlb	0	; () banked
 25847  0135BC  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 25848  0135BE                     l19568:
 25849                           
 25850                           ; BSR set to: 0
 25851  0135BE  0100               	movlb	0	; () banked
 25852  0135C0  518D               	movf	__display_itoa@len& (0+255),w,b
 25853  0135C2  0100               	movlb	0	; () banked
 25854  0135C4  5D8F               	subwf	__display_itoa@pos& (0+255),w,b
 25855  0135C6  B0D8               	btfsc	status,0,c
 25856  0135C8  0012               	return	
 25857  0135CA  D7D8               	goto	l19564
 25858  0135CC                     __end_of__display_itoa:
 25859                           	opt stack 0
 25860                           tblptru	equ	0xFF8
 25861                           tblptrh	equ	0xFF7
 25862                           tblptrl	equ	0xFF6
 25863                           tablat	equ	0xFF5
 25864                           prodh	equ	0xFF4
 25865                           prodl	equ	0xFF3
 25866                           intcon	equ	0xFF2
 25867                           intcon2	equ	0xFF1
 25868                           intcon3	equ	0xFF0
 25869                           postinc0	equ	0xFEE
 25870                           wreg	equ	0xFE8
 25871                           indf1	equ	0xFE7
 25872                           postinc1	equ	0xFE6
 25873                           postdec1	equ	0xFE5
 25874                           plusw1	equ	0xFE3
 25875                           fsr1h	equ	0xFE2
 25876                           fsr1l	equ	0xFE1
 25877                           indf2	equ	0xFDF
 25878                           postinc2	equ	0xFDE
 25879                           postdec2	equ	0xFDD
 25880                           plusw2	equ	0xFDB
 25881                           fsr2h	equ	0xFDA
 25882                           fsr2l	equ	0xFD9
 25883                           status	equ	0xFD8
 25884                           
 25885 ;; *************** function _strlen *****************
 25886 ;; Defined at:
 25887 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\strlen.c"
 25888 ;; Parameters:    Size  Location     Type
 25889 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 25890 ;;		 -> _display_itoa@tmp(10), 
 25891 ;; Auto vars:     Size  Location     Type
 25892 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 25893 ;;		 -> _display_itoa@tmp(10), 
 25894 ;; Return value:  Size  Location     Type
 25895 ;;                  2    0[BANK0 ] unsigned int 
 25896 ;; Registers used:
 25897 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25898 ;; Tracked objects:
 25899 ;;		On entry : 0/0
 25900 ;;		On exit  : 0/0
 25901 ;;		Unchanged: 0/0
 25902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25903 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25904 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25905 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25906 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25907 ;;Total ram usage:        6 bytes
 25908 ;; Hardware stack levels used:    1
 25909 ;; Hardware stack levels required when called:   10
 25910 ;; This function calls:
 25911 ;;		Nothing
 25912 ;; This function is called by:
 25913 ;;		__display_itoa
 25914 ;; This function uses a non-reentrant model
 25915 ;;
 25916                           
 25917                           	psect	text111
 25918  019D9E                     __ptext111:
 25919                           	opt stack 0
 25920  019D9E                     _strlen:
 25921                           	opt stack 17
 25922                           
 25923                           ; BSR set to: 0
 25924                           ;incstack = 0
 25925  019D9E  C060  F064         	movff	strlen@s,strlen@cp
 25926  019DA2  C061  F065         	movff	strlen@s+1,strlen@cp+1
 25927  019DA6  D003               	goto	l18882
 25928  019DA8                     l18880:
 25929  019DA8  0100               	movlb	0	; () banked
 25930  019DAA  4B64               	infsnz	strlen@cp& (0+255),f,b
 25931  019DAC  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 25932  019DAE                     l18882:
 25933  019DAE  C064  FFD9         	movff	strlen@cp,fsr2l
 25934  019DB2  C065  FFDA         	movff	strlen@cp+1,fsr2h
 25935  019DB6  50DF               	movf	indf2,w,c
 25936  019DB8  A4D8               	btfss	status,2,c
 25937  019DBA  D7F6               	goto	l18880
 25938  019DBC  C060  F062         	movff	strlen@s,??_strlen
 25939  019DC0  C061  F063         	movff	strlen@s+1,??_strlen+1
 25940  019DC4  0100               	movlb	0	; () banked
 25941  019DC6  1F62               	comf	??_strlen& (0+255),f,b
 25942  019DC8  1F63               	comf	(??_strlen+1)& (0+255),f,b
 25943  019DCA  4B62               	infsnz	??_strlen& (0+255),f,b
 25944  019DCC  2B63               	incf	(??_strlen+1)& (0+255),f,b
 25945  019DCE  0100               	movlb	0	; () banked
 25946  019DD0  5164               	movf	strlen@cp& (0+255),w,b
 25947  019DD2  0100               	movlb	0	; () banked
 25948  019DD4  2562               	addwf	??_strlen& (0+255),w,b
 25949  019DD6  0100               	movlb	0	; () banked
 25950  019DD8  6F60               	movwf	?_strlen& (0+255),b
 25951  019DDA  0100               	movlb	0	; () banked
 25952  019DDC  5165               	movf	(strlen@cp+1)& (0+255),w,b
 25953  019DDE  0100               	movlb	0	; () banked
 25954  019DE0  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 25955  019DE2  0100               	movlb	0	; () banked
 25956  019DE4  6F61               	movwf	(?_strlen+1)& (0+255),b
 25957  019DE6  0012               	return	
 25958  019DE8                     __end_of_strlen:
 25959                           	opt stack 0
 25960                           tblptru	equ	0xFF8
 25961                           tblptrh	equ	0xFF7
 25962                           tblptrl	equ	0xFF6
 25963                           tablat	equ	0xFF5
 25964                           prodh	equ	0xFF4
 25965                           prodl	equ	0xFF3
 25966                           intcon	equ	0xFF2
 25967                           intcon2	equ	0xFF1
 25968                           intcon3	equ	0xFF0
 25969                           postinc0	equ	0xFEE
 25970                           wreg	equ	0xFE8
 25971                           indf1	equ	0xFE7
 25972                           postinc1	equ	0xFE6
 25973                           postdec1	equ	0xFE5
 25974                           plusw1	equ	0xFE3
 25975                           fsr1h	equ	0xFE2
 25976                           fsr1l	equ	0xFE1
 25977                           indf2	equ	0xFDF
 25978                           postinc2	equ	0xFDE
 25979                           postdec2	equ	0xFDD
 25980                           plusw2	equ	0xFDB
 25981                           fsr2h	equ	0xFDA
 25982                           fsr2l	equ	0xFD9
 25983                           status	equ	0xFD8
 25984                           
 25985 ;; *************** function _itoa *****************
 25986 ;; Defined at:
 25987 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\itoa.c"
 25988 ;; Parameters:    Size  Location     Type
 25989 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 25990 ;;		 -> _display_itoa@tmp(10), 
 25991 ;;  val             2   18[BANK0 ] int 
 25992 ;;  base            2   20[BANK0 ] int 
 25993 ;; Auto vars:     Size  Location     Type
 25994 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 25995 ;;		 -> _display_itoa@tmp(10), 
 25996 ;; Return value:  Size  Location     Type
 25997 ;;                  2   16[BANK0 ] PTR unsigned char 
 25998 ;; Registers used:
 25999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26000 ;; Tracked objects:
 26001 ;;		On entry : 0/0
 26002 ;;		On exit  : 0/0
 26003 ;;		Unchanged: 0/0
 26004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26005 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26006 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26008 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26009 ;;Total ram usage:        8 bytes
 26010 ;; Hardware stack levels used:    1
 26011 ;; Hardware stack levels required when called:   12
 26012 ;; This function calls:
 26013 ;;		_utoa
 26014 ;; This function is called by:
 26015 ;;		__display_itoa
 26016 ;; This function uses a non-reentrant model
 26017 ;;
 26018                           
 26019                           	psect	text112
 26020  019E30                     __ptext112:
 26021                           	opt stack 0
 26022  019E30                     _itoa:
 26023                           	opt stack 15
 26024                           
 26025                           ; BSR set to: 0
 26026                           ;incstack = 0
 26027  019E30  C070  F076         	movff	itoa@buf,itoa@cp
 26028  019E34  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 26029  019E38  0100               	movlb	0	; () banked
 26030  019E3A  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 26031  019E3C  D00E               	goto	l18874
 26032                           
 26033                           ; BSR set to: 0
 26034  019E3E  C070  FFD9         	movff	itoa@buf,fsr2l
 26035  019E42  C071  FFDA         	movff	itoa@buf+1,fsr2h
 26036  019E46  0E2D               	movlw	45
 26037  019E48  6EDF               	movwf	indf2,c
 26038                           
 26039                           ; BSR set to: 0
 26040  019E4A  0100               	movlb	0	; () banked
 26041  019E4C  4B70               	infsnz	itoa@buf& (0+255),f,b
 26042  019E4E  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 26043                           
 26044                           ; BSR set to: 0
 26045  019E50  0100               	movlb	0	; () banked
 26046  019E52  6D72               	negf	itoa@val& (0+255),b
 26047  019E54  1F73               	comf	(itoa@val+1)& (0+255),f,b
 26048  019E56  B0D8               	btfsc	status,0,c
 26049  019E58  2B73               	incf	(itoa@val+1)& (0+255),f,b
 26050  019E5A                     l18874:
 26051                           
 26052                           ; BSR set to: 0
 26053  019E5A  C070  F067         	movff	itoa@buf,utoa@buf
 26054  019E5E  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 26055  019E62  C072  F069         	movff	itoa@val,utoa@val
 26056  019E66  C073  F06A         	movff	itoa@val+1,utoa@val+1
 26057  019E6A  C074  F06B         	movff	itoa@base,utoa@base
 26058  019E6E  C075  F06C         	movff	itoa@base+1,utoa@base+1
 26059  019E72  EC33  F0BC         	call	_utoa	;wreg free
 26060  019E76  0012               	return	
 26061  019E78                     __end_of_itoa:
 26062                           	opt stack 0
 26063                           tblptru	equ	0xFF8
 26064                           tblptrh	equ	0xFF7
 26065                           tblptrl	equ	0xFF6
 26066                           tablat	equ	0xFF5
 26067                           prodh	equ	0xFF4
 26068                           prodl	equ	0xFF3
 26069                           intcon	equ	0xFF2
 26070                           intcon2	equ	0xFF1
 26071                           intcon3	equ	0xFF0
 26072                           postinc0	equ	0xFEE
 26073                           wreg	equ	0xFE8
 26074                           indf1	equ	0xFE7
 26075                           postinc1	equ	0xFE6
 26076                           postdec1	equ	0xFE5
 26077                           plusw1	equ	0xFE3
 26078                           fsr1h	equ	0xFE2
 26079                           fsr1l	equ	0xFE1
 26080                           indf2	equ	0xFDF
 26081                           postinc2	equ	0xFDE
 26082                           postdec2	equ	0xFDD
 26083                           plusw2	equ	0xFDB
 26084                           fsr2h	equ	0xFDA
 26085                           fsr2l	equ	0xFD9
 26086                           status	equ	0xFD8
 26087                           
 26088 ;; *************** function _utoa *****************
 26089 ;; Defined at:
 26090 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\itoa.c"
 26091 ;; Parameters:    Size  Location     Type
 26092 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 26093 ;;		 -> _display_itoa@tmp(10), 
 26094 ;;  val             2    9[BANK0 ] unsigned int 
 26095 ;;  base            2   11[BANK0 ] int 
 26096 ;; Auto vars:     Size  Location     Type
 26097 ;;  v               2   13[BANK0 ] unsigned int 
 26098 ;;  c               1   15[BANK0 ] unsigned char 
 26099 ;; Return value:  Size  Location     Type
 26100 ;;                  2    7[BANK0 ] PTR unsigned char 
 26101 ;; Registers used:
 26102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26103 ;; Tracked objects:
 26104 ;;		On entry : 0/0
 26105 ;;		On exit  : 0/0
 26106 ;;		Unchanged: 0/0
 26107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26108 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26109 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26111 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26112 ;;Total ram usage:        9 bytes
 26113 ;; Hardware stack levels used:    1
 26114 ;; Hardware stack levels required when called:   11
 26115 ;; This function calls:
 26116 ;;		___lwdiv
 26117 ;;		___lwmod
 26118 ;; This function is called by:
 26119 ;;		_itoa
 26120 ;; This function uses a non-reentrant model
 26121 ;;
 26122                           
 26123                           	psect	text113
 26124  017866                     __ptext113:
 26125                           	opt stack 0
 26126  017866                     _utoa:
 26127                           	opt stack 15
 26128                           
 26129                           ;incstack = 0
 26130  017866  C069  F06D         	movff	utoa@val,utoa@v
 26131  01786A  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 26132  01786E                     l18650:
 26133  01786E  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 26134  017872  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 26135  017876  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 26136  01787A  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 26137  01787E  ECC3  F0C6         	call	___lwdiv	;wreg free
 26138  017882  C060  F06D         	movff	?___lwdiv,utoa@v
 26139  017886  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 26140  01788A  0100               	movlb	0	; () banked
 26141  01788C  4B67               	infsnz	utoa@buf& (0+255),f,b
 26142  01788E  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 26143                           
 26144                           ; BSR set to: 0
 26145  017890  0100               	movlb	0	; () banked
 26146  017892  516D               	movf	utoa@v& (0+255),w,b
 26147  017894  0100               	movlb	0	; () banked
 26148  017896  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 26149  017898  A4D8               	btfss	status,2,c
 26150  01789A  D7E9               	goto	l18650
 26151                           
 26152                           ; BSR set to: 0
 26153                           
 26154                           ; BSR set to: 0
 26155  01789C  C067  FFD9         	movff	utoa@buf,fsr2l
 26156  0178A0  C068  FFDA         	movff	utoa@buf+1,fsr2h
 26157  0178A4  0E00               	movlw	0
 26158  0178A6  6EDF               	movwf	indf2,c
 26159                           
 26160                           ; BSR set to: 0
 26161  0178A8  0100               	movlb	0	; () banked
 26162  0178AA  0767               	decf	utoa@buf& (0+255),f,b
 26163  0178AC  A0D8               	btfss	status,0,c
 26164  0178AE  0768               	decf	(utoa@buf+1)& (0+255),f,b
 26165  0178B0                     l18660:
 26166                           
 26167                           ; BSR set to: 0
 26168  0178B0  C069  F060         	movff	utoa@val,___lwmod@dividend
 26169  0178B4  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 26170  0178B8  C06B  F062         	movff	utoa@base,___lwmod@divisor
 26171  0178BC  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 26172  0178C0  EC03  F0CB         	call	___lwmod	;wreg free
 26173  0178C4  0100               	movlb	0	; () banked
 26174  0178C6  5160               	movf	?___lwmod& (0+255),w,b
 26175  0178C8  0100               	movlb	0	; () banked
 26176  0178CA  6F6F               	movwf	utoa@c& (0+255),b
 26177                           
 26178                           ; BSR set to: 0
 26179  0178CC  C069  F060         	movff	utoa@val,___lwdiv@dividend
 26180  0178D0  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 26181  0178D4  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 26182  0178D8  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 26183  0178DC  ECC3  F0C6         	call	___lwdiv	;wreg free
 26184  0178E0  C060  F069         	movff	?___lwdiv,utoa@val
 26185  0178E4  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 26186  0178E8  0E09               	movlw	9
 26187  0178EA  0100               	movlb	0	; () banked
 26188  0178EC  656F               	cpfsgt	utoa@c& (0+255),b
 26189  0178EE  D003               	goto	l3637
 26190                           
 26191                           ; BSR set to: 0
 26192  0178F0  0E07               	movlw	7
 26193  0178F2  0100               	movlb	0	; () banked
 26194  0178F4  276F               	addwf	utoa@c& (0+255),f,b
 26195  0178F6                     l3637:
 26196                           
 26197                           ; BSR set to: 0
 26198  0178F6  0E30               	movlw	48
 26199  0178F8  0100               	movlb	0	; () banked
 26200  0178FA  276F               	addwf	utoa@c& (0+255),f,b
 26201                           
 26202                           ; BSR set to: 0
 26203  0178FC  C067  FFD9         	movff	utoa@buf,fsr2l
 26204  017900  C068  FFDA         	movff	utoa@buf+1,fsr2h
 26205  017904  C06F  FFDF         	movff	utoa@c,indf2
 26206                           
 26207                           ; BSR set to: 0
 26208  017908  0100               	movlb	0	; () banked
 26209  01790A  0767               	decf	utoa@buf& (0+255),f,b
 26210  01790C  A0D8               	btfss	status,0,c
 26211  01790E  0768               	decf	(utoa@buf+1)& (0+255),f,b
 26212                           
 26213                           ; BSR set to: 0
 26214  017910  0100               	movlb	0	; () banked
 26215  017912  5169               	movf	utoa@val& (0+255),w,b
 26216  017914  0100               	movlb	0	; () banked
 26217  017916  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 26218  017918  A4D8               	btfss	status,2,c
 26219  01791A  D7CA               	goto	l18660
 26220                           
 26221                           ; BSR set to: 0
 26222                           ;	Return value of _utoa is never used
 26223                           
 26224                           ; BSR set to: 0
 26225  01791C  0100               	movlb	0	; () banked
 26226  01791E  4B67               	infsnz	utoa@buf& (0+255),f,b
 26227  017920  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 26228  017922  0012               	return	
 26229  017924                     __end_of_utoa:
 26230                           	opt stack 0
 26231                           tblptru	equ	0xFF8
 26232                           tblptrh	equ	0xFF7
 26233                           tblptrl	equ	0xFF6
 26234                           tablat	equ	0xFF5
 26235                           prodh	equ	0xFF4
 26236                           prodl	equ	0xFF3
 26237                           intcon	equ	0xFF2
 26238                           intcon2	equ	0xFF1
 26239                           intcon3	equ	0xFF0
 26240                           postinc0	equ	0xFEE
 26241                           wreg	equ	0xFE8
 26242                           indf1	equ	0xFE7
 26243                           postinc1	equ	0xFE6
 26244                           postdec1	equ	0xFE5
 26245                           plusw1	equ	0xFE3
 26246                           fsr1h	equ	0xFE2
 26247                           fsr1l	equ	0xFE1
 26248                           indf2	equ	0xFDF
 26249                           postinc2	equ	0xFDE
 26250                           postdec2	equ	0xFDD
 26251                           plusw2	equ	0xFDB
 26252                           fsr2h	equ	0xFDA
 26253                           fsr2l	equ	0xFD9
 26254                           status	equ	0xFD8
 26255                           
 26256 ;; *************** function ___lwmod *****************
 26257 ;; Defined at:
 26258 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwmod.c"
 26259 ;; Parameters:    Size  Location     Type
 26260 ;;  dividend        2    0[BANK0 ] unsigned int 
 26261 ;;  divisor         2    2[BANK0 ] unsigned int 
 26262 ;; Auto vars:     Size  Location     Type
 26263 ;;  counter         1    4[BANK0 ] unsigned char 
 26264 ;; Return value:  Size  Location     Type
 26265 ;;                  2    0[BANK0 ] unsigned int 
 26266 ;; Registers used:
 26267 ;;		wreg, status,2, status,0
 26268 ;; Tracked objects:
 26269 ;;		On entry : 0/0
 26270 ;;		On exit  : 0/0
 26271 ;;		Unchanged: 0/0
 26272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26273 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26274 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26276 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26277 ;;Total ram usage:        5 bytes
 26278 ;; Hardware stack levels used:    1
 26279 ;; Hardware stack levels required when called:   10
 26280 ;; This function calls:
 26281 ;;		Nothing
 26282 ;; This function is called by:
 26283 ;;		_utoa
 26284 ;; This function uses a non-reentrant model
 26285 ;;
 26286                           
 26287                           	psect	text114
 26288  019606                     __ptext114:
 26289                           	opt stack 0
 26290  019606                     ___lwmod:
 26291                           	opt stack 15
 26292                           
 26293                           ; BSR set to: 0
 26294                           ;incstack = 0
 26295  019606  0100               	movlb	0	; () banked
 26296  019608  5162               	movf	___lwmod@divisor& (0+255),w,b
 26297  01960A  0100               	movlb	0	; () banked
 26298  01960C  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 26299  01960E  B4D8               	btfsc	status,2,c
 26300  019610  D026               	goto	l3726
 26301                           
 26302                           ; BSR set to: 0
 26303  019612  0E01               	movlw	1
 26304  019614  0100               	movlb	0	; () banked
 26305  019616  6F64               	movwf	___lwmod@counter& (0+255),b
 26306  019618  D006               	goto	l18190
 26307  01961A                     l18188:
 26308                           
 26309                           ; BSR set to: 0
 26310  01961A  0100               	movlb	0	; () banked
 26311  01961C  90D8               	bcf	status,0,c
 26312  01961E  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 26313  019620  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 26314  019622  0100               	movlb	0	; () banked
 26315  019624  2B64               	incf	___lwmod@counter& (0+255),f,b
 26316  019626                     l18190:
 26317                           
 26318                           ; BSR set to: 0
 26319  019626  0100               	movlb	0	; () banked
 26320  019628  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 26321  01962A  D7F7               	goto	l18188
 26322  01962C                     l18192:
 26323                           
 26324                           ; BSR set to: 0
 26325  01962C  0100               	movlb	0	; () banked
 26326  01962E  5162               	movf	___lwmod@divisor& (0+255),w,b
 26327  019630  0100               	movlb	0	; () banked
 26328  019632  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 26329  019634  0100               	movlb	0	; () banked
 26330  019636  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 26331  019638  0100               	movlb	0	; () banked
 26332  01963A  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 26333  01963C  A0D8               	btfss	status,0,c
 26334  01963E  D008               	goto	l18196
 26335                           
 26336                           ; BSR set to: 0
 26337  019640  0100               	movlb	0	; () banked
 26338  019642  5162               	movf	___lwmod@divisor& (0+255),w,b
 26339  019644  0100               	movlb	0	; () banked
 26340  019646  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 26341  019648  0100               	movlb	0	; () banked
 26342  01964A  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 26343  01964C  0100               	movlb	0	; () banked
 26344  01964E  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 26345  019650                     l18196:
 26346                           
 26347                           ; BSR set to: 0
 26348  019650  0100               	movlb	0	; () banked
 26349  019652  90D8               	bcf	status,0,c
 26350  019654  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 26351  019656  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 26352                           
 26353                           ; BSR set to: 0
 26354  019658  0100               	movlb	0	; () banked
 26355  01965A  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 26356  01965C  D7E7               	goto	l18192
 26357  01965E                     l3726:
 26358                           
 26359                           ; BSR set to: 0
 26360  01965E  C060  F060         	movff	___lwmod@dividend,?___lwmod
 26361  019662  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 26362                           
 26363                           ; BSR set to: 0
 26364  019666  0012               	return		;funcret
 26365  019668                     __end_of___lwmod:
 26366                           	opt stack 0
 26367                           tblptru	equ	0xFF8
 26368                           tblptrh	equ	0xFF7
 26369                           tblptrl	equ	0xFF6
 26370                           tablat	equ	0xFF5
 26371                           prodh	equ	0xFF4
 26372                           prodl	equ	0xFF3
 26373                           intcon	equ	0xFF2
 26374                           intcon2	equ	0xFF1
 26375                           intcon3	equ	0xFF0
 26376                           postinc0	equ	0xFEE
 26377                           wreg	equ	0xFE8
 26378                           indf1	equ	0xFE7
 26379                           postinc1	equ	0xFE6
 26380                           postdec1	equ	0xFE5
 26381                           plusw1	equ	0xFE3
 26382                           fsr1h	equ	0xFE2
 26383                           fsr1l	equ	0xFE1
 26384                           indf2	equ	0xFDF
 26385                           postinc2	equ	0xFDE
 26386                           postdec2	equ	0xFDD
 26387                           plusw2	equ	0xFDB
 26388                           fsr2h	equ	0xFDA
 26389                           fsr2l	equ	0xFD9
 26390                           status	equ	0xFD8
 26391                           
 26392 ;; *************** function ___lwdiv *****************
 26393 ;; Defined at:
 26394 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
 26395 ;; Parameters:    Size  Location     Type
 26396 ;;  dividend        2    0[BANK0 ] unsigned int 
 26397 ;;  divisor         2    2[BANK0 ] unsigned int 
 26398 ;; Auto vars:     Size  Location     Type
 26399 ;;  quotient        2    5[BANK0 ] unsigned int 
 26400 ;;  counter         1    4[BANK0 ] unsigned char 
 26401 ;; Return value:  Size  Location     Type
 26402 ;;                  2    0[BANK0 ] unsigned int 
 26403 ;; Registers used:
 26404 ;;		wreg, status,2, status,0
 26405 ;; Tracked objects:
 26406 ;;		On entry : 0/0
 26407 ;;		On exit  : 0/0
 26408 ;;		Unchanged: 0/0
 26409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26410 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26411 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26413 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26414 ;;Total ram usage:        7 bytes
 26415 ;; Hardware stack levels used:    1
 26416 ;; Hardware stack levels required when called:   10
 26417 ;; This function calls:
 26418 ;;		Nothing
 26419 ;; This function is called by:
 26420 ;;		_utoa
 26421 ;; This function uses a non-reentrant model
 26422 ;;
 26423                           
 26424                           	psect	text115
 26425  018D86                     __ptext115:
 26426                           	opt stack 0
 26427  018D86                     ___lwdiv:
 26428                           	opt stack 15
 26429                           
 26430                           ; BSR set to: 0
 26431                           ;incstack = 0
 26432  018D86  0E00               	movlw	0
 26433  018D88  0100               	movlb	0	; () banked
 26434  018D8A  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 26435  018D8C  0E00               	movlw	0
 26436  018D8E  6F65               	movwf	___lwdiv@quotient& (0+255),b
 26437                           
 26438                           ; BSR set to: 0
 26439  018D90  0100               	movlb	0	; () banked
 26440  018D92  5162               	movf	___lwdiv@divisor& (0+255),w,b
 26441  018D94  0100               	movlb	0	; () banked
 26442  018D96  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 26443  018D98  B4D8               	btfsc	status,2,c
 26444  018D9A  D02C               	goto	l3716
 26445                           
 26446                           ; BSR set to: 0
 26447  018D9C  0E01               	movlw	1
 26448  018D9E  0100               	movlb	0	; () banked
 26449  018DA0  6F64               	movwf	___lwdiv@counter& (0+255),b
 26450  018DA2  D006               	goto	l18170
 26451  018DA4                     l18168:
 26452                           
 26453                           ; BSR set to: 0
 26454  018DA4  0100               	movlb	0	; () banked
 26455  018DA6  90D8               	bcf	status,0,c
 26456  018DA8  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 26457  018DAA  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 26458  018DAC  0100               	movlb	0	; () banked
 26459  018DAE  2B64               	incf	___lwdiv@counter& (0+255),f,b
 26460  018DB0                     l18170:
 26461                           
 26462                           ; BSR set to: 0
 26463  018DB0  0100               	movlb	0	; () banked
 26464  018DB2  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 26465  018DB4  D7F7               	goto	l18168
 26466  018DB6                     l18172:
 26467                           
 26468                           ; BSR set to: 0
 26469  018DB6  0100               	movlb	0	; () banked
 26470  018DB8  90D8               	bcf	status,0,c
 26471  018DBA  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 26472  018DBC  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 26473                           
 26474                           ; BSR set to: 0
 26475  018DBE  0100               	movlb	0	; () banked
 26476  018DC0  5162               	movf	___lwdiv@divisor& (0+255),w,b
 26477  018DC2  0100               	movlb	0	; () banked
 26478  018DC4  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 26479  018DC6  0100               	movlb	0	; () banked
 26480  018DC8  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 26481  018DCA  0100               	movlb	0	; () banked
 26482  018DCC  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 26483  018DCE  A0D8               	btfss	status,0,c
 26484  018DD0  D00A               	goto	l18180
 26485                           
 26486                           ; BSR set to: 0
 26487  018DD2  0100               	movlb	0	; () banked
 26488  018DD4  5162               	movf	___lwdiv@divisor& (0+255),w,b
 26489  018DD6  0100               	movlb	0	; () banked
 26490  018DD8  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 26491  018DDA  0100               	movlb	0	; () banked
 26492  018DDC  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 26493  018DDE  0100               	movlb	0	; () banked
 26494  018DE0  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 26495                           
 26496                           ; BSR set to: 0
 26497  018DE2  0100               	movlb	0	; () banked
 26498  018DE4  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 26499  018DE6                     l18180:
 26500                           
 26501                           ; BSR set to: 0
 26502  018DE6  0100               	movlb	0	; () banked
 26503  018DE8  90D8               	bcf	status,0,c
 26504  018DEA  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 26505  018DEC  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 26506                           
 26507                           ; BSR set to: 0
 26508  018DEE  0100               	movlb	0	; () banked
 26509  018DF0  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 26510  018DF2  D7E1               	goto	l18172
 26511  018DF4                     l3716:
 26512                           
 26513                           ; BSR set to: 0
 26514  018DF4  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 26515  018DF8  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 26516                           
 26517                           ; BSR set to: 0
 26518  018DFC  0012               	return		;funcret
 26519  018DFE                     __end_of___lwdiv:
 26520                           	opt stack 0
 26521                           tblptru	equ	0xFF8
 26522                           tblptrh	equ	0xFF7
 26523                           tblptrl	equ	0xFF6
 26524                           tablat	equ	0xFF5
 26525                           prodh	equ	0xFF4
 26526                           prodl	equ	0xFF3
 26527                           intcon	equ	0xFF2
 26528                           intcon2	equ	0xFF1
 26529                           intcon3	equ	0xFF0
 26530                           postinc0	equ	0xFEE
 26531                           wreg	equ	0xFE8
 26532                           indf1	equ	0xFE7
 26533                           postinc1	equ	0xFE6
 26534                           postdec1	equ	0xFE5
 26535                           plusw1	equ	0xFE3
 26536                           fsr1h	equ	0xFE2
 26537                           fsr1l	equ	0xFE1
 26538                           indf2	equ	0xFDF
 26539                           postinc2	equ	0xFDE
 26540                           postdec2	equ	0xFDD
 26541                           plusw2	equ	0xFDB
 26542                           fsr2h	equ	0xFDA
 26543                           fsr2l	equ	0xFD9
 26544                           status	equ	0xFD8
 26545                           
 26546 ;; *************** function _buck_operate *****************
 26547 ;; Defined at:
 26548 ;;		line 550 in file "buck.c"
 26549 ;; Parameters:    Size  Location     Type
 26550 ;;		None
 26551 ;; Auto vars:     Size  Location     Type
 26552 ;;		None
 26553 ;; Return value:  Size  Location     Type
 26554 ;;                  1    wreg      void 
 26555 ;; Registers used:
 26556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26557 ;; Tracked objects:
 26558 ;;		On entry : 0/0
 26559 ;;		On exit  : 0/0
 26560 ;;		Unchanged: 0/0
 26561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26566 ;;Total ram usage:        0 bytes
 26567 ;; Hardware stack levels used:    1
 26568 ;; Hardware stack levels required when called:   14
 26569 ;; This function calls:
 26570 ;;		__buck_operate_local
 26571 ;;		__buck_operate_remote
 26572 ;; This function is called by:
 26573 ;;		_main
 26574 ;; This function uses a non-reentrant model
 26575 ;;
 26576                           
 26577                           	psect	text116
 26578  01978E                     __ptext116:
 26579                           	opt stack 0
 26580  01978E                     _buck_operate:
 26581                           	opt stack 16
 26582                           
 26583                           ;buck.c: 553: if(buck_remote_enable)
 26584                           
 26585                           ; BSR set to: 0
 26586                           ;incstack = 0
 26587  01978E  0101               	movlb	1	; () banked
 26588  019790  51F1               	movf	_buck_remote_enable& (0+255),w,b
 26589  019792  B4D8               	btfsc	status,2,c
 26590  019794  D023               	goto	l22468
 26591                           
 26592                           ; BSR set to: 1
 26593                           ;buck.c: 554: {
 26594                           ;buck.c: 555: if(buck_status<BUCK_STATUS_REMOTE_OFF)
 26595  019796  0E80               	movlw	128
 26596  019798  601C               	cpfslt	_buck_status,c
 26597  01979A  D01D               	goto	l22466
 26598  01979C  D00E               	goto	l22462
 26599  01979E                     l22454:
 26600                           
 26601                           ;buck.c: 563: buck_remote_on = 0;
 26602  01979E  0E00               	movlw	0
 26603  0197A0  D001               	goto	L12
 26604  0197A2                     l22456:
 26605                           
 26606                           ;buck.c: 567: buck_remote_on = 1;
 26607  0197A2  0E01               	movlw	1
 26608  0197A4                     L12:
 26609  0197A4  0100               	movlb	0	; () banked
 26610  0197A6  6FE3               	movwf	_buck_remote_on& (0+255),b
 26611                           
 26612                           ;buck.c: 568: buck_remote_synchronous = 0;
 26613  0197A8  0E00               	movlw	0
 26614  0197AA  D004               	goto	L13
 26615  0197AC                     l22458:
 26616                           
 26617                           ;buck.c: 571: buck_remote_on = 1;
 26618  0197AC  0E01               	movlw	1
 26619  0197AE  0100               	movlb	0	; () banked
 26620  0197B0  6FE3               	movwf	_buck_remote_on& (0+255),b
 26621                           
 26622                           ;buck.c: 572: buck_remote_synchronous = 1;
 26623  0197B2  0E01               	movlw	1
 26624  0197B4                     L13:
 26625  0197B4  0100               	movlb	0	; () banked
 26626  0197B6  6FE2               	movwf	_buck_remote_synchronous& (0+255),b
 26627                           
 26628                           ; BSR set to: 0
 26629                           ;buck.c: 574: }
 26630                           
 26631                           ;buck.c: 573: break;
 26632  0197B8  D00A               	goto	l2589
 26633  0197BA                     l22462:
 26634  0197BA  501C               	movf	_buck_status,w,c
 26635                           
 26636                           ; Switch size 1, requested type "space"
 26637                           ; Number of cases is 3, Range of values is 0 to 3
 26638                           ; switch strategies available:
 26639                           ; Name         Instructions Cycles
 26640                           ; simple_byte           10     6 (average)
 26641                           ;	Chosen strategy is simple_byte
 26642  0197BC  0A00               	xorlw	0	; case 0
 26643  0197BE  B4D8               	btfsc	status,2,c
 26644  0197C0  D7EE               	goto	l22454
 26645  0197C2  0A02               	xorlw	2	; case 2
 26646  0197C4  B4D8               	btfsc	status,2,c
 26647  0197C6  D7ED               	goto	l22456
 26648  0197C8  0A01               	xorlw	1	; case 3
 26649  0197CA  B4D8               	btfsc	status,2,c
 26650  0197CC  D7EF               	goto	l22458
 26651  0197CE                     l2589:
 26652                           
 26653                           ;buck.c: 575: buck_remote_dutycycle = buck_dutycycle;
 26654  0197CE  C0E4  F0E1         	movff	_buck_dutycycle,_buck_remote_dutycycle
 26655                           
 26656                           ;buck.c: 576: buck_status += BUCK_STATUS_REMOTE_OFF;
 26657  0197D2  0E80               	movlw	128
 26658  0197D4  261C               	addwf	_buck_status,f,c
 26659  0197D6                     l22466:
 26660                           
 26661                           ;buck.c: 577: }
 26662                           ;buck.c: 578: _buck_operate_remote();
 26663  0197D6  EC18  F0B3         	call	__buck_operate_remote	;wreg free
 26664                           
 26665                           ;buck.c: 579: }
 26666  0197DA  0012               	return	
 26667  0197DC                     l22468:
 26668                           
 26669                           ;buck.c: 580: else
 26670                           ;buck.c: 581: {
 26671                           ;buck.c: 582: if(buck_status>=BUCK_STATUS_REMOTE_OFF)
 26672  0197DC  0E7F               	movlw	127
 26673  0197DE  641C               	cpfsgt	_buck_status,c
 26674  0197E0  D002               	goto	l22472
 26675                           
 26676                           ;buck.c: 583: {
 26677                           ;buck.c: 586: buck_status -= BUCK_STATUS_REMOTE_OFF;
 26678  0197E2  0E80               	movlw	128
 26679  0197E4  5E1C               	subwf	_buck_status,f,c
 26680  0197E6                     l22472:
 26681                           
 26682                           ;buck.c: 587: }
 26683                           ;buck.c: 588: _buck_operate_local();
 26684  0197E6  EC6C  F083         	call	__buck_operate_local	;wreg free
 26685  0197EA  0012               	return	
 26686  0197EC                     __end_of_buck_operate:
 26687                           	opt stack 0
 26688                           tblptru	equ	0xFF8
 26689                           tblptrh	equ	0xFF7
 26690                           tblptrl	equ	0xFF6
 26691                           tablat	equ	0xFF5
 26692                           prodh	equ	0xFF4
 26693                           prodl	equ	0xFF3
 26694                           intcon	equ	0xFF2
 26695                           intcon2	equ	0xFF1
 26696                           intcon3	equ	0xFF0
 26697                           postinc0	equ	0xFEE
 26698                           wreg	equ	0xFE8
 26699                           indf1	equ	0xFE7
 26700                           postinc1	equ	0xFE6
 26701                           postdec1	equ	0xFE5
 26702                           plusw1	equ	0xFE3
 26703                           fsr1h	equ	0xFE2
 26704                           fsr1l	equ	0xFE1
 26705                           indf2	equ	0xFDF
 26706                           postinc2	equ	0xFDE
 26707                           postdec2	equ	0xFDD
 26708                           plusw2	equ	0xFDB
 26709                           fsr2h	equ	0xFDA
 26710                           fsr2l	equ	0xFD9
 26711                           status	equ	0xFD8
 26712                           
 26713 ;; *************** function __buck_operate_remote *****************
 26714 ;; Defined at:
 26715 ;;		line 453 in file "buck.c"
 26716 ;; Parameters:    Size  Location     Type
 26717 ;;		None
 26718 ;; Auto vars:     Size  Location     Type
 26719 ;;		None
 26720 ;; Return value:  Size  Location     Type
 26721 ;;                  1    wreg      void 
 26722 ;; Registers used:
 26723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26724 ;; Tracked objects:
 26725 ;;		On entry : 0/0
 26726 ;;		On exit  : 0/0
 26727 ;;		Unchanged: 0/0
 26728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26730 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26732 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26733 ;;Total ram usage:        1 bytes
 26734 ;; Hardware stack levels used:    1
 26735 ;; Hardware stack levels required when called:   13
 26736 ;; This function calls:
 26737 ;;		__buck_initial_dutycycle
 26738 ;;		__buck_prepare
 26739 ;;		__buck_set_dutycycle
 26740 ;;		__buck_set_sync_async
 26741 ;;		__buck_start
 26742 ;;		__buck_stop
 26743 ;; This function is called by:
 26744 ;;		_buck_operate
 26745 ;; This function uses a non-reentrant model
 26746 ;;
 26747                           
 26748                           	psect	text117
 26749  016630                     __ptext117:
 26750                           	opt stack 0
 26751  016630                     __buck_operate_remote:
 26752                           	opt stack 16
 26753                           
 26754                           ;buck.c: 455: switch(buck_status)
 26755                           
 26756                           ;incstack = 0
 26757  016630  D074               	goto	l21524
 26758  016632                     l21472:
 26759                           
 26760                           ;buck.c: 458: if((os.timeSlot&0b00110000)==0b00110000)
 26761  016632  0102               	movlb	2	; () banked
 26762  016634  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 26763  016636  0B30               	andlw	48
 26764  016638  0A30               	xorlw	48
 26765  01663A  A4D8               	btfss	status,2,c
 26766  01663C  0012               	return	
 26767                           
 26768                           ; BSR set to: 2
 26769                           ;buck.c: 459: {
 26770                           ;buck.c: 460: if(buck_remote_on)
 26771  01663E  0100               	movlb	0	; () banked
 26772  016640  51E3               	movf	_buck_remote_on& (0+255),w,b
 26773  016642  B4D8               	btfsc	status,2,c
 26774  016644  0012               	return	
 26775                           
 26776                           ; BSR set to: 0
 26777                           ;buck.c: 461: {
 26778                           ;buck.c: 464: _buck_prepare();
 26779  016646  EC93  F0C8         	call	__buck_prepare	;wreg free
 26780                           
 26781                           ;buck.c: 465: }
 26782                           ;buck.c: 466: }
 26783                           ;buck.c: 467: break;
 26784  01664A  0012               	return	
 26785  01664C                     l21478:
 26786                           
 26787                           ;buck.c: 470: if((os.timeSlot&0b00110000)==0b00110000)
 26788  01664C  0102               	movlb	2	; () banked
 26789  01664E  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 26790  016650  0B30               	andlw	48
 26791  016652  0A30               	xorlw	48
 26792  016654  A4D8               	btfss	status,2,c
 26793  016656  0012               	return	
 26794                           
 26795                           ; BSR set to: 2
 26796                           ;buck.c: 471: {
 26797                           ;buck.c: 473: if(buck_remote_synchronous)
 26798  016658  0100               	movlb	0	; () banked
 26799  01665A  51E2               	movf	_buck_remote_synchronous& (0+255),w,b
 26800  01665C  B4D8               	btfsc	status,2,c
 26801  01665E  D00C               	goto	l21488
 26802                           
 26803                           ; BSR set to: 0
 26804                           ;buck.c: 474: {
 26805                           ;buck.c: 476: _buck_start(BUCK_MODE_SYNCHRONOUS, _buck_initial_dutycycle());
 26806  016660  ECA7  F0B8         	call	__buck_initial_dutycycle	;wreg free
 26807  016664  0100               	movlb	0	; () banked
 26808  016666  6F76               	movwf	__buck_operate_remote$8730& (0+255),b
 26809                           
 26810                           ; BSR set to: 0
 26811                           ;buck.c: 474: {
 26812                           ;buck.c: 476: _buck_start(BUCK_MODE_SYNCHRONOUS, _buck_initial_dutycycle());
 26813  016668  C076  F072         	movff	__buck_operate_remote$8730,__buck_start@dutycycle
 26814  01666C  0E01               	movlw	1
 26815  01666E  EC3B  F0B8         	call	__buck_start
 26816                           
 26817                           ;buck.c: 477: buck_remote_dutycycle = buck_dutycycle;
 26818  016672  C0E4  F0E1         	movff	_buck_dutycycle,_buck_remote_dutycycle
 26819                           
 26820                           ;buck.c: 478: }
 26821  016676  0012               	return	
 26822  016678                     l21488:
 26823                           
 26824                           ;buck.c: 479: else
 26825                           ;buck.c: 480: {
 26826                           ;buck.c: 482: _buck_start(BUCK_MODE_ASYNCHRONOUS, 40);
 26827  016678  0E28               	movlw	40
 26828  01667A  0100               	movlb	0	; () banked
 26829  01667C  6F72               	movwf	__buck_start@dutycycle& (0+255),b
 26830  01667E  0E00               	movlw	0
 26831  016680  EC3B  F0B8         	call	__buck_start
 26832                           
 26833                           ;buck.c: 483: buck_remote_dutycycle = buck_dutycycle;
 26834  016684  C0E4  F0E1         	movff	_buck_dutycycle,_buck_remote_dutycycle
 26835                           
 26836                           ;buck.c: 484: }
 26837                           ;buck.c: 485: }
 26838                           ;buck.c: 486: break;
 26839  016688  0012               	return	
 26840  01668A                     l21492:
 26841                           
 26842                           ;buck.c: 490: if(!buck_remote_on)
 26843  01668A  0100               	movlb	0	; () banked
 26844  01668C  51E3               	movf	_buck_remote_on& (0+255),w,b
 26845  01668E  A4D8               	btfss	status,2,c
 26846  016690  D003               	goto	l21496
 26847                           
 26848                           ; BSR set to: 0
 26849                           ;buck.c: 491: {
 26850                           ;buck.c: 493: _buck_stop();
 26851  016692  EC6E  F0D2         	call	__buck_stop	;wreg free
 26852                           
 26853                           ;buck.c: 494: }
 26854  016696  0012               	return	
 26855  016698                     l21496:
 26856                           
 26857                           ;buck.c: 496: else if(buck_remote_synchronous)
 26858  016698  0100               	movlb	0	; () banked
 26859  01669A  51E2               	movf	_buck_remote_synchronous& (0+255),w,b
 26860  01669C  B4D8               	btfsc	status,2,c
 26861  01669E  D00A               	goto	l21502
 26862                           
 26863                           ; BSR set to: 0
 26864                           ;buck.c: 497: {
 26865                           ;buck.c: 500: buck_remote_dutycycle = _buck_initial_dutycycle();
 26866  0166A0  ECA7  F0B8         	call	__buck_initial_dutycycle	;wreg free
 26867  0166A4  0100               	movlb	0	; () banked
 26868  0166A6  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 26869                           
 26870                           ; BSR set to: 0
 26871                           ;buck.c: 501: _buck_set_sync_async(BUCK_MODE_SYNCHRONOUS, buck_remote_dutycycle);
 26872  0166A8  C0E1  F062         	movff	_buck_remote_dutycycle,__buck_set_sync_async@new_dutycycle
 26873  0166AC  0E01               	movlw	1
 26874  0166AE  ECB1  F0C7         	call	__buck_set_sync_async
 26875                           
 26876                           ;buck.c: 502: }
 26877  0166B2  0012               	return	
 26878  0166B4                     l21502:
 26879                           
 26880                           ;buck.c: 503: else
 26881                           ;buck.c: 504: {
 26882                           ;buck.c: 506: if(buck_dutycycle!=buck_remote_dutycycle)
 26883  0166B4  0100               	movlb	0	; () banked
 26884  0166B6  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 26885  0166B8  0100               	movlb	0	; () banked
 26886  0166BA  19E4               	xorwf	_buck_dutycycle& (0+255),w,b
 26887  0166BC  B4D8               	btfsc	status,2,c
 26888  0166BE  0012               	return	
 26889                           
 26890                           ; BSR set to: 0
 26891                           ;buck.c: 507: {
 26892                           ;buck.c: 508: _buck_set_dutycycle(buck_remote_dutycycle);
 26893  0166C0  0100               	movlb	0	; () banked
 26894  0166C2  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 26895  0166C4  EC0C  F0C6         	call	__buck_set_dutycycle
 26896                           
 26897                           ;buck.c: 509: }
 26898                           ;buck.c: 510: }
 26899                           ;buck.c: 511: break;
 26900  0166C8  0012               	return	
 26901  0166CA                     l21506:
 26902                           
 26903                           ;buck.c: 514: _buck_set_dutycycle(buck_remote_dutycycle);
 26904  0166CA  0100               	movlb	0	; () banked
 26905  0166CC  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 26906  0166CE  EC0C  F0C6         	call	__buck_set_dutycycle
 26907                           
 26908                           ;buck.c: 515: if(!buck_remote_on)
 26909  0166D2  0100               	movlb	0	; () banked
 26910  0166D4  51E3               	movf	_buck_remote_on& (0+255),w,b
 26911  0166D6  A4D8               	btfss	status,2,c
 26912  0166D8  D003               	goto	l21512
 26913                           
 26914                           ; BSR set to: 0
 26915                           ;buck.c: 516: {
 26916                           ;buck.c: 518: _buck_stop();
 26917  0166DA  EC6E  F0D2         	call	__buck_stop	;wreg free
 26918                           
 26919                           ;buck.c: 519: }
 26920  0166DE  0012               	return	
 26921  0166E0                     l21512:
 26922                           
 26923                           ;buck.c: 521: else if(!buck_remote_synchronous)
 26924  0166E0  0100               	movlb	0	; () banked
 26925  0166E2  51E2               	movf	_buck_remote_synchronous& (0+255),w,b
 26926  0166E4  A4D8               	btfss	status,2,c
 26927  0166E6  D00B               	goto	l21518
 26928                           
 26929                           ; BSR set to: 0
 26930                           ;buck.c: 522: {
 26931                           ;buck.c: 524: buck_remote_dutycycle = _buck_initial_dutycycle()-5;
 26932  0166E8  ECA7  F0B8         	call	__buck_initial_dutycycle	;wreg free
 26933  0166EC  0FFB               	addlw	251
 26934  0166EE  0100               	movlb	0	; () banked
 26935  0166F0  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 26936                           
 26937                           ; BSR set to: 0
 26938                           ;buck.c: 525: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, buck_remote_dutycycle);
 26939  0166F2  C0E1  F062         	movff	_buck_remote_dutycycle,__buck_set_sync_async@new_dutycycle
 26940  0166F6  0E00               	movlw	0
 26941  0166F8  ECB1  F0C7         	call	__buck_set_sync_async
 26942                           
 26943                           ;buck.c: 526: }
 26944  0166FC  0012               	return	
 26945  0166FE                     l21518:
 26946                           
 26947                           ;buck.c: 527: else
 26948                           ;buck.c: 528: {
 26949                           ;buck.c: 530: if(buck_dutycycle!=buck_remote_dutycycle)
 26950  0166FE  0100               	movlb	0	; () banked
 26951  016700  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 26952  016702  0100               	movlb	0	; () banked
 26953  016704  19E4               	xorwf	_buck_dutycycle& (0+255),w,b
 26954  016706  B4D8               	btfsc	status,2,c
 26955  016708  0012               	return	
 26956                           
 26957                           ; BSR set to: 0
 26958                           ;buck.c: 531: {
 26959                           ;buck.c: 532: _buck_set_dutycycle(buck_remote_dutycycle);
 26960  01670A  0100               	movlb	0	; () banked
 26961  01670C  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 26962  01670E  EC0C  F0C6         	call	__buck_set_dutycycle
 26963                           
 26964                           ;buck.c: 533: }
 26965                           ;buck.c: 534: }
 26966                           ;buck.c: 535: break;
 26967  016712  0012               	return	
 26968  016714                     l21522:
 26969                           
 26970                           ;buck.c: 539: _buck_stop();
 26971  016714  EC6E  F0D2         	call	__buck_stop	;wreg free
 26972                           
 26973                           ;buck.c: 540: }
 26974  016718  0012               	return	
 26975  01671A                     l21524:
 26976  01671A  501C               	movf	_buck_status,w,c
 26977                           
 26978                           ; Switch size 1, requested type "space"
 26979                           ; Number of cases is 4, Range of values is 128 to 131
 26980                           ; switch strategies available:
 26981                           ; Name         Instructions Cycles
 26982                           ; simple_byte           13     7 (average)
 26983                           ;	Chosen strategy is simple_byte
 26984  01671C  0A80               	xorlw	128	; case 128
 26985  01671E  B4D8               	btfsc	status,2,c
 26986  016720  D788               	goto	l21472
 26987  016722  0A01               	xorlw	1	; case 129
 26988  016724  B4D8               	btfsc	status,2,c
 26989  016726  D792               	goto	l21478
 26990  016728  0A03               	xorlw	3	; case 130
 26991  01672A  B4D8               	btfsc	status,2,c
 26992  01672C  D7AE               	goto	l21492
 26993  01672E  0A01               	xorlw	1	; case 131
 26994  016730  B4D8               	btfsc	status,2,c
 26995  016732  D7CB               	goto	l21506
 26996  016734  D7EF               	goto	l21522
 26997  016736                     __end_of__buck_operate_remote:
 26998                           	opt stack 0
 26999                           tblptru	equ	0xFF8
 27000                           tblptrh	equ	0xFF7
 27001                           tblptrl	equ	0xFF6
 27002                           tablat	equ	0xFF5
 27003                           prodh	equ	0xFF4
 27004                           prodl	equ	0xFF3
 27005                           intcon	equ	0xFF2
 27006                           intcon2	equ	0xFF1
 27007                           intcon3	equ	0xFF0
 27008                           postinc0	equ	0xFEE
 27009                           wreg	equ	0xFE8
 27010                           indf1	equ	0xFE7
 27011                           postinc1	equ	0xFE6
 27012                           postdec1	equ	0xFE5
 27013                           plusw1	equ	0xFE3
 27014                           fsr1h	equ	0xFE2
 27015                           fsr1l	equ	0xFE1
 27016                           indf2	equ	0xFDF
 27017                           postinc2	equ	0xFDE
 27018                           postdec2	equ	0xFDD
 27019                           plusw2	equ	0xFDB
 27020                           fsr2h	equ	0xFDA
 27021                           fsr2l	equ	0xFD9
 27022                           status	equ	0xFD8
 27023                           
 27024 ;; *************** function __buck_prepare *****************
 27025 ;; Defined at:
 27026 ;;		line 125 in file "buck.c"
 27027 ;; Parameters:    Size  Location     Type
 27028 ;;		None
 27029 ;; Auto vars:     Size  Location     Type
 27030 ;;  cntr            1    0[BANK0 ] unsigned char 
 27031 ;; Return value:  Size  Location     Type
 27032 ;;                  1    wreg      void 
 27033 ;; Registers used:
 27034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27035 ;; Tracked objects:
 27036 ;;		On entry : 0/0
 27037 ;;		On exit  : 0/0
 27038 ;;		Unchanged: 0/0
 27039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27041 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27043 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27044 ;;Total ram usage:        1 bytes
 27045 ;; Hardware stack levels used:    1
 27046 ;; Hardware stack levels required when called:   10
 27047 ;; This function calls:
 27048 ;;		Nothing
 27049 ;; This function is called by:
 27050 ;;		__buck_operate_remote
 27051 ;; This function uses a non-reentrant model
 27052 ;;
 27053                           
 27054                           	psect	text118
 27055  019126                     __ptext118:
 27056                           	opt stack 0
 27057  019126                     __buck_prepare:
 27058                           	opt stack 18
 27059                           
 27060                           ;buck.c: 127: uint8_t cntr;
 27061                           ;buck.c: 128: LATBbits.LB1 = 1;
 27062                           
 27063                           ;incstack = 0
 27064  019126  828A               	bsf	3978,1,c	;volatile
 27065                           
 27066                           ;buck.c: 129: if(buck_status<0x80)
 27067  019128  0E80               	movlw	128
 27068  01912A  601C               	cpfslt	_buck_status,c
 27069  01912C  D002               	goto	l19600
 27070                           
 27071                           ;buck.c: 130: buck_status = BUCK_STATUS_STARTUP;
 27072  01912E  0E01               	movlw	1
 27073  019130  D001               	goto	L14
 27074  019132                     l19600:
 27075                           
 27076                           ;buck.c: 131: else
 27077                           ;buck.c: 132: buck_status = BUCK_STATUS_REMOTE_STARTUP;
 27078  019132  0E81               	movlw	129
 27079  019134                     L14:
 27080  019134  6E1C               	movwf	_buck_status,c
 27081                           
 27082                           ;buck.c: 134: os.input_current = 0;
 27083  019136  0E00               	movlw	0
 27084  019138  0102               	movlb	2	; () banked
 27085  01913A  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 27086  01913C  0E00               	movlw	0
 27087  01913E  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 27088                           
 27089                           ;buck.c: 135: os.output_current = 0;
 27090  019140  0E00               	movlw	0
 27091  019142  0102               	movlb	2	; () banked
 27092  019144  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 27093  019146  0E00               	movlw	0
 27094  019148  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 27095                           
 27096                           ;buck.c: 136: for(cntr=0;cntr<4;++cntr)
 27097  01914A  0E00               	movlw	0
 27098  01914C  0100               	movlb	0	; () banked
 27099  01914E  6F60               	movwf	__buck_prepare@cntr& (0+255),b
 27100  019150                     l19602:
 27101                           
 27102                           ; BSR set to: 0
 27103  019150  0E03               	movlw	3
 27104  019152  0100               	movlb	0	; () banked
 27105  019154  6560               	cpfsgt	__buck_prepare@cntr& (0+255),b
 27106  019156  D001               	goto	l19606
 27107  019158  0012               	return	
 27108  01915A                     l19606:
 27109                           
 27110                           ; BSR set to: 0
 27111                           ;buck.c: 137: {
 27112                           ;buck.c: 138: os.input_current_adc[cntr] = 0;
 27113  01915A  0100               	movlb	0	; () banked
 27114  01915C  5160               	movf	__buck_prepare@cntr& (0+255),w,b
 27115  01915E  0D02               	mullw	2
 27116  019160  0E14               	movlw	low (_os+20)
 27117  019162  24F3               	addwf	prodl,w,c
 27118  019164  6ED9               	movwf	fsr2l,c
 27119  019166  0E02               	movlw	high (_os+20)
 27120  019168  20F4               	addwfc	prodh,w,c
 27121  01916A  6EDA               	movwf	fsr2h,c
 27122  01916C  0E00               	movlw	0
 27123  01916E  6EDE               	movwf	postinc2,c
 27124  019170  0E00               	movlw	0
 27125  019172  6EDD               	movwf	postdec2,c
 27126                           
 27127                           ;buck.c: 139: os.output_current_adc[cntr] = 0;
 27128  019174  0100               	movlb	0	; () banked
 27129  019176  5160               	movf	__buck_prepare@cntr& (0+255),w,b
 27130  019178  0D02               	mullw	2
 27131  01917A  0E29               	movlw	low (_os+41)
 27132  01917C  24F3               	addwf	prodl,w,c
 27133  01917E  6ED9               	movwf	fsr2l,c
 27134  019180  0E02               	movlw	high (_os+41)
 27135  019182  20F4               	addwfc	prodh,w,c
 27136  019184  6EDA               	movwf	fsr2h,c
 27137  019186  0E00               	movlw	0
 27138  019188  6EDE               	movwf	postinc2,c
 27139  01918A  0E00               	movlw	0
 27140  01918C  6EDD               	movwf	postdec2,c
 27141                           
 27142                           ; BSR set to: 0
 27143  01918E  0100               	movlb	0	; () banked
 27144  019190  2B60               	incf	__buck_prepare@cntr& (0+255),f,b
 27145  019192  D7DE               	goto	l19602
 27146  019194                     __end_of__buck_prepare:
 27147                           	opt stack 0
 27148                           tblptru	equ	0xFF8
 27149                           tblptrh	equ	0xFF7
 27150                           tblptrl	equ	0xFF6
 27151                           tablat	equ	0xFF5
 27152                           prodh	equ	0xFF4
 27153                           prodl	equ	0xFF3
 27154                           intcon	equ	0xFF2
 27155                           intcon2	equ	0xFF1
 27156                           intcon3	equ	0xFF0
 27157                           postinc0	equ	0xFEE
 27158                           wreg	equ	0xFE8
 27159                           indf1	equ	0xFE7
 27160                           postinc1	equ	0xFE6
 27161                           postdec1	equ	0xFE5
 27162                           plusw1	equ	0xFE3
 27163                           fsr1h	equ	0xFE2
 27164                           fsr1l	equ	0xFE1
 27165                           indf2	equ	0xFDF
 27166                           postinc2	equ	0xFDE
 27167                           postdec2	equ	0xFDD
 27168                           plusw2	equ	0xFDB
 27169                           fsr2h	equ	0xFDA
 27170                           fsr2l	equ	0xFD9
 27171                           status	equ	0xFD8
 27172                           
 27173 ;; *************** function __buck_operate_local *****************
 27174 ;; Defined at:
 27175 ;;		line 308 in file "buck.c"
 27176 ;; Parameters:    Size  Location     Type
 27177 ;;		None
 27178 ;; Auto vars:     Size  Location     Type
 27179 ;;  cntr            1   29[BANK0 ] unsigned char 
 27180 ;;  tmp_dutycycl    1   28[BANK0 ] unsigned char 
 27181 ;; Return value:  Size  Location     Type
 27182 ;;                  1    wreg      void 
 27183 ;; Registers used:
 27184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27185 ;; Tracked objects:
 27186 ;;		On entry : 0/0
 27187 ;;		On exit  : 0/0
 27188 ;;		Unchanged: 0/0
 27189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27191 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27192 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27193 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27194 ;;Total ram usage:        8 bytes
 27195 ;; Hardware stack levels used:    1
 27196 ;; Hardware stack levels required when called:   13
 27197 ;; This function calls:
 27198 ;;		___lmul
 27199 ;;		__buck_initial_dutycycle
 27200 ;;		__buck_set_dutycycle
 27201 ;;		__buck_set_sync_async
 27202 ;;		__buck_start
 27203 ;;		__buck_stop
 27204 ;; This function is called by:
 27205 ;;		_buck_operate
 27206 ;; This function uses a non-reentrant model
 27207 ;;
 27208                           
 27209                           	psect	text119
 27210  0106D8                     __ptext119:
 27211                           	opt stack 0
 27212  0106D8                     __buck_operate_local:
 27213                           	opt stack 16
 27214                           
 27215                           ;buck.c: 310: uint8_t cntr;
 27216                           ;buck.c: 311: uint8_t tmp_dutycycle;
 27217                           ;buck.c: 313: switch(buck_status)
 27218                           
 27219                           ; BSR set to: 0
 27220                           ;incstack = 0
 27221  0106D8  D268               	goto	l21468
 27222  0106DA                     l21354:
 27223                           
 27224                           ;buck.c: 316: if((os.timeSlot&0b00110000)==0b00110000)
 27225  0106DA  0102               	movlb	2	; () banked
 27226  0106DC  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 27227  0106DE  0B30               	andlw	48
 27228  0106E0  0A30               	xorlw	48
 27229  0106E2  A4D8               	btfss	status,2,c
 27230  0106E4  0012               	return	
 27231                           
 27232                           ; BSR set to: 2
 27233                           ;buck.c: 317: {
 27234                           ;buck.c: 318: if((os.input_voltage-500)>os.output_voltage)
 27235  0106E6  0E0C               	movlw	12
 27236  0106E8  0100               	movlb	0	; () banked
 27237  0106EA  6F76               	movwf	??__buck_operate_local& (0+255),b
 27238  0106EC  0EFE               	movlw	254
 27239  0106EE  0100               	movlb	0	; () banked
 27240  0106F0  6F77               	movwf	(??__buck_operate_local+1)& (0+255),b
 27241  0106F2  EE22  F012         	lfsr	2,_os+18	;volatile
 27242  0106F6  CFDE F078          	movff	postinc2,??__buck_operate_local+2
 27243  0106FA  CFDD F079          	movff	postdec2,??__buck_operate_local+3
 27244  0106FE  0100               	movlb	0	; () banked
 27245  010700  5176               	movf	??__buck_operate_local& (0+255),w,b
 27246  010702  0100               	movlb	0	; () banked
 27247  010704  2778               	addwf	(??__buck_operate_local+2)& (0+255),f,b
 27248  010706  0100               	movlb	0	; () banked
 27249  010708  5177               	movf	(??__buck_operate_local+1)& (0+255),w,b
 27250  01070A  0100               	movlb	0	; () banked
 27251  01070C  2379               	addwfc	(??__buck_operate_local+3)& (0+255),f,b
 27252  01070E  0100               	movlb	0	; () banked
 27253  010710  5178               	movf	(??__buck_operate_local+2)& (0+255),w,b
 27254  010712  0102               	movlb	2	; () banked
 27255  010714  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
 27256  010716  0102               	movlb	2	; () banked
 27257  010718  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 27258  01071A  0A80               	xorlw	128
 27259  01071C  0100               	movlb	0	; () banked
 27260  01071E  6F7A               	movwf	(??__buck_operate_local+4)& (0+255),b
 27261  010720  0100               	movlb	0	; () banked
 27262  010722  5179               	movf	(??__buck_operate_local+3)& (0+255),w,b
 27263  010724  0A80               	xorlw	128
 27264  010726  0100               	movlb	0	; () banked
 27265  010728  597A               	subwfb	(??__buck_operate_local+4)& (0+255),w,b
 27266  01072A  B0D8               	btfsc	status,0,c
 27267  01072C  0012               	return	
 27268                           
 27269                           ; BSR set to: 0
 27270                           ;buck.c: 319: {
 27271                           ;buck.c: 320: LATBbits.LB1 = 1;
 27272  01072E  828A               	bsf	3978,1,c	;volatile
 27273                           
 27274                           ; BSR set to: 0
 27275                           ;buck.c: 321: buck_status = BUCK_STATUS_STARTUP;
 27276  010730  0E01               	movlw	1
 27277  010732  6E1C               	movwf	_buck_status,c
 27278                           
 27279                           ;buck.c: 323: os.input_current = 0;
 27280  010734  0E00               	movlw	0
 27281  010736  0102               	movlb	2	; () banked
 27282  010738  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 27283  01073A  0E00               	movlw	0
 27284  01073C  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 27285                           
 27286                           ;buck.c: 324: os.output_current = 0;
 27287  01073E  0E00               	movlw	0
 27288  010740  0102               	movlb	2	; () banked
 27289  010742  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 27290  010744  0E00               	movlw	0
 27291  010746  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 27292                           
 27293                           ;buck.c: 325: for(cntr=0;cntr<4;++cntr)
 27294  010748  0E00               	movlw	0
 27295  01074A  0100               	movlb	0	; () banked
 27296  01074C  6F7D               	movwf	__buck_operate_local@cntr& (0+255),b
 27297  01074E                     l21362:
 27298                           
 27299                           ; BSR set to: 0
 27300  01074E  0E03               	movlw	3
 27301  010750  0100               	movlb	0	; () banked
 27302  010752  657D               	cpfsgt	__buck_operate_local@cntr& (0+255),b
 27303  010754  D001               	goto	l21366
 27304  010756  0012               	return	
 27305  010758                     l21366:
 27306                           
 27307                           ; BSR set to: 0
 27308                           ;buck.c: 326: {
 27309                           ;buck.c: 327: os.input_current_adc[cntr] = 0;
 27310  010758  0100               	movlb	0	; () banked
 27311  01075A  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 27312  01075C  0D02               	mullw	2
 27313  01075E  0E14               	movlw	low (_os+20)
 27314  010760  24F3               	addwf	prodl,w,c
 27315  010762  6ED9               	movwf	fsr2l,c
 27316  010764  0E02               	movlw	high (_os+20)
 27317  010766  20F4               	addwfc	prodh,w,c
 27318  010768  6EDA               	movwf	fsr2h,c
 27319  01076A  0E00               	movlw	0
 27320  01076C  6EDE               	movwf	postinc2,c
 27321  01076E  0E00               	movlw	0
 27322  010770  6EDD               	movwf	postdec2,c
 27323                           
 27324                           ;buck.c: 328: os.output_current_adc[cntr] = 0;
 27325  010772  0100               	movlb	0	; () banked
 27326  010774  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 27327  010776  0D02               	mullw	2
 27328  010778  0E29               	movlw	low (_os+41)
 27329  01077A  24F3               	addwf	prodl,w,c
 27330  01077C  6ED9               	movwf	fsr2l,c
 27331  01077E  0E02               	movlw	high (_os+41)
 27332  010780  20F4               	addwfc	prodh,w,c
 27333  010782  6EDA               	movwf	fsr2h,c
 27334  010784  0E00               	movlw	0
 27335  010786  6EDE               	movwf	postinc2,c
 27336  010788  0E00               	movlw	0
 27337  01078A  6EDD               	movwf	postdec2,c
 27338                           
 27339                           ; BSR set to: 0
 27340  01078C  0100               	movlb	0	; () banked
 27341  01078E  2B7D               	incf	__buck_operate_local@cntr& (0+255),f,b
 27342  010790  D7DE               	goto	l21362
 27343  010792                     l21372:
 27344                           
 27345                           ;buck.c: 335: if((os.timeSlot&0b00110000)==0b00110000)
 27346  010792  0102               	movlb	2	; () banked
 27347  010794  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 27348  010796  0B30               	andlw	48
 27349  010798  0A30               	xorlw	48
 27350  01079A  A4D8               	btfss	status,2,c
 27351  01079C  0012               	return	
 27352                           
 27353                           ; BSR set to: 2
 27354                           ;buck.c: 336: {
 27355                           ;buck.c: 338: os.input_current_calibration = 0;
 27356  01079E  0E00               	movlw	0
 27357  0107A0  0102               	movlb	2	; () banked
 27358  0107A2  6F1C               	movwf	(_os+28)& (0+255),b	;volatile
 27359                           
 27360                           ;buck.c: 339: os.output_current_calibration = 0;
 27361  0107A4  0E00               	movlw	0
 27362  0107A6  0102               	movlb	2	; () banked
 27363  0107A8  6F31               	movwf	(_os+49)& (0+255),b	;volatile
 27364                           
 27365                           ;buck.c: 340: for(cntr=0;cntr<4;++cntr)
 27366  0107AA  0E00               	movlw	0
 27367  0107AC  0100               	movlb	0	; () banked
 27368  0107AE  6F7D               	movwf	__buck_operate_local@cntr& (0+255),b
 27369  0107B0                     l21376:
 27370                           
 27371                           ; BSR set to: 0
 27372  0107B0  0E03               	movlw	3
 27373  0107B2  0100               	movlb	0	; () banked
 27374  0107B4  657D               	cpfsgt	__buck_operate_local@cntr& (0+255),b
 27375  0107B6  D001               	goto	l21380
 27376  0107B8  D01B               	goto	l21386
 27377  0107BA                     l21380:
 27378                           
 27379                           ; BSR set to: 0
 27380                           ;buck.c: 341: {
 27381                           ;buck.c: 342: os.input_current_calibration += os.input_current_adc[cntr];
 27382  0107BA  0100               	movlb	0	; () banked
 27383  0107BC  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 27384  0107BE  0D02               	mullw	2
 27385  0107C0  0E14               	movlw	low (_os+20)
 27386  0107C2  24F3               	addwf	prodl,w,c
 27387  0107C4  6ED9               	movwf	fsr2l,c
 27388  0107C6  0E02               	movlw	high (_os+20)
 27389  0107C8  20F4               	addwfc	prodh,w,c
 27390  0107CA  6EDA               	movwf	fsr2h,c
 27391  0107CC  50DF               	movf	indf2,w,c
 27392  0107CE  0102               	movlb	2	; () banked
 27393  0107D0  271C               	addwf	(_os+28)& (0+255),f,b	;volatile
 27394                           
 27395                           ;buck.c: 343: os.output_current_calibration += os.output_current_adc[cntr];
 27396  0107D2  0100               	movlb	0	; () banked
 27397  0107D4  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 27398  0107D6  0D02               	mullw	2
 27399  0107D8  0E29               	movlw	low (_os+41)
 27400  0107DA  24F3               	addwf	prodl,w,c
 27401  0107DC  6ED9               	movwf	fsr2l,c
 27402  0107DE  0E02               	movlw	high (_os+41)
 27403  0107E0  20F4               	addwfc	prodh,w,c
 27404  0107E2  6EDA               	movwf	fsr2h,c
 27405  0107E4  50DF               	movf	indf2,w,c
 27406  0107E6  0102               	movlb	2	; () banked
 27407  0107E8  2731               	addwf	(_os+49)& (0+255),f,b	;volatile
 27408                           
 27409                           ; BSR set to: 2
 27410  0107EA  0100               	movlb	0	; () banked
 27411  0107EC  2B7D               	incf	__buck_operate_local@cntr& (0+255),f,b
 27412  0107EE  D7E0               	goto	l21376
 27413  0107F0                     l21386:
 27414                           
 27415                           ; BSR set to: 0
 27416                           ;buck.c: 344: }
 27417                           ;buck.c: 346: buck_dutycycle_last_step = 1;
 27418  0107F0  0E01               	movlw	1
 27419  0107F2  0101               	movlb	1	; () banked
 27420  0107F4  6FF2               	movwf	_buck_dutycycle_last_step& (0+255),b
 27421                           
 27422                           ; BSR set to: 1
 27423                           ;buck.c: 347: _buck_start(BUCK_MODE_ASYNCHRONOUS, _buck_initial_dutycycle());
 27424  0107F6  ECA7  F0B8         	call	__buck_initial_dutycycle	;wreg free
 27425  0107FA  0100               	movlb	0	; () banked
 27426  0107FC  6F7B               	movwf	__buck_operate_local$8729& (0+255),b
 27427                           
 27428                           ; BSR set to: 0
 27429                           ;buck.c: 347: _buck_start(BUCK_MODE_ASYNCHRONOUS, _buck_initial_dutycycle());
 27430  0107FE  C07B  F072         	movff	__buck_operate_local$8729,__buck_start@dutycycle
 27431  010802  0E00               	movlw	0
 27432  010804  EC3B  F0B8         	call	__buck_start
 27433                           
 27434                           ;buck.c: 349: }
 27435                           ;buck.c: 350: break;
 27436  010808  0012               	return	
 27437  01080A                     l2531:
 27438                           
 27439                           ;buck.c: 353: if(os.timeSlot&0b00010000)
 27440  01080A  0102               	movlb	2	; () banked
 27441  01080C  A908               	btfss	(_os+8)& (0+255),4,b	;volatile
 27442  01080E  0012               	return	
 27443                           
 27444                           ; BSR set to: 2
 27445                           ;buck.c: 354: {
 27446                           ;buck.c: 356: if(os.output_voltage>battery_voltage_maximum)
 27447  010810  0102               	movlb	2	; () banked
 27448  010812  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 27449  010814  0102               	movlb	2	; () banked
 27450  010816  5DE9               	subwf	_battery_voltage_maximum& (0+255),w,b
 27451  010818  0102               	movlb	2	; () banked
 27452  01081A  51EA               	movf	(_battery_voltage_maximum+1)& (0+255),w,b
 27453  01081C  0A80               	xorlw	128
 27454  01081E  0100               	movlb	0	; () banked
 27455  010820  6F76               	movwf	??__buck_operate_local& (0+255),b
 27456  010822  0102               	movlb	2	; () banked
 27457  010824  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 27458  010826  0A80               	xorlw	128
 27459  010828  0100               	movlb	0	; () banked
 27460  01082A  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 27461  01082C  B0D8               	btfsc	status,0,c
 27462  01082E  D007               	goto	l21398
 27463                           
 27464                           ; BSR set to: 0
 27465                           ;buck.c: 357: {
 27466                           ;buck.c: 358: _buck_set_dutycycle((uint8_t)(buck_dutycycle-1));
 27467  010830  0100               	movlb	0	; () banked
 27468  010832  05E4               	decf	_buck_dutycycle& (0+255),w,b
 27469  010834  EC0C  F0C6         	call	__buck_set_dutycycle
 27470                           
 27471                           ;buck.c: 359: buck_dutycycle_last_step = -1;
 27472  010838  0101               	movlb	1	; () banked
 27473  01083A  69F2               	setf	_buck_dutycycle_last_step& (0+255),b
 27474                           
 27475                           ;buck.c: 360: }
 27476  01083C  0012               	return	
 27477  01083E                     l21398:
 27478                           
 27479                           ;buck.c: 362: else if ((os.input_current<5) || (os.input_voltage<os.output_voltage))
 27480  01083E  0102               	movlb	2	; () banked
 27481  010840  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 27482  010842  D018               	goto	l21402
 27483  010844  0102               	movlb	2	; () banked
 27484  010846  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 27485  010848  E105               	bnz	u21140
 27486  01084A  0E05               	movlw	5
 27487  01084C  0102               	movlb	2	; () banked
 27488  01084E  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 27489  010850  A0D8               	btfss	status,0,c
 27490  010852  D010               	goto	l21402
 27491  010854                     u21140:
 27492                           
 27493                           ; BSR set to: 2
 27494  010854  0102               	movlb	2	; () banked
 27495  010856  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 27496  010858  0102               	movlb	2	; () banked
 27497  01085A  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 27498  01085C  0102               	movlb	2	; () banked
 27499  01085E  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 27500  010860  0A80               	xorlw	128
 27501  010862  0100               	movlb	0	; () banked
 27502  010864  6F76               	movwf	??__buck_operate_local& (0+255),b
 27503  010866  0102               	movlb	2	; () banked
 27504  010868  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 27505  01086A  0A80               	xorlw	128
 27506  01086C  0100               	movlb	0	; () banked
 27507  01086E  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 27508  010870  B0D8               	btfsc	status,0,c
 27509  010872  D005               	goto	l21406
 27510  010874                     l21402:
 27511                           
 27512                           ;buck.c: 363: {
 27513                           ;buck.c: 364: _buck_stop();
 27514  010874  EC6E  F0D2         	call	__buck_stop	;wreg free
 27515                           
 27516                           ;buck.c: 365: buck_status = BUCK_STATUS_OFF;
 27517  010878  0E00               	movlw	0
 27518  01087A  6E1C               	movwf	_buck_status,c
 27519                           
 27520                           ;buck.c: 366: }
 27521  01087C  0012               	return	
 27522  01087E                     l21406:
 27523                           
 27524                           ;buck.c: 368: else if (os.input_voltage - os.output_voltage < 1000)
 27525  01087E  EE22  F027         	lfsr	2,_os+39	;volatile
 27526  010882  CFDE F076          	movff	postinc2,??__buck_operate_local
 27527  010886  CFDD F077          	movff	postdec2,??__buck_operate_local+1
 27528  01088A  0100               	movlb	0	; () banked
 27529  01088C  1F76               	comf	??__buck_operate_local& (0+255),f,b
 27530  01088E  1F77               	comf	(??__buck_operate_local+1)& (0+255),f,b
 27531  010890  4B76               	infsnz	??__buck_operate_local& (0+255),f,b
 27532  010892  2B77               	incf	(??__buck_operate_local+1)& (0+255),f,b
 27533  010894  0102               	movlb	2	; () banked
 27534  010896  5112               	movf	(_os+18)& (0+255),w,b	;volatile
 27535  010898  0100               	movlb	0	; () banked
 27536  01089A  2776               	addwf	??__buck_operate_local& (0+255),f,b
 27537  01089C  0102               	movlb	2	; () banked
 27538  01089E  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 27539  0108A0  0100               	movlb	0	; () banked
 27540  0108A2  2377               	addwfc	(??__buck_operate_local+1)& (0+255),f,b
 27541  0108A4  0100               	movlb	0	; () banked
 27542  0108A6  BF77               	btfsc	(??__buck_operate_local+1)& (0+255),7,b
 27543  0108A8  D008               	goto	l21408
 27544  0108AA  0EE8               	movlw	232
 27545  0108AC  0100               	movlb	0	; () banked
 27546  0108AE  5D76               	subwf	??__buck_operate_local& (0+255),w,b
 27547  0108B0  0E03               	movlw	3
 27548  0108B2  0100               	movlb	0	; () banked
 27549  0108B4  5977               	subwfb	(??__buck_operate_local+1)& (0+255),w,b
 27550  0108B6  B0D8               	btfsc	status,0,c
 27551  0108B8  D007               	goto	l21412
 27552  0108BA                     l21408:
 27553                           
 27554                           ; BSR set to: 0
 27555                           ;buck.c: 369: {
 27556                           ;buck.c: 370: _buck_set_dutycycle((uint8_t)(buck_dutycycle-1));
 27557  0108BA  0100               	movlb	0	; () banked
 27558  0108BC  05E4               	decf	_buck_dutycycle& (0+255),w,b
 27559  0108BE  EC0C  F0C6         	call	__buck_set_dutycycle
 27560                           
 27561                           ;buck.c: 371: buck_dutycycle_last_step = -1;
 27562  0108C2  0101               	movlb	1	; () banked
 27563  0108C4  69F2               	setf	_buck_dutycycle_last_step& (0+255),b
 27564                           
 27565                           ;buck.c: 372: }
 27566  0108C6  0012               	return	
 27567  0108C8                     l21412:
 27568                           
 27569                           ;buck.c: 374: else if (os.input_current>600)
 27570  0108C8  0102               	movlb	2	; () banked
 27571  0108CA  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 27572  0108CC  D013               	goto	l21418
 27573  0108CE  0E59               	movlw	89
 27574  0108D0  0102               	movlb	2	; () banked
 27575  0108D2  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 27576  0108D4  0E02               	movlw	2
 27577  0108D6  0102               	movlb	2	; () banked
 27578  0108D8  591E               	subwfb	(_os+30)& (0+255),w,b	;volatile
 27579  0108DA  A0D8               	btfss	status,0,c
 27580  0108DC  D00B               	goto	l21418
 27581                           
 27582                           ; BSR set to: 2
 27583                           ;buck.c: 375: {
 27584                           ;buck.c: 376: tmp_dutycycle = (uint8_t) (_buck_initial_dutycycle()+5);
 27585  0108DE  ECA7  F0B8         	call	__buck_initial_dutycycle	;wreg free
 27586  0108E2  0F05               	addlw	5
 27587  0108E4  0100               	movlb	0	; () banked
 27588  0108E6  6F7C               	movwf	__buck_operate_local@tmp_dutycycle& (0+255),b
 27589                           
 27590                           ; BSR set to: 0
 27591                           ;buck.c: 377: _buck_set_sync_async(BUCK_MODE_SYNCHRONOUS, tmp_dutycycle);
 27592  0108E8  C07C  F062         	movff	__buck_operate_local@tmp_dutycycle,__buck_set_sync_async@new_dutycycle
 27593  0108EC  0E01               	movlw	1
 27594  0108EE  ECB1  F0C7         	call	__buck_set_sync_async
 27595                           
 27596                           ;buck.c: 380: }
 27597  0108F2  0012               	return	
 27598  0108F4                     l21418:
 27599                           
 27600                           ;buck.c: 382: else
 27601                           ;buck.c: 383: {
 27602                           ;buck.c: 385: idx = (uint8_t) (os.timeSlot & 0b00110000);
 27603  0108F4  0102               	movlb	2	; () banked
 27604  0108F6  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 27605  0108F8  0B30               	andlw	48
 27606  0108FA  0100               	movlb	0	; () banked
 27607  0108FC  6FE0               	movwf	_idx& (0+255),b
 27608                           
 27609                           ;buck.c: 386: idx >>= 4;
 27610  0108FE  0100               	movlb	0	; () banked
 27611  010900  3BE0               	swapf	_idx& (0+255),f,b
 27612  010902  0E0F               	movlw	15
 27613  010904  17E0               	andwf	_idx& (0+255),f,b
 27614                           
 27615                           ; BSR set to: 0
 27616                           ;buck.c: 387: now = (int32_t)os.input_voltage_adc[idx];
 27617  010906  0100               	movlb	0	; () banked
 27618  010908  51E0               	movf	_idx& (0+255),w,b
 27619  01090A  0D02               	mullw	2
 27620  01090C  0E0A               	movlw	low (_os+10)
 27621  01090E  24F3               	addwf	prodl,w,c
 27622  010910  6ED9               	movwf	fsr2l,c
 27623  010912  0E02               	movlw	high (_os+10)
 27624  010914  20F4               	addwfc	prodh,w,c
 27625  010916  6EDA               	movwf	fsr2h,c
 27626  010918  CFDE F29E          	movff	postinc2,_now
 27627  01091C  CFDD F29F          	movff	postdec2,_now+1
 27628  010920  0102               	movlb	2	; () banked
 27629  010922  0E00               	movlw	0
 27630  010924  BF9F               	btfsc	(_now+1)& (0+255),7,b
 27631  010926  0EFF               	movlw	-1
 27632  010928  6FA0               	movwf	(_now+2)& (0+255),b
 27633  01092A  6FA1               	movwf	(_now+3)& (0+255),b
 27634                           
 27635                           ; BSR set to: 2
 27636                           ;buck.c: 388: now *= (int32_t) os.input_current_adc[idx];
 27637  01092C  C29E  F060         	movff	_now,___lmul@multiplier
 27638  010930  C29F  F061         	movff	_now+1,___lmul@multiplier+1
 27639  010934  C2A0  F062         	movff	_now+2,___lmul@multiplier+2
 27640  010938  C2A1  F063         	movff	_now+3,___lmul@multiplier+3
 27641  01093C  0100               	movlb	0	; () banked
 27642  01093E  51E0               	movf	_idx& (0+255),w,b
 27643  010940  0D02               	mullw	2
 27644  010942  0E14               	movlw	low (_os+20)
 27645  010944  24F3               	addwf	prodl,w,c
 27646  010946  6ED9               	movwf	fsr2l,c
 27647  010948  0E02               	movlw	high (_os+20)
 27648  01094A  20F4               	addwfc	prodh,w,c
 27649  01094C  6EDA               	movwf	fsr2h,c
 27650  01094E  CFDE F064          	movff	postinc2,___lmul@multiplicand
 27651  010952  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 27652  010956  0100               	movlb	0	; () banked
 27653  010958  0E00               	movlw	0
 27654  01095A  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 27655  01095C  0EFF               	movlw	-1
 27656  01095E  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27657  010960  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27658  010962  EC3B  F0C7         	call	___lmul	;wreg free
 27659  010966  C060  F29E         	movff	?___lmul,_now
 27660  01096A  C061  F29F         	movff	?___lmul+1,_now+1
 27661  01096E  C062  F2A0         	movff	?___lmul+2,_now+2
 27662  010972  C063  F2A1         	movff	?___lmul+3,_now+3
 27663                           
 27664                           ;buck.c: 390: idx += 2;
 27665  010976  0E02               	movlw	2
 27666  010978  0100               	movlb	0	; () banked
 27667  01097A  27E0               	addwf	_idx& (0+255),f,b
 27668                           
 27669                           ; BSR set to: 0
 27670                           ;buck.c: 391: idx &= 0b11;
 27671  01097C  0E03               	movlw	3
 27672  01097E  0100               	movlb	0	; () banked
 27673  010980  17E0               	andwf	_idx& (0+255),f,b
 27674                           
 27675                           ; BSR set to: 0
 27676                           ;buck.c: 392: last = (int32_t)os.input_voltage_adc[idx];
 27677  010982  0100               	movlb	0	; () banked
 27678  010984  51E0               	movf	_idx& (0+255),w,b
 27679  010986  0D02               	mullw	2
 27680  010988  0E0A               	movlw	low (_os+10)
 27681  01098A  24F3               	addwf	prodl,w,c
 27682  01098C  6ED9               	movwf	fsr2l,c
 27683  01098E  0E02               	movlw	high (_os+10)
 27684  010990  20F4               	addwfc	prodh,w,c
 27685  010992  6EDA               	movwf	fsr2h,c
 27686  010994  CFDE F2A2          	movff	postinc2,_last
 27687  010998  CFDD F2A3          	movff	postdec2,_last+1
 27688  01099C  0102               	movlb	2	; () banked
 27689  01099E  0E00               	movlw	0
 27690  0109A0  BFA3               	btfsc	(_last+1)& (0+255),7,b
 27691  0109A2  0EFF               	movlw	-1
 27692  0109A4  6FA4               	movwf	(_last+2)& (0+255),b
 27693  0109A6  6FA5               	movwf	(_last+3)& (0+255),b
 27694                           
 27695                           ; BSR set to: 2
 27696                           ;buck.c: 393: last *= (int32_t) os.input_current_adc[idx];
 27697  0109A8  C2A2  F060         	movff	_last,___lmul@multiplier
 27698  0109AC  C2A3  F061         	movff	_last+1,___lmul@multiplier+1
 27699  0109B0  C2A4  F062         	movff	_last+2,___lmul@multiplier+2
 27700  0109B4  C2A5  F063         	movff	_last+3,___lmul@multiplier+3
 27701  0109B8  0100               	movlb	0	; () banked
 27702  0109BA  51E0               	movf	_idx& (0+255),w,b
 27703  0109BC  0D02               	mullw	2
 27704  0109BE  0E14               	movlw	low (_os+20)
 27705  0109C0  24F3               	addwf	prodl,w,c
 27706  0109C2  6ED9               	movwf	fsr2l,c
 27707  0109C4  0E02               	movlw	high (_os+20)
 27708  0109C6  20F4               	addwfc	prodh,w,c
 27709  0109C8  6EDA               	movwf	fsr2h,c
 27710  0109CA  CFDE F064          	movff	postinc2,___lmul@multiplicand
 27711  0109CE  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 27712  0109D2  0100               	movlb	0	; () banked
 27713  0109D4  0E00               	movlw	0
 27714  0109D6  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 27715  0109D8  0EFF               	movlw	-1
 27716  0109DA  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27717  0109DC  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27718  0109DE  EC3B  F0C7         	call	___lmul	;wreg free
 27719  0109E2  C060  F2A2         	movff	?___lmul,_last
 27720  0109E6  C061  F2A3         	movff	?___lmul+1,_last+1
 27721  0109EA  C062  F2A4         	movff	?___lmul+2,_last+2
 27722  0109EE  C063  F2A5         	movff	?___lmul+3,_last+3
 27723                           
 27724                           ;buck.c: 395: if(os.input_voltage>17000)
 27725  0109F2  0102               	movlb	2	; () banked
 27726  0109F4  BF13               	btfsc	(_os+19)& (0+255),7,b	;volatile
 27727  0109F6  D00D               	goto	l21434
 27728  0109F8  0E69               	movlw	105
 27729  0109FA  0102               	movlb	2	; () banked
 27730  0109FC  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 27731  0109FE  0E42               	movlw	66
 27732  010A00  0102               	movlb	2	; () banked
 27733  010A02  5913               	subwfb	(_os+19)& (0+255),w,b	;volatile
 27734  010A04  A0D8               	btfss	status,0,c
 27735  010A06  D005               	goto	l21434
 27736                           
 27737                           ; BSR set to: 2
 27738                           ;buck.c: 396: {
 27739                           ;buck.c: 397: _buck_set_dutycycle(buck_dutycycle+1);
 27740  010A08  0100               	movlb	0	; () banked
 27741  010A0A  29E4               	incf	_buck_dutycycle& (0+255),w,b
 27742  010A0C  EC0C  F0C6         	call	__buck_set_dutycycle
 27743                           
 27744                           ;buck.c: 398: }
 27745  010A10  0012               	return	
 27746  010A12                     l21434:
 27747                           
 27748                           ;buck.c: 399: else
 27749                           ;buck.c: 400: {
 27750                           ;buck.c: 401: _buck_set_dutycycle(buck_dutycycle-1);
 27751  010A12  0100               	movlb	0	; () banked
 27752  010A14  05E4               	decf	_buck_dutycycle& (0+255),w,b
 27753  010A16  EC0C  F0C6         	call	__buck_set_dutycycle
 27754                           
 27755                           ;buck.c: 402: }
 27756                           ;buck.c: 403: }
 27757                           ;buck.c: 404: }
 27758                           ;buck.c: 405: break;
 27759  010A1A  0012               	return	
 27760  010A1C                     l2545:
 27761                           
 27762                           ;buck.c: 408: if (os.timeSlot & 0b00010000)
 27763  010A1C  0102               	movlb	2	; () banked
 27764  010A1E  A908               	btfss	(_os+8)& (0+255),4,b	;volatile
 27765  010A20  0012               	return	
 27766                           
 27767                           ; BSR set to: 2
 27768                           ;buck.c: 409: {
 27769                           ;buck.c: 411: if (os.output_voltage>battery_voltage_maximum)
 27770  010A22  0102               	movlb	2	; () banked
 27771  010A24  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 27772  010A26  0102               	movlb	2	; () banked
 27773  010A28  5DE9               	subwf	_battery_voltage_maximum& (0+255),w,b
 27774  010A2A  0102               	movlb	2	; () banked
 27775  010A2C  51EA               	movf	(_battery_voltage_maximum+1)& (0+255),w,b
 27776  010A2E  0A80               	xorlw	128
 27777  010A30  0100               	movlb	0	; () banked
 27778  010A32  6F76               	movwf	??__buck_operate_local& (0+255),b
 27779  010A34  0102               	movlb	2	; () banked
 27780  010A36  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 27781  010A38  0A80               	xorlw	128
 27782  010A3A  0100               	movlb	0	; () banked
 27783  010A3C  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 27784  010A3E  B0D8               	btfsc	status,0,c
 27785  010A40  D007               	goto	l21442
 27786                           
 27787                           ; BSR set to: 0
 27788                           ;buck.c: 412: {
 27789                           ;buck.c: 413: _buck_set_dutycycle(buck_dutycycle-1);
 27790  010A42  0100               	movlb	0	; () banked
 27791  010A44  05E4               	decf	_buck_dutycycle& (0+255),w,b
 27792  010A46  EC0C  F0C6         	call	__buck_set_dutycycle
 27793                           
 27794                           ;buck.c: 414: buck_dutycycle_last_step = -1;
 27795  010A4A  0101               	movlb	1	; () banked
 27796  010A4C  69F2               	setf	_buck_dutycycle_last_step& (0+255),b
 27797                           
 27798                           ;buck.c: 415: }
 27799  010A4E  0012               	return	
 27800  010A50                     l21442:
 27801                           
 27802                           ;buck.c: 417: else if (os.input_current<200)
 27803  010A50  0102               	movlb	2	; () banked
 27804  010A52  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 27805  010A54  D008               	goto	l21444
 27806  010A56  0102               	movlb	2	; () banked
 27807  010A58  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 27808  010A5A  E110               	bnz	l21448
 27809  010A5C  0EC8               	movlw	200
 27810  010A5E  0102               	movlb	2	; () banked
 27811  010A60  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 27812  010A62  B0D8               	btfsc	status,0,c
 27813  010A64  D00B               	goto	l21448
 27814  010A66                     l21444:
 27815                           
 27816                           ; BSR set to: 2
 27817                           ;buck.c: 418: {
 27818                           ;buck.c: 419: tmp_dutycycle = buck_dutycycle-5;
 27819  010A66  0100               	movlb	0	; () banked
 27820  010A68  51E4               	movf	_buck_dutycycle& (0+255),w,b
 27821  010A6A  0FFB               	addlw	251
 27822  010A6C  0100               	movlb	0	; () banked
 27823  010A6E  6F7C               	movwf	__buck_operate_local@tmp_dutycycle& (0+255),b
 27824                           
 27825                           ; BSR set to: 0
 27826                           ;buck.c: 420: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, tmp_dutycycle);
 27827  010A70  C07C  F062         	movff	__buck_operate_local@tmp_dutycycle,__buck_set_sync_async@new_dutycycle
 27828  010A74  0E00               	movlw	0
 27829  010A76  ECB1  F0C7         	call	__buck_set_sync_async
 27830                           
 27831                           ;buck.c: 421: }
 27832  010A7A  0012               	return	
 27833  010A7C                     l21448:
 27834                           
 27835                           ;buck.c: 423: else
 27836                           ;buck.c: 424: {
 27837                           ;buck.c: 426: idx = os.timeSlot & 0b00110000;
 27838  010A7C  0102               	movlb	2	; () banked
 27839  010A7E  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 27840  010A80  0B30               	andlw	48
 27841  010A82  0100               	movlb	0	; () banked
 27842  010A84  6FE0               	movwf	_idx& (0+255),b
 27843                           
 27844                           ;buck.c: 427: idx >>= 4;
 27845  010A86  0100               	movlb	0	; () banked
 27846  010A88  3BE0               	swapf	_idx& (0+255),f,b
 27847  010A8A  0E0F               	movlw	15
 27848  010A8C  17E0               	andwf	_idx& (0+255),f,b
 27849                           
 27850                           ; BSR set to: 0
 27851                           ;buck.c: 428: now = (int32_t)os.input_voltage_adc[idx];
 27852  010A8E  0100               	movlb	0	; () banked
 27853  010A90  51E0               	movf	_idx& (0+255),w,b
 27854  010A92  0D02               	mullw	2
 27855  010A94  0E0A               	movlw	low (_os+10)
 27856  010A96  24F3               	addwf	prodl,w,c
 27857  010A98  6ED9               	movwf	fsr2l,c
 27858  010A9A  0E02               	movlw	high (_os+10)
 27859  010A9C  20F4               	addwfc	prodh,w,c
 27860  010A9E  6EDA               	movwf	fsr2h,c
 27861  010AA0  CFDE F29E          	movff	postinc2,_now
 27862  010AA4  CFDD F29F          	movff	postdec2,_now+1
 27863  010AA8  0102               	movlb	2	; () banked
 27864  010AAA  0E00               	movlw	0
 27865  010AAC  BF9F               	btfsc	(_now+1)& (0+255),7,b
 27866  010AAE  0EFF               	movlw	-1
 27867  010AB0  6FA0               	movwf	(_now+2)& (0+255),b
 27868  010AB2  6FA1               	movwf	(_now+3)& (0+255),b
 27869                           
 27870                           ; BSR set to: 2
 27871                           ;buck.c: 429: now *= (int32_t) os.input_current_adc[idx];
 27872  010AB4  C29E  F060         	movff	_now,___lmul@multiplier
 27873  010AB8  C29F  F061         	movff	_now+1,___lmul@multiplier+1
 27874  010ABC  C2A0  F062         	movff	_now+2,___lmul@multiplier+2
 27875  010AC0  C2A1  F063         	movff	_now+3,___lmul@multiplier+3
 27876  010AC4  0100               	movlb	0	; () banked
 27877  010AC6  51E0               	movf	_idx& (0+255),w,b
 27878  010AC8  0D02               	mullw	2
 27879  010ACA  0E14               	movlw	low (_os+20)
 27880  010ACC  24F3               	addwf	prodl,w,c
 27881  010ACE  6ED9               	movwf	fsr2l,c
 27882  010AD0  0E02               	movlw	high (_os+20)
 27883  010AD2  20F4               	addwfc	prodh,w,c
 27884  010AD4  6EDA               	movwf	fsr2h,c
 27885  010AD6  CFDE F064          	movff	postinc2,___lmul@multiplicand
 27886  010ADA  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 27887  010ADE  0100               	movlb	0	; () banked
 27888  010AE0  0E00               	movlw	0
 27889  010AE2  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 27890  010AE4  0EFF               	movlw	-1
 27891  010AE6  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27892  010AE8  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27893  010AEA  EC3B  F0C7         	call	___lmul	;wreg free
 27894  010AEE  C060  F29E         	movff	?___lmul,_now
 27895  010AF2  C061  F29F         	movff	?___lmul+1,_now+1
 27896  010AF6  C062  F2A0         	movff	?___lmul+2,_now+2
 27897  010AFA  C063  F2A1         	movff	?___lmul+3,_now+3
 27898                           
 27899                           ;buck.c: 431: idx += 2;
 27900  010AFE  0E02               	movlw	2
 27901  010B00  0100               	movlb	0	; () banked
 27902  010B02  27E0               	addwf	_idx& (0+255),f,b
 27903                           
 27904                           ; BSR set to: 0
 27905                           ;buck.c: 432: idx &= 0b11;
 27906  010B04  0E03               	movlw	3
 27907  010B06  0100               	movlb	0	; () banked
 27908  010B08  17E0               	andwf	_idx& (0+255),f,b
 27909                           
 27910                           ; BSR set to: 0
 27911                           ;buck.c: 433: last = (int32_t)os.input_voltage_adc[idx];
 27912  010B0A  0100               	movlb	0	; () banked
 27913  010B0C  51E0               	movf	_idx& (0+255),w,b
 27914  010B0E  0D02               	mullw	2
 27915  010B10  0E0A               	movlw	low (_os+10)
 27916  010B12  24F3               	addwf	prodl,w,c
 27917  010B14  6ED9               	movwf	fsr2l,c
 27918  010B16  0E02               	movlw	high (_os+10)
 27919  010B18  20F4               	addwfc	prodh,w,c
 27920  010B1A  6EDA               	movwf	fsr2h,c
 27921  010B1C  CFDE F2A2          	movff	postinc2,_last
 27922  010B20  CFDD F2A3          	movff	postdec2,_last+1
 27923  010B24  0102               	movlb	2	; () banked
 27924  010B26  0E00               	movlw	0
 27925  010B28  BFA3               	btfsc	(_last+1)& (0+255),7,b
 27926  010B2A  0EFF               	movlw	-1
 27927  010B2C  6FA4               	movwf	(_last+2)& (0+255),b
 27928  010B2E  6FA5               	movwf	(_last+3)& (0+255),b
 27929                           
 27930                           ; BSR set to: 2
 27931                           ;buck.c: 434: last *= (int32_t) os.input_current_adc[idx];
 27932  010B30  C2A2  F060         	movff	_last,___lmul@multiplier
 27933  010B34  C2A3  F061         	movff	_last+1,___lmul@multiplier+1
 27934  010B38  C2A4  F062         	movff	_last+2,___lmul@multiplier+2
 27935  010B3C  C2A5  F063         	movff	_last+3,___lmul@multiplier+3
 27936  010B40  0100               	movlb	0	; () banked
 27937  010B42  51E0               	movf	_idx& (0+255),w,b
 27938  010B44  0D02               	mullw	2
 27939  010B46  0E14               	movlw	low (_os+20)
 27940  010B48  24F3               	addwf	prodl,w,c
 27941  010B4A  6ED9               	movwf	fsr2l,c
 27942  010B4C  0E02               	movlw	high (_os+20)
 27943  010B4E  20F4               	addwfc	prodh,w,c
 27944  010B50  6EDA               	movwf	fsr2h,c
 27945  010B52  CFDE F064          	movff	postinc2,___lmul@multiplicand
 27946  010B56  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 27947  010B5A  0100               	movlb	0	; () banked
 27948  010B5C  0E00               	movlw	0
 27949  010B5E  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 27950  010B60  0EFF               	movlw	-1
 27951  010B62  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27952  010B64  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27953  010B66  EC3B  F0C7         	call	___lmul	;wreg free
 27954  010B6A  C060  F2A2         	movff	?___lmul,_last
 27955  010B6E  C061  F2A3         	movff	?___lmul+1,_last+1
 27956  010B72  C062  F2A4         	movff	?___lmul+2,_last+2
 27957  010B76  C063  F2A5         	movff	?___lmul+3,_last+3
 27958                           
 27959                           ;buck.c: 436: if(os.input_voltage>17000)
 27960  010B7A  0102               	movlb	2	; () banked
 27961  010B7C  BF13               	btfsc	(_os+19)& (0+255),7,b	;volatile
 27962  010B7E  D00D               	goto	l21464
 27963  010B80  0E69               	movlw	105
 27964  010B82  0102               	movlb	2	; () banked
 27965  010B84  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 27966  010B86  0E42               	movlw	66
 27967  010B88  0102               	movlb	2	; () banked
 27968  010B8A  5913               	subwfb	(_os+19)& (0+255),w,b	;volatile
 27969  010B8C  A0D8               	btfss	status,0,c
 27970  010B8E  D005               	goto	l21464
 27971                           
 27972                           ; BSR set to: 2
 27973                           ;buck.c: 437: {
 27974                           ;buck.c: 438: _buck_set_dutycycle(buck_dutycycle+1);
 27975  010B90  0100               	movlb	0	; () banked
 27976  010B92  29E4               	incf	_buck_dutycycle& (0+255),w,b
 27977  010B94  EC0C  F0C6         	call	__buck_set_dutycycle
 27978                           
 27979                           ;buck.c: 439: }
 27980  010B98  0012               	return	
 27981  010B9A                     l21464:
 27982                           
 27983                           ;buck.c: 440: else
 27984                           ;buck.c: 441: {
 27985                           ;buck.c: 442: _buck_set_dutycycle(buck_dutycycle-1);
 27986  010B9A  0100               	movlb	0	; () banked
 27987  010B9C  05E4               	decf	_buck_dutycycle& (0+255),w,b
 27988  010B9E  EC0C  F0C6         	call	__buck_set_dutycycle
 27989                           
 27990                           ;buck.c: 443: }
 27991                           ;buck.c: 444: }
 27992                           ;buck.c: 445: }
 27993                           ;buck.c: 446: break;
 27994  010BA2  0012               	return	
 27995  010BA4                     l21466:
 27996                           
 27997                           ;buck.c: 449: buck_status = BUCK_STATUS_OFF;
 27998  010BA4  0E00               	movlw	0
 27999  010BA6  6E1C               	movwf	_buck_status,c
 28000                           
 28001                           ;buck.c: 450: }
 28002  010BA8  0012               	return	
 28003  010BAA                     l21468:
 28004  010BAA  501C               	movf	_buck_status,w,c
 28005                           
 28006                           ; Switch size 1, requested type "space"
 28007                           ; Number of cases is 4, Range of values is 0 to 3
 28008                           ; switch strategies available:
 28009                           ; Name         Instructions Cycles
 28010                           ; simple_byte           13     7 (average)
 28011                           ;	Chosen strategy is simple_byte
 28012  010BAC  0A00               	xorlw	0	; case 0
 28013  010BAE  B4D8               	btfsc	status,2,c
 28014  010BB0  D594               	goto	l21354
 28015  010BB2  0A01               	xorlw	1	; case 1
 28016  010BB4  B4D8               	btfsc	status,2,c
 28017  010BB6  D5ED               	goto	l21372
 28018  010BB8  0A03               	xorlw	3	; case 2
 28019  010BBA  B4D8               	btfsc	status,2,c
 28020  010BBC  D626               	goto	l2531
 28021  010BBE  0A01               	xorlw	1	; case 3
 28022  010BC0  B4D8               	btfsc	status,2,c
 28023  010BC2  D72C               	goto	l2545
 28024  010BC4  D7EF               	goto	l21466
 28025  010BC6                     __end_of__buck_operate_local:
 28026                           	opt stack 0
 28027                           tblptru	equ	0xFF8
 28028                           tblptrh	equ	0xFF7
 28029                           tblptrl	equ	0xFF6
 28030                           tablat	equ	0xFF5
 28031                           prodh	equ	0xFF4
 28032                           prodl	equ	0xFF3
 28033                           intcon	equ	0xFF2
 28034                           intcon2	equ	0xFF1
 28035                           intcon3	equ	0xFF0
 28036                           postinc0	equ	0xFEE
 28037                           wreg	equ	0xFE8
 28038                           indf1	equ	0xFE7
 28039                           postinc1	equ	0xFE6
 28040                           postdec1	equ	0xFE5
 28041                           plusw1	equ	0xFE3
 28042                           fsr1h	equ	0xFE2
 28043                           fsr1l	equ	0xFE1
 28044                           indf2	equ	0xFDF
 28045                           postinc2	equ	0xFDE
 28046                           postdec2	equ	0xFDD
 28047                           plusw2	equ	0xFDB
 28048                           fsr2h	equ	0xFDA
 28049                           fsr2l	equ	0xFD9
 28050                           status	equ	0xFD8
 28051                           
 28052 ;; *************** function __buck_stop *****************
 28053 ;; Defined at:
 28054 ;;		line 283 in file "buck.c"
 28055 ;; Parameters:    Size  Location     Type
 28056 ;;		None
 28057 ;; Auto vars:     Size  Location     Type
 28058 ;;		None
 28059 ;; Return value:  Size  Location     Type
 28060 ;;                  1    wreg      void 
 28061 ;; Registers used:
 28062 ;;		wreg, status,2, status,0
 28063 ;; Tracked objects:
 28064 ;;		On entry : 0/0
 28065 ;;		On exit  : 0/0
 28066 ;;		Unchanged: 0/0
 28067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28072 ;;Total ram usage:        0 bytes
 28073 ;; Hardware stack levels used:    1
 28074 ;; Hardware stack levels required when called:   10
 28075 ;; This function calls:
 28076 ;;		Nothing
 28077 ;; This function is called by:
 28078 ;;		__buck_operate_local
 28079 ;;		__buck_operate_remote
 28080 ;; This function uses a non-reentrant model
 28081 ;;
 28082                           
 28083                           	psect	text120
 28084  01A4DC                     __ptext120:
 28085                           	opt stack 0
 28086  01A4DC                     __buck_stop:
 28087                           	opt stack 18
 28088                           
 28089                           ;buck.c: 287: T2CONbits.T2OUTPS = 0b0000;
 28090                           
 28091                           ;incstack = 0
 28092  01A4DC  96CA               	bcf	4042,3,c	;volatile
 28093  01A4DE  98CA               	bcf	4042,4,c	;volatile
 28094  01A4E0  9ACA               	bcf	4042,5,c	;volatile
 28095  01A4E2  9CCA               	bcf	4042,6,c	;volatile
 28096                           
 28097                           ;buck.c: 288: PIR1bits.TMR2IF = 0;
 28098  01A4E4  929E               	bcf	3998,1,c	;volatile
 28099  01A4E6                     l2512:
 28100  01A4E6  A29E               	btfss	3998,1,c	;volatile
 28101  01A4E8  D7FE               	goto	l2512
 28102                           
 28103                           ;buck.c: 291: CCP1CONbits.CCP1M = 0b0000;
 28104  01A4EA  90BA               	bcf	4026,0,c	;volatile
 28105  01A4EC  92BA               	bcf	4026,1,c	;volatile
 28106  01A4EE  94BA               	bcf	4026,2,c	;volatile
 28107  01A4F0  96BA               	bcf	4026,3,c	;volatile
 28108                           
 28109                           ;buck.c: 293: T2CONbits.TMR2ON = 0;
 28110  01A4F2  94CA               	bcf	4042,2,c	;volatile
 28111                           
 28112                           ;buck.c: 295: LATBbits.LB1 = 0;
 28113  01A4F4  928A               	bcf	3978,1,c	;volatile
 28114                           
 28115                           ;buck.c: 297: if(buck_status<0x80)
 28116  01A4F6  0E80               	movlw	128
 28117  01A4F8  601C               	cpfslt	_buck_status,c
 28118  01A4FA  D003               	goto	l19664
 28119                           
 28120                           ;buck.c: 298: {
 28121                           ;buck.c: 299: buck_status = BUCK_STATUS_OFF;
 28122  01A4FC  0E00               	movlw	0
 28123  01A4FE  6E1C               	movwf	_buck_status,c
 28124                           
 28125                           ;buck.c: 300: }
 28126  01A500  0012               	return	
 28127  01A502                     l19664:
 28128                           
 28129                           ;buck.c: 301: else
 28130                           ;buck.c: 302: {
 28131                           ;buck.c: 303: buck_status = BUCK_STATUS_REMOTE_OFF;
 28132  01A502  0E80               	movlw	128
 28133  01A504  6E1C               	movwf	_buck_status,c
 28134  01A506  0012               	return	
 28135  01A508                     __end_of__buck_stop:
 28136                           	opt stack 0
 28137                           tblptru	equ	0xFF8
 28138                           tblptrh	equ	0xFF7
 28139                           tblptrl	equ	0xFF6
 28140                           tablat	equ	0xFF5
 28141                           prodh	equ	0xFF4
 28142                           prodl	equ	0xFF3
 28143                           intcon	equ	0xFF2
 28144                           intcon2	equ	0xFF1
 28145                           intcon3	equ	0xFF0
 28146                           postinc0	equ	0xFEE
 28147                           wreg	equ	0xFE8
 28148                           indf1	equ	0xFE7
 28149                           postinc1	equ	0xFE6
 28150                           postdec1	equ	0xFE5
 28151                           plusw1	equ	0xFE3
 28152                           fsr1h	equ	0xFE2
 28153                           fsr1l	equ	0xFE1
 28154                           indf2	equ	0xFDF
 28155                           postinc2	equ	0xFDE
 28156                           postdec2	equ	0xFDD
 28157                           plusw2	equ	0xFDB
 28158                           fsr2h	equ	0xFDA
 28159                           fsr2l	equ	0xFD9
 28160                           status	equ	0xFD8
 28161                           
 28162 ;; *************** function __buck_start *****************
 28163 ;; Defined at:
 28164 ;;		line 143 in file "buck.c"
 28165 ;; Parameters:    Size  Location     Type
 28166 ;;  mode            1    wreg     enum E8109
 28167 ;;  dutycycle       1   18[BANK0 ] unsigned char 
 28168 ;; Auto vars:     Size  Location     Type
 28169 ;;  mode            1   19[BANK0 ] enum E8109
 28170 ;;  cntr            1   21[BANK0 ] unsigned char 
 28171 ;;  startup_duty    1   20[BANK0 ] unsigned char 
 28172 ;; Return value:  Size  Location     Type
 28173 ;;                  1    wreg      void 
 28174 ;; Registers used:
 28175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28176 ;; Tracked objects:
 28177 ;;		On entry : 0/0
 28178 ;;		On exit  : 0/0
 28179 ;;		Unchanged: 0/0
 28180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28181 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28182 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28184 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28185 ;;Total ram usage:        4 bytes
 28186 ;; Hardware stack levels used:    1
 28187 ;; Hardware stack levels required when called:   12
 28188 ;; This function calls:
 28189 ;;		__buck_initial_dutycycle
 28190 ;;		__buck_set_dutycycle
 28191 ;;		__buck_set_sync_async
 28192 ;; This function is called by:
 28193 ;;		__buck_operate_local
 28194 ;;		__buck_operate_remote
 28195 ;; This function uses a non-reentrant model
 28196 ;;
 28197                           
 28198                           	psect	text121
 28199  017076                     __ptext121:
 28200                           	opt stack 0
 28201  017076                     __buck_start:
 28202                           	opt stack 16
 28203                           
 28204                           ;incstack = 0
 28205                           ;__buck_start@mode stored from wreg
 28206  017076  0100               	movlb	0	; () banked
 28207  017078  6F73               	movwf	__buck_start@mode& (0+255),b
 28208                           
 28209                           ;buck.c: 145: uint8_t startup_dutycycle;
 28210                           ;buck.c: 146: uint8_t cntr;
 28211                           ;buck.c: 149: calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibration = 0
      +                          ;
 28212  01707A  0E00               	movlw	0
 28213  01707C  0103               	movlb	3	; () banked
 28214  01707E  6F23               	movwf	(_calibrationParameters+35)& (0+255),b
 28215  017080  0E00               	movlw	0
 28216  017082  6F22               	movwf	(_calibrationParameters+34)& (0+255),b
 28217                           
 28218                           ;buck.c: 150: calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibration = 
      +                          0;
 28219  017084  0E00               	movlw	0
 28220  017086  0103               	movlb	3	; () banked
 28221  017088  6F2F               	movwf	(_calibrationParameters+47)& (0+255),b
 28222  01708A  0E00               	movlw	0
 28223  01708C  6F2E               	movwf	(_calibrationParameters+46)& (0+255),b
 28224                           
 28225                           ;buck.c: 153: for(cntr=0;cntr<4;++cntr)
 28226  01708E  0E00               	movlw	0
 28227  017090  0100               	movlb	0	; () banked
 28228  017092  6F75               	movwf	__buck_start@cntr& (0+255),b
 28229  017094                     l19614:
 28230                           
 28231                           ; BSR set to: 0
 28232  017094  0E03               	movlw	3
 28233  017096  0100               	movlb	0	; () banked
 28234  017098  6575               	cpfsgt	__buck_start@cntr& (0+255),b
 28235  01709A  D001               	goto	l19618
 28236  01709C  D021               	goto	l19624
 28237  01709E                     l19618:
 28238                           
 28239                           ; BSR set to: 0
 28240                           ;buck.c: 154: {
 28241                           ;buck.c: 155: calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibration -= 
      +                          os.input_current_adc[cntr];
 28242  01709E  0100               	movlb	0	; () banked
 28243  0170A0  5175               	movf	__buck_start@cntr& (0+255),w,b
 28244  0170A2  0D02               	mullw	2
 28245  0170A4  0E14               	movlw	low (_os+20)
 28246  0170A6  24F3               	addwf	prodl,w,c
 28247  0170A8  6ED9               	movwf	fsr2l,c
 28248  0170AA  0E02               	movlw	high (_os+20)
 28249  0170AC  20F4               	addwfc	prodh,w,c
 28250  0170AE  6EDA               	movwf	fsr2h,c
 28251  0170B0  50DE               	movf	postinc2,w,c
 28252  0170B2  0103               	movlb	3	; () banked
 28253  0170B4  5F22               	subwf	(_calibrationParameters+34)& (0+255),f,b
 28254  0170B6  50DD               	movf	postdec2,w,c
 28255  0170B8  0103               	movlb	3	; () banked
 28256  0170BA  5B23               	subwfb	(_calibrationParameters+35)& (0+255),f,b
 28257                           
 28258                           ;buck.c: 156: calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibration -=
      +                           os.output_current_adc[cntr];
 28259  0170BC  0100               	movlb	0	; () banked
 28260  0170BE  5175               	movf	__buck_start@cntr& (0+255),w,b
 28261  0170C0  0D02               	mullw	2
 28262  0170C2  0E29               	movlw	low (_os+41)
 28263  0170C4  24F3               	addwf	prodl,w,c
 28264  0170C6  6ED9               	movwf	fsr2l,c
 28265  0170C8  0E02               	movlw	high (_os+41)
 28266  0170CA  20F4               	addwfc	prodh,w,c
 28267  0170CC  6EDA               	movwf	fsr2h,c
 28268  0170CE  50DE               	movf	postinc2,w,c
 28269  0170D0  0103               	movlb	3	; () banked
 28270  0170D2  5F2E               	subwf	(_calibrationParameters+46)& (0+255),f,b
 28271  0170D4  50DD               	movf	postdec2,w,c
 28272  0170D6  0103               	movlb	3	; () banked
 28273  0170D8  5B2F               	subwfb	(_calibrationParameters+47)& (0+255),f,b
 28274                           
 28275                           ; BSR set to: 3
 28276  0170DA  0100               	movlb	0	; () banked
 28277  0170DC  2B75               	incf	__buck_start@cntr& (0+255),f,b
 28278  0170DE  D7DA               	goto	l19614
 28279  0170E0                     l19624:
 28280                           
 28281                           ; BSR set to: 0
 28282                           ;buck.c: 159: }
 28283                           ;buck.c: 163: PR2 = 63;
 28284  0170E0  0E3F               	movlw	63
 28285  0170E2  6ECB               	movwf	4043,c	;volatile
 28286                           
 28287                           ;buck.c: 165: TMR2 = 0x00;
 28288  0170E4  0E00               	movlw	0
 28289  0170E6  6ECC               	movwf	4044,c	;volatile
 28290                           
 28291                           ; BSR set to: 0
 28292                           ;buck.c: 167: T2CONbits.T2OUTPS = 0b1111;
 28293  0170E8  86CA               	bsf	4042,3,c	;volatile
 28294  0170EA  88CA               	bsf	4042,4,c	;volatile
 28295  0170EC  8ACA               	bsf	4042,5,c	;volatile
 28296  0170EE  8CCA               	bsf	4042,6,c	;volatile
 28297                           
 28298                           ; BSR set to: 0
 28299                           ;buck.c: 169: PIR1bits.TMR2IF = 0;
 28300  0170F0  929E               	bcf	3998,1,c	;volatile
 28301                           
 28302                           ; BSR set to: 0
 28303                           ;buck.c: 172: if(buck_status<0x80)
 28304  0170F2  0E80               	movlw	128
 28305  0170F4  601C               	cpfslt	_buck_status,c
 28306  0170F6  D002               	goto	l19634
 28307                           
 28308                           ; BSR set to: 0
 28309                           ;buck.c: 173: {
 28310                           ;buck.c: 174: buck_status = BUCK_STATUS_SYNCHRONOUS;
 28311  0170F8  0E03               	movlw	3
 28312  0170FA  D001               	goto	L15
 28313  0170FC                     l19634:
 28314                           
 28315                           ; BSR set to: 0
 28316                           ;buck.c: 176: else
 28317                           ;buck.c: 177: {
 28318                           ;buck.c: 178: buck_status = BUCK_STATUS_REMOTE_SYNCHRONOUS;
 28319  0170FC  0E83               	movlw	131
 28320  0170FE                     L15:
 28321  0170FE  6E1C               	movwf	_buck_status,c
 28322                           
 28323                           ; BSR set to: 0
 28324                           ;buck.c: 179: }
 28325                           ;buck.c: 182: CCP1CON = 0x00;
 28326  017100  0E00               	movlw	0
 28327  017102  6EBA               	movwf	4026,c	;volatile
 28328                           
 28329                           ; BSR set to: 0
 28330                           ;buck.c: 184: startup_dutycycle = _buck_initial_dutycycle();
 28331  017104  ECA7  F0B8         	call	__buck_initial_dutycycle	;wreg free
 28332  017108  0100               	movlb	0	; () banked
 28333  01710A  6F74               	movwf	__buck_start@startup_dutycycle& (0+255),b
 28334                           
 28335                           ; BSR set to: 0
 28336                           ;buck.c: 186: _buck_set_dutycycle(startup_dutycycle);
 28337  01710C  0100               	movlb	0	; () banked
 28338  01710E  5174               	movf	__buck_start@startup_dutycycle& (0+255),w,b
 28339  017110  EC0C  F0C6         	call	__buck_set_dutycycle
 28340                           
 28341                           ;buck.c: 188: INTCONbits.GIE = 0;
 28342  017114  9EF2               	bcf	intcon,7,c	;volatile
 28343                           
 28344                           ;buck.c: 190: T2CONbits.TMR2ON = 1;
 28345  017116  84CA               	bsf	4042,2,c	;volatile
 28346                           
 28347                           ;buck.c: 192: CCP1CON |= 0b00001100;
 28348  017118  0E0C               	movlw	12
 28349  01711A  12BA               	iorwf	4026,f,c	;volatile
 28350                           
 28351                           ;buck.c: 194: CCP1CON |= 0b10000000;
 28352  01711C  8EBA               	bsf	4026,7,c	;volatile
 28353                           
 28354                           ;buck.c: 196: INTCONbits.GIE = 1;
 28355  01711E  8EF2               	bsf	intcon,7,c	;volatile
 28356  017120                     l2486:
 28357  017120  A29E               	btfss	3998,1,c	;volatile
 28358  017122  D7FE               	goto	l2486
 28359                           
 28360                           ;buck.c: 202: if(mode==BUCK_MODE_SYNCHRONOUS)
 28361  017124  0100               	movlb	0	; () banked
 28362  017126  0573               	decf	__buck_start@mode& (0+255),w,b
 28363  017128  A4D8               	btfss	status,2,c
 28364  01712A  D00B               	goto	l19656
 28365                           
 28366                           ; BSR set to: 0
 28367                           ;buck.c: 203: {
 28368                           ;buck.c: 205: if(dutycycle!=startup_dutycycle)
 28369  01712C  0100               	movlb	0	; () banked
 28370  01712E  5174               	movf	__buck_start@startup_dutycycle& (0+255),w,b
 28371  017130  0100               	movlb	0	; () banked
 28372  017132  1972               	xorwf	__buck_start@dutycycle& (0+255),w,b
 28373  017134  B4D8               	btfsc	status,2,c
 28374  017136  0012               	return	
 28375                           
 28376                           ; BSR set to: 0
 28377                           ;buck.c: 206: {
 28378                           ;buck.c: 207: _buck_set_dutycycle(dutycycle);
 28379  017138  0100               	movlb	0	; () banked
 28380  01713A  5172               	movf	__buck_start@dutycycle& (0+255),w,b
 28381  01713C  EC0C  F0C6         	call	__buck_set_dutycycle
 28382                           
 28383                           ;buck.c: 208: }
 28384                           ;buck.c: 209: }
 28385  017140  0012               	return	
 28386  017142                     l19656:
 28387                           
 28388                           ;buck.c: 210: else
 28389                           ;buck.c: 211: {
 28390                           ;buck.c: 213: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, dutycycle);
 28391  017142  C072  F062         	movff	__buck_start@dutycycle,__buck_set_sync_async@new_dutycycle
 28392  017146  0E00               	movlw	0
 28393  017148  ECB1  F0C7         	call	__buck_set_sync_async
 28394  01714C  0012               	return	
 28395  01714E                     __end_of__buck_start:
 28396                           	opt stack 0
 28397                           tblptru	equ	0xFF8
 28398                           tblptrh	equ	0xFF7
 28399                           tblptrl	equ	0xFF6
 28400                           tablat	equ	0xFF5
 28401                           prodh	equ	0xFF4
 28402                           prodl	equ	0xFF3
 28403                           intcon	equ	0xFF2
 28404                           intcon2	equ	0xFF1
 28405                           intcon3	equ	0xFF0
 28406                           postinc0	equ	0xFEE
 28407                           wreg	equ	0xFE8
 28408                           indf1	equ	0xFE7
 28409                           postinc1	equ	0xFE6
 28410                           postdec1	equ	0xFE5
 28411                           plusw1	equ	0xFE3
 28412                           fsr1h	equ	0xFE2
 28413                           fsr1l	equ	0xFE1
 28414                           indf2	equ	0xFDF
 28415                           postinc2	equ	0xFDE
 28416                           postdec2	equ	0xFDD
 28417                           plusw2	equ	0xFDB
 28418                           fsr2h	equ	0xFDA
 28419                           fsr2l	equ	0xFD9
 28420                           status	equ	0xFD8
 28421                           
 28422 ;; *************** function __buck_set_sync_async *****************
 28423 ;; Defined at:
 28424 ;;		line 217 in file "buck.c"
 28425 ;; Parameters:    Size  Location     Type
 28426 ;;  mode            1    wreg     enum E8109
 28427 ;;  new_dutycycl    1    2[BANK0 ] unsigned char 
 28428 ;; Auto vars:     Size  Location     Type
 28429 ;;  mode            1    3[BANK0 ] enum E8109
 28430 ;; Return value:  Size  Location     Type
 28431 ;;                  1    wreg      void 
 28432 ;; Registers used:
 28433 ;;		wreg, status,2, status,0, cstack
 28434 ;; Tracked objects:
 28435 ;;		On entry : 0/0
 28436 ;;		On exit  : 0/0
 28437 ;;		Unchanged: 0/0
 28438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28439 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28440 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28442 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28443 ;;Total ram usage:        2 bytes
 28444 ;; Hardware stack levels used:    1
 28445 ;; Hardware stack levels required when called:   11
 28446 ;; This function calls:
 28447 ;;		__buck_set_dutycycle
 28448 ;; This function is called by:
 28449 ;;		__buck_start
 28450 ;;		__buck_operate_local
 28451 ;;		__buck_operate_remote
 28452 ;; This function uses a non-reentrant model
 28453 ;;
 28454                           
 28455                           	psect	text122
 28456  018F62                     __ptext122:
 28457                           	opt stack 0
 28458  018F62                     __buck_set_sync_async:
 28459                           	opt stack 16
 28460                           
 28461                           ;incstack = 0
 28462                           ;__buck_set_sync_async@mode stored from wreg
 28463  018F62  0100               	movlb	0	; () banked
 28464  018F64  6F63               	movwf	__buck_set_sync_async@mode& (0+255),b
 28465                           
 28466                           ;buck.c: 219: switch(mode)
 28467  018F66  D02E               	goto	l18982
 28468  018F68                     l2496:
 28469                           
 28470                           ; BSR set to: 0
 28471                           ;buck.c: 226: T2CONbits.T2OUTPS = 0b0000;
 28472  018F68  96CA               	bcf	4042,3,c	;volatile
 28473  018F6A  98CA               	bcf	4042,4,c	;volatile
 28474  018F6C  9ACA               	bcf	4042,5,c	;volatile
 28475  018F6E  9CCA               	bcf	4042,6,c	;volatile
 28476                           
 28477                           ;buck.c: 228: INTCONbits.GIE = 0;
 28478  018F70  9EF2               	bcf	intcon,7,c	;volatile
 28479                           
 28480                           ;buck.c: 230: PIR1bits.TMR2IF = 0;
 28481  018F72  929E               	bcf	3998,1,c	;volatile
 28482  018F74                     l2497:
 28483  018F74  A29E               	btfss	3998,1,c	;volatile
 28484  018F76  D7FE               	goto	l2497
 28485                           
 28486                           ;buck.c: 234: CCP1CONbits.P1M1 = 0;
 28487  018F78  9EBA               	bcf	4026,7,c	;volatile
 28488                           
 28489                           ;buck.c: 235: CCP1CONbits.P1M0 = 0;
 28490  018F7A  9CBA               	bcf	4026,6,c	;volatile
 28491                           
 28492                           ;buck.c: 237: if(buck_status<0x80)
 28493  018F7C  0E80               	movlw	128
 28494  018F7E  601C               	cpfslt	_buck_status,c
 28495  018F80  D002               	goto	l18954
 28496                           
 28497                           ;buck.c: 238: {
 28498                           ;buck.c: 239: buck_status = BUCK_STATUS_ASYNCHRONOUS;
 28499  018F82  0E02               	movlw	2
 28500  018F84  D001               	goto	L16
 28501  018F86                     l18954:
 28502                           
 28503                           ;buck.c: 241: else
 28504                           ;buck.c: 242: {
 28505                           ;buck.c: 243: buck_status = BUCK_STATUS_REMOTE_ASYNCHRONOUS;
 28506  018F86  0E82               	movlw	130
 28507  018F88                     L16:
 28508  018F88  6E1C               	movwf	_buck_status,c
 28509                           
 28510                           ;buck.c: 244: }
 28511                           ;buck.c: 246: _buck_set_dutycycle(new_dutycycle);
 28512  018F8A  0100               	movlb	0	; () banked
 28513  018F8C  5162               	movf	__buck_set_sync_async@new_dutycycle& (0+255),w,b
 28514  018F8E  EC0C  F0C6         	call	__buck_set_dutycycle
 28515                           
 28516                           ;buck.c: 248: INTCONbits.GIE = 1;
 28517  018F92  8EF2               	bsf	intcon,7,c	;volatile
 28518                           
 28519                           ;buck.c: 249: break;
 28520  018F94  0012               	return	
 28521  018F96                     l18960:
 28522                           
 28523                           ;buck.c: 255: if(buck_status<0x80)
 28524  018F96  0E80               	movlw	128
 28525  018F98  601C               	cpfslt	_buck_status,c
 28526  018F9A  D002               	goto	l18964
 28527                           
 28528                           ;buck.c: 256: {
 28529                           ;buck.c: 257: buck_status = BUCK_STATUS_SYNCHRONOUS;
 28530  018F9C  0E03               	movlw	3
 28531  018F9E  D001               	goto	L17
 28532  018FA0                     l18964:
 28533                           
 28534                           ;buck.c: 259: else
 28535                           ;buck.c: 260: {
 28536                           ;buck.c: 261: buck_status = BUCK_STATUS_REMOTE_SYNCHRONOUS;
 28537  018FA0  0E83               	movlw	131
 28538  018FA2                     L17:
 28539  018FA2  6E1C               	movwf	_buck_status,c
 28540                           
 28541                           ;buck.c: 262: }
 28542                           ;buck.c: 265: T2CONbits.T2OUTPS = 0b0000;
 28543  018FA4  96CA               	bcf	4042,3,c	;volatile
 28544  018FA6  98CA               	bcf	4042,4,c	;volatile
 28545  018FA8  9ACA               	bcf	4042,5,c	;volatile
 28546  018FAA  9CCA               	bcf	4042,6,c	;volatile
 28547                           
 28548                           ;buck.c: 267: INTCONbits.GIE = 0;
 28549  018FAC  9EF2               	bcf	intcon,7,c	;volatile
 28550                           
 28551                           ;buck.c: 269: PIR1bits.TMR2IF = 0;
 28552  018FAE  929E               	bcf	3998,1,c	;volatile
 28553  018FB0                     l2506:
 28554  018FB0  A29E               	btfss	3998,1,c	;volatile
 28555  018FB2  D7FE               	goto	l2506
 28556                           
 28557                           ;buck.c: 273: _buck_set_dutycycle(new_dutycycle);
 28558  018FB4  0100               	movlb	0	; () banked
 28559  018FB6  5162               	movf	__buck_set_sync_async@new_dutycycle& (0+255),w,b
 28560  018FB8  EC0C  F0C6         	call	__buck_set_dutycycle
 28561                           
 28562                           ;buck.c: 275: CCP1CONbits.P1M1 = 1;
 28563  018FBC  8EBA               	bsf	4026,7,c	;volatile
 28564                           
 28565                           ;buck.c: 276: CCP1CONbits.P1M0 = 0;
 28566  018FBE  9CBA               	bcf	4026,6,c	;volatile
 28567                           
 28568                           ;buck.c: 278: INTCONbits.GIE = 1;
 28569  018FC0  8EF2               	bsf	intcon,7,c	;volatile
 28570                           
 28571                           ;buck.c: 280: }
 28572                           
 28573                           ;buck.c: 279: break;
 28574  018FC2  0012               	return	
 28575  018FC4                     l18982:
 28576  018FC4  0100               	movlb	0	; () banked
 28577  018FC6  5163               	movf	__buck_set_sync_async@mode& (0+255),w,b
 28578                           
 28579                           ; Switch size 1, requested type "space"
 28580                           ; Number of cases is 2, Range of values is 0 to 1
 28581                           ; switch strategies available:
 28582                           ; Name         Instructions Cycles
 28583                           ; simple_byte            7     4 (average)
 28584                           ;	Chosen strategy is simple_byte
 28585  018FC8  0A00               	xorlw	0	; case 0
 28586  018FCA  B4D8               	btfsc	status,2,c
 28587  018FCC  D7CD               	goto	l2496
 28588  018FCE  0A01               	xorlw	1	; case 1
 28589  018FD0  A4D8               	btfss	status,2,c
 28590  018FD2  0012               	return	
 28591  018FD4  D7E0               	goto	l18960
 28592  018FD6                     __end_of__buck_set_sync_async:
 28593                           	opt stack 0
 28594                           tblptru	equ	0xFF8
 28595                           tblptrh	equ	0xFF7
 28596                           tblptrl	equ	0xFF6
 28597                           tablat	equ	0xFF5
 28598                           prodh	equ	0xFF4
 28599                           prodl	equ	0xFF3
 28600                           intcon	equ	0xFF2
 28601                           intcon2	equ	0xFF1
 28602                           intcon3	equ	0xFF0
 28603                           postinc0	equ	0xFEE
 28604                           wreg	equ	0xFE8
 28605                           indf1	equ	0xFE7
 28606                           postinc1	equ	0xFE6
 28607                           postdec1	equ	0xFE5
 28608                           plusw1	equ	0xFE3
 28609                           fsr1h	equ	0xFE2
 28610                           fsr1l	equ	0xFE1
 28611                           indf2	equ	0xFDF
 28612                           postinc2	equ	0xFDE
 28613                           postdec2	equ	0xFDD
 28614                           plusw2	equ	0xFDB
 28615                           fsr2h	equ	0xFDA
 28616                           fsr2l	equ	0xFD9
 28617                           status	equ	0xFD8
 28618                           
 28619 ;; *************** function __buck_set_dutycycle *****************
 28620 ;; Defined at:
 28621 ;;		line 98 in file "buck.c"
 28622 ;; Parameters:    Size  Location     Type
 28623 ;;  dutyCycle       1    wreg     unsigned char 
 28624 ;; Auto vars:     Size  Location     Type
 28625 ;;  dutyCycle       1    1[BANK0 ] unsigned char 
 28626 ;; Return value:  Size  Location     Type
 28627 ;;                  1    wreg      void 
 28628 ;; Registers used:
 28629 ;;		wreg, status,2, status,0
 28630 ;; Tracked objects:
 28631 ;;		On entry : 0/0
 28632 ;;		On exit  : 0/0
 28633 ;;		Unchanged: 0/0
 28634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28636 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28637 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28638 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28639 ;;Total ram usage:        2 bytes
 28640 ;; Hardware stack levels used:    1
 28641 ;; Hardware stack levels required when called:   10
 28642 ;; This function calls:
 28643 ;;		Nothing
 28644 ;; This function is called by:
 28645 ;;		__buck_start
 28646 ;;		__buck_set_sync_async
 28647 ;;		__buck_operate_local
 28648 ;;		__buck_operate_remote
 28649 ;; This function uses a non-reentrant model
 28650 ;;
 28651                           
 28652                           	psect	text123
 28653  018C18                     __ptext123:
 28654                           	opt stack 0
 28655  018C18                     __buck_set_dutycycle:
 28656                           	opt stack 16
 28657                           
 28658                           ;incstack = 0
 28659                           ;__buck_set_dutycycle@dutyCycle stored from wreg
 28660  018C18  0100               	movlb	0	; () banked
 28661  018C1A  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 28662                           
 28663                           ;buck.c: 101: if(dutyCycle>242)
 28664  018C1C  0EF2               	movlw	242
 28665  018C1E  0100               	movlb	0	; () banked
 28666  018C20  6561               	cpfsgt	__buck_set_dutycycle@dutyCycle& (0+255),b
 28667  018C22  D003               	goto	l18604
 28668                           
 28669                           ; BSR set to: 0
 28670                           ;buck.c: 102: dutyCycle = 242;
 28671  018C24  0EF2               	movlw	242
 28672  018C26  0100               	movlb	0	; () banked
 28673  018C28  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 28674  018C2A                     l18604:
 28675                           
 28676                           ; BSR set to: 0
 28677                           ;buck.c: 103: if(buck_status==BUCK_STATUS_SYNCHRONOUS || buck_status==BUCK_STATUS_REMOTE
      +                          _SYNCHRONOUS)
 28678  018C2A  0E03               	movlw	3
 28679  018C2C  181C               	xorwf	_buck_status,w,c
 28680  018C2E  B4D8               	btfsc	status,2,c
 28681  018C30  D004               	goto	l18608
 28682                           
 28683                           ; BSR set to: 0
 28684  018C32  0E83               	movlw	131
 28685  018C34  181C               	xorwf	_buck_status,w,c
 28686  018C36  A4D8               	btfss	status,2,c
 28687  018C38  D007               	goto	l18612
 28688  018C3A                     l18608:
 28689                           
 28690                           ; BSR set to: 0
 28691                           ;buck.c: 104: {
 28692                           ;buck.c: 105: if(dutyCycle<150)
 28693  018C3A  0E96               	movlw	150
 28694  018C3C  0100               	movlb	0	; () banked
 28695  018C3E  6161               	cpfslt	__buck_set_dutycycle@dutyCycle& (0+255),b
 28696  018C40  D003               	goto	l18612
 28697                           
 28698                           ; BSR set to: 0
 28699                           ;buck.c: 106: dutyCycle = 150;
 28700  018C42  0E96               	movlw	150
 28701  018C44  0100               	movlb	0	; () banked
 28702  018C46  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 28703  018C48                     l18612:
 28704                           
 28705                           ; BSR set to: 0
 28706                           ;buck.c: 107: }
 28707                           ;buck.c: 108: if(buck_status==BUCK_STATUS_ASYNCHRONOUS || buck_status==BUCK_STATUS_REMOT
      +                          E_ASYNCHRONOUS)
 28708  018C48  0E02               	movlw	2
 28709  018C4A  181C               	xorwf	_buck_status,w,c
 28710  018C4C  B4D8               	btfsc	status,2,c
 28711  018C4E  D004               	goto	l18616
 28712                           
 28713                           ; BSR set to: 0
 28714  018C50  0E82               	movlw	130
 28715  018C52  181C               	xorwf	_buck_status,w,c
 28716  018C54  A4D8               	btfss	status,2,c
 28717  018C56  D007               	goto	l18620
 28718  018C58                     l18616:
 28719                           
 28720                           ; BSR set to: 0
 28721                           ;buck.c: 109: {
 28722                           ;buck.c: 110: if(dutyCycle<40)
 28723  018C58  0E28               	movlw	40
 28724  018C5A  0100               	movlb	0	; () banked
 28725  018C5C  6161               	cpfslt	__buck_set_dutycycle@dutyCycle& (0+255),b
 28726  018C5E  D003               	goto	l18620
 28727                           
 28728                           ; BSR set to: 0
 28729                           ;buck.c: 111: dutyCycle = 40;
 28730  018C60  0E28               	movlw	40
 28731  018C62  0100               	movlb	0	; () banked
 28732  018C64  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 28733  018C66                     l18620:
 28734                           
 28735                           ; BSR set to: 0
 28736                           ;buck.c: 112: }
 28737                           ;buck.c: 114: buck_dutycycle = dutyCycle;
 28738  018C66  C061  F0E4         	movff	__buck_set_dutycycle@dutyCycle,_buck_dutycycle
 28739                           
 28740                           ; BSR set to: 0
 28741                           ;buck.c: 116: INTCONbits.GIE = 0;
 28742  018C6A  9EF2               	bcf	intcon,7,c	;volatile
 28743                           
 28744                           ; BSR set to: 0
 28745                           ;buck.c: 118: CCP1CONbits.DC1B = (uint8_t) (dutyCycle&0b11);
 28746  018C6C  C061  F060         	movff	__buck_set_dutycycle@dutyCycle,??__buck_set_dutycycle
 28747  018C70  0E03               	movlw	3
 28748  018C72  0100               	movlb	0	; () banked
 28749  018C74  1760               	andwf	??__buck_set_dutycycle& (0+255),f,b
 28750  018C76  0100               	movlb	0	; () banked
 28751  018C78  3B60               	swapf	??__buck_set_dutycycle& (0+255),f,b
 28752  018C7A  50BA               	movf	4026,w,c	;volatile
 28753  018C7C  0100               	movlb	0	; () banked
 28754  018C7E  1960               	xorwf	??__buck_set_dutycycle& (0+255),w,b
 28755  018C80  0BCF               	andlw	-49
 28756  018C82  1960               	xorwf	??__buck_set_dutycycle& (0+255),w,b
 28757  018C84  6EBA               	movwf	4026,c	;volatile
 28758                           
 28759                           ; BSR set to: 0
 28760                           ;buck.c: 120: CCPR1L = (uint8_t) (dutyCycle>>2);
 28761  018C86  0100               	movlb	0	; () banked
 28762  018C88  4161               	rrncf	__buck_set_dutycycle@dutyCycle& (0+255),w,b
 28763  018C8A  42E8               	rrncf	wreg,f,c
 28764  018C8C  0B3F               	andlw	63
 28765  018C8E  6EBB               	movwf	4027,c	;volatile
 28766                           
 28767                           ; BSR set to: 0
 28768                           ;buck.c: 122: INTCONbits.GIE = 1;
 28769  018C90  8EF2               	bsf	intcon,7,c	;volatile
 28770                           
 28771                           ; BSR set to: 0
 28772  018C92  0012               	return		;funcret
 28773  018C94                     __end_of__buck_set_dutycycle:
 28774                           	opt stack 0
 28775                           tblptru	equ	0xFF8
 28776                           tblptrh	equ	0xFF7
 28777                           tblptrl	equ	0xFF6
 28778                           tablat	equ	0xFF5
 28779                           prodh	equ	0xFF4
 28780                           prodl	equ	0xFF3
 28781                           intcon	equ	0xFF2
 28782                           intcon2	equ	0xFF1
 28783                           intcon3	equ	0xFF0
 28784                           postinc0	equ	0xFEE
 28785                           wreg	equ	0xFE8
 28786                           indf1	equ	0xFE7
 28787                           postinc1	equ	0xFE6
 28788                           postdec1	equ	0xFE5
 28789                           plusw1	equ	0xFE3
 28790                           fsr1h	equ	0xFE2
 28791                           fsr1l	equ	0xFE1
 28792                           indf2	equ	0xFDF
 28793                           postinc2	equ	0xFDE
 28794                           postdec2	equ	0xFDD
 28795                           plusw2	equ	0xFDB
 28796                           fsr2h	equ	0xFDA
 28797                           fsr2l	equ	0xFD9
 28798                           status	equ	0xFD8
 28799                           
 28800 ;; *************** function __buck_initial_dutycycle *****************
 28801 ;; Defined at:
 28802 ;;		line 81 in file "buck.c"
 28803 ;; Parameters:    Size  Location     Type
 28804 ;;		None
 28805 ;; Auto vars:     Size  Location     Type
 28806 ;;  dc              4   14[BANK0 ] unsigned long 
 28807 ;; Return value:  Size  Location     Type
 28808 ;;                  1    wreg      unsigned char 
 28809 ;; Registers used:
 28810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28811 ;; Tracked objects:
 28812 ;;		On entry : 0/0
 28813 ;;		On exit  : 0/0
 28814 ;;		Unchanged: 0/0
 28815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28817 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28818 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28819 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28820 ;;Total ram usage:        5 bytes
 28821 ;; Hardware stack levels used:    1
 28822 ;; Hardware stack levels required when called:   11
 28823 ;; This function calls:
 28824 ;;		___lldiv
 28825 ;; This function is called by:
 28826 ;;		__buck_start
 28827 ;;		__buck_operate_local
 28828 ;;		__buck_operate_remote
 28829 ;; This function uses a non-reentrant model
 28830 ;;
 28831                           
 28832                           	psect	text124
 28833  01714E                     __ptext124:
 28834                           	opt stack 0
 28835  01714E                     __buck_initial_dutycycle:
 28836                           	opt stack 16
 28837                           
 28838                           ;buck.c: 83: uint32_t dc;
 28839                           ;buck.c: 85: if(os.input_voltage<os.output_voltage)
 28840                           
 28841                           ; BSR set to: 0
 28842                           ;incstack = 0
 28843  01714E  0102               	movlb	2	; () banked
 28844  017150  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 28845  017152  0102               	movlb	2	; () banked
 28846  017154  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 28847  017156  0102               	movlb	2	; () banked
 28848  017158  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 28849  01715A  0A80               	xorlw	128
 28850  01715C  0100               	movlb	0	; () banked
 28851  01715E  6F6D               	movwf	??__buck_initial_dutycycle& (0+255),b
 28852  017160  0102               	movlb	2	; () banked
 28853  017162  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 28854  017164  0A80               	xorlw	128
 28855  017166  0100               	movlb	0	; () banked
 28856  017168  596D               	subwfb	??__buck_initial_dutycycle& (0+255),w,b
 28857  01716A  B0D8               	btfsc	status,0,c
 28858  01716C  D002               	goto	l18932
 28859                           
 28860                           ; BSR set to: 0
 28861                           ;buck.c: 86: return 242;
 28862  01716E  0EF2               	movlw	242
 28863                           
 28864                           ; BSR set to: 0
 28865  017170  0012               	return	
 28866  017172                     l18932:
 28867                           
 28868                           ; BSR set to: 0
 28869                           ;buck.c: 87: dc = (uint32_t) os.output_voltage;
 28870  017172  EE22  F027         	lfsr	2,_os+39	;volatile
 28871  017176  CFDE F06E          	movff	postinc2,__buck_initial_dutycycle@dc
 28872  01717A  CFDD F06F          	movff	postdec2,__buck_initial_dutycycle@dc+1
 28873  01717E  0100               	movlb	0	; () banked
 28874  017180  0E00               	movlw	0
 28875  017182  BF6F               	btfsc	(__buck_initial_dutycycle@dc+1)& (0+255),7,b
 28876  017184  0EFF               	movlw	-1
 28877  017186  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 28878  017188  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 28879                           
 28880                           ; BSR set to: 0
 28881                           ;buck.c: 88: dc <<= 8;
 28882  01718A  C070  F071         	movff	__buck_initial_dutycycle@dc+2,__buck_initial_dutycycle@dc+3
 28883  01718E  C06F  F070         	movff	__buck_initial_dutycycle@dc+1,__buck_initial_dutycycle@dc+2
 28884  017192  C06E  F06F         	movff	__buck_initial_dutycycle@dc,__buck_initial_dutycycle@dc+1
 28885  017196  0100               	movlb	0	; () banked
 28886  017198  6B6E               	clrf	__buck_initial_dutycycle@dc& (0+255),b
 28887                           
 28888                           ; BSR set to: 0
 28889                           ;buck.c: 89: dc /= (uint16_t) os.input_voltage;
 28890  01719A  C06E  F060         	movff	__buck_initial_dutycycle@dc,___lldiv@dividend
 28891  01719E  C06F  F061         	movff	__buck_initial_dutycycle@dc+1,___lldiv@dividend+1
 28892  0171A2  C070  F062         	movff	__buck_initial_dutycycle@dc+2,___lldiv@dividend+2
 28893  0171A6  C071  F063         	movff	__buck_initial_dutycycle@dc+3,___lldiv@dividend+3
 28894  0171AA  C212  F064         	movff	_os+18,___lldiv@divisor	;volatile
 28895  0171AE  C213  F065         	movff	_os+19,___lldiv@divisor+1	;volatile
 28896  0171B2  0100               	movlb	0	; () banked
 28897  0171B4  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 28898  0171B6  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 28899  0171B8  ECF0  F0BC         	call	___lldiv	;wreg free
 28900  0171BC  C060  F06E         	movff	?___lldiv,__buck_initial_dutycycle@dc
 28901  0171C0  C061  F06F         	movff	?___lldiv+1,__buck_initial_dutycycle@dc+1
 28902  0171C4  C062  F070         	movff	?___lldiv+2,__buck_initial_dutycycle@dc+2
 28903  0171C8  C063  F071         	movff	?___lldiv+3,__buck_initial_dutycycle@dc+3
 28904                           
 28905                           ;buck.c: 91: if(dc>242)
 28906  0171CC  0100               	movlb	0	; () banked
 28907  0171CE  5171               	movf	(__buck_initial_dutycycle@dc+3)& (0+255),w,b
 28908  0171D0  0100               	movlb	0	; () banked
 28909  0171D2  1170               	iorwf	(__buck_initial_dutycycle@dc+2)& (0+255),w,b
 28910  0171D4  0100               	movlb	0	; () banked
 28911  0171D6  116F               	iorwf	(__buck_initial_dutycycle@dc+1)& (0+255),w,b
 28912  0171D8  E105               	bnz	u17860
 28913  0171DA  0EF3               	movlw	243
 28914  0171DC  0100               	movlb	0	; () banked
 28915  0171DE  5D6E               	subwf	__buck_initial_dutycycle@dc& (0+255),w,b
 28916  0171E0  A0D8               	btfss	status,0,c
 28917  0171E2  D009               	goto	l18942
 28918  0171E4                     u17860:
 28919                           
 28920                           ; BSR set to: 0
 28921                           ;buck.c: 92: dc = 242;
 28922  0171E4  0EF2               	movlw	242
 28923  0171E6  0100               	movlb	0	; () banked
 28924  0171E8  6F6E               	movwf	__buck_initial_dutycycle@dc& (0+255),b
 28925  0171EA  0E00               	movlw	0
 28926  0171EC  6F6F               	movwf	(__buck_initial_dutycycle@dc+1)& (0+255),b
 28927  0171EE  0E00               	movlw	0
 28928  0171F0  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 28929  0171F2  0E00               	movlw	0
 28930  0171F4  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 28931  0171F6                     l18942:
 28932                           
 28933                           ; BSR set to: 0
 28934                           ;buck.c: 93: if(dc<150)
 28935  0171F6  0100               	movlb	0	; () banked
 28936  0171F8  5171               	movf	(__buck_initial_dutycycle@dc+3)& (0+255),w,b
 28937  0171FA  0100               	movlb	0	; () banked
 28938  0171FC  1170               	iorwf	(__buck_initial_dutycycle@dc+2)& (0+255),w,b
 28939  0171FE  0100               	movlb	0	; () banked
 28940  017200  116F               	iorwf	(__buck_initial_dutycycle@dc+1)& (0+255),w,b
 28941  017202  E10E               	bnz	l2460
 28942  017204  0E96               	movlw	150
 28943  017206  0100               	movlb	0	; () banked
 28944  017208  5D6E               	subwf	__buck_initial_dutycycle@dc& (0+255),w,b
 28945  01720A  B0D8               	btfsc	status,0,c
 28946  01720C  D009               	goto	l2460
 28947                           
 28948                           ; BSR set to: 0
 28949                           ;buck.c: 94: dc = 150;
 28950  01720E  0E96               	movlw	150
 28951  017210  0100               	movlb	0	; () banked
 28952  017212  6F6E               	movwf	__buck_initial_dutycycle@dc& (0+255),b
 28953  017214  0E00               	movlw	0
 28954  017216  6F6F               	movwf	(__buck_initial_dutycycle@dc+1)& (0+255),b
 28955  017218  0E00               	movlw	0
 28956  01721A  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 28957  01721C  0E00               	movlw	0
 28958  01721E  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 28959  017220                     l2460:
 28960                           
 28961                           ; BSR set to: 0
 28962                           ;buck.c: 95: return (uint8_t) dc;
 28963  017220  0100               	movlb	0	; () banked
 28964  017222  516E               	movf	__buck_initial_dutycycle@dc& (0+255),w,b
 28965  017224  0012               	return	
 28966  017226                     __end_of__buck_initial_dutycycle:
 28967                           	opt stack 0
 28968                           tblptru	equ	0xFF8
 28969                           tblptrh	equ	0xFF7
 28970                           tblptrl	equ	0xFF6
 28971                           tablat	equ	0xFF5
 28972                           prodh	equ	0xFF4
 28973                           prodl	equ	0xFF3
 28974                           intcon	equ	0xFF2
 28975                           intcon2	equ	0xFF1
 28976                           intcon3	equ	0xFF0
 28977                           postinc0	equ	0xFEE
 28978                           wreg	equ	0xFE8
 28979                           indf1	equ	0xFE7
 28980                           postinc1	equ	0xFE6
 28981                           postdec1	equ	0xFE5
 28982                           plusw1	equ	0xFE3
 28983                           fsr1h	equ	0xFE2
 28984                           fsr1l	equ	0xFE1
 28985                           indf2	equ	0xFDF
 28986                           postinc2	equ	0xFDE
 28987                           postdec2	equ	0xFDD
 28988                           plusw2	equ	0xFDB
 28989                           fsr2h	equ	0xFDA
 28990                           fsr2l	equ	0xFD9
 28991                           status	equ	0xFD8
 28992                           
 28993 ;; *************** function ___lldiv *****************
 28994 ;; Defined at:
 28995 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lldiv.c"
 28996 ;; Parameters:    Size  Location     Type
 28997 ;;  dividend        4    0[BANK0 ] unsigned long 
 28998 ;;  divisor         4    4[BANK0 ] unsigned long 
 28999 ;; Auto vars:     Size  Location     Type
 29000 ;;  quotient        4    8[BANK0 ] unsigned long 
 29001 ;;  counter         1   12[BANK0 ] unsigned char 
 29002 ;; Return value:  Size  Location     Type
 29003 ;;                  4    0[BANK0 ] unsigned long 
 29004 ;; Registers used:
 29005 ;;		wreg, status,2, status,0
 29006 ;; Tracked objects:
 29007 ;;		On entry : 0/0
 29008 ;;		On exit  : 0/0
 29009 ;;		Unchanged: 0/0
 29010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29011 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29012 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29014 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29015 ;;Total ram usage:       13 bytes
 29016 ;; Hardware stack levels used:    1
 29017 ;; Hardware stack levels required when called:   10
 29018 ;; This function calls:
 29019 ;;		Nothing
 29020 ;; This function is called by:
 29021 ;;		__buck_initial_dutycycle
 29022 ;;		__get_output_power
 29023 ;;		_log_generate_entry
 29024 ;; This function uses a non-reentrant model
 29025 ;;
 29026                           
 29027                           	psect	text125
 29028  0179E0                     __ptext125:
 29029                           	opt stack 0
 29030  0179E0                     ___lldiv:
 29031                           	opt stack 18
 29032                           
 29033                           ; BSR set to: 0
 29034                           ;incstack = 0
 29035  0179E0  0E00               	movlw	0
 29036  0179E2  0100               	movlb	0	; () banked
 29037  0179E4  6F68               	movwf	___lldiv@quotient& (0+255),b
 29038  0179E6  0E00               	movlw	0
 29039  0179E8  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 29040  0179EA  0E00               	movlw	0
 29041  0179EC  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 29042  0179EE  0E00               	movlw	0
 29043  0179F0  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 29044                           
 29045                           ; BSR set to: 0
 29046  0179F2  0100               	movlb	0	; () banked
 29047  0179F4  5164               	movf	___lldiv@divisor& (0+255),w,b
 29048  0179F6  0100               	movlb	0	; () banked
 29049  0179F8  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 29050  0179FA  0100               	movlb	0	; () banked
 29051  0179FC  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 29052  0179FE  0100               	movlb	0	; () banked
 29053  017A00  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 29054  017A02  B4D8               	btfsc	status,2,c
 29055  017A04  D042               	goto	l3663
 29056                           
 29057                           ; BSR set to: 0
 29058  017A06  0E01               	movlw	1
 29059  017A08  0100               	movlb	0	; () banked
 29060  017A0A  6F6C               	movwf	___lldiv@counter& (0+255),b
 29061  017A0C  D008               	goto	l18686
 29062  017A0E                     l18684:
 29063                           
 29064                           ; BSR set to: 0
 29065  017A0E  0100               	movlb	0	; () banked
 29066  017A10  90D8               	bcf	status,0,c
 29067  017A12  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 29068  017A14  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 29069  017A16  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 29070  017A18  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 29071  017A1A  0100               	movlb	0	; () banked
 29072  017A1C  2B6C               	incf	___lldiv@counter& (0+255),f,b
 29073  017A1E                     l18686:
 29074                           
 29075                           ; BSR set to: 0
 29076  017A1E  0100               	movlb	0	; () banked
 29077  017A20  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 29078  017A22  D7F5               	goto	l18684
 29079  017A24                     l18688:
 29080                           
 29081                           ; BSR set to: 0
 29082  017A24  0100               	movlb	0	; () banked
 29083  017A26  90D8               	bcf	status,0,c
 29084  017A28  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 29085  017A2A  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 29086  017A2C  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 29087  017A2E  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 29088                           
 29089                           ; BSR set to: 0
 29090  017A30  0100               	movlb	0	; () banked
 29091  017A32  5164               	movf	___lldiv@divisor& (0+255),w,b
 29092  017A34  0100               	movlb	0	; () banked
 29093  017A36  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 29094  017A38  0100               	movlb	0	; () banked
 29095  017A3A  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 29096  017A3C  0100               	movlb	0	; () banked
 29097  017A3E  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 29098  017A40  0100               	movlb	0	; () banked
 29099  017A42  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 29100  017A44  0100               	movlb	0	; () banked
 29101  017A46  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 29102  017A48  0100               	movlb	0	; () banked
 29103  017A4A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 29104  017A4C  0100               	movlb	0	; () banked
 29105  017A4E  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 29106  017A50  A0D8               	btfss	status,0,c
 29107  017A52  D012               	goto	l18696
 29108                           
 29109                           ; BSR set to: 0
 29110  017A54  0100               	movlb	0	; () banked
 29111  017A56  5164               	movf	___lldiv@divisor& (0+255),w,b
 29112  017A58  0100               	movlb	0	; () banked
 29113  017A5A  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 29114  017A5C  0100               	movlb	0	; () banked
 29115  017A5E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 29116  017A60  0100               	movlb	0	; () banked
 29117  017A62  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 29118  017A64  0100               	movlb	0	; () banked
 29119  017A66  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 29120  017A68  0100               	movlb	0	; () banked
 29121  017A6A  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 29122  017A6C  0100               	movlb	0	; () banked
 29123  017A6E  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 29124  017A70  0100               	movlb	0	; () banked
 29125  017A72  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 29126                           
 29127                           ; BSR set to: 0
 29128  017A74  0100               	movlb	0	; () banked
 29129  017A76  8168               	bsf	___lldiv@quotient& (0+255),0,b
 29130  017A78                     l18696:
 29131                           
 29132                           ; BSR set to: 0
 29133  017A78  0100               	movlb	0	; () banked
 29134  017A7A  90D8               	bcf	status,0,c
 29135  017A7C  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 29136  017A7E  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 29137  017A80  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 29138  017A82  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 29139                           
 29140                           ; BSR set to: 0
 29141  017A84  0100               	movlb	0	; () banked
 29142  017A86  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 29143  017A88  D7CD               	goto	l18688
 29144  017A8A                     l3663:
 29145                           
 29146                           ; BSR set to: 0
 29147  017A8A  C068  F060         	movff	___lldiv@quotient,?___lldiv
 29148  017A8E  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 29149  017A92  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 29150  017A96  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 29151                           
 29152                           ; BSR set to: 0
 29153  017A9A  0012               	return		;funcret
 29154  017A9C                     __end_of___lldiv:
 29155                           	opt stack 0
 29156                           tblptru	equ	0xFF8
 29157                           tblptrh	equ	0xFF7
 29158                           tblptrl	equ	0xFF6
 29159                           tablat	equ	0xFF5
 29160                           prodh	equ	0xFF4
 29161                           prodl	equ	0xFF3
 29162                           intcon	equ	0xFF2
 29163                           intcon2	equ	0xFF1
 29164                           intcon3	equ	0xFF0
 29165                           postinc0	equ	0xFEE
 29166                           wreg	equ	0xFE8
 29167                           indf1	equ	0xFE7
 29168                           postinc1	equ	0xFE6
 29169                           postdec1	equ	0xFE5
 29170                           plusw1	equ	0xFE3
 29171                           fsr1h	equ	0xFE2
 29172                           fsr1l	equ	0xFE1
 29173                           indf2	equ	0xFDF
 29174                           postinc2	equ	0xFDE
 29175                           postdec2	equ	0xFDD
 29176                           plusw2	equ	0xFDB
 29177                           fsr2h	equ	0xFDA
 29178                           fsr2l	equ	0xFD9
 29179                           status	equ	0xFD8
 29180                           
 29181 ;; *************** function _adc_read *****************
 29182 ;; Defined at:
 29183 ;;		line 30 in file "adc.c"
 29184 ;; Parameters:    Size  Location     Type
 29185 ;;  channel         1    wreg     enum E8221
 29186 ;; Auto vars:     Size  Location     Type
 29187 ;;  channel         1    2[BANK0 ] enum E8221
 29188 ;;  adc_value       2    3[BANK0 ] unsigned int 
 29189 ;; Return value:  Size  Location     Type
 29190 ;;                  2    0[BANK0 ] unsigned int 
 29191 ;; Registers used:
 29192 ;;		wreg, status,2, status,0
 29193 ;; Tracked objects:
 29194 ;;		On entry : 0/0
 29195 ;;		On exit  : 0/0
 29196 ;;		Unchanged: 0/0
 29197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29198 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29199 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29201 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29202 ;;Total ram usage:        5 bytes
 29203 ;; Hardware stack levels used:    1
 29204 ;; Hardware stack levels required when called:   10
 29205 ;; This function calls:
 29206 ;;		Nothing
 29207 ;; This function is called by:
 29208 ;;		_main
 29209 ;; This function uses a non-reentrant model
 29210 ;;
 29211                           
 29212                           	psect	text126
 29213  018546                     __ptext126:
 29214                           	opt stack 0
 29215  018546                     _adc_read:
 29216                           	opt stack 20
 29217                           
 29218                           ; BSR set to: 0
 29219                           ;incstack = 0
 29220                           ;adc_read@channel stored from wreg
 29221  018546  0100               	movlb	0	; () banked
 29222  018548  6F62               	movwf	adc_read@channel& (0+255),b
 29223                           
 29224                           ;adc.c: 32: uint16_t adc_value;
 29225                           ;adc.c: 34: switch(channel)
 29226  01854A  D011               	goto	l22138
 29227  01854C                     l22130:
 29228                           
 29229                           ;adc.c: 37: ADCON0bits.CHS = 0b1100;
 29230  01854C  50C2               	movf	4034,w,c	;volatile
 29231  01854E  0BC3               	andlw	-61
 29232  018550  0930               	iorlw	48
 29233  018552  D007               	goto	L19
 29234  018554                     l22132:
 29235                           
 29236                           ;adc.c: 40: ADCON0bits.CHS = 0b0001;
 29237  018554  50C2               	movf	4034,w,c	;volatile
 29238  018556  0BC3               	andlw	-61
 29239  018558  0904               	iorlw	4
 29240  01855A  D003               	goto	L19
 29241  01855C                     l22134:
 29242                           
 29243                           ;adc.c: 43: ADCON0bits.CHS = 0b0010;
 29244  01855C  50C2               	movf	4034,w,c	;volatile
 29245  01855E  0BC3               	andlw	-61
 29246  018560  0908               	iorlw	8
 29247  018562                     L19:
 29248  018562  6EC2               	movwf	4034,c	;volatile
 29249                           
 29250                           ;adc.c: 44: break;
 29251  018564  D018               	goto	l22146
 29252  018566                     l2669:
 29253                           
 29254                           ; BSR set to: 0
 29255                           ;adc.c: 46: return 0xFFFF;
 29256  018566  0100               	movlb	0	; () banked
 29257  018568  6960               	setf	?_adc_read& (0+255),b
 29258  01856A  6961               	setf	(?_adc_read+1)& (0+255),b
 29259  01856C  0012               	return	
 29260  01856E                     l22138:
 29261  01856E  0100               	movlb	0	; () banked
 29262  018570  5162               	movf	adc_read@channel& (0+255),w,b
 29263                           
 29264                           ; Switch size 1, requested type "space"
 29265                           ; Number of cases is 3, Range of values is 0 to 2
 29266                           ; switch strategies available:
 29267                           ; Name         Instructions Cycles
 29268                           ; simple_byte           10     6 (average)
 29269                           ;	Chosen strategy is simple_byte
 29270  018572  0A00               	xorlw	0	; case 0
 29271  018574  B4D8               	btfsc	status,2,c
 29272  018576  D7EA               	goto	l22130
 29273  018578  0A01               	xorlw	1	; case 1
 29274  01857A  B4D8               	btfsc	status,2,c
 29275  01857C  D7EB               	goto	l22132
 29276  01857E  0A03               	xorlw	3	; case 2
 29277  018580  B4D8               	btfsc	status,2,c
 29278  018582  D7EC               	goto	l22134
 29279  018584  D7F0               	goto	l2669
 29280  018586                     l22140:
 29281                           
 29282                           ;adc.c: 53: _delay((unsigned long)((15)*(8000000/4000000.0)));
 29283  018586  0E0A               	movlw	10
 29284  018588                     u22897:
 29285  018588  2EE8               	decfsz	wreg,f,c
 29286  01858A  D7FE               	bra	u22897
 29287                           
 29288                           ;adc.c: 54: break;
 29289  01858C  D00C               	goto	l2673
 29290  01858E                     l22142:
 29291                           
 29292                           ;adc.c: 56: _delay((unsigned long)((90)*(8000000/4000000.0)));
 29293  01858E  0E3C               	movlw	60
 29294  018590                     u22907:
 29295  018590  2EE8               	decfsz	wreg,f,c
 29296  018592  D7FE               	bra	u22907
 29297                           
 29298                           ;adc.c: 58: }
 29299                           
 29300                           ;adc.c: 57: break;
 29301  018594  D008               	goto	l2673
 29302  018596                     l22146:
 29303  018596  0102               	movlb	2	; () banked
 29304  018598  5100               	movf	_os& (0+255),w,b	;volatile
 29305                           
 29306                           ; Switch size 1, requested type "space"
 29307                           ; Number of cases is 2, Range of values is 1 to 2
 29308                           ; switch strategies available:
 29309                           ; Name         Instructions Cycles
 29310                           ; simple_byte            7     4 (average)
 29311                           ;	Chosen strategy is simple_byte
 29312  01859A  0A01               	xorlw	1	; case 1
 29313  01859C  B4D8               	btfsc	status,2,c
 29314  01859E  D7F3               	goto	l22140
 29315  0185A0  0A03               	xorlw	3	; case 2
 29316  0185A2  B4D8               	btfsc	status,2,c
 29317  0185A4  D7F4               	goto	l22142
 29318  0185A6                     l2673:
 29319                           
 29320                           ;adc.c: 61: ADCON0bits.GO_NOT_DONE = 1;
 29321  0185A6  82C2               	bsf	4034,1,c	;volatile
 29322  0185A8                     l2675:
 29323  0185A8  B2C2               	btfsc	4034,1,c	;volatile
 29324  0185AA  D7FE               	goto	l2675
 29325                           
 29326                           ;adc.c: 67: adc_value = ADRESH;
 29327  0185AC  CFC4 F063          	movff	4036,adc_read@adc_value	;volatile
 29328  0185B0  0100               	movlb	0	; () banked
 29329  0185B2  6B64               	clrf	(adc_read@adc_value+1)& (0+255),b
 29330                           
 29331                           ; BSR set to: 0
 29332                           ;adc.c: 68: adc_value <<= 2;
 29333  0185B4  0100               	movlb	0	; () banked
 29334  0185B6  90D8               	bcf	status,0,c
 29335  0185B8  3763               	rlcf	adc_read@adc_value& (0+255),f,b
 29336  0185BA  3764               	rlcf	(adc_read@adc_value+1)& (0+255),f,b
 29337  0185BC  0100               	movlb	0	; () banked
 29338  0185BE  90D8               	bcf	status,0,c
 29339  0185C0  3763               	rlcf	adc_read@adc_value& (0+255),f,b
 29340  0185C2  3764               	rlcf	(adc_read@adc_value+1)& (0+255),f,b
 29341                           
 29342                           ; BSR set to: 0
 29343                           ;adc.c: 69: adc_value |= ADRESL;
 29344  0185C4  50C3               	movf	4035,w,c	;volatile
 29345  0185C6  0100               	movlb	0	; () banked
 29346  0185C8  1363               	iorwf	adc_read@adc_value& (0+255),f,b
 29347                           
 29348                           ; BSR set to: 0
 29349                           ;adc.c: 71: return adc_value;
 29350  0185CA  C063  F060         	movff	adc_read@adc_value,?_adc_read
 29351  0185CE  C064  F061         	movff	adc_read@adc_value+1,?_adc_read+1
 29352  0185D2  0012               	return	
 29353  0185D4                     __end_of_adc_read:
 29354                           	opt stack 0
 29355                           tblptru	equ	0xFF8
 29356                           tblptrh	equ	0xFF7
 29357                           tblptrl	equ	0xFF6
 29358                           tablat	equ	0xFF5
 29359                           prodh	equ	0xFF4
 29360                           prodl	equ	0xFF3
 29361                           intcon	equ	0xFF2
 29362                           intcon2	equ	0xFF1
 29363                           intcon3	equ	0xFF0
 29364                           postinc0	equ	0xFEE
 29365                           wreg	equ	0xFE8
 29366                           indf1	equ	0xFE7
 29367                           postinc1	equ	0xFE6
 29368                           postdec1	equ	0xFE5
 29369                           plusw1	equ	0xFE3
 29370                           fsr1h	equ	0xFE2
 29371                           fsr1l	equ	0xFE1
 29372                           indf2	equ	0xFDF
 29373                           postinc2	equ	0xFDE
 29374                           postdec2	equ	0xFDD
 29375                           plusw2	equ	0xFDB
 29376                           fsr2h	equ	0xFDA
 29377                           fsr2l	equ	0xFD9
 29378                           status	equ	0xFD8
 29379                           
 29380 ;; *************** function _adc_calibrate *****************
 29381 ;; Defined at:
 29382 ;;		line 20 in file "adc.c"
 29383 ;; Parameters:    Size  Location     Type
 29384 ;;		None
 29385 ;; Auto vars:     Size  Location     Type
 29386 ;;		None
 29387 ;; Return value:  Size  Location     Type
 29388 ;;                  1    wreg      void 
 29389 ;; Registers used:
 29390 ;;		None
 29391 ;; Tracked objects:
 29392 ;;		On entry : 0/0
 29393 ;;		On exit  : 0/0
 29394 ;;		Unchanged: 0/0
 29395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29400 ;;Total ram usage:        0 bytes
 29401 ;; Hardware stack levels used:    1
 29402 ;; Hardware stack levels required when called:   10
 29403 ;; This function calls:
 29404 ;;		Nothing
 29405 ;; This function is called by:
 29406 ;;		_main
 29407 ;; This function uses a non-reentrant model
 29408 ;;
 29409                           
 29410                           	psect	text127
 29411  01AB62                     __ptext127:
 29412                           	opt stack 0
 29413  01AB62                     _adc_calibrate:
 29414                           	opt stack 20
 29415                           
 29416                           ;adc.c: 22: ADCON1bits.ADCAL = 1;
 29417                           
 29418                           ; BSR set to: 0
 29419                           ;incstack = 0
 29420  01AB62  8CC1               	bsf	4033,6,c	;volatile
 29421                           
 29422                           ;adc.c: 24: ADCON0bits.GO_NOT_DONE = 1;
 29423  01AB64  82C2               	bsf	4034,1,c	;volatile
 29424  01AB66                     l2658:
 29425  01AB66  B2C2               	btfsc	4034,1,c	;volatile
 29426  01AB68  D7FE               	goto	l2658
 29427                           
 29428                           ;adc.c: 27: ADCON1bits.ADCAL = 0;
 29429  01AB6A  9CC1               	bcf	4033,6,c	;volatile
 29430  01AB6C  0012               	return		;funcret
 29431  01AB6E                     __end_of_adc_calibrate:
 29432                           	opt stack 0
 29433                           tblptru	equ	0xFF8
 29434                           tblptrh	equ	0xFF7
 29435                           tblptrl	equ	0xFF6
 29436                           tablat	equ	0xFF5
 29437                           prodh	equ	0xFF4
 29438                           prodl	equ	0xFF3
 29439                           intcon	equ	0xFF2
 29440                           intcon2	equ	0xFF1
 29441                           intcon3	equ	0xFF0
 29442                           postinc0	equ	0xFEE
 29443                           wreg	equ	0xFE8
 29444                           indf1	equ	0xFE7
 29445                           postinc1	equ	0xFE6
 29446                           postdec1	equ	0xFE5
 29447                           plusw1	equ	0xFE3
 29448                           fsr1h	equ	0xFE2
 29449                           fsr1l	equ	0xFE1
 29450                           indf2	equ	0xFDF
 29451                           postinc2	equ	0xFDE
 29452                           postdec2	equ	0xFDD
 29453                           plusw2	equ	0xFDB
 29454                           fsr2h	equ	0xFDA
 29455                           fsr2l	equ	0xFD9
 29456                           status	equ	0xFD8
 29457                           
 29458 ;; *************** function _adc_calculate_temperature *****************
 29459 ;; Defined at:
 29460 ;;		line 74 in file "adc.c"
 29461 ;; Parameters:    Size  Location     Type
 29462 ;;  adc_value       2   12[BANK0 ] unsigned int 
 29463 ;;  calibration     1   14[BANK0 ] enum E8142
 29464 ;; Auto vars:     Size  Location     Type
 29465 ;;  tmp             4   21[BANK0 ] long 
 29466 ;; Return value:  Size  Location     Type
 29467 ;;                  2   12[BANK0 ] int 
 29468 ;; Registers used:
 29469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29470 ;; Tracked objects:
 29471 ;;		On entry : 0/0
 29472 ;;		On exit  : 0/0
 29473 ;;		Unchanged: 0/0
 29474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29475 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29476 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29477 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29478 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29479 ;;Total ram usage:       13 bytes
 29480 ;; Hardware stack levels used:    1
 29481 ;; Hardware stack levels required when called:   11
 29482 ;; This function calls:
 29483 ;;		___lmul
 29484 ;; This function is called by:
 29485 ;;		_main
 29486 ;; This function uses a non-reentrant model
 29487 ;;
 29488                           
 29489                           	psect	text128
 29490  015EB8                     __ptext128:
 29491                           	opt stack 0
 29492  015EB8                     _adc_calculate_temperature:
 29493                           	opt stack 19
 29494                           
 29495                           ;adc.c: 76: int32_t tmp = (int32_t) adc_value;
 29496                           
 29497                           ;incstack = 0
 29498  015EB8  C06C  F075         	movff	adc_calculate_temperature@adc_value,adc_calculate_temperature@tmp
 29499  015EBC  C06D  F076         	movff	adc_calculate_temperature@adc_value+1,adc_calculate_temperature@tmp+1
 29500  015EC0  0100               	movlb	0	; () banked
 29501  015EC2  6B77               	clrf	(adc_calculate_temperature@tmp+2)& (0+255),b
 29502  015EC4  6B78               	clrf	(adc_calculate_temperature@tmp+3)& (0+255),b
 29503                           
 29504                           ; BSR set to: 0
 29505                           ;adc.c: 77: tmp += calibrationParameters[calibration].Offset;
 29506  015EC6  0100               	movlb	0	; () banked
 29507  015EC8  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 29508  015ECA  0D0C               	mullw	12
 29509  015ECC  0E05               	movlw	5
 29510  015ECE  26F3               	addwf	prodl,f,c
 29511  015ED0  0E00               	movlw	0
 29512  015ED2  22F4               	addwfc	prodh,f,c
 29513  015ED4  0E00               	movlw	low _calibrationParameters
 29514  015ED6  24F3               	addwf	prodl,w,c
 29515  015ED8  6ED9               	movwf	fsr2l,c
 29516  015EDA  0E03               	movlw	high _calibrationParameters
 29517  015EDC  20F4               	addwfc	prodh,w,c
 29518  015EDE  6EDA               	movwf	fsr2h,c
 29519  015EE0  CFDE F06F          	movff	postinc2,??_adc_calculate_temperature
 29520  015EE4  CFDD F070          	movff	postdec2,??_adc_calculate_temperature+1
 29521  015EE8  C06F  F071         	movff	??_adc_calculate_temperature,??_adc_calculate_temperature+2
 29522  015EEC  C070  F072         	movff	??_adc_calculate_temperature+1,??_adc_calculate_temperature+3
 29523  015EF0  0E00               	movlw	0
 29524  015EF2  0100               	movlb	0	; () banked
 29525  015EF4  BF72               	btfsc	(??_adc_calculate_temperature+3)& (0+255),7,b
 29526  015EF6  0EFF               	movlw	255
 29527  015EF8  6F73               	movwf	(??_adc_calculate_temperature+4)& (0+255),b
 29528  015EFA  6F74               	movwf	(??_adc_calculate_temperature+5)& (0+255),b
 29529  015EFC  0100               	movlb	0	; () banked
 29530  015EFE  5171               	movf	(??_adc_calculate_temperature+2)& (0+255),w,b
 29531  015F00  0100               	movlb	0	; () banked
 29532  015F02  2775               	addwf	adc_calculate_temperature@tmp& (0+255),f,b
 29533  015F04  0100               	movlb	0	; () banked
 29534  015F06  5172               	movf	(??_adc_calculate_temperature+3)& (0+255),w,b
 29535  015F08  0100               	movlb	0	; () banked
 29536  015F0A  2376               	addwfc	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 29537  015F0C  0100               	movlb	0	; () banked
 29538  015F0E  5173               	movf	(??_adc_calculate_temperature+4)& (0+255),w,b
 29539  015F10  0100               	movlb	0	; () banked
 29540  015F12  2377               	addwfc	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 29541  015F14  0100               	movlb	0	; () banked
 29542  015F16  5174               	movf	(??_adc_calculate_temperature+5)& (0+255),w,b
 29543  015F18  0100               	movlb	0	; () banked
 29544  015F1A  2378               	addwfc	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 29545                           
 29546                           ; BSR set to: 0
 29547                           ;adc.c: 78: tmp *= calibrationParameters[calibration].Multiplier;
 29548  015F1C  C075  F060         	movff	adc_calculate_temperature@tmp,___lmul@multiplier
 29549  015F20  C076  F061         	movff	adc_calculate_temperature@tmp+1,___lmul@multiplier+1
 29550  015F24  C077  F062         	movff	adc_calculate_temperature@tmp+2,___lmul@multiplier+2
 29551  015F28  C078  F063         	movff	adc_calculate_temperature@tmp+3,___lmul@multiplier+3
 29552  015F2C  0100               	movlb	0	; () banked
 29553  015F2E  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 29554  015F30  0D0C               	mullw	12
 29555  015F32  0E07               	movlw	7
 29556  015F34  26F3               	addwf	prodl,f,c
 29557  015F36  0E00               	movlw	0
 29558  015F38  22F4               	addwfc	prodh,f,c
 29559  015F3A  0E00               	movlw	low _calibrationParameters
 29560  015F3C  24F3               	addwf	prodl,w,c
 29561  015F3E  6ED9               	movwf	fsr2l,c
 29562  015F40  0E03               	movlw	high _calibrationParameters
 29563  015F42  20F4               	addwfc	prodh,w,c
 29564  015F44  6EDA               	movwf	fsr2h,c
 29565  015F46  CFDE F064          	movff	postinc2,___lmul@multiplicand
 29566  015F4A  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 29567  015F4E  0100               	movlb	0	; () banked
 29568  015F50  0E00               	movlw	0
 29569  015F52  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 29570  015F54  0EFF               	movlw	-1
 29571  015F56  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 29572  015F58  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 29573  015F5A  EC3B  F0C7         	call	___lmul	;wreg free
 29574  015F5E  C060  F075         	movff	?___lmul,adc_calculate_temperature@tmp
 29575  015F62  C061  F076         	movff	?___lmul+1,adc_calculate_temperature@tmp+1
 29576  015F66  C062  F077         	movff	?___lmul+2,adc_calculate_temperature@tmp+2
 29577  015F6A  C063  F078         	movff	?___lmul+3,adc_calculate_temperature@tmp+3
 29578                           
 29579                           ;adc.c: 79: tmp >>= calibrationParameters[calibration].Shift - 1;
 29580  015F6E  0100               	movlb	0	; () banked
 29581  015F70  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 29582  015F72  0D0C               	mullw	12
 29583  015F74  0E09               	movlw	9
 29584  015F76  26F3               	addwf	prodl,f,c
 29585  015F78  0E00               	movlw	0
 29586  015F7A  22F4               	addwfc	prodh,f,c
 29587  015F7C  0E00               	movlw	low _calibrationParameters
 29588  015F7E  24F3               	addwf	prodl,w,c
 29589  015F80  6ED9               	movwf	fsr2l,c
 29590  015F82  0E03               	movlw	high _calibrationParameters
 29591  015F84  20F4               	addwfc	prodh,w,c
 29592  015F86  6EDA               	movwf	fsr2h,c
 29593  015F88  50DF               	movf	indf2,w,c
 29594  015F8A  0100               	movlb	0	; () banked
 29595  015F8C  6F6F               	movwf	??_adc_calculate_temperature& (0+255),b
 29596  015F8E  0EFF               	movlw	-1
 29597  015F90  0100               	movlb	0	; () banked
 29598  015F92  276F               	addwf	??_adc_calculate_temperature& (0+255),f,b
 29599  015F94  0100               	movlb	0	; () banked
 29600  015F96  296F               	incf	??_adc_calculate_temperature& (0+255),w,b
 29601  015F98  0100               	movlb	0	; () banked
 29602  015F9A  6F70               	movwf	(??_adc_calculate_temperature+1)& (0+255),b
 29603  015F9C  D006               	goto	u22310
 29604  015F9E                     u22315:
 29605  015F9E  0100               	movlb	0	; () banked
 29606  015FA0  3578               	rlcf	(adc_calculate_temperature@tmp+3)& (0+255),w,b
 29607  015FA2  3378               	rrcf	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 29608  015FA4  3377               	rrcf	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 29609  015FA6  3376               	rrcf	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 29610  015FA8  3375               	rrcf	adc_calculate_temperature@tmp& (0+255),f,b
 29611  015FAA                     u22310:
 29612  015FAA  0100               	movlb	0	; () banked
 29613  015FAC  2F70               	decfsz	(??_adc_calculate_temperature+1)& (0+255),f,b
 29614  015FAE  D7F7               	goto	u22315
 29615                           
 29616                           ;adc.c: 80: tmp += 1;
 29617  015FB0  0E01               	movlw	1
 29618  015FB2  0100               	movlb	0	; () banked
 29619  015FB4  2775               	addwf	adc_calculate_temperature@tmp& (0+255),f,b
 29620  015FB6  0E00               	movlw	0
 29621  015FB8  2376               	addwfc	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 29622  015FBA  2377               	addwfc	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 29623  015FBC  2378               	addwfc	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 29624                           
 29625                           ; BSR set to: 0
 29626                           ;adc.c: 81: tmp >>= 1;
 29627  015FBE  0100               	movlb	0	; () banked
 29628  015FC0  3578               	rlcf	(adc_calculate_temperature@tmp+3)& (0+255),w,b
 29629  015FC2  3378               	rrcf	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 29630  015FC4  3377               	rrcf	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 29631  015FC6  3376               	rrcf	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 29632  015FC8  3375               	rrcf	adc_calculate_temperature@tmp& (0+255),f,b
 29633                           
 29634                           ; BSR set to: 0
 29635                           ;adc.c: 82: return (int16_t) tmp;
 29636  015FCA  C075  F06C         	movff	adc_calculate_temperature@tmp,?_adc_calculate_temperature
 29637  015FCE  C076  F06D         	movff	adc_calculate_temperature@tmp+1,?_adc_calculate_temperature+1
 29638  015FD2  0012               	return	
 29639  015FD4                     __end_of_adc_calculate_temperature:
 29640                           	opt stack 0
 29641                           tblptru	equ	0xFF8
 29642                           tblptrh	equ	0xFF7
 29643                           tblptrl	equ	0xFF6
 29644                           tablat	equ	0xFF5
 29645                           prodh	equ	0xFF4
 29646                           prodl	equ	0xFF3
 29647                           intcon	equ	0xFF2
 29648                           intcon2	equ	0xFF1
 29649                           intcon3	equ	0xFF0
 29650                           postinc0	equ	0xFEE
 29651                           wreg	equ	0xFE8
 29652                           indf1	equ	0xFE7
 29653                           postinc1	equ	0xFE6
 29654                           postdec1	equ	0xFE5
 29655                           plusw1	equ	0xFE3
 29656                           fsr1h	equ	0xFE2
 29657                           fsr1l	equ	0xFE1
 29658                           indf2	equ	0xFDF
 29659                           postinc2	equ	0xFDE
 29660                           postdec2	equ	0xFDD
 29661                           plusw2	equ	0xFDB
 29662                           fsr2h	equ	0xFDA
 29663                           fsr2l	equ	0xFD9
 29664                           status	equ	0xFD8
 29665                           
 29666 ;; *************** function ___lmul *****************
 29667 ;; Defined at:
 29668 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul32.c"
 29669 ;; Parameters:    Size  Location     Type
 29670 ;;  multiplier      4    0[BANK0 ] unsigned long 
 29671 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 29672 ;; Auto vars:     Size  Location     Type
 29673 ;;  product         4    8[BANK0 ] unsigned long 
 29674 ;; Return value:  Size  Location     Type
 29675 ;;                  4    0[BANK0 ] unsigned long 
 29676 ;; Registers used:
 29677 ;;		wreg, status,2, status,0
 29678 ;; Tracked objects:
 29679 ;;		On entry : 0/0
 29680 ;;		On exit  : 0/0
 29681 ;;		Unchanged: 0/0
 29682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29683 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29684 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29686 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29687 ;;Total ram usage:       12 bytes
 29688 ;; Hardware stack levels used:    1
 29689 ;; Hardware stack levels required when called:   10
 29690 ;; This function calls:
 29691 ;;		Nothing
 29692 ;; This function is called by:
 29693 ;;		_system_calculate_input_voltage
 29694 ;;		_system_calculate_output_voltage
 29695 ;;		_system_calculate_input_current
 29696 ;;		_system_calculate_output_current
 29697 ;;		__display_efficiency
 29698 ;;		__buck_operate_local
 29699 ;;		_adc_calculate_temperature
 29700 ;;		__get_input_power
 29701 ;;		__get_output_power
 29702 ;; This function uses a non-reentrant model
 29703 ;;
 29704                           
 29705                           	psect	text129
 29706  018E76                     __ptext129:
 29707                           	opt stack 0
 29708  018E76                     ___lmul:
 29709                           	opt stack 19
 29710                           
 29711                           ; BSR set to: 0
 29712                           ;incstack = 0
 29713  018E76  0E00               	movlw	0
 29714  018E78  0100               	movlb	0	; () banked
 29715  018E7A  6F68               	movwf	___lmul@product& (0+255),b
 29716  018E7C  0E00               	movlw	0
 29717  018E7E  6F69               	movwf	(___lmul@product+1)& (0+255),b
 29718  018E80  0E00               	movlw	0
 29719  018E82  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 29720  018E84  0E00               	movlw	0
 29721  018E86  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 29722  018E88                     l19888:
 29723                           
 29724                           ; BSR set to: 0
 29725  018E88  0100               	movlb	0	; () banked
 29726  018E8A  A160               	btfss	___lmul@multiplier& (0+255),0,b
 29727  018E8C  D010               	goto	l19892
 29728                           
 29729                           ; BSR set to: 0
 29730  018E8E  0100               	movlb	0	; () banked
 29731  018E90  5164               	movf	___lmul@multiplicand& (0+255),w,b
 29732  018E92  0100               	movlb	0	; () banked
 29733  018E94  2768               	addwf	___lmul@product& (0+255),f,b
 29734  018E96  0100               	movlb	0	; () banked
 29735  018E98  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 29736  018E9A  0100               	movlb	0	; () banked
 29737  018E9C  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 29738  018E9E  0100               	movlb	0	; () banked
 29739  018EA0  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 29740  018EA2  0100               	movlb	0	; () banked
 29741  018EA4  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 29742  018EA6  0100               	movlb	0	; () banked
 29743  018EA8  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 29744  018EAA  0100               	movlb	0	; () banked
 29745  018EAC  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 29746  018EAE                     l19892:
 29747                           
 29748                           ; BSR set to: 0
 29749  018EAE  0100               	movlb	0	; () banked
 29750  018EB0  90D8               	bcf	status,0,c
 29751  018EB2  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 29752  018EB4  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 29753  018EB6  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 29754  018EB8  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 29755                           
 29756                           ; BSR set to: 0
 29757  018EBA  0100               	movlb	0	; () banked
 29758  018EBC  90D8               	bcf	status,0,c
 29759  018EBE  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 29760  018EC0  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 29761  018EC2  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 29762  018EC4  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 29763  018EC6  0100               	movlb	0	; () banked
 29764  018EC8  5160               	movf	___lmul@multiplier& (0+255),w,b
 29765  018ECA  0100               	movlb	0	; () banked
 29766  018ECC  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 29767  018ECE  0100               	movlb	0	; () banked
 29768  018ED0  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 29769  018ED2  0100               	movlb	0	; () banked
 29770  018ED4  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 29771  018ED6  A4D8               	btfss	status,2,c
 29772  018ED8  D7D7               	goto	l19888
 29773                           
 29774                           ; BSR set to: 0
 29775  018EDA  C068  F060         	movff	___lmul@product,?___lmul
 29776  018EDE  C069  F061         	movff	___lmul@product+1,?___lmul+1
 29777  018EE2  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 29778  018EE6  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 29779                           
 29780                           ; BSR set to: 0
 29781  018EEA  0012               	return		;funcret
 29782  018EEC                     __end_of___lmul:
 29783                           	opt stack 0
 29784                           tblptru	equ	0xFF8
 29785                           tblptrh	equ	0xFF7
 29786                           tblptrl	equ	0xFF6
 29787                           tablat	equ	0xFF5
 29788                           prodh	equ	0xFF4
 29789                           prodl	equ	0xFF3
 29790                           intcon	equ	0xFF2
 29791                           intcon2	equ	0xFF1
 29792                           intcon3	equ	0xFF0
 29793                           postinc0	equ	0xFEE
 29794                           wreg	equ	0xFE8
 29795                           indf1	equ	0xFE7
 29796                           postinc1	equ	0xFE6
 29797                           postdec1	equ	0xFE5
 29798                           plusw1	equ	0xFE3
 29799                           fsr1h	equ	0xFE2
 29800                           fsr1l	equ	0xFE1
 29801                           indf2	equ	0xFDF
 29802                           postinc2	equ	0xFDE
 29803                           postdec2	equ	0xFDD
 29804                           plusw2	equ	0xFDB
 29805                           fsr2h	equ	0xFDA
 29806                           fsr2l	equ	0xFD9
 29807                           status	equ	0xFD8
 29808                           
 29809 ;; *************** function _USBDeviceInit *****************
 29810 ;; Defined at:
 29811 ;;		line 277 in file "usb_device.c"
 29812 ;; Parameters:    Size  Location     Type
 29813 ;;		None
 29814 ;; Auto vars:     Size  Location     Type
 29815 ;;  i               1    8[BANK0 ] unsigned char 
 29816 ;; Return value:  Size  Location     Type
 29817 ;;                  1    wreg      void 
 29818 ;; Registers used:
 29819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29820 ;; Tracked objects:
 29821 ;;		On entry : 0/0
 29822 ;;		On exit  : 0/0
 29823 ;;		Unchanged: 0/0
 29824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29826 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29828 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29829 ;;Total ram usage:        1 bytes
 29830 ;; Hardware stack levels used:    1
 29831 ;; Hardware stack levels required when called:   11
 29832 ;; This function calls:
 29833 ;;		_memset
 29834 ;; This function is called by:
 29835 ;;		_main
 29836 ;; This function uses a non-reentrant model
 29837 ;;
 29838                           
 29839                           	psect	text130
 29840  014B9E                     __ptext130:
 29841                           	opt stack 0
 29842  014B9E                     _USBDeviceInit:
 29843                           	opt stack 19
 29844                           
 29845                           ;usb_device.c: 279: uint8_t i;
 29846                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 29847                           
 29848                           ; BSR set to: 0
 29849                           ;incstack = 0
 29850  014B9E  98A0               	bcf	4000,4,c	;volatile
 29851                           
 29852                           ;usb_device.c: 285: ;
 29853                           ;usb_device.c: 288: {UEIR = 0;};
 29854  014BA0  0E00               	movlw	0
 29855  014BA2  6E63               	movwf	3939,c	;volatile
 29856                           
 29857                           ;usb_device.c: 291: {UIR = 0;};
 29858  014BA4  0E00               	movlw	0
 29859  014BA6  6E62               	movwf	3938,c	;volatile
 29860                           
 29861                           ;usb_device.c: 294: UEP0 = 0;
 29862  014BA8  0E00               	movlw	0
 29863  014BAA  010F               	movlb	15	; () banked
 29864  014BAC  6F26               	movwf	38,b	;volatile
 29865                           
 29866                           ; BSR set to: 15
 29867                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 29868  014BAE  0E27               	movlw	39
 29869  014BB0  0100               	movlb	0	; () banked
 29870  014BB2  6F60               	movwf	memset@p1& (0+255),b
 29871  014BB4  0E0F               	movlw	15
 29872  014BB6  0100               	movlb	0	; () banked
 29873  014BB8  6F61               	movwf	(memset@p1+1)& (0+255),b
 29874  014BBA  0E00               	movlw	0
 29875  014BBC  0100               	movlb	0	; () banked
 29876  014BBE  6F63               	movwf	(memset@c+1)& (0+255),b
 29877  014BC0  0E00               	movlw	0
 29878  014BC2  6F62               	movwf	memset@c& (0+255),b
 29879  014BC4  0E00               	movlw	0
 29880  014BC6  0100               	movlb	0	; () banked
 29881  014BC8  6F65               	movwf	(memset@n+1)& (0+255),b
 29882  014BCA  0E02               	movlw	2
 29883  014BCC  6F64               	movwf	memset@n& (0+255),b
 29884  014BCE  EC6D  F0D1         	call	_memset	;wreg free
 29885                           
 29886                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 29887  014BD2  0E16               	movlw	22
 29888  014BD4  010F               	movlb	15	; () banked
 29889  014BD6  6F39               	movwf	57,b	;volatile
 29890                           
 29891                           ; BSR set to: 15
 29892  014BD8  0E9F               	movlw	159
 29893  014BDA  010F               	movlb	15	; () banked
 29894  014BDC  6F37               	movwf	55,b	;volatile
 29895                           
 29896                           ; BSR set to: 15
 29897  014BDE  0E7B               	movlw	123
 29898  014BE0  010F               	movlb	15	; () banked
 29899  014BE2  6F36               	movwf	54,b	;volatile
 29900                           
 29901                           ; BSR set to: 15
 29902                           ;usb_device.c: 301: ;
 29903                           ;usb_device.c: 304: ;
 29904                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 29905  014BE4  0E00               	movlw	0
 29906  014BE6  0100               	movlb	0	; () banked
 29907  014BE8  6F68               	movwf	USBDeviceInit@i& (0+255),b
 29908  014BEA                     l21724:
 29909                           
 29910                           ; BSR set to: 0
 29911  014BEA  0E0B               	movlw	11
 29912  014BEC  0100               	movlb	0	; () banked
 29913  014BEE  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 29914  014BF0  D001               	goto	l21728
 29915  014BF2  D010               	goto	l148
 29916  014BF4                     l21728:
 29917                           
 29918                           ; BSR set to: 0
 29919                           ;usb_device.c: 308: {
 29920                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 29921  014BF4  0100               	movlb	0	; () banked
 29922  014BF6  5168               	movf	USBDeviceInit@i& (0+255),w,b
 29923  014BF8  0D04               	mullw	4
 29924  014BFA  0E00               	movlw	0
 29925  014BFC  24F3               	addwf	prodl,w,c
 29926  014BFE  6ED9               	movwf	fsr2l,c
 29927  014C00  0E0D               	movlw	13
 29928  014C02  20F4               	addwfc	prodh,w,c
 29929  014C04  6EDA               	movwf	fsr2h,c
 29930  014C06  6ADE               	clrf	postinc2,c
 29931  014C08  6ADE               	clrf	postinc2,c
 29932  014C0A  6ADE               	clrf	postinc2,c
 29933  014C0C  6ADD               	clrf	postdec2,c
 29934                           
 29935                           ; BSR set to: 0
 29936  014C0E  0100               	movlb	0	; () banked
 29937  014C10  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 29938  014C12  D7EB               	goto	l21724
 29939  014C14                     l148:
 29940                           
 29941                           ; BSR set to: 0
 29942                           ;usb_device.c: 310: }
 29943                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 29944  014C14  8C65               	bsf	3941,6,c	;volatile
 29945                           
 29946                           ; BSR set to: 0
 29947                           ;usb_device.c: 316: UADDR = 0x00;
 29948  014C16  0E00               	movlw	0
 29949  014C18  010F               	movlb	15	; () banked
 29950  014C1A  6F38               	movwf	56,b	;volatile
 29951                           
 29952                           ; BSR set to: 15
 29953                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 29954  014C1C  9865               	bcf	3941,4,c	;volatile
 29955                           
 29956                           ; BSR set to: 15
 29957                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 29958  014C1E  9C65               	bcf	3941,6,c	;volatile
 29959  014C20                     l21740:
 29960                           
 29961                           ;usb_device.c: 326: {
 29962                           ;usb_device.c: 327: (UIR &= 0xF7);
 29963  014C20  9662               	bcf	3938,3,c	;volatile
 29964                           
 29965                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 29966  014C22  0E00               	movlw	0
 29967  014C24  6E0D               	movwf	_inPipes+3,c	;volatile
 29968                           
 29969                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 29970  014C26  0E00               	movlw	0
 29971  014C28  6E04               	movwf	_outPipes+3,c	;volatile
 29972                           
 29973                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 29974  014C2A  0E00               	movlw	0
 29975  014C2C  6E06               	movwf	_outPipes+5,c	;volatile
 29976  014C2E  0E00               	movlw	0
 29977  014C30  6E05               	movwf	_outPipes+4,c	;volatile
 29978                           
 29979                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 29980  014C32  B662               	btfsc	3938,3,c	;volatile
 29981  014C34  D7F5               	goto	l21740
 29982                           
 29983                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 29984  014C36  0E01               	movlw	1
 29985  014C38  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 29986                           
 29987                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 29988  014C3A  0E01               	movlw	1
 29989  014C3C  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 29990                           
 29991                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 29992  014C3E  0E00               	movlw	0
 29993  014C40  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 29994                           
 29995                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 29996  014C42  0E00               	movlw	0
 29997  014C44  0101               	movlb	1	; () banked
 29998  014C46  6FFB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 29999                           
 30000                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 30001  014C48  0E00               	movlw	0
 30002  014C4A  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 30003                           
 30004                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 30005  014C4C  0E00               	movlw	0
 30006  014C4E  0100               	movlb	0	; () banked
 30007  014C50  6F68               	movwf	USBDeviceInit@i& (0+255),b
 30008  014C52                     l21752:
 30009                           
 30010                           ; BSR set to: 0
 30011  014C52  0E02               	movlw	2
 30012  014C54  0100               	movlb	0	; () banked
 30013  014C56  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 30014  014C58  D001               	goto	l21756
 30015  014C5A  D033               	goto	l21762
 30016  014C5C                     l21756:
 30017                           
 30018                           ; BSR set to: 0
 30019                           ;usb_device.c: 346: {
 30020                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 30021  014C5C  0100               	movlb	0	; () banked
 30022  014C5E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30023  014C60  0D02               	mullw	2
 30024  014C62  0E10               	movlw	low _pBDTEntryIn
 30025  014C64  24F3               	addwf	prodl,w,c
 30026  014C66  6ED9               	movwf	fsr2l,c
 30027  014C68  0E00               	movlw	high _pBDTEntryIn
 30028  014C6A  20F4               	addwfc	prodh,w,c
 30029  014C6C  6EDA               	movwf	fsr2h,c
 30030  014C6E  0E00               	movlw	0
 30031  014C70  6EDE               	movwf	postinc2,c
 30032  014C72  0E00               	movlw	0
 30033  014C74  6EDD               	movwf	postdec2,c
 30034                           
 30035                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 30036  014C76  0100               	movlb	0	; () banked
 30037  014C78  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30038  014C7A  0D02               	mullw	2
 30039  014C7C  0ED3               	movlw	low _pBDTEntryOut
 30040  014C7E  24F3               	addwf	prodl,w,c
 30041  014C80  6ED9               	movwf	fsr2l,c
 30042  014C82  0E01               	movlw	high _pBDTEntryOut
 30043  014C84  20F4               	addwfc	prodh,w,c
 30044  014C86  6EDA               	movwf	fsr2h,c
 30045  014C88  0E00               	movlw	0
 30046  014C8A  6EDE               	movwf	postinc2,c
 30047  014C8C  0E00               	movlw	0
 30048  014C8E  6EDD               	movwf	postdec2,c
 30049                           
 30050                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 30051  014C90  0100               	movlb	0	; () banked
 30052  014C92  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30053  014C94  0D01               	mullw	1
 30054  014C96  0EE4               	movlw	low _ep_data_in
 30055  014C98  24F3               	addwf	prodl,w,c
 30056  014C9A  6ED9               	movwf	fsr2l,c
 30057  014C9C  0E01               	movlw	high _ep_data_in
 30058  014C9E  20F4               	addwfc	prodh,w,c
 30059  014CA0  6EDA               	movwf	fsr2h,c
 30060  014CA2  0E00               	movlw	0
 30061  014CA4  6EDF               	movwf	indf2,c
 30062                           
 30063                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 30064  014CA6  0100               	movlb	0	; () banked
 30065  014CA8  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30066  014CAA  0D01               	mullw	1
 30067  014CAC  0EE1               	movlw	low _ep_data_out
 30068  014CAE  24F3               	addwf	prodl,w,c
 30069  014CB0  6ED9               	movwf	fsr2l,c
 30070  014CB2  0E01               	movlw	high _ep_data_out
 30071  014CB4  20F4               	addwfc	prodh,w,c
 30072  014CB6  6EDA               	movwf	fsr2h,c
 30073  014CB8  0E00               	movlw	0
 30074  014CBA  6EDF               	movwf	indf2,c
 30075                           
 30076                           ; BSR set to: 0
 30077  014CBC  0100               	movlb	0	; () banked
 30078  014CBE  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 30079  014CC0  D7C8               	goto	l21752
 30080  014CC2                     l21762:
 30081                           
 30082                           ; BSR set to: 0
 30083                           ;usb_device.c: 351: }
 30084                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 30085  014CC2  0E08               	movlw	8
 30086  014CC4  6E10               	movwf	_pBDTEntryIn,c
 30087  014CC6  0E0D               	movlw	13
 30088  014CC8  6E11               	movwf	_pBDTEntryIn+1,c
 30089                           
 30090                           ; BSR set to: 0
 30091                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 30092  014CCA  0E16               	movlw	22
 30093  014CCC  010F               	movlb	15	; () banked
 30094  014CCE  6F26               	movwf	38,b	;volatile
 30095                           
 30096                           ; BSR set to: 15
 30097                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 30098  014CD0  0E0D               	movlw	13
 30099  014CD2  010D               	movlb	13	; () banked
 30100  014CD4  6F03               	movwf	3,b	;volatile
 30101  014CD6  0E30               	movlw	48
 30102  014CD8  6F02               	movwf	2,b	;volatile
 30103                           
 30104                           ; BSR set to: 13
 30105                           ;usb_device.c: 359: BDT[0].CNT = 8;
 30106  014CDA  0E08               	movlw	8
 30107  014CDC  010D               	movlb	13	; () banked
 30108  014CDE  6F01               	movwf	1,b	;volatile
 30109                           
 30110                           ; BSR set to: 13
 30111                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 30112  014CE0  0E04               	movlw	4
 30113  014CE2  010D               	movlb	13	; () banked
 30114  014CE4  6F00               	movwf	0,b	;volatile
 30115                           
 30116                           ; BSR set to: 13
 30117                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 30118  014CE6  010D               	movlb	13	; () banked
 30119  014CE8  8F00               	bsf	0,7,b	;volatile
 30120                           
 30121                           ; BSR set to: 13
 30122                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 30123  014CEA  0E00               	movlw	0
 30124  014CEC  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 30125                           
 30126                           ; BSR set to: 13
 30127                           ;usb_device.c: 366: USB1msTickCount = 0;
 30128  014CEE  0E00               	movlw	0
 30129  014CF0  0101               	movlb	1	; () banked
 30130  014CF2  6FDD               	movwf	_USB1msTickCount& (0+255),b	;volatile
 30131  014CF4  0E00               	movlw	0
 30132  014CF6  6FDE               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 30133  014CF8  0E00               	movlw	0
 30134  014CFA  6FDF               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 30135  014CFC  0E00               	movlw	0
 30136  014CFE  6FE0               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 30137                           
 30138                           ; BSR set to: 1
 30139                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 30140  014D00  0E00               	movlw	0
 30141  014D02  0101               	movlb	1	; () banked
 30142  014D04  6FFA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 30143                           
 30144                           ; BSR set to: 1
 30145                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 30146  014D06  0E00               	movlw	0
 30147  014D08  6E2B               	movwf	_USBDeviceState,c	;volatile
 30148                           
 30149                           ; BSR set to: 1
 30150  014D0A  0012               	return		;funcret
 30151  014D0C                     __end_of_USBDeviceInit:
 30152                           	opt stack 0
 30153                           tblptru	equ	0xFF8
 30154                           tblptrh	equ	0xFF7
 30155                           tblptrl	equ	0xFF6
 30156                           tablat	equ	0xFF5
 30157                           prodh	equ	0xFF4
 30158                           prodl	equ	0xFF3
 30159                           intcon	equ	0xFF2
 30160                           intcon2	equ	0xFF1
 30161                           intcon3	equ	0xFF0
 30162                           postinc0	equ	0xFEE
 30163                           wreg	equ	0xFE8
 30164                           indf1	equ	0xFE7
 30165                           postinc1	equ	0xFE6
 30166                           postdec1	equ	0xFE5
 30167                           plusw1	equ	0xFE3
 30168                           fsr1h	equ	0xFE2
 30169                           fsr1l	equ	0xFE1
 30170                           indf2	equ	0xFDF
 30171                           postinc2	equ	0xFDE
 30172                           postdec2	equ	0xFDD
 30173                           plusw2	equ	0xFDB
 30174                           fsr2h	equ	0xFDA
 30175                           fsr2l	equ	0xFD9
 30176                           status	equ	0xFD8
 30177                           
 30178 ;; *************** function _memset *****************
 30179 ;; Defined at:
 30180 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
 30181 ;; Parameters:    Size  Location     Type
 30182 ;;  p1              2    0[BANK0 ] PTR void 
 30183 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 30184 ;;  c               2    2[BANK0 ] int 
 30185 ;;  n               2    4[BANK0 ] unsigned int 
 30186 ;; Auto vars:     Size  Location     Type
 30187 ;;  p               2    6[BANK0 ] PTR unsigned char 
 30188 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 30189 ;; Return value:  Size  Location     Type
 30190 ;;                  2    0[BANK0 ] PTR void 
 30191 ;; Registers used:
 30192 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30193 ;; Tracked objects:
 30194 ;;		On entry : 0/0
 30195 ;;		On exit  : 0/0
 30196 ;;		Unchanged: 0/0
 30197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30198 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30199 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30201 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30202 ;;Total ram usage:        8 bytes
 30203 ;; Hardware stack levels used:    1
 30204 ;; Hardware stack levels required when called:   10
 30205 ;; This function calls:
 30206 ;;		Nothing
 30207 ;; This function is called by:
 30208 ;;		_USBDeviceInit
 30209 ;; This function uses a non-reentrant model
 30210 ;;
 30211                           
 30212                           	psect	text131
 30213  01A2DA                     __ptext131:
 30214                           	opt stack 0
 30215  01A2DA                     _memset:
 30216                           	opt stack 19
 30217                           
 30218                           ; BSR set to: 1
 30219                           ;incstack = 0
 30220  01A2DA  C060  F066         	movff	memset@p1,memset@p
 30221  01A2DE  C061  F067         	movff	memset@p1+1,memset@p+1
 30222  01A2E2  D009               	goto	l20008
 30223  01A2E4                     l20004:
 30224  01A2E4  C066  FFD9         	movff	memset@p,fsr2l
 30225  01A2E8  C067  FFDA         	movff	memset@p+1,fsr2h
 30226  01A2EC  C062  FFDF         	movff	memset@c,indf2
 30227  01A2F0  0100               	movlb	0	; () banked
 30228  01A2F2  4B66               	infsnz	memset@p& (0+255),f,b
 30229  01A2F4  2B67               	incf	(memset@p+1)& (0+255),f,b
 30230  01A2F6                     l20008:
 30231  01A2F6  0100               	movlb	0	; () banked
 30232  01A2F8  0764               	decf	memset@n& (0+255),f,b
 30233  01A2FA  A0D8               	btfss	status,0,c
 30234  01A2FC  0765               	decf	(memset@n+1)& (0+255),f,b
 30235  01A2FE  0100               	movlb	0	; () banked
 30236  01A300  2964               	incf	memset@n& (0+255),w,b
 30237  01A302  E1F0               	bnz	l20004
 30238  01A304  0100               	movlb	0	; () banked
 30239  01A306  2965               	incf	(memset@n+1)& (0+255),w,b
 30240  01A308  B4D8               	btfsc	status,2,c
 30241  01A30A  0012               	return	
 30242  01A30C  D7EB               	goto	l20004
 30243  01A30E                     __end_of_memset:
 30244                           	opt stack 0
 30245                           tblptru	equ	0xFF8
 30246                           tblptrh	equ	0xFF7
 30247                           tblptrl	equ	0xFF6
 30248                           tablat	equ	0xFF5
 30249                           prodh	equ	0xFF4
 30250                           prodl	equ	0xFF3
 30251                           intcon	equ	0xFF2
 30252                           intcon2	equ	0xFF1
 30253                           intcon3	equ	0xFF0
 30254                           postinc0	equ	0xFEE
 30255                           wreg	equ	0xFE8
 30256                           indf1	equ	0xFE7
 30257                           postinc1	equ	0xFE6
 30258                           postdec1	equ	0xFE5
 30259                           plusw1	equ	0xFE3
 30260                           fsr1h	equ	0xFE2
 30261                           fsr1l	equ	0xFE1
 30262                           indf2	equ	0xFDF
 30263                           postinc2	equ	0xFDE
 30264                           postdec2	equ	0xFDD
 30265                           plusw2	equ	0xFDB
 30266                           fsr2h	equ	0xFDA
 30267                           fsr2l	equ	0xFD9
 30268                           status	equ	0xFD8
 30269                           
 30270 ;; *************** function _USBDeviceAttach *****************
 30271 ;; Defined at:
 30272 ;;		line 1354 in file "usb_device.c"
 30273 ;; Parameters:    Size  Location     Type
 30274 ;;		None
 30275 ;; Auto vars:     Size  Location     Type
 30276 ;;		None
 30277 ;; Return value:  Size  Location     Type
 30278 ;;                  1    wreg      void 
 30279 ;; Registers used:
 30280 ;;		wreg, status,2
 30281 ;; Tracked objects:
 30282 ;;		On entry : 0/0
 30283 ;;		On exit  : 0/0
 30284 ;;		Unchanged: 0/0
 30285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30290 ;;Total ram usage:        0 bytes
 30291 ;; Hardware stack levels used:    1
 30292 ;; Hardware stack levels required when called:   10
 30293 ;; This function calls:
 30294 ;;		Nothing
 30295 ;; This function is called by:
 30296 ;;		_main
 30297 ;; This function uses a non-reentrant model
 30298 ;;
 30299                           
 30300                           	psect	text132
 30301  01A0F4                     __ptext132:
 30302                           	opt stack 0
 30303  01A0F4                     _USBDeviceAttach:
 30304                           	opt stack 20
 30305                           
 30306                           ;usb_device.c: 1358: {
 30307                           ;usb_device.c: 1359: if(1 == 1)
 30308                           
 30309                           ; BSR set to: 0
 30310                           ;incstack = 0
 30311  01A0F4  502B               	movf	_USBDeviceState,w,c	;volatile
 30312  01A0F6  A4D8               	btfss	status,2,c
 30313  01A0F8  0012               	return	
 30314                           
 30315                           ;usb_device.c: 1360: {
 30316                           ;usb_device.c: 1362: UCON = 0;
 30317  01A0FA  0E00               	movlw	0
 30318  01A0FC  6E65               	movwf	3941,c	;volatile
 30319                           
 30320                           ;usb_device.c: 1365: UIE = 0;
 30321  01A0FE  0E00               	movlw	0
 30322  01A100  010F               	movlb	15	; () banked
 30323  01A102  6F36               	movwf	54,b	;volatile
 30324                           
 30325                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 30326  01A104  0E16               	movlw	22
 30327  01A106  010F               	movlb	15	; () banked
 30328  01A108  6F39               	movwf	57,b	;volatile
 30329  01A10A  0E9F               	movlw	159
 30330  01A10C  010F               	movlb	15	; () banked
 30331  01A10E  6F37               	movwf	55,b	;volatile
 30332  01A110  0E7B               	movlw	123
 30333  01A112  010F               	movlb	15	; () banked
 30334  01A114  6F36               	movwf	54,b	;volatile
 30335                           
 30336                           ; BSR set to: 15
 30337                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 30338  01A116  8ED0               	bsf	4048,7,c	;volatile
 30339                           
 30340                           ; BSR set to: 15
 30341  01A118  88A2               	bsf	4002,4,c	;volatile
 30342                           
 30343                           ; BSR set to: 15
 30344  01A11A  88A0               	bsf	4000,4,c	;volatile
 30345                           
 30346                           ; BSR set to: 15
 30347  01A11C  8EF2               	bsf	intcon,7,c	;volatile
 30348                           
 30349                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 30350  01A11E  D001               	goto	l208
 30351  01A120                     l209:
 30352  01A120  8665               	bsf	3941,3,c	;volatile
 30353  01A122                     l208:
 30354  01A122  A665               	btfss	3941,3,c	;volatile
 30355  01A124  D7FD               	goto	l209
 30356                           
 30357                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 30358  01A126  0E01               	movlw	1
 30359  01A128  6E2B               	movwf	_USBDeviceState,c	;volatile
 30360  01A12A  0012               	return	
 30361  01A12C                     __end_of_USBDeviceAttach:
 30362                           	opt stack 0
 30363                           tblptru	equ	0xFF8
 30364                           tblptrh	equ	0xFF7
 30365                           tblptrl	equ	0xFF6
 30366                           tablat	equ	0xFF5
 30367                           prodh	equ	0xFF4
 30368                           prodl	equ	0xFF3
 30369                           intcon	equ	0xFF2
 30370                           intcon2	equ	0xFF1
 30371                           intcon3	equ	0xFF0
 30372                           postinc0	equ	0xFEE
 30373                           wreg	equ	0xFE8
 30374                           indf1	equ	0xFE7
 30375                           postinc1	equ	0xFE6
 30376                           postdec1	equ	0xFE5
 30377                           plusw1	equ	0xFE3
 30378                           fsr1h	equ	0xFE2
 30379                           fsr1l	equ	0xFE1
 30380                           indf2	equ	0xFDF
 30381                           postinc2	equ	0xFDE
 30382                           postdec2	equ	0xFDD
 30383                           plusw2	equ	0xFDB
 30384                           fsr2h	equ	0xFDA
 30385                           fsr2l	equ	0xFD9
 30386                           status	equ	0xFD8
 30387                           
 30388 ;; *************** function _SYSTEM_Initialize *****************
 30389 ;; Defined at:
 30390 ;;		line 146 in file "system.c"
 30391 ;; Parameters:    Size  Location     Type
 30392 ;;  state           1    wreg     enum E8228
 30393 ;; Auto vars:     Size  Location     Type
 30394 ;;  state           1    0[BANK0 ] enum E8228
 30395 ;;  pll_startup_    2    3[BANK0 ] unsigned int 
 30396 ;;  pll_startup_    2    1[BANK0 ] unsigned int 
 30397 ;; Return value:  Size  Location     Type
 30398 ;;                  1    wreg      void 
 30399 ;; Registers used:
 30400 ;;		wreg, status,2, status,0
 30401 ;; Tracked objects:
 30402 ;;		On entry : 0/0
 30403 ;;		On exit  : 0/0
 30404 ;;		Unchanged: 0/0
 30405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30407 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30409 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30410 ;;Total ram usage:        5 bytes
 30411 ;; Hardware stack levels used:    1
 30412 ;; Hardware stack levels required when called:   10
 30413 ;; This function calls:
 30414 ;;		Nothing
 30415 ;; This function is called by:
 30416 ;;		_main
 30417 ;; This function uses a non-reentrant model
 30418 ;;
 30419                           
 30420                           	psect	text133
 30421  019340                     __ptext133:
 30422                           	opt stack 0
 30423  019340                     _SYSTEM_Initialize:
 30424                           	opt stack 20
 30425                           
 30426                           ;incstack = 0
 30427                           ;SYSTEM_Initialize@state stored from wreg
 30428  019340  0100               	movlb	0	; () banked
 30429  019342  6F60               	movwf	SYSTEM_Initialize@state& (0+255),b
 30430                           
 30431                           ;system.c: 148: switch(state)
 30432  019344  D025               	goto	l21912
 30433  019346                     l21900:
 30434                           
 30435                           ;system.c: 157: {
 30436                           ;system.c: 158: unsigned int pll_startup_counter = 600;
 30437  019346  0E02               	movlw	2
 30438  019348  0100               	movlb	0	; () banked
 30439  01934A  6F62               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 30440  01934C  0E58               	movlw	88
 30441  01934E  6F61               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 30442                           
 30443                           ; BSR set to: 0
 30444                           ;system.c: 159: OSCTUNEbits.PLLEN = 1;
 30445  019350  8C9B               	bsf	3995,6,c	;volatile
 30446  019352                     l21904:
 30447                           
 30448                           ; BSR set to: 0
 30449  019352  0100               	movlb	0	; () banked
 30450  019354  0761               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 30451  019356  A0D8               	btfss	status,0,c
 30452  019358  0762               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 30453  01935A  0100               	movlb	0	; () banked
 30454  01935C  2961               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 30455  01935E  E1F9               	bnz	l21904
 30456  019360  0100               	movlb	0	; () banked
 30457  019362  2962               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 30458  019364  B4D8               	btfsc	status,2,c
 30459  019366  0012               	return	
 30460  019368  D7F4               	goto	l21904
 30461  01936A                     l21906:
 30462                           
 30463                           ; BSR set to: 0
 30464                           ;system.c: 185: OSCCON = 0x70;
 30465  01936A  0E70               	movlw	112
 30466  01936C  6ED3               	movwf	4051,c	;volatile
 30467                           
 30468                           ;system.c: 191: {
 30469                           ;system.c: 192: unsigned int pll_startup_counter = 800;
 30470  01936E  0E03               	movlw	3
 30471  019370  0100               	movlb	0	; () banked
 30472  019372  6F64               	movwf	(SYSTEM_Initialize@pll_startup_counter_3284+1)& (0+255),b
 30473  019374  0E20               	movlw	32
 30474  019376  6F63               	movwf	SYSTEM_Initialize@pll_startup_counter_3284& (0+255),b
 30475  019378                     l21908:
 30476                           
 30477                           ; BSR set to: 0
 30478  019378  0100               	movlb	0	; () banked
 30479  01937A  0763               	decf	SYSTEM_Initialize@pll_startup_counter_3284& (0+255),f,b
 30480  01937C  A0D8               	btfss	status,0,c
 30481  01937E  0764               	decf	(SYSTEM_Initialize@pll_startup_counter_3284+1)& (0+255),f,b
 30482  019380  0100               	movlb	0	; () banked
 30483  019382  2963               	incf	SYSTEM_Initialize@pll_startup_counter_3284& (0+255),w,b
 30484  019384  E1F9               	bnz	l21908
 30485  019386  0100               	movlb	0	; () banked
 30486  019388  2964               	incf	(SYSTEM_Initialize@pll_startup_counter_3284+1)& (0+255),w,b
 30487  01938A  B4D8               	btfsc	status,2,c
 30488  01938C  0012               	return	
 30489  01938E  D7F4               	goto	l21908
 30490  019390                     l21912:
 30491  019390  0100               	movlb	0	; () banked
 30492  019392  5160               	movf	SYSTEM_Initialize@state& (0+255),w,b
 30493                           
 30494                           ; Switch size 1, requested type "space"
 30495                           ; Number of cases is 3, Range of values is 0 to 2
 30496                           ; switch strategies available:
 30497                           ; Name         Instructions Cycles
 30498                           ; simple_byte           10     6 (average)
 30499                           ;	Chosen strategy is simple_byte
 30500  019394  0A00               	xorlw	0	; case 0
 30501  019396  B4D8               	btfsc	status,2,c
 30502  019398  D7D6               	goto	l21900
 30503  01939A  0A01               	xorlw	1	; case 1
 30504  01939C  B4D8               	btfsc	status,2,c
 30505  01939E  0012               	return	
 30506  0193A0  0A03               	xorlw	3	; case 2
 30507  0193A2  A4D8               	btfss	status,2,c
 30508  0193A4  0012               	return	
 30509  0193A6  D7E1               	goto	l21906
 30510  0193A8                     __end_of_SYSTEM_Initialize:
 30511                           	opt stack 0
 30512                           tblptru	equ	0xFF8
 30513                           tblptrh	equ	0xFF7
 30514                           tblptrl	equ	0xFF6
 30515                           tablat	equ	0xFF5
 30516                           prodh	equ	0xFF4
 30517                           prodl	equ	0xFF3
 30518                           intcon	equ	0xFF2
 30519                           intcon2	equ	0xFF1
 30520                           intcon3	equ	0xFF0
 30521                           postinc0	equ	0xFEE
 30522                           wreg	equ	0xFE8
 30523                           indf1	equ	0xFE7
 30524                           postinc1	equ	0xFE6
 30525                           postdec1	equ	0xFE5
 30526                           plusw1	equ	0xFE3
 30527                           fsr1h	equ	0xFE2
 30528                           fsr1l	equ	0xFE1
 30529                           indf2	equ	0xFDF
 30530                           postinc2	equ	0xFDE
 30531                           postdec2	equ	0xFDD
 30532                           plusw2	equ	0xFDB
 30533                           fsr2h	equ	0xFDA
 30534                           fsr2l	equ	0xFD9
 30535                           status	equ	0xFD8
 30536                           
 30537 ;; *************** function _APP_DeviceMSDTasks *****************
 30538 ;; Defined at:
 30539 ;;		line 110 in file "app_device_msd.c"
 30540 ;; Parameters:    Size  Location     Type
 30541 ;;		None
 30542 ;; Auto vars:     Size  Location     Type
 30543 ;;		None
 30544 ;; Return value:  Size  Location     Type
 30545 ;;                  1    wreg      void 
 30546 ;; Registers used:
 30547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 30548 ;; Tracked objects:
 30549 ;;		On entry : 0/0
 30550 ;;		On exit  : 0/0
 30551 ;;		Unchanged: 0/0
 30552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30557 ;;Total ram usage:        0 bytes
 30558 ;; Hardware stack levels used:    1
 30559 ;; Hardware stack levels required when called:   21
 30560 ;; This function calls:
 30561 ;;		_MSDTasks
 30562 ;; This function is called by:
 30563 ;;		_main
 30564 ;; This function uses a non-reentrant model
 30565 ;;
 30566                           
 30567                           	psect	text134
 30568  01AB16                     __ptext134:
 30569                           	opt stack 0
 30570  01AB16                     _APP_DeviceMSDTasks:
 30571                           	opt stack 9
 30572                           
 30573                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 30574                           
 30575                           ; BSR set to: 0
 30576                           ;incstack = 0
 30577  01AB16  0E20               	movlw	32
 30578  01AB18  602B               	cpfslt	_USBDeviceState,c	;volatile
 30579  01AB1A  D001               	goto	l1233
 30580  01AB1C  0012               	return	
 30581  01AB1E                     l1233:
 30582                           
 30583                           ;app_device_msd.c: 118: }
 30584                           ;app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 30585  01AB1E  B265               	btfsc	3941,1,c	;volatile
 30586  01AB20  0012               	return	
 30587                           
 30588                           ;app_device_msd.c: 127: }
 30589                           ;app_device_msd.c: 129: MSDTasks();
 30590                           
 30591                           ;app_device_msd.c: 125: {
 30592                           ;app_device_msd.c: 126: return;
 30593  01AB22  ECE6  F09A         	call	_MSDTasks	;wreg free
 30594  01AB26  0012               	return		;funcret
 30595  01AB28                     __end_of_APP_DeviceMSDTasks:
 30596                           	opt stack 0
 30597                           tblptru	equ	0xFF8
 30598                           tblptrh	equ	0xFF7
 30599                           tblptrl	equ	0xFF6
 30600                           tablat	equ	0xFF5
 30601                           prodh	equ	0xFF4
 30602                           prodl	equ	0xFF3
 30603                           intcon	equ	0xFF2
 30604                           intcon2	equ	0xFF1
 30605                           intcon3	equ	0xFF0
 30606                           postinc0	equ	0xFEE
 30607                           wreg	equ	0xFE8
 30608                           indf1	equ	0xFE7
 30609                           postinc1	equ	0xFE6
 30610                           postdec1	equ	0xFE5
 30611                           plusw1	equ	0xFE3
 30612                           fsr1h	equ	0xFE2
 30613                           fsr1l	equ	0xFE1
 30614                           indf2	equ	0xFDF
 30615                           postinc2	equ	0xFDE
 30616                           postdec2	equ	0xFDD
 30617                           plusw2	equ	0xFDB
 30618                           fsr2h	equ	0xFDA
 30619                           fsr2l	equ	0xFD9
 30620                           status	equ	0xFD8
 30621                           
 30622 ;; *************** function _MSDTasks *****************
 30623 ;; Defined at:
 30624 ;;		line 335 in file "usb_device_msd.c"
 30625 ;; Parameters:    Size  Location     Type
 30626 ;;		None
 30627 ;; Auto vars:     Size  Location     Type
 30628 ;;  i               1   81[BANK0 ] unsigned char 
 30629 ;; Return value:  Size  Location     Type
 30630 ;;                  1    wreg      unsigned char 
 30631 ;; Registers used:
 30632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 30633 ;; Tracked objects:
 30634 ;;		On entry : 0/0
 30635 ;;		On exit  : 0/0
 30636 ;;		Unchanged: 0/0
 30637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30639 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30640 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30641 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30642 ;;Total ram usage:        6 bytes
 30643 ;; Hardware stack levels used:    1
 30644 ;; Hardware stack levels required when called:   20
 30645 ;; This function calls:
 30646 ;;		_MSDProcessCommand
 30647 ;;		_USBStallEndpoint
 30648 ;;		_USBTransferOnePacket
 30649 ;; This function is called by:
 30650 ;;		_APP_DeviceMSDTasks
 30651 ;; This function uses a non-reentrant model
 30652 ;;
 30653                           
 30654                           	psect	text135
 30655  0135CC                     __ptext135:
 30656                           	opt stack 0
 30657  0135CC                     _MSDTasks:
 30658                           	opt stack 9
 30659                           
 30660                           ;usb_device_msd.c: 337: uint8_t i;
 30661                           ;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURED_STATE)
 30662                           
 30663                           ;incstack = 0
 30664  0135CC  0E20               	movlw	32
 30665  0135CE  182B               	xorwf	_USBDeviceState,w,c	;volatile
 30666  0135D0  A4D8               	btfss	status,2,c
 30667  0135D2  0012               	return	
 30668                           
 30669                           ;usb_device_msd.c: 345: }
 30670                           ;usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 30671                           
 30672                           ;usb_device_msd.c: 343: {
 30673                           ;usb_device_msd.c: 344: return 0x00;
 30674                           ;	Return value of _MSDTasks is never used
 30675  0135D4  98A0               	bcf	4000,4,c	;volatile
 30676                           
 30677                           ;usb_device_msd.c: 357: switch(MSD_State)
 30678  0135D6  D143               	goto	l20160
 30679  0135D8                     l20062:
 30680                           
 30681                           ;usb_device_msd.c: 360: {
 30682                           ;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 30683  0135D8  0100               	movlb	0	; () banked
 30684  0135DA  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 30685  0135DC  0100               	movlb	0	; () banked
 30686  0135DE  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 30687  0135E0  B4D8               	btfsc	status,2,c
 30688  0135E2  D007               	goto	l20066
 30689                           
 30690                           ; BSR set to: 0
 30691  0135E4  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 30692  0135E8  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 30693  0135EC  0100               	movlb	0	; () banked
 30694  0135EE  BEDF               	btfsc	indf2,7,c
 30695  0135F0  D145               	goto	l590
 30696  0135F2                     l20066:
 30697                           
 30698                           ; BSR set to: 0
 30699                           ;usb_device_msd.c: 363: {
 30700                           ;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 30701  0135F2  0E00               	movlw	0
 30702  0135F4  0100               	movlb	0	; () banked
 30703  0135F6  6FB1               	movwf	MSDTasks@i& (0+255),b
 30704  0135F8                     l20068:
 30705                           
 30706                           ; BSR set to: 0
 30707  0135F8  0E1E               	movlw	30
 30708  0135FA  0100               	movlb	0	; () banked
 30709  0135FC  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 30710  0135FE  D001               	goto	l20072
 30711  013600  D017               	goto	l20078
 30712  013602                     l20072:
 30713                           
 30714                           ; BSR set to: 0
 30715                           ;usb_device_msd.c: 372: {
 30716                           ;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) = *((uint8_t*)&msd_cbw.dC
      +                          BWSignature + i);
 30717  013602  0100               	movlb	0	; () banked
 30718  013604  51B1               	movf	MSDTasks@i& (0+255),w,b
 30719  013606  0D01               	mullw	1
 30720  013608  0E40               	movlw	64
 30721  01360A  24F3               	addwf	prodl,w,c
 30722  01360C  6ED9               	movwf	fsr2l,c
 30723  01360E  0E0D               	movlw	13
 30724  013610  20F4               	addwfc	prodh,w,c
 30725  013612  6EDA               	movwf	fsr2h,c
 30726  013614  0100               	movlb	0	; () banked
 30727  013616  51B1               	movf	MSDTasks@i& (0+255),w,b
 30728  013618  0D01               	mullw	1
 30729  01361A  0E41               	movlw	low _gblCBW
 30730  01361C  24F3               	addwf	prodl,w,c
 30731  01361E  6EE1               	movwf	fsr1l,c
 30732  013620  0E02               	movlw	high _gblCBW
 30733  013622  20F4               	addwfc	prodh,w,c
 30734  013624  6EE2               	movwf	fsr1h,c
 30735  013626  CFDF FFE7          	movff	indf2,indf1
 30736                           
 30737                           ; BSR set to: 0
 30738  01362A  0100               	movlb	0	; () banked
 30739  01362C  2BB1               	incf	MSDTasks@i& (0+255),f,b
 30740  01362E  D7E4               	goto	l20068
 30741  013630                     l20078:
 30742                           
 30743                           ; BSR set to: 0
 30744                           ;usb_device_msd.c: 374: }
 30745                           ;usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHandle)->CNT) == 0x1f) && (g
      +                          blCBW.dCBWSignature == (uint32_t)0x43425355))
 30746  013630  0100               	movlb	0	; () banked
 30747  013632  EE20 F001          	lfsr	2,1
 30748  013636  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 30749  013638  26D9               	addwf	fsr2l,f,c
 30750  01363A  51DE               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 30751  01363C  22DA               	addwfc	fsr2h,f,c
 30752  01363E  0E1F               	movlw	31
 30753  013640  18DE               	xorwf	postinc2,w,c
 30754  013642  A4D8               	btfss	status,2,c
 30755  013644  D085               	goto	l20118
 30756                           
 30757                           ; BSR set to: 0
 30758  013646  0E55               	movlw	85
 30759  013648  0102               	movlb	2	; () banked
 30760  01364A  1941               	xorwf	_gblCBW& (0+255),w,b
 30761  01364C  E10C               	bnz	u19241
 30762  01364E  0E53               	movlw	83
 30763  013650  0102               	movlb	2	; () banked
 30764  013652  1942               	xorwf	(_gblCBW+1)& (0+255),w,b
 30765  013654  E17D               	bnz	l20118
 30766  013656  0E42               	movlw	66
 30767  013658  0102               	movlb	2	; () banked
 30768  01365A  1943               	xorwf	(_gblCBW+2)& (0+255),w,b
 30769  01365C  E179               	bnz	l20118
 30770  01365E  0E43               	movlw	67
 30771  013660  0102               	movlb	2	; () banked
 30772  013662  1944               	xorwf	(_gblCBW+3)& (0+255),w,b
 30773  013664  A4D8               	btfss	status,2,c
 30774  013666                     u19241:
 30775  013666  D074               	goto	l20118
 30776                           
 30777                           ; BSR set to: 2
 30778                           ;usb_device_msd.c: 378: {
 30779                           ;usb_device_msd.c: 381: MSDCBWValid = 1;
 30780  013668  0E01               	movlw	1
 30781  01366A  0101               	movlb	1	; () banked
 30782  01366C  6FF5               	movwf	_MSDCBWValid& (0+255),b
 30783                           
 30784                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u)
 30785                           ;usb_device_msd.c: 385: &&(gblCBW.bCBWCBLength <= 0x10)
 30786                           ;usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01)
 30787                           ;usb_device_msd.c: 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 30788  01366E  0102               	movlb	2	; () banked
 30789  013670  514E               	movf	(_gblCBW+13)& (0+255),w,b
 30790  013672  A4D8               	btfss	status,2,c
 30791  013674  D060               	goto	l20116
 30792                           
 30793                           ; BSR set to: 2
 30794  013676  0E11               	movlw	17
 30795  013678  0102               	movlb	2	; () banked
 30796  01367A  614F               	cpfslt	(_gblCBW+14)& (0+255),b
 30797  01367C  D05C               	goto	l20116
 30798                           
 30799                           ; BSR set to: 2
 30800  01367E  0102               	movlb	2	; () banked
 30801  013680  514F               	movf	(_gblCBW+14)& (0+255),w,b
 30802  013682  B4D8               	btfsc	status,2,c
 30803  013684  D058               	goto	l20116
 30804                           
 30805                           ; BSR set to: 2
 30806  013686  C24D  F0AC         	movff	_gblCBW+12,??_MSDTasks
 30807  01368A  0E3F               	movlw	63
 30808  01368C  0100               	movlb	0	; () banked
 30809  01368E  17AC               	andwf	??_MSDTasks& (0+255),f,b
 30810  013690  A4D8               	btfss	status,2,c
 30811  013692  D051               	goto	l20116
 30812                           
 30813                           ; BSR set to: 0
 30814                           ;usb_device_msd.c: 388: {
 30815                           ;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x53425355;
 30816  013694  0E55               	movlw	85
 30817  013696  010D               	movlb	13	; () banked
 30818  013698  6F80               	movwf	128,b	;volatile
 30819  01369A  0E53               	movlw	83
 30820  01369C  6F81               	movwf	129,b	;volatile
 30821  01369E  0E42               	movlw	66
 30822  0136A0  6F82               	movwf	130,b	;volatile
 30823  0136A2  0E53               	movlw	83
 30824  0136A4  6F83               	movwf	131,b	;volatile
 30825                           
 30826                           ; BSR set to: 13
 30827                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 30828  0136A6  C245  FD84         	movff	_gblCBW+4,3460	;volatile
 30829  0136AA  C246  FD85         	movff	_gblCBW+5,3461	;volatile
 30830  0136AE  C247  FD86         	movff	_gblCBW+6,3462	;volatile
 30831  0136B2  C248  FD87         	movff	_gblCBW+7,3463	;volatile
 30832                           
 30833                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 30834  0136B6  0E00               	movlw	0
 30835  0136B8  010D               	movlb	13	; () banked
 30836  0136BA  6F88               	movwf	136,b	;volatile
 30837  0136BC  0E00               	movlw	0
 30838  0136BE  6F89               	movwf	137,b	;volatile
 30839  0136C0  0E00               	movlw	0
 30840  0136C2  6F8A               	movwf	138,b	;volatile
 30841  0136C4  0E00               	movlw	0
 30842  0136C6  6F8B               	movwf	139,b	;volatile
 30843                           
 30844                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 30845  0136C8  0E00               	movlw	0
 30846  0136CA  010D               	movlb	13	; () banked
 30847  0136CC  6F8C               	movwf	140,b	;volatile
 30848                           
 30849                           ; BSR set to: 13
 30850                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 30851  0136CE  0100               	movlb	0	; () banked
 30852  0136D0  69E6               	setf	_MSDCommandState& (0+255),b
 30853                           
 30854                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 30855  0136D2  0E00               	movlw	0
 30856  0136D4  0101               	movlb	1	; () banked
 30857  0136D6  6FF9               	movwf	_MSDReadState& (0+255),b
 30858                           
 30859                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 30860  0136D8  0E00               	movlw	0
 30861  0136DA  6E1F               	movwf	_MSDWriteState,c
 30862                           
 30863                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 30864  0136DC  0E00               	movlw	0
 30865  0136DE  0101               	movlb	1	; () banked
 30866  0136E0  6FF8               	movwf	_MSDRetryAttempt& (0+255),b
 30867                           
 30868                           ; BSR set to: 1
 30869                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 30870  0136E2  0E03               	movlw	3
 30871  0136E4  0102               	movlb	2	; () banked
 30872  0136E6  1950               	xorwf	(_gblCBW+15)& (0+255),w,b
 30873  0136E8  B4D8               	btfsc	status,2,c
 30874  0136EA  D00B               	goto	l20102
 30875                           
 30876                           ; BSR set to: 2
 30877                           ;usb_device_msd.c: 421: {
 30878                           ;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 30879  0136EC  0102               	movlb	2	; () banked
 30880  0136EE  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 30881  0136F0  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 30882  0136F2  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 30883  0136F4  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 30884                           
 30885                           ; BSR set to: 2
 30886                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 30887  0136F6  0E00               	movlw	0
 30888  0136F8  0102               	movlb	2	; () banked
 30889  0136FA  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 30890                           
 30891                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 30892  0136FC  0E00               	movlw	0
 30893  0136FE  0102               	movlb	2	; () banked
 30894  013700  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 30895  013702                     l20102:
 30896                           
 30897                           ; BSR set to: 2
 30898                           ;usb_device_msd.c: 425: }
 30899                           ;usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 30900  013702  0102               	movlb	2	; () banked
 30901  013704  AF4D               	btfss	(_gblCBW+12)& (0+255),7,b
 30902  013706  D002               	goto	l20106
 30903                           
 30904                           ; BSR set to: 2
 30905                           ;usb_device_msd.c: 432: {
 30906                           ;usb_device_msd.c: 433: MSD_State = 0x01;
 30907  013708  0E01               	movlw	1
 30908  01370A  D001               	goto	L20
 30909  01370C                     l20106:
 30910                           
 30911                           ;usb_device_msd.c: 435: else
 30912                           ;usb_device_msd.c: 436: {
 30913                           ;usb_device_msd.c: 437: MSD_State = 0x02;
 30914  01370C  0E02               	movlw	2
 30915  01370E                     L20:
 30916  01370E  0100               	movlb	0	; () banked
 30917  013710  6FE7               	movwf	_MSD_State& (0+255),b
 30918                           
 30919                           ; BSR set to: 0
 30920                           ;usb_device_msd.c: 438: }
 30921                           ;usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 30922                           
 30923                           ; BSR set to: 0
 30924  013712  0102               	movlb	2	; () banked
 30925  013714  5149               	movf	(_gblCBW+8)& (0+255),w,b
 30926  013716  0102               	movlb	2	; () banked
 30927  013718  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 30928  01371A  0102               	movlb	2	; () banked
 30929  01371C  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 30930  01371E  0102               	movlb	2	; () banked
 30931  013720  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 30932  013722  B4D8               	btfsc	status,2,c
 30933  013724  D002               	goto	l20112
 30934                           
 30935                           ; BSR set to: 2
 30936                           ;usb_device_msd.c: 443: {
 30937                           ;usb_device_msd.c: 444: MSDHostNoData = 0;
 30938  013726  0E00               	movlw	0
 30939  013728  D001               	goto	L21
 30940  01372A                     l20112:
 30941                           
 30942                           ;usb_device_msd.c: 446: else
 30943                           ;usb_device_msd.c: 447: {
 30944                           ;usb_device_msd.c: 448: MSDHostNoData = 1;
 30945  01372A  0E01               	movlw	1
 30946  01372C                     L21:
 30947  01372C  0100               	movlb	0	; () banked
 30948  01372E  6FE5               	movwf	_MSDHostNoData& (0+255),b
 30949                           
 30950                           ; BSR set to: 0
 30951                           ;usb_device_msd.c: 449: }
 30952                           ;usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 30953                           
 30954                           ; BSR set to: 0
 30955  013730  C250  F0E6         	movff	_gblCBW+15,_MSDCommandState
 30956                           
 30957                           ;usb_device_msd.c: 454: }
 30958  013734  D0A3               	goto	l590
 30959  013736                     l20116:
 30960                           
 30961                           ;usb_device_msd.c: 455: else
 30962                           ;usb_device_msd.c: 456: {
 30963                           ;usb_device_msd.c: 460: USBStallEndpoint(2u, 1);
 30964  013736  0E01               	movlw	1
 30965  013738  0100               	movlb	0	; () banked
 30966  01373A  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 30967  01373C  0E02               	movlw	2
 30968  01373E  ECC7  F0AB         	call	_USBStallEndpoint
 30969                           
 30970                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 30971  013742  0E00               	movlw	0
 30972  013744  0100               	movlb	0	; () banked
 30973  013746  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 30974  013748  0E02               	movlw	2
 30975  01374A  ECC7  F0AB         	call	_USBStallEndpoint
 30976                           
 30977                           ;usb_device_msd.c: 462: }
 30978                           ;usb_device_msd.c: 463: }
 30979  01374E  D096               	goto	l590
 30980  013750                     l20118:
 30981                           
 30982                           ;usb_device_msd.c: 464: else
 30983                           ;usb_device_msd.c: 465: {
 30984                           ;usb_device_msd.c: 469: USBStallEndpoint(2u, 1);
 30985  013750  0E01               	movlw	1
 30986  013752  0100               	movlb	0	; () banked
 30987  013754  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 30988  013756  0E02               	movlw	2
 30989  013758  ECC7  F0AB         	call	_USBStallEndpoint
 30990                           
 30991                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 30992  01375C  0E00               	movlw	0
 30993  01375E  0100               	movlb	0	; () banked
 30994  013760  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 30995  013762  0E02               	movlw	2
 30996  013764  ECC7  F0AB         	call	_USBStallEndpoint
 30997                           
 30998                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 30999  013768  0E00               	movlw	0
 31000  01376A  0101               	movlb	1	; () banked
 31001  01376C  6FF5               	movwf	_MSDCBWValid& (0+255),b
 31002                           
 31003                           ; BSR set to: 1
 31004                           ;usb_device_msd.c: 474: }
 31005                           ;usb_device_msd.c: 475: }
 31006                           ;usb_device_msd.c: 476: break;
 31007                           
 31008                           ; BSR set to: 1
 31009  01376E  D086               	goto	l590
 31010  013770                     l20122:
 31011                           
 31012                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 31013  013770  EC86  F0A6         	call	_MSDProcessCommand	;wreg free
 31014  013774  0AFF               	xorlw	255
 31015  013776  A4D8               	btfss	status,2,c
 31016  013778  D081               	goto	l590
 31017  01377A  D016               	goto	l595
 31018  01377C                     l20126:
 31019                           
 31020                           ; BSR set to: 0
 31021                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 31022  01377C  EC86  F0A6         	call	_MSDProcessCommand	;wreg free
 31023  013780  0AFF               	xorlw	255
 31024  013782  A4D8               	btfss	status,2,c
 31025  013784  D07B               	goto	l590
 31026                           
 31027                           ;usb_device_msd.c: 487: {
 31028                           ;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_csw.dCSWDataResidue!=0))
 31029  013786  010D               	movlb	13	; () banked
 31030  013788  518C               	movf	140,w,b	;volatile
 31031  01378A  A4D8               	btfss	status,2,c
 31032  01378C  D00D               	goto	l595
 31033                           
 31034                           ; BSR set to: 13
 31035  01378E  010D               	movlb	13	; () banked
 31036  013790  5188               	movf	136,w,b	;volatile
 31037  013792  010D               	movlb	13	; () banked
 31038  013794  1189               	iorwf	137,w,b	;volatile
 31039  013796  010D               	movlb	13	; () banked
 31040  013798  118A               	iorwf	138,w,b	;volatile
 31041  01379A  010D               	movlb	13	; () banked
 31042  01379C  118B               	iorwf	139,w,b	;volatile
 31043  01379E  B4D8               	btfsc	status,2,c
 31044  0137A0  D003               	goto	l595
 31045                           
 31046                           ; BSR set to: 13
 31047                           ;usb_device_msd.c: 490: {
 31048                           ;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 31049  0137A2  0E02               	movlw	2
 31050  0137A4  010D               	movlb	13	; () banked
 31051  0137A6  6F8C               	movwf	140,b	;volatile
 31052  0137A8                     l595:
 31053                           
 31054                           ; BSR set to: 13
 31055                           ;usb_device_msd.c: 492: }
 31056                           ;usb_device_msd.c: 493: MSD_State = 0x03;
 31057  0137A8  0E03               	movlw	3
 31058  0137AA  D049               	goto	L22
 31059  0137AC                     l20134:
 31060                           
 31061                           ; BSR set to: 0
 31062  0137AC  C014  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2694
 31063  0137B0  C015  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2694+1
 31064                           
 31065                           ; BSR set to: 0
 31066                           
 31067                           ; BSR set to: 0
 31068                           
 31069                           ; BSR set to: 0
 31070  0137B4  0100               	movlb	0	; () banked
 31071  0137B6  51AD               	movf	_MSDTasks$2694& (0+255),w,b
 31072  0137B8  0100               	movlb	0	; () banked
 31073  0137BA  11AE               	iorwf	(_MSDTasks$2694+1)& (0+255),w,b
 31074  0137BC  B4D8               	btfsc	status,2,c
 31075  0137BE  D00B               	goto	l20146
 31076                           
 31077                           ; BSR set to: 0
 31078  0137C0  C014  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2695
 31079  0137C4  C015  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2695+1
 31080                           
 31081                           ; BSR set to: 0
 31082                           
 31083                           ; BSR set to: 0
 31084                           
 31085                           ; BSR set to: 0
 31086                           
 31087                           ; BSR set to: 0
 31088  0137C8  C0AF  FFD9         	movff	_MSDTasks$2695,fsr2l
 31089  0137CC  C0B0  FFDA         	movff	_MSDTasks$2695+1,fsr2h
 31090  0137D0  0100               	movlb	0	; () banked
 31091  0137D2  BEDF               	btfsc	indf2,7,c
 31092  0137D4  D053               	goto	l590
 31093  0137D6                     l20146:
 31094                           
 31095                           ; BSR set to: 0
 31096                           ;usb_device_msd.c: 502: }
 31097                           ;usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_csw,0x
      +                          0d);
 31098  0137D6  0E01               	movlw	1
 31099  0137D8  0100               	movlb	0	; () banked
 31100  0137DA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 31101  0137DC  0E80               	movlw	128
 31102  0137DE  0100               	movlb	0	; () banked
 31103  0137E0  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 31104  0137E2  0E0D               	movlw	13
 31105  0137E4  0100               	movlb	0	; () banked
 31106  0137E6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 31107  0137E8  0E0D               	movlw	13
 31108  0137EA  0100               	movlb	0	; () banked
 31109  0137EC  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 31110  0137EE  0E02               	movlw	2
 31111  0137F0  EC69  F0AC         	call	_USBTransferOnePacket
 31112  0137F4  C060  F0DB         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 31113  0137F8  C061  F0DC         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 31114                           
 31115                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 31116  0137FC  0100               	movlb	0	; () banked
 31117  0137FE  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 31118  013800  0100               	movlb	0	; () banked
 31119  013802  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 31120  013804  B4D8               	btfsc	status,2,c
 31121  013806  D007               	goto	l20152
 31122                           
 31123                           ; BSR set to: 0
 31124  013808  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 31125  01380C  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 31126  013810  0100               	movlb	0	; () banked
 31127  013812  BEDF               	btfsc	indf2,7,c
 31128  013814  D013               	goto	l20154
 31129  013816                     l20152:
 31130                           
 31131                           ; BSR set to: 0
 31132                           ;usb_device_msd.c: 509: {
 31133                           ;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,6
      +                          4u);
 31134  013816  0E00               	movlw	0
 31135  013818  0100               	movlb	0	; () banked
 31136  01381A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 31137  01381C  0E40               	movlw	64
 31138  01381E  0100               	movlb	0	; () banked
 31139  013820  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 31140  013822  0E0D               	movlw	13
 31141  013824  0100               	movlb	0	; () banked
 31142  013826  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 31143  013828  0E40               	movlw	64
 31144  01382A  0100               	movlb	0	; () banked
 31145  01382C  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 31146  01382E  0E02               	movlw	2
 31147  013830  EC69  F0AC         	call	_USBTransferOnePacket
 31148  013834  C060  F0DD         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 31149  013838  C061  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 31150  01383C                     l20154:
 31151                           
 31152                           ;usb_device_msd.c: 511: }
 31153                           ;usb_device_msd.c: 512: MSD_State=0x00;
 31154  01383C  0E00               	movlw	0
 31155  01383E                     L22:
 31156  01383E  0100               	movlb	0	; () banked
 31157  013840  6FE7               	movwf	_MSD_State& (0+255),b
 31158                           
 31159                           ;usb_device_msd.c: 513: break;
 31160  013842  D01C               	goto	l590
 31161  013844                     l20156:
 31162                           
 31163                           ; BSR set to: 0
 31164                           ;usb_device_msd.c: 518: MSD_State=0x00;
 31165  013844  0E00               	movlw	0
 31166  013846  0100               	movlb	0	; () banked
 31167  013848  6FE7               	movwf	_MSD_State& (0+255),b
 31168                           
 31169                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 31170  01384A  0E02               	movlw	2
 31171  01384C  010D               	movlb	13	; () banked
 31172  01384E  6F8C               	movwf	140,b	;volatile
 31173                           
 31174                           ; BSR set to: 13
 31175                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 31176  013850  0E00               	movlw	0
 31177  013852  0100               	movlb	0	; () banked
 31178  013854  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31179  013856  0E02               	movlw	2
 31180  013858  ECC7  F0AB         	call	_USBStallEndpoint
 31181                           
 31182                           ;usb_device_msd.c: 521: }
 31183  01385C  D00F               	goto	l590
 31184  01385E                     l20160:
 31185  01385E  0100               	movlb	0	; () banked
 31186  013860  51E7               	movf	_MSD_State& (0+255),w,b
 31187                           
 31188                           ; Switch size 1, requested type "space"
 31189                           ; Number of cases is 4, Range of values is 0 to 3
 31190                           ; switch strategies available:
 31191                           ; Name         Instructions Cycles
 31192                           ; simple_byte           13     7 (average)
 31193                           ;	Chosen strategy is simple_byte
 31194  013862  0A00               	xorlw	0	; case 0
 31195  013864  B4D8               	btfsc	status,2,c
 31196  013866  D6B8               	goto	l20062
 31197  013868  0A01               	xorlw	1	; case 1
 31198  01386A  B4D8               	btfsc	status,2,c
 31199  01386C  D781               	goto	l20122
 31200  01386E  0A03               	xorlw	3	; case 2
 31201  013870  B4D8               	btfsc	status,2,c
 31202  013872  D784               	goto	l20126
 31203  013874  0A01               	xorlw	1	; case 3
 31204  013876  B4D8               	btfsc	status,2,c
 31205  013878  D799               	goto	l20134
 31206  01387A  D7E4               	goto	l20156
 31207  01387C                     l590:
 31208                           
 31209                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 31210  01387C  88A0               	bsf	4000,4,c	;volatile
 31211                           
 31212                           ;usb_device_msd.c: 526: return MSD_State;
 31213                           ;	Return value of _MSDTasks is never used
 31214  01387E  0012               	return		;funcret
 31215  013880                     __end_of_MSDTasks:
 31216                           	opt stack 0
 31217                           tblptru	equ	0xFF8
 31218                           tblptrh	equ	0xFF7
 31219                           tblptrl	equ	0xFF6
 31220                           tablat	equ	0xFF5
 31221                           prodh	equ	0xFF4
 31222                           prodl	equ	0xFF3
 31223                           intcon	equ	0xFF2
 31224                           intcon2	equ	0xFF1
 31225                           intcon3	equ	0xFF0
 31226                           postinc0	equ	0xFEE
 31227                           wreg	equ	0xFE8
 31228                           indf1	equ	0xFE7
 31229                           postinc1	equ	0xFE6
 31230                           postdec1	equ	0xFE5
 31231                           plusw1	equ	0xFE3
 31232                           fsr1h	equ	0xFE2
 31233                           fsr1l	equ	0xFE1
 31234                           indf2	equ	0xFDF
 31235                           postinc2	equ	0xFDE
 31236                           postdec2	equ	0xFDD
 31237                           plusw2	equ	0xFDB
 31238                           fsr2h	equ	0xFDA
 31239                           fsr2l	equ	0xFD9
 31240                           status	equ	0xFD8
 31241                           
 31242 ;; *************** function _MSDProcessCommand *****************
 31243 ;; Defined at:
 31244 ;;		line 553 in file "usb_device_msd.c"
 31245 ;; Parameters:    Size  Location     Type
 31246 ;;		None
 31247 ;; Auto vars:     Size  Location     Type
 31248 ;;		None
 31249 ;; Return value:  Size  Location     Type
 31250 ;;                  1    wreg      unsigned char 
 31251 ;; Registers used:
 31252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31253 ;; Tracked objects:
 31254 ;;		On entry : 0/0
 31255 ;;		On exit  : 0/0
 31256 ;;		Unchanged: 0/0
 31257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31260 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31261 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31262 ;;Total ram usage:        5 bytes
 31263 ;; Hardware stack levels used:    1
 31264 ;; Hardware stack levels required when called:   19
 31265 ;; This function calls:
 31266 ;;		_ExternalFlash_MediaDetect
 31267 ;;		_ExternalFlash_MediaInitialize
 31268 ;;		_MSDProcessCommandMediaAbsent
 31269 ;;		_MSDProcessCommandMediaPresent
 31270 ;; This function is called by:
 31271 ;;		_MSDTasks
 31272 ;; This function uses a non-reentrant model
 31273 ;;
 31274                           
 31275                           	psect	text136
 31276  014D0C                     __ptext136:
 31277                           	opt stack 0
 31278  014D0C                     _MSDProcessCommand:
 31279                           	opt stack 9
 31280                           
 31281                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 31282                           
 31283                           ;incstack = 0
 31284  014D0C  C2D0  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 31285  014D10  C2D1  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 31286  014D14  EE22  F0C4         	lfsr	2,_LUN+9
 31287  014D18  D801               	call	u18198
 31288  014D1A  D00A               	goto	u18199
 31289  014D1C                     u18198:
 31290  014D1C  0005               	push	
 31291  014D1E  6EFA               	movwf	pclath,c
 31292  014D20  50DE               	movf	postinc2,w,c
 31293  014D22  6EFD               	movwf	tosl,c
 31294  014D24  50DE               	movf	postinc2,w,c
 31295  014D26  6EFE               	movwf	tosh,c
 31296  014D28  50DE               	movf	postinc2,w,c
 31297  014D2A  6EFF               	movwf	tosu,c
 31298  014D2C  50FA               	movf	pclath,w,c
 31299  014D2E  0012               	return		;indir
 31300  014D30                     u18199:
 31301  014D30  0900               	iorlw	0
 31302  014D32  B4D8               	btfsc	status,2,c
 31303  014D34  D00C               	goto	l19182
 31304  014D36  0102               	movlb	2	; () banked
 31305  014D38  514E               	movf	(_gblCBW+13)& (0+255),w,b
 31306  014D3A  0D01               	mullw	1
 31307  014D3C  0EF6               	movlw	low _SoftDetach
 31308  014D3E  24F3               	addwf	prodl,w,c
 31309  014D40  6ED9               	movwf	fsr2l,c
 31310  014D42  0E01               	movlw	high _SoftDetach
 31311  014D44  20F4               	addwfc	prodh,w,c
 31312  014D46  6EDA               	movwf	fsr2h,c
 31313  014D48  04DE               	decf	postinc2,w,c
 31314  014D4A  A4D8               	btfss	status,2,c
 31315  014D4C  D025               	goto	l19186
 31316  014D4E                     l19182:
 31317                           
 31318                           ;usb_device_msd.c: 558: {
 31319                           ;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCBW.bCBWLUN);
 31320  014D4E  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 31321  014D52  0E01               	movlw	1
 31322  014D54  0100               	movlb	0	; () banked
 31323  014D56  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 31324  014D58  0E00               	movlw	0
 31325  014D5A  0100               	movlb	0	; () banked
 31326  014D5C  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 31327  014D5E  0100               	movlb	0	; () banked
 31328  014D60  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 31329  014D62  D004               	goto	u18224
 31330  014D64                     u18225:
 31331  014D64  90D8               	bcf	status,0,c
 31332  014D66  0100               	movlb	0	; () banked
 31333  014D68  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 31334  014D6A  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 31335  014D6C                     u18224:
 31336  014D6C  0100               	movlb	0	; () banked
 31337  014D6E  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 31338  014D70  D7F9               	goto	u18225
 31339  014D72  0100               	movlb	0	; () banked
 31340  014D74  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 31341  014D76  0100               	movlb	0	; () banked
 31342  014D78  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 31343  014D7A  0100               	movlb	0	; () banked
 31344  014D7C  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 31345  014D7E  0100               	movlb	0	; () banked
 31346  014D80  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 31347  014D82  0100               	movlb	0	; () banked
 31348  014D84  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 31349  014D86  0102               	movlb	2	; () banked
 31350  014D88  17B2               	andwf	_gblMediaPresent& (0+255),f,b
 31351  014D8A  0100               	movlb	0	; () banked
 31352  014D8C  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 31353  014D8E  0102               	movlb	2	; () banked
 31354  014D90  17B3               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 31355                           
 31356                           ; BSR set to: 2
 31357                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 31358  014D92  EC08  F0CA         	call	_MSDProcessCommandMediaAbsent	;wreg free
 31359                           
 31360                           ;usb_device_msd.c: 563: }
 31361  014D96  D067               	goto	l19206
 31362  014D98                     l19186:
 31363                           
 31364                           ;usb_device_msd.c: 564: else
 31365                           ;usb_device_msd.c: 565: {
 31366                           ;usb_device_msd.c: 567: if((gblMediaPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 31367  014D98  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 31368  014D9C  0E01               	movlw	1
 31369  014D9E  0100               	movlb	0	; () banked
 31370  014DA0  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 31371  014DA2  0E00               	movlw	0
 31372  014DA4  0100               	movlb	0	; () banked
 31373  014DA6  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 31374  014DA8  0100               	movlb	0	; () banked
 31375  014DAA  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 31376  014DAC  D004               	goto	u18234
 31377  014DAE                     u18235:
 31378  014DAE  90D8               	bcf	status,0,c
 31379  014DB0  0100               	movlb	0	; () banked
 31380  014DB2  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 31381  014DB4  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 31382  014DB6                     u18234:
 31383  014DB6  0100               	movlb	0	; () banked
 31384  014DB8  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 31385  014DBA  D7F9               	goto	u18235
 31386  014DBC  0102               	movlb	2	; () banked
 31387  014DBE  51B2               	movf	_gblMediaPresent& (0+255),w,b
 31388  014DC0  0100               	movlb	0	; () banked
 31389  014DC2  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 31390  014DC4  0102               	movlb	2	; () banked
 31391  014DC6  51B3               	movf	(_gblMediaPresent+1)& (0+255),w,b
 31392  014DC8  0100               	movlb	0	; () banked
 31393  014DCA  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 31394  014DCC  0100               	movlb	0	; () banked
 31395  014DCE  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 31396  014DD0  0100               	movlb	0	; () banked
 31397  014DD2  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 31398  014DD4  A4D8               	btfss	status,2,c
 31399  014DD6  D045               	goto	l19204
 31400                           
 31401                           ; BSR set to: 0
 31402                           ;usb_device_msd.c: 568: {
 31403                           ;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaParameters))
 31404  014DD8  C2D0  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 31405  014DDC  C2D1  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 31406  014DE0  D801               	call	u18258
 31407  014DE2  D00B               	goto	u18259
 31408  014DE4                     u18258:
 31409  014DE4  0005               	push	
 31410  014DE6  6EFA               	movwf	pclath,c
 31411  014DE8  0102               	movlb	2	; () banked
 31412  014DEA  51BB               	movf	_LUN& (0+255),w,b
 31413  014DEC  6EFD               	movwf	tosl,c
 31414  014DEE  51BC               	movf	(_LUN+1)& (0+255),w,b
 31415  014DF0  6EFE               	movwf	tosh,c
 31416  014DF2  51BD               	movf	(_LUN+2)& (0+255),w,b
 31417  014DF4  6EFF               	movwf	tosu,c
 31418  014DF6  50FA               	movf	pclath,w,c
 31419  014DF8  0012               	return		;indir
 31420  014DFA                     u18259:
 31421  014DFA  0100               	movlb	0	; () banked
 31422  014DFC  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 31423  014DFE  0100               	movlb	0	; () banked
 31424  014E00  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 31425  014E02  B4D8               	btfsc	status,2,c
 31426  014E04  D02B               	goto	l19202
 31427                           
 31428                           ; BSR set to: 0
 31429                           ;usb_device_msd.c: 571: {
 31430                           ;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW.bCBWLUN);
 31431  014E06  C24E  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 31432  014E0A  0E01               	movlw	1
 31433  014E0C  0100               	movlb	0	; () banked
 31434  014E0E  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 31435  014E10  0E00               	movlw	0
 31436  014E12  0100               	movlb	0	; () banked
 31437  014E14  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 31438  014E16  0100               	movlb	0	; () banked
 31439  014E18  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 31440  014E1A  D004               	goto	u18274
 31441  014E1C                     u18275:
 31442  014E1C  90D8               	bcf	status,0,c
 31443  014E1E  0100               	movlb	0	; () banked
 31444  014E20  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 31445  014E22  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 31446  014E24                     u18274:
 31447  014E24  0100               	movlb	0	; () banked
 31448  014E26  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 31449  014E28  D7F9               	goto	u18275
 31450  014E2A  0100               	movlb	0	; () banked
 31451  014E2C  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 31452  014E2E  0102               	movlb	2	; () banked
 31453  014E30  13B2               	iorwf	_gblMediaPresent& (0+255),f,b
 31454  014E32  0100               	movlb	0	; () banked
 31455  014E34  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 31456  014E36  0102               	movlb	2	; () banked
 31457  014E38  13B3               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 31458                           
 31459                           ; BSR set to: 2
 31460                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 31461  014E3A  0102               	movlb	2	; () banked
 31462  014E3C  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 31463  014E3E  0BF0               	andlw	-16
 31464  014E40  0906               	iorlw	6
 31465  014E42  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 31466                           
 31467                           ; BSR set to: 2
 31468                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 31469  014E44  0E28               	movlw	40
 31470  014E46  0102               	movlb	2	; () banked
 31471  014E48  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 31472                           
 31473                           ; BSR set to: 2
 31474                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 31475  014E4A  0E00               	movlw	0
 31476  014E4C  0102               	movlb	2	; () banked
 31477  014E4E  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 31478                           
 31479                           ; BSR set to: 2
 31480                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 31481  014E50  0E01               	movlw	1
 31482  014E52  010D               	movlb	13	; () banked
 31483  014E54  6F8C               	movwf	140,b	;volatile
 31484                           
 31485                           ; BSR set to: 13
 31486                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 31487  014E56  EC05  F088         	call	_MSDProcessCommandMediaPresent	;wreg free
 31488                           
 31489                           ;usb_device_msd.c: 589: }
 31490  014E5A  D005               	goto	l19206
 31491  014E5C                     l19202:
 31492                           
 31493                           ;usb_device_msd.c: 590: else
 31494                           ;usb_device_msd.c: 591: {
 31495                           ;usb_device_msd.c: 593: MSDProcessCommandMediaAbsent();
 31496  014E5C  EC08  F0CA         	call	_MSDProcessCommandMediaAbsent	;wreg free
 31497                           
 31498                           ;usb_device_msd.c: 594: }
 31499                           ;usb_device_msd.c: 595: }
 31500  014E60  D002               	goto	l19206
 31501  014E62                     l19204:
 31502                           
 31503                           ;usb_device_msd.c: 596: else
 31504                           ;usb_device_msd.c: 597: {
 31505                           ;usb_device_msd.c: 600: MSDProcessCommandMediaPresent();
 31506  014E62  EC05  F088         	call	_MSDProcessCommandMediaPresent	;wreg free
 31507  014E66                     l19206:
 31508                           
 31509                           ;usb_device_msd.c: 601: }
 31510                           ;usb_device_msd.c: 602: }
 31511                           ;usb_device_msd.c: 604: return MSDCommandState;
 31512  014E66  0100               	movlb	0	; () banked
 31513  014E68  51E6               	movf	_MSDCommandState& (0+255),w,b
 31514  014E6A  0012               	return	
 31515  014E6C                     __end_of_MSDProcessCommand:
 31516                           	opt stack 0
 31517                           tosu	equ	0xFFF
 31518                           tosh	equ	0xFFE
 31519                           tosl	equ	0xFFD
 31520                           pclath	equ	0xFFA
 31521                           tblptru	equ	0xFF8
 31522                           tblptrh	equ	0xFF7
 31523                           tblptrl	equ	0xFF6
 31524                           tablat	equ	0xFF5
 31525                           prodh	equ	0xFF4
 31526                           prodl	equ	0xFF3
 31527                           intcon	equ	0xFF2
 31528                           intcon2	equ	0xFF1
 31529                           intcon3	equ	0xFF0
 31530                           postinc0	equ	0xFEE
 31531                           wreg	equ	0xFE8
 31532                           indf1	equ	0xFE7
 31533                           postinc1	equ	0xFE6
 31534                           postdec1	equ	0xFE5
 31535                           plusw1	equ	0xFE3
 31536                           fsr1h	equ	0xFE2
 31537                           fsr1l	equ	0xFE1
 31538                           indf2	equ	0xFDF
 31539                           postinc2	equ	0xFDE
 31540                           postdec2	equ	0xFDD
 31541                           plusw2	equ	0xFDB
 31542                           fsr2h	equ	0xFDA
 31543                           fsr2l	equ	0xFD9
 31544                           status	equ	0xFD8
 31545                           
 31546 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 31547 ;; Defined at:
 31548 ;;		line 635 in file "usb_device_msd.c"
 31549 ;; Parameters:    Size  Location     Type
 31550 ;;		None
 31551 ;; Auto vars:     Size  Location     Type
 31552 ;;		None
 31553 ;; Return value:  Size  Location     Type
 31554 ;;                  1    wreg      void 
 31555 ;; Registers used:
 31556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31557 ;; Tracked objects:
 31558 ;;		On entry : 0/0
 31559 ;;		On exit  : 0/0
 31560 ;;		Unchanged: 0/0
 31561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31566 ;;Total ram usage:        0 bytes
 31567 ;; Hardware stack levels used:    1
 31568 ;; Hardware stack levels required when called:   18
 31569 ;; This function calls:
 31570 ;;		_MSDErrorHandler
 31571 ;;		_MSDProcessCommandMediaPresent
 31572 ;;		_ResetSenseData
 31573 ;; This function is called by:
 31574 ;;		_MSDProcessCommand
 31575 ;; This function uses a non-reentrant model
 31576 ;;
 31577                           
 31578                           	psect	text137
 31579  019410                     __ptext137:
 31580                           	opt stack 0
 31581  019410                     _MSDProcessCommandMediaAbsent:
 31582                           	opt stack 9
 31583                           
 31584                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 31585                           
 31586                           ; BSR set to: 0
 31587                           ;incstack = 0
 31588  019410  D020               	goto	l18762
 31589  019412                     l18740:
 31590                           
 31591                           ;usb_device_msd.c: 646: ResetSenseData();
 31592  019412  EC3F  F0C4         	call	_ResetSenseData	;wreg free
 31593                           
 31594                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 31595  019416  0102               	movlb	2	; () banked
 31596  019418  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 31597  01941A  0BF0               	andlw	-16
 31598  01941C  0902               	iorlw	2
 31599  01941E  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 31600                           
 31601                           ; BSR set to: 2
 31602                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 31603  019420  0E3A               	movlw	58
 31604  019422  0102               	movlb	2	; () banked
 31605  019424  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 31606                           
 31607                           ; BSR set to: 2
 31608                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 31609  019426  0E00               	movlw	0
 31610  019428  0102               	movlb	2	; () banked
 31611  01942A  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 31612                           
 31613                           ; BSR set to: 2
 31614                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 31615  01942C  EC05  F088         	call	_MSDProcessCommandMediaPresent	;wreg free
 31616                           
 31617                           ;usb_device_msd.c: 655: break;
 31618  019430  0012               	return	
 31619  019432                     l18750:
 31620                           
 31621                           ;usb_device_msd.c: 658: case 0x00:
 31622                           ;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 31623  019432  0E01               	movlw	1
 31624  019434  010D               	movlb	13	; () banked
 31625  019436  6F8C               	movwf	140,b	;volatile
 31626                           
 31627                           ; BSR set to: 13
 31628                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 31629  019438  0100               	movlb	0	; () banked
 31630  01943A  69E6               	setf	_MSDCommandState& (0+255),b
 31631                           
 31632                           ;usb_device_msd.c: 665: break;
 31633  01943C  0012               	return	
 31634  01943E                     l18754:
 31635                           
 31636                           ; BSR set to: 0
 31637                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 31638  01943E  EC05  F088         	call	_MSDProcessCommandMediaPresent	;wreg free
 31639                           
 31640                           ;usb_device_msd.c: 671: break;
 31641  019442  0012               	return	
 31642  019444                     l18756:
 31643                           
 31644                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 31645  019444  EC05  F088         	call	_MSDProcessCommandMediaPresent	;wreg free
 31646                           
 31647                           ;usb_device_msd.c: 677: break;
 31648  019448  0012               	return	
 31649  01944A                     l18758:
 31650                           
 31651                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 31652  01944A  0E7F               	movlw	127
 31653  01944C  EC03  F0AD         	call	_MSDErrorHandler
 31654                           
 31655                           ;usb_device_msd.c: 685: }
 31656                           
 31657                           ;usb_device_msd.c: 684: break;
 31658  019450  0012               	return	
 31659  019452                     l18762:
 31660  019452  0100               	movlb	0	; () banked
 31661  019454  51E6               	movf	_MSDCommandState& (0+255),w,b
 31662                           
 31663                           ; Switch size 1, requested type "space"
 31664                           ; Number of cases is 5, Range of values is 0 to 253
 31665                           ; switch strategies available:
 31666                           ; Name         Instructions Cycles
 31667                           ; simple_byte           16     9 (average)
 31668                           ;	Chosen strategy is simple_byte
 31669  019456  0A00               	xorlw	0	; case 0
 31670  019458  B4D8               	btfsc	status,2,c
 31671  01945A  D7EB               	goto	l18750
 31672  01945C  0A03               	xorlw	3	; case 3
 31673  01945E  B4D8               	btfsc	status,2,c
 31674  019460  D7D8               	goto	l18740
 31675  019462  0A11               	xorlw	17	; case 18
 31676  019464  B4D8               	btfsc	status,2,c
 31677  019466  D7EB               	goto	l18754
 31678  019468  0A0C               	xorlw	12	; case 30
 31679  01946A  B4D8               	btfsc	status,2,c
 31680  01946C  D7E2               	goto	l18750
 31681  01946E  0AE3               	xorlw	227	; case 253
 31682  019470  B4D8               	btfsc	status,2,c
 31683  019472  D7E8               	goto	l18756
 31684  019474  D7EA               	goto	l18758
 31685  019476                     __end_of_MSDProcessCommandMediaAbsent:
 31686                           	opt stack 0
 31687                           tosu	equ	0xFFF
 31688                           tosh	equ	0xFFE
 31689                           tosl	equ	0xFFD
 31690                           pclath	equ	0xFFA
 31691                           tblptru	equ	0xFF8
 31692                           tblptrh	equ	0xFF7
 31693                           tblptrl	equ	0xFF6
 31694                           tablat	equ	0xFF5
 31695                           prodh	equ	0xFF4
 31696                           prodl	equ	0xFF3
 31697                           intcon	equ	0xFF2
 31698                           intcon2	equ	0xFF1
 31699                           intcon3	equ	0xFF0
 31700                           postinc0	equ	0xFEE
 31701                           wreg	equ	0xFE8
 31702                           indf1	equ	0xFE7
 31703                           postinc1	equ	0xFE6
 31704                           postdec1	equ	0xFE5
 31705                           plusw1	equ	0xFE3
 31706                           fsr1h	equ	0xFE2
 31707                           fsr1l	equ	0xFE1
 31708                           indf2	equ	0xFDF
 31709                           postinc2	equ	0xFDE
 31710                           postdec2	equ	0xFDD
 31711                           plusw2	equ	0xFDB
 31712                           fsr2h	equ	0xFDA
 31713                           fsr2l	equ	0xFD9
 31714                           status	equ	0xFD8
 31715                           
 31716 ;; *************** function _MSDProcessCommandMediaPresent *****************
 31717 ;; Defined at:
 31718 ;;		line 712 in file "usb_device_msd.c"
 31719 ;; Parameters:    Size  Location     Type
 31720 ;;		None
 31721 ;; Auto vars:     Size  Location     Type
 31722 ;;  capacity        4   66[BANK0 ] struct .
 31723 ;;  sectorSize      4   62[BANK0 ] struct .
 31724 ;;  i               1   70[BANK0 ] unsigned char 
 31725 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 31726 ;; Return value:  Size  Location     Type
 31727 ;;                  1    wreg      void 
 31728 ;; Registers used:
 31729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31730 ;; Tracked objects:
 31731 ;;		On entry : 0/0
 31732 ;;		On exit  : 0/0
 31733 ;;		Unchanged: 0/0
 31734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31736 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31737 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31738 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31739 ;;Total ram usage:       14 bytes
 31740 ;; Hardware stack levels used:    1
 31741 ;; Hardware stack levels required when called:   17
 31742 ;; This function calls:
 31743 ;;		_ExternalFlash_CapacityRead
 31744 ;;		_ExternalFlash_SectorSizeRead
 31745 ;;		_ExternalFlash_WriteProtectStateGet
 31746 ;;		_MSDCheckForErrorCases
 31747 ;;		_MSDComputeDeviceInAndResidue
 31748 ;;		_MSDErrorHandler
 31749 ;;		_MSDReadHandler
 31750 ;;		_MSDWriteHandler
 31751 ;;		_ResetSenseData
 31752 ;;		_USBTransferOnePacket
 31753 ;;		_memcpy
 31754 ;; This function is called by:
 31755 ;;		_MSDProcessCommand
 31756 ;;		_MSDProcessCommandMediaAbsent
 31757 ;; This function uses a non-reentrant model
 31758 ;;
 31759                           
 31760                           	psect	text138
 31761  01100A                     __ptext138:
 31762                           	opt stack 0
 31763  01100A                     _MSDProcessCommandMediaPresent:
 31764                           	opt stack 10
 31765                           
 31766                           ;usb_device_msd.c: 714: uint8_t i;
 31767                           ;usb_device_msd.c: 715: uint8_t NumBytesInPacket;
 31768                           ;usb_device_msd.c: 718: switch(MSDCommandState)
 31769                           
 31770                           ;incstack = 0
 31771  01100A  D1F5               	goto	l18470
 31772  01100C                     l18324:
 31773                           
 31774                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 31775  01100C  EC16  F0A1         	call	_MSDReadHandler	;wreg free
 31776  011010  0900               	iorlw	0
 31777  011012  A4D8               	btfss	status,2,c
 31778  011014  0012               	return	
 31779                           
 31780                           ;usb_device_msd.c: 726: {
 31781                           ;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 31782  011016  0100               	movlb	0	; () banked
 31783  011018  69E6               	setf	_MSDCommandState& (0+255),b
 31784                           
 31785                           ; BSR set to: 0
 31786                           ;usb_device_msd.c: 728: }
 31787                           ;usb_device_msd.c: 729: break;
 31788  01101A  0012               	return	
 31789  01101C                     l18328:
 31790                           
 31791                           ; BSR set to: 0
 31792                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 31793  01101C  EC2B  F095         	call	_MSDWriteHandler	;wreg free
 31794  011020  0900               	iorlw	0
 31795  011022  A4D8               	btfss	status,2,c
 31796  011024  0012               	return	
 31797                           
 31798                           ;usb_device_msd.c: 737: {
 31799                           ;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 31800  011026  0100               	movlb	0	; () banked
 31801  011028  69E6               	setf	_MSDCommandState& (0+255),b
 31802                           
 31803                           ; BSR set to: 0
 31804                           ;usb_device_msd.c: 739: }
 31805                           ;usb_device_msd.c: 740: break;
 31806  01102A  0012               	return	
 31807  01102C                     l18332:
 31808                           
 31809                           ; BSR set to: 0
 31810                           ;usb_device_msd.c: 743: {
 31811                           ;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 31812  01102C  0100               	movlb	0	; () banked
 31813  01102E  05E5               	decf	_MSDHostNoData& (0+255),w,b
 31814  011030  A4D8               	btfss	status,2,c
 31815  011032  D003               	goto	l641
 31816                           
 31817                           ; BSR set to: 0
 31818                           ;usb_device_msd.c: 749: {
 31819                           ;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 31820  011034  0100               	movlb	0	; () banked
 31821  011036  69E6               	setf	_MSDCommandState& (0+255),b
 31822                           
 31823                           ;usb_device_msd.c: 751: break;
 31824  011038  0012               	return	
 31825  01103A                     l641:
 31826                           
 31827                           ; BSR set to: 0
 31828                           ;usb_device_msd.c: 752: }
 31829                           ;usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3];
 31830  01103A  C253  F0DA         	movff	_gblCBW+18,_TransferLength+1
 31831                           
 31832                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 31833  01103E  C254  F0D9         	movff	_gblCBW+19,_TransferLength
 31834                           
 31835                           ; BSR set to: 0
 31836                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 31837  011042  C0D9  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 31838  011046  C0DA  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 31839  01104A  0100               	movlb	0	; () banked
 31840  01104C  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 31841  01104E  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 31842  011050  EC35  F0AE         	call	_MSDCheckForErrorCases	;wreg free
 31843  011054  0900               	iorlw	0
 31844  011056  A4D8               	btfss	status,2,c
 31845  011058  0012               	return	
 31846                           
 31847                           ;usb_device_msd.c: 762: }
 31848                           ;usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(InquiryResponse));
 31849                           
 31850                           ;usb_device_msd.c: 760: {
 31851                           ;usb_device_msd.c: 761: break;
 31852  01105A  0E00               	movlw	0
 31853  01105C  0100               	movlb	0	; () banked
 31854  01105E  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 31855  011060  0E24               	movlw	36
 31856  011062  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 31857  011064  EC7E  F0B9         	call	_MSDComputeDeviceInAndResidue	;wreg free
 31858                           
 31859                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 31860  011068  0E00               	movlw	0
 31861  01106A  0100               	movlb	0	; () banked
 31862  01106C  6F60               	movwf	memcpy@d1& (0+255),b
 31863  01106E  0E06               	movlw	6
 31864  011070  0100               	movlb	0	; () banked
 31865  011072  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 31866  011074  0E57               	movlw	low _inq_resp
 31867  011076  0100               	movlb	0	; () banked
 31868  011078  6F62               	movwf	memcpy@s1& (0+255),b
 31869  01107A  0EFF               	movlw	high _inq_resp
 31870  01107C  0100               	movlb	0	; () banked
 31871  01107E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 31872  011080  0E00               	movlw	0
 31873  011082  0100               	movlb	0	; () banked
 31874  011084  6F65               	movwf	(memcpy@n+1)& (0+255),b
 31875  011086  0E24               	movlw	36
 31876  011088  6F64               	movwf	memcpy@n& (0+255),b
 31877  01108A  ECD4  F0C9         	call	_memcpy	;wreg free
 31878                           
 31879                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 31880  01108E  0EFD               	movlw	253
 31881  011090  0100               	movlb	0	; () banked
 31882  011092  6FE6               	movwf	_MSDCommandState& (0+255),b
 31883                           
 31884                           ;usb_device_msd.c: 773: break;
 31885  011094  0012               	return	
 31886  011096                     l18346:
 31887                           
 31888                           ; BSR set to: 0
 31889                           ;usb_device_msd.c: 776: {
 31890                           ;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;
 31891                           ;usb_device_msd.c: 780: USB_MSD_CAPACITY capacity;
 31892                           ;usb_device_msd.c: 783: capacity.Val = LUN[0].ReadCapacity(LUN[0].mediaParameters);
 31893  011096  C2D0  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 31894  01109A  C2D1  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 31895  01109E  EE22  F0BE         	lfsr	2,_LUN+3
 31896  0110A2  D801               	call	u17338
 31897  0110A4  D00A               	goto	u17339
 31898  0110A6                     u17338:
 31899  0110A6  0005               	push	
 31900  0110A8  6EFA               	movwf	pclath,c
 31901  0110AA  50DE               	movf	postinc2,w,c
 31902  0110AC  6EFD               	movwf	tosl,c
 31903  0110AE  50DE               	movf	postinc2,w,c
 31904  0110B0  6EFE               	movwf	tosh,c
 31905  0110B2  50DE               	movf	postinc2,w,c
 31906  0110B4  6EFF               	movwf	tosu,c
 31907  0110B6  50FA               	movf	pclath,w,c
 31908  0110B8  0012               	return		;indir
 31909  0110BA                     u17339:
 31910  0110BA  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 31911  0110BE  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 31912  0110C2  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 31913  0110C6  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 31914                           
 31915                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 31916  0110CA  C2D0  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 31917  0110CE  C2D1  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 31918  0110D2  EE22  F0C1         	lfsr	2,_LUN+6
 31919  0110D6  D801               	call	u17348
 31920  0110D8  D00A               	goto	u17349
 31921  0110DA                     u17348:
 31922  0110DA  0005               	push	
 31923  0110DC  6EFA               	movwf	pclath,c
 31924  0110DE  50DE               	movf	postinc2,w,c
 31925  0110E0  6EFD               	movwf	tosl,c
 31926  0110E2  50DE               	movf	postinc2,w,c
 31927  0110E4  6EFE               	movwf	tosh,c
 31928  0110E6  50DE               	movf	postinc2,w,c
 31929  0110E8  6EFF               	movwf	tosu,c
 31930  0110EA  50FA               	movf	pclath,w,c
 31931  0110EC  0012               	return		;indir
 31932  0110EE                     u17349:
 31933  0110EE  0100               	movlb	0	; () banked
 31934  0110F0  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 31935  0110F4  0100               	movlb	0	; () banked
 31936  0110F6  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 31937  0110FA  0100               	movlb	0	; () banked
 31938  0110FC  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 31939  0110FE  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 31940                           
 31941                           ; BSR set to: 0
 31942                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 31943  011100  EE26 F000          	lfsr	2,1536
 31944  011104  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 31945                           
 31946                           ; BSR set to: 0
 31947                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 31948  011108  EE26 F001          	lfsr	2,1537	;volatile
 31949  01110C  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 31950                           
 31951                           ; BSR set to: 0
 31952                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 31953  011110  EE26 F002          	lfsr	2,1538	;volatile
 31954  011114  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 31955                           
 31956                           ; BSR set to: 0
 31957                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 31958  011118  EE26 F003          	lfsr	2,1539	;volatile
 31959  01111C  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 31960                           
 31961                           ; BSR set to: 0
 31962                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 31963  011120  EE26 F004          	lfsr	2,1540	;volatile
 31964  011124  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 31965                           
 31966                           ; BSR set to: 0
 31967                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 31968  011128  EE26 F005          	lfsr	2,1541	;volatile
 31969  01112C  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 31970                           
 31971                           ; BSR set to: 0
 31972                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 31973  011130  EE26 F006          	lfsr	2,1542	;volatile
 31974  011134  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 31975                           
 31976                           ; BSR set to: 0
 31977                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 31978  011138  EE26 F007          	lfsr	2,1543	;volatile
 31979  01113C  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 31980                           
 31981                           ; BSR set to: 0
 31982                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 31983  011140  0E00               	movlw	0
 31984  011142  0100               	movlb	0	; () banked
 31985  011144  6FDA               	movwf	(_TransferLength+1)& (0+255),b
 31986  011146  0E08               	movlw	8
 31987  011148  6FD9               	movwf	_TransferLength& (0+255),b
 31988                           
 31989                           ; BSR set to: 0
 31990                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 31991  01114A  0E00               	movlw	0
 31992  01114C  0100               	movlb	0	; () banked
 31993  01114E  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 31994  011150  0E08               	movlw	8
 31995  011152  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 31996  011154  EC7E  F0B9         	call	_MSDComputeDeviceInAndResidue	;wreg free
 31997                           
 31998                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 31999  011158  0EFD               	movlw	253
 32000  01115A  0100               	movlb	0	; () banked
 32001  01115C  6FE6               	movwf	_MSDCommandState& (0+255),b
 32002                           
 32003                           ;usb_device_msd.c: 802: break;
 32004  01115E  0012               	return	
 32005  011160                     l18370:
 32006                           
 32007                           ; BSR set to: 0
 32008                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 32009  011160  0100               	movlb	0	; () banked
 32010  011162  05E5               	decf	_MSDHostNoData& (0+255),w,b
 32011  011164  A4D8               	btfss	status,2,c
 32012  011166  D003               	goto	l18374
 32013                           
 32014                           ; BSR set to: 0
 32015                           ;usb_device_msd.c: 812: {
 32016                           ;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 32017  011168  0100               	movlb	0	; () banked
 32018  01116A  69E6               	setf	_MSDCommandState& (0+255),b
 32019                           
 32020                           ;usb_device_msd.c: 814: break;
 32021  01116C  0012               	return	
 32022  01116E                     l18374:
 32023                           
 32024                           ; BSR set to: 0
 32025                           ;usb_device_msd.c: 815: }
 32026                           ;usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSenseResponse);
 32027  01116E  0E00               	movlw	0
 32028  011170  0100               	movlb	0	; () banked
 32029  011172  6FDA               	movwf	(_TransferLength+1)& (0+255),b
 32030  011174  0E12               	movlw	18
 32031  011176  6FD9               	movwf	_TransferLength& (0+255),b
 32032                           
 32033                           ; BSR set to: 0
 32034                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 32035  011178  0E00               	movlw	0
 32036  01117A  0100               	movlb	0	; () banked
 32037  01117C  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32038  01117E  0E12               	movlw	18
 32039  011180  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32040  011182  EC7E  F0B9         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32041                           
 32042                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 32043  011186  0E00               	movlw	0
 32044  011188  0100               	movlb	0	; () banked
 32045  01118A  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 32046  01118C                     l18380:
 32047                           
 32048                           ; BSR set to: 0
 32049  01118C  0E11               	movlw	17
 32050  01118E  0100               	movlb	0	; () banked
 32051  011190  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 32052  011192  D001               	goto	l18384
 32053  011194  D017               	goto	l18390
 32054  011196                     l18384:
 32055                           
 32056                           ; BSR set to: 0
 32057                           ;usb_device_msd.c: 823: {
 32058                           ;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 32059  011196  0100               	movlb	0	; () banked
 32060  011198  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32061  01119A  0D01               	mullw	1
 32062  01119C  0E60               	movlw	low _gblSenseData
 32063  01119E  24F3               	addwf	prodl,w,c
 32064  0111A0  6ED9               	movwf	fsr2l,c
 32065  0111A2  0E02               	movlw	high _gblSenseData
 32066  0111A4  20F4               	addwfc	prodh,w,c
 32067  0111A6  6EDA               	movwf	fsr2h,c
 32068  0111A8  0100               	movlb	0	; () banked
 32069  0111AA  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32070  0111AC  0D01               	mullw	1
 32071  0111AE  0E00               	movlw	0
 32072  0111B0  24F3               	addwf	prodl,w,c
 32073  0111B2  6EE1               	movwf	fsr1l,c
 32074  0111B4  0E06               	movlw	6
 32075  0111B6  20F4               	addwfc	prodh,w,c
 32076  0111B8  6EE2               	movwf	fsr1h,c
 32077  0111BA  CFDF FFE7          	movff	indf2,indf1
 32078                           
 32079                           ; BSR set to: 0
 32080  0111BE  0100               	movlb	0	; () banked
 32081  0111C0  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 32082  0111C2  D7E4               	goto	l18380
 32083  0111C4                     l18390:
 32084                           
 32085                           ; BSR set to: 0
 32086                           ;usb_device_msd.c: 825: }
 32087                           ;usb_device_msd.c: 826: MSDCommandState = 0xFD;
 32088  0111C4  0EFD               	movlw	253
 32089  0111C6  0100               	movlb	0	; () banked
 32090  0111C8  6FE6               	movwf	_MSDCommandState& (0+255),b
 32091                           
 32092                           ;usb_device_msd.c: 827: break;
 32093  0111CA  0012               	return	
 32094  0111CC                     l648:
 32095                           
 32096                           ; BSR set to: 0
 32097                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 32098  0111CC  0E03               	movlw	3
 32099  0111CE  CFE8 F600          	movff	wreg,1536
 32100                           
 32101                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 32102  0111D2  0E00               	movlw	0
 32103  0111D4  CFE8 F601          	movff	wreg,1537	;volatile
 32104                           
 32105                           ; BSR set to: 0
 32106                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 32107  0111D8  C2D0  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 32108  0111DC  C2D1  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 32109  0111E0  EE22  F0CA         	lfsr	2,_LUN+15
 32110  0111E4  D801               	call	u17388
 32111  0111E6  D00A               	goto	u17389
 32112  0111E8                     u17388:
 32113  0111E8  0005               	push	
 32114  0111EA  6EFA               	movwf	pclath,c
 32115  0111EC  50DE               	movf	postinc2,w,c
 32116  0111EE  6EFD               	movwf	tosl,c
 32117  0111F0  50DE               	movf	postinc2,w,c
 32118  0111F2  6EFE               	movwf	tosh,c
 32119  0111F4  50DE               	movf	postinc2,w,c
 32120  0111F6  6EFF               	movwf	tosu,c
 32121  0111F8  50FA               	movf	pclath,w,c
 32122  0111FA  0012               	return		;indir
 32123  0111FC                     u17389:
 32124  0111FC  0900               	iorlw	0
 32125  0111FE  A4D8               	btfss	status,2,c
 32126  011200  D005               	goto	l18396
 32127  011202  0E00               	movlw	0
 32128  011204  0100               	movlb	0	; () banked
 32129  011206  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2712+1)& (0+255),b
 32130  011208  0E00               	movlw	0
 32131  01120A  D004               	goto	L23
 32132  01120C                     l18396:
 32133  01120C  0E00               	movlw	0
 32134  01120E  0100               	movlb	0	; () banked
 32135  011210  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2712+1)& (0+255),b
 32136  011212  0E80               	movlw	128
 32137  011214                     L23:
 32138  011214  6F9B               	movwf	_MSDProcessCommandMediaPresent$2712& (0+255),b
 32139                           
 32140                           ; BSR set to: 0
 32141                           
 32142                           ; BSR set to: 0
 32143  011216  EE26 F002          	lfsr	2,1538	;volatile
 32144  01121A  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2712,indf2
 32145                           
 32146                           ; BSR set to: 0
 32147                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 32148  01121E  0E00               	movlw	0
 32149  011220  CFE8 F603          	movff	wreg,1539	;volatile
 32150                           
 32151                           ; BSR set to: 0
 32152                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 32153  011224  0E00               	movlw	0
 32154  011226  0100               	movlb	0	; () banked
 32155  011228  6FDA               	movwf	(_TransferLength+1)& (0+255),b
 32156  01122A  0E04               	movlw	4
 32157  01122C  6FD9               	movwf	_TransferLength& (0+255),b
 32158                           
 32159                           ; BSR set to: 0
 32160                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 32161  01122E  0E00               	movlw	0
 32162  011230  0100               	movlb	0	; () banked
 32163  011232  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32164  011234  0E04               	movlw	4
 32165  011236  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32166  011238  EC7E  F0B9         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32167                           
 32168                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 32169  01123C  0EFD               	movlw	253
 32170  01123E  0100               	movlb	0	; () banked
 32171  011240  6FE6               	movwf	_MSDCommandState& (0+255),b
 32172                           
 32173                           ;usb_device_msd.c: 839: break;
 32174  011242  0012               	return	
 32175  011244                     l18408:
 32176                           
 32177                           ; BSR set to: 0
 32178                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 32179  011244  0102               	movlb	2	; () banked
 32180  011246  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 32181  011248  0BF0               	andlw	-16
 32182  01124A  0905               	iorlw	5
 32183  01124C  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 32184                           
 32185                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 32186  01124E  0E20               	movlw	32
 32187  011250  0102               	movlb	2	; () banked
 32188  011252  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 32189                           
 32190                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 32191  011254  0E00               	movlw	0
 32192  011256  0102               	movlb	2	; () banked
 32193  011258  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 32194                           
 32195                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 32196  01125A  0E01               	movlw	1
 32197  01125C  010D               	movlb	13	; () banked
 32198  01125E  6F8C               	movwf	140,b	;volatile
 32199                           
 32200                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 32201  011260  0E00               	movlw	0
 32202  011262  010D               	movlb	13	; () banked
 32203  011264  6F88               	movwf	136,b	;volatile
 32204  011266  0E00               	movlw	0
 32205  011268  6F89               	movwf	137,b	;volatile
 32206  01126A  0E00               	movlw	0
 32207  01126C  6F8A               	movwf	138,b	;volatile
 32208  01126E  0E00               	movlw	0
 32209  011270  6F8B               	movwf	139,b	;volatile
 32210                           
 32211                           ; BSR set to: 13
 32212                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 32213  011272  0100               	movlb	0	; () banked
 32214  011274  69E6               	setf	_MSDCommandState& (0+255),b
 32215                           
 32216                           ;usb_device_msd.c: 848: break;
 32217  011276  0012               	return	
 32218  011278                     l18412:
 32219                           
 32220                           ; BSR set to: 0
 32221                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 32222  011278  0E00               	movlw	0
 32223  01127A  0100               	movlb	0	; () banked
 32224  01127C  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 32225  01127E  0E00               	movlw	0
 32226  011280  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 32227  011282  0E00               	movlw	0
 32228  011284  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 32229  011286  0E00               	movlw	0
 32230  011288  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 32231  01128A  EC35  F0AE         	call	_MSDCheckForErrorCases	;wreg free
 32232  01128E  0900               	iorlw	0
 32233  011290  A4D8               	btfss	status,2,c
 32234  011292  0012               	return	
 32235                           
 32236                           ;usb_device_msd.c: 861: }
 32237                           ;usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (msd_csw.bCSWStatus==0x01)
      +                          )
 32238                           
 32239                           ;usb_device_msd.c: 859: {
 32240                           ;usb_device_msd.c: 860: break;
 32241  011294  0102               	movlb	2	; () banked
 32242  011296  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 32243  011298  0B0F               	andlw	15
 32244  01129A  0A06               	xorlw	6
 32245  01129C  A4D8               	btfss	status,2,c
 32246  01129E  D007               	goto	l18422
 32247                           
 32248                           ; BSR set to: 2
 32249  0112A0  010D               	movlb	13	; () banked
 32250  0112A2  058C               	decf	140,w,b	;volatile
 32251  0112A4  A4D8               	btfss	status,2,c
 32252  0112A6  D003               	goto	l18422
 32253                           
 32254                           ; BSR set to: 13
 32255                           ;usb_device_msd.c: 868: {
 32256                           ;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 32257  0112A8  0100               	movlb	0	; () banked
 32258  0112AA  69E6               	setf	_MSDCommandState& (0+255),b
 32259                           
 32260                           ;usb_device_msd.c: 870: }
 32261  0112AC  0012               	return	
 32262  0112AE                     l18422:
 32263                           
 32264                           ;usb_device_msd.c: 871: else
 32265                           ;usb_device_msd.c: 872: {
 32266                           ;usb_device_msd.c: 873: ResetSenseData();
 32267  0112AE  EC3F  F0C4         	call	_ResetSenseData	;wreg free
 32268                           
 32269                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 32270  0112B2  0E00               	movlw	0
 32271  0112B4  010D               	movlb	13	; () banked
 32272  0112B6  6F88               	movwf	136,b	;volatile
 32273  0112B8  0E00               	movlw	0
 32274  0112BA  6F89               	movwf	137,b	;volatile
 32275  0112BC  0E00               	movlw	0
 32276  0112BE  6F8A               	movwf	138,b	;volatile
 32277  0112C0  0E00               	movlw	0
 32278  0112C2  6F8B               	movwf	139,b	;volatile
 32279                           
 32280                           ; BSR set to: 13
 32281                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 32282  0112C4  0100               	movlb	0	; () banked
 32283  0112C6  69E6               	setf	_MSDCommandState& (0+255),b
 32284                           
 32285                           ; BSR set to: 0
 32286                           ;usb_device_msd.c: 876: }
 32287                           ;usb_device_msd.c: 877: break;
 32288  0112C8  0012               	return	
 32289  0112CA                     l18428:
 32290                           
 32291                           ; BSR set to: 0
 32292                           ;usb_device_msd.c: 882: case 0x1b:
 32293                           ;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 32294  0112CA  0E00               	movlw	0
 32295  0112CC  010D               	movlb	13	; () banked
 32296  0112CE  6F88               	movwf	136,b	;volatile
 32297  0112D0  0E00               	movlw	0
 32298  0112D2  6F89               	movwf	137,b	;volatile
 32299  0112D4  0E00               	movlw	0
 32300  0112D6  6F8A               	movwf	138,b	;volatile
 32301  0112D8  0E00               	movlw	0
 32302  0112DA  6F8B               	movwf	139,b	;volatile
 32303                           
 32304                           ; BSR set to: 13
 32305                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 32306  0112DC  0100               	movlb	0	; () banked
 32307  0112DE  69E6               	setf	_MSDCommandState& (0+255),b
 32308                           
 32309                           ;usb_device_msd.c: 885: break;
 32310  0112E0  0012               	return	
 32311  0112E2                     l18432:
 32312                           
 32313                           ; BSR set to: 0
 32314                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 32315  0112E2  0100               	movlb	0	; () banked
 32316  0112E4  51DB               	movf	_USBMSDInHandle& (0+255),w,b
 32317  0112E6  0100               	movlb	0	; () banked
 32318  0112E8  11DC               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 32319  0112EA  B4D8               	btfsc	status,2,c
 32320  0112EC  D007               	goto	l18436
 32321                           
 32322                           ; BSR set to: 0
 32323  0112EE  C0DB  FFD9         	movff	_USBMSDInHandle,fsr2l
 32324  0112F2  C0DC  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 32325  0112F6  0100               	movlb	0	; () banked
 32326  0112F8  BEDF               	btfsc	indf2,7,c
 32327  0112FA  0012               	return	
 32328  0112FC                     l18436:
 32329                           
 32330                           ; BSR set to: 0
 32331                           ;usb_device_msd.c: 893: {
 32332                           ;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u)
 32333  0112FC  0102               	movlb	2	; () banked
 32334  0112FE  514C               	movf	(_gblCBW+11)& (0+255),w,b
 32335  011300  0102               	movlb	2	; () banked
 32336  011302  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 32337  011304  0102               	movlb	2	; () banked
 32338  011306  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 32339  011308  E105               	bnz	u17450
 32340  01130A  0E40               	movlw	64
 32341  01130C  0102               	movlb	2	; () banked
 32342  01130E  5D49               	subwf	(_gblCBW+8)& (0+255),w,b
 32343  011310  A0D8               	btfss	status,0,c
 32344  011312  D00B               	goto	l664
 32345  011314                     u17450:
 32346                           
 32347                           ; BSR set to: 2
 32348                           ;usb_device_msd.c: 897: {
 32349                           ;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 32350  011314  0E40               	movlw	64
 32351  011316  0100               	movlb	0	; () banked
 32352  011318  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 32353                           
 32354                           ; BSR set to: 0
 32355                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 32356  01131A  0E40               	movlw	64
 32357  01131C  0102               	movlb	2	; () banked
 32358  01131E  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 32359  011320  0E00               	movlw	0
 32360  011322  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 32361  011324  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 32362  011326  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 32363                           
 32364                           ;usb_device_msd.c: 900: }
 32365  011328  D00B               	goto	l18444
 32366  01132A                     l664:
 32367                           
 32368                           ; BSR set to: 2
 32369                           ;usb_device_msd.c: 901: else
 32370                           ;usb_device_msd.c: 902: {
 32371                           ;usb_device_msd.c: 905: NumBytesInPacket = gblCBW.dCBWDataTransferLength;
 32372  01132A  C249  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 32373                           
 32374                           ; BSR set to: 2
 32375                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 32376  01132E  0E00               	movlw	0
 32377  011330  0102               	movlb	2	; () banked
 32378  011332  6F49               	movwf	(_gblCBW+8)& (0+255),b
 32379  011334  0E00               	movlw	0
 32380  011336  6F4A               	movwf	(_gblCBW+9)& (0+255),b
 32381  011338  0E00               	movlw	0
 32382  01133A  6F4B               	movwf	(_gblCBW+10)& (0+255),b
 32383  01133C  0E00               	movlw	0
 32384  01133E  6F4C               	movwf	(_gblCBW+11)& (0+255),b
 32385  011340                     l18444:
 32386                           
 32387                           ; BSR set to: 2
 32388                           ;usb_device_msd.c: 907: }
 32389                           ;usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPacket)
 32390  011340  0100               	movlb	0	; () banked
 32391  011342  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 32392  011344  0100               	movlb	0	; () banked
 32393  011346  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 32394  011348  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 32395  01134A  0100               	movlb	0	; () banked
 32396  01134C  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 32397  01134E  0100               	movlb	0	; () banked
 32398  011350  5DD9               	subwf	_TransferLength& (0+255),w,b
 32399  011352  0100               	movlb	0	; () banked
 32400  011354  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 32401  011356  0100               	movlb	0	; () banked
 32402  011358  59DA               	subwfb	(_TransferLength+1)& (0+255),w,b
 32403  01135A  A0D8               	btfss	status,0,c
 32404  01135C  D007               	goto	l18448
 32405                           
 32406                           ; BSR set to: 0
 32407                           ;usb_device_msd.c: 915: {
 32408                           ;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 32409  01135E  0100               	movlb	0	; () banked
 32410  011360  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 32411  011362  0100               	movlb	0	; () banked
 32412  011364  5FD9               	subwf	_TransferLength& (0+255),f,b
 32413  011366  0E00               	movlw	0
 32414  011368  5BDA               	subwfb	(_TransferLength+1)& (0+255),f,b
 32415                           
 32416                           ;usb_device_msd.c: 918: }
 32417  01136A  D022               	goto	l18460
 32418  01136C                     l18448:
 32419                           
 32420                           ; BSR set to: 0
 32421                           ;usb_device_msd.c: 919: else
 32422                           ;usb_device_msd.c: 920: {
 32423                           ;usb_device_msd.c: 927: for(i = 0; i < NumBytesInPacket; i++)
 32424  01136C  0E00               	movlw	0
 32425  01136E  0100               	movlb	0	; () banked
 32426  011370  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 32427  011372  D018               	goto	l18458
 32428  011374                     l18450:
 32429                           
 32430                           ; BSR set to: 0
 32431                           ;usb_device_msd.c: 928: {
 32432                           ;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 32433  011374  0100               	movlb	0	; () banked
 32434  011376  51D9               	movf	_TransferLength& (0+255),w,b
 32435  011378  0100               	movlb	0	; () banked
 32436  01137A  11DA               	iorwf	(_TransferLength+1)& (0+255),w,b
 32437  01137C  B4D8               	btfsc	status,2,c
 32438  01137E  D005               	goto	l18454
 32439                           
 32440                           ; BSR set to: 0
 32441                           ;usb_device_msd.c: 930: {
 32442                           ;usb_device_msd.c: 931: TransferLength.Val--;
 32443  011380  0100               	movlb	0	; () banked
 32444  011382  07D9               	decf	_TransferLength& (0+255),f,b
 32445  011384  A0D8               	btfss	status,0,c
 32446  011386  07DA               	decf	(_TransferLength+1)& (0+255),f,b
 32447                           
 32448                           ;usb_device_msd.c: 932: }
 32449  011388  D00B               	goto	l18456
 32450  01138A                     l18454:
 32451                           
 32452                           ; BSR set to: 0
 32453                           ;usb_device_msd.c: 933: else
 32454                           ;usb_device_msd.c: 934: {
 32455                           ;usb_device_msd.c: 935: msd_buffer[i] = 0x00;
 32456  01138A  0100               	movlb	0	; () banked
 32457  01138C  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32458  01138E  0D01               	mullw	1
 32459  011390  0E00               	movlw	0
 32460  011392  24F3               	addwf	prodl,w,c
 32461  011394  6ED9               	movwf	fsr2l,c
 32462  011396  0E06               	movlw	6
 32463  011398  20F4               	addwfc	prodh,w,c
 32464  01139A  6EDA               	movwf	fsr2h,c
 32465  01139C  0E00               	movlw	0
 32466  01139E  6EDF               	movwf	indf2,c
 32467  0113A0                     l18456:
 32468                           
 32469                           ; BSR set to: 0
 32470  0113A0  0100               	movlb	0	; () banked
 32471  0113A2  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 32472  0113A4                     l18458:
 32473                           
 32474                           ; BSR set to: 0
 32475  0113A4  0100               	movlb	0	; () banked
 32476  0113A6  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 32477  0113A8  0100               	movlb	0	; () banked
 32478  0113AA  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32479  0113AC  A0D8               	btfss	status,0,c
 32480  0113AE  D7E2               	goto	l18450
 32481  0113B0                     l18460:
 32482                           
 32483                           ; BSR set to: 0
 32484                           ;usb_device_msd.c: 936: }
 32485                           ;usb_device_msd.c: 937: }
 32486                           ;usb_device_msd.c: 938: }
 32487                           ;usb_device_msd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer
      +                          [0],NumBytesInPacket);
 32488  0113B0  0E01               	movlw	1
 32489  0113B2  0100               	movlb	0	; () banked
 32490  0113B4  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 32491  0113B6  0E00               	movlw	0
 32492  0113B8  0100               	movlb	0	; () banked
 32493  0113BA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 32494  0113BC  0E06               	movlw	6
 32495  0113BE  0100               	movlb	0	; () banked
 32496  0113C0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 32497  0113C2  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 32498  0113C6  0E02               	movlw	2
 32499  0113C8  EC69  F0AC         	call	_USBTransferOnePacket
 32500  0113CC  C060  F0DB         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 32501  0113D0  C061  F0DC         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 32502                           
 32503                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 32504  0113D4  0102               	movlb	2	; () banked
 32505  0113D6  5149               	movf	(_gblCBW+8)& (0+255),w,b
 32506  0113D8  0102               	movlb	2	; () banked
 32507  0113DA  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 32508  0113DC  0102               	movlb	2	; () banked
 32509  0113DE  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 32510  0113E0  0102               	movlb	2	; () banked
 32511  0113E2  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 32512  0113E4  A4D8               	btfss	status,2,c
 32513  0113E6  0012               	return	
 32514                           
 32515                           ; BSR set to: 2
 32516                           ;usb_device_msd.c: 945: {
 32517                           ;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 32518  0113E8  0100               	movlb	0	; () banked
 32519  0113EA  69E6               	setf	_MSDCommandState& (0+255),b
 32520                           
 32521                           ; BSR set to: 0
 32522                           ;usb_device_msd.c: 950: }
 32523                           ;usb_device_msd.c: 951: }
 32524                           ;usb_device_msd.c: 952: break;
 32525                           
 32526                           ; BSR set to: 0
 32527                           
 32528                           ;usb_device_msd.c: 949: break;
 32529  0113EC  0012               	return	
 32530  0113EE                     l18466:
 32531                           
 32532                           ; BSR set to: 0
 32533                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 32534  0113EE  0E7F               	movlw	127
 32535  0113F0  EC03  F0AD         	call	_MSDErrorHandler
 32536                           
 32537                           ;usb_device_msd.c: 960: }
 32538                           
 32539                           ;usb_device_msd.c: 959: break;
 32540  0113F4  0012               	return	
 32541  0113F6                     l18470:
 32542  0113F6  0100               	movlb	0	; () banked
 32543  0113F8  51E6               	movf	_MSDCommandState& (0+255),w,b
 32544                           
 32545                           ; Switch size 1, requested type "space"
 32546                           ; Number of cases is 12, Range of values is 0 to 254
 32547                           ; switch strategies available:
 32548                           ; Name         Instructions Cycles
 32549                           ; simple_byte           37    19 (average)
 32550                           ;	Chosen strategy is simple_byte
 32551  0113FA  0A00               	xorlw	0	; case 0
 32552  0113FC  B4D8               	btfsc	status,2,c
 32553  0113FE  D73C               	goto	l18412
 32554  011400  0A03               	xorlw	3	; case 3
 32555  011402  B4D8               	btfsc	status,2,c
 32556  011404  D6AD               	goto	l18370
 32557  011406  0A11               	xorlw	17	; case 18
 32558  011408  B4D8               	btfsc	status,2,c
 32559  01140A  D610               	goto	l18332
 32560  01140C  0A08               	xorlw	8	; case 26
 32561  01140E  B4D8               	btfsc	status,2,c
 32562  011410  D6DD               	goto	l648
 32563  011412  0A01               	xorlw	1	; case 27
 32564  011414  B4D8               	btfsc	status,2,c
 32565  011416  D759               	goto	l18428
 32566  011418  0A05               	xorlw	5	; case 30
 32567  01141A  B4D8               	btfsc	status,2,c
 32568  01141C  D713               	goto	l18408
 32569  01141E  0A3B               	xorlw	59	; case 37
 32570  011420  B4D8               	btfsc	status,2,c
 32571  011422  D639               	goto	l18346
 32572  011424  0A0D               	xorlw	13	; case 40
 32573  011426  B4D8               	btfsc	status,2,c
 32574  011428  D5F1               	goto	l18324
 32575  01142A  0A02               	xorlw	2	; case 42
 32576  01142C  B4D8               	btfsc	status,2,c
 32577  01142E  D5F6               	goto	l18328
 32578  011430  0A05               	xorlw	5	; case 47
 32579  011432  B4D8               	btfsc	status,2,c
 32580  011434  D74A               	goto	l18428
 32581  011436  0AD2               	xorlw	210	; case 253
 32582  011438  B4D8               	btfsc	status,2,c
 32583  01143A  D753               	goto	l18432
 32584  01143C  0A03               	xorlw	3	; case 254
 32585  01143E  D7D7               	goto	l18466
 32586  011440                     __end_of_MSDProcessCommandMediaPresent:
 32587                           	opt stack 0
 32588                           tosu	equ	0xFFF
 32589                           tosh	equ	0xFFE
 32590                           tosl	equ	0xFFD
 32591                           pclath	equ	0xFFA
 32592                           tblptru	equ	0xFF8
 32593                           tblptrh	equ	0xFF7
 32594                           tblptrl	equ	0xFF6
 32595                           tablat	equ	0xFF5
 32596                           prodh	equ	0xFF4
 32597                           prodl	equ	0xFF3
 32598                           intcon	equ	0xFF2
 32599                           intcon2	equ	0xFF1
 32600                           intcon3	equ	0xFF0
 32601                           postinc0	equ	0xFEE
 32602                           wreg	equ	0xFE8
 32603                           indf1	equ	0xFE7
 32604                           postinc1	equ	0xFE6
 32605                           postdec1	equ	0xFE5
 32606                           plusw1	equ	0xFE3
 32607                           fsr1h	equ	0xFE2
 32608                           fsr1l	equ	0xFE1
 32609                           indf2	equ	0xFDF
 32610                           postinc2	equ	0xFDE
 32611                           postdec2	equ	0xFDD
 32612                           plusw2	equ	0xFDB
 32613                           fsr2h	equ	0xFDA
 32614                           fsr2l	equ	0xFD9
 32615                           status	equ	0xFD8
 32616                           
 32617 ;; *************** function _MSDWriteHandler *****************
 32618 ;; Defined at:
 32619 ;;		line 1188 in file "usb_device_msd.c"
 32620 ;; Parameters:    Size  Location     Type
 32621 ;;		None
 32622 ;; Auto vars:     Size  Location     Type
 32623 ;;		None
 32624 ;; Return value:  Size  Location     Type
 32625 ;;                  1    wreg      unsigned char 
 32626 ;; Registers used:
 32627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32628 ;; Tracked objects:
 32629 ;;		On entry : 0/0
 32630 ;;		On exit  : 0/0
 32631 ;;		Unchanged: 0/0
 32632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32635 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32636 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32637 ;;Total ram usage:        5 bytes
 32638 ;; Hardware stack levels used:    1
 32639 ;; Hardware stack levels required when called:   16
 32640 ;; This function calls:
 32641 ;;		_ExternalFlash_SectorWrite
 32642 ;;		_ExternalFlash_WriteProtectStateGet
 32643 ;;		_MSDCheckForErrorCases
 32644 ;;		_USBStallEndpoint
 32645 ;;		_USBTransferOnePacket
 32646 ;; This function is called by:
 32647 ;;		_MSDProcessCommandMediaPresent
 32648 ;; This function uses a non-reentrant model
 32649 ;;
 32650                           
 32651                           	psect	text139
 32652  012A56                     __ptext139:
 32653                           	opt stack 0
 32654  012A56                     _MSDWriteHandler:
 32655                           	opt stack 10
 32656                           
 32657                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 32658                           
 32659                           ;incstack = 0
 32660  012A56  D17D               	goto	l18078
 32661  012A58                     l705:
 32662                           
 32663                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 32664  012A58  C252  F1DC         	movff	_gblCBW+17,_LBA+3
 32665                           
 32666                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 32667  012A5C  C253  F1DB         	movff	_gblCBW+18,_LBA+2
 32668                           
 32669                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 32670  012A60  C254  F1DA         	movff	_gblCBW+19,_LBA+1
 32671                           
 32672                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 32673  012A64  C255  F1D9         	movff	_gblCBW+20,_LBA
 32674                           
 32675                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 32676  012A68  C257  F0DA         	movff	_gblCBW+22,_TransferLength+1
 32677                           
 32678                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 32679  012A6C  C258  F0D9         	movff	_gblCBW+23,_TransferLength
 32680                           
 32681                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 32682  012A70  0100               	movlb	0	; () banked
 32683  012A72  51D9               	movf	_TransferLength& (0+255),w,b
 32684  012A74  0100               	movlb	0	; () banked
 32685  012A76  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 32686  012A78  0100               	movlb	0	; () banked
 32687  012A7A  51DA               	movf	(_TransferLength+1)& (0+255),w,b
 32688  012A7C  0100               	movlb	0	; () banked
 32689  012A7E  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 32690  012A80  0100               	movlb	0	; () banked
 32691  012A82  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 32692  012A84  0100               	movlb	0	; () banked
 32693  012A86  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 32694  012A88  0E09               	movlw	9
 32695  012A8A                     u16715:
 32696  012A8A  90D8               	bcf	status,0,c
 32697  012A8C  0100               	movlb	0	; () banked
 32698  012A8E  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 32699  012A90  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 32700  012A92  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 32701  012A94  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 32702  012A96  2EE8               	decfsz	wreg,f,c
 32703  012A98  D7F8               	goto	u16715
 32704  012A9A  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 32705  012A9E  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 32706  012AA2  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 32707  012AA6  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 32708  012AAA  EC35  F0AE         	call	_MSDCheckForErrorCases	;wreg free
 32709  012AAE  0900               	iorlw	0
 32710  012AB0  A4D8               	btfss	status,2,c
 32711  012AB2  D160               	goto	l18080
 32712                           
 32713                           ;usb_device_msd.c: 1208: }
 32714                           ;usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].mediaParameters))
 32715                           
 32716                           ;usb_device_msd.c: 1204: {
 32717                           ;usb_device_msd.c: 1207: break;
 32718  012AB4  C2D0  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 32719  012AB8  C2D1  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 32720  012ABC  EE22  F0CA         	lfsr	2,_LUN+15
 32721  012AC0  D801               	call	u16738
 32722  012AC2  D00A               	goto	u16739
 32723  012AC4                     u16738:
 32724  012AC4  0005               	push	
 32725  012AC6  6EFA               	movwf	pclath,c
 32726  012AC8  50DE               	movf	postinc2,w,c
 32727  012ACA  6EFD               	movwf	tosl,c
 32728  012ACC  50DE               	movf	postinc2,w,c
 32729  012ACE  6EFE               	movwf	tosh,c
 32730  012AD0  50DE               	movf	postinc2,w,c
 32731  012AD2  6EFF               	movwf	tosu,c
 32732  012AD4  50FA               	movf	pclath,w,c
 32733  012AD6  0012               	return		;indir
 32734  012AD8                     u16739:
 32735  012AD8  0900               	iorlw	0
 32736  012ADA  B4D8               	btfsc	status,2,c
 32737  012ADC  D018               	goto	l18014
 32738                           
 32739                           ;usb_device_msd.c: 1213: {
 32740                           ;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 32741  012ADE  0E01               	movlw	1
 32742  012AE0  010D               	movlb	13	; () banked
 32743  012AE2  6F8C               	movwf	140,b	;volatile
 32744                           
 32745                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 32746  012AE4  0102               	movlb	2	; () banked
 32747  012AE6  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 32748  012AE8  0BF0               	andlw	-16
 32749  012AEA  0907               	iorlw	7
 32750  012AEC  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 32751                           
 32752                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 32753  012AEE  0E27               	movlw	39
 32754  012AF0  0102               	movlb	2	; () banked
 32755  012AF2  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 32756                           
 32757                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 32758  012AF4  0E00               	movlw	0
 32759  012AF6  0102               	movlb	2	; () banked
 32760  012AF8  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 32761                           
 32762                           ; BSR set to: 2
 32763                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 32764  012AFA  0E00               	movlw	0
 32765  012AFC  0100               	movlb	0	; () banked
 32766  012AFE  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32767  012B00  0E02               	movlw	2
 32768  012B02  ECC7  F0AB         	call	_USBStallEndpoint
 32769                           
 32770                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 32771  012B06  0E00               	movlw	0
 32772  012B08  6E1F               	movwf	_MSDWriteState,c
 32773                           
 32774                           ;usb_device_msd.c: 1228: return MSDWriteState;
 32775  012B0A  501F               	movf	_MSDWriteState,w,c
 32776  012B0C  0012               	return	
 32777  012B0E                     l18014:
 32778                           
 32779                           ;usb_device_msd.c: 1229: }
 32780                           ;usb_device_msd.c: 1231: MSD_State = 0x01;
 32781  012B0E  0E01               	movlw	1
 32782  012B10  0100               	movlb	0	; () banked
 32783  012B12  6FE7               	movwf	_MSD_State& (0+255),b
 32784  012B14                     l18016:
 32785                           
 32786                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 32787  012B14  0100               	movlb	0	; () banked
 32788  012B16  51D9               	movf	_TransferLength& (0+255),w,b
 32789  012B18  0100               	movlb	0	; () banked
 32790  012B1A  11DA               	iorwf	(_TransferLength+1)& (0+255),w,b
 32791  012B1C  B4D8               	btfsc	status,2,c
 32792  012B1E  D116               	goto	l18074
 32793                           
 32794                           ; BSR set to: 0
 32795                           ;usb_device_msd.c: 1239: }
 32796                           ;usb_device_msd.c: 1241: MSDWriteState = 0x03;
 32797                           
 32798                           ; BSR set to: 0
 32799                           
 32800                           ;usb_device_msd.c: 1238: break;
 32801                           
 32802                           ; BSR set to: 0
 32803                           ;usb_device_msd.c: 1236: {
 32804                           ;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 32805  012B20  0E03               	movlw	3
 32806  012B22  6E1F               	movwf	_MSDWriteState,c
 32807                           
 32808                           ; BSR set to: 0
 32809                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 32810  012B24  0E00               	movlw	0
 32811  012B26  0101               	movlb	1	; () banked
 32812  012B28  6FEB               	movwf	_ptrNextData& (0+255),b
 32813  012B2A  0E06               	movlw	6
 32814  012B2C  0101               	movlb	1	; () banked
 32815  012B2E  6FEC               	movwf	(_ptrNextData+1)& (0+255),b
 32816                           
 32817                           ; BSR set to: 1
 32818                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 32819  012B30  0E00               	movlw	0
 32820  012B32  010D               	movlb	13	; () banked
 32821  012B34  6F88               	movwf	136,b	;volatile
 32822  012B36  0E02               	movlw	2
 32823  012B38  6F89               	movwf	137,b	;volatile
 32824  012B3A  0E00               	movlw	0
 32825  012B3C  6F8A               	movwf	138,b	;volatile
 32826  012B3E  0E00               	movlw	0
 32827  012B40  6F8B               	movwf	139,b	;volatile
 32828  012B42                     l712:
 32829                           
 32830                           ;usb_device_msd.c: 1248: {
 32831                           ;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 32832  012B42  010D               	movlb	13	; () banked
 32833  012B44  5188               	movf	136,w,b	;volatile
 32834  012B46  010D               	movlb	13	; () banked
 32835  012B48  1189               	iorwf	137,w,b	;volatile
 32836  012B4A  010D               	movlb	13	; () banked
 32837  012B4C  118A               	iorwf	138,w,b	;volatile
 32838  012B4E  010D               	movlb	13	; () banked
 32839  012B50  118B               	iorwf	139,w,b	;volatile
 32840  012B52  B4D8               	btfsc	status,2,c
 32841  012B54  D021               	goto	l18036
 32842                           
 32843                           ; BSR set to: 13
 32844                           ;usb_device_msd.c: 1251: {
 32845                           ;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 32846  012B56  0100               	movlb	0	; () banked
 32847  012B58  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 32848  012B5A  0100               	movlb	0	; () banked
 32849  012B5C  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 32850  012B5E  B4D8               	btfsc	status,2,c
 32851  012B60  D007               	goto	l18032
 32852                           
 32853                           ; BSR set to: 0
 32854  012B62  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 32855  012B66  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 32856  012B6A  0100               	movlb	0	; () banked
 32857  012B6C  BEDF               	btfsc	indf2,7,c
 32858  012B6E  D102               	goto	l18080
 32859  012B70                     l18032:
 32860                           
 32861                           ; BSR set to: 0
 32862                           ;usb_device_msd.c: 1255: }
 32863                           ;usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacket(2u,0,ptrNextData,64u);
 32864  012B70  0E00               	movlw	0
 32865  012B72  0100               	movlb	0	; () banked
 32866  012B74  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 32867  012B76  C1EB  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 32868  012B7A  C1EC  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 32869  012B7E  0E40               	movlw	64
 32870  012B80  0100               	movlb	0	; () banked
 32871  012B82  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 32872  012B84  0E02               	movlw	2
 32873  012B86  EC69  F0AC         	call	_USBTransferOnePacket
 32874  012B8A  C060  F0DD         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 32875  012B8E  C061  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 32876                           
 32877                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 32878  012B92  0E04               	movlw	4
 32879  012B94  6E1F               	movwf	_MSDWriteState,c
 32880                           
 32881                           ;usb_device_msd.c: 1260: }
 32882  012B96  D025               	goto	l18040
 32883  012B98                     l18036:
 32884                           
 32885                           ;usb_device_msd.c: 1261: else
 32886                           ;usb_device_msd.c: 1262: {
 32887                           ;usb_device_msd.c: 1266: if(LUN[0].WriteProtectState(LUN[0].mediaParameters))
 32888  012B98  C2D0  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 32889  012B9C  C2D1  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 32890  012BA0  EE22  F0CA         	lfsr	2,_LUN+15
 32891  012BA4  D801               	call	u16798
 32892  012BA6  D00A               	goto	u16799
 32893  012BA8                     u16798:
 32894  012BA8  0005               	push	
 32895  012BAA  6EFA               	movwf	pclath,c
 32896  012BAC  50DE               	movf	postinc2,w,c
 32897  012BAE  6EFD               	movwf	tosl,c
 32898  012BB0  50DE               	movf	postinc2,w,c
 32899  012BB2  6EFE               	movwf	tosh,c
 32900  012BB4  50DE               	movf	postinc2,w,c
 32901  012BB6  6EFF               	movwf	tosu,c
 32902  012BB8  50FA               	movf	pclath,w,c
 32903  012BBA  0012               	return		;indir
 32904  012BBC                     u16799:
 32905  012BBC  0900               	iorlw	0
 32906  012BBE  B4D8               	btfsc	status,2,c
 32907  012BC0  D00E               	goto	l716
 32908                           
 32909                           ;usb_device_msd.c: 1267: {
 32910                           ;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 32911  012BC2  0E01               	movlw	1
 32912  012BC4  010D               	movlb	13	; () banked
 32913  012BC6  6F8C               	movwf	140,b	;volatile
 32914                           
 32915                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 32916  012BC8  0102               	movlb	2	; () banked
 32917  012BCA  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 32918  012BCC  0BF0               	andlw	-16
 32919  012BCE  0902               	iorlw	2
 32920  012BD0  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 32921                           
 32922                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 32923  012BD2  0E27               	movlw	39
 32924  012BD4  0102               	movlb	2	; () banked
 32925  012BD6  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 32926                           
 32927                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 32928  012BD8  0E00               	movlw	0
 32929  012BDA  0102               	movlb	2	; () banked
 32930  012BDC  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 32931  012BDE                     l716:
 32932                           
 32933                           ;usb_device_msd.c: 1277: }
 32934                           ;usb_device_msd.c: 1279: MSDWriteState = 0x02;
 32935  012BDE  0E02               	movlw	2
 32936  012BE0  D0B6               	goto	L27
 32937  012BE2                     l18040:
 32938                           
 32939                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 32940  012BE2  0100               	movlb	0	; () banked
 32941  012BE4  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 32942  012BE6  0100               	movlb	0	; () banked
 32943  012BE8  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 32944  012BEA  B4D8               	btfsc	status,2,c
 32945  012BEC  D007               	goto	l18046
 32946                           
 32947                           ; BSR set to: 0
 32948  012BEE  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 32949  012BF2  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 32950  012BF6  0100               	movlb	0	; () banked
 32951  012BF8  BEDF               	btfsc	indf2,7,c
 32952  012BFA  D0BC               	goto	l18080
 32953  012BFC                     l18046:
 32954                           
 32955                           ; BSR set to: 0
 32956                           ;usb_device_msd.c: 1288: }
 32957                           ;usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((volatile BDT_ENTRY*)USBMSDOut
      +                          Handle)->CNT);
 32958  012BFC  0100               	movlb	0	; () banked
 32959  012BFE  EE20 F001          	lfsr	2,1
 32960  012C02  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 32961  012C04  26D9               	addwf	fsr2l,f,c
 32962  012C06  51DE               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 32963  012C08  22DA               	addwfc	fsr2h,f,c
 32964  012C0A  50DF               	movf	indf2,w,c
 32965  012C0C  0100               	movlb	0	; () banked
 32966  012C0E  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 32967  012C10  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 32968  012C14  0100               	movlb	0	; () banked
 32969  012C16  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 32970  012C18  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 32971  012C1A  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 32972  012C1C  0100               	movlb	0	; () banked
 32973  012C1E  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 32974  012C20  0102               	movlb	2	; () banked
 32975  012C22  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 32976  012C24  0100               	movlb	0	; () banked
 32977  012C26  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 32978  012C28  0102               	movlb	2	; () banked
 32979  012C2A  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 32980  012C2C  0100               	movlb	0	; () banked
 32981  012C2E  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 32982  012C30  0102               	movlb	2	; () banked
 32983  012C32  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 32984  012C34  0100               	movlb	0	; () banked
 32985  012C36  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 32986  012C38  0102               	movlb	2	; () banked
 32987  012C3A  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 32988                           
 32989                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 32990  012C3C  0100               	movlb	0	; () banked
 32991  012C3E  EE20 F001          	lfsr	2,1
 32992  012C42  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 32993  012C44  26D9               	addwf	fsr2l,f,c
 32994  012C46  51DE               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 32995  012C48  22DA               	addwfc	fsr2h,f,c
 32996  012C4A  50DF               	movf	indf2,w,c
 32997  012C4C  0100               	movlb	0	; () banked
 32998  012C4E  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 32999  012C50  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 33000  012C54  0100               	movlb	0	; () banked
 33001  012C56  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33002  012C58  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33003  012C5A  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 33004  012C5C  0100               	movlb	0	; () banked
 33005  012C5E  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 33006  012C60  010D               	movlb	13	; () banked
 33007  012C62  5F88               	subwf	136,f,b	;volatile
 33008  012C64  0100               	movlb	0	; () banked
 33009  012C66  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 33010  012C68  010D               	movlb	13	; () banked
 33011  012C6A  5B89               	subwfb	137,f,b	;volatile
 33012  012C6C  0100               	movlb	0	; () banked
 33013  012C6E  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 33014  012C70  010D               	movlb	13	; () banked
 33015  012C72  5B8A               	subwfb	138,f,b	;volatile
 33016  012C74  0100               	movlb	0	; () banked
 33017  012C76  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 33018  012C78  010D               	movlb	13	; () banked
 33019  012C7A  5B8B               	subwfb	139,f,b	;volatile
 33020                           
 33021                           ; BSR set to: 13
 33022                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 33023  012C7C  0E40               	movlw	64
 33024  012C7E  0101               	movlb	1	; () banked
 33025  012C80  27EB               	addwf	_ptrNextData& (0+255),f,b
 33026  012C82  0E00               	movlw	0
 33027  012C84  23EC               	addwfc	(_ptrNextData+1)& (0+255),f,b
 33028                           
 33029                           ; BSR set to: 1
 33030                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 33031  012C86  0E03               	movlw	3
 33032  012C88  D062               	goto	L27
 33033  012C8A                     l18052:
 33034                           
 33035                           ;usb_device_msd.c: 1298: {
 33036                           ;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 33037  012C8A  010D               	movlb	13	; () banked
 33038  012C8C  518C               	movf	140,w,b	;volatile
 33039  012C8E  A4D8               	btfss	status,2,c
 33040  012C90  D047               	goto	l18064
 33041                           
 33042                           ; BSR set to: 13
 33043                           ;usb_device_msd.c: 1306: {
 33044                           ;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaParameters, LBA.Val, (uint8_t
      +                          *)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 33045  012C92  C2D0  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 33046  012C96  C2D1  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 33047  012C9A  C1D9  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 33048  012C9E  C1DA  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 33049  012CA2  C1DB  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 33050  012CA6  C1DC  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 33051  012CAA  0E00               	movlw	0
 33052  012CAC  0100               	movlb	0	; () banked
 33053  012CAE  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 33054  012CB0  0E06               	movlw	6
 33055  012CB2  0100               	movlb	0	; () banked
 33056  012CB4  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 33057  012CB6  0101               	movlb	1	; () banked
 33058  012CB8  51D9               	movf	_LBA& (0+255),w,b
 33059  012CBA  0101               	movlb	1	; () banked
 33060  012CBC  11DA               	iorwf	(_LBA+1)& (0+255),w,b
 33061  012CBE  0101               	movlb	1	; () banked
 33062  012CC0  11DB               	iorwf	(_LBA+2)& (0+255),w,b
 33063  012CC2  0101               	movlb	1	; () banked
 33064  012CC4  11DC               	iorwf	(_LBA+3)& (0+255),w,b
 33065  012CC6  A4D8               	btfss	status,2,c
 33066  012CC8  D002               	goto	u16840
 33067  012CCA  0E01               	movlw	1
 33068  012CCC  D001               	goto	u16850
 33069  012CCE                     u16840:
 33070  012CCE  0E00               	movlw	0
 33071  012CD0                     u16850:
 33072  012CD0  0100               	movlb	0	; () banked
 33073  012CD2  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 33074  012CD4  EE22  F0CD         	lfsr	2,_LUN+18
 33075  012CD8  D801               	call	u16868
 33076  012CDA  D00A               	goto	u16869
 33077  012CDC                     u16868:
 33078  012CDC  0005               	push	
 33079  012CDE  6EFA               	movwf	pclath,c
 33080  012CE0  50DE               	movf	postinc2,w,c
 33081  012CE2  6EFD               	movwf	tosl,c
 33082  012CE4  50DE               	movf	postinc2,w,c
 33083  012CE6  6EFE               	movwf	tosh,c
 33084  012CE8  50DE               	movf	postinc2,w,c
 33085  012CEA  6EFF               	movwf	tosu,c
 33086  012CEC  50FA               	movf	pclath,w,c
 33087  012CEE  0012               	return		;indir
 33088  012CF0                     u16869:
 33089  012CF0  06E8               	decf	wreg,f,c
 33090  012CF2  B4D8               	btfsc	status,2,c
 33091  012CF4  D015               	goto	l18064
 33092                           
 33093                           ;usb_device_msd.c: 1308: {
 33094                           ;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 33095  012CF6  0E64               	movlw	100
 33096  012CF8  0101               	movlb	1	; () banked
 33097  012CFA  61F8               	cpfslt	_MSDRetryAttempt& (0+255),b
 33098  012CFC  D003               	goto	l18062
 33099                           
 33100                           ; BSR set to: 1
 33101                           ;usb_device_msd.c: 1312: {
 33102                           ;usb_device_msd.c: 1313: MSDRetryAttempt++;
 33103  012CFE  0101               	movlb	1	; () banked
 33104  012D00  2BF8               	incf	_MSDRetryAttempt& (0+255),f,b
 33105                           
 33106                           ;usb_device_msd.c: 1314: break;
 33107  012D02  D038               	goto	l18080
 33108  012D04                     l18062:
 33109                           
 33110                           ; BSR set to: 1
 33111                           ;usb_device_msd.c: 1316: else
 33112                           ;usb_device_msd.c: 1317: {
 33113                           ;usb_device_msd.c: 1320: msd_csw.bCSWStatus = 0x01;
 33114  012D04  0E01               	movlw	1
 33115  012D06  010D               	movlb	13	; () banked
 33116  012D08  6F8C               	movwf	140,b	;volatile
 33117                           
 33118                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 33119  012D0A  0102               	movlb	2	; () banked
 33120  012D0C  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 33121  012D0E  0BF0               	andlw	-16
 33122  012D10  0903               	iorlw	3
 33123  012D12  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 33124                           
 33125                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 33126  012D14  0E00               	movlw	0
 33127  012D16  0102               	movlb	2	; () banked
 33128  012D18  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 33129                           
 33130                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 33131  012D1A  0E00               	movlw	0
 33132  012D1C  0102               	movlb	2	; () banked
 33133  012D1E  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 33134  012D20                     l18064:
 33135                           
 33136                           ;usb_device_msd.c: 1326: }
 33137                           ;usb_device_msd.c: 1327: }
 33138                           ;usb_device_msd.c: 1328: }
 33139                           ;usb_device_msd.c: 1332: LBA.Val++;
 33140  012D20  0E01               	movlw	1
 33141  012D22  0101               	movlb	1	; () banked
 33142  012D24  27D9               	addwf	_LBA& (0+255),f,b
 33143  012D26  0E00               	movlw	0
 33144  012D28  23DA               	addwfc	(_LBA+1)& (0+255),f,b
 33145  012D2A  23DB               	addwfc	(_LBA+2)& (0+255),f,b
 33146  012D2C  23DC               	addwfc	(_LBA+3)& (0+255),f,b
 33147                           
 33148                           ; BSR set to: 1
 33149                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 33150  012D2E  0100               	movlb	0	; () banked
 33151  012D30  07D9               	decf	_TransferLength& (0+255),f,b
 33152  012D32  A0D8               	btfss	status,0,c
 33153  012D34  07DA               	decf	(_TransferLength+1)& (0+255),f,b
 33154                           
 33155                           ; BSR set to: 0
 33156                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 33157  012D36  0E01               	movlw	1
 33158  012D38  D00A               	goto	L27
 33159  012D3A                     l18070:
 33160                           
 33161                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 33162  012D3A  0E02               	movlw	2
 33163  012D3C  010D               	movlb	13	; () banked
 33164  012D3E  6F8C               	movwf	140,b	;volatile
 33165                           
 33166                           ; BSR set to: 13
 33167                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 33168  012D40  0E00               	movlw	0
 33169  012D42  0100               	movlb	0	; () banked
 33170  012D44  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33171  012D46  0E02               	movlw	2
 33172  012D48  ECC7  F0AB         	call	_USBStallEndpoint
 33173  012D4C                     l18074:
 33174                           
 33175                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 33176  012D4C  0E00               	movlw	0
 33177  012D4E                     L27:
 33178  012D4E  6E1F               	movwf	_MSDWriteState,c
 33179                           
 33180                           ;usb_device_msd.c: 1345: }
 33181                           
 33182                           ;usb_device_msd.c: 1344: break;
 33183  012D50  D011               	goto	l18080
 33184  012D52                     l18078:
 33185  012D52  501F               	movf	_MSDWriteState,w,c
 33186                           
 33187                           ; Switch size 1, requested type "space"
 33188                           ; Number of cases is 5, Range of values is 0 to 4
 33189                           ; switch strategies available:
 33190                           ; Name         Instructions Cycles
 33191                           ; simple_byte           16     9 (average)
 33192                           ;	Chosen strategy is simple_byte
 33193  012D54  0A00               	xorlw	0	; case 0
 33194  012D56  B4D8               	btfsc	status,2,c
 33195  012D58  D67F               	goto	l705
 33196  012D5A  0A01               	xorlw	1	; case 1
 33197  012D5C  B4D8               	btfsc	status,2,c
 33198  012D5E  D6DA               	goto	l18016
 33199  012D60  0A03               	xorlw	3	; case 2
 33200  012D62  B4D8               	btfsc	status,2,c
 33201  012D64  D792               	goto	l18052
 33202  012D66  0A01               	xorlw	1	; case 3
 33203  012D68  B4D8               	btfsc	status,2,c
 33204  012D6A  D6EB               	goto	l712
 33205  012D6C  0A07               	xorlw	7	; case 4
 33206  012D6E  B4D8               	btfsc	status,2,c
 33207  012D70  D738               	goto	l18040
 33208  012D72  D7E3               	goto	l18070
 33209  012D74                     l18080:
 33210                           
 33211                           ;usb_device_msd.c: 1347: return MSDWriteState;
 33212  012D74  501F               	movf	_MSDWriteState,w,c
 33213  012D76  0012               	return	
 33214  012D78                     __end_of_MSDWriteHandler:
 33215                           	opt stack 0
 33216                           tosu	equ	0xFFF
 33217                           tosh	equ	0xFFE
 33218                           tosl	equ	0xFFD
 33219                           pclath	equ	0xFFA
 33220                           tblptru	equ	0xFF8
 33221                           tblptrh	equ	0xFF7
 33222                           tblptrl	equ	0xFF6
 33223                           tablat	equ	0xFF5
 33224                           prodh	equ	0xFF4
 33225                           prodl	equ	0xFF3
 33226                           intcon	equ	0xFF2
 33227                           intcon2	equ	0xFF1
 33228                           intcon3	equ	0xFF0
 33229                           postinc0	equ	0xFEE
 33230                           wreg	equ	0xFE8
 33231                           indf1	equ	0xFE7
 33232                           postinc1	equ	0xFE6
 33233                           postdec1	equ	0xFE5
 33234                           plusw1	equ	0xFE3
 33235                           fsr1h	equ	0xFE2
 33236                           fsr1l	equ	0xFE1
 33237                           indf2	equ	0xFDF
 33238                           postinc2	equ	0xFDE
 33239                           postdec2	equ	0xFDD
 33240                           plusw2	equ	0xFDB
 33241                           fsr2h	equ	0xFDA
 33242                           fsr2l	equ	0xFD9
 33243                           status	equ	0xFD8
 33244                           
 33245 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 33246 ;; Defined at:
 33247 ;;		line 34 in file "external_flash.c"
 33248 ;; Parameters:    Size  Location     Type
 33249 ;;  config          2    0[BANK0 ] PTR void 
 33250 ;;		 -> NULL(0), 
 33251 ;; Auto vars:     Size  Location     Type
 33252 ;;		None
 33253 ;; Return value:  Size  Location     Type
 33254 ;;                  1    wreg      unsigned char 
 33255 ;; Registers used:
 33256 ;;		wreg
 33257 ;; Tracked objects:
 33258 ;;		On entry : 0/0
 33259 ;;		On exit  : 0/0
 33260 ;;		Unchanged: 0/0
 33261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33262 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33265 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33266 ;;Total ram usage:        2 bytes
 33267 ;; Hardware stack levels used:    1
 33268 ;; Hardware stack levels required when called:   10
 33269 ;; This function calls:
 33270 ;;		Nothing
 33271 ;; This function is called by:
 33272 ;;		_MSDWriteHandler
 33273 ;;		_MSDProcessCommandMediaPresent
 33274 ;; This function uses a non-reentrant model
 33275 ;;
 33276                           
 33277                           	psect	text140
 33278  000196                     __ptext140:
 33279                           	opt stack 0
 33280  000196                     _ExternalFlash_WriteProtectStateGet:
 33281                           	opt stack 15
 33282                           
 33283                           ;external_flash.c: 37: return 0;
 33284                           
 33285                           ;incstack = 0
 33286  000196  0E00               	movlw	0
 33287  000198  0012               	return	
 33288  00019A                     __end_of_ExternalFlash_WriteProtectStateGet:
 33289                           	opt stack 0
 33290                           tosu	equ	0xFFF
 33291                           tosh	equ	0xFFE
 33292                           tosl	equ	0xFFD
 33293                           pclath	equ	0xFFA
 33294                           tblptru	equ	0xFF8
 33295                           tblptrh	equ	0xFF7
 33296                           tblptrl	equ	0xFF6
 33297                           tablat	equ	0xFF5
 33298                           prodh	equ	0xFF4
 33299                           prodl	equ	0xFF3
 33300                           intcon	equ	0xFF2
 33301                           intcon2	equ	0xFF1
 33302                           intcon3	equ	0xFF0
 33303                           postinc0	equ	0xFEE
 33304                           wreg	equ	0xFE8
 33305                           indf1	equ	0xFE7
 33306                           postinc1	equ	0xFE6
 33307                           postdec1	equ	0xFE5
 33308                           plusw1	equ	0xFE3
 33309                           fsr1h	equ	0xFE2
 33310                           fsr1l	equ	0xFE1
 33311                           indf2	equ	0xFDF
 33312                           postinc2	equ	0xFDE
 33313                           postdec2	equ	0xFDD
 33314                           plusw2	equ	0xFDB
 33315                           fsr2h	equ	0xFDA
 33316                           fsr2l	equ	0xFD9
 33317                           status	equ	0xFD8
 33318                           
 33319 ;; *************** function _ExternalFlash_SectorWrite *****************
 33320 ;; Defined at:
 33321 ;;		line 104 in file "external_flash.c"
 33322 ;; Parameters:    Size  Location     Type
 33323 ;;  config          2   36[BANK0 ] PTR void 
 33324 ;;		 -> NULL(0), 
 33325 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 33326 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 33327 ;;		 -> msd_buffer(512), 
 33328 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 33329 ;; Auto vars:     Size  Location     Type
 33330 ;;  page            2   45[BANK0 ] unsigned int 
 33331 ;; Return value:  Size  Location     Type
 33332 ;;                  1    wreg      unsigned char 
 33333 ;; Registers used:
 33334 ;;		wreg, status,2, status,0, cstack
 33335 ;; Tracked objects:
 33336 ;;		On entry : 0/0
 33337 ;;		On exit  : 0/0
 33338 ;;		Unchanged: 0/0
 33339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33340 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33341 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33343 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33344 ;;Total ram usage:       11 bytes
 33345 ;; Hardware stack levels used:    1
 33346 ;; Hardware stack levels required when called:   15
 33347 ;; This function calls:
 33348 ;;		_flash_page_write
 33349 ;; This function is called by:
 33350 ;;		_MSDWriteHandler
 33351 ;; This function uses a non-reentrant model
 33352 ;;
 33353                           
 33354                           	psect	text141
 33355  01A12C                     __ptext141:
 33356                           	opt stack 0
 33357  01A12C                     _ExternalFlash_SectorWrite:
 33358                           	opt stack 10
 33359                           
 33360                           ;external_flash.c: 106: uint16_t page = (uint16_t) sector_addr;
 33361                           
 33362                           ;incstack = 0
 33363  01A12C  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 33364  01A130  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 33365                           
 33366                           ;external_flash.c: 110: if(sector_addr >= 4096)
 33367  01A134  0100               	movlb	0	; () banked
 33368  01A136  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 33369  01A138  0100               	movlb	0	; () banked
 33370  01A13A  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 33371  01A13C  E105               	bnz	u16570
 33372  01A13E  0E10               	movlw	16
 33373  01A140  0100               	movlb	0	; () banked
 33374  01A142  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 33375  01A144  A0D8               	btfss	status,0,c
 33376  01A146  D002               	goto	l17872
 33377  01A148                     u16570:
 33378                           
 33379                           ; BSR set to: 0
 33380                           ;external_flash.c: 111: {
 33381                           ;external_flash.c: 112: return 0;
 33382  01A148  0E00               	movlw	0
 33383                           
 33384                           ; BSR set to: 0
 33385  01A14A  0012               	return	
 33386  01A14C                     l17872:
 33387                           
 33388                           ; BSR set to: 0
 33389                           ;external_flash.c: 113: }
 33390                           ;external_flash.c: 141: flash_page_write(page, buffer);
 33391  01A14C  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_page_write@page
 33392  01A150  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_page_write@page+1
 33393  01A154  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_page_write@data
 33394  01A158  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_page_write@data+1
 33395  01A15C  EC09  F0CD         	call	_flash_page_write	;wreg free
 33396                           
 33397                           ;external_flash.c: 143: return 1;
 33398  01A160  0E01               	movlw	1
 33399  01A162  0012               	return	
 33400  01A164                     __end_of_ExternalFlash_SectorWrite:
 33401                           	opt stack 0
 33402                           tosu	equ	0xFFF
 33403                           tosh	equ	0xFFE
 33404                           tosl	equ	0xFFD
 33405                           pclath	equ	0xFFA
 33406                           tblptru	equ	0xFF8
 33407                           tblptrh	equ	0xFF7
 33408                           tblptrl	equ	0xFF6
 33409                           tablat	equ	0xFF5
 33410                           prodh	equ	0xFF4
 33411                           prodl	equ	0xFF3
 33412                           intcon	equ	0xFF2
 33413                           intcon2	equ	0xFF1
 33414                           intcon3	equ	0xFF0
 33415                           postinc0	equ	0xFEE
 33416                           wreg	equ	0xFE8
 33417                           indf1	equ	0xFE7
 33418                           postinc1	equ	0xFE6
 33419                           postdec1	equ	0xFE5
 33420                           plusw1	equ	0xFE3
 33421                           fsr1h	equ	0xFE2
 33422                           fsr1l	equ	0xFE1
 33423                           indf2	equ	0xFDF
 33424                           postinc2	equ	0xFDE
 33425                           postdec2	equ	0xFDD
 33426                           plusw2	equ	0xFDB
 33427                           fsr2h	equ	0xFDA
 33428                           fsr2l	equ	0xFD9
 33429                           status	equ	0xFD8
 33430                           
 33431 ;; *************** function _flash_page_write *****************
 33432 ;; Defined at:
 33433 ;;		line 546 in file "flash.c"
 33434 ;; Parameters:    Size  Location     Type
 33435 ;;  page            2   31[BANK0 ] unsigned int 
 33436 ;;  data            2   33[BANK0 ] PTR unsigned char 
 33437 ;;		 -> buffer(512), msd_buffer(512), 
 33438 ;; Auto vars:     Size  Location     Type
 33439 ;;  match           1   35[BANK0 ] enum E8335
 33440 ;; Return value:  Size  Location     Type
 33441 ;;                  1    wreg      void 
 33442 ;; Registers used:
 33443 ;;		wreg, status,2, status,0, cstack
 33444 ;; Tracked objects:
 33445 ;;		On entry : 0/0
 33446 ;;		On exit  : 0/0
 33447 ;;		Unchanged: 0/0
 33448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33449 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33450 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33452 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33453 ;;Total ram usage:        5 bytes
 33454 ;; Hardware stack levels used:    1
 33455 ;; Hardware stack levels required when called:   14
 33456 ;; This function calls:
 33457 ;;		__flash_compare_page_to_buffer
 33458 ;;		__flash_write_page_from_buffer
 33459 ;;		__flash_write_to_buffer
 33460 ;; This function is called by:
 33461 ;;		_ExternalFlash_SectorWrite
 33462 ;;		_fat_format
 33463 ;; This function uses a non-reentrant model
 33464 ;;
 33465                           
 33466                           	psect	text142
 33467  019A12                     __ptext142:
 33468                           	opt stack 0
 33469  019A12                     _flash_page_write:
 33470                           	opt stack 10
 33471                           
 33472                           ;flash.c: 548: flashMatchResult_t match;
 33473                           ;flash.c: 551: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 33474                           
 33475                           ;incstack = 0
 33476  019A12  0E00               	movlw	0
 33477  019A14  0100               	movlb	0	; () banked
 33478  019A16  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 33479  019A18  0E00               	movlw	0
 33480  019A1A  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 33481  019A1C  C081  F075         	movff	flash_page_write@data,__flash_write_to_buffer@data
 33482  019A20  C082  F076         	movff	flash_page_write@data+1,__flash_write_to_buffer@data+1
 33483  019A24  0E02               	movlw	2
 33484  019A26  0100               	movlb	0	; () banked
 33485  019A28  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 33486  019A2A  0E00               	movlw	0
 33487  019A2C  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 33488  019A2E  0E00               	movlw	0
 33489  019A30  0100               	movlb	0	; () banked
 33490  019A32  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 33491  019A34  EC3B  F0CA         	call	__flash_write_to_buffer	;wreg free
 33492                           
 33493                           ;flash.c: 554: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 33494  019A38  C07F  F073         	movff	flash_page_write@page,__flash_compare_page_to_buffer@page
 33495  019A3C  C080  F074         	movff	flash_page_write@page+1,__flash_compare_page_to_buffer@page+1
 33496  019A40  0E00               	movlw	0
 33497  019A42  0100               	movlb	0	; () banked
 33498  019A44  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 33499  019A46  EC4D  F0C0         	call	__flash_compare_page_to_buffer	;wreg free
 33500  019A4A  0100               	movlb	0	; () banked
 33501  019A4C  6F83               	movwf	flash_page_write@match& (0+255),b
 33502                           
 33503                           ; BSR set to: 0
 33504                           ;flash.c: 557: if(match==DATA_DOES_NOT_MATCH)
 33505  019A4E  0100               	movlb	0	; () banked
 33506  019A50  0583               	decf	flash_page_write@match& (0+255),w,b
 33507  019A52  A4D8               	btfss	status,2,c
 33508  019A54  0012               	return	
 33509                           
 33510                           ; BSR set to: 0
 33511                           ;flash.c: 558: {
 33512                           ;flash.c: 559: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 33513  019A56  C07F  F073         	movff	flash_page_write@page,__flash_write_page_from_buffer@page
 33514  019A5A  C080  F074         	movff	flash_page_write@page+1,__flash_write_page_from_buffer@page+1
 33515  019A5E  0E00               	movlw	0
 33516  019A60  0100               	movlb	0	; () banked
 33517  019A62  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 33518  019A64  ECFF  F0C6         	call	__flash_write_page_from_buffer	;wreg free
 33519  019A68  0012               	return	
 33520  019A6A                     __end_of_flash_page_write:
 33521                           	opt stack 0
 33522                           tosu	equ	0xFFF
 33523                           tosh	equ	0xFFE
 33524                           tosl	equ	0xFFD
 33525                           pclath	equ	0xFFA
 33526                           tblptru	equ	0xFF8
 33527                           tblptrh	equ	0xFF7
 33528                           tblptrl	equ	0xFF6
 33529                           tablat	equ	0xFF5
 33530                           prodh	equ	0xFF4
 33531                           prodl	equ	0xFF3
 33532                           intcon	equ	0xFF2
 33533                           intcon2	equ	0xFF1
 33534                           intcon3	equ	0xFF0
 33535                           postinc0	equ	0xFEE
 33536                           wreg	equ	0xFE8
 33537                           indf1	equ	0xFE7
 33538                           postinc1	equ	0xFE6
 33539                           postdec1	equ	0xFE5
 33540                           plusw1	equ	0xFE3
 33541                           fsr1h	equ	0xFE2
 33542                           fsr1l	equ	0xFE1
 33543                           indf2	equ	0xFDF
 33544                           postinc2	equ	0xFDE
 33545                           postdec2	equ	0xFDD
 33546                           plusw2	equ	0xFDB
 33547                           fsr2h	equ	0xFDA
 33548                           fsr2l	equ	0xFD9
 33549                           status	equ	0xFD8
 33550                           
 33551 ;; *************** function __flash_write_to_buffer *****************
 33552 ;; Defined at:
 33553 ;;		line 397 in file "flash.c"
 33554 ;; Parameters:    Size  Location     Type
 33555 ;;  start           2   19[BANK0 ] unsigned int 
 33556 ;;  data            2   21[BANK0 ] PTR unsigned char 
 33557 ;;		 -> log_write_to_disk@log_entry(32), buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), 
 33558 ;;		 -> fat_create_file@root_entry(32), _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@val
      +ue(2), 
 33559 ;;		 -> msd_buffer(512), 
 33560 ;;  data_length     2   23[BANK0 ] unsigned int 
 33561 ;;  buffer          1   25[BANK0 ] enum E8331
 33562 ;; Auto vars:     Size  Location     Type
 33563 ;;  command         4   26[BANK0 ] unsigned char [4]
 33564 ;; Return value:  Size  Location     Type
 33565 ;;                  1    wreg      void 
 33566 ;; Registers used:
 33567 ;;		wreg, status,2, status,0, cstack
 33568 ;; Tracked objects:
 33569 ;;		On entry : 0/0
 33570 ;;		On exit  : 0/0
 33571 ;;		Unchanged: 0/0
 33572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33573 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33574 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33576 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33577 ;;Total ram usage:       11 bytes
 33578 ;; Hardware stack levels used:    1
 33579 ;; Hardware stack levels required when called:   13
 33580 ;; This function calls:
 33581 ;;		__flash_spi_tx_tx
 33582 ;;		_flash_is_busy
 33583 ;; This function is called by:
 33584 ;;		_flash_page_write
 33585 ;;		_flash_partial_write
 33586 ;; This function uses a non-reentrant model
 33587 ;;
 33588                           
 33589                           	psect	text143
 33590  019476                     __ptext143:
 33591                           	opt stack 0
 33592  019476                     __flash_write_to_buffer:
 33593                           	opt stack 13
 33594  019476                     l17584:
 33595  019476  ECF7  F0D3         	call	_flash_is_busy	;wreg free
 33596  01947A  0900               	iorlw	0
 33597  01947C  A4D8               	btfss	status,2,c
 33598  01947E  D7FB               	goto	l17584
 33599                           
 33600                           ;flash.c: 405: if(buffer==FLASH_BUFFER_1)
 33601  019480  0100               	movlb	0	; () banked
 33602  019482  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 33603  019484  0100               	movlb	0	; () banked
 33604  019486  A4D8               	btfss	status,2,c
 33605  019488  D003               	goto	l17590
 33606                           
 33607                           ; BSR set to: 0
 33608                           ;flash.c: 406: command[0] = 0x84;
 33609  01948A  0E84               	movlw	132
 33610  01948C  0100               	movlb	0	; () banked
 33611  01948E  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 33612  019490                     l17590:
 33613                           
 33614                           ; BSR set to: 0
 33615                           ;flash.c: 407: if(buffer==FLASH_BUFFER_2)
 33616  019490  0100               	movlb	0	; () banked
 33617  019492  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 33618  019494  A4D8               	btfss	status,2,c
 33619  019496  D003               	goto	l2806
 33620                           
 33621                           ; BSR set to: 0
 33622                           ;flash.c: 408: command[0] = 0x87;
 33623  019498  0E87               	movlw	135
 33624  01949A  0100               	movlb	0	; () banked
 33625  01949C  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 33626  01949E                     l2806:
 33627                           
 33628                           ; BSR set to: 0
 33629                           ;flash.c: 410: command[1] = 0x00;
 33630  01949E  0E00               	movlw	0
 33631  0194A0  0100               	movlb	0	; () banked
 33632  0194A2  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 33633                           
 33634                           ;flash.c: 411: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 33635  0194A4  0100               	movlb	0	; () banked
 33636  0194A6  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 33637  0194A8  0100               	movlb	0	; () banked
 33638  0194AA  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 33639                           
 33640                           ; BSR set to: 0
 33641                           ;flash.c: 412: command[3] = ((unsigned char)((start)&0xFF));
 33642  0194AC  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 33643                           
 33644                           ; BSR set to: 0
 33645                           ;flash.c: 415: _flash_spi_tx_tx(command, 4, data, data_length);
 33646  0194B0  0E7A               	movlw	low __flash_write_to_buffer@command
 33647  0194B2  0100               	movlb	0	; () banked
 33648  0194B4  6F60               	movwf	__flash_spi_tx_tx@command& (0+255),b
 33649  0194B6  0E00               	movlw	high __flash_write_to_buffer@command
 33650  0194B8  0100               	movlb	0	; () banked
 33651  0194BA  6F61               	movwf	(__flash_spi_tx_tx@command+1)& (0+255),b
 33652  0194BC  0E00               	movlw	0
 33653  0194BE  0100               	movlb	0	; () banked
 33654  0194C0  6F63               	movwf	(__flash_spi_tx_tx@command_length+1)& (0+255),b
 33655  0194C2  0E04               	movlw	4
 33656  0194C4  6F62               	movwf	__flash_spi_tx_tx@command_length& (0+255),b
 33657  0194C6  C075  F064         	movff	__flash_write_to_buffer@data,__flash_spi_tx_tx@data
 33658  0194CA  C076  F065         	movff	__flash_write_to_buffer@data+1,__flash_spi_tx_tx@data+1
 33659  0194CE  C077  F066         	movff	__flash_write_to_buffer@data_length,__flash_spi_tx_tx@data_length
 33660  0194D2  C078  F067         	movff	__flash_write_to_buffer@data_length+1,__flash_spi_tx_tx@data_length+1
 33661  0194D6  EC08  F0BE         	call	__flash_spi_tx_tx	;wreg free
 33662  0194DA  0012               	return		;funcret
 33663  0194DC                     __end_of__flash_write_to_buffer:
 33664                           	opt stack 0
 33665                           tosu	equ	0xFFF
 33666                           tosh	equ	0xFFE
 33667                           tosl	equ	0xFFD
 33668                           pclath	equ	0xFFA
 33669                           tblptru	equ	0xFF8
 33670                           tblptrh	equ	0xFF7
 33671                           tblptrl	equ	0xFF6
 33672                           tablat	equ	0xFF5
 33673                           prodh	equ	0xFF4
 33674                           prodl	equ	0xFF3
 33675                           intcon	equ	0xFF2
 33676                           intcon2	equ	0xFF1
 33677                           intcon3	equ	0xFF0
 33678                           postinc0	equ	0xFEE
 33679                           wreg	equ	0xFE8
 33680                           indf1	equ	0xFE7
 33681                           postinc1	equ	0xFE6
 33682                           postdec1	equ	0xFE5
 33683                           plusw1	equ	0xFE3
 33684                           fsr1h	equ	0xFE2
 33685                           fsr1l	equ	0xFE1
 33686                           indf2	equ	0xFDF
 33687                           postinc2	equ	0xFDE
 33688                           postdec2	equ	0xFDD
 33689                           plusw2	equ	0xFDB
 33690                           fsr2h	equ	0xFDA
 33691                           fsr2l	equ	0xFD9
 33692                           status	equ	0xFD8
 33693                           
 33694 ;; *************** function __flash_spi_tx_tx *****************
 33695 ;; Defined at:
 33696 ;;		line 141 in file "flash.c"
 33697 ;; Parameters:    Size  Location     Type
 33698 ;;  command         2    0[BANK0 ] PTR unsigned char 
 33699 ;;		 -> _flash_write_to_buffer@command(4), 
 33700 ;;  command_leng    2    2[BANK0 ] unsigned int 
 33701 ;;  data            2    4[BANK0 ] PTR unsigned char 
 33702 ;;		 -> log_write_to_disk@log_entry(32), buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), 
 33703 ;;		 -> fat_create_file@root_entry(32), _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@val
      +ue(2), 
 33704 ;;		 -> msd_buffer(512), 
 33705 ;;  data_length     2    6[BANK0 ] unsigned int 
 33706 ;; Auto vars:     Size  Location     Type
 33707 ;;		None
 33708 ;; Return value:  Size  Location     Type
 33709 ;;                  1    wreg      void 
 33710 ;; Registers used:
 33711 ;;		wreg, status,2, status,0
 33712 ;; Tracked objects:
 33713 ;;		On entry : 0/0
 33714 ;;		On exit  : 0/0
 33715 ;;		Unchanged: 0/0
 33716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33717 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33719 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33720 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33721 ;;Total ram usage:       12 bytes
 33722 ;; Hardware stack levels used:    1
 33723 ;; Hardware stack levels required when called:   10
 33724 ;; This function calls:
 33725 ;;		Nothing
 33726 ;; This function is called by:
 33727 ;;		__flash_write_to_buffer
 33728 ;; This function uses a non-reentrant model
 33729 ;;
 33730                           
 33731                           	psect	text144
 33732  017C10                     __ptext144:
 33733                           	opt stack 0
 33734  017C10                     __flash_spi_tx_tx:
 33735                           	opt stack 15
 33736                           
 33737                           ;flash.c: 144: DMACON1bits.SSCON1 = 0;
 33738                           
 33739                           ;incstack = 0
 33740  017C10  9E88               	bcf	3976,7,c	;volatile
 33741                           
 33742                           ;flash.c: 145: DMACON1bits.SSCON0 = 0;
 33743  017C12  9C88               	bcf	3976,6,c	;volatile
 33744                           
 33745                           ;flash.c: 147: DMACON1bits.TXINC = 1;
 33746  017C14  8A88               	bsf	3976,5,c	;volatile
 33747                           
 33748                           ;flash.c: 149: DMACON1bits.RXINC = 0;
 33749  017C16  9888               	bcf	3976,4,c	;volatile
 33750                           
 33751                           ;flash.c: 151: DMACON1bits.DUPLEX1 = 0;
 33752  017C18  9688               	bcf	3976,3,c	;volatile
 33753                           
 33754                           ;flash.c: 152: DMACON1bits.DUPLEX0 = 1;
 33755  017C1A  8488               	bsf	3976,2,c	;volatile
 33756                           
 33757                           ;flash.c: 154: DMACON1bits.DLYINTEN = 0;
 33758  017C1C  9288               	bcf	3976,1,c	;volatile
 33759                           
 33760                           ;flash.c: 156: DMACON2bits.DLYCYC = 0b0000;
 33761  017C1E  9886               	bcf	3974,4,c	;volatile
 33762  017C20  9A86               	bcf	3974,5,c	;volatile
 33763  017C22  9C86               	bcf	3974,6,c	;volatile
 33764  017C24  9E86               	bcf	3974,7,c	;volatile
 33765                           
 33766                           ;flash.c: 158: DMACON2bits.INTLVL = 0b0000;
 33767  017C26  9086               	bcf	3974,0,c	;volatile
 33768  017C28  9286               	bcf	3974,1,c	;volatile
 33769  017C2A  9486               	bcf	3974,2,c	;volatile
 33770  017C2C  9686               	bcf	3974,3,c	;volatile
 33771                           
 33772                           ;flash.c: 161: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 33773  017C2E  0100               	movlb	0	; () banked
 33774  017C30  5161               	movf	(__flash_spi_tx_tx@command+1)& (0+255),w,b
 33775  017C32  6E6A               	movwf	3946,c	;volatile
 33776                           
 33777                           ; BSR set to: 0
 33778                           ;flash.c: 162: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 33779  017C34  C060  FF6B         	movff	__flash_spi_tx_tx@command,3947	;volatile
 33780                           
 33781                           ; BSR set to: 0
 33782                           ;flash.c: 165: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 33783  017C38  0EFF               	movlw	255
 33784  017C3A  0100               	movlb	0	; () banked
 33785  017C3C  6F68               	movwf	??__flash_spi_tx_tx& (0+255),b
 33786  017C3E  0EFF               	movlw	255
 33787  017C40  0100               	movlb	0	; () banked
 33788  017C42  6F69               	movwf	(??__flash_spi_tx_tx+1)& (0+255),b
 33789  017C44  C062  F06A         	movff	__flash_spi_tx_tx@command_length,??__flash_spi_tx_tx+2
 33790  017C48  C063  F06B         	movff	__flash_spi_tx_tx@command_length+1,??__flash_spi_tx_tx+3
 33791  017C4C  0100               	movlb	0	; () banked
 33792  017C4E  5168               	movf	??__flash_spi_tx_tx& (0+255),w,b
 33793  017C50  0100               	movlb	0	; () banked
 33794  017C52  276A               	addwf	(??__flash_spi_tx_tx+2)& (0+255),f,b
 33795  017C54  0100               	movlb	0	; () banked
 33796  017C56  5169               	movf	(??__flash_spi_tx_tx+1)& (0+255),w,b
 33797  017C58  0100               	movlb	0	; () banked
 33798  017C5A  236B               	addwfc	(??__flash_spi_tx_tx+3)& (0+255),f,b
 33799  017C5C  C06B  F06A         	movff	??__flash_spi_tx_tx+3,??__flash_spi_tx_tx+2
 33800  017C60  0100               	movlb	0	; () banked
 33801  017C62  6B6B               	clrf	(??__flash_spi_tx_tx+3)& (0+255),b
 33802  017C64  0100               	movlb	0	; () banked
 33803  017C66  516A               	movf	(??__flash_spi_tx_tx+2)& (0+255),w,b
 33804  017C68  6E66               	movwf	3942,c	;volatile
 33805                           
 33806                           ; BSR set to: 0
 33807                           ;flash.c: 166: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 33808  017C6A  0100               	movlb	0	; () banked
 33809  017C6C  0562               	decf	__flash_spi_tx_tx@command_length& (0+255),w,b
 33810  017C6E  6E67               	movwf	3943,c	;volatile
 33811                           
 33812                           ; BSR set to: 0
 33813                           ;flash.c: 169: LATDbits.LD7 = 0;
 33814  017C70  9E8C               	bcf	3980,7,c	;volatile
 33815                           
 33816                           ; BSR set to: 0
 33817                           ;flash.c: 172: DMACON1bits.DMAEN = 1;
 33818  017C72  8088               	bsf	3976,0,c	;volatile
 33819  017C74                     l2739:
 33820  017C74  B088               	btfsc	3976,0,c	;volatile
 33821  017C76  D7FE               	goto	l2739
 33822                           
 33823                           ;flash.c: 176: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 33824  017C78  0100               	movlb	0	; () banked
 33825  017C7A  5165               	movf	(__flash_spi_tx_tx@data+1)& (0+255),w,b
 33826  017C7C  6E6A               	movwf	3946,c	;volatile
 33827                           
 33828                           ; BSR set to: 0
 33829                           ;flash.c: 177: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 33830  017C7E  C064  FF6B         	movff	__flash_spi_tx_tx@data,3947	;volatile
 33831                           
 33832                           ; BSR set to: 0
 33833                           ;flash.c: 180: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 33834  017C82  0EFF               	movlw	255
 33835  017C84  0100               	movlb	0	; () banked
 33836  017C86  6F68               	movwf	??__flash_spi_tx_tx& (0+255),b
 33837  017C88  0EFF               	movlw	255
 33838  017C8A  0100               	movlb	0	; () banked
 33839  017C8C  6F69               	movwf	(??__flash_spi_tx_tx+1)& (0+255),b
 33840  017C8E  C066  F06A         	movff	__flash_spi_tx_tx@data_length,??__flash_spi_tx_tx+2
 33841  017C92  C067  F06B         	movff	__flash_spi_tx_tx@data_length+1,??__flash_spi_tx_tx+3
 33842  017C96  0100               	movlb	0	; () banked
 33843  017C98  5168               	movf	??__flash_spi_tx_tx& (0+255),w,b
 33844  017C9A  0100               	movlb	0	; () banked
 33845  017C9C  276A               	addwf	(??__flash_spi_tx_tx+2)& (0+255),f,b
 33846  017C9E  0100               	movlb	0	; () banked
 33847  017CA0  5169               	movf	(??__flash_spi_tx_tx+1)& (0+255),w,b
 33848  017CA2  0100               	movlb	0	; () banked
 33849  017CA4  236B               	addwfc	(??__flash_spi_tx_tx+3)& (0+255),f,b
 33850  017CA6  C06B  F06A         	movff	??__flash_spi_tx_tx+3,??__flash_spi_tx_tx+2
 33851  017CAA  0100               	movlb	0	; () banked
 33852  017CAC  6B6B               	clrf	(??__flash_spi_tx_tx+3)& (0+255),b
 33853  017CAE  0100               	movlb	0	; () banked
 33854  017CB0  516A               	movf	(??__flash_spi_tx_tx+2)& (0+255),w,b
 33855  017CB2  6E66               	movwf	3942,c	;volatile
 33856                           
 33857                           ; BSR set to: 0
 33858                           ;flash.c: 181: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 33859  017CB4  0100               	movlb	0	; () banked
 33860  017CB6  0566               	decf	__flash_spi_tx_tx@data_length& (0+255),w,b
 33861  017CB8  6E67               	movwf	3943,c	;volatile
 33862                           
 33863                           ; BSR set to: 0
 33864                           ;flash.c: 184: DMACON1bits.DMAEN = 1;
 33865  017CBA  8088               	bsf	3976,0,c	;volatile
 33866  017CBC                     l2742:
 33867  017CBC  B088               	btfsc	3976,0,c	;volatile
 33868  017CBE  D7FE               	goto	l2742
 33869                           
 33870                           ;flash.c: 188: LATDbits.LD7 = 1;
 33871  017CC0  8E8C               	bsf	3980,7,c	;volatile
 33872  017CC2  0012               	return		;funcret
 33873  017CC4                     __end_of__flash_spi_tx_tx:
 33874                           	opt stack 0
 33875                           tosu	equ	0xFFF
 33876                           tosh	equ	0xFFE
 33877                           tosl	equ	0xFFD
 33878                           pclath	equ	0xFFA
 33879                           tblptru	equ	0xFF8
 33880                           tblptrh	equ	0xFF7
 33881                           tblptrl	equ	0xFF6
 33882                           tablat	equ	0xFF5
 33883                           prodh	equ	0xFF4
 33884                           prodl	equ	0xFF3
 33885                           intcon	equ	0xFF2
 33886                           intcon2	equ	0xFF1
 33887                           intcon3	equ	0xFF0
 33888                           postinc0	equ	0xFEE
 33889                           wreg	equ	0xFE8
 33890                           indf1	equ	0xFE7
 33891                           postinc1	equ	0xFE6
 33892                           postdec1	equ	0xFE5
 33893                           plusw1	equ	0xFE3
 33894                           fsr1h	equ	0xFE2
 33895                           fsr1l	equ	0xFE1
 33896                           indf2	equ	0xFDF
 33897                           postinc2	equ	0xFDE
 33898                           postdec2	equ	0xFDD
 33899                           plusw2	equ	0xFDB
 33900                           fsr2h	equ	0xFDA
 33901                           fsr2l	equ	0xFD9
 33902                           status	equ	0xFD8
 33903                           
 33904 ;; *************** function __flash_write_page_from_buffer *****************
 33905 ;; Defined at:
 33906 ;;		line 419 in file "flash.c"
 33907 ;; Parameters:    Size  Location     Type
 33908 ;;  page            2   19[BANK0 ] unsigned int 
 33909 ;;  buffer          1   21[BANK0 ] enum E8331
 33910 ;; Auto vars:     Size  Location     Type
 33911 ;;  command         4   25[BANK0 ] unsigned char [4]
 33912 ;; Return value:  Size  Location     Type
 33913 ;;                  1    wreg      void 
 33914 ;; Registers used:
 33915 ;;		wreg, status,2, status,0, cstack
 33916 ;; Tracked objects:
 33917 ;;		On entry : 0/0
 33918 ;;		On exit  : 0/0
 33919 ;;		Unchanged: 0/0
 33920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33921 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33922 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33923 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33924 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33925 ;;Total ram usage:       10 bytes
 33926 ;; Hardware stack levels used:    1
 33927 ;; Hardware stack levels required when called:   13
 33928 ;; This function calls:
 33929 ;;		__flash_spi_tx
 33930 ;;		_flash_is_busy
 33931 ;; This function is called by:
 33932 ;;		_flash_page_write
 33933 ;;		_flash_partial_write
 33934 ;; This function uses a non-reentrant model
 33935 ;;
 33936                           
 33937                           	psect	text145
 33938  018DFE                     __ptext145:
 33939                           	opt stack 0
 33940  018DFE                     __flash_write_page_from_buffer:
 33941                           	opt stack 13
 33942  018DFE                     l17600:
 33943  018DFE  ECF7  F0D3         	call	_flash_is_busy	;wreg free
 33944  018E02  0900               	iorlw	0
 33945  018E04  A4D8               	btfss	status,2,c
 33946  018E06  D7FB               	goto	l17600
 33947                           
 33948                           ;flash.c: 427: if(buffer==FLASH_BUFFER_1)
 33949  018E08  0100               	movlb	0	; () banked
 33950  018E0A  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 33951  018E0C  0100               	movlb	0	; () banked
 33952  018E0E  A4D8               	btfss	status,2,c
 33953  018E10  D003               	goto	l17606
 33954                           
 33955                           ; BSR set to: 0
 33956                           ;flash.c: 428: command[0] = 0x83;
 33957  018E12  0E83               	movlw	131
 33958  018E14  0100               	movlb	0	; () banked
 33959  018E16  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 33960  018E18                     l17606:
 33961                           
 33962                           ; BSR set to: 0
 33963                           ;flash.c: 429: if(buffer==FLASH_BUFFER_2)
 33964  018E18  0100               	movlb	0	; () banked
 33965  018E1A  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 33966  018E1C  A4D8               	btfss	status,2,c
 33967  018E1E  D003               	goto	l17610
 33968                           
 33969                           ; BSR set to: 0
 33970                           ;flash.c: 430: command[0] = 0x86;
 33971  018E20  0E86               	movlw	134
 33972  018E22  0100               	movlb	0	; () banked
 33973  018E24  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 33974  018E26                     l17610:
 33975                           
 33976                           ; BSR set to: 0
 33977                           ;flash.c: 432: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 33978  018E26  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 33979  018E2A  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 33980  018E2E  0E07               	movlw	7
 33981  018E30  0100               	movlb	0	; () banked
 33982  018E32  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 33983  018E34                     u16195:
 33984  018E34  0100               	movlb	0	; () banked
 33985  018E36  90D8               	bcf	status,0,c
 33986  018E38  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 33987  018E3A  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 33988  018E3C  0100               	movlb	0	; () banked
 33989  018E3E  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 33990  018E40  D7F9               	goto	u16195
 33991  018E42  0100               	movlb	0	; () banked
 33992  018E44  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 33993  018E46  0100               	movlb	0	; () banked
 33994  018E48  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 33995                           
 33996                           ; BSR set to: 0
 33997                           ;flash.c: 433: command[2] = ((unsigned char)((page<<1)&0xFF));
 33998  018E4A  0100               	movlb	0	; () banked
 33999  018E4C  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 34000  018E4E  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 34001  018E50  0100               	movlb	0	; () banked
 34002  018E52  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 34003                           
 34004                           ;flash.c: 434: command[3] = 0x00;
 34005  018E54  0E00               	movlw	0
 34006  018E56  0100               	movlb	0	; () banked
 34007  018E58  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 34008                           
 34009                           ; BSR set to: 0
 34010                           ;flash.c: 437: _flash_spi_tx(command, 4);
 34011  018E5A  0E79               	movlw	low __flash_write_page_from_buffer@command
 34012  018E5C  0100               	movlb	0	; () banked
 34013  018E5E  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 34014  018E60  0E00               	movlw	high __flash_write_page_from_buffer@command
 34015  018E62  0100               	movlb	0	; () banked
 34016  018E64  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 34017  018E66  0E00               	movlw	0
 34018  018E68  0100               	movlb	0	; () banked
 34019  018E6A  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 34020  018E6C  0E04               	movlw	4
 34021  018E6E  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 34022  018E70  EC36  F0C9         	call	__flash_spi_tx	;wreg free
 34023  018E74  0012               	return		;funcret
 34024  018E76                     __end_of__flash_write_page_from_buffer:
 34025                           	opt stack 0
 34026                           tosu	equ	0xFFF
 34027                           tosh	equ	0xFFE
 34028                           tosl	equ	0xFFD
 34029                           pclath	equ	0xFFA
 34030                           tblptru	equ	0xFF8
 34031                           tblptrh	equ	0xFF7
 34032                           tblptrl	equ	0xFF6
 34033                           tablat	equ	0xFF5
 34034                           prodh	equ	0xFF4
 34035                           prodl	equ	0xFF3
 34036                           intcon	equ	0xFF2
 34037                           intcon2	equ	0xFF1
 34038                           intcon3	equ	0xFF0
 34039                           postinc0	equ	0xFEE
 34040                           wreg	equ	0xFE8
 34041                           indf1	equ	0xFE7
 34042                           postinc1	equ	0xFE6
 34043                           postdec1	equ	0xFE5
 34044                           plusw1	equ	0xFE3
 34045                           fsr1h	equ	0xFE2
 34046                           fsr1l	equ	0xFE1
 34047                           indf2	equ	0xFDF
 34048                           postinc2	equ	0xFDE
 34049                           postdec2	equ	0xFDD
 34050                           plusw2	equ	0xFDB
 34051                           fsr2h	equ	0xFDA
 34052                           fsr2l	equ	0xFD9
 34053                           status	equ	0xFD8
 34054                           
 34055 ;; *************** function __flash_compare_page_to_buffer *****************
 34056 ;; Defined at:
 34057 ;;		line 337 in file "flash.c"
 34058 ;; Parameters:    Size  Location     Type
 34059 ;;  page            2   19[BANK0 ] unsigned int 
 34060 ;;  buffer          1   21[BANK0 ] enum E8331
 34061 ;; Auto vars:     Size  Location     Type
 34062 ;;  command         4   27[BANK0 ] unsigned char [4]
 34063 ;;  status          2   25[BANK0 ] unsigned int 
 34064 ;; Return value:  Size  Location     Type
 34065 ;;                  1    wreg      enum E8335
 34066 ;; Registers used:
 34067 ;;		wreg, status,2, status,0, cstack
 34068 ;; Tracked objects:
 34069 ;;		On entry : 0/0
 34070 ;;		On exit  : 0/0
 34071 ;;		Unchanged: 0/0
 34072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34073 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34074 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34075 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34076 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34077 ;;Total ram usage:       12 bytes
 34078 ;; Hardware stack levels used:    1
 34079 ;; Hardware stack levels required when called:   13
 34080 ;; This function calls:
 34081 ;;		__flash_get_status
 34082 ;;		__flash_spi_tx
 34083 ;;		_flash_is_busy
 34084 ;; This function is called by:
 34085 ;;		_flash_page_write
 34086 ;;		_flash_partial_write
 34087 ;; This function uses a non-reentrant model
 34088 ;;
 34089                           
 34090                           	psect	text146
 34091  01809A                     __ptext146:
 34092                           	opt stack 0
 34093  01809A                     __flash_compare_page_to_buffer:
 34094                           	opt stack 13
 34095  01809A                     l17550:
 34096  01809A  ECF7  F0D3         	call	_flash_is_busy	;wreg free
 34097  01809E  0900               	iorlw	0
 34098  0180A0  A4D8               	btfss	status,2,c
 34099  0180A2  D7FB               	goto	l17550
 34100                           
 34101                           ;flash.c: 346: if(buffer==FLASH_BUFFER_1)
 34102  0180A4  0100               	movlb	0	; () banked
 34103  0180A6  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 34104  0180A8  0100               	movlb	0	; () banked
 34105  0180AA  A4D8               	btfss	status,2,c
 34106  0180AC  D003               	goto	l17556
 34107                           
 34108                           ; BSR set to: 0
 34109                           ;flash.c: 347: command[0] = 0x60;
 34110  0180AE  0E60               	movlw	96
 34111  0180B0  0100               	movlb	0	; () banked
 34112  0180B2  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 34113  0180B4                     l17556:
 34114                           
 34115                           ; BSR set to: 0
 34116                           ;flash.c: 348: if(buffer==FLASH_BUFFER_2)
 34117  0180B4  0100               	movlb	0	; () banked
 34118  0180B6  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 34119  0180B8  A4D8               	btfss	status,2,c
 34120  0180BA  D003               	goto	l17560
 34121                           
 34122                           ; BSR set to: 0
 34123                           ;flash.c: 349: command[0] = 0x60;
 34124  0180BC  0E60               	movlw	96
 34125  0180BE  0100               	movlb	0	; () banked
 34126  0180C0  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 34127  0180C2                     l17560:
 34128                           
 34129                           ; BSR set to: 0
 34130                           ;flash.c: 351: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 34131  0180C2  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 34132  0180C6  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 34133  0180CA  0E07               	movlw	7
 34134  0180CC  0100               	movlb	0	; () banked
 34135  0180CE  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 34136  0180D0                     u16105:
 34137  0180D0  0100               	movlb	0	; () banked
 34138  0180D2  90D8               	bcf	status,0,c
 34139  0180D4  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 34140  0180D6  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 34141  0180D8  0100               	movlb	0	; () banked
 34142  0180DA  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 34143  0180DC  D7F9               	goto	u16105
 34144  0180DE  0100               	movlb	0	; () banked
 34145  0180E0  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 34146  0180E2  0100               	movlb	0	; () banked
 34147  0180E4  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 34148                           
 34149                           ; BSR set to: 0
 34150                           ;flash.c: 352: command[2] = ((unsigned char)((page<<1)&0xFF));
 34151  0180E6  0100               	movlb	0	; () banked
 34152  0180E8  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 34153  0180EA  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 34154  0180EC  0100               	movlb	0	; () banked
 34155  0180EE  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 34156                           
 34157                           ;flash.c: 353: command[3] = 0x00;
 34158  0180F0  0E00               	movlw	0
 34159  0180F2  0100               	movlb	0	; () banked
 34160  0180F4  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 34161                           
 34162                           ; BSR set to: 0
 34163                           ;flash.c: 356: _flash_spi_tx(command, 4);
 34164  0180F6  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 34165  0180F8  0100               	movlb	0	; () banked
 34166  0180FA  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 34167  0180FC  0E00               	movlw	high __flash_compare_page_to_buffer@command
 34168  0180FE  0100               	movlb	0	; () banked
 34169  018100  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 34170  018102  0E00               	movlw	0
 34171  018104  0100               	movlb	0	; () banked
 34172  018106  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 34173  018108  0E04               	movlw	4
 34174  01810A  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 34175  01810C  EC36  F0C9         	call	__flash_spi_tx	;wreg free
 34176  018110                     l17566:
 34177  018110  ECF7  F0D3         	call	_flash_is_busy	;wreg free
 34178  018114  0900               	iorlw	0
 34179  018116  A4D8               	btfss	status,2,c
 34180  018118  D7FB               	goto	l17566
 34181                           
 34182                           ;flash.c: 362: status = _flash_get_status();
 34183  01811A  ECA2  F0CF         	call	__flash_get_status	;wreg free
 34184  01811E  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 34185  018122  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 34186                           
 34187                           ;flash.c: 365: if(status & 0b0000000001000000)
 34188  018126  0100               	movlb	0	; () banked
 34189  018128  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 34190  01812A  D002               	goto	l17578
 34191                           
 34192                           ; BSR set to: 0
 34193                           ;flash.c: 366: {
 34194                           ;flash.c: 368: return DATA_DOES_NOT_MATCH;
 34195  01812C  0E01               	movlw	1
 34196                           
 34197                           ; BSR set to: 0
 34198                           ;flash.c: 369: }
 34199                           
 34200                           ; BSR set to: 0
 34201  01812E  0012               	return	
 34202  018130                     l17578:
 34203                           
 34204                           ; BSR set to: 0
 34205                           ;flash.c: 370: else
 34206                           ;flash.c: 371: {
 34207                           ;flash.c: 373: return DATA_DOES_MATCH;
 34208  018130  0E00               	movlw	0
 34209                           
 34210                           ; BSR set to: 0
 34211  018132  0012               	return	
 34212  018134                     __end_of__flash_compare_page_to_buffer:
 34213                           	opt stack 0
 34214                           tosu	equ	0xFFF
 34215                           tosh	equ	0xFFE
 34216                           tosl	equ	0xFFD
 34217                           pclath	equ	0xFFA
 34218                           tblptru	equ	0xFF8
 34219                           tblptrh	equ	0xFF7
 34220                           tblptrl	equ	0xFF6
 34221                           tablat	equ	0xFF5
 34222                           prodh	equ	0xFF4
 34223                           prodl	equ	0xFF3
 34224                           intcon	equ	0xFF2
 34225                           intcon2	equ	0xFF1
 34226                           intcon3	equ	0xFF0
 34227                           postinc0	equ	0xFEE
 34228                           wreg	equ	0xFE8
 34229                           indf1	equ	0xFE7
 34230                           postinc1	equ	0xFE6
 34231                           postdec1	equ	0xFE5
 34232                           plusw1	equ	0xFE3
 34233                           fsr1h	equ	0xFE2
 34234                           fsr1l	equ	0xFE1
 34235                           indf2	equ	0xFDF
 34236                           postinc2	equ	0xFDE
 34237                           postdec2	equ	0xFDD
 34238                           plusw2	equ	0xFDB
 34239                           fsr2h	equ	0xFDA
 34240                           fsr2l	equ	0xFD9
 34241                           status	equ	0xFD8
 34242                           
 34243 ;; *************** function _MSDReadHandler *****************
 34244 ;; Defined at:
 34245 ;;		line 1038 in file "usb_device_msd.c"
 34246 ;; Parameters:    Size  Location     Type
 34247 ;;		None
 34248 ;; Auto vars:     Size  Location     Type
 34249 ;;		None
 34250 ;; Return value:  Size  Location     Type
 34251 ;;                  1    wreg      unsigned char 
 34252 ;; Registers used:
 34253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 34254 ;; Tracked objects:
 34255 ;;		On entry : 0/0
 34256 ;;		On exit  : 0/0
 34257 ;;		Unchanged: 0/0
 34258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34261 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34262 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34263 ;;Total ram usage:        4 bytes
 34264 ;; Hardware stack levels used:    1
 34265 ;; Hardware stack levels required when called:   16
 34266 ;; This function calls:
 34267 ;;		_ExternalFlash_SectorRead
 34268 ;;		_MSDCheckForErrorCases
 34269 ;;		_USBStallEndpoint
 34270 ;;		_USBTransferOnePacket
 34271 ;; This function is called by:
 34272 ;;		_MSDProcessCommandMediaPresent
 34273 ;; This function uses a non-reentrant model
 34274 ;;
 34275                           
 34276                           	psect	text147
 34277  01422C                     __ptext147:
 34278                           	opt stack 0
 34279  01422C                     _MSDReadHandler:
 34280                           	opt stack 10
 34281                           
 34282                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 34283                           
 34284                           ; BSR set to: 0
 34285                           ;incstack = 0
 34286  01422C  D0F4               	goto	l17990
 34287  01422E                     l686:
 34288                           
 34289                           ; BSR set to: 1
 34290                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 34291  01422E  C252  F1DC         	movff	_gblCBW+17,_LBA+3
 34292                           
 34293                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 34294  014232  C253  F1DB         	movff	_gblCBW+18,_LBA+2
 34295                           
 34296                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 34297  014236  C254  F1DA         	movff	_gblCBW+19,_LBA+1
 34298                           
 34299                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 34300  01423A  C255  F1D9         	movff	_gblCBW+20,_LBA
 34301                           
 34302                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 34303  01423E  C257  F0DA         	movff	_gblCBW+22,_TransferLength+1
 34304                           
 34305                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 34306  014242  C258  F0D9         	movff	_gblCBW+23,_TransferLength
 34307                           
 34308                           ; BSR set to: 1
 34309                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 34310  014246  0100               	movlb	0	; () banked
 34311  014248  51D9               	movf	_TransferLength& (0+255),w,b
 34312  01424A  0100               	movlb	0	; () banked
 34313  01424C  6F95               	movwf	??_MSDReadHandler& (0+255),b
 34314  01424E  0100               	movlb	0	; () banked
 34315  014250  51DA               	movf	(_TransferLength+1)& (0+255),w,b
 34316  014252  0100               	movlb	0	; () banked
 34317  014254  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 34318  014256  0100               	movlb	0	; () banked
 34319  014258  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 34320  01425A  0100               	movlb	0	; () banked
 34321  01425C  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 34322  01425E  0E09               	movlw	9
 34323  014260                     u16605:
 34324  014260  90D8               	bcf	status,0,c
 34325  014262  0100               	movlb	0	; () banked
 34326  014264  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 34327  014266  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 34328  014268  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 34329  01426A  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 34330  01426C  2EE8               	decfsz	wreg,f,c
 34331  01426E  D7F8               	goto	u16605
 34332  014270  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 34333  014274  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 34334  014278  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 34335  01427C  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 34336  014280  EC35  F0AE         	call	_MSDCheckForErrorCases	;wreg free
 34337  014284  0900               	iorlw	0
 34338  014286  A4D8               	btfss	status,2,c
 34339  014288  D0D8               	goto	l17992
 34340                           
 34341                           ;usb_device_msd.c: 1058: }
 34342                           ;usb_device_msd.c: 1060: MSDReadState = 0x01;
 34343                           
 34344                           ;usb_device_msd.c: 1056: {
 34345                           ;usb_device_msd.c: 1057: break;
 34346  01428A  0E01               	movlw	1
 34347  01428C  0101               	movlb	1	; () banked
 34348  01428E  6FF9               	movwf	_MSDReadState& (0+255),b
 34349  014290                     l17926:
 34350                           
 34351                           ; BSR set to: 1
 34352                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 34353  014290  0100               	movlb	0	; () banked
 34354  014292  51D9               	movf	_TransferLength& (0+255),w,b
 34355  014294  0100               	movlb	0	; () banked
 34356  014296  11DA               	iorwf	(_TransferLength+1)& (0+255),w,b
 34357  014298  B4D8               	btfsc	status,2,c
 34358  01429A  D0B9               	goto	l17986
 34359                           
 34360                           ;usb_device_msd.c: 1068: }
 34361                           ;usb_device_msd.c: 1070: TransferLength.Val--;
 34362                           
 34363                           ; BSR set to: 1
 34364                           
 34365                           ;usb_device_msd.c: 1067: break;
 34366                           
 34367                           ; BSR set to: 0
 34368                           ;usb_device_msd.c: 1065: {
 34369                           ;usb_device_msd.c: 1066: MSDReadState = 0x00;
 34370  01429C  0100               	movlb	0	; () banked
 34371  01429E  07D9               	decf	_TransferLength& (0+255),f,b
 34372  0142A0  A0D8               	btfss	status,0,c
 34373  0142A2  07DA               	decf	(_TransferLength+1)& (0+255),f,b
 34374                           
 34375                           ; BSR set to: 0
 34376                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 34377  0142A4  0E02               	movlw	2
 34378  0142A6  0101               	movlb	1	; () banked
 34379  0142A8  6FF9               	movwf	_MSDReadState& (0+255),b
 34380  0142AA                     l17934:
 34381                           
 34382                           ; BSR set to: 1
 34383                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 34384  0142AA  0100               	movlb	0	; () banked
 34385  0142AC  51DB               	movf	_USBMSDInHandle& (0+255),w,b
 34386  0142AE  0100               	movlb	0	; () banked
 34387  0142B0  11DC               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 34388  0142B2  B4D8               	btfsc	status,2,c
 34389  0142B4  D007               	goto	l17940
 34390                           
 34391                           ; BSR set to: 0
 34392  0142B6  C0DB  FFD9         	movff	_USBMSDInHandle,fsr2l
 34393  0142BA  C0DC  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 34394  0142BE  0100               	movlb	0	; () banked
 34395  0142C0  BEDF               	btfsc	indf2,7,c
 34396  0142C2  D0BB               	goto	l17992
 34397  0142C4                     l17940:
 34398                           
 34399                           ; BSR set to: 0
 34400                           ;usb_device_msd.c: 1079: }
 34401                           ;usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaParameters, LBA.Val, (uint8_t*
      +                          )&msd_buffer[0]) != 1)
 34402  0142C4  C2D0  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 34403  0142C8  C2D1  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 34404  0142CC  C1D9  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 34405  0142D0  C1DA  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 34406  0142D4  C1DB  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 34407  0142D8  C1DC  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 34408  0142DC  0E00               	movlw	0
 34409  0142DE  0100               	movlb	0	; () banked
 34410  0142E0  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 34411  0142E2  0E06               	movlw	6
 34412  0142E4  0100               	movlb	0	; () banked
 34413  0142E6  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 34414  0142E8  EE22  F0C7         	lfsr	2,_LUN+12
 34415  0142EC  D801               	call	u16658
 34416  0142EE  D00A               	goto	u16659
 34417  0142F0                     u16658:
 34418  0142F0  0005               	push	
 34419  0142F2  6EFA               	movwf	pclath,c
 34420  0142F4  50DE               	movf	postinc2,w,c
 34421  0142F6  6EFD               	movwf	tosl,c
 34422  0142F8  50DE               	movf	postinc2,w,c
 34423  0142FA  6EFE               	movwf	tosh,c
 34424  0142FC  50DE               	movf	postinc2,w,c
 34425  0142FE  6EFF               	movwf	tosu,c
 34426  014300  50FA               	movf	pclath,w,c
 34427  014302  0012               	return		;indir
 34428  014304                     u16659:
 34429  014304  06E8               	decf	wreg,f,c
 34430  014306  B4D8               	btfsc	status,2,c
 34431  014308  D01C               	goto	l17954
 34432                           
 34433                           ;usb_device_msd.c: 1084: {
 34434                           ;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 34435  01430A  0E64               	movlw	100
 34436  01430C  0101               	movlb	1	; () banked
 34437  01430E  61F8               	cpfslt	_MSDRetryAttempt& (0+255),b
 34438  014310  D003               	goto	l17948
 34439                           
 34440                           ; BSR set to: 1
 34441                           ;usb_device_msd.c: 1086: {
 34442                           ;usb_device_msd.c: 1087: MSDRetryAttempt++;
 34443  014312  0101               	movlb	1	; () banked
 34444  014314  2BF8               	incf	_MSDRetryAttempt& (0+255),f,b
 34445                           
 34446                           ;usb_device_msd.c: 1088: break;
 34447  014316  D091               	goto	l17992
 34448  014318                     l17948:
 34449                           
 34450                           ; BSR set to: 1
 34451                           ;usb_device_msd.c: 1090: else
 34452                           ;usb_device_msd.c: 1091: {
 34453                           ;usb_device_msd.c: 1100: msd_csw.bCSWStatus=0x02;
 34454  014318  0E02               	movlw	2
 34455  01431A  010D               	movlb	13	; () banked
 34456  01431C  6F8C               	movwf	140,b	;volatile
 34457                           
 34458                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 34459  01431E  0102               	movlb	2	; () banked
 34460  014320  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 34461  014322  0BF0               	andlw	-16
 34462  014324  0903               	iorlw	3
 34463  014326  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 34464                           
 34465                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 34466  014328  0E00               	movlw	0
 34467  01432A  0102               	movlb	2	; () banked
 34468  01432C  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 34469                           
 34470                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 34471  01432E  0E00               	movlw	0
 34472  014330  0102               	movlb	2	; () banked
 34473  014332  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 34474                           
 34475                           ; BSR set to: 2
 34476                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 34477  014334  0E01               	movlw	1
 34478  014336  0100               	movlb	0	; () banked
 34479  014338  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34480  01433A  0E02               	movlw	2
 34481  01433C  ECC7  F0AB         	call	_USBStallEndpoint
 34482  014340  D066               	goto	l17986
 34483  014342                     l17954:
 34484                           
 34485                           ;usb_device_msd.c: 1110: }
 34486                           ;usb_device_msd.c: 1111: }
 34487                           ;usb_device_msd.c: 1113: LBA.Val++;
 34488  014342  0E01               	movlw	1
 34489  014344  0101               	movlb	1	; () banked
 34490  014346  27D9               	addwf	_LBA& (0+255),f,b
 34491  014348  0E00               	movlw	0
 34492  01434A  23DA               	addwfc	(_LBA+1)& (0+255),f,b
 34493  01434C  23DB               	addwfc	(_LBA+2)& (0+255),f,b
 34494  01434E  23DC               	addwfc	(_LBA+3)& (0+255),f,b
 34495                           
 34496                           ; BSR set to: 1
 34497                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 34498  014350  0E00               	movlw	0
 34499  014352  010D               	movlb	13	; () banked
 34500  014354  6F88               	movwf	136,b	;volatile
 34501  014356  0E02               	movlw	2
 34502  014358  6F89               	movwf	137,b	;volatile
 34503  01435A  0E00               	movlw	0
 34504  01435C  6F8A               	movwf	138,b	;volatile
 34505  01435E  0E00               	movlw	0
 34506  014360  6F8B               	movwf	139,b	;volatile
 34507                           
 34508                           ; BSR set to: 13
 34509                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 34510  014362  0E00               	movlw	0
 34511  014364  0101               	movlb	1	; () banked
 34512  014366  6FEB               	movwf	_ptrNextData& (0+255),b
 34513  014368  0E06               	movlw	6
 34514  01436A  0101               	movlb	1	; () banked
 34515  01436C  6FEC               	movwf	(_ptrNextData+1)& (0+255),b
 34516                           
 34517                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 34518  01436E  0E03               	movlw	3
 34519  014370  0101               	movlb	1	; () banked
 34520  014372  6FF9               	movwf	_MSDReadState& (0+255),b
 34521  014374                     l17960:
 34522                           
 34523                           ; BSR set to: 1
 34524                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 34525  014374  010D               	movlb	13	; () banked
 34526  014376  5188               	movf	136,w,b	;volatile
 34527  014378  010D               	movlb	13	; () banked
 34528  01437A  1189               	iorwf	137,w,b	;volatile
 34529  01437C  010D               	movlb	13	; () banked
 34530  01437E  118A               	iorwf	138,w,b	;volatile
 34531  014380  010D               	movlb	13	; () banked
 34532  014382  118B               	iorwf	139,w,b	;volatile
 34533  014384  A4D8               	btfss	status,2,c
 34534  014386  D002               	goto	l17964
 34535                           
 34536                           ; BSR set to: 13
 34537                           ;usb_device_msd.c: 1124: {
 34538                           ;usb_device_msd.c: 1125: MSDReadState = 0x01;
 34539  014388  0E01               	movlw	1
 34540  01438A  D042               	goto	L29
 34541  01438C                     l17964:
 34542                           
 34543                           ;usb_device_msd.c: 1127: }
 34544                           ;usb_device_msd.c: 1129: MSDReadState = 0x04;
 34545  01438C  0E04               	movlw	4
 34546  01438E  0101               	movlb	1	; () banked
 34547  014390  6FF9               	movwf	_MSDReadState& (0+255),b
 34548  014392                     l17966:
 34549                           
 34550                           ; BSR set to: 1
 34551                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 34552  014392  0100               	movlb	0	; () banked
 34553  014394  51DB               	movf	_USBMSDInHandle& (0+255),w,b
 34554  014396  0100               	movlb	0	; () banked
 34555  014398  11DC               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 34556  01439A  B4D8               	btfsc	status,2,c
 34557  01439C  D007               	goto	l17972
 34558                           
 34559                           ; BSR set to: 0
 34560  01439E  C0DB  FFD9         	movff	_USBMSDInHandle,fsr2l
 34561  0143A2  C0DC  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 34562  0143A6  0100               	movlb	0	; () banked
 34563  0143A8  BEDF               	btfsc	indf2,7,c
 34564  0143AA  D047               	goto	l17992
 34565  0143AC                     l17972:
 34566                           
 34567                           ; BSR set to: 0
 34568                           ;usb_device_msd.c: 1139: }
 34569                           ;usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket(2u,1,ptrNextData,64u);
 34570  0143AC  0E01               	movlw	1
 34571  0143AE  0100               	movlb	0	; () banked
 34572  0143B0  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 34573  0143B2  C1EB  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 34574  0143B6  C1EC  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 34575  0143BA  0E40               	movlw	64
 34576  0143BC  0100               	movlb	0	; () banked
 34577  0143BE  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 34578  0143C0  0E02               	movlw	2
 34579  0143C2  EC69  F0AC         	call	_USBTransferOnePacket
 34580  0143C6  C060  F0DB         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 34581  0143CA  C061  F0DC         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 34582                           
 34583                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 34584  0143CE  0E03               	movlw	3
 34585  0143D0  0101               	movlb	1	; () banked
 34586  0143D2  6FF9               	movwf	_MSDReadState& (0+255),b
 34587                           
 34588                           ; BSR set to: 1
 34589                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 34590  0143D4  0E40               	movlw	64
 34591  0143D6  0102               	movlb	2	; () banked
 34592  0143D8  5F49               	subwf	(_gblCBW+8)& (0+255),f,b
 34593  0143DA  0E00               	movlw	0
 34594  0143DC  5B4A               	subwfb	(_gblCBW+9)& (0+255),f,b
 34595  0143DE  5B4B               	subwfb	(_gblCBW+10)& (0+255),f,b
 34596  0143E0  5B4C               	subwfb	(_gblCBW+11)& (0+255),f,b
 34597                           
 34598                           ; BSR set to: 2
 34599                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 34600  0143E2  0E40               	movlw	64
 34601  0143E4  010D               	movlb	13	; () banked
 34602  0143E6  5F88               	subwf	136,f,b	;volatile
 34603  0143E8  0E00               	movlw	0
 34604  0143EA  5B89               	subwfb	137,f,b	;volatile
 34605  0143EC  5B8A               	subwfb	138,f,b	;volatile
 34606  0143EE  5B8B               	subwfb	139,f,b	;volatile
 34607                           
 34608                           ; BSR set to: 13
 34609                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 34610  0143F0  0E40               	movlw	64
 34611  0143F2  0101               	movlb	1	; () banked
 34612  0143F4  27EB               	addwf	_ptrNextData& (0+255),f,b
 34613  0143F6  0E00               	movlw	0
 34614  0143F8  23EC               	addwfc	(_ptrNextData+1)& (0+255),f,b
 34615                           
 34616                           ;usb_device_msd.c: 1149: break;
 34617  0143FA  D01F               	goto	l17992
 34618  0143FC                     l17982:
 34619                           
 34620                           ; BSR set to: 1
 34621                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 34622  0143FC  0E02               	movlw	2
 34623  0143FE  010D               	movlb	13	; () banked
 34624  014400  6F8C               	movwf	140,b	;volatile
 34625                           
 34626                           ; BSR set to: 13
 34627                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 34628  014402  0E01               	movlw	1
 34629  014404  0100               	movlb	0	; () banked
 34630  014406  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34631  014408  0E02               	movlw	2
 34632  01440A  ECC7  F0AB         	call	_USBStallEndpoint
 34633  01440E                     l17986:
 34634                           
 34635                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 34636  01440E  0E00               	movlw	0
 34637  014410                     L29:
 34638  014410  0101               	movlb	1	; () banked
 34639  014412  6FF9               	movwf	_MSDReadState& (0+255),b
 34640                           
 34641                           ; BSR set to: 1
 34642                           ;usb_device_msd.c: 1159: }
 34643                           
 34644                           ;usb_device_msd.c: 1158: break;
 34645  014414  D012               	goto	l17992
 34646  014416                     l17990:
 34647  014416  0101               	movlb	1	; () banked
 34648  014418  51F9               	movf	_MSDReadState& (0+255),w,b
 34649                           
 34650                           ; Switch size 1, requested type "space"
 34651                           ; Number of cases is 5, Range of values is 0 to 4
 34652                           ; switch strategies available:
 34653                           ; Name         Instructions Cycles
 34654                           ; simple_byte           16     9 (average)
 34655                           ;	Chosen strategy is simple_byte
 34656  01441A  0A00               	xorlw	0	; case 0
 34657  01441C  B4D8               	btfsc	status,2,c
 34658  01441E  D707               	goto	l686
 34659  014420  0A01               	xorlw	1	; case 1
 34660  014422  B4D8               	btfsc	status,2,c
 34661  014424  D735               	goto	l17926
 34662  014426  0A03               	xorlw	3	; case 2
 34663  014428  B4D8               	btfsc	status,2,c
 34664  01442A  D73F               	goto	l17934
 34665  01442C  0A01               	xorlw	1	; case 3
 34666  01442E  B4D8               	btfsc	status,2,c
 34667  014430  D7A1               	goto	l17960
 34668  014432  0A07               	xorlw	7	; case 4
 34669  014434  B4D8               	btfsc	status,2,c
 34670  014436  D7AD               	goto	l17966
 34671  014438  D7E1               	goto	l17982
 34672  01443A                     l17992:
 34673                           
 34674                           ;usb_device_msd.c: 1161: return MSDReadState;
 34675  01443A  0101               	movlb	1	; () banked
 34676  01443C  51F9               	movf	_MSDReadState& (0+255),w,b
 34677  01443E  0012               	return	
 34678  014440                     __end_of_MSDReadHandler:
 34679                           	opt stack 0
 34680                           tosu	equ	0xFFF
 34681                           tosh	equ	0xFFE
 34682                           tosl	equ	0xFFD
 34683                           pclath	equ	0xFFA
 34684                           tblptru	equ	0xFF8
 34685                           tblptrh	equ	0xFF7
 34686                           tblptrl	equ	0xFF6
 34687                           tablat	equ	0xFF5
 34688                           prodh	equ	0xFF4
 34689                           prodl	equ	0xFF3
 34690                           intcon	equ	0xFF2
 34691                           intcon2	equ	0xFF1
 34692                           intcon3	equ	0xFF0
 34693                           postinc0	equ	0xFEE
 34694                           wreg	equ	0xFE8
 34695                           indf1	equ	0xFE7
 34696                           postinc1	equ	0xFE6
 34697                           postdec1	equ	0xFE5
 34698                           plusw1	equ	0xFE3
 34699                           fsr1h	equ	0xFE2
 34700                           fsr1l	equ	0xFE1
 34701                           indf2	equ	0xFDF
 34702                           postinc2	equ	0xFDE
 34703                           postdec2	equ	0xFDD
 34704                           plusw2	equ	0xFDB
 34705                           fsr2h	equ	0xFDA
 34706                           fsr2l	equ	0xFD9
 34707                           status	equ	0xFD8
 34708                           
 34709 ;; *************** function _MSDCheckForErrorCases *****************
 34710 ;; Defined at:
 34711 ;;		line 1434 in file "usb_device_msd.c"
 34712 ;; Parameters:    Size  Location     Type
 34713 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 34714 ;; Auto vars:     Size  Location     Type
 34715 ;;  MSDErrorCase    1   16[BANK0 ] unsigned char 
 34716 ;;  DeviceNoData    1   15[BANK0 ] unsigned char 
 34717 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 34718 ;; Return value:  Size  Location     Type
 34719 ;;                  1    wreg      unsigned char 
 34720 ;; Registers used:
 34721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34722 ;; Tracked objects:
 34723 ;;		On entry : 0/0
 34724 ;;		On exit  : 0/0
 34725 ;;		Unchanged: 0/0
 34726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34727 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34728 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34730 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34731 ;;Total ram usage:        7 bytes
 34732 ;; Hardware stack levels used:    1
 34733 ;; Hardware stack levels required when called:   12
 34734 ;; This function calls:
 34735 ;;		_MSDErrorHandler
 34736 ;; This function is called by:
 34737 ;;		_MSDProcessCommandMediaPresent
 34738 ;;		_MSDReadHandler
 34739 ;;		_MSDWriteHandler
 34740 ;; This function uses a non-reentrant model
 34741 ;;
 34742                           
 34743                           	psect	text148
 34744  015C6A                     __ptext148:
 34745                           	opt stack 0
 34746  015C6A                     _MSDCheckForErrorCases:
 34747                           	opt stack 13
 34748                           
 34749                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;
 34750                           ;usb_device_msd.c: 1437: bool HostMoreDataThanDevice;
 34751                           ;usb_device_msd.c: 1438: bool DeviceNoData;
 34752                           ;usb_device_msd.c: 1441: if(DeviceBytes == 0)
 34753                           
 34754                           ; BSR set to: 1
 34755                           ;incstack = 0
 34756  015C6A  0100               	movlb	0	; () banked
 34757  015C6C  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 34758  015C6E  0100               	movlb	0	; () banked
 34759  015C70  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 34760  015C72  0100               	movlb	0	; () banked
 34761  015C74  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 34762  015C76  0100               	movlb	0	; () banked
 34763  015C78  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 34764  015C7A  A4D8               	btfss	status,2,c
 34765  015C7C  D002               	goto	l17764
 34766                           
 34767                           ; BSR set to: 0
 34768                           ;usb_device_msd.c: 1442: {
 34769                           ;usb_device_msd.c: 1443: DeviceNoData = 1;
 34770  015C7E  0E01               	movlw	1
 34771  015C80  D001               	goto	L30
 34772  015C82                     l17764:
 34773                           
 34774                           ; BSR set to: 0
 34775                           ;usb_device_msd.c: 1445: else
 34776                           ;usb_device_msd.c: 1446: {
 34777                           ;usb_device_msd.c: 1447: DeviceNoData = 0;
 34778  015C82  0E00               	movlw	0
 34779  015C84                     L30:
 34780  015C84  0100               	movlb	0	; () banked
 34781  015C86  6F6F               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 34782                           
 34783                           ; BSR set to: 0
 34784                           ;usb_device_msd.c: 1448: }
 34785                           ;usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoData == 1))
 34786                           
 34787                           ; BSR set to: 0
 34788  015C88  0100               	movlb	0	; () banked
 34789  015C8A  05E5               	decf	_MSDHostNoData& (0+255),w,b
 34790  015C8C  A4D8               	btfss	status,2,c
 34791  015C8E  D006               	goto	l17774
 34792                           
 34793                           ; BSR set to: 0
 34794  015C90  0100               	movlb	0	; () banked
 34795  015C92  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 34796  015C94  A4D8               	btfss	status,2,c
 34797  015C96  D002               	goto	l17774
 34798                           
 34799                           ; BSR set to: 0
 34800                           ;usb_device_msd.c: 1454: {
 34801                           ;usb_device_msd.c: 1455: return 0x00;
 34802  015C98  0E00               	movlw	0
 34803                           
 34804                           ; BSR set to: 0
 34805  015C9A  0012               	return	
 34806  015C9C                     l17774:
 34807                           
 34808                           ; BSR set to: 0
 34809                           ;usb_device_msd.c: 1456: }
 34810                           ;usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == DeviceBytes)
 34811  015C9C  0100               	movlb	0	; () banked
 34812  015C9E  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 34813  015CA0  0102               	movlb	2	; () banked
 34814  015CA2  1949               	xorwf	(_gblCBW+8)& (0+255),w,b
 34815  015CA4  E122               	bnz	l17790
 34816  015CA6  0100               	movlb	0	; () banked
 34817  015CA8  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 34818  015CAA  0102               	movlb	2	; () banked
 34819  015CAC  194A               	xorwf	(_gblCBW+9)& (0+255),w,b
 34820  015CAE  E11D               	bnz	l17790
 34821  015CB0  0100               	movlb	0	; () banked
 34822  015CB2  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 34823  015CB4  0102               	movlb	2	; () banked
 34824  015CB6  194B               	xorwf	(_gblCBW+10)& (0+255),w,b
 34825  015CB8  E118               	bnz	l17790
 34826  015CBA  0100               	movlb	0	; () banked
 34827  015CBC  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 34828  015CBE  0102               	movlb	2	; () banked
 34829  015CC0  194C               	xorwf	(_gblCBW+11)& (0+255),w,b
 34830  015CC2  A4D8               	btfss	status,2,c
 34831  015CC4  D012               	goto	l17790
 34832                           
 34833                           ; BSR set to: 2
 34834                           ;usb_device_msd.c: 1460: {
 34835                           ;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 34836  015CC6  0100               	movlb	0	; () banked
 34837  015CC8  05E7               	decf	_MSD_State& (0+255),w,b
 34838  015CCA  A4D8               	btfss	status,2,c
 34839  015CCC  D007               	goto	l17784
 34840                           
 34841                           ; BSR set to: 0
 34842                           ;usb_device_msd.c: 1463: {
 34843                           ;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 34844  015CCE  0E2A               	movlw	42
 34845  015CD0  0100               	movlb	0	; () banked
 34846  015CD2  19E6               	xorwf	_MSDCommandState& (0+255),w,b
 34847  015CD4  B4D8               	btfsc	status,2,c
 34848  015CD6  D009               	goto	l17790
 34849                           
 34850                           ; BSR set to: 0
 34851                           ;usb_device_msd.c: 1466: {
 34852                           ;usb_device_msd.c: 1467: return 0x00;
 34853  015CD8  0E00               	movlw	0
 34854                           
 34855                           ; BSR set to: 0
 34856  015CDA  0012               	return	
 34857  015CDC                     l17784:
 34858                           
 34859                           ; BSR set to: 0
 34860                           ;usb_device_msd.c: 1470: else
 34861                           ;usb_device_msd.c: 1471: {
 34862                           ;usb_device_msd.c: 1474: if(MSDCommandState == 0x2a)
 34863  015CDC  0E2A               	movlw	42
 34864  015CDE  0100               	movlb	0	; () banked
 34865  015CE0  19E6               	xorwf	_MSDCommandState& (0+255),w,b
 34866  015CE2  A4D8               	btfss	status,2,c
 34867  015CE4  D002               	goto	l17790
 34868                           
 34869                           ; BSR set to: 0
 34870                           ;usb_device_msd.c: 1475: {
 34871                           ;usb_device_msd.c: 1476: return 0x00;
 34872  015CE6  0E00               	movlw	0
 34873                           
 34874                           ; BSR set to: 0
 34875  015CE8  0012               	return	
 34876  015CEA                     l17790:
 34877                           
 34878                           ;usb_device_msd.c: 1477: }
 34879                           ;usb_device_msd.c: 1478: }
 34880                           ;usb_device_msd.c: 1479: }
 34881                           ;usb_device_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 34882  015CEA  0102               	movlb	2	; () banked
 34883  015CEC  5149               	movf	(_gblCBW+8)& (0+255),w,b
 34884  015CEE  0100               	movlb	0	; () banked
 34885  015CF0  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 34886  015CF2  0102               	movlb	2	; () banked
 34887  015CF4  514A               	movf	(_gblCBW+9)& (0+255),w,b
 34888  015CF6  0100               	movlb	0	; () banked
 34889  015CF8  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 34890  015CFA  0102               	movlb	2	; () banked
 34891  015CFC  514B               	movf	(_gblCBW+10)& (0+255),w,b
 34892  015CFE  0100               	movlb	0	; () banked
 34893  015D00  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 34894  015D02  0102               	movlb	2	; () banked
 34895  015D04  514C               	movf	(_gblCBW+11)& (0+255),w,b
 34896  015D06  0100               	movlb	0	; () banked
 34897  015D08  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 34898  015D0A  B0D8               	btfsc	status,0,c
 34899  015D0C  D002               	goto	l17794
 34900                           
 34901                           ; BSR set to: 0
 34902                           ;usb_device_msd.c: 1486: {
 34903                           ;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 34904  015D0E  0E01               	movlw	1
 34905  015D10  D001               	goto	L31
 34906  015D12                     l17794:
 34907                           
 34908                           ; BSR set to: 0
 34909                           ;usb_device_msd.c: 1489: else
 34910                           ;usb_device_msd.c: 1490: {
 34911                           ;usb_device_msd.c: 1491: HostMoreDataThanDevice = 0;
 34912  015D12  0E00               	movlw	0
 34913  015D14                     L31:
 34914  015D14  0100               	movlb	0	; () banked
 34915  015D16  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 34916                           
 34917                           ; BSR set to: 0
 34918                           ;usb_device_msd.c: 1492: }
 34919                           ;usb_device_msd.c: 1495: if(MSD_State == 0x02)
 34920                           
 34921                           ; BSR set to: 0
 34922  015D18  0E02               	movlw	2
 34923  015D1A  0100               	movlb	0	; () banked
 34924  015D1C  19E7               	xorwf	_MSD_State& (0+255),w,b
 34925  015D1E  A4D8               	btfss	status,2,c
 34926  015D20  D01E               	goto	l17818
 34927                           
 34928                           ; BSR set to: 0
 34929                           ;usb_device_msd.c: 1496: {
 34930                           ;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (DeviceNoData == 0))
 34931  015D22  0E2A               	movlw	42
 34932  015D24  0100               	movlb	0	; () banked
 34933  015D26  19E6               	xorwf	_MSDCommandState& (0+255),w,b
 34934  015D28  B4D8               	btfsc	status,2,c
 34935  015D2A  D007               	goto	l17804
 34936                           
 34937                           ; BSR set to: 0
 34938  015D2C  0100               	movlb	0	; () banked
 34939  015D2E  516F               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 34940  015D30  0100               	movlb	0	; () banked
 34941  015D32  A4D8               	btfss	status,2,c
 34942  015D34  D002               	goto	l17804
 34943  015D36                     l17802:
 34944                           
 34945                           ; BSR set to: 0
 34946                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 34947  015D36  0E05               	movlw	5
 34948  015D38  D009               	goto	L33
 34949  015D3A                     l17804:
 34950                           
 34951                           ; BSR set to: 0
 34952                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 34953  015D3A  0100               	movlb	0	; () banked
 34954  015D3C  05E5               	decf	_MSDHostNoData& (0+255),w,b
 34955  015D3E  B4D8               	btfsc	status,2,c
 34956  015D40  D017               	goto	l17824
 34957                           
 34958                           ; BSR set to: 0
 34959                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 34960                           
 34961                           ; BSR set to: 0
 34962                           
 34963                           ; BSR set to: 0
 34964                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 34965  015D42  0100               	movlb	0	; () banked
 34966  015D44  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 34967  015D46  A4D8               	btfss	status,2,c
 34968  015D48  D004               	goto	l17812
 34969  015D4A  D007               	goto	l17814
 34970  015D4C                     L33:
 34971  015D4C  0100               	movlb	0	; () banked
 34972  015D4E  6F70               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 34973  015D50  D01D               	goto	l17836
 34974  015D52                     l17812:
 34975                           
 34976                           ; BSR set to: 0
 34977                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 34978  015D52  0100               	movlb	0	; () banked
 34979  015D54  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 34980  015D56  A4D8               	btfss	status,2,c
 34981  015D58  D7EE               	goto	l17802
 34982  015D5A                     l17814:
 34983                           
 34984                           ; BSR set to: 0
 34985                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 34986  015D5A  0E04               	movlw	4
 34987  015D5C  D7F7               	goto	L33
 34988  015D5E                     l17818:
 34989                           
 34990                           ; BSR set to: 0
 34991                           ;usb_device_msd.c: 1513: else
 34992                           ;usb_device_msd.c: 1514: {
 34993                           ;usb_device_msd.c: 1516: if(MSDCommandState == 0x2a)
 34994  015D5E  0E2A               	movlw	42
 34995  015D60  0100               	movlb	0	; () banked
 34996  015D62  19E6               	xorwf	_MSDCommandState& (0+255),w,b
 34997  015D64  B4D8               	btfsc	status,2,c
 34998  015D66  D010               	goto	l17834
 34999                           
 35000                           ; BSR set to: 0
 35001                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 35002                           
 35003                           ; BSR set to: 0
 35004                           
 35005                           ; BSR set to: 0
 35006                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 35007  015D68  0100               	movlb	0	; () banked
 35008  015D6A  05E5               	decf	_MSDHostNoData& (0+255),w,b
 35009  015D6C  A4D8               	btfss	status,2,c
 35010  015D6E  D002               	goto	l17826
 35011  015D70                     l17824:
 35012                           
 35013                           ; BSR set to: 0
 35014                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 35015  015D70  0E01               	movlw	1
 35016  015D72  D7EC               	goto	L33
 35017  015D74                     l17826:
 35018                           
 35019                           ; BSR set to: 0
 35020                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 35021  015D74  0100               	movlb	0	; () banked
 35022  015D76  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35023  015D78  B4D8               	btfsc	status,2,c
 35024  015D7A  D004               	goto	l17832
 35025                           
 35026                           ; BSR set to: 0
 35027                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 35028                           
 35029                           ; BSR set to: 0
 35030                           
 35031                           ; BSR set to: 0
 35032                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 35033  015D7C  0100               	movlb	0	; () banked
 35034  015D7E  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 35035  015D80  A4D8               	btfss	status,2,c
 35036  015D82  D002               	goto	l17834
 35037  015D84                     l17832:
 35038                           
 35039                           ; BSR set to: 0
 35040                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 35041  015D84  0E02               	movlw	2
 35042  015D86  D7E2               	goto	L33
 35043  015D88                     l17834:
 35044                           
 35045                           ; BSR set to: 0
 35046                           ;usb_device_msd.c: 1528: else
 35047                           ;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 35048  015D88  0E03               	movlw	3
 35049  015D8A  D7E0               	goto	L33
 35050  015D8C                     l17836:
 35051                           
 35052                           ; BSR set to: 0
 35053                           ;usb_device_msd.c: 1530: }
 35054                           ;usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 35055  015D8C  0100               	movlb	0	; () banked
 35056  015D8E  5170               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 35057  015D90  EC03  F0AD         	call	_MSDErrorHandler
 35058                           
 35059                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 35060  015D94  0100               	movlb	0	; () banked
 35061  015D96  5170               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 35062  015D98  0012               	return	
 35063  015D9A                     __end_of_MSDCheckForErrorCases:
 35064                           	opt stack 0
 35065                           tosu	equ	0xFFF
 35066                           tosh	equ	0xFFE
 35067                           tosl	equ	0xFFD
 35068                           pclath	equ	0xFFA
 35069                           tblptru	equ	0xFF8
 35070                           tblptrh	equ	0xFF7
 35071                           tblptrl	equ	0xFF6
 35072                           tablat	equ	0xFF5
 35073                           prodh	equ	0xFF4
 35074                           prodl	equ	0xFF3
 35075                           intcon	equ	0xFF2
 35076                           intcon2	equ	0xFF1
 35077                           intcon3	equ	0xFF0
 35078                           postinc0	equ	0xFEE
 35079                           wreg	equ	0xFE8
 35080                           indf1	equ	0xFE7
 35081                           postinc1	equ	0xFE6
 35082                           postdec1	equ	0xFE5
 35083                           plusw1	equ	0xFE3
 35084                           fsr1h	equ	0xFE2
 35085                           fsr1l	equ	0xFE1
 35086                           indf2	equ	0xFDF
 35087                           postinc2	equ	0xFDE
 35088                           postdec2	equ	0xFDD
 35089                           plusw2	equ	0xFDB
 35090                           fsr2h	equ	0xFDA
 35091                           fsr2l	equ	0xFD9
 35092                           status	equ	0xFD8
 35093                           
 35094 ;; *************** function _MSDErrorHandler *****************
 35095 ;; Defined at:
 35096 ;;		line 1577 in file "usb_device_msd.c"
 35097 ;; Parameters:    Size  Location     Type
 35098 ;;  ErrorCase       1    wreg     unsigned char 
 35099 ;; Auto vars:     Size  Location     Type
 35100 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 35101 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 35102 ;; Return value:  Size  Location     Type
 35103 ;;                  1    wreg      void 
 35104 ;; Registers used:
 35105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35106 ;; Tracked objects:
 35107 ;;		On entry : 0/0
 35108 ;;		On exit  : 0/0
 35109 ;;		Unchanged: 0/0
 35110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35112 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35114 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35115 ;;Total ram usage:        2 bytes
 35116 ;; Hardware stack levels used:    1
 35117 ;; Hardware stack levels required when called:   11
 35118 ;; This function calls:
 35119 ;;		_ResetSenseData
 35120 ;;		_USBStallEndpoint
 35121 ;; This function is called by:
 35122 ;;		_MSDProcessCommandMediaAbsent
 35123 ;;		_MSDProcessCommandMediaPresent
 35124 ;;		_MSDCheckForErrorCases
 35125 ;; This function uses a non-reentrant model
 35126 ;;
 35127                           
 35128                           	psect	text149
 35129  015A06                     __ptext149:
 35130                           	opt stack 0
 35131  015A06                     _MSDErrorHandler:
 35132                           	opt stack 13
 35133                           
 35134                           ; BSR set to: 0
 35135                           ;incstack = 0
 35136                           ;MSDErrorHandler@ErrorCase stored from wreg
 35137  015A06  0100               	movlb	0	; () banked
 35138  015A08  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 35139                           
 35140                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;
 35141                           ;usb_device_msd.c: 1583: if((((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          InHandle & 0x80) != 0x00))) || (((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)US
      +                          BMSDOutHandle & 0x80) != 0x00))))
 35142  015A0A  0100               	movlb	0	; () banked
 35143  015A0C  51DB               	movf	_USBMSDInHandle& (0+255),w,b
 35144  015A0E  0100               	movlb	0	; () banked
 35145  015A10  11DC               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35146  015A12  B4D8               	btfsc	status,2,c
 35147  015A14  D007               	goto	l17680
 35148                           
 35149                           ; BSR set to: 0
 35150  015A16  C0DB  FFD9         	movff	_USBMSDInHandle,fsr2l
 35151  015A1A  C0DC  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35152  015A1E  0100               	movlb	0	; () banked
 35153  015A20  BEDF               	btfsc	indf2,7,c
 35154  015A22  0012               	return	
 35155  015A24                     l17680:
 35156                           
 35157                           ; BSR set to: 0
 35158  015A24  0100               	movlb	0	; () banked
 35159  015A26  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 35160  015A28  0100               	movlb	0	; () banked
 35161  015A2A  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 35162  015A2C  B4D8               	btfsc	status,2,c
 35163  015A2E  D007               	goto	l761
 35164                           
 35165                           ; BSR set to: 0
 35166  015A30  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 35167  015A34  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 35168  015A38  0100               	movlb	0	; () banked
 35169  015A3A  BEDF               	btfsc	indf2,7,c
 35170  015A3C  0012               	return	
 35171  015A3E                     l761:
 35172                           
 35173                           ; BSR set to: 0
 35174                           ;usb_device_msd.c: 1586: }
 35175                           ;usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 35176  015A3E  C0E7  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 35177                           
 35178                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 35179  015A42  0100               	movlb	0	; () banked
 35180  015A44  69E6               	setf	_MSDCommandState& (0+255),b
 35181                           
 35182                           ; BSR set to: 0
 35183                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 35184  015A46  0E00               	movlw	0
 35185  015A48  0101               	movlb	1	; () banked
 35186  015A4A  6FF9               	movwf	_MSDReadState& (0+255),b
 35187                           
 35188                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 35189  015A4C  0E00               	movlw	0
 35190  015A4E  6E1F               	movwf	_MSDWriteState,c
 35191                           
 35192                           ; BSR set to: 1
 35193                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 35194  015A50  C249  FD88         	movff	_gblCBW+8,3464	;volatile
 35195  015A54  C24A  FD89         	movff	_gblCBW+9,3465	;volatile
 35196  015A58  C24B  FD8A         	movff	_gblCBW+10,3466	;volatile
 35197  015A5C  C24C  FD8B         	movff	_gblCBW+11,3467	;volatile
 35198                           
 35199                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 35200  015A60  0E01               	movlw	1
 35201  015A62  010D               	movlb	13	; () banked
 35202  015A64  6F8C               	movwf	140,b	;volatile
 35203                           
 35204                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 35205  015A66  0E03               	movlw	3
 35206  015A68  0100               	movlb	0	; () banked
 35207  015A6A  6FE7               	movwf	_MSD_State& (0+255),b
 35208                           
 35209                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 35210  015A6C  D050               	goto	l17720
 35211  015A6E                     l17688:
 35212                           
 35213                           ; BSR set to: 0
 35214                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 35215  015A6E  0E02               	movlw	2
 35216  015A70  010D               	movlb	13	; () banked
 35217  015A72  6F8C               	movwf	140,b	;volatile
 35218                           
 35219                           ;usb_device_msd.c: 1607: break;
 35220  015A74  0012               	return	
 35221  015A76                     l17690:
 35222                           
 35223                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 35224  015A76  0E01               	movlw	1
 35225  015A78  0100               	movlb	0	; () banked
 35226  015A7A  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35227  015A7C  0E02               	movlw	2
 35228  015A7E  ECC7  F0AB         	call	_USBStallEndpoint
 35229                           
 35230                           ;usb_device_msd.c: 1611: break;
 35231  015A82  0012               	return	
 35232  015A84                     l17692:
 35233                           
 35234                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 35235  015A84  0E02               	movlw	2
 35236  015A86  010D               	movlb	13	; () banked
 35237  015A88  6F8C               	movwf	140,b	;volatile
 35238                           
 35239                           ; BSR set to: 13
 35240                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 35241  015A8A  0E01               	movlw	1
 35242  015A8C  0100               	movlb	0	; () banked
 35243  015A8E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35244  015A90  0E02               	movlw	2
 35245  015A92  ECC7  F0AB         	call	_USBStallEndpoint
 35246                           
 35247                           ;usb_device_msd.c: 1616: break;
 35248  015A96  0012               	return	
 35249  015A98                     l17696:
 35250                           
 35251                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 35252  015A98  0E00               	movlw	0
 35253  015A9A  0100               	movlb	0	; () banked
 35254  015A9C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35255  015A9E  0E02               	movlw	2
 35256  015AA0  ECC7  F0AB         	call	_USBStallEndpoint
 35257                           
 35258                           ;usb_device_msd.c: 1620: break;
 35259  015AA4  0012               	return	
 35260  015AA6                     l17698:
 35261                           
 35262                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 35263  015AA6  0E02               	movlw	2
 35264  015AA8  010D               	movlb	13	; () banked
 35265  015AAA  6F8C               	movwf	140,b	;volatile
 35266                           
 35267                           ; BSR set to: 13
 35268                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 35269  015AAC  0E00               	movlw	0
 35270  015AAE  0100               	movlb	0	; () banked
 35271  015AB0  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35272  015AB2  0E02               	movlw	2
 35273  015AB4  ECC7  F0AB         	call	_USBStallEndpoint
 35274                           
 35275                           ;usb_device_msd.c: 1625: break;
 35276  015AB8  0012               	return	
 35277  015ABA                     l17702:
 35278                           
 35279                           ;usb_device_msd.c: 1628: ResetSenseData();
 35280  015ABA  EC3F  F0C4         	call	_ResetSenseData	;wreg free
 35281                           
 35282                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 35283  015ABE  0102               	movlb	2	; () banked
 35284  015AC0  5162               	movf	(_gblSenseData+2)& (0+255),w,b
 35285  015AC2  0BF0               	andlw	-16
 35286  015AC4  0905               	iorlw	5
 35287  015AC6  6F62               	movwf	(_gblSenseData+2)& (0+255),b
 35288                           
 35289                           ; BSR set to: 2
 35290                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 35291  015AC8  0E20               	movlw	32
 35292  015ACA  0102               	movlb	2	; () banked
 35293  015ACC  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 35294                           
 35295                           ; BSR set to: 2
 35296                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 35297  015ACE  0E00               	movlw	0
 35298  015AD0  0102               	movlb	2	; () banked
 35299  015AD2  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 35300                           
 35301                           ; BSR set to: 2
 35302                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 35303  015AD4  0E02               	movlw	2
 35304  015AD6  0100               	movlb	0	; () banked
 35305  015AD8  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 35306  015ADA  A4D8               	btfss	status,2,c
 35307  015ADC  D011               	goto	l17716
 35308                           
 35309                           ; BSR set to: 0
 35310  015ADE  0102               	movlb	2	; () banked
 35311  015AE0  5149               	movf	(_gblCBW+8)& (0+255),w,b
 35312  015AE2  0102               	movlb	2	; () banked
 35313  015AE4  114A               	iorwf	(_gblCBW+9)& (0+255),w,b
 35314  015AE6  0102               	movlb	2	; () banked
 35315  015AE8  114B               	iorwf	(_gblCBW+10)& (0+255),w,b
 35316  015AEA  0102               	movlb	2	; () banked
 35317  015AEC  114C               	iorwf	(_gblCBW+11)& (0+255),w,b
 35318  015AEE  B4D8               	btfsc	status,2,c
 35319  015AF0  D007               	goto	l17716
 35320                           
 35321                           ; BSR set to: 2
 35322                           ;usb_device_msd.c: 1634: {
 35323                           ;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 35324  015AF2  0E00               	movlw	0
 35325  015AF4  0100               	movlb	0	; () banked
 35326  015AF6  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35327  015AF8  0E02               	movlw	2
 35328  015AFA  ECC7  F0AB         	call	_USBStallEndpoint
 35329                           
 35330                           ;usb_device_msd.c: 1636: }
 35331  015AFE  0012               	return	
 35332  015B00                     l17716:
 35333                           
 35334                           ;usb_device_msd.c: 1637: else
 35335                           ;usb_device_msd.c: 1638: {
 35336                           ;usb_device_msd.c: 1639: USBStallEndpoint(2u, 1);
 35337  015B00  0E01               	movlw	1
 35338  015B02  0100               	movlb	0	; () banked
 35339  015B04  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35340  015B06  0E02               	movlw	2
 35341  015B08  ECC7  F0AB         	call	_USBStallEndpoint
 35342                           
 35343                           ;usb_device_msd.c: 1644: }
 35344                           
 35345                           ;usb_device_msd.c: 1643: break;
 35346                           
 35347                           ;usb_device_msd.c: 1642: default:
 35348                           
 35349                           ;usb_device_msd.c: 1640: }
 35350                           ;usb_device_msd.c: 1641: break;
 35351  015B0C  0012               	return	
 35352  015B0E                     l17720:
 35353  015B0E  0100               	movlb	0	; () banked
 35354  015B10  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 35355                           
 35356                           ; Switch size 1, requested type "space"
 35357                           ; Number of cases is 6, Range of values is 1 to 127
 35358                           ; switch strategies available:
 35359                           ; Name         Instructions Cycles
 35360                           ; simple_byte           19    10 (average)
 35361                           ;	Chosen strategy is simple_byte
 35362  015B12  0A01               	xorlw	1	; case 1
 35363  015B14  B4D8               	btfsc	status,2,c
 35364  015B16  D7AB               	goto	l17688
 35365  015B18  0A03               	xorlw	3	; case 2
 35366  015B1A  B4D8               	btfsc	status,2,c
 35367  015B1C  D7AC               	goto	l17690
 35368  015B1E  0A01               	xorlw	1	; case 3
 35369  015B20  B4D8               	btfsc	status,2,c
 35370  015B22  D7B0               	goto	l17692
 35371  015B24  0A07               	xorlw	7	; case 4
 35372  015B26  B4D8               	btfsc	status,2,c
 35373  015B28  D7B7               	goto	l17696
 35374  015B2A  0A01               	xorlw	1	; case 5
 35375  015B2C  B4D8               	btfsc	status,2,c
 35376  015B2E  D7BB               	goto	l17698
 35377  015B30  0A7A               	xorlw	122	; case 127
 35378  015B32  A4D8               	btfss	status,2,c
 35379  015B34  0012               	return	
 35380  015B36  D7C1               	goto	l17702
 35381  015B38                     __end_of_MSDErrorHandler:
 35382                           	opt stack 0
 35383                           tosu	equ	0xFFF
 35384                           tosh	equ	0xFFE
 35385                           tosl	equ	0xFFD
 35386                           pclath	equ	0xFFA
 35387                           tblptru	equ	0xFF8
 35388                           tblptrh	equ	0xFF7
 35389                           tblptrl	equ	0xFF6
 35390                           tablat	equ	0xFF5
 35391                           prodh	equ	0xFF4
 35392                           prodl	equ	0xFF3
 35393                           intcon	equ	0xFF2
 35394                           intcon2	equ	0xFF1
 35395                           intcon3	equ	0xFF0
 35396                           postinc0	equ	0xFEE
 35397                           wreg	equ	0xFE8
 35398                           indf1	equ	0xFE7
 35399                           postinc1	equ	0xFE6
 35400                           postdec1	equ	0xFE5
 35401                           plusw1	equ	0xFE3
 35402                           fsr1h	equ	0xFE2
 35403                           fsr1l	equ	0xFE1
 35404                           indf2	equ	0xFDF
 35405                           postinc2	equ	0xFDE
 35406                           postdec2	equ	0xFDD
 35407                           plusw2	equ	0xFDB
 35408                           fsr2h	equ	0xFDA
 35409                           fsr2l	equ	0xFD9
 35410                           status	equ	0xFD8
 35411                           
 35412 ;; *************** function _USBStallEndpoint *****************
 35413 ;; Defined at:
 35414 ;;		line 1073 in file "usb_device.c"
 35415 ;; Parameters:    Size  Location     Type
 35416 ;;  ep              1    wreg     unsigned char 
 35417 ;;  dir             1    0[BANK0 ] unsigned char 
 35418 ;; Auto vars:     Size  Location     Type
 35419 ;;  ep              1    5[BANK0 ] unsigned char 
 35420 ;;  p               2    6[BANK0 ] PTR struct __BDT
 35421 ;;		 -> BDT(48), 
 35422 ;; Return value:  Size  Location     Type
 35423 ;;                  1    wreg      void 
 35424 ;; Registers used:
 35425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35426 ;; Tracked objects:
 35427 ;;		On entry : 0/0
 35428 ;;		On exit  : 0/0
 35429 ;;		Unchanged: 0/0
 35430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35431 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35432 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35433 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35434 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35435 ;;Total ram usage:        8 bytes
 35436 ;; Hardware stack levels used:    1
 35437 ;; Hardware stack levels required when called:   10
 35438 ;; This function calls:
 35439 ;;		Nothing
 35440 ;; This function is called by:
 35441 ;;		_MSDTasks
 35442 ;;		_MSDReadHandler
 35443 ;;		_MSDWriteHandler
 35444 ;;		_MSDErrorHandler
 35445 ;; This function uses a non-reentrant model
 35446 ;;
 35447                           
 35448                           	psect	text150
 35449  01578E                     __ptext150:
 35450                           	opt stack 0
 35451  01578E                     _USBStallEndpoint:
 35452                           	opt stack 18
 35453                           
 35454                           ;incstack = 0
 35455                           ;USBStallEndpoint@ep stored from wreg
 35456  01578E  0100               	movlb	0	; () banked
 35457  015790  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 35458                           
 35459                           ;usb_device.c: 1075: BDT_ENTRY *p;
 35460                           ;usb_device.c: 1077: if(ep == 0)
 35461  015792  0100               	movlb	0	; () banked
 35462  015794  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 35463  015796  0100               	movlb	0	; () banked
 35464  015798  A4D8               	btfss	status,2,c
 35465  01579A  D02B               	goto	l17524
 35466                           
 35467                           ; BSR set to: 0
 35468                           ;usb_device.c: 1078: {
 35469                           ;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 35470  01579C  EE20 F001          	lfsr	2,1
 35471  0157A0  5018               	movf	_pBDTEntryEP0OutNext,w,c
 35472  0157A2  26D9               	addwf	fsr2l,f,c
 35473  0157A4  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 35474  0157A6  22DA               	addwfc	fsr2h,f,c
 35475  0157A8  0E08               	movlw	8
 35476  0157AA  6EDF               	movwf	indf2,c
 35477                           
 35478                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 35479  0157AC  EE20 F002          	lfsr	2,2
 35480  0157B0  5018               	movf	_pBDTEntryEP0OutNext,w,c
 35481  0157B2  26D9               	addwf	fsr2l,f,c
 35482  0157B4  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 35483  0157B6  22DA               	addwfc	fsr2h,f,c
 35484  0157B8  0E30               	movlw	48
 35485  0157BA  6EDE               	movwf	postinc2,c
 35486  0157BC  0E0D               	movlw	13
 35487  0157BE  6EDD               	movwf	postdec2,c
 35488                           
 35489                           ; BSR set to: 0
 35490                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 35491  0157C0  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 35492  0157C4  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 35493  0157C8  0E0C               	movlw	12
 35494  0157CA  6EDF               	movwf	indf2,c
 35495                           
 35496                           ; BSR set to: 0
 35497                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 35498  0157CC  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 35499  0157D0  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 35500  0157D4  0E00               	movlw	0
 35501  0157D6  8EDB               	bsf	plusw2,7,c
 35502                           
 35503                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 35504  0157D8  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 35505  0157DC  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35506  0157E0  0E04               	movlw	4
 35507  0157E2  6EDF               	movwf	indf2,c
 35508                           
 35509                           ; BSR set to: 0
 35510                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 35511  0157E4  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 35512  0157E8  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 35513  0157EC  0E00               	movlw	0
 35514  0157EE  8EDB               	bsf	plusw2,7,c
 35515                           
 35516                           ;usb_device.c: 1089: }
 35517  0157F0  0012               	return	
 35518  0157F2                     l17524:
 35519                           
 35520                           ; BSR set to: 0
 35521                           ;usb_device.c: 1090: else
 35522                           ;usb_device.c: 1091: {
 35523                           ;usb_device.c: 1092: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+0)]);
 35524  0157F2  0100               	movlb	0	; () banked
 35525  0157F4  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 35526  0157F6  0100               	movlb	0	; () banked
 35527  0157F8  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 35528  0157FA  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 35529  0157FC  90D8               	bcf	status,0,c
 35530  0157FE  0100               	movlb	0	; () banked
 35531  015800  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 35532  015802  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 35533  015804  0100               	movlb	0	; () banked
 35534  015806  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 35535  015808  0100               	movlb	0	; () banked
 35536  01580A  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 35537  01580C  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 35538  01580E  0100               	movlb	0	; () banked
 35539  015810  90D8               	bcf	status,0,c
 35540  015812  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 35541  015814  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 35542  015816  0100               	movlb	0	; () banked
 35543  015818  90D8               	bcf	status,0,c
 35544  01581A  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 35545  01581C  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 35546  01581E  0100               	movlb	0	; () banked
 35547  015820  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 35548  015822  0100               	movlb	0	; () banked
 35549  015824  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 35550  015826  0100               	movlb	0	; () banked
 35551  015828  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 35552  01582A  0100               	movlb	0	; () banked
 35553  01582C  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 35554  01582E  0100               	movlb	0	; () banked
 35555  015830  90D8               	bcf	status,0,c
 35556  015832  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 35557  015834  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 35558  015836  0100               	movlb	0	; () banked
 35559  015838  90D8               	bcf	status,0,c
 35560  01583A  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 35561  01583C  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 35562  01583E  0E00               	movlw	0
 35563  015840  0100               	movlb	0	; () banked
 35564  015842  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 35565  015844  0100               	movlb	0	; () banked
 35566  015846  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 35567  015848  0E0D               	movlw	13
 35568  01584A  0100               	movlb	0	; () banked
 35569  01584C  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 35570  01584E  0100               	movlb	0	; () banked
 35571  015850  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 35572                           
 35573                           ; BSR set to: 0
 35574                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 35575  015852  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 35576  015856  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 35577  01585A  0E00               	movlw	0
 35578  01585C  84DB               	bsf	plusw2,2,c
 35579                           
 35580                           ; BSR set to: 0
 35581                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 35582  01585E  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 35583  015862  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 35584  015866  0E00               	movlw	0
 35585  015868  8EDB               	bsf	plusw2,7,c
 35586                           
 35587                           ; BSR set to: 0
 35588                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 35589  01586A  0100               	movlb	0	; () banked
 35590  01586C  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 35591  01586E  0D04               	mullw	4
 35592  015870  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 35593  015874  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 35594  015878  0100               	movlb	0	; () banked
 35595  01587A  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 35596  01587C  0D02               	mullw	2
 35597  01587E  50F3               	movf	prodl,w,c
 35598  015880  0100               	movlb	0	; () banked
 35599  015882  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 35600  015884  50F4               	movf	prodh,w,c
 35601  015886  0100               	movlb	0	; () banked
 35602  015888  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 35603  01588A  0100               	movlb	0	; () banked
 35604  01588C  90D8               	bcf	status,0,c
 35605  01588E  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 35606  015890  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 35607  015892  0100               	movlb	0	; () banked
 35608  015894  90D8               	bcf	status,0,c
 35609  015896  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 35610  015898  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 35611  01589A  0E04               	movlw	4
 35612  01589C  0100               	movlb	0	; () banked
 35613  01589E  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 35614  0158A0  0E00               	movlw	0
 35615  0158A2  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 35616  0158A4  0E00               	movlw	0
 35617  0158A6  0100               	movlb	0	; () banked
 35618  0158A8  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 35619  0158AA  0100               	movlb	0	; () banked
 35620  0158AC  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 35621  0158AE  0E0D               	movlw	13
 35622  0158B0  0100               	movlb	0	; () banked
 35623  0158B2  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 35624  0158B4  0100               	movlb	0	; () banked
 35625  0158B6  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 35626                           
 35627                           ; BSR set to: 0
 35628                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 35629  0158B8  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 35630  0158BC  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 35631  0158C0  0E00               	movlw	0
 35632  0158C2  84DB               	bsf	plusw2,2,c
 35633                           
 35634                           ; BSR set to: 0
 35635                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 35636  0158C4  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 35637  0158C8  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 35638  0158CC  0E00               	movlw	0
 35639  0158CE  8EDB               	bsf	plusw2,7,c
 35640  0158D0  0012               	return	
 35641  0158D2                     __end_of_USBStallEndpoint:
 35642                           	opt stack 0
 35643                           tosu	equ	0xFFF
 35644                           tosh	equ	0xFFE
 35645                           tosl	equ	0xFFD
 35646                           pclath	equ	0xFFA
 35647                           tblptru	equ	0xFF8
 35648                           tblptrh	equ	0xFF7
 35649                           tblptrl	equ	0xFF6
 35650                           tablat	equ	0xFF5
 35651                           prodh	equ	0xFF4
 35652                           prodl	equ	0xFF3
 35653                           intcon	equ	0xFF2
 35654                           intcon2	equ	0xFF1
 35655                           intcon3	equ	0xFF0
 35656                           postinc0	equ	0xFEE
 35657                           wreg	equ	0xFE8
 35658                           indf1	equ	0xFE7
 35659                           postinc1	equ	0xFE6
 35660                           postdec1	equ	0xFE5
 35661                           plusw1	equ	0xFE3
 35662                           fsr1h	equ	0xFE2
 35663                           fsr1l	equ	0xFE1
 35664                           indf2	equ	0xFDF
 35665                           postinc2	equ	0xFDE
 35666                           postdec2	equ	0xFDD
 35667                           plusw2	equ	0xFDB
 35668                           fsr2h	equ	0xFDA
 35669                           fsr2l	equ	0xFD9
 35670                           status	equ	0xFD8
 35671                           
 35672 ;; *************** function _ResetSenseData *****************
 35673 ;; Defined at:
 35674 ;;		line 1373 in file "usb_device_msd.c"
 35675 ;; Parameters:    Size  Location     Type
 35676 ;;		None
 35677 ;; Auto vars:     Size  Location     Type
 35678 ;;		None
 35679 ;; Return value:  Size  Location     Type
 35680 ;;                  1    wreg      void 
 35681 ;; Registers used:
 35682 ;;		wreg, status,2
 35683 ;; Tracked objects:
 35684 ;;		On entry : 0/0
 35685 ;;		On exit  : 0/0
 35686 ;;		Unchanged: 0/0
 35687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35692 ;;Total ram usage:        0 bytes
 35693 ;; Hardware stack levels used:    1
 35694 ;; Hardware stack levels required when called:   10
 35695 ;; This function calls:
 35696 ;;		Nothing
 35697 ;; This function is called by:
 35698 ;;		_MSDProcessCommandMediaAbsent
 35699 ;;		_MSDProcessCommandMediaPresent
 35700 ;;		_MSDErrorHandler
 35701 ;; This function uses a non-reentrant model
 35702 ;;
 35703                           
 35704                           	psect	text151
 35705  01887E                     __ptext151:
 35706                           	opt stack 0
 35707  01887E                     _ResetSenseData:
 35708                           	opt stack 16
 35709                           
 35710                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 35711                           
 35712                           ; BSR set to: 0
 35713                           ;incstack = 0
 35714  01887E  0102               	movlb	2	; () banked
 35715  018880  9160               	bcf	_gblSenseData& (0+255),0,b
 35716  018882  9360               	bcf	_gblSenseData& (0+255),1,b
 35717  018884  9560               	bcf	_gblSenseData& (0+255),2,b
 35718  018886  9760               	bcf	_gblSenseData& (0+255),3,b
 35719  018888  8960               	bsf	_gblSenseData& (0+255),4,b
 35720  01888A  8B60               	bsf	_gblSenseData& (0+255),5,b
 35721  01888C  8D60               	bsf	_gblSenseData& (0+255),6,b
 35722                           
 35723                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 35724  01888E  0102               	movlb	2	; () banked
 35725  018890  9F60               	bcf	_gblSenseData& (0+255),7,b
 35726                           
 35727                           ; BSR set to: 2
 35728                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 35729  018892  0E00               	movlw	0
 35730  018894  0102               	movlb	2	; () banked
 35731  018896  6F61               	movwf	(_gblSenseData+1)& (0+255),b
 35732                           
 35733                           ; BSR set to: 2
 35734                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 35735  018898  0102               	movlb	2	; () banked
 35736  01889A  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 35737  01889C  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 35738  01889E  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 35739  0188A0  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 35740                           
 35741                           ; BSR set to: 2
 35742                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 35743  0188A2  0102               	movlb	2	; () banked
 35744  0188A4  9B62               	bcf	(_gblSenseData+2)& (0+255),5,b
 35745                           
 35746                           ; BSR set to: 2
 35747                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 35748  0188A6  0102               	movlb	2	; () banked
 35749  0188A8  9D62               	bcf	(_gblSenseData+2)& (0+255),6,b
 35750                           
 35751                           ; BSR set to: 2
 35752                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 35753  0188AA  0102               	movlb	2	; () banked
 35754  0188AC  9F62               	bcf	(_gblSenseData+2)& (0+255),7,b
 35755                           
 35756                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 35757  0188AE  0E00               	movlw	0
 35758  0188B0  0102               	movlb	2	; () banked
 35759  0188B2  6F63               	movwf	(_gblSenseData+3)& (0+255),b
 35760                           
 35761                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 35762  0188B4  0E00               	movlw	0
 35763  0188B6  0102               	movlb	2	; () banked
 35764  0188B8  6F64               	movwf	(_gblSenseData+4)& (0+255),b
 35765                           
 35766                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 35767  0188BA  0E00               	movlw	0
 35768  0188BC  0102               	movlb	2	; () banked
 35769  0188BE  6F65               	movwf	(_gblSenseData+5)& (0+255),b
 35770                           
 35771                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 35772  0188C0  0E00               	movlw	0
 35773  0188C2  0102               	movlb	2	; () banked
 35774  0188C4  6F66               	movwf	(_gblSenseData+6)& (0+255),b
 35775                           
 35776                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 35777  0188C6  0E0A               	movlw	10
 35778  0188C8  0102               	movlb	2	; () banked
 35779  0188CA  6F67               	movwf	(_gblSenseData+7)& (0+255),b
 35780                           
 35781                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 35782  0188CC  0E00               	movlw	0
 35783  0188CE  0102               	movlb	2	; () banked
 35784  0188D0  6F68               	movwf	(_gblSenseData+8)& (0+255),b
 35785  0188D2  0E00               	movlw	0
 35786  0188D4  6F69               	movwf	(_gblSenseData+9)& (0+255),b
 35787  0188D6  0E00               	movlw	0
 35788  0188D8  6F6A               	movwf	(_gblSenseData+10)& (0+255),b
 35789  0188DA  0E00               	movlw	0
 35790  0188DC  6F6B               	movwf	(_gblSenseData+11)& (0+255),b
 35791                           
 35792                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 35793  0188DE  0E00               	movlw	0
 35794  0188E0  0102               	movlb	2	; () banked
 35795  0188E2  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 35796                           
 35797                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 35798  0188E4  0E00               	movlw	0
 35799  0188E6  0102               	movlb	2	; () banked
 35800  0188E8  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 35801                           
 35802                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 35803  0188EA  0E00               	movlw	0
 35804  0188EC  0102               	movlb	2	; () banked
 35805  0188EE  6F6E               	movwf	(_gblSenseData+14)& (0+255),b
 35806                           
 35807                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 35808  0188F0  0E00               	movlw	0
 35809  0188F2  0102               	movlb	2	; () banked
 35810  0188F4  6F6F               	movwf	(_gblSenseData+15)& (0+255),b
 35811                           
 35812                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 35813  0188F6  0E00               	movlw	0
 35814  0188F8  0102               	movlb	2	; () banked
 35815  0188FA  6F70               	movwf	(_gblSenseData+16)& (0+255),b
 35816                           
 35817                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 35818  0188FC  0E00               	movlw	0
 35819  0188FE  0102               	movlb	2	; () banked
 35820  018900  6F71               	movwf	(_gblSenseData+17)& (0+255),b
 35821                           
 35822                           ; BSR set to: 2
 35823  018902  0012               	return		;funcret
 35824  018904                     __end_of_ResetSenseData:
 35825                           	opt stack 0
 35826                           tosu	equ	0xFFF
 35827                           tosh	equ	0xFFE
 35828                           tosl	equ	0xFFD
 35829                           pclath	equ	0xFFA
 35830                           tblptru	equ	0xFF8
 35831                           tblptrh	equ	0xFF7
 35832                           tblptrl	equ	0xFF6
 35833                           tablat	equ	0xFF5
 35834                           prodh	equ	0xFF4
 35835                           prodl	equ	0xFF3
 35836                           intcon	equ	0xFF2
 35837                           intcon2	equ	0xFF1
 35838                           intcon3	equ	0xFF0
 35839                           postinc0	equ	0xFEE
 35840                           wreg	equ	0xFE8
 35841                           indf1	equ	0xFE7
 35842                           postinc1	equ	0xFE6
 35843                           postdec1	equ	0xFE5
 35844                           plusw1	equ	0xFE3
 35845                           fsr1h	equ	0xFE2
 35846                           fsr1l	equ	0xFE1
 35847                           indf2	equ	0xFDF
 35848                           postinc2	equ	0xFDE
 35849                           postdec2	equ	0xFDD
 35850                           plusw2	equ	0xFDB
 35851                           fsr2h	equ	0xFDA
 35852                           fsr2l	equ	0xFD9
 35853                           status	equ	0xFD8
 35854                           
 35855 ;; *************** function _ExternalFlash_SectorRead *****************
 35856 ;; Defined at:
 35857 ;;		line 64 in file "external_flash.c"
 35858 ;; Parameters:    Size  Location     Type
 35859 ;;  config          2   43[BANK0 ] PTR void 
 35860 ;;		 -> NULL(0), 
 35861 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 35862 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 35863 ;;		 -> msd_buffer(512), 
 35864 ;; Auto vars:     Size  Location     Type
 35865 ;;  page            2   51[BANK0 ] unsigned int 
 35866 ;; Return value:  Size  Location     Type
 35867 ;;                  1    wreg      unsigned char 
 35868 ;; Registers used:
 35869 ;;		wreg, status,2, status,0, cstack
 35870 ;; Tracked objects:
 35871 ;;		On entry : 0/0
 35872 ;;		On exit  : 0/0
 35873 ;;		Unchanged: 0/0
 35874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35875 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35876 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35878 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35879 ;;Total ram usage:       10 bytes
 35880 ;; Hardware stack levels used:    1
 35881 ;; Hardware stack levels required when called:   15
 35882 ;; This function calls:
 35883 ;;		_flash_page_read
 35884 ;; This function is called by:
 35885 ;;		_MSDReadHandler
 35886 ;; This function uses a non-reentrant model
 35887 ;;
 35888                           
 35889                           	psect	text152
 35890  01A164                     __ptext152:
 35891                           	opt stack 0
 35892  01A164                     _ExternalFlash_SectorRead:
 35893                           	opt stack 10
 35894                           
 35895                           ;external_flash.c: 66: uint16_t page = (uint16_t) sector_addr;
 35896                           
 35897                           ; BSR set to: 2
 35898                           ;incstack = 0
 35899  01A164  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 35900  01A168  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 35901                           
 35902                           ;external_flash.c: 70: if(sector_addr >= 4096)
 35903  01A16C  0100               	movlb	0	; () banked
 35904  01A16E  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 35905  01A170  0100               	movlb	0	; () banked
 35906  01A172  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 35907  01A174  E105               	bnz	u16560
 35908  01A176  0E10               	movlw	16
 35909  01A178  0100               	movlb	0	; () banked
 35910  01A17A  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 35911  01A17C  A0D8               	btfss	status,0,c
 35912  01A17E  D002               	goto	l17858
 35913  01A180                     u16560:
 35914                           
 35915                           ; BSR set to: 0
 35916                           ;external_flash.c: 71: {
 35917                           ;external_flash.c: 72: return 0;
 35918  01A180  0E00               	movlw	0
 35919                           
 35920                           ; BSR set to: 0
 35921  01A182  0012               	return	
 35922  01A184                     l17858:
 35923                           
 35924                           ; BSR set to: 0
 35925                           ;external_flash.c: 73: }
 35926                           ;external_flash.c: 76: flash_page_read(page, buffer);
 35927  01A184  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_page_read@page
 35928  01A188  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_page_read@page+1
 35929  01A18C  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_page_read@data
 35930  01A190  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_page_read@data+1
 35931  01A194  EC6C  F0D3         	call	_flash_page_read	;wreg free
 35932                           
 35933                           ;external_flash.c: 78: return 1;
 35934  01A198  0E01               	movlw	1
 35935  01A19A  0012               	return	
 35936  01A19C                     __end_of_ExternalFlash_SectorRead:
 35937                           	opt stack 0
 35938                           tosu	equ	0xFFF
 35939                           tosh	equ	0xFFE
 35940                           tosl	equ	0xFFD
 35941                           pclath	equ	0xFFA
 35942                           tblptru	equ	0xFF8
 35943                           tblptrh	equ	0xFF7
 35944                           tblptrl	equ	0xFF6
 35945                           tablat	equ	0xFF5
 35946                           prodh	equ	0xFF4
 35947                           prodl	equ	0xFF3
 35948                           intcon	equ	0xFF2
 35949                           intcon2	equ	0xFF1
 35950                           intcon3	equ	0xFF0
 35951                           postinc0	equ	0xFEE
 35952                           wreg	equ	0xFE8
 35953                           indf1	equ	0xFE7
 35954                           postinc1	equ	0xFE6
 35955                           postdec1	equ	0xFE5
 35956                           plusw1	equ	0xFE3
 35957                           fsr1h	equ	0xFE2
 35958                           fsr1l	equ	0xFE1
 35959                           indf2	equ	0xFDF
 35960                           postinc2	equ	0xFDE
 35961                           postdec2	equ	0xFDD
 35962                           plusw2	equ	0xFDB
 35963                           fsr2h	equ	0xFDA
 35964                           fsr2l	equ	0xFD9
 35965                           status	equ	0xFD8
 35966                           
 35967 ;; *************** function _flash_page_read *****************
 35968 ;; Defined at:
 35969 ;;		line 538 in file "flash.c"
 35970 ;; Parameters:    Size  Location     Type
 35971 ;;  page            2   39[BANK0 ] unsigned int 
 35972 ;;  data            2   41[BANK0 ] PTR unsigned char 
 35973 ;;		 -> msd_buffer(512), 
 35974 ;; Auto vars:     Size  Location     Type
 35975 ;;		None
 35976 ;; Return value:  Size  Location     Type
 35977 ;;                  1    wreg      void 
 35978 ;; Registers used:
 35979 ;;		wreg, status,2, status,0, cstack
 35980 ;; Tracked objects:
 35981 ;;		On entry : 0/0
 35982 ;;		On exit  : 0/0
 35983 ;;		Unchanged: 0/0
 35984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35985 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35988 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35989 ;;Total ram usage:        4 bytes
 35990 ;; Hardware stack levels used:    1
 35991 ;; Hardware stack levels required when called:   14
 35992 ;; This function calls:
 35993 ;;		_flash_partial_read
 35994 ;; This function is called by:
 35995 ;;		_ExternalFlash_SectorRead
 35996 ;; This function uses a non-reentrant model
 35997 ;;
 35998                           
 35999                           	psect	text153
 36000  01A6D8                     __ptext153:
 36001                           	opt stack 0
 36002  01A6D8                     _flash_page_read:
 36003                           	opt stack 10
 36004                           
 36005                           ;flash.c: 541: flash_partial_read(page, 0, 512, data);
 36006                           
 36007                           ;incstack = 0
 36008  01A6D8  C087  F073         	movff	flash_page_read@page,flash_partial_read@page
 36009  01A6DC  C088  F074         	movff	flash_page_read@page+1,flash_partial_read@page+1
 36010  01A6E0  0E00               	movlw	0
 36011  01A6E2  0100               	movlb	0	; () banked
 36012  01A6E4  6F76               	movwf	(flash_partial_read@start+1)& (0+255),b
 36013  01A6E6  0E00               	movlw	0
 36014  01A6E8  6F75               	movwf	flash_partial_read@start& (0+255),b
 36015  01A6EA  0E02               	movlw	2
 36016  01A6EC  0100               	movlb	0	; () banked
 36017  01A6EE  6F78               	movwf	(flash_partial_read@length+1)& (0+255),b
 36018  01A6F0  0E00               	movlw	0
 36019  01A6F2  6F77               	movwf	flash_partial_read@length& (0+255),b
 36020  01A6F4  C089  F079         	movff	flash_page_read@data,flash_partial_read@data
 36021  01A6F8  C08A  F07A         	movff	flash_page_read@data+1,flash_partial_read@data+1
 36022  01A6FC  EC0D  F0BF         	call	_flash_partial_read	;wreg free
 36023  01A700  0012               	return		;funcret
 36024  01A702                     __end_of_flash_page_read:
 36025                           	opt stack 0
 36026                           tosu	equ	0xFFF
 36027                           tosh	equ	0xFFE
 36028                           tosl	equ	0xFFD
 36029                           pclath	equ	0xFFA
 36030                           tblptru	equ	0xFF8
 36031                           tblptrh	equ	0xFF7
 36032                           tblptrl	equ	0xFF6
 36033                           tablat	equ	0xFF5
 36034                           prodh	equ	0xFF4
 36035                           prodl	equ	0xFF3
 36036                           intcon	equ	0xFF2
 36037                           intcon2	equ	0xFF1
 36038                           intcon3	equ	0xFF0
 36039                           postinc0	equ	0xFEE
 36040                           wreg	equ	0xFE8
 36041                           indf1	equ	0xFE7
 36042                           postinc1	equ	0xFE6
 36043                           postdec1	equ	0xFE5
 36044                           plusw1	equ	0xFE3
 36045                           fsr1h	equ	0xFE2
 36046                           fsr1l	equ	0xFE1
 36047                           indf2	equ	0xFDF
 36048                           postinc2	equ	0xFDE
 36049                           postdec2	equ	0xFDD
 36050                           plusw2	equ	0xFDB
 36051                           fsr2h	equ	0xFDA
 36052                           fsr2l	equ	0xFD9
 36053                           status	equ	0xFD8
 36054                           
 36055 ;; *************** function _flash_partial_read *****************
 36056 ;; Defined at:
 36057 ;;		line 564 in file "flash.c"
 36058 ;; Parameters:    Size  Location     Type
 36059 ;;  page            2   19[BANK0 ] unsigned int 
 36060 ;;  start           2   21[BANK0 ] unsigned int 
 36061 ;;  length          2   23[BANK0 ] unsigned int 
 36062 ;;  data            2   25[BANK0 ] PTR unsigned char 
 36063 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(
      +4), 
 36064 ;;		 -> fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), 
 36065 ;;		 -> fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(1), msd_buffer(512),
      + 
 36066 ;; Auto vars:     Size  Location     Type
 36067 ;;  command         4   31[BANK0 ] unsigned char [4]
 36068 ;;  address         4   35[BANK0 ] unsigned long 
 36069 ;; Return value:  Size  Location     Type
 36070 ;;                  1    wreg      void 
 36071 ;; Registers used:
 36072 ;;		wreg, status,2, status,0, cstack
 36073 ;; Tracked objects:
 36074 ;;		On entry : 0/0
 36075 ;;		On exit  : 0/0
 36076 ;;		Unchanged: 0/0
 36077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36078 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36079 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36080 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36081 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36082 ;;Total ram usage:       20 bytes
 36083 ;; Hardware stack levels used:    1
 36084 ;; Hardware stack levels required when called:   13
 36085 ;; This function calls:
 36086 ;;		__flash_spi_tx_rx
 36087 ;;		_flash_is_busy
 36088 ;; This function is called by:
 36089 ;;		_flash_page_read
 36090 ;;		__root_is_available
 36091 ;;		__get_empty_cluster
 36092 ;;		_fat_get_empty_clusters
 36093 ;;		__read_fat
 36094 ;;		__read_root
 36095 ;;		_fat_find_file
 36096 ;;		__get_first_cluster
 36097 ;;		__get_file_size
 36098 ;;		_fat_get_file_size
 36099 ;;		_fat_read_from_file
 36100 ;; This function uses a non-reentrant model
 36101 ;;
 36102                           
 36103                           	psect	text154
 36104  017E1A                     __ptext154:
 36105                           	opt stack 0
 36106  017E1A                     _flash_partial_read:
 36107                           	opt stack 15
 36108  017E1A                     l17618:
 36109  017E1A  ECF7  F0D3         	call	_flash_is_busy	;wreg free
 36110  017E1E  0900               	iorlw	0
 36111  017E20  A4D8               	btfss	status,2,c
 36112  017E22  D7FB               	goto	l17618
 36113                           
 36114                           ;flash.c: 573: address = page;
 36115  017E24  C073  F083         	movff	flash_partial_read@page,flash_partial_read@address
 36116  017E28  C074  F084         	movff	flash_partial_read@page+1,flash_partial_read@address+1
 36117  017E2C  0100               	movlb	0	; () banked
 36118  017E2E  6B85               	clrf	(flash_partial_read@address+2)& (0+255),b
 36119  017E30  6B86               	clrf	(flash_partial_read@address+3)& (0+255),b
 36120                           
 36121                           ; BSR set to: 0
 36122                           ;flash.c: 574: address <<= 9;
 36123  017E32  0100               	movlb	0	; () banked
 36124  017E34  0E09               	movlw	9
 36125  017E36                     u16215:
 36126  017E36  90D8               	bcf	status,0,c
 36127  017E38  3783               	rlcf	flash_partial_read@address& (0+255),f,b
 36128  017E3A  3784               	rlcf	(flash_partial_read@address+1)& (0+255),f,b
 36129  017E3C  3785               	rlcf	(flash_partial_read@address+2)& (0+255),f,b
 36130  017E3E  3786               	rlcf	(flash_partial_read@address+3)& (0+255),f,b
 36131  017E40  2EE8               	decfsz	wreg,f,c
 36132  017E42  D7F9               	goto	u16215
 36133                           
 36134                           ; BSR set to: 0
 36135                           ;flash.c: 575: address |= start;
 36136  017E44  0100               	movlb	0	; () banked
 36137  017E46  5175               	movf	flash_partial_read@start& (0+255),w,b
 36138  017E48  0100               	movlb	0	; () banked
 36139  017E4A  6F7B               	movwf	??_flash_partial_read& (0+255),b
 36140  017E4C  0100               	movlb	0	; () banked
 36141  017E4E  5176               	movf	(flash_partial_read@start+1)& (0+255),w,b
 36142  017E50  0100               	movlb	0	; () banked
 36143  017E52  6F7C               	movwf	(??_flash_partial_read+1)& (0+255),b
 36144  017E54  0100               	movlb	0	; () banked
 36145  017E56  6B7D               	clrf	(??_flash_partial_read+2)& (0+255),b
 36146  017E58  0100               	movlb	0	; () banked
 36147  017E5A  6B7E               	clrf	(??_flash_partial_read+3)& (0+255),b
 36148  017E5C  0100               	movlb	0	; () banked
 36149  017E5E  517B               	movf	??_flash_partial_read& (0+255),w,b
 36150  017E60  0100               	movlb	0	; () banked
 36151  017E62  1383               	iorwf	flash_partial_read@address& (0+255),f,b
 36152  017E64  0100               	movlb	0	; () banked
 36153  017E66  517C               	movf	(??_flash_partial_read+1)& (0+255),w,b
 36154  017E68  0100               	movlb	0	; () banked
 36155  017E6A  1384               	iorwf	(flash_partial_read@address+1)& (0+255),f,b
 36156  017E6C  0100               	movlb	0	; () banked
 36157  017E6E  517D               	movf	(??_flash_partial_read+2)& (0+255),w,b
 36158  017E70  0100               	movlb	0	; () banked
 36159  017E72  1385               	iorwf	(flash_partial_read@address+2)& (0+255),f,b
 36160  017E74  0100               	movlb	0	; () banked
 36161  017E76  517E               	movf	(??_flash_partial_read+3)& (0+255),w,b
 36162  017E78  0100               	movlb	0	; () banked
 36163  017E7A  1386               	iorwf	(flash_partial_read@address+3)& (0+255),f,b
 36164                           
 36165                           ; BSR set to: 0
 36166                           ;flash.c: 578: command[0] = 0x03;
 36167  017E7C  0E03               	movlw	3
 36168  017E7E  0100               	movlb	0	; () banked
 36169  017E80  6F7F               	movwf	flash_partial_read@command& (0+255),b
 36170                           
 36171                           ; BSR set to: 0
 36172                           ;flash.c: 579: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 36173  017E82  C085  F080         	movff	flash_partial_read@address+2,flash_partial_read@command+1
 36174                           
 36175                           ; BSR set to: 0
 36176                           ;flash.c: 580: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 36177  017E86  0100               	movlb	0	; () banked
 36178  017E88  5184               	movf	(flash_partial_read@address+1)& (0+255),w,b
 36179  017E8A  0100               	movlb	0	; () banked
 36180  017E8C  6F81               	movwf	(flash_partial_read@command+2)& (0+255),b
 36181                           
 36182                           ; BSR set to: 0
 36183                           ;flash.c: 581: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 36184  017E8E  C083  F082         	movff	flash_partial_read@address,flash_partial_read@command+3
 36185                           
 36186                           ; BSR set to: 0
 36187                           ;flash.c: 584: _flash_spi_tx_rx(command, 4, data, length);
 36188  017E92  0E7F               	movlw	low flash_partial_read@command
 36189  017E94  0100               	movlb	0	; () banked
 36190  017E96  6F60               	movwf	__flash_spi_tx_rx@command& (0+255),b
 36191  017E98  0E00               	movlw	high flash_partial_read@command
 36192  017E9A  0100               	movlb	0	; () banked
 36193  017E9C  6F61               	movwf	(__flash_spi_tx_rx@command+1)& (0+255),b
 36194  017E9E  0E00               	movlw	0
 36195  017EA0  0100               	movlb	0	; () banked
 36196  017EA2  6F63               	movwf	(__flash_spi_tx_rx@command_length+1)& (0+255),b
 36197  017EA4  0E04               	movlw	4
 36198  017EA6  6F62               	movwf	__flash_spi_tx_rx@command_length& (0+255),b
 36199  017EA8  C079  F064         	movff	flash_partial_read@data,__flash_spi_tx_rx@data
 36200  017EAC  C07A  F065         	movff	flash_partial_read@data+1,__flash_spi_tx_rx@data+1
 36201  017EB0  C077  F066         	movff	flash_partial_read@length,__flash_spi_tx_rx@data_length
 36202  017EB4  C078  F067         	movff	flash_partial_read@length+1,__flash_spi_tx_rx@data_length+1
 36203  017EB8  EC4E  F0BD         	call	__flash_spi_tx_rx	;wreg free
 36204  017EBC  0012               	return		;funcret
 36205  017EBE                     __end_of_flash_partial_read:
 36206                           	opt stack 0
 36207                           tosu	equ	0xFFF
 36208                           tosh	equ	0xFFE
 36209                           tosl	equ	0xFFD
 36210                           pclath	equ	0xFFA
 36211                           tblptru	equ	0xFF8
 36212                           tblptrh	equ	0xFF7
 36213                           tblptrl	equ	0xFF6
 36214                           tablat	equ	0xFF5
 36215                           prodh	equ	0xFF4
 36216                           prodl	equ	0xFF3
 36217                           intcon	equ	0xFF2
 36218                           intcon2	equ	0xFF1
 36219                           intcon3	equ	0xFF0
 36220                           postinc0	equ	0xFEE
 36221                           wreg	equ	0xFE8
 36222                           indf1	equ	0xFE7
 36223                           postinc1	equ	0xFE6
 36224                           postdec1	equ	0xFE5
 36225                           plusw1	equ	0xFE3
 36226                           fsr1h	equ	0xFE2
 36227                           fsr1l	equ	0xFE1
 36228                           indf2	equ	0xFDF
 36229                           postinc2	equ	0xFDE
 36230                           postdec2	equ	0xFDD
 36231                           plusw2	equ	0xFDB
 36232                           fsr2h	equ	0xFDA
 36233                           fsr2l	equ	0xFD9
 36234                           status	equ	0xFD8
 36235                           
 36236 ;; *************** function _flash_is_busy *****************
 36237 ;; Defined at:
 36238 ;;		line 475 in file "flash.c"
 36239 ;; Parameters:    Size  Location     Type
 36240 ;;		None
 36241 ;; Auto vars:     Size  Location     Type
 36242 ;;  status          2   17[BANK0 ] unsigned int 
 36243 ;; Return value:  Size  Location     Type
 36244 ;;                  1    wreg      unsigned char 
 36245 ;; Registers used:
 36246 ;;		wreg, status,2, status,0, cstack
 36247 ;; Tracked objects:
 36248 ;;		On entry : 0/0
 36249 ;;		On exit  : 0/0
 36250 ;;		Unchanged: 0/0
 36251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36253 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36255 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36256 ;;Total ram usage:        2 bytes
 36257 ;; Hardware stack levels used:    1
 36258 ;; Hardware stack levels required when called:   12
 36259 ;; This function calls:
 36260 ;;		__flash_get_status
 36261 ;;		__flash_wakeup
 36262 ;; This function is called by:
 36263 ;;		__flash_set_page_size
 36264 ;;		__flash_copy_page_to_buffer
 36265 ;;		__flash_compare_page_to_buffer
 36266 ;;		__flash_write_to_buffer
 36267 ;;		__flash_write_page_from_buffer
 36268 ;;		_flash_partial_read
 36269 ;;		_flash_partial_write
 36270 ;;		__flash_erase_page
 36271 ;;		_flash_set_power_state
 36272 ;; This function uses a non-reentrant model
 36273 ;;
 36274                           
 36275                           	psect	text155
 36276  01A7EE                     __ptext155:
 36277                           	opt stack 0
 36278  01A7EE                     _flash_is_busy:
 36279                           	opt stack 15
 36280                           
 36281                           ;flash.c: 478: if(power_state!=FLASH_POWER_STATE_NORMAL)
 36282                           
 36283                           ;incstack = 0
 36284  01A7EE  0100               	movlb	0	; () banked
 36285  01A7F0  51DF               	movf	_power_state& (0+255),w,b
 36286  01A7F2  A4D8               	btfss	status,2,c
 36287                           
 36288                           ; BSR set to: 0
 36289                           ;flash.c: 479: {
 36290                           ;flash.c: 480: _flash_wakeup();
 36291  01A7F4  ECF6  F0CB         	call	__flash_wakeup	;wreg free
 36292                           
 36293                           ;flash.c: 481: }
 36294                           ;flash.c: 484: uint16_t status = _flash_get_status();
 36295  01A7F8  ECA2  F0CF         	call	__flash_get_status	;wreg free
 36296  01A7FC  C06C  F071         	movff	?__flash_get_status,flash_is_busy@status
 36297  01A800  C06D  F072         	movff	?__flash_get_status+1,flash_is_busy@status+1
 36298                           
 36299                           ;flash.c: 485: if(status & 0b0000000010000000)
 36300  01A804  0100               	movlb	0	; () banked
 36301  01A806  AF71               	btfss	flash_is_busy@status& (0+255),7,b
 36302  01A808  D002               	goto	l17510
 36303                           
 36304                           ; BSR set to: 0
 36305                           ;flash.c: 486: {
 36306                           ;flash.c: 488: return 0;
 36307  01A80A  0E00               	movlw	0
 36308                           
 36309                           ; BSR set to: 0
 36310                           ;flash.c: 489: }
 36311                           
 36312                           ; BSR set to: 0
 36313  01A80C  0012               	return	
 36314  01A80E                     l17510:
 36315                           
 36316                           ; BSR set to: 0
 36317                           ;flash.c: 490: else
 36318                           ;flash.c: 491: {
 36319                           ;flash.c: 493: return 1;
 36320  01A80E  0E01               	movlw	1
 36321                           
 36322                           ; BSR set to: 0
 36323  01A810  0012               	return	
 36324  01A812                     __end_of_flash_is_busy:
 36325                           	opt stack 0
 36326                           tosu	equ	0xFFF
 36327                           tosh	equ	0xFFE
 36328                           tosl	equ	0xFFD
 36329                           pclath	equ	0xFFA
 36330                           tblptru	equ	0xFF8
 36331                           tblptrh	equ	0xFF7
 36332                           tblptrl	equ	0xFF6
 36333                           tablat	equ	0xFF5
 36334                           prodh	equ	0xFF4
 36335                           prodl	equ	0xFF3
 36336                           intcon	equ	0xFF2
 36337                           intcon2	equ	0xFF1
 36338                           intcon3	equ	0xFF0
 36339                           postinc0	equ	0xFEE
 36340                           wreg	equ	0xFE8
 36341                           indf1	equ	0xFE7
 36342                           postinc1	equ	0xFE6
 36343                           postdec1	equ	0xFE5
 36344                           plusw1	equ	0xFE3
 36345                           fsr1h	equ	0xFE2
 36346                           fsr1l	equ	0xFE1
 36347                           indf2	equ	0xFDF
 36348                           postinc2	equ	0xFDE
 36349                           postdec2	equ	0xFDD
 36350                           plusw2	equ	0xFDB
 36351                           fsr2h	equ	0xFDA
 36352                           fsr2l	equ	0xFD9
 36353                           status	equ	0xFD8
 36354                           
 36355 ;; *************** function __flash_wakeup *****************
 36356 ;; Defined at:
 36357 ;;		line 289 in file "flash.c"
 36358 ;; Parameters:    Size  Location     Type
 36359 ;;		None
 36360 ;; Auto vars:     Size  Location     Type
 36361 ;;  command         1    8[BANK0 ] unsigned char 
 36362 ;; Return value:  Size  Location     Type
 36363 ;;                  1    wreg      void 
 36364 ;; Registers used:
 36365 ;;		wreg, status,2, status,0, cstack
 36366 ;; Tracked objects:
 36367 ;;		On entry : 0/0
 36368 ;;		On exit  : 0/0
 36369 ;;		Unchanged: 0/0
 36370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36372 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36374 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36375 ;;Total ram usage:        1 bytes
 36376 ;; Hardware stack levels used:    1
 36377 ;; Hardware stack levels required when called:   11
 36378 ;; This function calls:
 36379 ;;		__flash_spi_tx
 36380 ;; This function is called by:
 36381 ;;		_flash_is_busy
 36382 ;;		_flash_set_power_state
 36383 ;; This function uses a non-reentrant model
 36384 ;;
 36385                           
 36386                           	psect	text156
 36387  0197EC                     __ptext156:
 36388                           	opt stack 0
 36389  0197EC                     __flash_wakeup:
 36390                           	opt stack 15
 36391                           
 36392                           ;flash.c: 291: uint8_t command;
 36393                           ;flash.c: 293: switch(power_state)
 36394                           
 36395                           ; BSR set to: 0
 36396                           ;incstack = 0
 36397  0197EC  D025               	goto	l17472
 36398  0197EE                     l17456:
 36399                           
 36400                           ;flash.c: 296: command = 0xAB;
 36401  0197EE  0EAB               	movlw	171
 36402  0197F0  0100               	movlb	0	; () banked
 36403  0197F2  6F68               	movwf	__flash_wakeup@command& (0+255),b
 36404                           
 36405                           ; BSR set to: 0
 36406                           ;flash.c: 297: _flash_spi_tx(&command, 1);
 36407  0197F4  0E68               	movlw	low __flash_wakeup@command
 36408  0197F6  0100               	movlb	0	; () banked
 36409  0197F8  6F60               	movwf	__flash_spi_tx@data& (0+255),b
 36410  0197FA  0E00               	movlw	high __flash_wakeup@command
 36411  0197FC  0100               	movlb	0	; () banked
 36412  0197FE  6F61               	movwf	(__flash_spi_tx@data+1)& (0+255),b
 36413  019800  0E00               	movlw	0
 36414  019802  0100               	movlb	0	; () banked
 36415  019804  6F63               	movwf	(__flash_spi_tx@length+1)& (0+255),b
 36416  019806  0E01               	movlw	1
 36417  019808  6F62               	movwf	__flash_spi_tx@length& (0+255),b
 36418  01980A  EC36  F0C9         	call	__flash_spi_tx	;wreg free
 36419                           
 36420                           ;flash.c: 298: _delay((unsigned long)((35)*(8000000/4000000.0)));
 36421  01980E  0E17               	movlw	23
 36422  019810                     u22917:
 36423  019810  2EE8               	decfsz	wreg,f,c
 36424  019812  D7FE               	bra	u22917
 36425  019814  F000               	nop	
 36426                           
 36427                           ;flash.c: 299: power_state = FLASH_POWER_STATE_NORMAL;
 36428  019816  0E00               	movlw	0
 36429  019818  0100               	movlb	0	; () banked
 36430  01981A  6FDF               	movwf	_power_state& (0+255),b
 36431                           
 36432                           ;flash.c: 300: break;
 36433  01981C  0012               	return	
 36434  01981E                     l2771:
 36435                           
 36436                           ; BSR set to: 0
 36437                           ;flash.c: 305: LATDbits.LD7 = 0;
 36438  01981E  9E8C               	bcf	3980,7,c	;volatile
 36439                           
 36440                           ; BSR set to: 0
 36441                           ;flash.c: 306: _delay((unsigned long)((20)*(8000000/4000000.0)));
 36442  019820  0E0D               	movlw	13
 36443  019822                     u22927:
 36444  019822  2EE8               	decfsz	wreg,f,c
 36445  019824  D7FE               	bra	u22927
 36446  019826  F000               	nop	
 36447                           
 36448                           ;flash.c: 307: LATDbits.LD7 = 1;
 36449  019828  8E8C               	bsf	3980,7,c	;volatile
 36450                           
 36451                           ;flash.c: 308: _delay((unsigned long)((120)*(8000000/4000000.0)));
 36452  01982A  0E50               	movlw	80
 36453  01982C                     u22937:
 36454  01982C  2EE8               	decfsz	wreg,f,c
 36455  01982E  D7FE               	bra	u22937
 36456                           
 36457                           ;flash.c: 309: power_state = FLASH_POWER_STATE_NORMAL;
 36458  019830  0E00               	movlw	0
 36459  019832  0100               	movlb	0	; () banked
 36460  019834  6FDF               	movwf	_power_state& (0+255),b
 36461                           
 36462                           ; BSR set to: 0
 36463                           ;flash.c: 311: }
 36464                           
 36465                           ;flash.c: 310: break;
 36466  019836  0012               	return	
 36467  019838                     l17472:
 36468  019838  0100               	movlb	0	; () banked
 36469  01983A  51DF               	movf	_power_state& (0+255),w,b
 36470                           
 36471                           ; Switch size 1, requested type "space"
 36472                           ; Number of cases is 2, Range of values is 1 to 2
 36473                           ; switch strategies available:
 36474                           ; Name         Instructions Cycles
 36475                           ; simple_byte            7     4 (average)
 36476                           ;	Chosen strategy is simple_byte
 36477  01983C  0A01               	xorlw	1	; case 1
 36478  01983E  B4D8               	btfsc	status,2,c
 36479  019840  D7D6               	goto	l17456
 36480  019842  0A03               	xorlw	3	; case 2
 36481  019844  A4D8               	btfss	status,2,c
 36482  019846  0012               	return	
 36483  019848  D7EA               	goto	l2771
 36484  01984A                     __end_of__flash_wakeup:
 36485                           	opt stack 0
 36486                           tosu	equ	0xFFF
 36487                           tosh	equ	0xFFE
 36488                           tosl	equ	0xFFD
 36489                           pclath	equ	0xFFA
 36490                           tblptru	equ	0xFF8
 36491                           tblptrh	equ	0xFF7
 36492                           tblptrl	equ	0xFF6
 36493                           tablat	equ	0xFF5
 36494                           prodh	equ	0xFF4
 36495                           prodl	equ	0xFF3
 36496                           intcon	equ	0xFF2
 36497                           intcon2	equ	0xFF1
 36498                           intcon3	equ	0xFF0
 36499                           postinc0	equ	0xFEE
 36500                           wreg	equ	0xFE8
 36501                           indf1	equ	0xFE7
 36502                           postinc1	equ	0xFE6
 36503                           postdec1	equ	0xFE5
 36504                           plusw1	equ	0xFE3
 36505                           fsr1h	equ	0xFE2
 36506                           fsr1l	equ	0xFE1
 36507                           indf2	equ	0xFDF
 36508                           postinc2	equ	0xFDE
 36509                           postdec2	equ	0xFDD
 36510                           plusw2	equ	0xFDB
 36511                           fsr2h	equ	0xFDA
 36512                           fsr2l	equ	0xFD9
 36513                           status	equ	0xFD8
 36514                           
 36515 ;; *************** function __flash_spi_tx *****************
 36516 ;; Defined at:
 36517 ;;		line 103 in file "flash.c"
 36518 ;; Parameters:    Size  Location     Type
 36519 ;;  data            2    0[BANK0 ] PTR unsigned char 
 36520 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 36521 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 36522 ;;  length          2    2[BANK0 ] unsigned int 
 36523 ;; Auto vars:     Size  Location     Type
 36524 ;;		None
 36525 ;; Return value:  Size  Location     Type
 36526 ;;                  1    wreg      void 
 36527 ;; Registers used:
 36528 ;;		wreg, status,2, status,0
 36529 ;; Tracked objects:
 36530 ;;		On entry : 0/0
 36531 ;;		On exit  : 0/0
 36532 ;;		Unchanged: 0/0
 36533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36534 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36536 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36537 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36538 ;;Total ram usage:        8 bytes
 36539 ;; Hardware stack levels used:    1
 36540 ;; Hardware stack levels required when called:   10
 36541 ;; This function calls:
 36542 ;;		Nothing
 36543 ;; This function is called by:
 36544 ;;		__flash_set_page_size
 36545 ;;		__flash_wakeup
 36546 ;;		__flash_copy_page_to_buffer
 36547 ;;		__flash_compare_page_to_buffer
 36548 ;;		__flash_write_page_from_buffer
 36549 ;;		__flash_erase_page
 36550 ;;		_flash_set_power_state
 36551 ;; This function uses a non-reentrant model
 36552 ;;
 36553                           
 36554                           	psect	text157
 36555  01926C                     __ptext157:
 36556                           	opt stack 0
 36557  01926C                     __flash_spi_tx:
 36558                           	opt stack 15
 36559                           
 36560                           ;flash.c: 106: DMACON1bits.SSCON1 = 0;
 36561                           
 36562                           ; BSR set to: 0
 36563                           ;incstack = 0
 36564  01926C  9E88               	bcf	3976,7,c	;volatile
 36565                           
 36566                           ;flash.c: 107: DMACON1bits.SSCON0 = 0;
 36567  01926E  9C88               	bcf	3976,6,c	;volatile
 36568                           
 36569                           ;flash.c: 109: DMACON1bits.TXINC = 1;
 36570  019270  8A88               	bsf	3976,5,c	;volatile
 36571                           
 36572                           ;flash.c: 111: DMACON1bits.RXINC = 0;
 36573  019272  9888               	bcf	3976,4,c	;volatile
 36574                           
 36575                           ;flash.c: 113: DMACON1bits.DUPLEX1 = 0;
 36576  019274  9688               	bcf	3976,3,c	;volatile
 36577                           
 36578                           ;flash.c: 114: DMACON1bits.DUPLEX0 = 1;
 36579  019276  8488               	bsf	3976,2,c	;volatile
 36580                           
 36581                           ;flash.c: 116: DMACON1bits.DLYINTEN = 0;
 36582  019278  9288               	bcf	3976,1,c	;volatile
 36583                           
 36584                           ;flash.c: 118: DMACON2bits.DLYCYC = 0b0000;
 36585  01927A  9886               	bcf	3974,4,c	;volatile
 36586  01927C  9A86               	bcf	3974,5,c	;volatile
 36587  01927E  9C86               	bcf	3974,6,c	;volatile
 36588  019280  9E86               	bcf	3974,7,c	;volatile
 36589                           
 36590                           ;flash.c: 120: DMACON2bits.INTLVL = 0b0000;
 36591  019282  9086               	bcf	3974,0,c	;volatile
 36592  019284  9286               	bcf	3974,1,c	;volatile
 36593  019286  9486               	bcf	3974,2,c	;volatile
 36594  019288  9686               	bcf	3974,3,c	;volatile
 36595                           
 36596                           ;flash.c: 123: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 36597  01928A  0100               	movlb	0	; () banked
 36598  01928C  5161               	movf	(__flash_spi_tx@data+1)& (0+255),w,b
 36599  01928E  6E6A               	movwf	3946,c	;volatile
 36600                           
 36601                           ; BSR set to: 0
 36602                           ;flash.c: 124: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 36603  019290  C060  FF6B         	movff	__flash_spi_tx@data,3947	;volatile
 36604                           
 36605                           ; BSR set to: 0
 36606                           ;flash.c: 127: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 36607  019294  0EFF               	movlw	255
 36608  019296  0100               	movlb	0	; () banked
 36609  019298  6F64               	movwf	??__flash_spi_tx& (0+255),b
 36610  01929A  0EFF               	movlw	255
 36611  01929C  0100               	movlb	0	; () banked
 36612  01929E  6F65               	movwf	(??__flash_spi_tx+1)& (0+255),b
 36613  0192A0  C062  F066         	movff	__flash_spi_tx@length,??__flash_spi_tx+2
 36614  0192A4  C063  F067         	movff	__flash_spi_tx@length+1,??__flash_spi_tx+3
 36615  0192A8  0100               	movlb	0	; () banked
 36616  0192AA  5164               	movf	??__flash_spi_tx& (0+255),w,b
 36617  0192AC  0100               	movlb	0	; () banked
 36618  0192AE  2766               	addwf	(??__flash_spi_tx+2)& (0+255),f,b
 36619  0192B0  0100               	movlb	0	; () banked
 36620  0192B2  5165               	movf	(??__flash_spi_tx+1)& (0+255),w,b
 36621  0192B4  0100               	movlb	0	; () banked
 36622  0192B6  2367               	addwfc	(??__flash_spi_tx+3)& (0+255),f,b
 36623  0192B8  C067  F066         	movff	??__flash_spi_tx+3,??__flash_spi_tx+2
 36624  0192BC  0100               	movlb	0	; () banked
 36625  0192BE  6B67               	clrf	(??__flash_spi_tx+3)& (0+255),b
 36626  0192C0  0100               	movlb	0	; () banked
 36627  0192C2  5166               	movf	(??__flash_spi_tx+2)& (0+255),w,b
 36628  0192C4  6E66               	movwf	3942,c	;volatile
 36629                           
 36630                           ; BSR set to: 0
 36631                           ;flash.c: 128: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 36632  0192C6  0100               	movlb	0	; () banked
 36633  0192C8  0562               	decf	__flash_spi_tx@length& (0+255),w,b
 36634  0192CA  6E67               	movwf	3943,c	;volatile
 36635                           
 36636                           ; BSR set to: 0
 36637                           ;flash.c: 131: LATDbits.LD7 = 0;
 36638  0192CC  9E8C               	bcf	3980,7,c	;volatile
 36639                           
 36640                           ; BSR set to: 0
 36641                           ;flash.c: 132: DMACON1bits.DMAEN = 1;
 36642  0192CE  8088               	bsf	3976,0,c	;volatile
 36643  0192D0                     l2733:
 36644  0192D0  B088               	btfsc	3976,0,c	;volatile
 36645  0192D2  D7FE               	goto	l2733
 36646                           
 36647                           ;flash.c: 134: LATDbits.LD7 = 1;
 36648  0192D4  8E8C               	bsf	3980,7,c	;volatile
 36649  0192D6  0012               	return		;funcret
 36650  0192D8                     __end_of__flash_spi_tx:
 36651                           	opt stack 0
 36652                           tosu	equ	0xFFF
 36653                           tosh	equ	0xFFE
 36654                           tosl	equ	0xFFD
 36655                           pclath	equ	0xFFA
 36656                           tblptru	equ	0xFF8
 36657                           tblptrh	equ	0xFF7
 36658                           tblptrl	equ	0xFF6
 36659                           tablat	equ	0xFF5
 36660                           prodh	equ	0xFF4
 36661                           prodl	equ	0xFF3
 36662                           intcon	equ	0xFF2
 36663                           intcon2	equ	0xFF1
 36664                           intcon3	equ	0xFF0
 36665                           postinc0	equ	0xFEE
 36666                           wreg	equ	0xFE8
 36667                           indf1	equ	0xFE7
 36668                           postinc1	equ	0xFE6
 36669                           postdec1	equ	0xFE5
 36670                           plusw1	equ	0xFE3
 36671                           fsr1h	equ	0xFE2
 36672                           fsr1l	equ	0xFE1
 36673                           indf2	equ	0xFDF
 36674                           postinc2	equ	0xFDE
 36675                           postdec2	equ	0xFDD
 36676                           plusw2	equ	0xFDB
 36677                           fsr2h	equ	0xFDA
 36678                           fsr2l	equ	0xFD9
 36679                           status	equ	0xFD8
 36680                           
 36681 ;; *************** function __flash_get_status *****************
 36682 ;; Defined at:
 36683 ;;		line 278 in file "flash.c"
 36684 ;; Parameters:    Size  Location     Type
 36685 ;;		None
 36686 ;; Auto vars:     Size  Location     Type
 36687 ;;  status          2   15[BANK0 ] unsigned int 
 36688 ;;  command         1   14[BANK0 ] unsigned char 
 36689 ;; Return value:  Size  Location     Type
 36690 ;;                  2   12[BANK0 ] unsigned int 
 36691 ;; Registers used:
 36692 ;;		wreg, status,2, status,0, cstack
 36693 ;; Tracked objects:
 36694 ;;		On entry : 0/0
 36695 ;;		On exit  : 0/0
 36696 ;;		Unchanged: 0/0
 36697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36698 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36699 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36701 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36702 ;;Total ram usage:        5 bytes
 36703 ;; Hardware stack levels used:    1
 36704 ;; Hardware stack levels required when called:   11
 36705 ;; This function calls:
 36706 ;;		__flash_spi_tx_rx
 36707 ;; This function is called by:
 36708 ;;		__flash_compare_page_to_buffer
 36709 ;;		_flash_is_busy
 36710 ;; This function uses a non-reentrant model
 36711 ;;
 36712                           
 36713                           	psect	text158
 36714  019F44                     __ptext158:
 36715                           	opt stack 0
 36716  019F44                     __flash_get_status:
 36717                           	opt stack 15
 36718                           
 36719                           ;flash.c: 282: uint8_t command = 0xD7;
 36720                           
 36721                           ;incstack = 0
 36722  019F44  0ED7               	movlw	215
 36723  019F46  0100               	movlb	0	; () banked
 36724  019F48  6F6E               	movwf	__flash_get_status@command& (0+255),b
 36725                           
 36726                           ; BSR set to: 0
 36727                           ;flash.c: 283: uint16_t status;
 36728                           ;flash.c: 284: _flash_spi_tx_rx(&command, 1, (uint8_t*) &status, 2);
 36729  019F4A  0E6E               	movlw	low __flash_get_status@command
 36730  019F4C  0100               	movlb	0	; () banked
 36731  019F4E  6F60               	movwf	__flash_spi_tx_rx@command& (0+255),b
 36732  019F50  0E00               	movlw	high __flash_get_status@command
 36733  019F52  0100               	movlb	0	; () banked
 36734  019F54  6F61               	movwf	(__flash_spi_tx_rx@command+1)& (0+255),b
 36735  019F56  0E00               	movlw	0
 36736  019F58  0100               	movlb	0	; () banked
 36737  019F5A  6F63               	movwf	(__flash_spi_tx_rx@command_length+1)& (0+255),b
 36738  019F5C  0E01               	movlw	1
 36739  019F5E  6F62               	movwf	__flash_spi_tx_rx@command_length& (0+255),b
 36740  019F60  0E6F               	movlw	low __flash_get_status@status
 36741  019F62  0100               	movlb	0	; () banked
 36742  019F64  6F64               	movwf	__flash_spi_tx_rx@data& (0+255),b
 36743  019F66  0E00               	movlw	high __flash_get_status@status
 36744  019F68  0100               	movlb	0	; () banked
 36745  019F6A  6F65               	movwf	(__flash_spi_tx_rx@data+1)& (0+255),b
 36746  019F6C  0E00               	movlw	0
 36747  019F6E  0100               	movlb	0	; () banked
 36748  019F70  6F67               	movwf	(__flash_spi_tx_rx@data_length+1)& (0+255),b
 36749  019F72  0E02               	movlw	2
 36750  019F74  6F66               	movwf	__flash_spi_tx_rx@data_length& (0+255),b
 36751  019F76  EC4E  F0BD         	call	__flash_spi_tx_rx	;wreg free
 36752                           
 36753                           ;flash.c: 285: return status;
 36754  019F7A  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 36755  019F7E  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 36756  019F82  0012               	return	
 36757  019F84                     __end_of__flash_get_status:
 36758                           	opt stack 0
 36759                           tosu	equ	0xFFF
 36760                           tosh	equ	0xFFE
 36761                           tosl	equ	0xFFD
 36762                           pclath	equ	0xFFA
 36763                           tblptru	equ	0xFF8
 36764                           tblptrh	equ	0xFF7
 36765                           tblptrl	equ	0xFF6
 36766                           tablat	equ	0xFF5
 36767                           prodh	equ	0xFF4
 36768                           prodl	equ	0xFF3
 36769                           intcon	equ	0xFF2
 36770                           intcon2	equ	0xFF1
 36771                           intcon3	equ	0xFF0
 36772                           postinc0	equ	0xFEE
 36773                           wreg	equ	0xFE8
 36774                           indf1	equ	0xFE7
 36775                           postinc1	equ	0xFE6
 36776                           postdec1	equ	0xFE5
 36777                           plusw1	equ	0xFE3
 36778                           fsr1h	equ	0xFE2
 36779                           fsr1l	equ	0xFE1
 36780                           indf2	equ	0xFDF
 36781                           postinc2	equ	0xFDE
 36782                           postdec2	equ	0xFDD
 36783                           plusw2	equ	0xFDB
 36784                           fsr2h	equ	0xFDA
 36785                           fsr2l	equ	0xFD9
 36786                           status	equ	0xFD8
 36787                           
 36788 ;; *************** function __flash_spi_tx_rx *****************
 36789 ;; Defined at:
 36790 ;;		line 194 in file "flash.c"
 36791 ;; Parameters:    Size  Location     Type
 36792 ;;  command         2    0[BANK0 ] PTR unsigned char 
 36793 ;;		 -> flash_partial_read@command(4), _flash_get_status@command(1), 
 36794 ;;  command_leng    2    2[BANK0 ] unsigned int 
 36795 ;;  data            2    4[BANK0 ] PTR unsigned char 
 36796 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(
      +4), 
 36797 ;;		 -> fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), 
 36798 ;;		 -> fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(1), _flash_get_statu
      +s@status(2), 
 36799 ;;		 -> msd_buffer(512), 
 36800 ;;  data_length     2    6[BANK0 ] unsigned int 
 36801 ;; Auto vars:     Size  Location     Type
 36802 ;;		None
 36803 ;; Return value:  Size  Location     Type
 36804 ;;                  1    wreg      void 
 36805 ;; Registers used:
 36806 ;;		wreg, status,2, status,0
 36807 ;; Tracked objects:
 36808 ;;		On entry : 0/0
 36809 ;;		On exit  : 0/0
 36810 ;;		Unchanged: 0/0
 36811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36812 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36814 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36815 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36816 ;;Total ram usage:       12 bytes
 36817 ;; Hardware stack levels used:    1
 36818 ;; Hardware stack levels required when called:   10
 36819 ;; This function calls:
 36820 ;;		Nothing
 36821 ;; This function is called by:
 36822 ;;		__flash_get_status
 36823 ;;		_flash_partial_read
 36824 ;; This function uses a non-reentrant model
 36825 ;;
 36826                           
 36827                           	psect	text159
 36828  017A9C                     __ptext159:
 36829                           	opt stack 0
 36830  017A9C                     __flash_spi_tx_rx:
 36831                           	opt stack 15
 36832                           
 36833                           ;flash.c: 197: DMACON1bits.SSCON1 = 0;
 36834                           
 36835                           ;incstack = 0
 36836  017A9C  9E88               	bcf	3976,7,c	;volatile
 36837                           
 36838                           ;flash.c: 198: DMACON1bits.SSCON0 = 0;
 36839  017A9E  9C88               	bcf	3976,6,c	;volatile
 36840                           
 36841                           ;flash.c: 200: DMACON1bits.TXINC = 1;
 36842  017AA0  8A88               	bsf	3976,5,c	;volatile
 36843                           
 36844                           ;flash.c: 202: DMACON1bits.RXINC = 0;
 36845  017AA2  9888               	bcf	3976,4,c	;volatile
 36846                           
 36847                           ;flash.c: 204: DMACON1bits.DUPLEX1 = 0;
 36848  017AA4  9688               	bcf	3976,3,c	;volatile
 36849                           
 36850                           ;flash.c: 205: DMACON1bits.DUPLEX0 = 1;
 36851  017AA6  8488               	bsf	3976,2,c	;volatile
 36852                           
 36853                           ;flash.c: 207: DMACON1bits.DLYINTEN = 0;
 36854  017AA8  9288               	bcf	3976,1,c	;volatile
 36855                           
 36856                           ;flash.c: 209: DMACON2bits.DLYCYC = 0b0000;
 36857  017AAA  9886               	bcf	3974,4,c	;volatile
 36858  017AAC  9A86               	bcf	3974,5,c	;volatile
 36859  017AAE  9C86               	bcf	3974,6,c	;volatile
 36860  017AB0  9E86               	bcf	3974,7,c	;volatile
 36861                           
 36862                           ;flash.c: 211: DMACON2bits.INTLVL = 0b0000;
 36863  017AB2  9086               	bcf	3974,0,c	;volatile
 36864  017AB4  9286               	bcf	3974,1,c	;volatile
 36865  017AB6  9486               	bcf	3974,2,c	;volatile
 36866  017AB8  9686               	bcf	3974,3,c	;volatile
 36867                           
 36868                           ;flash.c: 214: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 36869  017ABA  0100               	movlb	0	; () banked
 36870  017ABC  5161               	movf	(__flash_spi_tx_rx@command+1)& (0+255),w,b
 36871  017ABE  6E6A               	movwf	3946,c	;volatile
 36872                           
 36873                           ; BSR set to: 0
 36874                           ;flash.c: 215: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 36875  017AC0  C060  FF6B         	movff	__flash_spi_tx_rx@command,3947	;volatile
 36876                           
 36877                           ; BSR set to: 0
 36878                           ;flash.c: 218: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 36879  017AC4  0EFF               	movlw	255
 36880  017AC6  0100               	movlb	0	; () banked
 36881  017AC8  6F68               	movwf	??__flash_spi_tx_rx& (0+255),b
 36882  017ACA  0EFF               	movlw	255
 36883  017ACC  0100               	movlb	0	; () banked
 36884  017ACE  6F69               	movwf	(??__flash_spi_tx_rx+1)& (0+255),b
 36885  017AD0  C062  F06A         	movff	__flash_spi_tx_rx@command_length,??__flash_spi_tx_rx+2
 36886  017AD4  C063  F06B         	movff	__flash_spi_tx_rx@command_length+1,??__flash_spi_tx_rx+3
 36887  017AD8  0100               	movlb	0	; () banked
 36888  017ADA  5168               	movf	??__flash_spi_tx_rx& (0+255),w,b
 36889  017ADC  0100               	movlb	0	; () banked
 36890  017ADE  276A               	addwf	(??__flash_spi_tx_rx+2)& (0+255),f,b
 36891  017AE0  0100               	movlb	0	; () banked
 36892  017AE2  5169               	movf	(??__flash_spi_tx_rx+1)& (0+255),w,b
 36893  017AE4  0100               	movlb	0	; () banked
 36894  017AE6  236B               	addwfc	(??__flash_spi_tx_rx+3)& (0+255),f,b
 36895  017AE8  C06B  F06A         	movff	??__flash_spi_tx_rx+3,??__flash_spi_tx_rx+2
 36896  017AEC  0100               	movlb	0	; () banked
 36897  017AEE  6B6B               	clrf	(??__flash_spi_tx_rx+3)& (0+255),b
 36898  017AF0  0100               	movlb	0	; () banked
 36899  017AF2  516A               	movf	(??__flash_spi_tx_rx+2)& (0+255),w,b
 36900  017AF4  6E66               	movwf	3942,c	;volatile
 36901                           
 36902                           ; BSR set to: 0
 36903                           ;flash.c: 219: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 36904  017AF6  0100               	movlb	0	; () banked
 36905  017AF8  0562               	decf	__flash_spi_tx_rx@command_length& (0+255),w,b
 36906  017AFA  6E67               	movwf	3943,c	;volatile
 36907                           
 36908                           ; BSR set to: 0
 36909                           ;flash.c: 222: LATDbits.LD7 = 0;
 36910  017AFC  9E8C               	bcf	3980,7,c	;volatile
 36911                           
 36912                           ; BSR set to: 0
 36913                           ;flash.c: 225: DMACON1bits.DMAEN = 1;
 36914  017AFE  8088               	bsf	3976,0,c	;volatile
 36915  017B00                     l2748:
 36916  017B00  B088               	btfsc	3976,0,c	;volatile
 36917  017B02  D7FE               	goto	l2748
 36918                           
 36919                           ;flash.c: 229: DMACON1bits.TXINC = 0;
 36920  017B04  9A88               	bcf	3976,5,c	;volatile
 36921                           
 36922                           ;flash.c: 231: DMACON1bits.RXINC = 1;
 36923  017B06  8888               	bsf	3976,4,c	;volatile
 36924                           
 36925                           ;flash.c: 233: DMACON1bits.DUPLEX1 = 0;
 36926  017B08  9688               	bcf	3976,3,c	;volatile
 36927                           
 36928                           ;flash.c: 234: DMACON1bits.DUPLEX0 = 0;
 36929  017B0A  9488               	bcf	3976,2,c	;volatile
 36930                           
 36931                           ;flash.c: 237: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 36932  017B0C  0100               	movlb	0	; () banked
 36933  017B0E  5165               	movf	(__flash_spi_tx_rx@data+1)& (0+255),w,b
 36934  017B10  6E68               	movwf	3944,c	;volatile
 36935                           
 36936                           ; BSR set to: 0
 36937                           ;flash.c: 238: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 36938  017B12  C064  FF69         	movff	__flash_spi_tx_rx@data,3945	;volatile
 36939                           
 36940                           ; BSR set to: 0
 36941                           ;flash.c: 241: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 36942  017B16  0EFF               	movlw	255
 36943  017B18  0100               	movlb	0	; () banked
 36944  017B1A  6F68               	movwf	??__flash_spi_tx_rx& (0+255),b
 36945  017B1C  0EFF               	movlw	255
 36946  017B1E  0100               	movlb	0	; () banked
 36947  017B20  6F69               	movwf	(??__flash_spi_tx_rx+1)& (0+255),b
 36948  017B22  C066  F06A         	movff	__flash_spi_tx_rx@data_length,??__flash_spi_tx_rx+2
 36949  017B26  C067  F06B         	movff	__flash_spi_tx_rx@data_length+1,??__flash_spi_tx_rx+3
 36950  017B2A  0100               	movlb	0	; () banked
 36951  017B2C  5168               	movf	??__flash_spi_tx_rx& (0+255),w,b
 36952  017B2E  0100               	movlb	0	; () banked
 36953  017B30  276A               	addwf	(??__flash_spi_tx_rx+2)& (0+255),f,b
 36954  017B32  0100               	movlb	0	; () banked
 36955  017B34  5169               	movf	(??__flash_spi_tx_rx+1)& (0+255),w,b
 36956  017B36  0100               	movlb	0	; () banked
 36957  017B38  236B               	addwfc	(??__flash_spi_tx_rx+3)& (0+255),f,b
 36958  017B3A  C06B  F06A         	movff	??__flash_spi_tx_rx+3,??__flash_spi_tx_rx+2
 36959  017B3E  0100               	movlb	0	; () banked
 36960  017B40  6B6B               	clrf	(??__flash_spi_tx_rx+3)& (0+255),b
 36961  017B42  0100               	movlb	0	; () banked
 36962  017B44  516A               	movf	(??__flash_spi_tx_rx+2)& (0+255),w,b
 36963  017B46  6E66               	movwf	3942,c	;volatile
 36964                           
 36965                           ; BSR set to: 0
 36966                           ;flash.c: 242: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 36967  017B48  0100               	movlb	0	; () banked
 36968  017B4A  0566               	decf	__flash_spi_tx_rx@data_length& (0+255),w,b
 36969  017B4C  6E67               	movwf	3943,c	;volatile
 36970                           
 36971                           ; BSR set to: 0
 36972                           ;flash.c: 245: DMACON1bits.DMAEN = 1;
 36973  017B4E  8088               	bsf	3976,0,c	;volatile
 36974  017B50                     l2751:
 36975  017B50  B088               	btfsc	3976,0,c	;volatile
 36976  017B52  D7FE               	goto	l2751
 36977                           
 36978                           ;flash.c: 249: LATDbits.LD7 = 1;
 36979  017B54  8E8C               	bsf	3980,7,c	;volatile
 36980  017B56  0012               	return		;funcret
 36981  017B58                     __end_of__flash_spi_tx_rx:
 36982                           	opt stack 0
 36983                           tosu	equ	0xFFF
 36984                           tosh	equ	0xFFE
 36985                           tosl	equ	0xFFD
 36986                           pclath	equ	0xFFA
 36987                           tblptru	equ	0xFF8
 36988                           tblptrh	equ	0xFF7
 36989                           tblptrl	equ	0xFF6
 36990                           tablat	equ	0xFF5
 36991                           prodh	equ	0xFF4
 36992                           prodl	equ	0xFF3
 36993                           intcon	equ	0xFF2
 36994                           intcon2	equ	0xFF1
 36995                           intcon3	equ	0xFF0
 36996                           postinc0	equ	0xFEE
 36997                           wreg	equ	0xFE8
 36998                           indf1	equ	0xFE7
 36999                           postinc1	equ	0xFE6
 37000                           postdec1	equ	0xFE5
 37001                           plusw1	equ	0xFE3
 37002                           fsr1h	equ	0xFE2
 37003                           fsr1l	equ	0xFE1
 37004                           indf2	equ	0xFDF
 37005                           postinc2	equ	0xFDE
 37006                           postdec2	equ	0xFDD
 37007                           plusw2	equ	0xFDB
 37008                           fsr2h	equ	0xFDA
 37009                           fsr2l	equ	0xFD9
 37010                           status	equ	0xFD8
 37011                           
 37012 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 37013 ;; Defined at:
 37014 ;;		line 993 in file "usb_device_msd.c"
 37015 ;; Parameters:    Size  Location     Type
 37016 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 37017 ;; Auto vars:     Size  Location     Type
 37018 ;;		None
 37019 ;; Return value:  Size  Location     Type
 37020 ;;                  1    wreg      void 
 37021 ;; Registers used:
 37022 ;;		wreg, status,2, status,0
 37023 ;; Tracked objects:
 37024 ;;		On entry : 0/0
 37025 ;;		On exit  : 0/0
 37026 ;;		Unchanged: 0/0
 37027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37028 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37030 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37031 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37032 ;;Total ram usage:        6 bytes
 37033 ;; Hardware stack levels used:    1
 37034 ;; Hardware stack levels required when called:   10
 37035 ;; This function calls:
 37036 ;;		Nothing
 37037 ;; This function is called by:
 37038 ;;		_MSDProcessCommandMediaPresent
 37039 ;; This function uses a non-reentrant model
 37040 ;;
 37041                           
 37042                           	psect	text160
 37043  0172FC                     __ptext160:
 37044                           	opt stack 0
 37045  0172FC                     _MSDComputeDeviceInAndResidue:
 37046                           	opt stack 16
 37047                           
 37048                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 37049                           
 37050                           ;incstack = 0
 37051  0172FC  0100               	movlb	0	; () banked
 37052  0172FE  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 37053  017300  0100               	movlb	0	; () banked
 37054  017302  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 37055  017304  0100               	movlb	0	; () banked
 37056  017306  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 37057  017308  0100               	movlb	0	; () banked
 37058  01730A  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 37059  01730C  0100               	movlb	0	; () banked
 37060  01730E  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 37061  017310  0100               	movlb	0	; () banked
 37062  017312  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 37063  017314  0100               	movlb	0	; () banked
 37064  017316  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 37065  017318  0102               	movlb	2	; () banked
 37066  01731A  5D49               	subwf	(_gblCBW+8)& (0+255),w,b
 37067  01731C  0100               	movlb	0	; () banked
 37068  01731E  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 37069  017320  0102               	movlb	2	; () banked
 37070  017322  594A               	subwfb	(_gblCBW+9)& (0+255),w,b
 37071  017324  0100               	movlb	0	; () banked
 37072  017326  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 37073  017328  0102               	movlb	2	; () banked
 37074  01732A  594B               	subwfb	(_gblCBW+10)& (0+255),w,b
 37075  01732C  0100               	movlb	0	; () banked
 37076  01732E  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 37077  017330  0102               	movlb	2	; () banked
 37078  017332  594C               	subwfb	(_gblCBW+11)& (0+255),w,b
 37079  017334  B0D8               	btfsc	status,0,c
 37080  017336  D00E               	goto	l18090
 37081                           
 37082                           ; BSR set to: 2
 37083                           ;usb_device_msd.c: 997: {
 37084                           ;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 37085  017338  0E00               	movlw	0
 37086  01733A  010D               	movlb	13	; () banked
 37087  01733C  6F88               	movwf	136,b	;volatile
 37088  01733E  0E00               	movlw	0
 37089  017340  6F89               	movwf	137,b	;volatile
 37090  017342  0E00               	movlw	0
 37091  017344  6F8A               	movwf	138,b	;volatile
 37092  017346  0E00               	movlw	0
 37093  017348  6F8B               	movwf	139,b	;volatile
 37094                           
 37095                           ; BSR set to: 13
 37096                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 37097  01734A  C249  F0D9         	movff	_gblCBW+8,_TransferLength
 37098  01734E  C24A  F0DA         	movff	_gblCBW+9,_TransferLength+1
 37099                           
 37100                           ;usb_device_msd.c: 1002: }
 37101  017352  0012               	return	
 37102  017354                     l18090:
 37103                           
 37104                           ;usb_device_msd.c: 1003: else
 37105                           ;usb_device_msd.c: 1004: {
 37106                           ;usb_device_msd.c: 1006: if(DiExpected < TransferLength.Val)
 37107  017354  0100               	movlb	0	; () banked
 37108  017356  51D9               	movf	_TransferLength& (0+255),w,b
 37109  017358  0100               	movlb	0	; () banked
 37110  01735A  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 37111  01735C  0100               	movlb	0	; () banked
 37112  01735E  51DA               	movf	(_TransferLength+1)& (0+255),w,b
 37113  017360  0100               	movlb	0	; () banked
 37114  017362  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 37115  017364  B0D8               	btfsc	status,0,c
 37116  017366  D004               	goto	l18094
 37117                           
 37118                           ; BSR set to: 0
 37119                           ;usb_device_msd.c: 1007: {
 37120                           ;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 37121  017368  C060  F0D9         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 37122  01736C  C061  F0DA         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 37123  017370                     l18094:
 37124                           
 37125                           ; BSR set to: 0
 37126                           ;usb_device_msd.c: 1009: }
 37127                           ;usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength - Trans
      +                          ferLength.Val;
 37128  017370  0100               	movlb	0	; () banked
 37129  017372  51D9               	movf	_TransferLength& (0+255),w,b
 37130  017374  0100               	movlb	0	; () banked
 37131  017376  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 37132  017378  0100               	movlb	0	; () banked
 37133  01737A  51DA               	movf	(_TransferLength+1)& (0+255),w,b
 37134  01737C  0100               	movlb	0	; () banked
 37135  01737E  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 37136  017380  0100               	movlb	0	; () banked
 37137  017382  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 37138  017384  0100               	movlb	0	; () banked
 37139  017386  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 37140  017388  0100               	movlb	0	; () banked
 37141  01738A  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 37142  01738C  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 37143  01738E  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 37144  017390  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 37145  017392  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 37146  017394  0E00               	movlw	0
 37147  017396  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 37148  017398  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 37149  01739A  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 37150  01739C  0102               	movlb	2	; () banked
 37151  01739E  5149               	movf	(_gblCBW+8)& (0+255),w,b
 37152  0173A0  0100               	movlb	0	; () banked
 37153  0173A2  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 37154  0173A4  010D               	movlb	13	; () banked
 37155  0173A6  6F88               	movwf	136,b	;volatile
 37156  0173A8  0102               	movlb	2	; () banked
 37157  0173AA  514A               	movf	(_gblCBW+9)& (0+255),w,b
 37158  0173AC  0100               	movlb	0	; () banked
 37159  0173AE  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 37160  0173B0  010D               	movlb	13	; () banked
 37161  0173B2  6F89               	movwf	137,b	;volatile
 37162  0173B4  0102               	movlb	2	; () banked
 37163  0173B6  514B               	movf	(_gblCBW+10)& (0+255),w,b
 37164  0173B8  0100               	movlb	0	; () banked
 37165  0173BA  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 37166  0173BC  010D               	movlb	13	; () banked
 37167  0173BE  6F8A               	movwf	138,b	;volatile
 37168  0173C0  0102               	movlb	2	; () banked
 37169  0173C2  514C               	movf	(_gblCBW+11)& (0+255),w,b
 37170  0173C4  0100               	movlb	0	; () banked
 37171  0173C6  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 37172  0173C8  010D               	movlb	13	; () banked
 37173  0173CA  6F8B               	movwf	139,b	;volatile
 37174  0173CC  0012               	return	
 37175  0173CE                     __end_of_MSDComputeDeviceInAndResidue:
 37176                           	opt stack 0
 37177                           tosu	equ	0xFFF
 37178                           tosh	equ	0xFFE
 37179                           tosl	equ	0xFFD
 37180                           pclath	equ	0xFFA
 37181                           tblptru	equ	0xFF8
 37182                           tblptrh	equ	0xFF7
 37183                           tblptrl	equ	0xFF6
 37184                           tablat	equ	0xFF5
 37185                           prodh	equ	0xFF4
 37186                           prodl	equ	0xFF3
 37187                           intcon	equ	0xFF2
 37188                           intcon2	equ	0xFF1
 37189                           intcon3	equ	0xFF0
 37190                           postinc0	equ	0xFEE
 37191                           wreg	equ	0xFE8
 37192                           indf1	equ	0xFE7
 37193                           postinc1	equ	0xFE6
 37194                           postdec1	equ	0xFE5
 37195                           plusw1	equ	0xFE3
 37196                           fsr1h	equ	0xFE2
 37197                           fsr1l	equ	0xFE1
 37198                           indf2	equ	0xFDF
 37199                           postinc2	equ	0xFDE
 37200                           postdec2	equ	0xFDD
 37201                           plusw2	equ	0xFDB
 37202                           fsr2h	equ	0xFDA
 37203                           fsr2l	equ	0xFD9
 37204                           status	equ	0xFD8
 37205                           
 37206 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 37207 ;; Defined at:
 37208 ;;		line 18 in file "external_flash.c"
 37209 ;; Parameters:    Size  Location     Type
 37210 ;;  config          2    0[BANK0 ] PTR void 
 37211 ;;		 -> NULL(0), 
 37212 ;; Auto vars:     Size  Location     Type
 37213 ;;		None
 37214 ;; Return value:  Size  Location     Type
 37215 ;;                  2    0[BANK0 ] unsigned int 
 37216 ;; Registers used:
 37217 ;;		wreg, status,2
 37218 ;; Tracked objects:
 37219 ;;		On entry : 0/0
 37220 ;;		On exit  : 0/0
 37221 ;;		Unchanged: 0/0
 37222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37223 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37226 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37227 ;;Total ram usage:        2 bytes
 37228 ;; Hardware stack levels used:    1
 37229 ;; Hardware stack levels required when called:   10
 37230 ;; This function calls:
 37231 ;;		Nothing
 37232 ;; This function is called by:
 37233 ;;		_MSDProcessCommandMediaPresent
 37234 ;; This function uses a non-reentrant model
 37235 ;;
 37236                           
 37237                           	psect	text161
 37238  01AB6E                     __ptext161:
 37239                           	opt stack 0
 37240  01AB6E                     _ExternalFlash_SectorSizeRead:
 37241                           	opt stack 16
 37242                           
 37243                           ;external_flash.c: 21: return 512;
 37244                           
 37245                           ; BSR set to: 13
 37246                           ;incstack = 0
 37247  01AB6E  0E02               	movlw	2
 37248  01AB70  0100               	movlb	0	; () banked
 37249  01AB72  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 37250  01AB74  0E00               	movlw	0
 37251  01AB76  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 37252  01AB78  0012               	return	
 37253  01AB7A                     __end_of_ExternalFlash_SectorSizeRead:
 37254                           	opt stack 0
 37255                           tosu	equ	0xFFF
 37256                           tosh	equ	0xFFE
 37257                           tosl	equ	0xFFD
 37258                           pclath	equ	0xFFA
 37259                           tblptru	equ	0xFF8
 37260                           tblptrh	equ	0xFF7
 37261                           tblptrl	equ	0xFF6
 37262                           tablat	equ	0xFF5
 37263                           prodh	equ	0xFF4
 37264                           prodl	equ	0xFF3
 37265                           intcon	equ	0xFF2
 37266                           intcon2	equ	0xFF1
 37267                           intcon3	equ	0xFF0
 37268                           postinc0	equ	0xFEE
 37269                           wreg	equ	0xFE8
 37270                           indf1	equ	0xFE7
 37271                           postinc1	equ	0xFE6
 37272                           postdec1	equ	0xFE5
 37273                           plusw1	equ	0xFE3
 37274                           fsr1h	equ	0xFE2
 37275                           fsr1l	equ	0xFE1
 37276                           indf2	equ	0xFDF
 37277                           postinc2	equ	0xFDE
 37278                           postdec2	equ	0xFDD
 37279                           plusw2	equ	0xFDB
 37280                           fsr2h	equ	0xFDA
 37281                           fsr2l	equ	0xFD9
 37282                           status	equ	0xFD8
 37283                           
 37284 ;; *************** function _ExternalFlash_CapacityRead *****************
 37285 ;; Defined at:
 37286 ;;		line 24 in file "external_flash.c"
 37287 ;; Parameters:    Size  Location     Type
 37288 ;;  config          2    0[BANK0 ] PTR void 
 37289 ;;		 -> NULL(0), 
 37290 ;; Auto vars:     Size  Location     Type
 37291 ;;		None
 37292 ;; Return value:  Size  Location     Type
 37293 ;;                  4    0[BANK0 ] unsigned long 
 37294 ;; Registers used:
 37295 ;;		wreg, status,2
 37296 ;; Tracked objects:
 37297 ;;		On entry : 0/0
 37298 ;;		On exit  : 0/0
 37299 ;;		Unchanged: 0/0
 37300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37301 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37304 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37305 ;;Total ram usage:        4 bytes
 37306 ;; Hardware stack levels used:    1
 37307 ;; Hardware stack levels required when called:   10
 37308 ;; This function calls:
 37309 ;;		Nothing
 37310 ;; This function is called by:
 37311 ;;		_MSDProcessCommandMediaPresent
 37312 ;; This function uses a non-reentrant model
 37313 ;;
 37314                           
 37315                           	psect	text162
 37316  01AA1E                     __ptext162:
 37317                           	opt stack 0
 37318  01AA1E                     _ExternalFlash_CapacityRead:
 37319                           	opt stack 16
 37320                           
 37321                           ;external_flash.c: 26: return ((uint32_t) 4114 - 1);
 37322                           
 37323                           ; BSR set to: 0
 37324                           ;incstack = 0
 37325  01AA1E  0E11               	movlw	17
 37326  01AA20  0100               	movlb	0	; () banked
 37327  01AA22  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 37328  01AA24  0E10               	movlw	16
 37329  01AA26  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 37330  01AA28  0E00               	movlw	0
 37331  01AA2A  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 37332  01AA2C  0E00               	movlw	0
 37333  01AA2E  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 37334  01AA30  0012               	return	
 37335  01AA32                     __end_of_ExternalFlash_CapacityRead:
 37336                           	opt stack 0
 37337                           tosu	equ	0xFFF
 37338                           tosh	equ	0xFFE
 37339                           tosl	equ	0xFFD
 37340                           pclath	equ	0xFFA
 37341                           tblptru	equ	0xFF8
 37342                           tblptrh	equ	0xFF7
 37343                           tblptrl	equ	0xFF6
 37344                           tablat	equ	0xFF5
 37345                           prodh	equ	0xFF4
 37346                           prodl	equ	0xFF3
 37347                           intcon	equ	0xFF2
 37348                           intcon2	equ	0xFF1
 37349                           intcon3	equ	0xFF0
 37350                           postinc0	equ	0xFEE
 37351                           wreg	equ	0xFE8
 37352                           indf1	equ	0xFE7
 37353                           postinc1	equ	0xFE6
 37354                           postdec1	equ	0xFE5
 37355                           plusw1	equ	0xFE3
 37356                           fsr1h	equ	0xFE2
 37357                           fsr1l	equ	0xFE1
 37358                           indf2	equ	0xFDF
 37359                           postinc2	equ	0xFDE
 37360                           postdec2	equ	0xFDD
 37361                           plusw2	equ	0xFDB
 37362                           fsr2h	equ	0xFDA
 37363                           fsr2l	equ	0xFD9
 37364                           status	equ	0xFD8
 37365                           
 37366 ;; *************** function _ExternalFlash_MediaInitialize *****************
 37367 ;; Defined at:
 37368 ;;		line 10 in file "external_flash.c"
 37369 ;; Parameters:    Size  Location     Type
 37370 ;;  config          2    0[BANK0 ] PTR void 
 37371 ;;		 -> NULL(0), 
 37372 ;; Auto vars:     Size  Location     Type
 37373 ;;		None
 37374 ;; Return value:  Size  Location     Type
 37375 ;;                  2    0[BANK0 ] PTR struct .
 37376 ;; Registers used:
 37377 ;;		wreg, status,2, status,0
 37378 ;; Tracked objects:
 37379 ;;		On entry : 0/0
 37380 ;;		On exit  : 0/0
 37381 ;;		Unchanged: 0/0
 37382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37383 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37386 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37387 ;;Total ram usage:        2 bytes
 37388 ;; Hardware stack levels used:    1
 37389 ;; Hardware stack levels required when called:   10
 37390 ;; This function calls:
 37391 ;;		Nothing
 37392 ;; This function is called by:
 37393 ;;		_USBMSDInit
 37394 ;;		_MSDProcessCommand
 37395 ;; This function uses a non-reentrant model
 37396 ;;
 37397                           
 37398                           	psect	text163
 37399  01A754                     __ptext163:
 37400                           	opt stack 0
 37401  01A754                     _ExternalFlash_MediaInitialize:
 37402                           	opt stack 0
 37403                           
 37404                           ; BSR set to: 0
 37405                           ;Skip over the trampoline to the duplicate function for level 2
 37406  01A754  B25B               	btfsc	btemp,1,c
 37407  01A756  EF46  F0D4         	goto	i2_ExternalFlash_MediaInitialize
 37408  01A75A                     _ExternalFlash_MediaInitialize$intlevel0:
 37409                           	opt stack 17
 37410                           
 37411                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 37412                           
 37413                           ;incstack = 0
 37414  01A75A  0102               	movlb	2	; () banked
 37415  01A75C  81B7               	bsf	(_mediaInformation+1)& (0+255),0,b
 37416                           
 37417                           ; BSR set to: 2
 37418                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 37419  01A75E  0E02               	movlw	2
 37420  01A760  0102               	movlb	2	; () banked
 37421  01A762  6FB9               	movwf	(_mediaInformation+3)& (0+255),b
 37422  01A764  0E00               	movlw	0
 37423  01A766  6FB8               	movwf	(_mediaInformation+2)& (0+255),b
 37424                           
 37425                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 37426  01A768  0E00               	movlw	0
 37427  01A76A  0102               	movlb	2	; () banked
 37428  01A76C  6FB6               	movwf	_mediaInformation& (0+255),b
 37429                           
 37430                           ; BSR set to: 2
 37431                           ;external_flash.c: 15: return &mediaInformation;
 37432  01A76E  0EB6               	movlw	low _mediaInformation
 37433  01A770  0100               	movlb	0	; () banked
 37434  01A772  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 37435  01A774  0E02               	movlw	high _mediaInformation
 37436  01A776  0100               	movlb	0	; () banked
 37437  01A778  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 37438  01A77A  0012               	return	
 37439  01A77C                     __end_of_ExternalFlash_MediaInitialize:
 37440                           	opt stack 0
 37441                           tosu	equ	0xFFF
 37442                           tosh	equ	0xFFE
 37443                           tosl	equ	0xFFD
 37444                           pclath	equ	0xFFA
 37445                           tblptru	equ	0xFF8
 37446                           tblptrh	equ	0xFF7
 37447                           tblptrl	equ	0xFF6
 37448                           tablat	equ	0xFF5
 37449                           prodh	equ	0xFF4
 37450                           prodl	equ	0xFF3
 37451                           intcon	equ	0xFF2
 37452                           intcon2	equ	0xFF1
 37453                           intcon3	equ	0xFF0
 37454                           postinc0	equ	0xFEE
 37455                           wreg	equ	0xFE8
 37456                           indf1	equ	0xFE7
 37457                           postinc1	equ	0xFE6
 37458                           postdec1	equ	0xFE5
 37459                           plusw1	equ	0xFE3
 37460                           fsr1h	equ	0xFE2
 37461                           fsr1l	equ	0xFE1
 37462                           indf2	equ	0xFDF
 37463                           postinc2	equ	0xFDE
 37464                           postdec2	equ	0xFDD
 37465                           plusw2	equ	0xFDB
 37466                           fsr2h	equ	0xFDA
 37467                           fsr2l	equ	0xFD9
 37468                           status	equ	0xFD8
 37469                           
 37470 ;; *************** function _ExternalFlash_MediaDetect *****************
 37471 ;; Defined at:
 37472 ;;		line 29 in file "external_flash.c"
 37473 ;; Parameters:    Size  Location     Type
 37474 ;;  config          2    0[BANK0 ] PTR void 
 37475 ;;		 -> NULL(0), 
 37476 ;; Auto vars:     Size  Location     Type
 37477 ;;		None
 37478 ;; Return value:  Size  Location     Type
 37479 ;;                  1    wreg      unsigned char 
 37480 ;; Registers used:
 37481 ;;		wreg
 37482 ;; Tracked objects:
 37483 ;;		On entry : 0/0
 37484 ;;		On exit  : 0/0
 37485 ;;		Unchanged: 0/0
 37486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37487 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37490 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37491 ;;Total ram usage:        2 bytes
 37492 ;; Hardware stack levels used:    1
 37493 ;; Hardware stack levels required when called:   10
 37494 ;; This function calls:
 37495 ;;		Nothing
 37496 ;; This function is called by:
 37497 ;;		_USBMSDInit
 37498 ;;		_MSDProcessCommand
 37499 ;; This function uses a non-reentrant model
 37500 ;;
 37501                           
 37502                           	psect	text164
 37503  01ABA2                     __ptext164:
 37504                           	opt stack 0
 37505  01ABA2                     _ExternalFlash_MediaDetect:
 37506                           	opt stack 0
 37507                           
 37508                           ; BSR set to: 0
 37509                           ;Skip over the trampoline to the duplicate function for level 2
 37510  01ABA2  B25B               	btfsc	btemp,1,c
 37511  01ABA4  EFF1  F0D5         	goto	i2_ExternalFlash_MediaDetect
 37512  01ABA8                     _ExternalFlash_MediaDetect$intlevel0:
 37513                           	opt stack 17
 37514                           
 37515                           ;external_flash.c: 31: return 1;
 37516                           
 37517                           ;incstack = 0
 37518  01ABA8  0E01               	movlw	1
 37519  01ABAA  0012               	return	
 37520  01ABAC                     __end_of_ExternalFlash_MediaDetect:
 37521                           	opt stack 0
 37522                           tosu	equ	0xFFF
 37523                           tosh	equ	0xFFE
 37524                           tosl	equ	0xFFD
 37525                           pclath	equ	0xFFA
 37526                           tblptru	equ	0xFF8
 37527                           tblptrh	equ	0xFF7
 37528                           tblptrl	equ	0xFF6
 37529                           tablat	equ	0xFF5
 37530                           prodh	equ	0xFF4
 37531                           prodl	equ	0xFF3
 37532                           intcon	equ	0xFF2
 37533                           intcon2	equ	0xFF1
 37534                           intcon3	equ	0xFF0
 37535                           postinc0	equ	0xFEE
 37536                           wreg	equ	0xFE8
 37537                           indf1	equ	0xFE7
 37538                           postinc1	equ	0xFE6
 37539                           postdec1	equ	0xFE5
 37540                           plusw1	equ	0xFE3
 37541                           fsr1h	equ	0xFE2
 37542                           fsr1l	equ	0xFE1
 37543                           indf2	equ	0xFDF
 37544                           postinc2	equ	0xFDE
 37545                           postdec2	equ	0xFDD
 37546                           plusw2	equ	0xFDB
 37547                           fsr2h	equ	0xFDA
 37548                           fsr2l	equ	0xFD9
 37549                           status	equ	0xFD8
 37550                           
 37551 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 37552 ;; Defined at:
 37553 ;;		line 108 in file "app_device_custom_hid.c"
 37554 ;; Parameters:    Size  Location     Type
 37555 ;;		None
 37556 ;; Auto vars:     Size  Location     Type
 37557 ;;  return_value    2   52[BANK0 ] unsigned int 
 37558 ;;  idx             1   54[BANK0 ] unsigned char 
 37559 ;; Return value:  Size  Location     Type
 37560 ;;                  1    wreg      void 
 37561 ;; Registers used:
 37562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37563 ;; Tracked objects:
 37564 ;;		On entry : 0/0
 37565 ;;		On exit  : 0/0
 37566 ;;		Unchanged: 0/0
 37567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37569 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37570 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37571 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37572 ;;Total ram usage:       11 bytes
 37573 ;; Hardware stack levels used:    1
 37574 ;; Hardware stack levels required when called:   15
 37575 ;; This function calls:
 37576 ;;		_USBTransferOnePacket
 37577 ;;		__fill_buffer_get_calibration1
 37578 ;;		__fill_buffer_get_calibration2
 37579 ;;		__fill_buffer_get_display1
 37580 ;;		__fill_buffer_get_display2
 37581 ;;		__fill_buffer_get_status
 37582 ;;		__parse_command_calibration
 37583 ;;		__parse_command_long
 37584 ;;		__parse_command_short
 37585 ;; This function is called by:
 37586 ;;		_main
 37587 ;; This function uses a non-reentrant model
 37588 ;;
 37589                           
 37590                           	psect	text165
 37591  011854                     __ptext165:
 37592                           	opt stack 0
 37593  011854                     _APP_DeviceCustomHIDTasks:
 37594                           	opt stack 15
 37595                           
 37596                           ;app_device_custom_hid.c: 110: uint8_t idx;
 37597                           ;app_device_custom_hid.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 37598                           
 37599                           ;incstack = 0
 37600  011854  0E20               	movlw	32
 37601  011856  602B               	cpfslt	_USBDeviceState,c	;volatile
 37602  011858  D001               	goto	l1070
 37603  01185A  0012               	return	
 37604  01185C                     l1070:
 37605                           
 37606                           ;app_device_custom_hid.c: 118: }
 37607                           ;app_device_custom_hid.c: 124: if( UCONbits.SUSPND== 1 )
 37608  01185C  B265               	btfsc	3941,1,c	;volatile
 37609  01185E  0012               	return	
 37610                           
 37611                           ;app_device_custom_hid.c: 127: }
 37612                           ;app_device_custom_hid.c: 130: if(((USBOutHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          OutHandle & 0x80) != 0x00)) == 0)
 37613                           
 37614                           ;app_device_custom_hid.c: 125: {
 37615                           ;app_device_custom_hid.c: 126: return;
 37616  011860  0101               	movlb	1	; () banked
 37617  011862  51E9               	movf	_USBOutHandle& (0+255),w,b
 37618  011864  0101               	movlb	1	; () banked
 37619  011866  11EA               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 37620  011868  B4D8               	btfsc	status,2,c
 37621  01186A  D10C               	goto	l22246
 37622                           
 37623                           ; BSR set to: 1
 37624  01186C  C1E9  FFD9         	movff	_USBOutHandle,fsr2l
 37625  011870  C1EA  FFDA         	movff	_USBOutHandle+1,fsr2h
 37626  011874  0101               	movlb	1	; () banked
 37627  011876  BEDF               	btfsc	indf2,7,c
 37628  011878  0012               	return	
 37629  01187A  D104               	goto	l22246
 37630  01187C                     l22178:
 37631                           
 37632                           ;app_device_custom_hid.c: 140: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 37633  01187C  0100               	movlb	0	; () banked
 37634  01187E  51D7               	movf	_USBInHandle& (0+255),w,b
 37635  011880  0100               	movlb	0	; () banked
 37636  011882  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 37637  011884  B4D8               	btfsc	status,2,c
 37638  011886  D007               	goto	l22182
 37639                           
 37640                           ; BSR set to: 0
 37641  011888  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 37642  01188C  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 37643  011890  0100               	movlb	0	; () banked
 37644  011892  BEDF               	btfsc	indf2,7,c
 37645  011894  D111               	goto	l22248
 37646  011896                     l22182:
 37647                           
 37648                           ; BSR set to: 0
 37649                           ;app_device_custom_hid.c: 141: {
 37650                           ;app_device_custom_hid.c: 143: _fill_buffer_get_status();
 37651  011896  EC40  F09C         	call	__fill_buffer_get_status	;wreg free
 37652                           
 37653                           ;app_device_custom_hid.c: 145: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 37654  01189A  0E01               	movlw	1
 37655  01189C  0100               	movlb	0	; () banked
 37656  01189E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 37657  0118A0  0EA4               	movlw	low _ToSendDataBuffer
 37658  0118A2  0100               	movlb	0	; () banked
 37659  0118A4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 37660  0118A6  0E03               	movlw	high _ToSendDataBuffer
 37661  0118A8  0100               	movlb	0	; () banked
 37662  0118AA  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 37663  0118AC  0E40               	movlw	64
 37664  0118AE  0100               	movlb	0	; () banked
 37665  0118B0  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 37666  0118B2  0E01               	movlw	1
 37667  0118B4  EC69  F0AC         	call	_USBTransferOnePacket
 37668  0118B8  D0E0               	goto	L40
 37669  0118BA                     l22186:
 37670                           
 37671                           ;app_device_custom_hid.c: 151: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 37672  0118BA  0100               	movlb	0	; () banked
 37673  0118BC  51D7               	movf	_USBInHandle& (0+255),w,b
 37674  0118BE  0100               	movlb	0	; () banked
 37675  0118C0  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 37676  0118C2  B4D8               	btfsc	status,2,c
 37677  0118C4  D007               	goto	l22190
 37678                           
 37679                           ; BSR set to: 0
 37680  0118C6  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 37681  0118CA  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 37682  0118CE  0100               	movlb	0	; () banked
 37683  0118D0  BEDF               	btfsc	indf2,7,c
 37684  0118D2  D0F2               	goto	l22248
 37685  0118D4                     l22190:
 37686                           
 37687                           ; BSR set to: 0
 37688                           ;app_device_custom_hid.c: 152: {
 37689                           ;app_device_custom_hid.c: 154: _fill_buffer_get_display1();
 37690  0118D4  EC96  F0CB         	call	__fill_buffer_get_display1	;wreg free
 37691                           
 37692                           ;app_device_custom_hid.c: 156: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 37693  0118D8  0E01               	movlw	1
 37694  0118DA  0100               	movlb	0	; () banked
 37695  0118DC  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 37696  0118DE  0EA4               	movlw	low _ToSendDataBuffer
 37697  0118E0  0100               	movlb	0	; () banked
 37698  0118E2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 37699  0118E4  0E03               	movlw	high _ToSendDataBuffer
 37700  0118E6  0100               	movlb	0	; () banked
 37701  0118E8  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 37702  0118EA  0E40               	movlw	64
 37703  0118EC  0100               	movlb	0	; () banked
 37704  0118EE  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 37705  0118F0  0E01               	movlw	1
 37706  0118F2  EC69  F0AC         	call	_USBTransferOnePacket
 37707  0118F6  D0C1               	goto	L40
 37708  0118F8                     l22192:
 37709                           
 37710                           ;app_device_custom_hid.c: 162: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 37711  0118F8  0100               	movlb	0	; () banked
 37712  0118FA  51D7               	movf	_USBInHandle& (0+255),w,b
 37713  0118FC  0100               	movlb	0	; () banked
 37714  0118FE  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 37715  011900  B4D8               	btfsc	status,2,c
 37716  011902  D007               	goto	l22196
 37717                           
 37718                           ; BSR set to: 0
 37719  011904  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 37720  011908  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 37721  01190C  0100               	movlb	0	; () banked
 37722  01190E  BEDF               	btfsc	indf2,7,c
 37723  011910  D0D3               	goto	l22248
 37724  011912                     l22196:
 37725                           
 37726                           ; BSR set to: 0
 37727                           ;app_device_custom_hid.c: 163: {
 37728                           ;app_device_custom_hid.c: 165: _fill_buffer_get_display2();
 37729  011912  EC65  F0CB         	call	__fill_buffer_get_display2	;wreg free
 37730                           
 37731                           ;app_device_custom_hid.c: 167: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 37732  011916  0E01               	movlw	1
 37733  011918  0100               	movlb	0	; () banked
 37734  01191A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 37735  01191C  0EA4               	movlw	low _ToSendDataBuffer
 37736  01191E  0100               	movlb	0	; () banked
 37737  011920  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 37738  011922  0E03               	movlw	high _ToSendDataBuffer
 37739  011924  0100               	movlb	0	; () banked
 37740  011926  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 37741  011928  0E40               	movlw	64
 37742  01192A  0100               	movlb	0	; () banked
 37743  01192C  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 37744  01192E  0E01               	movlw	1
 37745  011930  EC69  F0AC         	call	_USBTransferOnePacket
 37746  011934  D0A2               	goto	L40
 37747  011936                     l22198:
 37748                           
 37749                           ;app_device_custom_hid.c: 173: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 37750  011936  0100               	movlb	0	; () banked
 37751  011938  51D7               	movf	_USBInHandle& (0+255),w,b
 37752  01193A  0100               	movlb	0	; () banked
 37753  01193C  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 37754  01193E  B4D8               	btfsc	status,2,c
 37755  011940  D007               	goto	l22202
 37756                           
 37757                           ; BSR set to: 0
 37758  011942  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 37759  011946  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 37760  01194A  0100               	movlb	0	; () banked
 37761  01194C  BEDF               	btfsc	indf2,7,c
 37762  01194E  D0B4               	goto	l22248
 37763  011950                     l22202:
 37764                           
 37765                           ; BSR set to: 0
 37766                           ;app_device_custom_hid.c: 174: {
 37767                           ;app_device_custom_hid.c: 176: _fill_buffer_get_calibration1();
 37768  011950  EC5F  F0BF         	call	__fill_buffer_get_calibration1	;wreg free
 37769                           
 37770                           ;app_device_custom_hid.c: 178: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 37771  011954  0E01               	movlw	1
 37772  011956  0100               	movlb	0	; () banked
 37773  011958  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 37774  01195A  0EA4               	movlw	low _ToSendDataBuffer
 37775  01195C  0100               	movlb	0	; () banked
 37776  01195E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 37777  011960  0E03               	movlw	high _ToSendDataBuffer
 37778  011962  0100               	movlb	0	; () banked
 37779  011964  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 37780  011966  0E40               	movlw	64
 37781  011968  0100               	movlb	0	; () banked
 37782  01196A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 37783  01196C  0E01               	movlw	1
 37784  01196E  EC69  F0AC         	call	_USBTransferOnePacket
 37785  011972  D083               	goto	L40
 37786  011974                     l22206:
 37787                           
 37788                           ;app_device_custom_hid.c: 184: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 37789  011974  0100               	movlb	0	; () banked
 37790  011976  51D7               	movf	_USBInHandle& (0+255),w,b
 37791  011978  0100               	movlb	0	; () banked
 37792  01197A  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 37793  01197C  B4D8               	btfsc	status,2,c
 37794  01197E  D007               	goto	l22210
 37795                           
 37796                           ; BSR set to: 0
 37797  011980  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 37798  011984  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 37799  011988  0100               	movlb	0	; () banked
 37800  01198A  BEDF               	btfsc	indf2,7,c
 37801  01198C  D095               	goto	l22248
 37802  01198E                     l22210:
 37803                           
 37804                           ; BSR set to: 0
 37805                           ;app_device_custom_hid.c: 185: {
 37806                           ;app_device_custom_hid.c: 187: _fill_buffer_get_calibration2();
 37807  01198E  EC4A  F0C6         	call	__fill_buffer_get_calibration2	;wreg free
 37808                           
 37809                           ;app_device_custom_hid.c: 189: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 37810  011992  0E01               	movlw	1
 37811  011994  0100               	movlb	0	; () banked
 37812  011996  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 37813  011998  0EA4               	movlw	low _ToSendDataBuffer
 37814  01199A  0100               	movlb	0	; () banked
 37815  01199C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 37816  01199E  0E03               	movlw	high _ToSendDataBuffer
 37817  0119A0  0100               	movlb	0	; () banked
 37818  0119A2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 37819  0119A4  0E40               	movlw	64
 37820  0119A6  0100               	movlb	0	; () banked
 37821  0119A8  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 37822  0119AA  0E01               	movlw	1
 37823  0119AC  EC69  F0AC         	call	_USBTransferOnePacket
 37824  0119B0  D064               	goto	L40
 37825  0119B2                     l22214:
 37826                           
 37827                           ;app_device_custom_hid.c: 195: LATDbits.LD1 ^= 1;
 37828  0119B2  728C               	btg	3980,1,c	;volatile
 37829                           
 37830                           ;app_device_custom_hid.c: 196: break;
 37831  0119B4  D081               	goto	l22248
 37832  0119B6                     l22216:
 37833                           
 37834                           ;app_device_custom_hid.c: 200: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 37835  0119B6  0100               	movlb	0	; () banked
 37836  0119B8  51D7               	movf	_USBInHandle& (0+255),w,b
 37837  0119BA  0100               	movlb	0	; () banked
 37838  0119BC  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 37839  0119BE  B4D8               	btfsc	status,2,c
 37840  0119C0  D007               	goto	l22220
 37841                           
 37842                           ; BSR set to: 0
 37843  0119C2  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 37844  0119C6  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 37845  0119CA  0100               	movlb	0	; () banked
 37846  0119CC  BEDF               	btfsc	indf2,7,c
 37847  0119CE  D074               	goto	l22248
 37848  0119D0                     l22220:
 37849                           
 37850                           ; BSR set to: 0
 37851                           ;app_device_custom_hid.c: 201: {
 37852                           ;app_device_custom_hid.c: 203: ToSendDataBuffer[0] = COMMAND_GET_BUTTON_STATUS;
 37853  0119D0  0E81               	movlw	129
 37854  0119D2  0103               	movlb	3	; () banked
 37855  0119D4  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 37856                           
 37857                           ; BSR set to: 3
 37858                           ;app_device_custom_hid.c: 204: if(PORTAbits.RA0)
 37859  0119D6  A080               	btfss	3968,0,c	;volatile
 37860  0119D8  D002               	goto	l22226
 37861                           
 37862                           ; BSR set to: 3
 37863                           ;app_device_custom_hid.c: 205: {
 37864                           ;app_device_custom_hid.c: 207: ToSendDataBuffer[1] = 0x01;
 37865  0119DA  0E01               	movlw	1
 37866  0119DC  D001               	goto	L39
 37867  0119DE                     l22226:
 37868                           
 37869                           ; BSR set to: 3
 37870                           ;app_device_custom_hid.c: 209: else
 37871                           ;app_device_custom_hid.c: 210: {
 37872                           ;app_device_custom_hid.c: 212: ToSendDataBuffer[1] = 0x00;
 37873  0119DE  0E00               	movlw	0
 37874  0119E0                     L39:
 37875  0119E0  0103               	movlb	3	; () banked
 37876  0119E2  6FA5               	movwf	(_ToSendDataBuffer+1)& (0+255),b
 37877                           
 37878                           ; BSR set to: 3
 37879                           ;app_device_custom_hid.c: 213: }
 37880                           ;app_device_custom_hid.c: 215: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 37881                           
 37882                           ; BSR set to: 3
 37883  0119E4  0E01               	movlw	1
 37884  0119E6  0100               	movlb	0	; () banked
 37885  0119E8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 37886  0119EA  0EA4               	movlw	low _ToSendDataBuffer
 37887  0119EC  0100               	movlb	0	; () banked
 37888  0119EE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 37889  0119F0  0E03               	movlw	high _ToSendDataBuffer
 37890  0119F2  0100               	movlb	0	; () banked
 37891  0119F4  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 37892  0119F6  0E40               	movlw	64
 37893  0119F8  0100               	movlb	0	; () banked
 37894  0119FA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 37895  0119FC  0E01               	movlw	1
 37896  0119FE  EC69  F0AC         	call	_USBTransferOnePacket
 37897  011A02  D03B               	goto	L40
 37898  011A04                     l22230:
 37899                           
 37900                           ;app_device_custom_hid.c: 220: {
 37901                           ;app_device_custom_hid.c: 221: uint16_t return_value;
 37902                           ;app_device_custom_hid.c: 223: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 37903  011A04  0100               	movlb	0	; () banked
 37904  011A06  51D7               	movf	_USBInHandle& (0+255),w,b
 37905  011A08  0100               	movlb	0	; () banked
 37906  011A0A  11D8               	iorwf	(_USBInHandle+1)& (0+255),w,b
 37907  011A0C  B4D8               	btfsc	status,2,c
 37908  011A0E  D007               	goto	l22234
 37909                           
 37910                           ; BSR set to: 0
 37911  011A10  C0D7  FFD9         	movff	_USBInHandle,fsr2l
 37912  011A14  C0D8  FFDA         	movff	_USBInHandle+1,fsr2h
 37913  011A18  0100               	movlb	0	; () banked
 37914  011A1A  BEDF               	btfsc	indf2,7,c
 37915  011A1C  D04D               	goto	l22248
 37916  011A1E                     l22234:
 37917                           
 37918                           ; BSR set to: 0
 37919                           ;app_device_custom_hid.c: 224: {
 37920                           ;app_device_custom_hid.c: 226: ToSendDataBuffer[0] = COMMAND_READ_POTENTIOMETER;
 37921  011A1E  0E37               	movlw	55
 37922  011A20  0103               	movlb	3	; () banked
 37923  011A22  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 37924                           
 37925                           ; BSR set to: 3
 37926                           ;app_device_custom_hid.c: 228: return_value = os.temperature_onboard >> 3;
 37927  011A24  EE22  F036         	lfsr	2,_os+54	;volatile
 37928  011A28  CFDE F08C          	movff	postinc2,??_APP_DeviceCustomHIDTasks
 37929  011A2C  CFDD F08D          	movff	postdec2,??_APP_DeviceCustomHIDTasks+1
 37930  011A30  0100               	movlb	0	; () banked
 37931  011A32  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 37932  011A34  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 37933  011A36  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 37934  011A38  0100               	movlb	0	; () banked
 37935  011A3A  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 37936  011A3C  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 37937  011A3E  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 37938  011A40  0100               	movlb	0	; () banked
 37939  011A42  358D               	rlcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 37940  011A44  338D               	rrcf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 37941  011A46  338C               	rrcf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 37942  011A48  C08C  F094         	movff	??_APP_DeviceCustomHIDTasks,APP_DeviceCustomHIDTasks@return_value
 37943  011A4C  C08D  F095         	movff	??_APP_DeviceCustomHIDTasks+1,APP_DeviceCustomHIDTasks@return_value+1
 37944                           
 37945                           ; BSR set to: 0
 37946                           ;app_device_custom_hid.c: 229: ToSendDataBuffer[1] = (uint8_t) return_value;
 37947  011A50  C094  F3A5         	movff	APP_DeviceCustomHIDTasks@return_value,_ToSendDataBuffer+1
 37948                           
 37949                           ; BSR set to: 0
 37950                           ;app_device_custom_hid.c: 230: ToSendDataBuffer[2] = return_value >> 8;
 37951  011A54  0100               	movlb	0	; () banked
 37952  011A56  5195               	movf	(APP_DeviceCustomHIDTasks@return_value+1)& (0+255),w,b
 37953  011A58  0103               	movlb	3	; () banked
 37954  011A5A  6FA6               	movwf	(_ToSendDataBuffer+2)& (0+255),b
 37955                           
 37956                           ; BSR set to: 3
 37957                           ;app_device_custom_hid.c: 232: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 37958  011A5C  0E01               	movlw	1
 37959  011A5E  0100               	movlb	0	; () banked
 37960  011A60  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 37961  011A62  0EA4               	movlw	low _ToSendDataBuffer
 37962  011A64  0100               	movlb	0	; () banked
 37963  011A66  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 37964  011A68  0E03               	movlw	high _ToSendDataBuffer
 37965  011A6A  0100               	movlb	0	; () banked
 37966  011A6C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 37967  011A6E  0E40               	movlw	64
 37968  011A70  0100               	movlb	0	; () banked
 37969  011A72  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 37970  011A74  0E01               	movlw	1
 37971  011A76  EC69  F0AC         	call	_USBTransferOnePacket
 37972  011A7A                     L40:
 37973  011A7A  C060  F0D7         	movff	?_USBTransferOnePacket,_USBInHandle
 37974  011A7E  C061  F0D8         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 37975                           
 37976                           ;app_device_custom_hid.c: 236: }
 37977                           
 37978                           ;app_device_custom_hid.c: 233: }
 37979                           ;app_device_custom_hid.c: 234: }
 37980                           ;app_device_custom_hid.c: 235: break;
 37981  011A82  D01A               	goto	l22248
 37982  011A84                     l22246:
 37983  011A84  0104               	movlb	4	; () banked
 37984  011A86  5178               	movf	_ReceivedDataBuffer& (0+255),w,b
 37985                           
 37986                           ; Switch size 1, requested type "space"
 37987                           ; Number of cases is 8, Range of values is 16 to 129
 37988                           ; switch strategies available:
 37989                           ; Name         Instructions Cycles
 37990                           ; simple_byte           25    13 (average)
 37991                           ;	Chosen strategy is simple_byte
 37992  011A88  0A10               	xorlw	16	; case 16
 37993  011A8A  B4D8               	btfsc	status,2,c
 37994  011A8C  D6F7               	goto	l22178
 37995  011A8E  0A01               	xorlw	1	; case 17
 37996  011A90  B4D8               	btfsc	status,2,c
 37997  011A92  D713               	goto	l22186
 37998  011A94  0A03               	xorlw	3	; case 18
 37999  011A96  B4D8               	btfsc	status,2,c
 38000  011A98  D72F               	goto	l22192
 38001  011A9A  0A01               	xorlw	1	; case 19
 38002  011A9C  B4D8               	btfsc	status,2,c
 38003  011A9E  D74B               	goto	l22198
 38004  011AA0  0A07               	xorlw	7	; case 20
 38005  011AA2  B4D8               	btfsc	status,2,c
 38006  011AA4  D767               	goto	l22206
 38007  011AA6  0A23               	xorlw	35	; case 55
 38008  011AA8  B4D8               	btfsc	status,2,c
 38009  011AAA  D7AC               	goto	l22230
 38010  011AAC  0AB7               	xorlw	183	; case 128
 38011  011AAE  B4D8               	btfsc	status,2,c
 38012  011AB0  D780               	goto	l22214
 38013  011AB2  0A01               	xorlw	1	; case 129
 38014  011AB4  B4D8               	btfsc	status,2,c
 38015  011AB6  D77F               	goto	l22216
 38016  011AB8                     l22248:
 38017                           
 38018                           ;app_device_custom_hid.c: 239: idx = 1;
 38019  011AB8  0E01               	movlw	1
 38020  011ABA  D097               	goto	L41
 38021  011ABC                     l22250:
 38022                           
 38023                           ; BSR set to: 0
 38024                           ;app_device_custom_hid.c: 245: _parse_command_short(ReceivedDataBuffer[idx]);
 38025  011ABC  0100               	movlb	0	; () banked
 38026  011ABE  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38027  011AC0  0D01               	mullw	1
 38028  011AC2  0E78               	movlw	low _ReceivedDataBuffer
 38029  011AC4  24F3               	addwf	prodl,w,c
 38030  011AC6  6ED9               	movwf	fsr2l,c
 38031  011AC8  0E04               	movlw	high _ReceivedDataBuffer
 38032  011ACA  20F4               	addwfc	prodh,w,c
 38033  011ACC  6EDA               	movwf	fsr2h,c
 38034  011ACE  50DF               	movf	indf2,w,c
 38035  011AD0  EC81  F0B6         	call	__parse_command_short
 38036                           
 38037                           ;app_device_custom_hid.c: 246: ++idx;
 38038  011AD4  0100               	movlb	0	; () banked
 38039  011AD6  2B96               	incf	APP_DeviceCustomHIDTasks@idx& (0+255),f,b
 38040                           
 38041                           ;app_device_custom_hid.c: 247: break;
 38042  011AD8  D0AA               	goto	l22266
 38043  011ADA                     l22254:
 38044                           
 38045                           ; BSR set to: 0
 38046                           ;app_device_custom_hid.c: 249: _parse_command_long(ReceivedDataBuffer[idx], ReceivedData
      +                          Buffer[idx+1]);
 38047  011ADA  0100               	movlb	0	; () banked
 38048  011ADC  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38049  011ADE  0100               	movlb	0	; () banked
 38050  011AE0  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 38051  011AE2  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 38052  011AE4  0E01               	movlw	1
 38053  011AE6  0100               	movlb	0	; () banked
 38054  011AE8  278C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 38055  011AEA  0E00               	movlw	0
 38056  011AEC  238D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 38057  011AEE  0E78               	movlw	low _ReceivedDataBuffer
 38058  011AF0  0100               	movlb	0	; () banked
 38059  011AF2  258C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 38060  011AF4  6ED9               	movwf	fsr2l,c
 38061  011AF6  0E04               	movlw	high _ReceivedDataBuffer
 38062  011AF8  0100               	movlb	0	; () banked
 38063  011AFA  218D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 38064  011AFC  6EDA               	movwf	fsr2h,c
 38065  011AFE  50DF               	movf	indf2,w,c
 38066  011B00  0100               	movlb	0	; () banked
 38067  011B02  6F63               	movwf	__parse_command_long@data& (0+255),b
 38068  011B04  0100               	movlb	0	; () banked
 38069  011B06  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38070  011B08  0D01               	mullw	1
 38071  011B0A  0E78               	movlw	low _ReceivedDataBuffer
 38072  011B0C  24F3               	addwf	prodl,w,c
 38073  011B0E  6ED9               	movwf	fsr2l,c
 38074  011B10  0E04               	movlw	high _ReceivedDataBuffer
 38075  011B12  20F4               	addwfc	prodh,w,c
 38076  011B14  6EDA               	movwf	fsr2h,c
 38077  011B16  50DF               	movf	indf2,w,c
 38078  011B18  EC0B  F0B6         	call	__parse_command_long
 38079                           
 38080                           ;app_device_custom_hid.c: 250: idx += 2;
 38081  011B1C  0E02               	movlw	2
 38082  011B1E  D061               	goto	L42
 38083  011B20                     l22258:
 38084                           
 38085                           ; BSR set to: 0
 38086                           ;app_device_custom_hid.c: 253: _parse_command_calibration(ReceivedDataBuffer[idx], Recei
      +                          vedDataBuffer[idx+1], ReceivedDataBuffer[idx+2], ReceivedDataBuffer[idx+3], ReceivedData
      +                          Buffer[idx+4]);
 38087  011B20  0100               	movlb	0	; () banked
 38088  011B22  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38089  011B24  0100               	movlb	0	; () banked
 38090  011B26  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 38091  011B28  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 38092  011B2A  0E01               	movlw	1
 38093  011B2C  0100               	movlb	0	; () banked
 38094  011B2E  278C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),f,b
 38095  011B30  0E00               	movlw	0
 38096  011B32  238D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),f,b
 38097  011B34  0E78               	movlw	low _ReceivedDataBuffer
 38098  011B36  0100               	movlb	0	; () banked
 38099  011B38  258C               	addwf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 38100  011B3A  6ED9               	movwf	fsr2l,c
 38101  011B3C  0E04               	movlw	high _ReceivedDataBuffer
 38102  011B3E  0100               	movlb	0	; () banked
 38103  011B40  218D               	addwfc	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 38104  011B42  6EDA               	movwf	fsr2h,c
 38105  011B44  50DF               	movf	indf2,w,c
 38106  011B46  0100               	movlb	0	; () banked
 38107  011B48  6F63               	movwf	__parse_command_calibration@item& (0+255),b
 38108  011B4A  0100               	movlb	0	; () banked
 38109  011B4C  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38110  011B4E  0100               	movlb	0	; () banked
 38111  011B50  6F8E               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 38112  011B52  6B8F               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 38113  011B54  0E02               	movlw	2
 38114  011B56  0100               	movlb	0	; () banked
 38115  011B58  278E               	addwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),f,b
 38116  011B5A  0E00               	movlw	0
 38117  011B5C  238F               	addwfc	(??_APP_DeviceCustomHIDTasks+3)& (0+255),f,b
 38118  011B5E  0E78               	movlw	low _ReceivedDataBuffer
 38119  011B60  0100               	movlb	0	; () banked
 38120  011B62  258E               	addwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),w,b
 38121  011B64  6ED9               	movwf	fsr2l,c
 38122  011B66  0E04               	movlw	high _ReceivedDataBuffer
 38123  011B68  0100               	movlb	0	; () banked
 38124  011B6A  218F               	addwfc	(??_APP_DeviceCustomHIDTasks+3)& (0+255),w,b
 38125  011B6C  6EDA               	movwf	fsr2h,c
 38126  011B6E  50DF               	movf	indf2,w,c
 38127  011B70  0100               	movlb	0	; () banked
 38128  011B72  6F64               	movwf	__parse_command_calibration@dat1& (0+255),b
 38129  011B74  0100               	movlb	0	; () banked
 38130  011B76  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38131  011B78  0100               	movlb	0	; () banked
 38132  011B7A  6F90               	movwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),b
 38133  011B7C  6B91               	clrf	(??_APP_DeviceCustomHIDTasks+5)& (0+255),b
 38134  011B7E  0E03               	movlw	3
 38135  011B80  0100               	movlb	0	; () banked
 38136  011B82  2790               	addwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),f,b
 38137  011B84  0E00               	movlw	0
 38138  011B86  2391               	addwfc	(??_APP_DeviceCustomHIDTasks+5)& (0+255),f,b
 38139  011B88  0E78               	movlw	low _ReceivedDataBuffer
 38140  011B8A  0100               	movlb	0	; () banked
 38141  011B8C  2590               	addwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),w,b
 38142  011B8E  6ED9               	movwf	fsr2l,c
 38143  011B90  0E04               	movlw	high _ReceivedDataBuffer
 38144  011B92  0100               	movlb	0	; () banked
 38145  011B94  2191               	addwfc	(??_APP_DeviceCustomHIDTasks+5)& (0+255),w,b
 38146  011B96  6EDA               	movwf	fsr2h,c
 38147  011B98  50DF               	movf	indf2,w,c
 38148  011B9A  0100               	movlb	0	; () banked
 38149  011B9C  6F65               	movwf	__parse_command_calibration@dat2& (0+255),b
 38150  011B9E  0100               	movlb	0	; () banked
 38151  011BA0  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38152  011BA2  0100               	movlb	0	; () banked
 38153  011BA4  6F92               	movwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),b
 38154  011BA6  6B93               	clrf	(??_APP_DeviceCustomHIDTasks+7)& (0+255),b
 38155  011BA8  0E04               	movlw	4
 38156  011BAA  0100               	movlb	0	; () banked
 38157  011BAC  2792               	addwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),f,b
 38158  011BAE  0E00               	movlw	0
 38159  011BB0  2393               	addwfc	(??_APP_DeviceCustomHIDTasks+7)& (0+255),f,b
 38160  011BB2  0E78               	movlw	low _ReceivedDataBuffer
 38161  011BB4  0100               	movlb	0	; () banked
 38162  011BB6  2592               	addwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),w,b
 38163  011BB8  6ED9               	movwf	fsr2l,c
 38164  011BBA  0E04               	movlw	high _ReceivedDataBuffer
 38165  011BBC  0100               	movlb	0	; () banked
 38166  011BBE  2193               	addwfc	(??_APP_DeviceCustomHIDTasks+7)& (0+255),w,b
 38167  011BC0  6EDA               	movwf	fsr2h,c
 38168  011BC2  50DF               	movf	indf2,w,c
 38169  011BC4  0100               	movlb	0	; () banked
 38170  011BC6  6F66               	movwf	__parse_command_calibration@dat3& (0+255),b
 38171  011BC8  0100               	movlb	0	; () banked
 38172  011BCA  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38173  011BCC  0D01               	mullw	1
 38174  011BCE  0E78               	movlw	low _ReceivedDataBuffer
 38175  011BD0  24F3               	addwf	prodl,w,c
 38176  011BD2  6ED9               	movwf	fsr2l,c
 38177  011BD4  0E04               	movlw	high _ReceivedDataBuffer
 38178  011BD6  20F4               	addwfc	prodh,w,c
 38179  011BD8  6EDA               	movwf	fsr2h,c
 38180  011BDA  50DF               	movf	indf2,w,c
 38181  011BDC  ECDD  F0A9         	call	__parse_command_calibration
 38182                           
 38183                           ;app_device_custom_hid.c: 254: idx += 5;
 38184  011BE0  0E05               	movlw	5
 38185  011BE2                     L42:
 38186  011BE2  0100               	movlb	0	; () banked
 38187  011BE4  2796               	addwf	APP_DeviceCustomHIDTasks@idx& (0+255),f,b
 38188                           
 38189                           ;app_device_custom_hid.c: 255: break;
 38190  011BE6  D023               	goto	l22266
 38191  011BE8                     l22262:
 38192                           
 38193                           ; BSR set to: 0
 38194                           ;app_device_custom_hid.c: 257: idx = 65;
 38195  011BE8  0E41               	movlw	65
 38196  011BEA                     L41:
 38197  011BEA  0100               	movlb	0	; () banked
 38198  011BEC  6F96               	movwf	APP_DeviceCustomHIDTasks@idx& (0+255),b
 38199                           
 38200                           ;app_device_custom_hid.c: 258: }
 38201  011BEE  D01F               	goto	l22266
 38202  011BF0                     l22264:
 38203                           
 38204                           ; BSR set to: 0
 38205  011BF0  0100               	movlb	0	; () banked
 38206  011BF2  5196               	movf	APP_DeviceCustomHIDTasks@idx& (0+255),w,b
 38207  011BF4  0D01               	mullw	1
 38208  011BF6  0E78               	movlw	low _ReceivedDataBuffer
 38209  011BF8  24F3               	addwf	prodl,w,c
 38210  011BFA  6ED9               	movwf	fsr2l,c
 38211  011BFC  0E04               	movlw	high _ReceivedDataBuffer
 38212  011BFE  20F4               	addwfc	prodh,w,c
 38213  011C00  6EDA               	movwf	fsr2h,c
 38214  011C02  50DF               	movf	indf2,w,c
 38215  011C04  0BF0               	andlw	240
 38216  011C06  0100               	movlb	0	; () banked
 38217  011C08  6F8C               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 38218  011C0A  6B8D               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 38219                           
 38220                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 38221                           ; Switch size 1, requested type "space"
 38222                           ; Number of cases is 1, Range of values is 0 to 0
 38223                           ; switch strategies available:
 38224                           ; Name         Instructions Cycles
 38225                           ; simple_byte            4     3 (average)
 38226                           ;	Chosen strategy is simple_byte
 38227  011C0C  0100               	movlb	0	; () banked
 38228  011C0E  518D               	movf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),w,b
 38229  011C10  0A00               	xorlw	0	; case 0
 38230  011C12  A4D8               	btfss	status,2,c
 38231  011C14  D7E9               	goto	l22262
 38232                           
 38233                           ; BSR set to: 0
 38234                           ; Switch size 1, requested type "space"
 38235                           ; Number of cases is 3, Range of values is 48 to 96
 38236                           ; switch strategies available:
 38237                           ; Name         Instructions Cycles
 38238                           ; simple_byte           10     6 (average)
 38239                           ;	Chosen strategy is simple_byte
 38240  011C16  0100               	movlb	0	; () banked
 38241  011C18  518C               	movf	??_APP_DeviceCustomHIDTasks& (0+255),w,b
 38242  011C1A  0A30               	xorlw	48	; case 48
 38243  011C1C  B4D8               	btfsc	status,2,c
 38244  011C1E  D74E               	goto	l22250
 38245  011C20  0A70               	xorlw	112	; case 64
 38246  011C22  B4D8               	btfsc	status,2,c
 38247  011C24  D75A               	goto	l22254
 38248  011C26  0A20               	xorlw	32	; case 96
 38249  011C28  B4D8               	btfsc	status,2,c
 38250  011C2A  D77A               	goto	l22258
 38251  011C2C  D7DD               	goto	l22262
 38252  011C2E                     l22266:
 38253                           
 38254                           ; BSR set to: 0
 38255  011C2E  0E3D               	movlw	61
 38256  011C30  0100               	movlb	0	; () banked
 38257  011C32  6596               	cpfsgt	APP_DeviceCustomHIDTasks@idx& (0+255),b
 38258  011C34  D7DD               	goto	l22264
 38259                           
 38260                           ; BSR set to: 0
 38261                           ;app_device_custom_hid.c: 259: }
 38262                           ;app_device_custom_hid.c: 263: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 38263                           
 38264                           ; BSR set to: 0
 38265  011C36  0E00               	movlw	0
 38266  011C38  0100               	movlb	0	; () banked
 38267  011C3A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38268  011C3C  0E78               	movlw	low _ReceivedDataBuffer
 38269  011C3E  0100               	movlb	0	; () banked
 38270  011C40  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38271  011C42  0E04               	movlw	high _ReceivedDataBuffer
 38272  011C44  0100               	movlb	0	; () banked
 38273  011C46  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38274  011C48  0E40               	movlw	64
 38275  011C4A  0100               	movlb	0	; () banked
 38276  011C4C  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38277  011C4E  0E01               	movlw	1
 38278  011C50  EC69  F0AC         	call	_USBTransferOnePacket
 38279  011C54  C060  F1E9         	movff	?_USBTransferOnePacket,_USBOutHandle
 38280  011C58  C061  F1EA         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 38281  011C5C  0012               	return	
 38282  011C5E                     __end_of_APP_DeviceCustomHIDTasks:
 38283                           	opt stack 0
 38284                           tosu	equ	0xFFF
 38285                           tosh	equ	0xFFE
 38286                           tosl	equ	0xFFD
 38287                           pclath	equ	0xFFA
 38288                           tblptru	equ	0xFF8
 38289                           tblptrh	equ	0xFF7
 38290                           tblptrl	equ	0xFF6
 38291                           tablat	equ	0xFF5
 38292                           prodh	equ	0xFF4
 38293                           prodl	equ	0xFF3
 38294                           intcon	equ	0xFF2
 38295                           intcon2	equ	0xFF1
 38296                           intcon3	equ	0xFF0
 38297                           postinc0	equ	0xFEE
 38298                           wreg	equ	0xFE8
 38299                           indf1	equ	0xFE7
 38300                           postinc1	equ	0xFE6
 38301                           postdec1	equ	0xFE5
 38302                           plusw1	equ	0xFE3
 38303                           fsr1h	equ	0xFE2
 38304                           fsr1l	equ	0xFE1
 38305                           indf2	equ	0xFDF
 38306                           postinc2	equ	0xFDE
 38307                           postdec2	equ	0xFDD
 38308                           plusw2	equ	0xFDB
 38309                           fsr2h	equ	0xFDA
 38310                           fsr2l	equ	0xFD9
 38311                           status	equ	0xFD8
 38312                           
 38313 ;; *************** function __parse_command_short *****************
 38314 ;; Defined at:
 38315 ;;		line 398 in file "app_device_custom_hid.c"
 38316 ;; Parameters:    Size  Location     Type
 38317 ;;  cmd             1    wreg     unsigned char 
 38318 ;; Auto vars:     Size  Location     Type
 38319 ;;  cmd             1   43[BANK0 ] unsigned char 
 38320 ;; Return value:  Size  Location     Type
 38321 ;;                  1    wreg      void 
 38322 ;; Registers used:
 38323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38324 ;; Tracked objects:
 38325 ;;		On entry : 0/0
 38326 ;;		On exit  : 0/0
 38327 ;;		Unchanged: 0/0
 38328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38330 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38332 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38333 ;;Total ram usage:        1 bytes
 38334 ;; Hardware stack levels used:    1
 38335 ;; Hardware stack levels required when called:   14
 38336 ;; This function calls:
 38337 ;;		_rtcc_write_eeprom
 38338 ;;		_system_output_off
 38339 ;;		_system_output_on
 38340 ;; This function is called by:
 38341 ;;		_APP_DeviceCustomHIDTasks
 38342 ;; This function uses a non-reentrant model
 38343 ;;
 38344                           
 38345                           	psect	text166
 38346  016D02                     __ptext166:
 38347                           	opt stack 0
 38348  016D02                     __parse_command_short:
 38349                           	opt stack 15
 38350                           
 38351                           ;incstack = 0
 38352                           ;__parse_command_short@cmd stored from wreg
 38353  016D02  0100               	movlb	0	; () banked
 38354  016D04  6F8B               	movwf	__parse_command_short@cmd& (0+255),b
 38355                           
 38356                           ;app_device_custom_hid.c: 400: switch(cmd)
 38357  016D06  D03C               	goto	l20340
 38358  016D08                     l20306:
 38359                           
 38360                           ;app_device_custom_hid.c: 403: system_output_off(OUTPUT_1);
 38361  016D08  0E01               	movlw	1
 38362  016D0A  EC35  F0CD         	call	_system_output_off
 38363                           
 38364                           ;app_device_custom_hid.c: 404: break;
 38365  016D0E  0012               	return	
 38366  016D10                     l20308:
 38367                           
 38368                           ;app_device_custom_hid.c: 406: system_output_on(OUTPUT_1);
 38369  016D10  0E01               	movlw	1
 38370  016D12  EC83  F0CE         	call	_system_output_on
 38371                           
 38372                           ;app_device_custom_hid.c: 407: break;
 38373  016D16  0012               	return	
 38374  016D18                     l20310:
 38375                           
 38376                           ;app_device_custom_hid.c: 409: system_output_off(OUTPUT_2);
 38377  016D18  0E02               	movlw	2
 38378  016D1A  EC35  F0CD         	call	_system_output_off
 38379                           
 38380                           ;app_device_custom_hid.c: 410: break;
 38381  016D1E  0012               	return	
 38382  016D20                     l20312:
 38383                           
 38384                           ;app_device_custom_hid.c: 412: system_output_on(OUTPUT_2);
 38385  016D20  0E02               	movlw	2
 38386  016D22  EC83  F0CE         	call	_system_output_on
 38387                           
 38388                           ;app_device_custom_hid.c: 413: break;
 38389  016D26  0012               	return	
 38390  016D28                     l20314:
 38391                           
 38392                           ;app_device_custom_hid.c: 415: system_output_off(OUTPUT_3);
 38393  016D28  0E04               	movlw	4
 38394  016D2A  EC35  F0CD         	call	_system_output_off
 38395                           
 38396                           ;app_device_custom_hid.c: 416: break;
 38397  016D2E  0012               	return	
 38398  016D30                     l20316:
 38399                           
 38400                           ;app_device_custom_hid.c: 418: system_output_on(OUTPUT_3);
 38401  016D30  0E04               	movlw	4
 38402  016D32  EC83  F0CE         	call	_system_output_on
 38403                           
 38404                           ;app_device_custom_hid.c: 419: break;
 38405  016D36  0012               	return	
 38406  016D38                     l20318:
 38407                           
 38408                           ;app_device_custom_hid.c: 421: system_output_off(OUTPUT_4);
 38409  016D38  0E08               	movlw	8
 38410  016D3A  EC35  F0CD         	call	_system_output_off
 38411                           
 38412                           ;app_device_custom_hid.c: 422: break;
 38413  016D3E  0012               	return	
 38414  016D40                     l20320:
 38415                           
 38416                           ;app_device_custom_hid.c: 424: system_output_on(OUTPUT_4);
 38417  016D40  0E08               	movlw	8
 38418  016D42  EC83  F0CE         	call	_system_output_on
 38419                           
 38420                           ;app_device_custom_hid.c: 425: break;
 38421  016D46  0012               	return	
 38422  016D48                     l20322:
 38423                           
 38424                           ;app_device_custom_hid.c: 427: system_output_off(OUTPUT_USB);
 38425  016D48  0E10               	movlw	16
 38426  016D4A  EC35  F0CD         	call	_system_output_off
 38427                           
 38428                           ;app_device_custom_hid.c: 428: break;
 38429  016D4E  0012               	return	
 38430  016D50                     l20324:
 38431                           
 38432                           ;app_device_custom_hid.c: 430: system_output_on(OUTPUT_USB);
 38433  016D50  0E10               	movlw	16
 38434  016D52  EC83  F0CE         	call	_system_output_on
 38435                           
 38436                           ;app_device_custom_hid.c: 431: break;
 38437  016D56  0012               	return	
 38438  016D58                     l20326:
 38439                           
 38440                           ;app_device_custom_hid.c: 433: system_output_off(OUTPUT_FAN);
 38441  016D58  0E20               	movlw	32
 38442  016D5A  EC35  F0CD         	call	_system_output_off
 38443                           
 38444                           ;app_device_custom_hid.c: 434: break;
 38445  016D5E  0012               	return	
 38446  016D60                     l20328:
 38447                           
 38448                           ;app_device_custom_hid.c: 436: system_output_on(OUTPUT_FAN);
 38449  016D60  0E20               	movlw	32
 38450  016D62  EC83  F0CE         	call	_system_output_on
 38451                           
 38452                           ;app_device_custom_hid.c: 437: break;
 38453  016D66  0012               	return	
 38454  016D68                     l20330:
 38455                           
 38456                           ;app_device_custom_hid.c: 439: --os.encoderCount;
 38457  016D68  0102               	movlb	2	; () banked
 38458  016D6A  0706               	decf	(_os+6)& (0+255),f,b	;volatile
 38459                           
 38460                           ;app_device_custom_hid.c: 440: break;
 38461  016D6C  0012               	return	
 38462  016D6E                     l20332:
 38463                           
 38464                           ;app_device_custom_hid.c: 442: ++os.encoderCount;
 38465  016D6E  0102               	movlb	2	; () banked
 38466  016D70  2B06               	incf	(_os+6)& (0+255),f,b	;volatile
 38467                           
 38468                           ;app_device_custom_hid.c: 443: break;
 38469  016D72  0012               	return	
 38470  016D74                     l20334:
 38471                           
 38472                           ;app_device_custom_hid.c: 445: ++os.buttonCount;
 38473  016D74  0102               	movlb	2	; () banked
 38474  016D76  2B07               	incf	(_os+7)& (0+255),f,b	;volatile
 38475                           
 38476                           ;app_device_custom_hid.c: 446: break;
 38477  016D78  0012               	return	
 38478  016D7A                     l20336:
 38479                           
 38480                           ;app_device_custom_hid.c: 448: rtcc_write_eeprom();
 38481  016D7A  EC33  F0CE         	call	_rtcc_write_eeprom	;wreg free
 38482                           
 38483                           ;app_device_custom_hid.c: 450: }
 38484                           
 38485                           ;app_device_custom_hid.c: 449: break;
 38486  016D7E  0012               	return	
 38487  016D80                     l20340:
 38488  016D80  0100               	movlb	0	; () banked
 38489  016D82  518B               	movf	__parse_command_short@cmd& (0+255),w,b
 38490                           
 38491                           ; Switch size 1, requested type "space"
 38492                           ; Number of cases is 16, Range of values is 48 to 63
 38493                           ; switch strategies available:
 38494                           ; Name         Instructions Cycles
 38495                           ; simple_byte           49    25 (average)
 38496                           ;	Chosen strategy is simple_byte
 38497  016D84  0A30               	xorlw	48	; case 48
 38498  016D86  B4D8               	btfsc	status,2,c
 38499  016D88  D7BF               	goto	l20306
 38500  016D8A  0A01               	xorlw	1	; case 49
 38501  016D8C  B4D8               	btfsc	status,2,c
 38502  016D8E  D7C0               	goto	l20308
 38503  016D90  0A03               	xorlw	3	; case 50
 38504  016D92  B4D8               	btfsc	status,2,c
 38505  016D94  D7C1               	goto	l20310
 38506  016D96  0A01               	xorlw	1	; case 51
 38507  016D98  B4D8               	btfsc	status,2,c
 38508  016D9A  D7C2               	goto	l20312
 38509  016D9C  0A07               	xorlw	7	; case 52
 38510  016D9E  B4D8               	btfsc	status,2,c
 38511  016DA0  D7C3               	goto	l20314
 38512  016DA2  0A01               	xorlw	1	; case 53
 38513  016DA4  B4D8               	btfsc	status,2,c
 38514  016DA6  D7C4               	goto	l20316
 38515  016DA8  0A03               	xorlw	3	; case 54
 38516  016DAA  B4D8               	btfsc	status,2,c
 38517  016DAC  D7C5               	goto	l20318
 38518  016DAE  0A01               	xorlw	1	; case 55
 38519  016DB0  B4D8               	btfsc	status,2,c
 38520  016DB2  D7C6               	goto	l20320
 38521  016DB4  0A0F               	xorlw	15	; case 56
 38522  016DB6  B4D8               	btfsc	status,2,c
 38523  016DB8  D7C7               	goto	l20322
 38524  016DBA  0A01               	xorlw	1	; case 57
 38525  016DBC  B4D8               	btfsc	status,2,c
 38526  016DBE  D7C8               	goto	l20324
 38527  016DC0  0A03               	xorlw	3	; case 58
 38528  016DC2  B4D8               	btfsc	status,2,c
 38529  016DC4  D7C9               	goto	l20326
 38530  016DC6  0A01               	xorlw	1	; case 59
 38531  016DC8  B4D8               	btfsc	status,2,c
 38532  016DCA  D7CA               	goto	l20328
 38533  016DCC  0A07               	xorlw	7	; case 60
 38534  016DCE  B4D8               	btfsc	status,2,c
 38535  016DD0  D7CB               	goto	l20330
 38536  016DD2  0A01               	xorlw	1	; case 61
 38537  016DD4  B4D8               	btfsc	status,2,c
 38538  016DD6  D7CB               	goto	l20332
 38539  016DD8  0A03               	xorlw	3	; case 62
 38540  016DDA  B4D8               	btfsc	status,2,c
 38541  016DDC  D7CB               	goto	l20334
 38542  016DDE  0A01               	xorlw	1	; case 63
 38543  016DE0  A4D8               	btfss	status,2,c
 38544  016DE2  0012               	return	
 38545  016DE4  D7CA               	goto	l20336
 38546  016DE6                     __end_of__parse_command_short:
 38547                           	opt stack 0
 38548                           tosu	equ	0xFFF
 38549                           tosh	equ	0xFFE
 38550                           tosl	equ	0xFFD
 38551                           pclath	equ	0xFFA
 38552                           tblptru	equ	0xFF8
 38553                           tblptrh	equ	0xFF7
 38554                           tblptrl	equ	0xFF6
 38555                           tablat	equ	0xFF5
 38556                           prodh	equ	0xFF4
 38557                           prodl	equ	0xFF3
 38558                           intcon	equ	0xFF2
 38559                           intcon2	equ	0xFF1
 38560                           intcon3	equ	0xFF0
 38561                           postinc0	equ	0xFEE
 38562                           wreg	equ	0xFE8
 38563                           indf1	equ	0xFE7
 38564                           postinc1	equ	0xFE6
 38565                           postdec1	equ	0xFE5
 38566                           plusw1	equ	0xFE3
 38567                           fsr1h	equ	0xFE2
 38568                           fsr1l	equ	0xFE1
 38569                           indf2	equ	0xFDF
 38570                           postinc2	equ	0xFDE
 38571                           postdec2	equ	0xFDD
 38572                           plusw2	equ	0xFDB
 38573                           fsr2h	equ	0xFDA
 38574                           fsr2l	equ	0xFD9
 38575                           status	equ	0xFD8
 38576                           
 38577 ;; *************** function _system_output_on *****************
 38578 ;; Defined at:
 38579 ;;		line 507 in file "os.c"
 38580 ;; Parameters:    Size  Location     Type
 38581 ;;  output          1    wreg     enum E8129
 38582 ;; Auto vars:     Size  Location     Type
 38583 ;;  output          1    0[BANK0 ] enum E8129
 38584 ;; Return value:  Size  Location     Type
 38585 ;;                  1    wreg      void 
 38586 ;; Registers used:
 38587 ;;		wreg, status,2, status,0
 38588 ;; Tracked objects:
 38589 ;;		On entry : 0/0
 38590 ;;		On exit  : 0/0
 38591 ;;		Unchanged: 0/0
 38592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38594 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38596 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38597 ;;Total ram usage:        1 bytes
 38598 ;; Hardware stack levels used:    1
 38599 ;; Hardware stack levels required when called:   10
 38600 ;; This function calls:
 38601 ;;		Nothing
 38602 ;; This function is called by:
 38603 ;;		__parse_command_short
 38604 ;;		_system_output_toggle
 38605 ;;		__ui_encoder
 38606 ;; This function uses a non-reentrant model
 38607 ;;
 38608                           
 38609                           	psect	text167
 38610  019D06                     __ptext167:
 38611                           	opt stack 0
 38612  019D06                     _system_output_on:
 38613                           	opt stack 17
 38614                           
 38615                           ;incstack = 0
 38616                           ;system_output_on@output stored from wreg
 38617  019D06  0100               	movlb	0	; () banked
 38618  019D08  6F60               	movwf	system_output_on@output& (0+255),b
 38619                           
 38620                           ;os.c: 510: os.outputs |= output;
 38621  019D0A  0100               	movlb	0	; () banked
 38622  019D0C  5160               	movf	system_output_on@output& (0+255),w,b
 38623  019D0E  0102               	movlb	2	; () banked
 38624  019D10  1305               	iorwf	(_os+5)& (0+255),f,b	;volatile
 38625                           
 38626                           ;os.c: 513: switch(output)
 38627  019D12  D00E               	goto	l18778
 38628  019D14                     l1407:
 38629                           
 38630                           ; BSR set to: 0
 38631                           ;os.c: 516: LATCbits.LC7 = 1;
 38632  019D14  8E8B               	bsf	3979,7,c	;volatile
 38633                           
 38634                           ;os.c: 517: LATEbits.LE2 = 0;
 38635  019D16  948D               	bcf	3981,2,c	;volatile
 38636                           
 38637                           ;os.c: 518: break;
 38638  019D18  0012               	return	
 38639  019D1A                     l1409:
 38640                           
 38641                           ; BSR set to: 0
 38642                           ;os.c: 520: LATCbits.LC7 = 1;
 38643  019D1A  8E8B               	bsf	3979,7,c	;volatile
 38644                           
 38645                           ;os.c: 521: LATEbits.LE1 = 0;
 38646  019D1C  928D               	bcf	3981,1,c	;volatile
 38647                           
 38648                           ;os.c: 522: break;
 38649  019D1E  0012               	return	
 38650  019D20                     l1410:
 38651                           
 38652                           ; BSR set to: 0
 38653                           ;os.c: 524: LATCbits.LC7 = 1;
 38654  019D20  8E8B               	bsf	3979,7,c	;volatile
 38655                           
 38656                           ;os.c: 525: LATEbits.LE0 = 0;
 38657  019D22  908D               	bcf	3981,0,c	;volatile
 38658                           
 38659                           ;os.c: 526: break;
 38660  019D24  0012               	return	
 38661  019D26                     l1411:
 38662                           
 38663                           ; BSR set to: 0
 38664                           ;os.c: 528: LATCbits.LC7 = 1;
 38665  019D26  8E8B               	bsf	3979,7,c	;volatile
 38666                           
 38667                           ;os.c: 529: LATAbits.LA5 = 0;
 38668  019D28  9A89               	bcf	3977,5,c	;volatile
 38669                           
 38670                           ;os.c: 530: break;
 38671  019D2A  0012               	return	
 38672  019D2C                     l1412:
 38673                           
 38674                           ; BSR set to: 0
 38675                           ;os.c: 532: LATDbits.LD3 = 1;
 38676  019D2C  868C               	bsf	3980,3,c	;volatile
 38677                           
 38678                           ; BSR set to: 0
 38679                           ;os.c: 534: }
 38680                           
 38681                           ;os.c: 533: break;
 38682  019D2E  0012               	return	
 38683  019D30                     l18778:
 38684  019D30  0100               	movlb	0	; () banked
 38685  019D32  5160               	movf	system_output_on@output& (0+255),w,b
 38686                           
 38687                           ; Switch size 1, requested type "space"
 38688                           ; Number of cases is 5, Range of values is 1 to 16
 38689                           ; switch strategies available:
 38690                           ; Name         Instructions Cycles
 38691                           ; simple_byte           16     9 (average)
 38692                           ;	Chosen strategy is simple_byte
 38693  019D34  0A01               	xorlw	1	; case 1
 38694  019D36  B4D8               	btfsc	status,2,c
 38695  019D38  D7ED               	goto	l1407
 38696  019D3A  0A03               	xorlw	3	; case 2
 38697  019D3C  B4D8               	btfsc	status,2,c
 38698  019D3E  D7ED               	goto	l1409
 38699  019D40  0A06               	xorlw	6	; case 4
 38700  019D42  B4D8               	btfsc	status,2,c
 38701  019D44  D7ED               	goto	l1410
 38702  019D46  0A0C               	xorlw	12	; case 8
 38703  019D48  B4D8               	btfsc	status,2,c
 38704  019D4A  D7ED               	goto	l1411
 38705  019D4C  0A18               	xorlw	24	; case 16
 38706  019D4E  A4D8               	btfss	status,2,c
 38707  019D50  0012               	return	
 38708  019D52  D7EC               	goto	l1412
 38709  019D54                     __end_of_system_output_on:
 38710                           	opt stack 0
 38711                           tosu	equ	0xFFF
 38712                           tosh	equ	0xFFE
 38713                           tosl	equ	0xFFD
 38714                           pclath	equ	0xFFA
 38715                           tblptru	equ	0xFF8
 38716                           tblptrh	equ	0xFF7
 38717                           tblptrl	equ	0xFF6
 38718                           tablat	equ	0xFF5
 38719                           prodh	equ	0xFF4
 38720                           prodl	equ	0xFF3
 38721                           intcon	equ	0xFF2
 38722                           intcon2	equ	0xFF1
 38723                           intcon3	equ	0xFF0
 38724                           postinc0	equ	0xFEE
 38725                           wreg	equ	0xFE8
 38726                           indf1	equ	0xFE7
 38727                           postinc1	equ	0xFE6
 38728                           postdec1	equ	0xFE5
 38729                           plusw1	equ	0xFE3
 38730                           fsr1h	equ	0xFE2
 38731                           fsr1l	equ	0xFE1
 38732                           indf2	equ	0xFDF
 38733                           postinc2	equ	0xFDE
 38734                           postdec2	equ	0xFDD
 38735                           plusw2	equ	0xFDB
 38736                           fsr2h	equ	0xFDA
 38737                           fsr2l	equ	0xFD9
 38738                           status	equ	0xFD8
 38739                           
 38740 ;; *************** function _system_output_off *****************
 38741 ;; Defined at:
 38742 ;;		line 537 in file "os.c"
 38743 ;; Parameters:    Size  Location     Type
 38744 ;;  output          1    wreg     enum E8129
 38745 ;; Auto vars:     Size  Location     Type
 38746 ;;  output          1    1[BANK0 ] enum E8129
 38747 ;; Return value:  Size  Location     Type
 38748 ;;                  1    wreg      void 
 38749 ;; Registers used:
 38750 ;;		wreg, status,2, status,0
 38751 ;; Tracked objects:
 38752 ;;		On entry : 0/0
 38753 ;;		On exit  : 0/0
 38754 ;;		Unchanged: 0/0
 38755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38757 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38758 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38759 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38760 ;;Total ram usage:        2 bytes
 38761 ;; Hardware stack levels used:    1
 38762 ;; Hardware stack levels required when called:   10
 38763 ;; This function calls:
 38764 ;;		Nothing
 38765 ;; This function is called by:
 38766 ;;		_main
 38767 ;;		__parse_command_short
 38768 ;;		_system_output_toggle
 38769 ;;		__ui_encoder
 38770 ;; This function uses a non-reentrant model
 38771 ;;
 38772                           
 38773                           	psect	text168
 38774  019A6A                     __ptext168:
 38775                           	opt stack 0
 38776  019A6A                     _system_output_off:
 38777                           	opt stack 17
 38778                           
 38779                           ; BSR set to: 0
 38780                           ;incstack = 0
 38781                           ;system_output_off@output stored from wreg
 38782  019A6A  0100               	movlb	0	; () banked
 38783  019A6C  6F61               	movwf	system_output_off@output& (0+255),b
 38784                           
 38785                           ;os.c: 540: os.outputs &= (~output);
 38786  019A6E  0100               	movlb	0	; () banked
 38787  019A70  5161               	movf	system_output_off@output& (0+255),w,b
 38788  019A72  0AFF               	xorlw	255
 38789  019A74  0102               	movlb	2	; () banked
 38790  019A76  1705               	andwf	(_os+5)& (0+255),f,b	;volatile
 38791                           
 38792                           ;os.c: 543: switch(output)
 38793  019A78  D00A               	goto	l18768
 38794  019A7A                     l1417:
 38795                           
 38796                           ; BSR set to: 0
 38797                           ;os.c: 546: LATEbits.LE2 = 1;
 38798  019A7A  848D               	bsf	3981,2,c	;volatile
 38799                           
 38800                           ;os.c: 547: break;
 38801  019A7C  D019               	goto	l18770
 38802  019A7E                     l1419:
 38803                           
 38804                           ; BSR set to: 0
 38805                           ;os.c: 549: LATEbits.LE1 = 1;
 38806  019A7E  828D               	bsf	3981,1,c	;volatile
 38807                           
 38808                           ;os.c: 550: break;
 38809  019A80  D017               	goto	l18770
 38810  019A82                     l1420:
 38811                           
 38812                           ; BSR set to: 0
 38813                           ;os.c: 552: LATEbits.LE0 = 1;
 38814  019A82  808D               	bsf	3981,0,c	;volatile
 38815                           
 38816                           ;os.c: 553: break;
 38817  019A84  D015               	goto	l18770
 38818  019A86                     l1421:
 38819                           
 38820                           ; BSR set to: 0
 38821                           ;os.c: 555: LATAbits.LA5 = 1;
 38822  019A86  8A89               	bsf	3977,5,c	;volatile
 38823                           
 38824                           ;os.c: 556: break;
 38825  019A88  D013               	goto	l18770
 38826  019A8A                     l1422:
 38827                           
 38828                           ; BSR set to: 0
 38829                           ;os.c: 558: LATDbits.LD3 = 0;
 38830  019A8A  968C               	bcf	3980,3,c	;volatile
 38831                           
 38832                           ; BSR set to: 0
 38833                           ;os.c: 560: }
 38834                           
 38835                           ;os.c: 559: break;
 38836  019A8C  D011               	goto	l18770
 38837  019A8E                     l18768:
 38838  019A8E  0100               	movlb	0	; () banked
 38839  019A90  5161               	movf	system_output_off@output& (0+255),w,b
 38840                           
 38841                           ; Switch size 1, requested type "space"
 38842                           ; Number of cases is 5, Range of values is 1 to 16
 38843                           ; switch strategies available:
 38844                           ; Name         Instructions Cycles
 38845                           ; simple_byte           16     9 (average)
 38846                           ;	Chosen strategy is simple_byte
 38847  019A92  0A01               	xorlw	1	; case 1
 38848  019A94  B4D8               	btfsc	status,2,c
 38849  019A96  D7F1               	goto	l1417
 38850  019A98  0A03               	xorlw	3	; case 2
 38851  019A9A  B4D8               	btfsc	status,2,c
 38852  019A9C  D7F0               	goto	l1419
 38853  019A9E  0A06               	xorlw	6	; case 4
 38854  019AA0  B4D8               	btfsc	status,2,c
 38855  019AA2  D7EF               	goto	l1420
 38856  019AA4  0A0C               	xorlw	12	; case 8
 38857  019AA6  B4D8               	btfsc	status,2,c
 38858  019AA8  D7EE               	goto	l1421
 38859  019AAA  0A18               	xorlw	24	; case 16
 38860  019AAC  B4D8               	btfsc	status,2,c
 38861  019AAE  D7ED               	goto	l1422
 38862  019AB0                     l18770:
 38863                           
 38864                           ; BSR set to: 0
 38865                           ;os.c: 563: if(!(os.outputs&(OUTPUT_1 | OUTPUT_2 | OUTPUT_3 | OUTPUT_4)))
 38866  019AB0  C205  F060         	movff	_os+5,??_system_output_off	;volatile
 38867  019AB4  0E0F               	movlw	15
 38868  019AB6  0100               	movlb	0	; () banked
 38869  019AB8  1760               	andwf	??_system_output_off& (0+255),f,b
 38870  019ABA  A4D8               	btfss	status,2,c
 38871  019ABC  0012               	return	
 38872                           
 38873                           ; BSR set to: 0
 38874                           ;os.c: 564: {
 38875                           ;os.c: 565: LATCbits.LC7 = 0;
 38876  019ABE  9E8B               	bcf	3979,7,c	;volatile
 38877  019AC0  0012               	return	
 38878  019AC2                     __end_of_system_output_off:
 38879                           	opt stack 0
 38880                           tosu	equ	0xFFF
 38881                           tosh	equ	0xFFE
 38882                           tosl	equ	0xFFD
 38883                           pclath	equ	0xFFA
 38884                           tblptru	equ	0xFF8
 38885                           tblptrh	equ	0xFF7
 38886                           tblptrl	equ	0xFF6
 38887                           tablat	equ	0xFF5
 38888                           prodh	equ	0xFF4
 38889                           prodl	equ	0xFF3
 38890                           intcon	equ	0xFF2
 38891                           intcon2	equ	0xFF1
 38892                           intcon3	equ	0xFF0
 38893                           postinc0	equ	0xFEE
 38894                           wreg	equ	0xFE8
 38895                           indf1	equ	0xFE7
 38896                           postinc1	equ	0xFE6
 38897                           postdec1	equ	0xFE5
 38898                           plusw1	equ	0xFE3
 38899                           fsr1h	equ	0xFE2
 38900                           fsr1l	equ	0xFE1
 38901                           indf2	equ	0xFDF
 38902                           postinc2	equ	0xFDE
 38903                           postdec2	equ	0xFDD
 38904                           plusw2	equ	0xFDB
 38905                           fsr2h	equ	0xFDA
 38906                           fsr2l	equ	0xFD9
 38907                           status	equ	0xFD8
 38908                           
 38909 ;; *************** function _rtcc_write_eeprom *****************
 38910 ;; Defined at:
 38911 ;;		line 344 in file "rtcc.c"
 38912 ;; Parameters:    Size  Location     Type
 38913 ;;		None
 38914 ;; Auto vars:     Size  Location     Type
 38915 ;;  date            6   37[BANK0 ] unsigned char [6]
 38916 ;; Return value:  Size  Location     Type
 38917 ;;                  1    wreg      void 
 38918 ;; Registers used:
 38919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38920 ;; Tracked objects:
 38921 ;;		On entry : 0/0
 38922 ;;		On exit  : 0/0
 38923 ;;		Unchanged: 0/0
 38924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38926 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38928 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38929 ;;Total ram usage:        6 bytes
 38930 ;; Hardware stack levels used:    1
 38931 ;; Hardware stack levels required when called:   13
 38932 ;; This function calls:
 38933 ;;		_i2c_eeprom_write
 38934 ;;		_rtcc_get_day
 38935 ;;		_rtcc_get_hours
 38936 ;;		_rtcc_get_minutes
 38937 ;;		_rtcc_get_month
 38938 ;;		_rtcc_get_seconds
 38939 ;;		_rtcc_get_year
 38940 ;; This function is called by:
 38941 ;;		__parse_command_short
 38942 ;;		__ui_encoder
 38943 ;; This function uses a non-reentrant model
 38944 ;;
 38945                           
 38946                           	psect	text169
 38947  019C66                     __ptext169:
 38948                           	opt stack 0
 38949  019C66                     _rtcc_write_eeprom:
 38950                           	opt stack 15
 38951                           
 38952                           ;rtcc.c: 346: uint8_t date[6];
 38953                           ;rtcc.c: 347: date[0] = rtcc_get_year();
 38954                           
 38955                           ; BSR set to: 0
 38956                           ;incstack = 0
 38957  019C66  EC19  F0D5         	call	_rtcc_get_year	;wreg free
 38958  019C6A  0100               	movlb	0	; () banked
 38959  019C6C  6F85               	movwf	rtcc_write_eeprom@date& (0+255),b
 38960                           
 38961                           ;rtcc.c: 348: date[1] = rtcc_get_month();
 38962  019C6E  EC2D  F0D5         	call	_rtcc_get_month	;wreg free
 38963  019C72  0100               	movlb	0	; () banked
 38964  019C74  6F86               	movwf	(rtcc_write_eeprom@date+1)& (0+255),b
 38965                           
 38966                           ;rtcc.c: 349: date[2] = rtcc_get_day();
 38967  019C76  EC4B  F0D5         	call	_rtcc_get_day	;wreg free
 38968  019C7A  0100               	movlb	0	; () banked
 38969  019C7C  6F87               	movwf	(rtcc_write_eeprom@date+2)& (0+255),b
 38970                           
 38971                           ;rtcc.c: 350: date[3] = rtcc_get_hours();
 38972  019C7E  EC41  F0D5         	call	_rtcc_get_hours	;wreg free
 38973  019C82  0100               	movlb	0	; () banked
 38974  019C84  6F88               	movwf	(rtcc_write_eeprom@date+3)& (0+255),b
 38975                           
 38976                           ;rtcc.c: 351: date[4] = rtcc_get_minutes();
 38977  019C86  EC37  F0D5         	call	_rtcc_get_minutes	;wreg free
 38978  019C8A  0100               	movlb	0	; () banked
 38979  019C8C  6F89               	movwf	(rtcc_write_eeprom@date+4)& (0+255),b
 38980                           
 38981                           ;rtcc.c: 352: date[5] = rtcc_get_seconds();
 38982  019C8E  EC23  F0D5         	call	_rtcc_get_seconds	;wreg free
 38983  019C92  0100               	movlb	0	; () banked
 38984  019C94  6F8A               	movwf	(rtcc_write_eeprom@date+5)& (0+255),b
 38985                           
 38986                           ; BSR set to: 0
 38987                           ;rtcc.c: 354: i2c_eeprom_write(0x0040, &date[0], 6);
 38988  019C96  0E00               	movlw	0
 38989  019C98  0100               	movlb	0	; () banked
 38990  019C9A  6F6B               	movwf	(i2c_eeprom_write@address+1)& (0+255),b
 38991  019C9C  0E40               	movlw	64
 38992  019C9E  6F6A               	movwf	i2c_eeprom_write@address& (0+255),b
 38993  019CA0  0E85               	movlw	low rtcc_write_eeprom@date
 38994  019CA2  0100               	movlb	0	; () banked
 38995  019CA4  6F6C               	movwf	i2c_eeprom_write@data& (0+255),b
 38996  019CA6  0E00               	movlw	high rtcc_write_eeprom@date
 38997  019CA8  0100               	movlb	0	; () banked
 38998  019CAA  6F6D               	movwf	(i2c_eeprom_write@data+1)& (0+255),b
 38999  019CAC  0E06               	movlw	6
 39000  019CAE  0100               	movlb	0	; () banked
 39001  019CB0  6F6E               	movwf	i2c_eeprom_write@length& (0+255),b
 39002  019CB2  EC62  F0BE         	call	_i2c_eeprom_write	;wreg free
 39003  019CB6  0012               	return		;funcret
 39004  019CB8                     __end_of_rtcc_write_eeprom:
 39005                           	opt stack 0
 39006                           tosu	equ	0xFFF
 39007                           tosh	equ	0xFFE
 39008                           tosl	equ	0xFFD
 39009                           pclath	equ	0xFFA
 39010                           tblptru	equ	0xFF8
 39011                           tblptrh	equ	0xFF7
 39012                           tblptrl	equ	0xFF6
 39013                           tablat	equ	0xFF5
 39014                           prodh	equ	0xFF4
 39015                           prodl	equ	0xFF3
 39016                           intcon	equ	0xFF2
 39017                           intcon2	equ	0xFF1
 39018                           intcon3	equ	0xFF0
 39019                           postinc0	equ	0xFEE
 39020                           wreg	equ	0xFE8
 39021                           indf1	equ	0xFE7
 39022                           postinc1	equ	0xFE6
 39023                           postdec1	equ	0xFE5
 39024                           plusw1	equ	0xFE3
 39025                           fsr1h	equ	0xFE2
 39026                           fsr1l	equ	0xFE1
 39027                           indf2	equ	0xFDF
 39028                           postinc2	equ	0xFDE
 39029                           postdec2	equ	0xFDD
 39030                           plusw2	equ	0xFDB
 39031                           fsr2h	equ	0xFDA
 39032                           fsr2l	equ	0xFD9
 39033                           status	equ	0xFD8
 39034                           
 39035 ;; *************** function _i2c_eeprom_write *****************
 39036 ;; Defined at:
 39037 ;;		line 542 in file "i2c.c"
 39038 ;; Parameters:    Size  Location     Type
 39039 ;;  address         2   10[BANK0 ] unsigned int 
 39040 ;;  data            2   12[BANK0 ] PTR unsigned char 
 39041 ;;		 -> rtcc_write_eeprom@date(6), _write_calibration@buffer(16), 
 39042 ;;  length          1   14[BANK0 ] unsigned char 
 39043 ;; Auto vars:     Size  Location     Type
 39044 ;;  dat            17   18[BANK0 ] unsigned char [17]
 39045 ;;  cntr            1   36[BANK0 ] unsigned char 
 39046 ;;  slave_addres    1   35[BANK0 ] unsigned char 
 39047 ;; Return value:  Size  Location     Type
 39048 ;;                  1    wreg      void 
 39049 ;; Registers used:
 39050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39051 ;; Tracked objects:
 39052 ;;		On entry : 0/0
 39053 ;;		On exit  : 0/0
 39054 ;;		Unchanged: 0/0
 39055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39056 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39057 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39058 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39059 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39060 ;;Total ram usage:       27 bytes
 39061 ;; Hardware stack levels used:    1
 39062 ;; Hardware stack levels required when called:   12
 39063 ;; This function calls:
 39064 ;;		__i2c_write
 39065 ;;		_i2c_set_frequency
 39066 ;; This function is called by:
 39067 ;;		__write_calibration
 39068 ;;		_rtcc_write_eeprom
 39069 ;; This function uses a non-reentrant model
 39070 ;;
 39071                           
 39072                           	psect	text170
 39073  017CC4                     __ptext170:
 39074                           	opt stack 0
 39075  017CC4                     _i2c_eeprom_write:
 39076                           	opt stack 15
 39077                           
 39078                           ;i2c.c: 544: uint8_t cntr;
 39079                           ;i2c.c: 545: uint8_t slave_address;
 39080                           ;i2c.c: 546: uint8_t dat[17];
 39081                           ;i2c.c: 548: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 39082                           
 39083                           ;incstack = 0
 39084  017CC4  C06A  F06F         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 39085  017CC8  C06B  F070         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 39086  017CCC  0E07               	movlw	7
 39087  017CCE  0100               	movlb	0	; () banked
 39088  017CD0  6F71               	movwf	(??_i2c_eeprom_write+2)& (0+255),b
 39089  017CD2                     u17745:
 39090  017CD2  0100               	movlb	0	; () banked
 39091  017CD4  90D8               	bcf	status,0,c
 39092  017CD6  3370               	rrcf	(??_i2c_eeprom_write+1)& (0+255),f,b
 39093  017CD8  336F               	rrcf	??_i2c_eeprom_write& (0+255),f,b
 39094  017CDA  0100               	movlb	0	; () banked
 39095  017CDC  2F71               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,b
 39096  017CDE  D7F9               	goto	u17745
 39097  017CE0  0100               	movlb	0	; () banked
 39098  017CE2  516F               	movf	??_i2c_eeprom_write& (0+255),w,b
 39099  017CE4  0B0E               	andlw	14
 39100  017CE6  09A0               	iorlw	160
 39101  017CE8  0100               	movlb	0	; () banked
 39102  017CEA  6F83               	movwf	i2c_eeprom_write@slave_address& (0+255),b
 39103                           
 39104                           ; BSR set to: 0
 39105                           ;i2c.c: 549: dat[0] = address & 0xFF;
 39106  017CEC  C06A  F072         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 39107                           
 39108                           ;i2c.c: 551: length &= 0b00001111;
 39109  017CF0  0E0F               	movlw	15
 39110  017CF2  0100               	movlb	0	; () banked
 39111  017CF4  176E               	andwf	i2c_eeprom_write@length& (0+255),f,b
 39112                           
 39113                           ; BSR set to: 0
 39114                           ;i2c.c: 552: for(cntr=0; cntr<length; ++cntr)
 39115  017CF6  0E00               	movlw	0
 39116  017CF8  0100               	movlb	0	; () banked
 39117  017CFA  6F84               	movwf	i2c_eeprom_write@cntr& (0+255),b
 39118  017CFC  D021               	goto	l18850
 39119  017CFE                     l18846:
 39120                           
 39121                           ; BSR set to: 0
 39122                           ;i2c.c: 553: {
 39123                           ;i2c.c: 554: dat[cntr+1] = data[cntr];
 39124  017CFE  0100               	movlb	0	; () banked
 39125  017D00  5184               	movf	i2c_eeprom_write@cntr& (0+255),w,b
 39126  017D02  0D01               	mullw	1
 39127  017D04  50F3               	movf	prodl,w,c
 39128  017D06  0100               	movlb	0	; () banked
 39129  017D08  256C               	addwf	i2c_eeprom_write@data& (0+255),w,b
 39130  017D0A  6ED9               	movwf	fsr2l,c
 39131  017D0C  50F4               	movf	prodh,w,c
 39132  017D0E  0100               	movlb	0	; () banked
 39133  017D10  216D               	addwfc	(i2c_eeprom_write@data+1)& (0+255),w,b
 39134  017D12  6EDA               	movwf	fsr2h,c
 39135  017D14  0100               	movlb	0	; () banked
 39136  017D16  5184               	movf	i2c_eeprom_write@cntr& (0+255),w,b
 39137  017D18  0100               	movlb	0	; () banked
 39138  017D1A  6F6F               	movwf	??_i2c_eeprom_write& (0+255),b
 39139  017D1C  6B70               	clrf	(??_i2c_eeprom_write+1)& (0+255),b
 39140  017D1E  0E01               	movlw	1
 39141  017D20  0100               	movlb	0	; () banked
 39142  017D22  276F               	addwf	??_i2c_eeprom_write& (0+255),f,b
 39143  017D24  0E00               	movlw	0
 39144  017D26  2370               	addwfc	(??_i2c_eeprom_write+1)& (0+255),f,b
 39145  017D28  0E72               	movlw	low i2c_eeprom_write@dat
 39146  017D2A  0100               	movlb	0	; () banked
 39147  017D2C  256F               	addwf	??_i2c_eeprom_write& (0+255),w,b
 39148  017D2E  6EE1               	movwf	fsr1l,c
 39149  017D30  0E00               	movlw	high i2c_eeprom_write@dat
 39150  017D32  0100               	movlb	0	; () banked
 39151  017D34  2170               	addwfc	(??_i2c_eeprom_write+1)& (0+255),w,b
 39152  017D36  6EE2               	movwf	fsr1h,c
 39153  017D38  CFDF FFE7          	movff	indf2,indf1
 39154                           
 39155                           ; BSR set to: 0
 39156  017D3C  0100               	movlb	0	; () banked
 39157  017D3E  2B84               	incf	i2c_eeprom_write@cntr& (0+255),f,b
 39158  017D40                     l18850:
 39159                           
 39160                           ; BSR set to: 0
 39161  017D40  0100               	movlb	0	; () banked
 39162  017D42  516E               	movf	i2c_eeprom_write@length& (0+255),w,b
 39163  017D44  0100               	movlb	0	; () banked
 39164  017D46  5D84               	subwf	i2c_eeprom_write@cntr& (0+255),w,b
 39165  017D48  A0D8               	btfss	status,0,c
 39166  017D4A  D7D9               	goto	l18846
 39167                           
 39168                           ; BSR set to: 0
 39169                           ;i2c.c: 555: }
 39170                           ;i2c.c: 558: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 39171                           
 39172                           ; BSR set to: 0
 39173  017D4C  0E02               	movlw	2
 39174  017D4E  EC5B  F0C8         	call	_i2c_set_frequency
 39175                           
 39176                           ;i2c.c: 560: _i2c_write(slave_address, &dat[0], length+1);
 39177  017D52  0E72               	movlw	low i2c_eeprom_write@dat
 39178  017D54  0100               	movlb	0	; () banked
 39179  017D56  6F65               	movwf	__i2c_write@data& (0+255),b
 39180  017D58  0E00               	movlw	high i2c_eeprom_write@dat
 39181  017D5A  0100               	movlb	0	; () banked
 39182  017D5C  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 39183  017D5E  0100               	movlb	0	; () banked
 39184  017D60  296E               	incf	i2c_eeprom_write@length& (0+255),w,b
 39185  017D62  0100               	movlb	0	; () banked
 39186  017D64  6F67               	movwf	__i2c_write@length& (0+255),b
 39187  017D66  0100               	movlb	0	; () banked
 39188  017D68  5183               	movf	i2c_eeprom_write@slave_address& (0+255),w,b
 39189  017D6A  ECDC  F0CC         	call	__i2c_write
 39190  017D6E  0012               	return		;funcret
 39191  017D70                     __end_of_i2c_eeprom_write:
 39192                           	opt stack 0
 39193                           tosu	equ	0xFFF
 39194                           tosh	equ	0xFFE
 39195                           tosl	equ	0xFFD
 39196                           pclath	equ	0xFFA
 39197                           tblptru	equ	0xFF8
 39198                           tblptrh	equ	0xFF7
 39199                           tblptrl	equ	0xFF6
 39200                           tablat	equ	0xFF5
 39201                           prodh	equ	0xFF4
 39202                           prodl	equ	0xFF3
 39203                           intcon	equ	0xFF2
 39204                           intcon2	equ	0xFF1
 39205                           intcon3	equ	0xFF0
 39206                           postinc0	equ	0xFEE
 39207                           wreg	equ	0xFE8
 39208                           indf1	equ	0xFE7
 39209                           postinc1	equ	0xFE6
 39210                           postdec1	equ	0xFE5
 39211                           plusw1	equ	0xFE3
 39212                           fsr1h	equ	0xFE2
 39213                           fsr1l	equ	0xFE1
 39214                           indf2	equ	0xFDF
 39215                           postinc2	equ	0xFDE
 39216                           postdec2	equ	0xFDD
 39217                           plusw2	equ	0xFDB
 39218                           fsr2h	equ	0xFDA
 39219                           fsr2l	equ	0xFD9
 39220                           status	equ	0xFD8
 39221                           
 39222 ;; *************** function _i2c_set_frequency *****************
 39223 ;; Defined at:
 39224 ;;		line 107 in file "i2c.c"
 39225 ;; Parameters:    Size  Location     Type
 39226 ;;  frequency       1    wreg     enum E8213
 39227 ;; Auto vars:     Size  Location     Type
 39228 ;;  frequency       1    0[BANK0 ] enum E8213
 39229 ;; Return value:  Size  Location     Type
 39230 ;;                  1    wreg      void 
 39231 ;; Registers used:
 39232 ;;		wreg, status,2, status,0
 39233 ;; Tracked objects:
 39234 ;;		On entry : 0/0
 39235 ;;		On exit  : 0/0
 39236 ;;		Unchanged: 0/0
 39237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39239 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39241 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39242 ;;Total ram usage:        1 bytes
 39243 ;; Hardware stack levels used:    1
 39244 ;; Hardware stack levels required when called:   10
 39245 ;; This function calls:
 39246 ;;		Nothing
 39247 ;; This function is called by:
 39248 ;;		_i2c_init
 39249 ;;		_i2c_display_send_init_sequence
 39250 ;;		__ic2_display_set_address
 39251 ;;		_i2c_display_cursor
 39252 ;;		_i2c_display_write_fixed
 39253 ;;		_i2c_digipot_reset_on
 39254 ;;		_i2c_digipot_reset_off
 39255 ;;		_i2c_digipot_backlight
 39256 ;;		_i2c_adc_start
 39257 ;;		_i2c_adc_read
 39258 ;;		_i2c_eeprom_write
 39259 ;;		_i2c_eeprom_read
 39260 ;;		_i2c_display_init
 39261 ;;		_i2c_display_write
 39262 ;;		_i2c_digipot_set_defaults
 39263 ;;		_i2c_eeprom_writeByte
 39264 ;;		_i2c_eeprom_readByte
 39265 ;; This function uses a non-reentrant model
 39266 ;;
 39267                           
 39268                           	psect	text171
 39269  0190B6                     __ptext171:
 39270                           	opt stack 0
 39271  0190B6                     _i2c_set_frequency:
 39272                           	opt stack 18
 39273                           
 39274                           ;incstack = 0
 39275                           ;i2c_set_frequency@frequency stored from wreg
 39276  0190B6  0100               	movlb	0	; () banked
 39277  0190B8  6F60               	movwf	i2c_set_frequency@frequency& (0+255),b
 39278                           
 39279                           ;i2c.c: 109: switch(os.clockFrequency)
 39280  0190BA  D027               	goto	l18498
 39281  0190BC                     l18474:
 39282                           
 39283                           ;i2c.c: 112: SSP1ADD = 0;
 39284  0190BC  0E00               	movlw	0
 39285  0190BE  D017               	goto	L48
 39286  0190C0                     l18476:
 39287                           
 39288                           ;i2c.c: 118: SSP1ADD = 19;
 39289  0190C0  0E13               	movlw	19
 39290  0190C2  D015               	goto	L48
 39291  0190C4                     l18478:
 39292                           
 39293                           ;i2c.c: 121: SSP1ADD = 9;
 39294  0190C4  0E09               	movlw	9
 39295  0190C6  D013               	goto	L48
 39296  0190C8                     l18480:
 39297                           
 39298                           ;i2c.c: 124: SSP1ADD = 4;
 39299  0190C8  0E04               	movlw	4
 39300  0190CA  D011               	goto	L48
 39301  0190CC                     l18484:
 39302  0190CC  0100               	movlb	0	; () banked
 39303  0190CE  5160               	movf	i2c_set_frequency@frequency& (0+255),w,b
 39304                           
 39305                           ; Switch size 1, requested type "space"
 39306                           ; Number of cases is 3, Range of values is 0 to 2
 39307                           ; switch strategies available:
 39308                           ; Name         Instructions Cycles
 39309                           ; simple_byte           10     6 (average)
 39310                           ;	Chosen strategy is simple_byte
 39311  0190D0  0A00               	xorlw	0	; case 0
 39312  0190D2  B4D8               	btfsc	status,2,c
 39313  0190D4  D7F5               	goto	l18476
 39314  0190D6  0A01               	xorlw	1	; case 1
 39315  0190D8  B4D8               	btfsc	status,2,c
 39316  0190DA  D7F4               	goto	l18478
 39317  0190DC  0A03               	xorlw	3	; case 2
 39318  0190DE  B4D8               	btfsc	status,2,c
 39319  0190E0  D7F3               	goto	l18480
 39320                           
 39321                           ; BSR set to: 0
 39322                           ;i2c.c: 127: break;
 39323  0190E2  D01E               	goto	l1535
 39324  0190E4                     l18486:
 39325                           
 39326                           ; BSR set to: 0
 39327                           ;i2c.c: 132: SSP1ADD = 119;
 39328  0190E4  0E77               	movlw	119
 39329  0190E6  D003               	goto	L48
 39330  0190E8                     l18488:
 39331                           
 39332                           ; BSR set to: 0
 39333                           ;i2c.c: 135: SSP1ADD = 59;
 39334  0190E8  0E3B               	movlw	59
 39335  0190EA  D001               	goto	L48
 39336  0190EC                     l18490:
 39337                           
 39338                           ; BSR set to: 0
 39339                           ;i2c.c: 138: SSP1ADD = 29;
 39340  0190EC  0E1D               	movlw	29
 39341  0190EE                     L48:
 39342  0190EE  6EC8               	movwf	4040,c	;volatile
 39343                           
 39344                           ; BSR set to: 0
 39345                           ;i2c.c: 140: }
 39346                           
 39347                           ;i2c.c: 139: break;
 39348  0190F0  D017               	goto	l1535
 39349  0190F2                     l18494:
 39350  0190F2  0100               	movlb	0	; () banked
 39351  0190F4  5160               	movf	i2c_set_frequency@frequency& (0+255),w,b
 39352                           
 39353                           ; Switch size 1, requested type "space"
 39354                           ; Number of cases is 3, Range of values is 0 to 2
 39355                           ; switch strategies available:
 39356                           ; Name         Instructions Cycles
 39357                           ; simple_byte           10     6 (average)
 39358                           ;	Chosen strategy is simple_byte
 39359  0190F6  0A00               	xorlw	0	; case 0
 39360  0190F8  B4D8               	btfsc	status,2,c
 39361  0190FA  D7F4               	goto	l18486
 39362  0190FC  0A01               	xorlw	1	; case 1
 39363  0190FE  B4D8               	btfsc	status,2,c
 39364  019100  D7F3               	goto	l18488
 39365  019102  0A03               	xorlw	3	; case 2
 39366  019104  B4D8               	btfsc	status,2,c
 39367  019106  D7F2               	goto	l18490
 39368                           
 39369                           ; BSR set to: 0
 39370                           ;i2c.c: 142: }
 39371                           
 39372                           ; BSR set to: 0
 39373                           ;i2c.c: 141: break;
 39374  019108  D00B               	goto	l1535
 39375  01910A                     l18498:
 39376  01910A  0102               	movlb	2	; () banked
 39377  01910C  5100               	movf	_os& (0+255),w,b	;volatile
 39378                           
 39379                           ; Switch size 1, requested type "space"
 39380                           ; Number of cases is 3, Range of values is 0 to 2
 39381                           ; switch strategies available:
 39382                           ; Name         Instructions Cycles
 39383                           ; simple_byte           10     6 (average)
 39384                           ;	Chosen strategy is simple_byte
 39385  01910E  0A00               	xorlw	0	; case 0
 39386  019110  B4D8               	btfsc	status,2,c
 39387  019112  D7D4               	goto	l18474
 39388  019114  0A01               	xorlw	1	; case 1
 39389  019116  B4D8               	btfsc	status,2,c
 39390  019118  D7D9               	goto	l18484
 39391  01911A  0A03               	xorlw	3	; case 2
 39392  01911C  B4D8               	btfsc	status,2,c
 39393  01911E  D7E9               	goto	l18494
 39394  019120                     l1535:
 39395                           
 39396                           ;i2c.c: 144: i2c_frequency = frequency;
 39397  019120  C060  F1F4         	movff	i2c_set_frequency@frequency,_i2c_frequency
 39398  019124  0012               	return		;funcret
 39399  019126                     __end_of_i2c_set_frequency:
 39400                           	opt stack 0
 39401                           tosu	equ	0xFFF
 39402                           tosh	equ	0xFFE
 39403                           tosl	equ	0xFFD
 39404                           pclath	equ	0xFFA
 39405                           tblptru	equ	0xFF8
 39406                           tblptrh	equ	0xFF7
 39407                           tblptrl	equ	0xFF6
 39408                           tablat	equ	0xFF5
 39409                           prodh	equ	0xFF4
 39410                           prodl	equ	0xFF3
 39411                           intcon	equ	0xFF2
 39412                           intcon2	equ	0xFF1
 39413                           intcon3	equ	0xFF0
 39414                           postinc0	equ	0xFEE
 39415                           wreg	equ	0xFE8
 39416                           indf1	equ	0xFE7
 39417                           postinc1	equ	0xFE6
 39418                           postdec1	equ	0xFE5
 39419                           plusw1	equ	0xFE3
 39420                           fsr1h	equ	0xFE2
 39421                           fsr1l	equ	0xFE1
 39422                           indf2	equ	0xFDF
 39423                           postinc2	equ	0xFDE
 39424                           postdec2	equ	0xFDD
 39425                           plusw2	equ	0xFDB
 39426                           fsr2h	equ	0xFDA
 39427                           fsr2l	equ	0xFD9
 39428                           status	equ	0xFD8
 39429                           
 39430 ;; *************** function __i2c_write *****************
 39431 ;; Defined at:
 39432 ;;		line 148 in file "i2c.c"
 39433 ;; Parameters:    Size  Location     Type
 39434 ;;  slave_addres    1    wreg     unsigned char 
 39435 ;;  data            2    5[BANK0 ] PTR unsigned char 
 39436 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 39437 ;;		 -> i2c_adc_start@configuration_byte(1), i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i
      +2c_digipot_reset_on@data_array(2), 
 39438 ;;		 -> i2c_digipot_set_defaults@data_array(2), _ic2_display_set_address@data_array(2), i2c_display_init@init_sequence(9
      +), i2c_display_send_init_sequence@init_sequence(9), 
 39439 ;;  length          1    7[BANK0 ] unsigned char 
 39440 ;; Auto vars:     Size  Location     Type
 39441 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 39442 ;;  cntr            1    9[BANK0 ] unsigned char 
 39443 ;; Return value:  Size  Location     Type
 39444 ;;                  1    wreg      void 
 39445 ;; Registers used:
 39446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39447 ;; Tracked objects:
 39448 ;;		On entry : 0/0
 39449 ;;		On exit  : 0/0
 39450 ;;		Unchanged: 0/0
 39451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39452 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39453 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39455 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39456 ;;Total ram usage:        5 bytes
 39457 ;; Hardware stack levels used:    1
 39458 ;; Hardware stack levels required when called:   11
 39459 ;; This function calls:
 39460 ;;		__i2c_send
 39461 ;;		__i2c_start
 39462 ;;		__i2c_stop
 39463 ;;		__i2c_wait_idle
 39464 ;; This function is called by:
 39465 ;;		_i2c_display_send_init_sequence
 39466 ;;		__ic2_display_set_address
 39467 ;;		_i2c_digipot_reset_on
 39468 ;;		_i2c_digipot_reset_off
 39469 ;;		_i2c_digipot_backlight
 39470 ;;		_i2c_adc_start
 39471 ;;		_i2c_eeprom_write
 39472 ;;		_i2c_eeprom_read
 39473 ;;		_i2c_display_init
 39474 ;;		_i2c_digipot_set_defaults
 39475 ;;		_i2c_eeprom_writeByte
 39476 ;;		_i2c_eeprom_readByte
 39477 ;; This function uses a non-reentrant model
 39478 ;;
 39479                           
 39480                           	psect	text172
 39481  0199B8                     __ptext172:
 39482                           	opt stack 0
 39483  0199B8                     __i2c_write:
 39484                           	opt stack 17
 39485                           
 39486                           ;incstack = 0
 39487                           ;__i2c_write@slave_address stored from wreg
 39488  0199B8  0100               	movlb	0	; () banked
 39489  0199BA  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 39490                           
 39491                           ;i2c.c: 150: uint8_t cntr;
 39492                           ;i2c.c: 152: _i2c_wait_idle();
 39493  0199BC  EC76  F0C7         	call	__i2c_wait_idle	;wreg free
 39494                           
 39495                           ;i2c.c: 153: _i2c_start();
 39496  0199C0  ECDF  F0D5         	call	__i2c_start	;wreg free
 39497                           
 39498                           ;i2c.c: 154: _i2c_wait_idle();
 39499  0199C4  EC76  F0C7         	call	__i2c_wait_idle	;wreg free
 39500                           
 39501                           ;i2c.c: 155: _i2c_send(slave_address);
 39502  0199C8  0100               	movlb	0	; () banked
 39503  0199CA  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 39504  0199CC  ECD6  F0D5         	call	__i2c_send
 39505                           
 39506                           ;i2c.c: 156: _i2c_wait_idle();
 39507  0199D0  EC76  F0C7         	call	__i2c_wait_idle	;wreg free
 39508                           
 39509                           ;i2c.c: 158: for(cntr=0; cntr<length; ++cntr)
 39510  0199D4  0E00               	movlw	0
 39511  0199D6  0100               	movlb	0	; () banked
 39512  0199D8  6F69               	movwf	__i2c_write@cntr& (0+255),b
 39513  0199DA  D012               	goto	l18518
 39514  0199DC                     l18512:
 39515                           
 39516                           ; BSR set to: 0
 39517                           ;i2c.c: 159: {
 39518                           ;i2c.c: 160: _i2c_send(data[cntr]);
 39519  0199DC  0100               	movlb	0	; () banked
 39520  0199DE  5169               	movf	__i2c_write@cntr& (0+255),w,b
 39521  0199E0  0D01               	mullw	1
 39522  0199E2  50F3               	movf	prodl,w,c
 39523  0199E4  0100               	movlb	0	; () banked
 39524  0199E6  2565               	addwf	__i2c_write@data& (0+255),w,b
 39525  0199E8  6ED9               	movwf	fsr2l,c
 39526  0199EA  50F4               	movf	prodh,w,c
 39527  0199EC  0100               	movlb	0	; () banked
 39528  0199EE  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 39529  0199F0  6EDA               	movwf	fsr2h,c
 39530  0199F2  50DF               	movf	indf2,w,c
 39531  0199F4  ECD6  F0D5         	call	__i2c_send
 39532                           
 39533                           ;i2c.c: 161: _i2c_wait_idle();
 39534  0199F8  EC76  F0C7         	call	__i2c_wait_idle	;wreg free
 39535  0199FC  0100               	movlb	0	; () banked
 39536  0199FE  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 39537  019A00                     l18518:
 39538                           
 39539                           ; BSR set to: 0
 39540  019A00  0100               	movlb	0	; () banked
 39541  019A02  5167               	movf	__i2c_write@length& (0+255),w,b
 39542  019A04  0100               	movlb	0	; () banked
 39543  019A06  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 39544  019A08  A0D8               	btfss	status,0,c
 39545  019A0A  D7E8               	goto	l18512
 39546                           
 39547                           ; BSR set to: 0
 39548                           ;i2c.c: 162: }
 39549                           ;i2c.c: 164: _i2c_stop();
 39550                           
 39551                           ; BSR set to: 0
 39552  019A0C  ECDB  F0D5         	call	__i2c_stop	;wreg free
 39553  019A10  0012               	return		;funcret
 39554  019A12                     __end_of__i2c_write:
 39555                           	opt stack 0
 39556                           tosu	equ	0xFFF
 39557                           tosh	equ	0xFFE
 39558                           tosl	equ	0xFFD
 39559                           pclath	equ	0xFFA
 39560                           tblptru	equ	0xFF8
 39561                           tblptrh	equ	0xFF7
 39562                           tblptrl	equ	0xFF6
 39563                           tablat	equ	0xFF5
 39564                           prodh	equ	0xFF4
 39565                           prodl	equ	0xFF3
 39566                           intcon	equ	0xFF2
 39567                           intcon2	equ	0xFF1
 39568                           intcon3	equ	0xFF0
 39569                           postinc0	equ	0xFEE
 39570                           wreg	equ	0xFE8
 39571                           indf1	equ	0xFE7
 39572                           postinc1	equ	0xFE6
 39573                           postdec1	equ	0xFE5
 39574                           plusw1	equ	0xFE3
 39575                           fsr1h	equ	0xFE2
 39576                           fsr1l	equ	0xFE1
 39577                           indf2	equ	0xFDF
 39578                           postinc2	equ	0xFDE
 39579                           postdec2	equ	0xFDD
 39580                           plusw2	equ	0xFDB
 39581                           fsr2h	equ	0xFDA
 39582                           fsr2l	equ	0xFD9
 39583                           status	equ	0xFD8
 39584                           
 39585 ;; *************** function __i2c_wait_idle *****************
 39586 ;; Defined at:
 39587 ;;		line 45 in file "i2c.c"
 39588 ;; Parameters:    Size  Location     Type
 39589 ;;		None
 39590 ;; Auto vars:     Size  Location     Type
 39591 ;;		None
 39592 ;; Return value:  Size  Location     Type
 39593 ;;                  1    wreg      void 
 39594 ;; Registers used:
 39595 ;;		wreg, status,2, status,0
 39596 ;; Tracked objects:
 39597 ;;		On entry : 0/0
 39598 ;;		On exit  : 0/0
 39599 ;;		Unchanged: 0/0
 39600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39603 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39604 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39605 ;;Total ram usage:        5 bytes
 39606 ;; Hardware stack levels used:    1
 39607 ;; Hardware stack levels required when called:   10
 39608 ;; This function calls:
 39609 ;;		Nothing
 39610 ;; This function is called by:
 39611 ;;		__i2c_write
 39612 ;;		__i2c_read
 39613 ;;		_i2c_display_write_fixed
 39614 ;;		_i2c_adc_read
 39615 ;;		_i2c_display_write
 39616 ;; This function uses a non-reentrant model
 39617 ;;
 39618                           
 39619                           	psect	text173
 39620  018EEC                     __ptext173:
 39621                           	opt stack 0
 39622  018EEC                     __i2c_wait_idle:
 39623                           	opt stack 17
 39624  018EEC                     l11944:
 39625  018EEC  A4C7               	btfss	4039,2,c	;volatile
 39626  018EEE  D004               	goto	u9340
 39627  018EF0  0100               	movlb	0	; () banked
 39628  018EF2  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 39629  018EF4  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 39630  018EF6  D002               	goto	u9348
 39631  018EF8                     u9340:
 39632  018EF8  0100               	movlb	0	; () banked
 39633  018EFA  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 39634  018EFC                     u9348:
 39635  018EFC  A0C5               	btfss	4037,0,c	;volatile
 39636  018EFE  D004               	goto	u9350
 39637  018F00  0100               	movlb	0	; () banked
 39638  018F02  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 39639  018F04  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 39640  018F06  D002               	goto	u9358
 39641  018F08                     u9350:
 39642  018F08  0100               	movlb	0	; () banked
 39643  018F0A  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 39644  018F0C                     u9358:
 39645  018F0C  A2C5               	btfss	4037,1,c	;volatile
 39646  018F0E  D004               	goto	u9360
 39647  018F10  0100               	movlb	0	; () banked
 39648  018F12  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 39649  018F14  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 39650  018F16  D002               	goto	u9368
 39651  018F18                     u9360:
 39652  018F18  0100               	movlb	0	; () banked
 39653  018F1A  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 39654  018F1C                     u9368:
 39655  018F1C  A4C5               	btfss	4037,2,c	;volatile
 39656  018F1E  D004               	goto	u9370
 39657  018F20  0100               	movlb	0	; () banked
 39658  018F22  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 39659  018F24  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 39660  018F26  D002               	goto	u9378
 39661  018F28                     u9370:
 39662  018F28  0100               	movlb	0	; () banked
 39663  018F2A  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 39664  018F2C                     u9378:
 39665  018F2C  A6C5               	btfss	4037,3,c	;volatile
 39666  018F2E  D004               	goto	u9380
 39667  018F30  0100               	movlb	0	; () banked
 39668  018F32  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 39669  018F34  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 39670  018F36  D002               	goto	u9388
 39671  018F38                     u9380:
 39672  018F38  0100               	movlb	0	; () banked
 39673  018F3A  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 39674  018F3C                     u9388:
 39675  018F3C  A8C5               	btfss	4037,4,c	;volatile
 39676  018F3E  D002               	goto	u9390
 39677  018F40  0E01               	movlw	1
 39678  018F42  D001               	goto	u9396
 39679  018F44                     u9390:
 39680  018F44  0E00               	movlw	0
 39681  018F46                     u9396:
 39682  018F46  0100               	movlb	0	; () banked
 39683  018F48  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 39684  018F4A  0100               	movlb	0	; () banked
 39685  018F4C  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 39686  018F4E  0100               	movlb	0	; () banked
 39687  018F50  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 39688  018F52  0100               	movlb	0	; () banked
 39689  018F54  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 39690  018F56  0100               	movlb	0	; () banked
 39691  018F58  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 39692  018F5A  0900               	iorlw	0
 39693  018F5C  B4D8               	btfsc	status,2,c
 39694  018F5E  0012               	return	
 39695  018F60  D7C5               	goto	l11944
 39696  018F62                     __end_of__i2c_wait_idle:
 39697                           	opt stack 0
 39698                           tosu	equ	0xFFF
 39699                           tosh	equ	0xFFE
 39700                           tosl	equ	0xFFD
 39701                           pclath	equ	0xFFA
 39702                           tblptru	equ	0xFF8
 39703                           tblptrh	equ	0xFF7
 39704                           tblptrl	equ	0xFF6
 39705                           tablat	equ	0xFF5
 39706                           prodh	equ	0xFF4
 39707                           prodl	equ	0xFF3
 39708                           intcon	equ	0xFF2
 39709                           intcon2	equ	0xFF1
 39710                           intcon3	equ	0xFF0
 39711                           postinc0	equ	0xFEE
 39712                           wreg	equ	0xFE8
 39713                           indf1	equ	0xFE7
 39714                           postinc1	equ	0xFE6
 39715                           postdec1	equ	0xFE5
 39716                           plusw1	equ	0xFE3
 39717                           fsr1h	equ	0xFE2
 39718                           fsr1l	equ	0xFE1
 39719                           indf2	equ	0xFDF
 39720                           postinc2	equ	0xFDE
 39721                           postdec2	equ	0xFDD
 39722                           plusw2	equ	0xFDB
 39723                           fsr2h	equ	0xFDA
 39724                           fsr2l	equ	0xFD9
 39725                           status	equ	0xFD8
 39726                           
 39727 ;; *************** function __i2c_stop *****************
 39728 ;; Defined at:
 39729 ;;		line 72 in file "i2c.c"
 39730 ;; Parameters:    Size  Location     Type
 39731 ;;		None
 39732 ;; Auto vars:     Size  Location     Type
 39733 ;;		None
 39734 ;; Return value:  Size  Location     Type
 39735 ;;                  1    wreg      void 
 39736 ;; Registers used:
 39737 ;;		None
 39738 ;; Tracked objects:
 39739 ;;		On entry : 0/0
 39740 ;;		On exit  : 0/0
 39741 ;;		Unchanged: 0/0
 39742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39747 ;;Total ram usage:        0 bytes
 39748 ;; Hardware stack levels used:    1
 39749 ;; Hardware stack levels required when called:   10
 39750 ;; This function calls:
 39751 ;;		Nothing
 39752 ;; This function is called by:
 39753 ;;		__i2c_write
 39754 ;;		__i2c_read
 39755 ;;		_i2c_display_write_fixed
 39756 ;;		_i2c_adc_read
 39757 ;;		_i2c_display_write
 39758 ;; This function uses a non-reentrant model
 39759 ;;
 39760                           
 39761                           	psect	text174
 39762  01ABB6                     __ptext174:
 39763                           	opt stack 0
 39764  01ABB6                     __i2c_stop:
 39765                           	opt stack 17
 39766                           
 39767                           ;i2c.c: 74: SSP1CON2bits.PEN = 1;
 39768                           
 39769                           ; BSR set to: 0
 39770                           ;incstack = 0
 39771  01ABB6  84C5               	bsf	4037,2,c	;volatile
 39772  01ABB8                     l1509:
 39773  01ABB8  A4C5               	btfss	4037,2,c	;volatile
 39774  01ABBA  0012               	return	
 39775  01ABBC  D7FD               	goto	l1509
 39776  01ABBE                     __end_of__i2c_stop:
 39777                           	opt stack 0
 39778                           tosu	equ	0xFFF
 39779                           tosh	equ	0xFFE
 39780                           tosl	equ	0xFFD
 39781                           pclath	equ	0xFFA
 39782                           tblptru	equ	0xFF8
 39783                           tblptrh	equ	0xFF7
 39784                           tblptrl	equ	0xFF6
 39785                           tablat	equ	0xFF5
 39786                           prodh	equ	0xFF4
 39787                           prodl	equ	0xFF3
 39788                           intcon	equ	0xFF2
 39789                           intcon2	equ	0xFF1
 39790                           intcon3	equ	0xFF0
 39791                           postinc0	equ	0xFEE
 39792                           wreg	equ	0xFE8
 39793                           indf1	equ	0xFE7
 39794                           postinc1	equ	0xFE6
 39795                           postdec1	equ	0xFE5
 39796                           plusw1	equ	0xFE3
 39797                           fsr1h	equ	0xFE2
 39798                           fsr1l	equ	0xFE1
 39799                           indf2	equ	0xFDF
 39800                           postinc2	equ	0xFDE
 39801                           postdec2	equ	0xFDD
 39802                           plusw2	equ	0xFDB
 39803                           fsr2h	equ	0xFDA
 39804                           fsr2l	equ	0xFD9
 39805                           status	equ	0xFD8
 39806                           
 39807 ;; *************** function __i2c_start *****************
 39808 ;; Defined at:
 39809 ;;		line 51 in file "i2c.c"
 39810 ;; Parameters:    Size  Location     Type
 39811 ;;		None
 39812 ;; Auto vars:     Size  Location     Type
 39813 ;;		None
 39814 ;; Return value:  Size  Location     Type
 39815 ;;                  1    wreg      void 
 39816 ;; Registers used:
 39817 ;;		None
 39818 ;; Tracked objects:
 39819 ;;		On entry : 0/0
 39820 ;;		On exit  : 0/0
 39821 ;;		Unchanged: 0/0
 39822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39827 ;;Total ram usage:        0 bytes
 39828 ;; Hardware stack levels used:    1
 39829 ;; Hardware stack levels required when called:   10
 39830 ;; This function calls:
 39831 ;;		Nothing
 39832 ;; This function is called by:
 39833 ;;		__i2c_write
 39834 ;;		__i2c_read
 39835 ;;		_i2c_display_write_fixed
 39836 ;;		_i2c_adc_read
 39837 ;;		_i2c_display_write
 39838 ;; This function uses a non-reentrant model
 39839 ;;
 39840                           
 39841                           	psect	text175
 39842  01ABBE                     __ptext175:
 39843                           	opt stack 0
 39844  01ABBE                     __i2c_start:
 39845                           	opt stack 17
 39846                           
 39847                           ;i2c.c: 53: SSP1CON2bits.SEN=1;
 39848                           
 39849                           ;incstack = 0
 39850  01ABBE  80C5               	bsf	4037,0,c	;volatile
 39851  01ABC0                     l1494:
 39852  01ABC0  A0C5               	btfss	4037,0,c	;volatile
 39853  01ABC2  0012               	return	
 39854  01ABC4  D7FD               	goto	l1494
 39855  01ABC6                     __end_of__i2c_start:
 39856                           	opt stack 0
 39857                           tosu	equ	0xFFF
 39858                           tosh	equ	0xFFE
 39859                           tosl	equ	0xFFD
 39860                           pclath	equ	0xFFA
 39861                           tblptru	equ	0xFF8
 39862                           tblptrh	equ	0xFF7
 39863                           tblptrl	equ	0xFF6
 39864                           tablat	equ	0xFF5
 39865                           prodh	equ	0xFF4
 39866                           prodl	equ	0xFF3
 39867                           intcon	equ	0xFF2
 39868                           intcon2	equ	0xFF1
 39869                           intcon3	equ	0xFF0
 39870                           postinc0	equ	0xFEE
 39871                           wreg	equ	0xFE8
 39872                           indf1	equ	0xFE7
 39873                           postinc1	equ	0xFE6
 39874                           postdec1	equ	0xFE5
 39875                           plusw1	equ	0xFE3
 39876                           fsr1h	equ	0xFE2
 39877                           fsr1l	equ	0xFE1
 39878                           indf2	equ	0xFDF
 39879                           postinc2	equ	0xFDE
 39880                           postdec2	equ	0xFDD
 39881                           plusw2	equ	0xFDB
 39882                           fsr2h	equ	0xFDA
 39883                           fsr2l	equ	0xFD9
 39884                           status	equ	0xFD8
 39885                           
 39886 ;; *************** function __i2c_send *****************
 39887 ;; Defined at:
 39888 ;;		line 58 in file "i2c.c"
 39889 ;; Parameters:    Size  Location     Type
 39890 ;;  dat             1    wreg     unsigned char 
 39891 ;; Auto vars:     Size  Location     Type
 39892 ;;  dat             1    0[BANK0 ] unsigned char 
 39893 ;; Return value:  Size  Location     Type
 39894 ;;                  1    wreg      void 
 39895 ;; Registers used:
 39896 ;;		wreg
 39897 ;; Tracked objects:
 39898 ;;		On entry : 0/0
 39899 ;;		On exit  : 0/0
 39900 ;;		Unchanged: 0/0
 39901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39903 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39905 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39906 ;;Total ram usage:        1 bytes
 39907 ;; Hardware stack levels used:    1
 39908 ;; Hardware stack levels required when called:   10
 39909 ;; This function calls:
 39910 ;;		Nothing
 39911 ;; This function is called by:
 39912 ;;		__i2c_write
 39913 ;;		__i2c_read
 39914 ;;		_i2c_display_write_fixed
 39915 ;;		_i2c_adc_read
 39916 ;;		_i2c_display_write
 39917 ;; This function uses a non-reentrant model
 39918 ;;
 39919                           
 39920                           	psect	text176
 39921  01ABAC                     __ptext176:
 39922                           	opt stack 0
 39923  01ABAC                     __i2c_send:
 39924                           	opt stack 17
 39925                           
 39926                           ;incstack = 0
 39927                           ;__i2c_send@dat stored from wreg
 39928  01ABAC  0100               	movlb	0	; () banked
 39929  01ABAE  6F60               	movwf	__i2c_send@dat& (0+255),b
 39930                           
 39931                           ;i2c.c: 60: SSP1BUF = dat;
 39932  01ABB0  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 39933  01ABB4  0012               	return		;funcret
 39934  01ABB6                     __end_of__i2c_send:
 39935                           	opt stack 0
 39936                           tosu	equ	0xFFF
 39937                           tosh	equ	0xFFE
 39938                           tosl	equ	0xFFD
 39939                           pclath	equ	0xFFA
 39940                           tblptru	equ	0xFF8
 39941                           tblptrh	equ	0xFF7
 39942                           tblptrl	equ	0xFF6
 39943                           tablat	equ	0xFF5
 39944                           prodh	equ	0xFF4
 39945                           prodl	equ	0xFF3
 39946                           intcon	equ	0xFF2
 39947                           intcon2	equ	0xFF1
 39948                           intcon3	equ	0xFF0
 39949                           postinc0	equ	0xFEE
 39950                           wreg	equ	0xFE8
 39951                           indf1	equ	0xFE7
 39952                           postinc1	equ	0xFE6
 39953                           postdec1	equ	0xFE5
 39954                           plusw1	equ	0xFE3
 39955                           fsr1h	equ	0xFE2
 39956                           fsr1l	equ	0xFE1
 39957                           indf2	equ	0xFDF
 39958                           postinc2	equ	0xFDE
 39959                           postdec2	equ	0xFDD
 39960                           plusw2	equ	0xFDB
 39961                           fsr2h	equ	0xFDA
 39962                           fsr2l	equ	0xFD9
 39963                           status	equ	0xFD8
 39964                           
 39965 ;; *************** function __parse_command_long *****************
 39966 ;; Defined at:
 39967 ;;		line 453 in file "app_device_custom_hid.c"
 39968 ;; Parameters:    Size  Location     Type
 39969 ;;  cmd             1    wreg     unsigned char 
 39970 ;;  data            1    3[BANK0 ] unsigned char 
 39971 ;; Auto vars:     Size  Location     Type
 39972 ;;  cmd             1    4[BANK0 ] unsigned char 
 39973 ;; Return value:  Size  Location     Type
 39974 ;;                  1    wreg      void 
 39975 ;; Registers used:
 39976 ;;		wreg, status,2, status,0, cstack
 39977 ;; Tracked objects:
 39978 ;;		On entry : 0/0
 39979 ;;		On exit  : 0/0
 39980 ;;		Unchanged: 0/0
 39981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39982 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39983 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39985 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39986 ;;Total ram usage:        2 bytes
 39987 ;; Hardware stack levels used:    1
 39988 ;; Hardware stack levels required when called:   12
 39989 ;; This function calls:
 39990 ;;		_buck_remote_change_dutycycle
 39991 ;;		_buck_remote_set_dutycycle
 39992 ;;		_buck_remote_set_enable
 39993 ;;		_buck_remote_set_on
 39994 ;;		_buck_remote_set_synchronous
 39995 ;;		_rtcc_set_day
 39996 ;;		_rtcc_set_hours
 39997 ;;		_rtcc_set_minutes
 39998 ;;		_rtcc_set_month
 39999 ;;		_rtcc_set_seconds
 40000 ;;		_rtcc_set_year
 40001 ;; This function is called by:
 40002 ;;		_APP_DeviceCustomHIDTasks
 40003 ;; This function uses a non-reentrant model
 40004 ;;
 40005                           
 40006                           	psect	text177
 40007  016C16                     __ptext177:
 40008                           	opt stack 0
 40009  016C16                     __parse_command_long:
 40010                           	opt stack 17
 40011                           
 40012                           ;incstack = 0
 40013                           ;__parse_command_long@cmd stored from wreg
 40014  016C16  0100               	movlb	0	; () banked
 40015  016C18  6F64               	movwf	__parse_command_long@cmd& (0+255),b
 40016                           
 40017                           ;app_device_custom_hid.c: 455: switch(cmd)
 40018  016C1A  D043               	goto	l20376
 40019  016C1C                     l20344:
 40020                           
 40021                           ;app_device_custom_hid.c: 458: rtcc_set_year(data);
 40022  016C1C  0100               	movlb	0	; () banked
 40023  016C1E  5163               	movf	__parse_command_long@data& (0+255),w,b
 40024  016C20  EC7E  F0D4         	call	_rtcc_set_year
 40025                           
 40026                           ;app_device_custom_hid.c: 459: break;
 40027  016C24  0012               	return	
 40028  016C26                     l20346:
 40029                           
 40030                           ;app_device_custom_hid.c: 461: rtcc_set_month(data);
 40031  016C26  0100               	movlb	0	; () banked
 40032  016C28  5163               	movf	__parse_command_long@data& (0+255),w,b
 40033  016C2A  EC98  F0D4         	call	_rtcc_set_month
 40034                           
 40035                           ;app_device_custom_hid.c: 462: break;
 40036  016C2E  0012               	return	
 40037  016C30                     l20348:
 40038                           
 40039                           ;app_device_custom_hid.c: 464: rtcc_set_day(data);
 40040  016C30  0100               	movlb	0	; () banked
 40041  016C32  5163               	movf	__parse_command_long@data& (0+255),w,b
 40042  016C34  ECBF  F0D4         	call	_rtcc_set_day
 40043                           
 40044                           ;app_device_custom_hid.c: 465: break;
 40045  016C38  0012               	return	
 40046  016C3A                     l20350:
 40047                           
 40048                           ;app_device_custom_hid.c: 467: rtcc_set_hours(data);
 40049  016C3A  0100               	movlb	0	; () banked
 40050  016C3C  5163               	movf	__parse_command_long@data& (0+255),w,b
 40051  016C3E  ECB2  F0D4         	call	_rtcc_set_hours
 40052                           
 40053                           ;app_device_custom_hid.c: 468: break;
 40054  016C42  0012               	return	
 40055  016C44                     l20352:
 40056                           
 40057                           ;app_device_custom_hid.c: 470: rtcc_set_minutes(data);
 40058  016C44  0100               	movlb	0	; () banked
 40059  016C46  5163               	movf	__parse_command_long@data& (0+255),w,b
 40060  016C48  ECA5  F0D4         	call	_rtcc_set_minutes
 40061                           
 40062                           ;app_device_custom_hid.c: 471: break;
 40063  016C4C  0012               	return	
 40064  016C4E                     l20354:
 40065                           
 40066                           ;app_device_custom_hid.c: 473: rtcc_set_seconds(data);
 40067  016C4E  0100               	movlb	0	; () banked
 40068  016C50  5163               	movf	__parse_command_long@data& (0+255),w,b
 40069  016C52  EC8B  F0D4         	call	_rtcc_set_seconds
 40070                           
 40071                           ;app_device_custom_hid.c: 474: break;
 40072  016C56  0012               	return	
 40073  016C58                     l20356:
 40074                           
 40075                           ;app_device_custom_hid.c: 476: buck_remote_set_enable(1);
 40076  016C58  0E01               	movlw	1
 40077  016C5A  EC37  F0D4         	call	_buck_remote_set_enable
 40078                           
 40079                           ;app_device_custom_hid.c: 477: break;
 40080  016C5E  0012               	return	
 40081  016C60                     l20358:
 40082                           
 40083                           ;app_device_custom_hid.c: 479: buck_remote_set_enable(0);
 40084  016C60  0E00               	movlw	0
 40085  016C62  EC37  F0D4         	call	_buck_remote_set_enable
 40086                           
 40087                           ;app_device_custom_hid.c: 480: break;
 40088  016C66  0012               	return	
 40089  016C68                     l20360:
 40090                           
 40091                           ;app_device_custom_hid.c: 482: buck_remote_set_on(1);
 40092  016C68  0E01               	movlw	1
 40093  016C6A  EC28  F0D4         	call	_buck_remote_set_on
 40094                           
 40095                           ;app_device_custom_hid.c: 483: break;
 40096  016C6E  0012               	return	
 40097  016C70                     l20362:
 40098                           
 40099                           ;app_device_custom_hid.c: 485: buck_remote_set_on(0);
 40100  016C70  0E00               	movlw	0
 40101  016C72  EC28  F0D4         	call	_buck_remote_set_on
 40102                           
 40103                           ;app_device_custom_hid.c: 486: break;
 40104  016C76  0012               	return	
 40105  016C78                     l20364:
 40106                           
 40107                           ;app_device_custom_hid.c: 488: buck_remote_set_synchronous(0);
 40108  016C78  0E00               	movlw	0
 40109  016C7A  EC19  F0D4         	call	_buck_remote_set_synchronous
 40110                           
 40111                           ;app_device_custom_hid.c: 489: break;
 40112  016C7E  0012               	return	
 40113  016C80                     l20366:
 40114                           
 40115                           ;app_device_custom_hid.c: 491: buck_remote_set_synchronous(1);
 40116  016C80  0E01               	movlw	1
 40117  016C82  EC19  F0D4         	call	_buck_remote_set_synchronous
 40118                           
 40119                           ;app_device_custom_hid.c: 492: break;
 40120  016C86  0012               	return	
 40121  016C88                     l20368:
 40122                           
 40123                           ;app_device_custom_hid.c: 494: buck_remote_change_dutycycle(-1);
 40124  016C88  0EFF               	movlw	255
 40125  016C8A  EC34  F0CB         	call	_buck_remote_change_dutycycle
 40126                           
 40127                           ;app_device_custom_hid.c: 495: break;
 40128  016C8E  0012               	return	
 40129  016C90                     l20370:
 40130                           
 40131                           ;app_device_custom_hid.c: 497: buck_remote_change_dutycycle(1);
 40132  016C90  0E01               	movlw	1
 40133  016C92  EC34  F0CB         	call	_buck_remote_change_dutycycle
 40134                           
 40135                           ;app_device_custom_hid.c: 498: break;
 40136  016C96  0012               	return	
 40137  016C98                     l20372:
 40138                           
 40139                           ;app_device_custom_hid.c: 500: buck_remote_set_dutycycle(data);
 40140  016C98  0100               	movlb	0	; () banked
 40141  016C9A  5163               	movf	__parse_command_long@data& (0+255),w,b
 40142  016C9C  EC81  F0D3         	call	_buck_remote_set_dutycycle
 40143                           
 40144                           ;app_device_custom_hid.c: 502: }
 40145                           
 40146                           ;app_device_custom_hid.c: 501: break;
 40147  016CA0  0012               	return	
 40148  016CA2                     l20376:
 40149  016CA2  0100               	movlb	0	; () banked
 40150  016CA4  5164               	movf	__parse_command_long@cmd& (0+255),w,b
 40151                           
 40152                           ; Switch size 1, requested type "space"
 40153                           ; Number of cases is 15, Range of values is 64 to 78
 40154                           ; switch strategies available:
 40155                           ; Name         Instructions Cycles
 40156                           ; simple_byte           46    24 (average)
 40157                           ;	Chosen strategy is simple_byte
 40158  016CA6  0A40               	xorlw	64	; case 64
 40159  016CA8  B4D8               	btfsc	status,2,c
 40160  016CAA  D7B8               	goto	l20344
 40161  016CAC  0A01               	xorlw	1	; case 65
 40162  016CAE  B4D8               	btfsc	status,2,c
 40163  016CB0  D7BA               	goto	l20346
 40164  016CB2  0A03               	xorlw	3	; case 66
 40165  016CB4  B4D8               	btfsc	status,2,c
 40166  016CB6  D7BC               	goto	l20348
 40167  016CB8  0A01               	xorlw	1	; case 67
 40168  016CBA  B4D8               	btfsc	status,2,c
 40169  016CBC  D7BE               	goto	l20350
 40170  016CBE  0A07               	xorlw	7	; case 68
 40171  016CC0  B4D8               	btfsc	status,2,c
 40172  016CC2  D7C0               	goto	l20352
 40173  016CC4  0A01               	xorlw	1	; case 69
 40174  016CC6  B4D8               	btfsc	status,2,c
 40175  016CC8  D7C2               	goto	l20354
 40176  016CCA  0A03               	xorlw	3	; case 70
 40177  016CCC  B4D8               	btfsc	status,2,c
 40178  016CCE  D7C4               	goto	l20356
 40179  016CD0  0A01               	xorlw	1	; case 71
 40180  016CD2  B4D8               	btfsc	status,2,c
 40181  016CD4  D7C5               	goto	l20358
 40182  016CD6  0A0F               	xorlw	15	; case 72
 40183  016CD8  B4D8               	btfsc	status,2,c
 40184  016CDA  D7C6               	goto	l20360
 40185  016CDC  0A01               	xorlw	1	; case 73
 40186  016CDE  B4D8               	btfsc	status,2,c
 40187  016CE0  D7C7               	goto	l20362
 40188  016CE2  0A03               	xorlw	3	; case 74
 40189  016CE4  B4D8               	btfsc	status,2,c
 40190  016CE6  D7C8               	goto	l20364
 40191  016CE8  0A01               	xorlw	1	; case 75
 40192  016CEA  B4D8               	btfsc	status,2,c
 40193  016CEC  D7C9               	goto	l20366
 40194  016CEE  0A07               	xorlw	7	; case 76
 40195  016CF0  B4D8               	btfsc	status,2,c
 40196  016CF2  D7CA               	goto	l20368
 40197  016CF4  0A01               	xorlw	1	; case 77
 40198  016CF6  B4D8               	btfsc	status,2,c
 40199  016CF8  D7CB               	goto	l20370
 40200  016CFA  0A03               	xorlw	3	; case 78
 40201  016CFC  A4D8               	btfss	status,2,c
 40202  016CFE  0012               	return	
 40203  016D00  D7CB               	goto	l20372
 40204  016D02                     __end_of__parse_command_long:
 40205                           	opt stack 0
 40206                           tosu	equ	0xFFF
 40207                           tosh	equ	0xFFE
 40208                           tosl	equ	0xFFD
 40209                           pclath	equ	0xFFA
 40210                           tblptru	equ	0xFF8
 40211                           tblptrh	equ	0xFF7
 40212                           tblptrl	equ	0xFF6
 40213                           tablat	equ	0xFF5
 40214                           prodh	equ	0xFF4
 40215                           prodl	equ	0xFF3
 40216                           intcon	equ	0xFF2
 40217                           intcon2	equ	0xFF1
 40218                           intcon3	equ	0xFF0
 40219                           postinc0	equ	0xFEE
 40220                           wreg	equ	0xFE8
 40221                           indf1	equ	0xFE7
 40222                           postinc1	equ	0xFE6
 40223                           postdec1	equ	0xFE5
 40224                           plusw1	equ	0xFE3
 40225                           fsr1h	equ	0xFE2
 40226                           fsr1l	equ	0xFE1
 40227                           indf2	equ	0xFDF
 40228                           postinc2	equ	0xFDE
 40229                           postdec2	equ	0xFDD
 40230                           plusw2	equ	0xFDB
 40231                           fsr2h	equ	0xFDA
 40232                           fsr2l	equ	0xFD9
 40233                           status	equ	0xFD8
 40234                           
 40235 ;; *************** function _rtcc_set_year *****************
 40236 ;; Defined at:
 40237 ;;		line 117 in file "rtcc.c"
 40238 ;; Parameters:    Size  Location     Type
 40239 ;;  year            1    wreg     unsigned char 
 40240 ;; Auto vars:     Size  Location     Type
 40241 ;;  year            1    0[BANK0 ] unsigned char 
 40242 ;; Return value:  Size  Location     Type
 40243 ;;                  1    wreg      void 
 40244 ;; Registers used:
 40245 ;;		wreg, status,2, cstack
 40246 ;; Tracked objects:
 40247 ;;		On entry : 0/0
 40248 ;;		On exit  : 0/0
 40249 ;;		Unchanged: 0/0
 40250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40252 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40254 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40255 ;;Total ram usage:        1 bytes
 40256 ;; Hardware stack levels used:    1
 40257 ;; Hardware stack levels required when called:   11
 40258 ;; This function calls:
 40259 ;;		__rtcc_write_disable
 40260 ;;		__rtcc_write_enable
 40261 ;; This function is called by:
 40262 ;;		__parse_command_long
 40263 ;;		_rtcc_increment_year
 40264 ;;		_rtcc_decrement_year
 40265 ;;		_rtcc_read_eeprom
 40266 ;; This function uses a non-reentrant model
 40267 ;;
 40268                           
 40269                           	psect	text178
 40270  01A8FC                     __ptext178:
 40271                           	opt stack 0
 40272  01A8FC                     _rtcc_set_year:
 40273                           	opt stack 16
 40274                           
 40275                           ;incstack = 0
 40276                           ;rtcc_set_year@year stored from wreg
 40277  01A8FC  0100               	movlb	0	; () banked
 40278  01A8FE  6F60               	movwf	rtcc_set_year@year& (0+255),b
 40279                           
 40280                           ;rtcc.c: 119: _rtcc_write_enable();
 40281  01A900  ECEF  F0D4         	call	__rtcc_write_enable	;wreg free
 40282                           
 40283                           ;rtcc.c: 120: RTCCFGbits.RTCPTR1 = 1;
 40284  01A904  010F               	movlb	15	; () banked
 40285  01A906  833F               	bsf	63,1,b	;volatile
 40286                           
 40287                           ; BSR set to: 15
 40288                           ;rtcc.c: 121: RTCCFGbits.RTCPTR0 = 1;
 40289  01A908  010F               	movlb	15	; () banked
 40290  01A90A  813F               	bsf	63,0,b	;volatile
 40291                           
 40292                           ; BSR set to: 15
 40293                           ;rtcc.c: 122: RTCVALL = year;
 40294  01A90C  C060  FF3A         	movff	rtcc_set_year@year,3898	;volatile
 40295                           
 40296                           ;rtcc.c: 123: _rtcc_write_disable();
 40297  01A910  ECFA  F0D4         	call	__rtcc_write_disable	;wreg free
 40298  01A914  0012               	return		;funcret
 40299  01A916                     __end_of_rtcc_set_year:
 40300                           	opt stack 0
 40301                           tosu	equ	0xFFF
 40302                           tosh	equ	0xFFE
 40303                           tosl	equ	0xFFD
 40304                           pclath	equ	0xFFA
 40305                           tblptru	equ	0xFF8
 40306                           tblptrh	equ	0xFF7
 40307                           tblptrl	equ	0xFF6
 40308                           tablat	equ	0xFF5
 40309                           prodh	equ	0xFF4
 40310                           prodl	equ	0xFF3
 40311                           intcon	equ	0xFF2
 40312                           intcon2	equ	0xFF1
 40313                           intcon3	equ	0xFF0
 40314                           postinc0	equ	0xFEE
 40315                           wreg	equ	0xFE8
 40316                           indf1	equ	0xFE7
 40317                           postinc1	equ	0xFE6
 40318                           postdec1	equ	0xFE5
 40319                           plusw1	equ	0xFE3
 40320                           fsr1h	equ	0xFE2
 40321                           fsr1l	equ	0xFE1
 40322                           indf2	equ	0xFDF
 40323                           postinc2	equ	0xFDE
 40324                           postdec2	equ	0xFDD
 40325                           plusw2	equ	0xFDB
 40326                           fsr2h	equ	0xFDA
 40327                           fsr2l	equ	0xFD9
 40328                           status	equ	0xFD8
 40329                           
 40330 ;; *************** function _rtcc_set_seconds *****************
 40331 ;; Defined at:
 40332 ;;		line 307 in file "rtcc.c"
 40333 ;; Parameters:    Size  Location     Type
 40334 ;;  seconds         1    wreg     unsigned char 
 40335 ;; Auto vars:     Size  Location     Type
 40336 ;;  seconds         1    0[BANK0 ] unsigned char 
 40337 ;; Return value:  Size  Location     Type
 40338 ;;                  1    wreg      void 
 40339 ;; Registers used:
 40340 ;;		wreg, status,2, cstack
 40341 ;; Tracked objects:
 40342 ;;		On entry : 0/0
 40343 ;;		On exit  : 0/0
 40344 ;;		Unchanged: 0/0
 40345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40347 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40349 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40350 ;;Total ram usage:        1 bytes
 40351 ;; Hardware stack levels used:    1
 40352 ;; Hardware stack levels required when called:   11
 40353 ;; This function calls:
 40354 ;;		__rtcc_write_disable
 40355 ;;		__rtcc_write_enable
 40356 ;; This function is called by:
 40357 ;;		__parse_command_long
 40358 ;;		_rtcc_increment_seconds
 40359 ;;		_rtcc_decrement_seconds
 40360 ;;		_rtcc_read_eeprom
 40361 ;; This function uses a non-reentrant model
 40362 ;;
 40363                           
 40364                           	psect	text179
 40365  01A916                     __ptext179:
 40366                           	opt stack 0
 40367  01A916                     _rtcc_set_seconds:
 40368                           	opt stack 16
 40369                           
 40370                           ;incstack = 0
 40371                           ;rtcc_set_seconds@seconds stored from wreg
 40372  01A916  0100               	movlb	0	; () banked
 40373  01A918  6F60               	movwf	rtcc_set_seconds@seconds& (0+255),b
 40374                           
 40375                           ;rtcc.c: 309: _rtcc_write_enable();
 40376  01A91A  ECEF  F0D4         	call	__rtcc_write_enable	;wreg free
 40377                           
 40378                           ;rtcc.c: 310: RTCCFGbits.RTCPTR1 = 0;
 40379  01A91E  010F               	movlb	15	; () banked
 40380  01A920  933F               	bcf	63,1,b	;volatile
 40381                           
 40382                           ; BSR set to: 15
 40383                           ;rtcc.c: 311: RTCCFGbits.RTCPTR0 = 0;
 40384  01A922  010F               	movlb	15	; () banked
 40385  01A924  913F               	bcf	63,0,b	;volatile
 40386                           
 40387                           ; BSR set to: 15
 40388                           ;rtcc.c: 312: RTCVALL = seconds;
 40389  01A926  C060  FF3A         	movff	rtcc_set_seconds@seconds,3898	;volatile
 40390                           
 40391                           ;rtcc.c: 313: _rtcc_write_disable();
 40392  01A92A  ECFA  F0D4         	call	__rtcc_write_disable	;wreg free
 40393  01A92E  0012               	return		;funcret
 40394  01A930                     __end_of_rtcc_set_seconds:
 40395                           	opt stack 0
 40396                           tosu	equ	0xFFF
 40397                           tosh	equ	0xFFE
 40398                           tosl	equ	0xFFD
 40399                           pclath	equ	0xFFA
 40400                           tblptru	equ	0xFF8
 40401                           tblptrh	equ	0xFF7
 40402                           tblptrl	equ	0xFF6
 40403                           tablat	equ	0xFF5
 40404                           prodh	equ	0xFF4
 40405                           prodl	equ	0xFF3
 40406                           intcon	equ	0xFF2
 40407                           intcon2	equ	0xFF1
 40408                           intcon3	equ	0xFF0
 40409                           postinc0	equ	0xFEE
 40410                           wreg	equ	0xFE8
 40411                           indf1	equ	0xFE7
 40412                           postinc1	equ	0xFE6
 40413                           postdec1	equ	0xFE5
 40414                           plusw1	equ	0xFE3
 40415                           fsr1h	equ	0xFE2
 40416                           fsr1l	equ	0xFE1
 40417                           indf2	equ	0xFDF
 40418                           postinc2	equ	0xFDE
 40419                           postdec2	equ	0xFDD
 40420                           plusw2	equ	0xFDB
 40421                           fsr2h	equ	0xFDA
 40422                           fsr2l	equ	0xFD9
 40423                           status	equ	0xFD8
 40424                           
 40425 ;; *************** function _rtcc_set_month *****************
 40426 ;; Defined at:
 40427 ;;		line 155 in file "rtcc.c"
 40428 ;; Parameters:    Size  Location     Type
 40429 ;;  month           1    wreg     unsigned char 
 40430 ;; Auto vars:     Size  Location     Type
 40431 ;;  month           1    0[BANK0 ] unsigned char 
 40432 ;; Return value:  Size  Location     Type
 40433 ;;                  1    wreg      void 
 40434 ;; Registers used:
 40435 ;;		wreg, status,2, cstack
 40436 ;; Tracked objects:
 40437 ;;		On entry : 0/0
 40438 ;;		On exit  : 0/0
 40439 ;;		Unchanged: 0/0
 40440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40442 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40444 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40445 ;;Total ram usage:        1 bytes
 40446 ;; Hardware stack levels used:    1
 40447 ;; Hardware stack levels required when called:   11
 40448 ;; This function calls:
 40449 ;;		__rtcc_write_disable
 40450 ;;		__rtcc_write_enable
 40451 ;; This function is called by:
 40452 ;;		__parse_command_long
 40453 ;;		_rtcc_increment_month
 40454 ;;		_rtcc_decrement_month
 40455 ;;		_rtcc_read_eeprom
 40456 ;; This function uses a non-reentrant model
 40457 ;;
 40458                           
 40459                           	psect	text180
 40460  01A930                     __ptext180:
 40461                           	opt stack 0
 40462  01A930                     _rtcc_set_month:
 40463                           	opt stack 16
 40464                           
 40465                           ;incstack = 0
 40466                           ;rtcc_set_month@month stored from wreg
 40467  01A930  0100               	movlb	0	; () banked
 40468  01A932  6F60               	movwf	rtcc_set_month@month& (0+255),b
 40469                           
 40470                           ;rtcc.c: 157: _rtcc_write_enable();
 40471  01A934  ECEF  F0D4         	call	__rtcc_write_enable	;wreg free
 40472                           
 40473                           ;rtcc.c: 158: RTCCFGbits.RTCPTR1 = 1;
 40474  01A938  010F               	movlb	15	; () banked
 40475  01A93A  833F               	bsf	63,1,b	;volatile
 40476                           
 40477                           ; BSR set to: 15
 40478                           ;rtcc.c: 159: RTCCFGbits.RTCPTR0 = 0;
 40479  01A93C  010F               	movlb	15	; () banked
 40480  01A93E  913F               	bcf	63,0,b	;volatile
 40481                           
 40482                           ; BSR set to: 15
 40483                           ;rtcc.c: 160: RTCVALH = month;
 40484  01A940  C060  FF3B         	movff	rtcc_set_month@month,3899	;volatile
 40485                           
 40486                           ;rtcc.c: 161: _rtcc_write_disable();
 40487  01A944  ECFA  F0D4         	call	__rtcc_write_disable	;wreg free
 40488  01A948  0012               	return		;funcret
 40489  01A94A                     __end_of_rtcc_set_month:
 40490                           	opt stack 0
 40491                           tosu	equ	0xFFF
 40492                           tosh	equ	0xFFE
 40493                           tosl	equ	0xFFD
 40494                           pclath	equ	0xFFA
 40495                           tblptru	equ	0xFF8
 40496                           tblptrh	equ	0xFF7
 40497                           tblptrl	equ	0xFF6
 40498                           tablat	equ	0xFF5
 40499                           prodh	equ	0xFF4
 40500                           prodl	equ	0xFF3
 40501                           intcon	equ	0xFF2
 40502                           intcon2	equ	0xFF1
 40503                           intcon3	equ	0xFF0
 40504                           postinc0	equ	0xFEE
 40505                           wreg	equ	0xFE8
 40506                           indf1	equ	0xFE7
 40507                           postinc1	equ	0xFE6
 40508                           postdec1	equ	0xFE5
 40509                           plusw1	equ	0xFE3
 40510                           fsr1h	equ	0xFE2
 40511                           fsr1l	equ	0xFE1
 40512                           indf2	equ	0xFDF
 40513                           postinc2	equ	0xFDE
 40514                           postdec2	equ	0xFDD
 40515                           plusw2	equ	0xFDB
 40516                           fsr2h	equ	0xFDA
 40517                           fsr2l	equ	0xFD9
 40518                           status	equ	0xFD8
 40519                           
 40520 ;; *************** function _rtcc_set_minutes *****************
 40521 ;; Defined at:
 40522 ;;		line 269 in file "rtcc.c"
 40523 ;; Parameters:    Size  Location     Type
 40524 ;;  minutes         1    wreg     unsigned char 
 40525 ;; Auto vars:     Size  Location     Type
 40526 ;;  minutes         1    0[BANK0 ] unsigned char 
 40527 ;; Return value:  Size  Location     Type
 40528 ;;                  1    wreg      void 
 40529 ;; Registers used:
 40530 ;;		wreg, status,2, cstack
 40531 ;; Tracked objects:
 40532 ;;		On entry : 0/0
 40533 ;;		On exit  : 0/0
 40534 ;;		Unchanged: 0/0
 40535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40537 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40539 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40540 ;;Total ram usage:        1 bytes
 40541 ;; Hardware stack levels used:    1
 40542 ;; Hardware stack levels required when called:   11
 40543 ;; This function calls:
 40544 ;;		__rtcc_write_disable
 40545 ;;		__rtcc_write_enable
 40546 ;; This function is called by:
 40547 ;;		__parse_command_long
 40548 ;;		_rtcc_increment_minutes
 40549 ;;		_rtcc_decrement_minutes
 40550 ;;		_rtcc_read_eeprom
 40551 ;; This function uses a non-reentrant model
 40552 ;;
 40553                           
 40554                           	psect	text181
 40555  01A94A                     __ptext181:
 40556                           	opt stack 0
 40557  01A94A                     _rtcc_set_minutes:
 40558                           	opt stack 16
 40559                           
 40560                           ;incstack = 0
 40561                           ;rtcc_set_minutes@minutes stored from wreg
 40562  01A94A  0100               	movlb	0	; () banked
 40563  01A94C  6F60               	movwf	rtcc_set_minutes@minutes& (0+255),b
 40564                           
 40565                           ;rtcc.c: 271: _rtcc_write_enable();
 40566  01A94E  ECEF  F0D4         	call	__rtcc_write_enable	;wreg free
 40567                           
 40568                           ;rtcc.c: 272: RTCCFGbits.RTCPTR1 = 0;
 40569  01A952  010F               	movlb	15	; () banked
 40570  01A954  933F               	bcf	63,1,b	;volatile
 40571                           
 40572                           ; BSR set to: 15
 40573                           ;rtcc.c: 273: RTCCFGbits.RTCPTR0 = 0;
 40574  01A956  010F               	movlb	15	; () banked
 40575  01A958  913F               	bcf	63,0,b	;volatile
 40576                           
 40577                           ; BSR set to: 15
 40578                           ;rtcc.c: 274: RTCVALH = minutes;
 40579  01A95A  C060  FF3B         	movff	rtcc_set_minutes@minutes,3899	;volatile
 40580                           
 40581                           ;rtcc.c: 275: _rtcc_write_disable();
 40582  01A95E  ECFA  F0D4         	call	__rtcc_write_disable	;wreg free
 40583  01A962  0012               	return		;funcret
 40584  01A964                     __end_of_rtcc_set_minutes:
 40585                           	opt stack 0
 40586                           tosu	equ	0xFFF
 40587                           tosh	equ	0xFFE
 40588                           tosl	equ	0xFFD
 40589                           pclath	equ	0xFFA
 40590                           tblptru	equ	0xFF8
 40591                           tblptrh	equ	0xFF7
 40592                           tblptrl	equ	0xFF6
 40593                           tablat	equ	0xFF5
 40594                           prodh	equ	0xFF4
 40595                           prodl	equ	0xFF3
 40596                           intcon	equ	0xFF2
 40597                           intcon2	equ	0xFF1
 40598                           intcon3	equ	0xFF0
 40599                           postinc0	equ	0xFEE
 40600                           wreg	equ	0xFE8
 40601                           indf1	equ	0xFE7
 40602                           postinc1	equ	0xFE6
 40603                           postdec1	equ	0xFE5
 40604                           plusw1	equ	0xFE3
 40605                           fsr1h	equ	0xFE2
 40606                           fsr1l	equ	0xFE1
 40607                           indf2	equ	0xFDF
 40608                           postinc2	equ	0xFDE
 40609                           postdec2	equ	0xFDD
 40610                           plusw2	equ	0xFDB
 40611                           fsr2h	equ	0xFDA
 40612                           fsr2l	equ	0xFD9
 40613                           status	equ	0xFD8
 40614                           
 40615 ;; *************** function _rtcc_set_hours *****************
 40616 ;; Defined at:
 40617 ;;		line 231 in file "rtcc.c"
 40618 ;; Parameters:    Size  Location     Type
 40619 ;;  hours           1    wreg     unsigned char 
 40620 ;; Auto vars:     Size  Location     Type
 40621 ;;  hours           1    0[BANK0 ] unsigned char 
 40622 ;; Return value:  Size  Location     Type
 40623 ;;                  1    wreg      void 
 40624 ;; Registers used:
 40625 ;;		wreg, status,2, cstack
 40626 ;; Tracked objects:
 40627 ;;		On entry : 0/0
 40628 ;;		On exit  : 0/0
 40629 ;;		Unchanged: 0/0
 40630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40632 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40634 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40635 ;;Total ram usage:        1 bytes
 40636 ;; Hardware stack levels used:    1
 40637 ;; Hardware stack levels required when called:   11
 40638 ;; This function calls:
 40639 ;;		__rtcc_write_disable
 40640 ;;		__rtcc_write_enable
 40641 ;; This function is called by:
 40642 ;;		__parse_command_long
 40643 ;;		_rtcc_increment_hours
 40644 ;;		_rtcc_decrement_hours
 40645 ;;		_rtcc_read_eeprom
 40646 ;; This function uses a non-reentrant model
 40647 ;;
 40648                           
 40649                           	psect	text182
 40650  01A964                     __ptext182:
 40651                           	opt stack 0
 40652  01A964                     _rtcc_set_hours:
 40653                           	opt stack 16
 40654                           
 40655                           ;incstack = 0
 40656                           ;rtcc_set_hours@hours stored from wreg
 40657  01A964  0100               	movlb	0	; () banked
 40658  01A966  6F60               	movwf	rtcc_set_hours@hours& (0+255),b
 40659                           
 40660                           ;rtcc.c: 233: _rtcc_write_enable();
 40661  01A968  ECEF  F0D4         	call	__rtcc_write_enable	;wreg free
 40662                           
 40663                           ;rtcc.c: 234: RTCCFGbits.RTCPTR1 = 0;
 40664  01A96C  010F               	movlb	15	; () banked
 40665  01A96E  933F               	bcf	63,1,b	;volatile
 40666                           
 40667                           ; BSR set to: 15
 40668                           ;rtcc.c: 235: RTCCFGbits.RTCPTR0 = 1;
 40669  01A970  010F               	movlb	15	; () banked
 40670  01A972  813F               	bsf	63,0,b	;volatile
 40671                           
 40672                           ; BSR set to: 15
 40673                           ;rtcc.c: 236: RTCVALL = hours;
 40674  01A974  C060  FF3A         	movff	rtcc_set_hours@hours,3898	;volatile
 40675                           
 40676                           ;rtcc.c: 237: _rtcc_write_disable();
 40677  01A978  ECFA  F0D4         	call	__rtcc_write_disable	;wreg free
 40678  01A97C  0012               	return		;funcret
 40679  01A97E                     __end_of_rtcc_set_hours:
 40680                           	opt stack 0
 40681                           tosu	equ	0xFFF
 40682                           tosh	equ	0xFFE
 40683                           tosl	equ	0xFFD
 40684                           pclath	equ	0xFFA
 40685                           tblptru	equ	0xFF8
 40686                           tblptrh	equ	0xFF7
 40687                           tblptrl	equ	0xFF6
 40688                           tablat	equ	0xFF5
 40689                           prodh	equ	0xFF4
 40690                           prodl	equ	0xFF3
 40691                           intcon	equ	0xFF2
 40692                           intcon2	equ	0xFF1
 40693                           intcon3	equ	0xFF0
 40694                           postinc0	equ	0xFEE
 40695                           wreg	equ	0xFE8
 40696                           indf1	equ	0xFE7
 40697                           postinc1	equ	0xFE6
 40698                           postdec1	equ	0xFE5
 40699                           plusw1	equ	0xFE3
 40700                           fsr1h	equ	0xFE2
 40701                           fsr1l	equ	0xFE1
 40702                           indf2	equ	0xFDF
 40703                           postinc2	equ	0xFDE
 40704                           postdec2	equ	0xFDD
 40705                           plusw2	equ	0xFDB
 40706                           fsr2h	equ	0xFDA
 40707                           fsr2l	equ	0xFD9
 40708                           status	equ	0xFD8
 40709                           
 40710 ;; *************** function _rtcc_set_day *****************
 40711 ;; Defined at:
 40712 ;;		line 193 in file "rtcc.c"
 40713 ;; Parameters:    Size  Location     Type
 40714 ;;  day             1    wreg     unsigned char 
 40715 ;; Auto vars:     Size  Location     Type
 40716 ;;  day             1    0[BANK0 ] unsigned char 
 40717 ;; Return value:  Size  Location     Type
 40718 ;;                  1    wreg      void 
 40719 ;; Registers used:
 40720 ;;		wreg, status,2, cstack
 40721 ;; Tracked objects:
 40722 ;;		On entry : 0/0
 40723 ;;		On exit  : 0/0
 40724 ;;		Unchanged: 0/0
 40725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40727 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40729 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40730 ;;Total ram usage:        1 bytes
 40731 ;; Hardware stack levels used:    1
 40732 ;; Hardware stack levels required when called:   11
 40733 ;; This function calls:
 40734 ;;		__rtcc_write_disable
 40735 ;;		__rtcc_write_enable
 40736 ;; This function is called by:
 40737 ;;		__parse_command_long
 40738 ;;		_rtcc_correct_day
 40739 ;;		_rtcc_increment_day
 40740 ;;		_rtcc_decrement_day
 40741 ;;		_rtcc_read_eeprom
 40742 ;; This function uses a non-reentrant model
 40743 ;;
 40744                           
 40745                           	psect	text183
 40746  01A97E                     __ptext183:
 40747                           	opt stack 0
 40748  01A97E                     _rtcc_set_day:
 40749                           	opt stack 16
 40750                           
 40751                           ;incstack = 0
 40752                           ;rtcc_set_day@day stored from wreg
 40753  01A97E  0100               	movlb	0	; () banked
 40754  01A980  6F60               	movwf	rtcc_set_day@day& (0+255),b
 40755                           
 40756                           ;rtcc.c: 195: _rtcc_write_enable();
 40757  01A982  ECEF  F0D4         	call	__rtcc_write_enable	;wreg free
 40758                           
 40759                           ;rtcc.c: 196: RTCCFGbits.RTCPTR1 = 1;
 40760  01A986  010F               	movlb	15	; () banked
 40761  01A988  833F               	bsf	63,1,b	;volatile
 40762                           
 40763                           ; BSR set to: 15
 40764                           ;rtcc.c: 197: RTCCFGbits.RTCPTR0 = 0;
 40765  01A98A  010F               	movlb	15	; () banked
 40766  01A98C  913F               	bcf	63,0,b	;volatile
 40767                           
 40768                           ; BSR set to: 15
 40769                           ;rtcc.c: 198: RTCVALL = day;
 40770  01A98E  C060  FF3A         	movff	rtcc_set_day@day,3898	;volatile
 40771                           
 40772                           ;rtcc.c: 199: _rtcc_write_disable();
 40773  01A992  ECFA  F0D4         	call	__rtcc_write_disable	;wreg free
 40774  01A996  0012               	return		;funcret
 40775  01A998                     __end_of_rtcc_set_day:
 40776                           	opt stack 0
 40777                           tosu	equ	0xFFF
 40778                           tosh	equ	0xFFE
 40779                           tosl	equ	0xFFD
 40780                           pclath	equ	0xFFA
 40781                           tblptru	equ	0xFF8
 40782                           tblptrh	equ	0xFF7
 40783                           tblptrl	equ	0xFF6
 40784                           tablat	equ	0xFF5
 40785                           prodh	equ	0xFF4
 40786                           prodl	equ	0xFF3
 40787                           intcon	equ	0xFF2
 40788                           intcon2	equ	0xFF1
 40789                           intcon3	equ	0xFF0
 40790                           postinc0	equ	0xFEE
 40791                           wreg	equ	0xFE8
 40792                           indf1	equ	0xFE7
 40793                           postinc1	equ	0xFE6
 40794                           postdec1	equ	0xFE5
 40795                           plusw1	equ	0xFE3
 40796                           fsr1h	equ	0xFE2
 40797                           fsr1l	equ	0xFE1
 40798                           indf2	equ	0xFDF
 40799                           postinc2	equ	0xFDE
 40800                           postdec2	equ	0xFDD
 40801                           plusw2	equ	0xFDB
 40802                           fsr2h	equ	0xFDA
 40803                           fsr2l	equ	0xFD9
 40804                           status	equ	0xFD8
 40805                           
 40806 ;; *************** function __rtcc_write_enable *****************
 40807 ;; Defined at:
 40808 ;;		line 14 in file "rtcc.c"
 40809 ;; Parameters:    Size  Location     Type
 40810 ;;		None
 40811 ;; Auto vars:     Size  Location     Type
 40812 ;;		None
 40813 ;; Return value:  Size  Location     Type
 40814 ;;                  1    wreg      void 
 40815 ;; Registers used:
 40816 ;;		wreg, status,2
 40817 ;; Tracked objects:
 40818 ;;		On entry : 0/0
 40819 ;;		On exit  : 0/0
 40820 ;;		Unchanged: 0/0
 40821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40826 ;;Total ram usage:        0 bytes
 40827 ;; Hardware stack levels used:    1
 40828 ;; Hardware stack levels required when called:   10
 40829 ;; This function calls:
 40830 ;;		Nothing
 40831 ;; This function is called by:
 40832 ;;		_rtcc_set_year
 40833 ;;		_rtcc_set_month
 40834 ;;		_rtcc_set_day
 40835 ;;		_rtcc_set_hours
 40836 ;;		_rtcc_set_minutes
 40837 ;;		_rtcc_set_seconds
 40838 ;; This function uses a non-reentrant model
 40839 ;;
 40840                           
 40841                           	psect	text184
 40842  01A9DE                     __ptext184:
 40843                           	opt stack 0
 40844  01A9DE                     __rtcc_write_enable:
 40845                           	opt stack 16
 40846                           
 40847                           ;rtcc.c: 16: while(!RTCCFGbits.RTCWREN)
 40848                           
 40849                           ;incstack = 0
 40850  01A9DE  D006               	goto	l18554
 40851  01A9E0                     l18550:
 40852                           
 40853                           ;rtcc.c: 17: {
 40854                           ;rtcc.c: 18: EECON2 = 0x55;
 40855  01A9E0  0E55               	movlw	85
 40856  01A9E2  6EA7               	movwf	4007,c	;volatile
 40857                           
 40858                           ;rtcc.c: 19: EECON2 = 0xAA;
 40859  01A9E4  0EAA               	movlw	170
 40860  01A9E6  6EA7               	movwf	4007,c	;volatile
 40861                           
 40862                           ;rtcc.c: 20: RTCCFGbits.RTCWREN = 1;
 40863  01A9E8  010F               	movlb	15	; () banked
 40864  01A9EA  8B3F               	bsf	63,5,b	;volatile
 40865  01A9EC                     l18554:
 40866  01A9EC  010F               	movlb	15	; () banked
 40867  01A9EE  BB3F               	btfsc	63,5,b	;volatile
 40868  01A9F0  0012               	return	
 40869  01A9F2  D7F6               	goto	l18550
 40870  01A9F4                     __end_of__rtcc_write_enable:
 40871                           	opt stack 0
 40872                           tosu	equ	0xFFF
 40873                           tosh	equ	0xFFE
 40874                           tosl	equ	0xFFD
 40875                           pclath	equ	0xFFA
 40876                           tblptru	equ	0xFF8
 40877                           tblptrh	equ	0xFF7
 40878                           tblptrl	equ	0xFF6
 40879                           tablat	equ	0xFF5
 40880                           prodh	equ	0xFF4
 40881                           prodl	equ	0xFF3
 40882                           intcon	equ	0xFF2
 40883                           intcon2	equ	0xFF1
 40884                           intcon3	equ	0xFF0
 40885                           postinc0	equ	0xFEE
 40886                           wreg	equ	0xFE8
 40887                           indf1	equ	0xFE7
 40888                           postinc1	equ	0xFE6
 40889                           postdec1	equ	0xFE5
 40890                           plusw1	equ	0xFE3
 40891                           fsr1h	equ	0xFE2
 40892                           fsr1l	equ	0xFE1
 40893                           indf2	equ	0xFDF
 40894                           postinc2	equ	0xFDE
 40895                           postdec2	equ	0xFDD
 40896                           plusw2	equ	0xFDB
 40897                           fsr2h	equ	0xFDA
 40898                           fsr2l	equ	0xFD9
 40899                           status	equ	0xFD8
 40900                           
 40901 ;; *************** function __rtcc_write_disable *****************
 40902 ;; Defined at:
 40903 ;;		line 24 in file "rtcc.c"
 40904 ;; Parameters:    Size  Location     Type
 40905 ;;		None
 40906 ;; Auto vars:     Size  Location     Type
 40907 ;;		None
 40908 ;; Return value:  Size  Location     Type
 40909 ;;                  1    wreg      void 
 40910 ;; Registers used:
 40911 ;;		wreg, status,2
 40912 ;; Tracked objects:
 40913 ;;		On entry : 0/0
 40914 ;;		On exit  : 0/0
 40915 ;;		Unchanged: 0/0
 40916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40921 ;;Total ram usage:        0 bytes
 40922 ;; Hardware stack levels used:    1
 40923 ;; Hardware stack levels required when called:   10
 40924 ;; This function calls:
 40925 ;;		Nothing
 40926 ;; This function is called by:
 40927 ;;		_rtcc_set_year
 40928 ;;		_rtcc_set_month
 40929 ;;		_rtcc_set_day
 40930 ;;		_rtcc_set_hours
 40931 ;;		_rtcc_set_minutes
 40932 ;;		_rtcc_set_seconds
 40933 ;; This function uses a non-reentrant model
 40934 ;;
 40935                           
 40936                           	psect	text185
 40937  01A9F4                     __ptext185:
 40938                           	opt stack 0
 40939  01A9F4                     __rtcc_write_disable:
 40940                           	opt stack 16
 40941                           
 40942                           ;rtcc.c: 26: while(RTCCFGbits.RTCWREN)
 40943                           
 40944                           ; BSR set to: 15
 40945                           ;incstack = 0
 40946  01A9F4  D006               	goto	l18562
 40947  01A9F6                     l18558:
 40948                           
 40949                           ;rtcc.c: 27: {
 40950                           ;rtcc.c: 28: EECON2 = 0x55;
 40951  01A9F6  0E55               	movlw	85
 40952  01A9F8  6EA7               	movwf	4007,c	;volatile
 40953                           
 40954                           ;rtcc.c: 29: EECON2 = 0xAA;
 40955  01A9FA  0EAA               	movlw	170
 40956  01A9FC  6EA7               	movwf	4007,c	;volatile
 40957                           
 40958                           ;rtcc.c: 30: RTCCFGbits.RTCWREN = 0;
 40959  01A9FE  010F               	movlb	15	; () banked
 40960  01AA00  9B3F               	bcf	63,5,b	;volatile
 40961  01AA02                     l18562:
 40962  01AA02  010F               	movlb	15	; () banked
 40963  01AA04  AB3F               	btfss	63,5,b	;volatile
 40964  01AA06  0012               	return	
 40965  01AA08  D7F6               	goto	l18558
 40966  01AA0A                     __end_of__rtcc_write_disable:
 40967                           	opt stack 0
 40968                           tosu	equ	0xFFF
 40969                           tosh	equ	0xFFE
 40970                           tosl	equ	0xFFD
 40971                           pclath	equ	0xFFA
 40972                           tblptru	equ	0xFF8
 40973                           tblptrh	equ	0xFF7
 40974                           tblptrl	equ	0xFF6
 40975                           tablat	equ	0xFF5
 40976                           prodh	equ	0xFF4
 40977                           prodl	equ	0xFF3
 40978                           intcon	equ	0xFF2
 40979                           intcon2	equ	0xFF1
 40980                           intcon3	equ	0xFF0
 40981                           postinc0	equ	0xFEE
 40982                           wreg	equ	0xFE8
 40983                           indf1	equ	0xFE7
 40984                           postinc1	equ	0xFE6
 40985                           postdec1	equ	0xFE5
 40986                           plusw1	equ	0xFE3
 40987                           fsr1h	equ	0xFE2
 40988                           fsr1l	equ	0xFE1
 40989                           indf2	equ	0xFDF
 40990                           postinc2	equ	0xFDE
 40991                           postdec2	equ	0xFDD
 40992                           plusw2	equ	0xFDB
 40993                           fsr2h	equ	0xFDA
 40994                           fsr2l	equ	0xFD9
 40995                           status	equ	0xFD8
 40996                           
 40997 ;; *************** function _buck_remote_set_synchronous *****************
 40998 ;; Defined at:
 40999 ;;		line 621 in file "buck.c"
 41000 ;; Parameters:    Size  Location     Type
 41001 ;;  synchronous     1    wreg     unsigned char 
 41002 ;; Auto vars:     Size  Location     Type
 41003 ;;  synchronous     1    0[BANK0 ] unsigned char 
 41004 ;; Return value:  Size  Location     Type
 41005 ;;                  1    wreg      void 
 41006 ;; Registers used:
 41007 ;;		wreg, status,2
 41008 ;; Tracked objects:
 41009 ;;		On entry : 0/0
 41010 ;;		On exit  : 0/0
 41011 ;;		Unchanged: 0/0
 41012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41014 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41016 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41017 ;;Total ram usage:        1 bytes
 41018 ;; Hardware stack levels used:    1
 41019 ;; Hardware stack levels required when called:   10
 41020 ;; This function calls:
 41021 ;;		Nothing
 41022 ;; This function is called by:
 41023 ;;		__parse_command_long
 41024 ;; This function uses a non-reentrant model
 41025 ;;
 41026                           
 41027                           	psect	text186
 41028  01A832                     __ptext186:
 41029                           	opt stack 0
 41030  01A832                     _buck_remote_set_synchronous:
 41031                           	opt stack 18
 41032                           
 41033                           ; BSR set to: 15
 41034                           ;incstack = 0
 41035                           ;buck_remote_set_synchronous@synchronous stored from wreg
 41036  01A832  0100               	movlb	0	; () banked
 41037  01A834  6F60               	movwf	buck_remote_set_synchronous@synchronous& (0+255),b
 41038                           
 41039                           ;buck.c: 623: if(synchronous)
 41040  01A836  0100               	movlb	0	; () banked
 41041  01A838  5160               	movf	buck_remote_set_synchronous@synchronous& (0+255),w,b
 41042  01A83A  0100               	movlb	0	; () banked
 41043  01A83C  B4D8               	btfsc	status,2,c
 41044  01A83E  D004               	goto	l19266
 41045                           
 41046                           ; BSR set to: 0
 41047                           ;buck.c: 624: buck_remote_synchronous = 1;
 41048  01A840  0E01               	movlw	1
 41049  01A842  0100               	movlb	0	; () banked
 41050  01A844  6FE2               	movwf	_buck_remote_synchronous& (0+255),b
 41051  01A846  0012               	return	
 41052  01A848                     l19266:
 41053                           
 41054                           ; BSR set to: 0
 41055                           ;buck.c: 625: else
 41056                           ;buck.c: 626: buck_remote_synchronous = 0;
 41057  01A848  0E00               	movlw	0
 41058  01A84A  0100               	movlb	0	; () banked
 41059  01A84C  6FE2               	movwf	_buck_remote_synchronous& (0+255),b
 41060  01A84E  0012               	return	
 41061  01A850                     __end_of_buck_remote_set_synchronous:
 41062                           	opt stack 0
 41063                           tosu	equ	0xFFF
 41064                           tosh	equ	0xFFE
 41065                           tosl	equ	0xFFD
 41066                           pclath	equ	0xFFA
 41067                           tblptru	equ	0xFF8
 41068                           tblptrh	equ	0xFF7
 41069                           tblptrl	equ	0xFF6
 41070                           tablat	equ	0xFF5
 41071                           prodh	equ	0xFF4
 41072                           prodl	equ	0xFF3
 41073                           intcon	equ	0xFF2
 41074                           intcon2	equ	0xFF1
 41075                           intcon3	equ	0xFF0
 41076                           postinc0	equ	0xFEE
 41077                           wreg	equ	0xFE8
 41078                           indf1	equ	0xFE7
 41079                           postinc1	equ	0xFE6
 41080                           postdec1	equ	0xFE5
 41081                           plusw1	equ	0xFE3
 41082                           fsr1h	equ	0xFE2
 41083                           fsr1l	equ	0xFE1
 41084                           indf2	equ	0xFDF
 41085                           postinc2	equ	0xFDE
 41086                           postdec2	equ	0xFDD
 41087                           plusw2	equ	0xFDB
 41088                           fsr2h	equ	0xFDA
 41089                           fsr2l	equ	0xFD9
 41090                           status	equ	0xFD8
 41091                           
 41092 ;; *************** function _buck_remote_set_on *****************
 41093 ;; Defined at:
 41094 ;;		line 613 in file "buck.c"
 41095 ;; Parameters:    Size  Location     Type
 41096 ;;  on              1    wreg     unsigned char 
 41097 ;; Auto vars:     Size  Location     Type
 41098 ;;  on              1    0[BANK0 ] unsigned char 
 41099 ;; Return value:  Size  Location     Type
 41100 ;;                  1    wreg      void 
 41101 ;; Registers used:
 41102 ;;		wreg, status,2
 41103 ;; Tracked objects:
 41104 ;;		On entry : 0/0
 41105 ;;		On exit  : 0/0
 41106 ;;		Unchanged: 0/0
 41107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41109 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41111 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41112 ;;Total ram usage:        1 bytes
 41113 ;; Hardware stack levels used:    1
 41114 ;; Hardware stack levels required when called:   10
 41115 ;; This function calls:
 41116 ;;		Nothing
 41117 ;; This function is called by:
 41118 ;;		__parse_command_long
 41119 ;; This function uses a non-reentrant model
 41120 ;;
 41121                           
 41122                           	psect	text187
 41123  01A850                     __ptext187:
 41124                           	opt stack 0
 41125  01A850                     _buck_remote_set_on:
 41126                           	opt stack 18
 41127                           
 41128                           ; BSR set to: 0
 41129                           ;incstack = 0
 41130                           ;buck_remote_set_on@on stored from wreg
 41131  01A850  0100               	movlb	0	; () banked
 41132  01A852  6F60               	movwf	buck_remote_set_on@on& (0+255),b
 41133                           
 41134                           ;buck.c: 615: if(on)
 41135  01A854  0100               	movlb	0	; () banked
 41136  01A856  5160               	movf	buck_remote_set_on@on& (0+255),w,b
 41137  01A858  0100               	movlb	0	; () banked
 41138  01A85A  B4D8               	btfsc	status,2,c
 41139  01A85C  D004               	goto	l19260
 41140                           
 41141                           ; BSR set to: 0
 41142                           ;buck.c: 616: buck_remote_on = 1;
 41143  01A85E  0E01               	movlw	1
 41144  01A860  0100               	movlb	0	; () banked
 41145  01A862  6FE3               	movwf	_buck_remote_on& (0+255),b
 41146  01A864  0012               	return	
 41147  01A866                     l19260:
 41148                           
 41149                           ; BSR set to: 0
 41150                           ;buck.c: 617: else
 41151                           ;buck.c: 618: buck_remote_on = 0;
 41152  01A866  0E00               	movlw	0
 41153  01A868  0100               	movlb	0	; () banked
 41154  01A86A  6FE3               	movwf	_buck_remote_on& (0+255),b
 41155  01A86C  0012               	return	
 41156  01A86E                     __end_of_buck_remote_set_on:
 41157                           	opt stack 0
 41158                           tosu	equ	0xFFF
 41159                           tosh	equ	0xFFE
 41160                           tosl	equ	0xFFD
 41161                           pclath	equ	0xFFA
 41162                           tblptru	equ	0xFF8
 41163                           tblptrh	equ	0xFF7
 41164                           tblptrl	equ	0xFF6
 41165                           tablat	equ	0xFF5
 41166                           prodh	equ	0xFF4
 41167                           prodl	equ	0xFF3
 41168                           intcon	equ	0xFF2
 41169                           intcon2	equ	0xFF1
 41170                           intcon3	equ	0xFF0
 41171                           postinc0	equ	0xFEE
 41172                           wreg	equ	0xFE8
 41173                           indf1	equ	0xFE7
 41174                           postinc1	equ	0xFE6
 41175                           postdec1	equ	0xFE5
 41176                           plusw1	equ	0xFE3
 41177                           fsr1h	equ	0xFE2
 41178                           fsr1l	equ	0xFE1
 41179                           indf2	equ	0xFDF
 41180                           postinc2	equ	0xFDE
 41181                           postdec2	equ	0xFDD
 41182                           plusw2	equ	0xFDB
 41183                           fsr2h	equ	0xFDA
 41184                           fsr2l	equ	0xFD9
 41185                           status	equ	0xFD8
 41186                           
 41187 ;; *************** function _buck_remote_set_enable *****************
 41188 ;; Defined at:
 41189 ;;		line 605 in file "buck.c"
 41190 ;; Parameters:    Size  Location     Type
 41191 ;;  remote          1    wreg     unsigned char 
 41192 ;; Auto vars:     Size  Location     Type
 41193 ;;  remote          1    0[BANK0 ] unsigned char 
 41194 ;; Return value:  Size  Location     Type
 41195 ;;                  1    wreg      void 
 41196 ;; Registers used:
 41197 ;;		wreg, status,2
 41198 ;; Tracked objects:
 41199 ;;		On entry : 0/0
 41200 ;;		On exit  : 0/0
 41201 ;;		Unchanged: 0/0
 41202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41204 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41206 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41207 ;;Total ram usage:        1 bytes
 41208 ;; Hardware stack levels used:    1
 41209 ;; Hardware stack levels required when called:   10
 41210 ;; This function calls:
 41211 ;;		Nothing
 41212 ;; This function is called by:
 41213 ;;		__parse_command_long
 41214 ;; This function uses a non-reentrant model
 41215 ;;
 41216                           
 41217                           	psect	text188
 41218  01A86E                     __ptext188:
 41219                           	opt stack 0
 41220  01A86E                     _buck_remote_set_enable:
 41221                           	opt stack 18
 41222                           
 41223                           ; BSR set to: 0
 41224                           ;incstack = 0
 41225                           ;buck_remote_set_enable@remote stored from wreg
 41226  01A86E  0100               	movlb	0	; () banked
 41227  01A870  6F60               	movwf	buck_remote_set_enable@remote& (0+255),b
 41228                           
 41229                           ;buck.c: 607: if(remote)
 41230  01A872  0100               	movlb	0	; () banked
 41231  01A874  5160               	movf	buck_remote_set_enable@remote& (0+255),w,b
 41232  01A876  0100               	movlb	0	; () banked
 41233  01A878  B4D8               	btfsc	status,2,c
 41234  01A87A  D004               	goto	l19254
 41235                           
 41236                           ; BSR set to: 0
 41237                           ;buck.c: 608: buck_remote_enable = 1;
 41238  01A87C  0E01               	movlw	1
 41239  01A87E  0101               	movlb	1	; () banked
 41240  01A880  6FF1               	movwf	_buck_remote_enable& (0+255),b
 41241  01A882  0012               	return	
 41242  01A884                     l19254:
 41243                           
 41244                           ;buck.c: 609: else
 41245                           ;buck.c: 610: buck_remote_enable = 0;
 41246  01A884  0E00               	movlw	0
 41247  01A886  0101               	movlb	1	; () banked
 41248  01A888  6FF1               	movwf	_buck_remote_enable& (0+255),b
 41249  01A88A  0012               	return	
 41250  01A88C                     __end_of_buck_remote_set_enable:
 41251                           	opt stack 0
 41252                           tosu	equ	0xFFF
 41253                           tosh	equ	0xFFE
 41254                           tosl	equ	0xFFD
 41255                           pclath	equ	0xFFA
 41256                           tblptru	equ	0xFF8
 41257                           tblptrh	equ	0xFF7
 41258                           tblptrl	equ	0xFF6
 41259                           tablat	equ	0xFF5
 41260                           prodh	equ	0xFF4
 41261                           prodl	equ	0xFF3
 41262                           intcon	equ	0xFF2
 41263                           intcon2	equ	0xFF1
 41264                           intcon3	equ	0xFF0
 41265                           postinc0	equ	0xFEE
 41266                           wreg	equ	0xFE8
 41267                           indf1	equ	0xFE7
 41268                           postinc1	equ	0xFE6
 41269                           postdec1	equ	0xFE5
 41270                           plusw1	equ	0xFE3
 41271                           fsr1h	equ	0xFE2
 41272                           fsr1l	equ	0xFE1
 41273                           indf2	equ	0xFDF
 41274                           postinc2	equ	0xFDE
 41275                           postdec2	equ	0xFDD
 41276                           plusw2	equ	0xFDB
 41277                           fsr2h	equ	0xFDA
 41278                           fsr2l	equ	0xFD9
 41279                           status	equ	0xFD8
 41280                           
 41281 ;; *************** function _buck_remote_set_dutycycle *****************
 41282 ;; Defined at:
 41283 ;;		line 629 in file "buck.c"
 41284 ;; Parameters:    Size  Location     Type
 41285 ;;  dutycycle       1    wreg     unsigned char 
 41286 ;; Auto vars:     Size  Location     Type
 41287 ;;  dutycycle       1    0[BANK0 ] unsigned char 
 41288 ;; Return value:  Size  Location     Type
 41289 ;;                  1    wreg      void 
 41290 ;; Registers used:
 41291 ;;		wreg, status,2, status,0
 41292 ;; Tracked objects:
 41293 ;;		On entry : 0/0
 41294 ;;		On exit  : 0/0
 41295 ;;		Unchanged: 0/0
 41296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41298 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41300 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41301 ;;Total ram usage:        1 bytes
 41302 ;; Hardware stack levels used:    1
 41303 ;; Hardware stack levels required when called:   10
 41304 ;; This function calls:
 41305 ;;		Nothing
 41306 ;; This function is called by:
 41307 ;;		__parse_command_long
 41308 ;; This function uses a non-reentrant model
 41309 ;;
 41310                           
 41311                           	psect	text189
 41312  01A702                     __ptext189:
 41313                           	opt stack 0
 41314  01A702                     _buck_remote_set_dutycycle:
 41315                           	opt stack 18
 41316                           
 41317                           ; BSR set to: 1
 41318                           ;incstack = 0
 41319                           ;buck_remote_set_dutycycle@dutycycle stored from wreg
 41320  01A702  0100               	movlb	0	; () banked
 41321  01A704  6F60               	movwf	buck_remote_set_dutycycle@dutycycle& (0+255),b
 41322                           
 41323                           ;buck.c: 631: if(dutycycle>242)
 41324  01A706  0EF2               	movlw	242
 41325  01A708  0100               	movlb	0	; () banked
 41326  01A70A  6560               	cpfsgt	buck_remote_set_dutycycle@dutycycle& (0+255),b
 41327  01A70C  D004               	goto	l19280
 41328                           
 41329                           ; BSR set to: 0
 41330                           ;buck.c: 632: buck_remote_dutycycle = 242;
 41331  01A70E  0EF2               	movlw	242
 41332  01A710  0100               	movlb	0	; () banked
 41333  01A712  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 41334  01A714  0012               	return	
 41335  01A716                     l19280:
 41336                           
 41337                           ; BSR set to: 0
 41338                           ;buck.c: 633: else if(dutycycle<40)
 41339  01A716  0E28               	movlw	40
 41340  01A718  0100               	movlb	0	; () banked
 41341  01A71A  6160               	cpfslt	buck_remote_set_dutycycle@dutycycle& (0+255),b
 41342  01A71C  D004               	goto	l2620
 41343                           
 41344                           ; BSR set to: 0
 41345                           ;buck.c: 634: buck_remote_dutycycle = 40;
 41346  01A71E  0E28               	movlw	40
 41347  01A720  0100               	movlb	0	; () banked
 41348  01A722  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 41349  01A724  0012               	return	
 41350  01A726                     l2620:
 41351                           
 41352                           ; BSR set to: 0
 41353                           ;buck.c: 635: else
 41354                           ;buck.c: 636: buck_remote_dutycycle = (uint8_t) dutycycle;
 41355  01A726  C060  F0E1         	movff	buck_remote_set_dutycycle@dutycycle,_buck_remote_dutycycle
 41356                           
 41357                           ; BSR set to: 0
 41358  01A72A  0012               	return	
 41359  01A72C                     __end_of_buck_remote_set_dutycycle:
 41360                           	opt stack 0
 41361                           tosu	equ	0xFFF
 41362                           tosh	equ	0xFFE
 41363                           tosl	equ	0xFFD
 41364                           pclath	equ	0xFFA
 41365                           tblptru	equ	0xFF8
 41366                           tblptrh	equ	0xFF7
 41367                           tblptrl	equ	0xFF6
 41368                           tablat	equ	0xFF5
 41369                           prodh	equ	0xFF4
 41370                           prodl	equ	0xFF3
 41371                           intcon	equ	0xFF2
 41372                           intcon2	equ	0xFF1
 41373                           intcon3	equ	0xFF0
 41374                           postinc0	equ	0xFEE
 41375                           wreg	equ	0xFE8
 41376                           indf1	equ	0xFE7
 41377                           postinc1	equ	0xFE6
 41378                           postdec1	equ	0xFE5
 41379                           plusw1	equ	0xFE3
 41380                           fsr1h	equ	0xFE2
 41381                           fsr1l	equ	0xFE1
 41382                           indf2	equ	0xFDF
 41383                           postinc2	equ	0xFDE
 41384                           postdec2	equ	0xFDD
 41385                           plusw2	equ	0xFDB
 41386                           fsr2h	equ	0xFDA
 41387                           fsr2l	equ	0xFD9
 41388                           status	equ	0xFD8
 41389                           
 41390 ;; *************** function _buck_remote_change_dutycycle *****************
 41391 ;; Defined at:
 41392 ;;		line 639 in file "buck.c"
 41393 ;; Parameters:    Size  Location     Type
 41394 ;;  change          1    wreg     char 
 41395 ;; Auto vars:     Size  Location     Type
 41396 ;;  change          1    0[BANK0 ] char 
 41397 ;;  new_dutycycl    2    1[BANK0 ] int 
 41398 ;; Return value:  Size  Location     Type
 41399 ;;                  1    wreg      void 
 41400 ;; Registers used:
 41401 ;;		wreg, status,2, status,0
 41402 ;; Tracked objects:
 41403 ;;		On entry : 0/0
 41404 ;;		On exit  : 0/0
 41405 ;;		Unchanged: 0/0
 41406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41408 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41410 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41411 ;;Total ram usage:        3 bytes
 41412 ;; Hardware stack levels used:    1
 41413 ;; Hardware stack levels required when called:   10
 41414 ;; This function calls:
 41415 ;;		Nothing
 41416 ;; This function is called by:
 41417 ;;		__parse_command_long
 41418 ;; This function uses a non-reentrant model
 41419 ;;
 41420                           
 41421                           	psect	text190
 41422  019668                     __ptext190:
 41423                           	opt stack 0
 41424  019668                     _buck_remote_change_dutycycle:
 41425                           	opt stack 18
 41426                           
 41427                           ; BSR set to: 0
 41428                           ;incstack = 0
 41429                           ;buck_remote_change_dutycycle@change stored from wreg
 41430  019668  0100               	movlb	0	; () banked
 41431  01966A  6F60               	movwf	buck_remote_change_dutycycle@change& (0+255),b
 41432                           
 41433                           ;buck.c: 641: int16_t new_dutycycle = buck_dutycycle + change;
 41434  01966C  0100               	movlb	0	; () banked
 41435  01966E  51E4               	movf	_buck_dutycycle& (0+255),w,b
 41436  019670  0100               	movlb	0	; () banked
 41437  019672  2560               	addwf	buck_remote_change_dutycycle@change& (0+255),w,b
 41438  019674  0100               	movlb	0	; () banked
 41439  019676  6F61               	movwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),b
 41440  019678  6AE8               	clrf	wreg,c
 41441  01967A  B0D8               	btfsc	status,0,c
 41442  01967C  2AE8               	incf	wreg,f,c
 41443  01967E  0100               	movlb	0	; () banked
 41444  019680  BF60               	btfsc	buck_remote_change_dutycycle@change& (0+255),7,b
 41445  019682  06E8               	decf	wreg,f,c
 41446  019684  0100               	movlb	0	; () banked
 41447  019686  6F62               	movwf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),b
 41448                           
 41449                           ;buck.c: 642: if(new_dutycycle>242)
 41450  019688  0100               	movlb	0	; () banked
 41451  01968A  BF62               	btfsc	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),7,b
 41452  01968C  D00C               	goto	l19272
 41453  01968E  0100               	movlb	0	; () banked
 41454  019690  5162               	movf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),w,b
 41455  019692  E105               	bnz	u18340
 41456  019694  0EF3               	movlw	243
 41457  019696  0100               	movlb	0	; () banked
 41458  019698  5D61               	subwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),w,b
 41459  01969A  A0D8               	btfss	status,0,c
 41460  01969C  D004               	goto	l19272
 41461  01969E                     u18340:
 41462                           
 41463                           ; BSR set to: 0
 41464                           ;buck.c: 643: buck_remote_dutycycle = 242;
 41465  01969E  0EF2               	movlw	242
 41466  0196A0  0100               	movlb	0	; () banked
 41467  0196A2  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 41468  0196A4  0012               	return	
 41469  0196A6                     l19272:
 41470                           
 41471                           ; BSR set to: 0
 41472                           ;buck.c: 644: else if(new_dutycycle<40)
 41473  0196A6  0100               	movlb	0	; () banked
 41474  0196A8  BF62               	btfsc	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),7,b
 41475  0196AA  D008               	goto	l19274
 41476  0196AC  0100               	movlb	0	; () banked
 41477  0196AE  5162               	movf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),w,b
 41478  0196B0  E109               	bnz	l2627
 41479  0196B2  0E28               	movlw	40
 41480  0196B4  0100               	movlb	0	; () banked
 41481  0196B6  5D61               	subwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),w,b
 41482  0196B8  B0D8               	btfsc	status,0,c
 41483  0196BA  D004               	goto	l2627
 41484  0196BC                     l19274:
 41485                           
 41486                           ; BSR set to: 0
 41487                           ;buck.c: 645: buck_remote_dutycycle = 40;
 41488  0196BC  0E28               	movlw	40
 41489  0196BE  0100               	movlb	0	; () banked
 41490  0196C0  6FE1               	movwf	_buck_remote_dutycycle& (0+255),b
 41491  0196C2  0012               	return	
 41492  0196C4                     l2627:
 41493                           
 41494                           ; BSR set to: 0
 41495                           ;buck.c: 646: else
 41496                           ;buck.c: 647: buck_remote_dutycycle = (uint8_t) new_dutycycle;
 41497  0196C4  C061  F0E1         	movff	buck_remote_change_dutycycle@new_dutycycle,_buck_remote_dutycycle
 41498                           
 41499                           ; BSR set to: 0
 41500  0196C8  0012               	return	
 41501  0196CA                     __end_of_buck_remote_change_dutycycle:
 41502                           	opt stack 0
 41503                           tosu	equ	0xFFF
 41504                           tosh	equ	0xFFE
 41505                           tosl	equ	0xFFD
 41506                           pclath	equ	0xFFA
 41507                           tblptru	equ	0xFF8
 41508                           tblptrh	equ	0xFF7
 41509                           tblptrl	equ	0xFF6
 41510                           tablat	equ	0xFF5
 41511                           prodh	equ	0xFF4
 41512                           prodl	equ	0xFF3
 41513                           intcon	equ	0xFF2
 41514                           intcon2	equ	0xFF1
 41515                           intcon3	equ	0xFF0
 41516                           postinc0	equ	0xFEE
 41517                           wreg	equ	0xFE8
 41518                           indf1	equ	0xFE7
 41519                           postinc1	equ	0xFE6
 41520                           postdec1	equ	0xFE5
 41521                           plusw1	equ	0xFE3
 41522                           fsr1h	equ	0xFE2
 41523                           fsr1l	equ	0xFE1
 41524                           indf2	equ	0xFDF
 41525                           postinc2	equ	0xFDE
 41526                           postdec2	equ	0xFDD
 41527                           plusw2	equ	0xFDB
 41528                           fsr2h	equ	0xFDA
 41529                           fsr2l	equ	0xFD9
 41530                           status	equ	0xFD8
 41531                           
 41532 ;; *************** function __parse_command_calibration *****************
 41533 ;; Defined at:
 41534 ;;		line 505 in file "app_device_custom_hid.c"
 41535 ;; Parameters:    Size  Location     Type
 41536 ;;  cmd             1    wreg     unsigned char 
 41537 ;;  item            1    3[BANK0 ] unsigned char 
 41538 ;;  dat1            1    4[BANK0 ] unsigned char 
 41539 ;;  dat2            1    5[BANK0 ] unsigned char 
 41540 ;;  dat3            1    6[BANK0 ] unsigned char 
 41541 ;; Auto vars:     Size  Location     Type
 41542 ;;  cmd             1    0[COMRAM] unsigned char 
 41543 ;;  parameter       2    9[BANK0 ] int 
 41544 ;; Return value:  Size  Location     Type
 41545 ;;                  1    wreg      void 
 41546 ;; Registers used:
 41547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41548 ;; Tracked objects:
 41549 ;;		On entry : 0/0
 41550 ;;		On exit  : 0/0
 41551 ;;		Unchanged: 0/0
 41552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41553 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41554 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41555 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41556 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41557 ;;Total ram usage:        8 bytes
 41558 ;; Hardware stack levels used:    1
 41559 ;; Hardware stack levels required when called:   11
 41560 ;; This function calls:
 41561 ;;		_schedule_eeprom_write_task
 41562 ;; This function is called by:
 41563 ;;		_APP_DeviceCustomHIDTasks
 41564 ;; This function uses a non-reentrant model
 41565 ;;
 41566                           
 41567                           	psect	text191
 41568  0153BA                     __ptext191:
 41569                           	opt stack 0
 41570  0153BA                     __parse_command_calibration:
 41571                           	opt stack 18
 41572                           
 41573                           ;app_device_custom_hid.c: 507: int16_t parameter = dat1;
 41574                           
 41575                           ; BSR set to: 0
 41576                           ;incstack = 0
 41577  0153BA  C064  F069         	movff	__parse_command_calibration@dat1,__parse_command_calibration@parameter
 41578  0153BE  0100               	movlb	0	; () banked
 41579  0153C0  6B6A               	clrf	(__parse_command_calibration@parameter+1)& (0+255),b
 41580                           
 41581                           ; BSR set to: 0
 41582                           ;app_device_custom_hid.c: 508: parameter <<= 8;
 41583  0153C2  0100               	movlb	0	; () banked
 41584  0153C4  5169               	movf	__parse_command_calibration@parameter& (0+255),w,b
 41585  0153C6  6F6A               	movwf	(__parse_command_calibration@parameter+1)& (0+255),b
 41586  0153C8  6B69               	clrf	__parse_command_calibration@parameter& (0+255),b
 41587                           
 41588                           ; BSR set to: 0
 41589                           ;app_device_custom_hid.c: 509: parameter |= dat2;
 41590  0153CA  0100               	movlb	0	; () banked
 41591  0153CC  5165               	movf	__parse_command_calibration@dat2& (0+255),w,b
 41592  0153CE  0100               	movlb	0	; () banked
 41593  0153D0  1369               	iorwf	__parse_command_calibration@parameter& (0+255),f,b
 41594                           
 41595                           ;app_device_custom_hid.c: 511: switch(item & 0x0F)
 41596  0153D2  D045               	goto	l20390
 41597  0153D4                     l20384:
 41598                           
 41599                           ; BSR set to: 0
 41600                           ;app_device_custom_hid.c: 515: calibrationParameters[item>>4].Offset = parameter;
 41601  0153D4  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 41602  0153D8  0100               	movlb	0	; () banked
 41603  0153DA  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 41604  0153DC  0E0F               	movlw	15
 41605  0153DE  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 41606  0153E0  0100               	movlb	0	; () banked
 41607  0153E2  5167               	movf	??__parse_command_calibration& (0+255),w,b
 41608  0153E4  0D0C               	mullw	12
 41609  0153E6  0E05               	movlw	5
 41610  0153E8  26F3               	addwf	prodl,f,c
 41611  0153EA  0E00               	movlw	0
 41612  0153EC  22F4               	addwfc	prodh,f,c
 41613  0153EE  0E00               	movlw	low _calibrationParameters
 41614  0153F0  24F3               	addwf	prodl,w,c
 41615  0153F2  6ED9               	movwf	fsr2l,c
 41616  0153F4  0E03               	movlw	high _calibrationParameters
 41617  0153F6  20F4               	addwfc	prodh,w,c
 41618  0153F8  6EDA               	movwf	fsr2h,c
 41619  0153FA  C069  FFDE         	movff	__parse_command_calibration@parameter,postinc2
 41620  0153FE  C06A  FFDD         	movff	__parse_command_calibration@parameter+1,postdec2
 41621                           
 41622                           ;app_device_custom_hid.c: 516: break;
 41623  015402  D05D               	goto	l20408
 41624  015404                     l20386:
 41625                           
 41626                           ; BSR set to: 0
 41627                           ;app_device_custom_hid.c: 519: calibrationParameters[item>>4].Multiplier = parameter;
 41628  015404  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 41629  015408  0100               	movlb	0	; () banked
 41630  01540A  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 41631  01540C  0E0F               	movlw	15
 41632  01540E  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 41633  015410  0100               	movlb	0	; () banked
 41634  015412  5167               	movf	??__parse_command_calibration& (0+255),w,b
 41635  015414  0D0C               	mullw	12
 41636  015416  0E07               	movlw	7
 41637  015418  26F3               	addwf	prodl,f,c
 41638  01541A  0E00               	movlw	0
 41639  01541C  22F4               	addwfc	prodh,f,c
 41640  01541E  0E00               	movlw	low _calibrationParameters
 41641  015420  24F3               	addwf	prodl,w,c
 41642  015422  6ED9               	movwf	fsr2l,c
 41643  015424  0E03               	movlw	high _calibrationParameters
 41644  015426  20F4               	addwfc	prodh,w,c
 41645  015428  6EDA               	movwf	fsr2h,c
 41646  01542A  C069  FFDE         	movff	__parse_command_calibration@parameter,postinc2
 41647  01542E  C06A  FFDD         	movff	__parse_command_calibration@parameter+1,postdec2
 41648                           
 41649                           ;app_device_custom_hid.c: 520: calibrationParameters[item>>4].Shift = dat3;
 41650  015432  C063  F067         	movff	__parse_command_calibration@item,??__parse_command_calibration
 41651  015436  0100               	movlb	0	; () banked
 41652  015438  3B67               	swapf	??__parse_command_calibration& (0+255),f,b
 41653  01543A  0E0F               	movlw	15
 41654  01543C  1767               	andwf	??__parse_command_calibration& (0+255),f,b
 41655  01543E  0100               	movlb	0	; () banked
 41656  015440  5167               	movf	??__parse_command_calibration& (0+255),w,b
 41657  015442  0D0C               	mullw	12
 41658  015444  0E09               	movlw	9
 41659  015446  26F3               	addwf	prodl,f,c
 41660  015448  0E00               	movlw	0
 41661  01544A  22F4               	addwfc	prodh,f,c
 41662  01544C  0E00               	movlw	low _calibrationParameters
 41663  01544E  24F3               	addwf	prodl,w,c
 41664  015450  6ED9               	movwf	fsr2l,c
 41665  015452  0E03               	movlw	high _calibrationParameters
 41666  015454  20F4               	addwfc	prodh,w,c
 41667  015456  6EDA               	movwf	fsr2h,c
 41668  015458  C066  FFDF         	movff	__parse_command_calibration@dat3,indf2
 41669                           
 41670                           ; BSR set to: 0
 41671                           ;app_device_custom_hid.c: 522: }
 41672                           
 41673                           ;app_device_custom_hid.c: 521: break;
 41674  01545C  D030               	goto	l20408
 41675  01545E                     l20390:
 41676                           
 41677                           ; BSR set to: 0
 41678  01545E  0100               	movlb	0	; () banked
 41679  015460  5163               	movf	__parse_command_calibration@item& (0+255),w,b
 41680  015462  0B0F               	andlw	15
 41681  015464  0100               	movlb	0	; () banked
 41682  015466  6F67               	movwf	??__parse_command_calibration& (0+255),b
 41683  015468  6B68               	clrf	(??__parse_command_calibration+1)& (0+255),b
 41684                           
 41685                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41686                           ; Switch size 1, requested type "space"
 41687                           ; Number of cases is 1, Range of values is 0 to 0
 41688                           ; switch strategies available:
 41689                           ; Name         Instructions Cycles
 41690                           ; simple_byte            4     3 (average)
 41691                           ;	Chosen strategy is simple_byte
 41692  01546A  0100               	movlb	0	; () banked
 41693  01546C  5168               	movf	(??__parse_command_calibration+1)& (0+255),w,b
 41694  01546E  0A00               	xorlw	0	; case 0
 41695  015470  A4D8               	btfss	status,2,c
 41696  015472  D025               	goto	l20408
 41697                           
 41698                           ; BSR set to: 0
 41699                           ; Switch size 1, requested type "space"
 41700                           ; Number of cases is 2, Range of values is 0 to 1
 41701                           ; switch strategies available:
 41702                           ; Name         Instructions Cycles
 41703                           ; simple_byte            7     4 (average)
 41704                           ;	Chosen strategy is simple_byte
 41705  015474  0100               	movlb	0	; () banked
 41706  015476  5167               	movf	??__parse_command_calibration& (0+255),w,b
 41707  015478  0A00               	xorlw	0	; case 0
 41708  01547A  B4D8               	btfsc	status,2,c
 41709  01547C  D7AB               	goto	l20384
 41710  01547E  0A01               	xorlw	1	; case 1
 41711  015480  B4D8               	btfsc	status,2,c
 41712  015482  D7C0               	goto	l20386
 41713                           
 41714                           ; BSR set to: 0
 41715                           ;app_device_custom_hid.c: 524: switch((calibrationIndex_t) item>>4)
 41716  015484  D01C               	goto	l20408
 41717  015486                     l20392:
 41718                           
 41719                           ; BSR set to: 0
 41720                           ;app_device_custom_hid.c: 527: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          INPUT_VOLTAGE);
 41721  015486  0E02               	movlw	2
 41722  015488  EC61  F0CD         	call	_schedule_eeprom_write_task
 41723                           
 41724                           ;app_device_custom_hid.c: 528: break;
 41725  01548C  0012               	return	
 41726  01548E                     l20394:
 41727                           
 41728                           ;app_device_custom_hid.c: 530: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          OUTPUT_VOLTAGE);
 41729  01548E  0E03               	movlw	3
 41730  015490  EC61  F0CD         	call	_schedule_eeprom_write_task
 41731                           
 41732                           ;app_device_custom_hid.c: 531: break;
 41733  015494  0012               	return	
 41734  015496                     l20396:
 41735                           
 41736                           ;app_device_custom_hid.c: 533: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          INPUT_CURRENT);
 41737  015496  0E04               	movlw	4
 41738  015498  EC61  F0CD         	call	_schedule_eeprom_write_task
 41739                           
 41740                           ;app_device_custom_hid.c: 534: break;
 41741  01549C  0012               	return	
 41742  01549E                     l20398:
 41743                           
 41744                           ;app_device_custom_hid.c: 536: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          OUTPUT_CURRENT);
 41745  01549E  0E05               	movlw	5
 41746  0154A0  EC61  F0CD         	call	_schedule_eeprom_write_task
 41747                           
 41748                           ;app_device_custom_hid.c: 537: break;
 41749  0154A4  0012               	return	
 41750  0154A6                     l20400:
 41751                           
 41752                           ;app_device_custom_hid.c: 539: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          ONBOARD_TEMPERATURE);
 41753  0154A6  0E06               	movlw	6
 41754  0154A8  EC61  F0CD         	call	_schedule_eeprom_write_task
 41755                           
 41756                           ;app_device_custom_hid.c: 540: break;
 41757  0154AC  0012               	return	
 41758  0154AE                     l20402:
 41759                           
 41760                           ;app_device_custom_hid.c: 542: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          EXTERNAL_TEMPERATURE_1);
 41761  0154AE  0E07               	movlw	7
 41762  0154B0  EC61  F0CD         	call	_schedule_eeprom_write_task
 41763                           
 41764                           ;app_device_custom_hid.c: 543: break;
 41765  0154B4  0012               	return	
 41766  0154B6                     l20404:
 41767                           
 41768                           ;app_device_custom_hid.c: 545: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          EXTERNAL_TEMPERATURE_2);
 41769  0154B6  0E08               	movlw	8
 41770  0154B8  EC61  F0CD         	call	_schedule_eeprom_write_task
 41771                           
 41772                           ;app_device_custom_hid.c: 547: }
 41773                           
 41774                           ;app_device_custom_hid.c: 546: break;
 41775  0154BC  0012               	return	
 41776  0154BE                     l20408:
 41777  0154BE  0100               	movlb	0	; () banked
 41778  0154C0  3963               	swapf	__parse_command_calibration@item& (0+255),w,b
 41779  0154C2  0B0F               	andlw	15
 41780  0154C4  0100               	movlb	0	; () banked
 41781  0154C6  6F67               	movwf	??__parse_command_calibration& (0+255),b
 41782  0154C8  6B68               	clrf	(??__parse_command_calibration+1)& (0+255),b
 41783                           
 41784                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41785                           ; Switch size 1, requested type "space"
 41786                           ; Number of cases is 1, Range of values is 0 to 0
 41787                           ; switch strategies available:
 41788                           ; Name         Instructions Cycles
 41789                           ; simple_byte            4     3 (average)
 41790                           ;	Chosen strategy is simple_byte
 41791  0154CA  0100               	movlb	0	; () banked
 41792  0154CC  5168               	movf	(??__parse_command_calibration+1)& (0+255),w,b
 41793  0154CE  0A00               	xorlw	0	; case 0
 41794  0154D0  A4D8               	btfss	status,2,c
 41795  0154D2  0012               	return	
 41796                           
 41797                           ; BSR set to: 0
 41798                           ; Switch size 1, requested type "space"
 41799                           ; Number of cases is 7, Range of values is 0 to 6
 41800                           ; switch strategies available:
 41801                           ; Name         Instructions Cycles
 41802                           ; simple_byte           22    12 (average)
 41803                           ;	Chosen strategy is simple_byte
 41804  0154D4  0100               	movlb	0	; () banked
 41805  0154D6  5167               	movf	??__parse_command_calibration& (0+255),w,b
 41806  0154D8  0A00               	xorlw	0	; case 0
 41807  0154DA  B4D8               	btfsc	status,2,c
 41808  0154DC  D7D4               	goto	l20392
 41809  0154DE  0A01               	xorlw	1	; case 1
 41810  0154E0  B4D8               	btfsc	status,2,c
 41811  0154E2  D7D5               	goto	l20394
 41812  0154E4  0A03               	xorlw	3	; case 2
 41813  0154E6  B4D8               	btfsc	status,2,c
 41814  0154E8  D7D6               	goto	l20396
 41815  0154EA  0A01               	xorlw	1	; case 3
 41816  0154EC  B4D8               	btfsc	status,2,c
 41817  0154EE  D7D7               	goto	l20398
 41818  0154F0  0A07               	xorlw	7	; case 4
 41819  0154F2  B4D8               	btfsc	status,2,c
 41820  0154F4  D7D8               	goto	l20400
 41821  0154F6  0A01               	xorlw	1	; case 5
 41822  0154F8  B4D8               	btfsc	status,2,c
 41823  0154FA  D7D9               	goto	l20402
 41824  0154FC  0A03               	xorlw	3	; case 6
 41825  0154FE  A4D8               	btfss	status,2,c
 41826  015500  0012               	return	
 41827  015502  D7D9               	goto	l20404
 41828  015504                     __end_of__parse_command_calibration:
 41829                           	opt stack 0
 41830                           tosu	equ	0xFFF
 41831                           tosh	equ	0xFFE
 41832                           tosl	equ	0xFFD
 41833                           pclath	equ	0xFFA
 41834                           tblptru	equ	0xFF8
 41835                           tblptrh	equ	0xFF7
 41836                           tblptrl	equ	0xFF6
 41837                           tablat	equ	0xFF5
 41838                           prodh	equ	0xFF4
 41839                           prodl	equ	0xFF3
 41840                           intcon	equ	0xFF2
 41841                           intcon2	equ	0xFF1
 41842                           intcon3	equ	0xFF0
 41843                           postinc0	equ	0xFEE
 41844                           wreg	equ	0xFE8
 41845                           indf1	equ	0xFE7
 41846                           postinc1	equ	0xFE6
 41847                           postdec1	equ	0xFE5
 41848                           plusw1	equ	0xFE3
 41849                           fsr1h	equ	0xFE2
 41850                           fsr1l	equ	0xFE1
 41851                           indf2	equ	0xFDF
 41852                           postinc2	equ	0xFDE
 41853                           postdec2	equ	0xFDD
 41854                           plusw2	equ	0xFDB
 41855                           fsr2h	equ	0xFDA
 41856                           fsr2l	equ	0xFD9
 41857                           status	equ	0xFD8
 41858                           
 41859 ;; *************** function _schedule_eeprom_write_task *****************
 41860 ;; Defined at:
 41861 ;;		line 741 in file "i2c.c"
 41862 ;; Parameters:    Size  Location     Type
 41863 ;;  task            1    wreg     enum E8252
 41864 ;; Auto vars:     Size  Location     Type
 41865 ;;  task            1    1[BANK0 ] enum E8252
 41866 ;;  idx             1    2[BANK0 ] unsigned char 
 41867 ;; Return value:  Size  Location     Type
 41868 ;;                  1    wreg      void 
 41869 ;; Registers used:
 41870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 41871 ;; Tracked objects:
 41872 ;;		On entry : 0/0
 41873 ;;		On exit  : 0/0
 41874 ;;		Unchanged: 0/0
 41875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41877 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41878 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41879 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41880 ;;Total ram usage:        3 bytes
 41881 ;; Hardware stack levels used:    1
 41882 ;; Hardware stack levels required when called:   10
 41883 ;; This function calls:
 41884 ;;		Nothing
 41885 ;; This function is called by:
 41886 ;;		__parse_command_calibration
 41887 ;;		_i2c_eeprom_read_calibration
 41888 ;; This function uses a non-reentrant model
 41889 ;;
 41890                           
 41891                           	psect	text192
 41892  019AC2                     __ptext192:
 41893                           	opt stack 0
 41894  019AC2                     _schedule_eeprom_write_task:
 41895                           	opt stack 18
 41896                           
 41897                           ;incstack = 0
 41898                           ;schedule_eeprom_write_task@task stored from wreg
 41899  019AC2  0100               	movlb	0	; () banked
 41900  019AC4  6F61               	movwf	schedule_eeprom_write_task@task& (0+255),b
 41901                           
 41902                           ;i2c.c: 743: uint8_t idx;
 41903                           ;i2c.c: 745: for(idx=task_list_read_index; idx!=task_list_write_index; idx=(idx+1) & 0x0
      +                          F)
 41904  019AC6  C01E  F062         	movff	_task_list_read_index,schedule_eeprom_write_task@idx
 41905  019ACA  D013               	goto	l1660
 41906  019ACC                     l19286:
 41907                           
 41908                           ;i2c.c: 746: {
 41909                           ;i2c.c: 747: if (task_list[idx] == task)
 41910  019ACC  0100               	movlb	0	; () banked
 41911  019ACE  5162               	movf	schedule_eeprom_write_task@idx& (0+255),w,b
 41912  019AD0  0D01               	mullw	1
 41913  019AD2  0E68               	movlw	low _task_list
 41914  019AD4  24F3               	addwf	prodl,w,c
 41915  019AD6  6ED9               	movwf	fsr2l,c
 41916  019AD8  0E04               	movlw	high _task_list
 41917  019ADA  20F4               	addwfc	prodh,w,c
 41918  019ADC  6EDA               	movwf	fsr2h,c
 41919  019ADE  0100               	movlb	0	; () banked
 41920  019AE0  5161               	movf	schedule_eeprom_write_task@task& (0+255),w,b
 41921  019AE2  18DE               	xorwf	postinc2,w,c
 41922  019AE4  B4D8               	btfsc	status,2,c
 41923  019AE6  0012               	return	
 41924                           
 41925                           ; BSR set to: 0
 41926                           
 41927                           ; BSR set to: 0
 41928                           
 41929                           ; BSR set to: 0
 41930                           ;i2c.c: 748: {
 41931                           ;i2c.c: 750: return;
 41932  019AE8  0100               	movlb	0	; () banked
 41933  019AEA  2962               	incf	schedule_eeprom_write_task@idx& (0+255),w,b
 41934  019AEC  0B0F               	andlw	15
 41935  019AEE  0100               	movlb	0	; () banked
 41936  019AF0  6F62               	movwf	schedule_eeprom_write_task@idx& (0+255),b
 41937  019AF2                     l1660:
 41938  019AF2  501D               	movf	_task_list_write_index,w,c
 41939  019AF4  0100               	movlb	0	; () banked
 41940  019AF6  1962               	xorwf	schedule_eeprom_write_task@idx& (0+255),w,b
 41941  019AF8  A4D8               	btfss	status,2,c
 41942  019AFA  D7E8               	goto	l19286
 41943                           
 41944                           ; BSR set to: 0
 41945                           ;i2c.c: 751: }
 41946                           ;i2c.c: 752: }
 41947                           ;i2c.c: 754: task_list[task_list_write_index] = task;
 41948                           
 41949                           ; BSR set to: 0
 41950  019AFC  501D               	movf	_task_list_write_index,w,c
 41951  019AFE  0D01               	mullw	1
 41952  019B00  0E68               	movlw	low _task_list
 41953  019B02  24F3               	addwf	prodl,w,c
 41954  019B04  6ED9               	movwf	fsr2l,c
 41955  019B06  0E04               	movlw	high _task_list
 41956  019B08  20F4               	addwfc	prodh,w,c
 41957  019B0A  6EDA               	movwf	fsr2h,c
 41958  019B0C  C061  FFDF         	movff	schedule_eeprom_write_task@task,indf2
 41959                           
 41960                           ; BSR set to: 0
 41961                           ;i2c.c: 755: ++task_list_write_index;
 41962  019B10  2A1D               	incf	_task_list_write_index,f,c
 41963                           
 41964                           ; BSR set to: 0
 41965                           ;i2c.c: 756: task_list_write_index &= 0x0F;
 41966  019B12  0E0F               	movlw	15
 41967  019B14  161D               	andwf	_task_list_write_index,f,c
 41968                           
 41969                           ; BSR set to: 0
 41970  019B16  0012               	return		;funcret
 41971  019B18                     __end_of_schedule_eeprom_write_task:
 41972                           	opt stack 0
 41973                           tosu	equ	0xFFF
 41974                           tosh	equ	0xFFE
 41975                           tosl	equ	0xFFD
 41976                           pclath	equ	0xFFA
 41977                           tblptru	equ	0xFF8
 41978                           tblptrh	equ	0xFF7
 41979                           tblptrl	equ	0xFF6
 41980                           tablat	equ	0xFF5
 41981                           prodh	equ	0xFF4
 41982                           prodl	equ	0xFF3
 41983                           intcon	equ	0xFF2
 41984                           intcon2	equ	0xFF1
 41985                           intcon3	equ	0xFF0
 41986                           postinc0	equ	0xFEE
 41987                           wreg	equ	0xFE8
 41988                           indf1	equ	0xFE7
 41989                           postinc1	equ	0xFE6
 41990                           postdec1	equ	0xFE5
 41991                           plusw1	equ	0xFE3
 41992                           fsr1h	equ	0xFE2
 41993                           fsr1l	equ	0xFE1
 41994                           indf2	equ	0xFDF
 41995                           postinc2	equ	0xFDE
 41996                           postdec2	equ	0xFDD
 41997                           plusw2	equ	0xFDB
 41998                           fsr2h	equ	0xFDA
 41999                           fsr2l	equ	0xFD9
 42000                           status	equ	0xFD8
 42001                           
 42002 ;; *************** function __fill_buffer_get_status *****************
 42003 ;; Defined at:
 42004 ;;		line 269 in file "app_device_custom_hid.c"
 42005 ;; Parameters:    Size  Location     Type
 42006 ;;		None
 42007 ;; Auto vars:     Size  Location     Type
 42008 ;;		None
 42009 ;; Return value:  Size  Location     Type
 42010 ;;                  1    wreg      void 
 42011 ;; Registers used:
 42012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42013 ;; Tracked objects:
 42014 ;;		On entry : 0/0
 42015 ;;		On exit  : 0/0
 42016 ;;		Unchanged: 0/0
 42017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42020 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42021 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42022 ;;Total ram usage:        4 bytes
 42023 ;; Hardware stack levels used:    1
 42024 ;; Hardware stack levels required when called:   11
 42025 ;; This function calls:
 42026 ;;		_buck_get_dutycycle
 42027 ;;		_buck_get_mode
 42028 ;;		_buck_remote_get_dutycycle
 42029 ;;		_buck_remote_get_status
 42030 ;;		_rtcc_get_day
 42031 ;;		_rtcc_get_hours
 42032 ;;		_rtcc_get_minutes
 42033 ;;		_rtcc_get_month
 42034 ;;		_rtcc_get_seconds
 42035 ;;		_rtcc_get_year
 42036 ;;		_ui_get_status
 42037 ;; This function is called by:
 42038 ;;		_APP_DeviceCustomHIDTasks
 42039 ;; This function uses a non-reentrant model
 42040 ;;
 42041                           
 42042                           	psect	text193
 42043  013880                     __ptext193:
 42044                           	opt stack 0
 42045  013880                     __fill_buffer_get_status:
 42046                           	opt stack 18
 42047                           
 42048                           ;app_device_custom_hid.c: 272: ToSendDataBuffer[0] = COMMAND_GET_STATUS;
 42049                           
 42050                           ; BSR set to: 0
 42051                           ;incstack = 0
 42052  013880  0E10               	movlw	16
 42053  013882  0103               	movlb	3	; () banked
 42054  013884  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 42055                           
 42056                           ; BSR set to: 3
 42057                           ;app_device_custom_hid.c: 274: ToSendDataBuffer[1] = (uint8_t) os.input_voltage;
 42058  013886  C212  F3A5         	movff	_os+18,_ToSendDataBuffer+1	;volatile
 42059                           
 42060                           ;app_device_custom_hid.c: 275: ToSendDataBuffer[2] = os.input_voltage >> 8;
 42061  01388A  0102               	movlb	2	; () banked
 42062  01388C  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 42063  01388E  0103               	movlb	3	; () banked
 42064  013890  6FA6               	movwf	(_ToSendDataBuffer+2)& (0+255),b
 42065                           
 42066                           ; BSR set to: 3
 42067                           ;app_device_custom_hid.c: 277: ToSendDataBuffer[3] = (uint8_t) os.output_voltage;
 42068  013892  C227  F3A7         	movff	_os+39,_ToSendDataBuffer+3	;volatile
 42069                           
 42070                           ;app_device_custom_hid.c: 278: ToSendDataBuffer[4] = os.output_voltage >> 8;
 42071  013896  0102               	movlb	2	; () banked
 42072  013898  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 42073  01389A  0103               	movlb	3	; () banked
 42074  01389C  6FA8               	movwf	(_ToSendDataBuffer+4)& (0+255),b
 42075                           
 42076                           ; BSR set to: 3
 42077                           ;app_device_custom_hid.c: 280: ToSendDataBuffer[5] = (uint8_t) os.input_current;
 42078  01389E  C21D  F3A9         	movff	_os+29,_ToSendDataBuffer+5	;volatile
 42079                           
 42080                           ;app_device_custom_hid.c: 281: ToSendDataBuffer[6] = os.input_current >> 8;
 42081  0138A2  0102               	movlb	2	; () banked
 42082  0138A4  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 42083  0138A6  0103               	movlb	3	; () banked
 42084  0138A8  6FAA               	movwf	(_ToSendDataBuffer+6)& (0+255),b
 42085                           
 42086                           ; BSR set to: 3
 42087                           ;app_device_custom_hid.c: 283: ToSendDataBuffer[7] = (uint8_t) os.output_current;
 42088  0138AA  C232  F3AB         	movff	_os+50,_ToSendDataBuffer+7	;volatile
 42089                           
 42090                           ;app_device_custom_hid.c: 284: ToSendDataBuffer[8] = os.output_current >> 8;
 42091  0138AE  0102               	movlb	2	; () banked
 42092  0138B0  5133               	movf	(_os+51)& (0+255),w,b	;volatile
 42093  0138B2  0103               	movlb	3	; () banked
 42094  0138B4  6FAC               	movwf	(_ToSendDataBuffer+8)& (0+255),b
 42095                           
 42096                           ; BSR set to: 3
 42097                           ;app_device_custom_hid.c: 286: ToSendDataBuffer[9] = (uint8_t) os.temperature_onboard;
 42098  0138B6  C236  F3AD         	movff	_os+54,_ToSendDataBuffer+9	;volatile
 42099                           
 42100                           ;app_device_custom_hid.c: 287: ToSendDataBuffer[10] = os.temperature_onboard >> 8;
 42101  0138BA  0102               	movlb	2	; () banked
 42102  0138BC  5137               	movf	(_os+55)& (0+255),w,b	;volatile
 42103  0138BE  0103               	movlb	3	; () banked
 42104  0138C0  6FAE               	movwf	(_ToSendDataBuffer+10)& (0+255),b
 42105                           
 42106                           ; BSR set to: 3
 42107                           ;app_device_custom_hid.c: 289: ToSendDataBuffer[11] = (uint8_t) os.temperature_external_
      +                          1;
 42108  0138C2  C23A  F3AF         	movff	_os+58,_ToSendDataBuffer+11	;volatile
 42109                           
 42110                           ;app_device_custom_hid.c: 290: ToSendDataBuffer[12] = os.temperature_external_1 >> 8;
 42111  0138C6  0102               	movlb	2	; () banked
 42112  0138C8  513B               	movf	(_os+59)& (0+255),w,b	;volatile
 42113  0138CA  0103               	movlb	3	; () banked
 42114  0138CC  6FB0               	movwf	(_ToSendDataBuffer+12)& (0+255),b
 42115                           
 42116                           ; BSR set to: 3
 42117                           ;app_device_custom_hid.c: 292: ToSendDataBuffer[13] = (uint8_t) os.temperature_external_
      +                          2;
 42118  0138CE  C23E  F3B1         	movff	_os+62,_ToSendDataBuffer+13	;volatile
 42119                           
 42120                           ;app_device_custom_hid.c: 293: ToSendDataBuffer[14] = os.temperature_external_2 >> 8;
 42121  0138D2  0102               	movlb	2	; () banked
 42122  0138D4  513F               	movf	(_os+63)& (0+255),w,b	;volatile
 42123  0138D6  0103               	movlb	3	; () banked
 42124  0138D8  6FB2               	movwf	(_ToSendDataBuffer+14)& (0+255),b
 42125                           
 42126                           ; BSR set to: 3
 42127                           ;app_device_custom_hid.c: 295: ToSendDataBuffer[15] = os.outputs;
 42128  0138DA  C205  F3B3         	movff	_os+5,_ToSendDataBuffer+15	;volatile
 42129                           
 42130                           ; BSR set to: 3
 42131                           ;app_device_custom_hid.c: 297: ToSendDataBuffer[16] = os.display_mode;
 42132  0138DE  C240  F3B4         	movff	_os+64,_ToSendDataBuffer+16	;volatile
 42133                           
 42134                           ; BSR set to: 3
 42135                           ;app_device_custom_hid.c: 299: ToSendDataBuffer[17] = rtcc_get_year();
 42136  0138E2  EC19  F0D5         	call	_rtcc_get_year	;wreg free
 42137  0138E6  0103               	movlb	3	; () banked
 42138  0138E8  6FB5               	movwf	(_ToSendDataBuffer+17)& (0+255),b
 42139                           
 42140                           ; BSR set to: 3
 42141                           ;app_device_custom_hid.c: 300: ToSendDataBuffer[18] = rtcc_get_month();
 42142  0138EA  EC2D  F0D5         	call	_rtcc_get_month	;wreg free
 42143  0138EE  0103               	movlb	3	; () banked
 42144  0138F0  6FB6               	movwf	(_ToSendDataBuffer+18)& (0+255),b
 42145                           
 42146                           ; BSR set to: 3
 42147                           ;app_device_custom_hid.c: 301: ToSendDataBuffer[19] = rtcc_get_day();
 42148  0138F2  EC4B  F0D5         	call	_rtcc_get_day	;wreg free
 42149  0138F6  0103               	movlb	3	; () banked
 42150  0138F8  6FB7               	movwf	(_ToSendDataBuffer+19)& (0+255),b
 42151                           
 42152                           ; BSR set to: 3
 42153                           ;app_device_custom_hid.c: 302: ToSendDataBuffer[20] = rtcc_get_hours();
 42154  0138FA  EC41  F0D5         	call	_rtcc_get_hours	;wreg free
 42155  0138FE  0103               	movlb	3	; () banked
 42156  013900  6FB8               	movwf	(_ToSendDataBuffer+20)& (0+255),b
 42157                           
 42158                           ; BSR set to: 3
 42159                           ;app_device_custom_hid.c: 303: ToSendDataBuffer[21] = rtcc_get_minutes();
 42160  013902  EC37  F0D5         	call	_rtcc_get_minutes	;wreg free
 42161  013906  0103               	movlb	3	; () banked
 42162  013908  6FB9               	movwf	(_ToSendDataBuffer+21)& (0+255),b
 42163                           
 42164                           ; BSR set to: 3
 42165                           ;app_device_custom_hid.c: 304: ToSendDataBuffer[22] = rtcc_get_seconds();
 42166  01390A  EC23  F0D5         	call	_rtcc_get_seconds	;wreg free
 42167  01390E  0103               	movlb	3	; () banked
 42168  013910  6FBA               	movwf	(_ToSendDataBuffer+22)& (0+255),b
 42169                           
 42170                           ; BSR set to: 3
 42171                           ;app_device_custom_hid.c: 306: ToSendDataBuffer[23] = buck_get_mode();
 42172  013912  ECEF  F0D5         	call	_buck_get_mode	;wreg free
 42173  013916  0103               	movlb	3	; () banked
 42174  013918  6FBB               	movwf	(_ToSendDataBuffer+23)& (0+255),b
 42175                           
 42176                           ; BSR set to: 3
 42177                           ;app_device_custom_hid.c: 307: ToSendDataBuffer[24] = buck_get_dutycycle();
 42178  01391A  ECEC  F0D5         	call	_buck_get_dutycycle	;wreg free
 42179  01391E  0103               	movlb	3	; () banked
 42180  013920  6FBC               	movwf	(_ToSendDataBuffer+24)& (0+255),b
 42181                           
 42182                           ; BSR set to: 3
 42183                           ;app_device_custom_hid.c: 308: ToSendDataBuffer[25] = buck_remote_get_status();
 42184  013922  ECA0  F0D1         	call	_buck_remote_get_status	;wreg free
 42185  013926  0103               	movlb	3	; () banked
 42186  013928  6FBD               	movwf	(_ToSendDataBuffer+25)& (0+255),b
 42187                           
 42188                           ; BSR set to: 3
 42189                           ;app_device_custom_hid.c: 309: ToSendDataBuffer[26] = buck_remote_get_dutycycle();
 42190  01392A  ECE9  F0D5         	call	_buck_remote_get_dutycycle	;wreg free
 42191  01392E  0103               	movlb	3	; () banked
 42192  013930  6FBE               	movwf	(_ToSendDataBuffer+26)& (0+255),b
 42193                           
 42194                           ; BSR set to: 3
 42195                           ;app_device_custom_hid.c: 311: ToSendDataBuffer[27] = (uint8_t) os.temperature_onboard_a
      +                          dc;
 42196  013932  C234  F3BF         	movff	_os+52,_ToSendDataBuffer+27	;volatile
 42197                           
 42198                           ; BSR set to: 3
 42199                           ;app_device_custom_hid.c: 312: ToSendDataBuffer[28] = os.temperature_onboard_adc >> 8;
 42200  013936  0102               	movlb	2	; () banked
 42201  013938  5135               	movf	(_os+53)& (0+255),w,b	;volatile
 42202  01393A  0103               	movlb	3	; () banked
 42203  01393C  6FC0               	movwf	(_ToSendDataBuffer+28)& (0+255),b
 42204                           
 42205                           ; BSR set to: 3
 42206                           ;app_device_custom_hid.c: 313: ToSendDataBuffer[29] = (uint8_t) os.temperature_external_
      +                          1_adc;
 42207  01393E  C238  F3C1         	movff	_os+56,_ToSendDataBuffer+29	;volatile
 42208                           
 42209                           ; BSR set to: 3
 42210                           ;app_device_custom_hid.c: 314: ToSendDataBuffer[30] = os.temperature_external_1_adc >> 8
      +                          ;
 42211  013942  0102               	movlb	2	; () banked
 42212  013944  5139               	movf	(_os+57)& (0+255),w,b	;volatile
 42213  013946  0103               	movlb	3	; () banked
 42214  013948  6FC2               	movwf	(_ToSendDataBuffer+30)& (0+255),b
 42215                           
 42216                           ; BSR set to: 3
 42217                           ;app_device_custom_hid.c: 315: ToSendDataBuffer[31] = (uint8_t) os.temperature_external_
      +                          2_adc;
 42218  01394A  C23C  F3C3         	movff	_os+60,_ToSendDataBuffer+31	;volatile
 42219                           
 42220                           ; BSR set to: 3
 42221                           ;app_device_custom_hid.c: 316: ToSendDataBuffer[32] = os.temperature_external_2_adc >> 8
      +                          ;
 42222  01394E  0102               	movlb	2	; () banked
 42223  013950  513D               	movf	(_os+61)& (0+255),w,b	;volatile
 42224  013952  0103               	movlb	3	; () banked
 42225  013954  6FC4               	movwf	(_ToSendDataBuffer+32)& (0+255),b
 42226                           
 42227                           ; BSR set to: 3
 42228                           ;app_device_custom_hid.c: 317: ToSendDataBuffer[33] = (uint8_t) os.input_voltage_adc[(os
      +                          .timeSlot&0b00110000)>>4];
 42229  013956  0102               	movlb	2	; () banked
 42230  013958  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42231  01395A  0B0F               	andlw	15
 42232  01395C  0B03               	andlw	3
 42233  01395E  0100               	movlb	0	; () banked
 42234  013960  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42235  013962  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42236  013964  90D8               	bcf	status,0,c
 42237  013966  0100               	movlb	0	; () banked
 42238  013968  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42239  01396A  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42240  01396C  0E0A               	movlw	low (_os+10)
 42241  01396E  0100               	movlb	0	; () banked
 42242  013970  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42243  013972  6ED9               	movwf	fsr2l,c
 42244  013974  0E02               	movlw	high (_os+10)
 42245  013976  0100               	movlb	0	; () banked
 42246  013978  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42247  01397A  6EDA               	movwf	fsr2h,c
 42248  01397C  50DF               	movf	indf2,w,c
 42249  01397E  0103               	movlb	3	; () banked
 42250  013980  6FC5               	movwf	(_ToSendDataBuffer+33)& (0+255),b
 42251                           
 42252                           ; BSR set to: 3
 42253                           ;app_device_custom_hid.c: 318: ToSendDataBuffer[34] = os.input_voltage_adc[(os.timeSlot&
      +                          0b00110000)>>4] >> 8;
 42254  013982  0102               	movlb	2	; () banked
 42255  013984  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42256  013986  0B0F               	andlw	15
 42257  013988  0B03               	andlw	3
 42258  01398A  0100               	movlb	0	; () banked
 42259  01398C  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42260  01398E  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42261  013990  90D8               	bcf	status,0,c
 42262  013992  0100               	movlb	0	; () banked
 42263  013994  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42264  013996  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42265  013998  0E0A               	movlw	low (_os+10)
 42266  01399A  0100               	movlb	0	; () banked
 42267  01399C  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42268  01399E  6ED9               	movwf	fsr2l,c
 42269  0139A0  0E02               	movlw	high (_os+10)
 42270  0139A2  0100               	movlb	0	; () banked
 42271  0139A4  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42272  0139A6  6EDA               	movwf	fsr2h,c
 42273  0139A8  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 42274  0139AC  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 42275  0139B0  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 42276  0139B4  0100               	movlb	0	; () banked
 42277  0139B6  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 42278  0139B8  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 42279  0139BA  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 42280  0139BC  0100               	movlb	0	; () banked
 42281  0139BE  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 42282  0139C0  0103               	movlb	3	; () banked
 42283  0139C2  6FC6               	movwf	(_ToSendDataBuffer+34)& (0+255),b
 42284                           
 42285                           ; BSR set to: 3
 42286                           ;app_device_custom_hid.c: 319: ToSendDataBuffer[35] = (uint8_t) os.output_voltage_adc[(o
      +                          s.timeSlot&0b00110000)>>4];
 42287  0139C4  0102               	movlb	2	; () banked
 42288  0139C6  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42289  0139C8  0B0F               	andlw	15
 42290  0139CA  0B03               	andlw	3
 42291  0139CC  0100               	movlb	0	; () banked
 42292  0139CE  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42293  0139D0  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42294  0139D2  90D8               	bcf	status,0,c
 42295  0139D4  0100               	movlb	0	; () banked
 42296  0139D6  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42297  0139D8  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42298  0139DA  0E1F               	movlw	low (_os+31)
 42299  0139DC  0100               	movlb	0	; () banked
 42300  0139DE  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42301  0139E0  6ED9               	movwf	fsr2l,c
 42302  0139E2  0E02               	movlw	high (_os+31)
 42303  0139E4  0100               	movlb	0	; () banked
 42304  0139E6  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42305  0139E8  6EDA               	movwf	fsr2h,c
 42306  0139EA  50DF               	movf	indf2,w,c
 42307  0139EC  0103               	movlb	3	; () banked
 42308  0139EE  6FC7               	movwf	(_ToSendDataBuffer+35)& (0+255),b
 42309                           
 42310                           ; BSR set to: 3
 42311                           ;app_device_custom_hid.c: 320: ToSendDataBuffer[36] = os.output_voltage_adc[(os.timeSlot
      +                          &0b00110000)>>4] >> 8;
 42312  0139F0  0102               	movlb	2	; () banked
 42313  0139F2  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42314  0139F4  0B0F               	andlw	15
 42315  0139F6  0B03               	andlw	3
 42316  0139F8  0100               	movlb	0	; () banked
 42317  0139FA  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42318  0139FC  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42319  0139FE  90D8               	bcf	status,0,c
 42320  013A00  0100               	movlb	0	; () banked
 42321  013A02  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42322  013A04  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42323  013A06  0E1F               	movlw	low (_os+31)
 42324  013A08  0100               	movlb	0	; () banked
 42325  013A0A  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42326  013A0C  6ED9               	movwf	fsr2l,c
 42327  013A0E  0E02               	movlw	high (_os+31)
 42328  013A10  0100               	movlb	0	; () banked
 42329  013A12  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42330  013A14  6EDA               	movwf	fsr2h,c
 42331  013A16  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 42332  013A1A  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 42333  013A1E  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 42334  013A22  0100               	movlb	0	; () banked
 42335  013A24  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 42336  013A26  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 42337  013A28  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 42338  013A2A  0100               	movlb	0	; () banked
 42339  013A2C  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 42340  013A2E  0103               	movlb	3	; () banked
 42341  013A30  6FC8               	movwf	(_ToSendDataBuffer+36)& (0+255),b
 42342                           
 42343                           ; BSR set to: 3
 42344                           ;app_device_custom_hid.c: 321: ToSendDataBuffer[37] = (uint8_t) os.input_current_adc[(os
      +                          .timeSlot&0b00110000) >>4];
 42345  013A32  0102               	movlb	2	; () banked
 42346  013A34  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42347  013A36  0B0F               	andlw	15
 42348  013A38  0B03               	andlw	3
 42349  013A3A  0100               	movlb	0	; () banked
 42350  013A3C  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42351  013A3E  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42352  013A40  90D8               	bcf	status,0,c
 42353  013A42  0100               	movlb	0	; () banked
 42354  013A44  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42355  013A46  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42356  013A48  0E14               	movlw	low (_os+20)
 42357  013A4A  0100               	movlb	0	; () banked
 42358  013A4C  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42359  013A4E  6ED9               	movwf	fsr2l,c
 42360  013A50  0E02               	movlw	high (_os+20)
 42361  013A52  0100               	movlb	0	; () banked
 42362  013A54  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42363  013A56  6EDA               	movwf	fsr2h,c
 42364  013A58  50DF               	movf	indf2,w,c
 42365  013A5A  0103               	movlb	3	; () banked
 42366  013A5C  6FC9               	movwf	(_ToSendDataBuffer+37)& (0+255),b
 42367                           
 42368                           ; BSR set to: 3
 42369                           ;app_device_custom_hid.c: 322: ToSendDataBuffer[38] = os.input_current_adc[(os.timeSlot&
      +                          0b00110000)>>4] >> 8;
 42370  013A5E  0102               	movlb	2	; () banked
 42371  013A60  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42372  013A62  0B0F               	andlw	15
 42373  013A64  0B03               	andlw	3
 42374  013A66  0100               	movlb	0	; () banked
 42375  013A68  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42376  013A6A  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42377  013A6C  90D8               	bcf	status,0,c
 42378  013A6E  0100               	movlb	0	; () banked
 42379  013A70  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42380  013A72  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42381  013A74  0E14               	movlw	low (_os+20)
 42382  013A76  0100               	movlb	0	; () banked
 42383  013A78  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42384  013A7A  6ED9               	movwf	fsr2l,c
 42385  013A7C  0E02               	movlw	high (_os+20)
 42386  013A7E  0100               	movlb	0	; () banked
 42387  013A80  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42388  013A82  6EDA               	movwf	fsr2h,c
 42389  013A84  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 42390  013A88  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 42391  013A8C  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 42392  013A90  0100               	movlb	0	; () banked
 42393  013A92  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 42394  013A94  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 42395  013A96  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 42396  013A98  0100               	movlb	0	; () banked
 42397  013A9A  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 42398  013A9C  0103               	movlb	3	; () banked
 42399  013A9E  6FCA               	movwf	(_ToSendDataBuffer+38)& (0+255),b
 42400                           
 42401                           ; BSR set to: 3
 42402                           ;app_device_custom_hid.c: 323: ToSendDataBuffer[39] = (uint8_t) os.output_current_adc[(o
      +                          s.timeSlot&0b00110000)>>4];
 42403  013AA0  0102               	movlb	2	; () banked
 42404  013AA2  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42405  013AA4  0B0F               	andlw	15
 42406  013AA6  0B03               	andlw	3
 42407  013AA8  0100               	movlb	0	; () banked
 42408  013AAA  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42409  013AAC  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42410  013AAE  90D8               	bcf	status,0,c
 42411  013AB0  0100               	movlb	0	; () banked
 42412  013AB2  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42413  013AB4  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42414  013AB6  0E29               	movlw	low (_os+41)
 42415  013AB8  0100               	movlb	0	; () banked
 42416  013ABA  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42417  013ABC  6ED9               	movwf	fsr2l,c
 42418  013ABE  0E02               	movlw	high (_os+41)
 42419  013AC0  0100               	movlb	0	; () banked
 42420  013AC2  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42421  013AC4  6EDA               	movwf	fsr2h,c
 42422  013AC6  50DF               	movf	indf2,w,c
 42423  013AC8  0103               	movlb	3	; () banked
 42424  013ACA  6FCB               	movwf	(_ToSendDataBuffer+39)& (0+255),b
 42425                           
 42426                           ; BSR set to: 3
 42427                           ;app_device_custom_hid.c: 324: ToSendDataBuffer[40] = os.output_current_adc[(os.timeSlot
      +                          &0b00110000)>>4]>> 8;
 42428  013ACC  0102               	movlb	2	; () banked
 42429  013ACE  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 42430  013AD0  0B0F               	andlw	15
 42431  013AD2  0B03               	andlw	3
 42432  013AD4  0100               	movlb	0	; () banked
 42433  013AD6  6F61               	movwf	??__fill_buffer_get_status& (0+255),b
 42434  013AD8  6B62               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 42435  013ADA  90D8               	bcf	status,0,c
 42436  013ADC  0100               	movlb	0	; () banked
 42437  013ADE  3761               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 42438  013AE0  3762               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 42439  013AE2  0E29               	movlw	low (_os+41)
 42440  013AE4  0100               	movlb	0	; () banked
 42441  013AE6  2561               	addwf	??__fill_buffer_get_status& (0+255),w,b
 42442  013AE8  6ED9               	movwf	fsr2l,c
 42443  013AEA  0E02               	movlw	high (_os+41)
 42444  013AEC  0100               	movlb	0	; () banked
 42445  013AEE  2162               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 42446  013AF0  6EDA               	movwf	fsr2h,c
 42447  013AF2  CFDE F063          	movff	postinc2,??__fill_buffer_get_status+2
 42448  013AF6  CFDD F064          	movff	postdec2,??__fill_buffer_get_status+3
 42449  013AFA  C064  F063         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 42450  013AFE  0100               	movlb	0	; () banked
 42451  013B00  6B64               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 42452  013B02  BF63               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 42453  013B04  6964               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 42454  013B06  0100               	movlb	0	; () banked
 42455  013B08  5163               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 42456  013B0A  0103               	movlb	3	; () banked
 42457  013B0C  6FCC               	movwf	(_ToSendDataBuffer+40)& (0+255),b
 42458                           
 42459                           ; BSR set to: 3
 42460                           ;app_device_custom_hid.c: 326: ToSendDataBuffer[41] = ui_get_status();
 42461  013B0E  ECE6  F0D5         	call	_ui_get_status	;wreg free
 42462  013B12  0103               	movlb	3	; () banked
 42463  013B14  6FCD               	movwf	(_ToSendDataBuffer+41)& (0+255),b
 42464                           
 42465                           ; BSR set to: 3
 42466                           ;app_device_custom_hid.c: 327: ToSendDataBuffer[42] = os.timeSlot;
 42467  013B16  C208  F3CE         	movff	_os+8,_ToSendDataBuffer+42	;volatile
 42468                           
 42469                           ; BSR set to: 3
 42470  013B1A  0012               	return		;funcret
 42471  013B1C                     __end_of__fill_buffer_get_status:
 42472                           	opt stack 0
 42473                           tosu	equ	0xFFF
 42474                           tosh	equ	0xFFE
 42475                           tosl	equ	0xFFD
 42476                           pclath	equ	0xFFA
 42477                           tblptru	equ	0xFF8
 42478                           tblptrh	equ	0xFF7
 42479                           tblptrl	equ	0xFF6
 42480                           tablat	equ	0xFF5
 42481                           prodh	equ	0xFF4
 42482                           prodl	equ	0xFF3
 42483                           intcon	equ	0xFF2
 42484                           intcon2	equ	0xFF1
 42485                           intcon3	equ	0xFF0
 42486                           postinc0	equ	0xFEE
 42487                           wreg	equ	0xFE8
 42488                           indf1	equ	0xFE7
 42489                           postinc1	equ	0xFE6
 42490                           postdec1	equ	0xFE5
 42491                           plusw1	equ	0xFE3
 42492                           fsr1h	equ	0xFE2
 42493                           fsr1l	equ	0xFE1
 42494                           indf2	equ	0xFDF
 42495                           postinc2	equ	0xFDE
 42496                           postdec2	equ	0xFDD
 42497                           plusw2	equ	0xFDB
 42498                           fsr2h	equ	0xFDA
 42499                           fsr2l	equ	0xFD9
 42500                           status	equ	0xFD8
 42501                           
 42502 ;; *************** function _ui_get_status *****************
 42503 ;; Defined at:
 42504 ;;		line 12 in file "ui.c"
 42505 ;; Parameters:    Size  Location     Type
 42506 ;;		None
 42507 ;; Auto vars:     Size  Location     Type
 42508 ;;		None
 42509 ;; Return value:  Size  Location     Type
 42510 ;;                  1    wreg      enum E9488
 42511 ;; Registers used:
 42512 ;;		wreg, status,2
 42513 ;; Tracked objects:
 42514 ;;		On entry : 0/0
 42515 ;;		On exit  : 0/0
 42516 ;;		Unchanged: 0/0
 42517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42522 ;;Total ram usage:        0 bytes
 42523 ;; Hardware stack levels used:    1
 42524 ;; Hardware stack levels required when called:   10
 42525 ;; This function calls:
 42526 ;;		Nothing
 42527 ;; This function is called by:
 42528 ;;		_main
 42529 ;;		__fill_buffer_get_status
 42530 ;; This function uses a non-reentrant model
 42531 ;;
 42532                           
 42533                           	psect	text194
 42534  01ABCC                     __ptext194:
 42535                           	opt stack 0
 42536  01ABCC                     _ui_get_status:
 42537                           	opt stack 20
 42538                           
 42539                           ;ui.c: 14: return userInterfaceStatus;
 42540                           
 42541                           ; BSR set to: 3
 42542                           ;incstack = 0
 42543  01ABCC  0101               	movlb	1	; () banked
 42544  01ABCE  51F3               	movf	_userInterfaceStatus& (0+255),w,b
 42545  01ABD0  0012               	return	
 42546  01ABD2                     __end_of_ui_get_status:
 42547                           	opt stack 0
 42548                           tosu	equ	0xFFF
 42549                           tosh	equ	0xFFE
 42550                           tosl	equ	0xFFD
 42551                           pclath	equ	0xFFA
 42552                           tblptru	equ	0xFF8
 42553                           tblptrh	equ	0xFF7
 42554                           tblptrl	equ	0xFF6
 42555                           tablat	equ	0xFF5
 42556                           prodh	equ	0xFF4
 42557                           prodl	equ	0xFF3
 42558                           intcon	equ	0xFF2
 42559                           intcon2	equ	0xFF1
 42560                           intcon3	equ	0xFF0
 42561                           postinc0	equ	0xFEE
 42562                           wreg	equ	0xFE8
 42563                           indf1	equ	0xFE7
 42564                           postinc1	equ	0xFE6
 42565                           postdec1	equ	0xFE5
 42566                           plusw1	equ	0xFE3
 42567                           fsr1h	equ	0xFE2
 42568                           fsr1l	equ	0xFE1
 42569                           indf2	equ	0xFDF
 42570                           postinc2	equ	0xFDE
 42571                           postdec2	equ	0xFDD
 42572                           plusw2	equ	0xFDB
 42573                           fsr2h	equ	0xFDA
 42574                           fsr2l	equ	0xFD9
 42575                           status	equ	0xFD8
 42576                           
 42577 ;; *************** function _rtcc_get_year *****************
 42578 ;; Defined at:
 42579 ;;		line 103 in file "rtcc.c"
 42580 ;; Parameters:    Size  Location     Type
 42581 ;;		None
 42582 ;; Auto vars:     Size  Location     Type
 42583 ;;		None
 42584 ;; Return value:  Size  Location     Type
 42585 ;;                  1    wreg      unsigned char 
 42586 ;; Registers used:
 42587 ;;		wreg, status,2
 42588 ;; Tracked objects:
 42589 ;;		On entry : 0/0
 42590 ;;		On exit  : 0/0
 42591 ;;		Unchanged: 0/0
 42592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42597 ;;Total ram usage:        0 bytes
 42598 ;; Hardware stack levels used:    1
 42599 ;; Hardware stack levels required when called:   10
 42600 ;; This function calls:
 42601 ;;		Nothing
 42602 ;; This function is called by:
 42603 ;;		__fill_buffer_get_status
 42604 ;;		__display_time
 42605 ;;		__number_of_days
 42606 ;;		_rtcc_get_year_decimal
 42607 ;;		_rtcc_increment_year
 42608 ;;		_rtcc_decrement_year
 42609 ;;		_rtcc_write_eeprom
 42610 ;; This function uses a non-reentrant model
 42611 ;;
 42612                           
 42613                           	psect	text195
 42614  01AA32                     __ptext195:
 42615                           	opt stack 0
 42616  01AA32                     _rtcc_get_year:
 42617                           	opt stack 17
 42618                           
 42619                           ;rtcc.c: 105: RTCCFGbits.RTCPTR1 = 1;
 42620                           
 42621                           ; BSR set to: 1
 42622                           ;incstack = 0
 42623  01AA32  010F               	movlb	15	; () banked
 42624  01AA34  833F               	bsf	63,1,b	;volatile
 42625                           
 42626                           ;rtcc.c: 106: RTCCFGbits.RTCPTR0 = 1;
 42627  01AA36  010F               	movlb	15	; () banked
 42628  01AA38  813F               	bsf	63,0,b	;volatile
 42629  01AA3A                     l2279:
 42630                           
 42631                           ; BSR set to: 15
 42632  01AA3A  010F               	movlb	15	; () banked
 42633  01AA3C  B93F               	btfsc	63,4,b	;volatile
 42634  01AA3E  D7FD               	goto	l2279
 42635                           
 42636                           ; BSR set to: 15
 42637                           ;rtcc.c: 108: return RTCVALL;
 42638                           
 42639                           ; BSR set to: 15
 42640  01AA40  010F               	movlb	15	; () banked
 42641  01AA42  513A               	movf	58,w,b	;volatile
 42642  01AA44  0012               	return	
 42643  01AA46                     __end_of_rtcc_get_year:
 42644                           	opt stack 0
 42645                           tosu	equ	0xFFF
 42646                           tosh	equ	0xFFE
 42647                           tosl	equ	0xFFD
 42648                           pclath	equ	0xFFA
 42649                           tblptru	equ	0xFF8
 42650                           tblptrh	equ	0xFF7
 42651                           tblptrl	equ	0xFF6
 42652                           tablat	equ	0xFF5
 42653                           prodh	equ	0xFF4
 42654                           prodl	equ	0xFF3
 42655                           intcon	equ	0xFF2
 42656                           intcon2	equ	0xFF1
 42657                           intcon3	equ	0xFF0
 42658                           postinc0	equ	0xFEE
 42659                           wreg	equ	0xFE8
 42660                           indf1	equ	0xFE7
 42661                           postinc1	equ	0xFE6
 42662                           postdec1	equ	0xFE5
 42663                           plusw1	equ	0xFE3
 42664                           fsr1h	equ	0xFE2
 42665                           fsr1l	equ	0xFE1
 42666                           indf2	equ	0xFDF
 42667                           postinc2	equ	0xFDE
 42668                           postdec2	equ	0xFDD
 42669                           plusw2	equ	0xFDB
 42670                           fsr2h	equ	0xFDA
 42671                           fsr2l	equ	0xFD9
 42672                           status	equ	0xFD8
 42673                           
 42674 ;; *************** function _rtcc_get_seconds *****************
 42675 ;; Defined at:
 42676 ;;		line 293 in file "rtcc.c"
 42677 ;; Parameters:    Size  Location     Type
 42678 ;;		None
 42679 ;; Auto vars:     Size  Location     Type
 42680 ;;		None
 42681 ;; Return value:  Size  Location     Type
 42682 ;;                  1    wreg      unsigned char 
 42683 ;; Registers used:
 42684 ;;		wreg, status,2
 42685 ;; Tracked objects:
 42686 ;;		On entry : 0/0
 42687 ;;		On exit  : 0/0
 42688 ;;		Unchanged: 0/0
 42689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42694 ;;Total ram usage:        0 bytes
 42695 ;; Hardware stack levels used:    1
 42696 ;; Hardware stack levels required when called:   10
 42697 ;; This function calls:
 42698 ;;		Nothing
 42699 ;; This function is called by:
 42700 ;;		__fill_buffer_get_status
 42701 ;;		__display_time
 42702 ;;		_rtcc_get_seconds_decimal
 42703 ;;		_rtcc_increment_seconds
 42704 ;;		_rtcc_decrement_seconds
 42705 ;;		_rtcc_write_eeprom
 42706 ;; This function uses a non-reentrant model
 42707 ;;
 42708                           
 42709                           	psect	text196
 42710  01AA46                     __ptext196:
 42711                           	opt stack 0
 42712  01AA46                     _rtcc_get_seconds:
 42713                           	opt stack 17
 42714                           
 42715                           ;rtcc.c: 295: RTCCFGbits.RTCPTR1 = 0;
 42716                           
 42717                           ; BSR set to: 15
 42718                           ;incstack = 0
 42719  01AA46  010F               	movlb	15	; () banked
 42720  01AA48  933F               	bcf	63,1,b	;volatile
 42721                           
 42722                           ;rtcc.c: 296: RTCCFGbits.RTCPTR0 = 0;
 42723  01AA4A  010F               	movlb	15	; () banked
 42724  01AA4C  913F               	bcf	63,0,b	;volatile
 42725  01AA4E                     l2369:
 42726                           
 42727                           ; BSR set to: 15
 42728  01AA4E  010F               	movlb	15	; () banked
 42729  01AA50  B93F               	btfsc	63,4,b	;volatile
 42730  01AA52  D7FD               	goto	l2369
 42731                           
 42732                           ; BSR set to: 15
 42733                           ;rtcc.c: 298: return RTCVALL;
 42734                           
 42735                           ; BSR set to: 15
 42736  01AA54  010F               	movlb	15	; () banked
 42737  01AA56  513A               	movf	58,w,b	;volatile
 42738  01AA58  0012               	return	
 42739  01AA5A                     __end_of_rtcc_get_seconds:
 42740                           	opt stack 0
 42741                           tosu	equ	0xFFF
 42742                           tosh	equ	0xFFE
 42743                           tosl	equ	0xFFD
 42744                           pclath	equ	0xFFA
 42745                           tblptru	equ	0xFF8
 42746                           tblptrh	equ	0xFF7
 42747                           tblptrl	equ	0xFF6
 42748                           tablat	equ	0xFF5
 42749                           prodh	equ	0xFF4
 42750                           prodl	equ	0xFF3
 42751                           intcon	equ	0xFF2
 42752                           intcon2	equ	0xFF1
 42753                           intcon3	equ	0xFF0
 42754                           postinc0	equ	0xFEE
 42755                           wreg	equ	0xFE8
 42756                           indf1	equ	0xFE7
 42757                           postinc1	equ	0xFE6
 42758                           postdec1	equ	0xFE5
 42759                           plusw1	equ	0xFE3
 42760                           fsr1h	equ	0xFE2
 42761                           fsr1l	equ	0xFE1
 42762                           indf2	equ	0xFDF
 42763                           postinc2	equ	0xFDE
 42764                           postdec2	equ	0xFDD
 42765                           plusw2	equ	0xFDB
 42766                           fsr2h	equ	0xFDA
 42767                           fsr2l	equ	0xFD9
 42768                           status	equ	0xFD8
 42769                           
 42770 ;; *************** function _rtcc_get_month *****************
 42771 ;; Defined at:
 42772 ;;		line 141 in file "rtcc.c"
 42773 ;; Parameters:    Size  Location     Type
 42774 ;;		None
 42775 ;; Auto vars:     Size  Location     Type
 42776 ;;		None
 42777 ;; Return value:  Size  Location     Type
 42778 ;;                  1    wreg      unsigned char 
 42779 ;; Registers used:
 42780 ;;		wreg, status,2
 42781 ;; Tracked objects:
 42782 ;;		On entry : 0/0
 42783 ;;		On exit  : 0/0
 42784 ;;		Unchanged: 0/0
 42785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42790 ;;Total ram usage:        0 bytes
 42791 ;; Hardware stack levels used:    1
 42792 ;; Hardware stack levels required when called:   10
 42793 ;; This function calls:
 42794 ;;		Nothing
 42795 ;; This function is called by:
 42796 ;;		__fill_buffer_get_status
 42797 ;;		__display_time
 42798 ;;		__number_of_days
 42799 ;;		_rtcc_get_month_decimal
 42800 ;;		_rtcc_increment_month
 42801 ;;		_rtcc_decrement_month
 42802 ;;		_rtcc_write_eeprom
 42803 ;; This function uses a non-reentrant model
 42804 ;;
 42805                           
 42806                           	psect	text197
 42807  01AA5A                     __ptext197:
 42808                           	opt stack 0
 42809  01AA5A                     _rtcc_get_month:
 42810                           	opt stack 17
 42811                           
 42812                           ;rtcc.c: 143: RTCCFGbits.RTCPTR1 = 1;
 42813                           
 42814                           ; BSR set to: 15
 42815                           ;incstack = 0
 42816  01AA5A  010F               	movlb	15	; () banked
 42817  01AA5C  833F               	bsf	63,1,b	;volatile
 42818                           
 42819                           ;rtcc.c: 144: RTCCFGbits.RTCPTR0 = 0;
 42820  01AA5E  010F               	movlb	15	; () banked
 42821  01AA60  913F               	bcf	63,0,b	;volatile
 42822  01AA62                     l2297:
 42823                           
 42824                           ; BSR set to: 15
 42825  01AA62  010F               	movlb	15	; () banked
 42826  01AA64  B93F               	btfsc	63,4,b	;volatile
 42827  01AA66  D7FD               	goto	l2297
 42828                           
 42829                           ; BSR set to: 15
 42830                           ;rtcc.c: 146: return RTCVALH;
 42831                           
 42832                           ; BSR set to: 15
 42833  01AA68  010F               	movlb	15	; () banked
 42834  01AA6A  513B               	movf	59,w,b	;volatile
 42835  01AA6C  0012               	return	
 42836  01AA6E                     __end_of_rtcc_get_month:
 42837                           	opt stack 0
 42838                           tosu	equ	0xFFF
 42839                           tosh	equ	0xFFE
 42840                           tosl	equ	0xFFD
 42841                           pclath	equ	0xFFA
 42842                           tblptru	equ	0xFF8
 42843                           tblptrh	equ	0xFF7
 42844                           tblptrl	equ	0xFF6
 42845                           tablat	equ	0xFF5
 42846                           prodh	equ	0xFF4
 42847                           prodl	equ	0xFF3
 42848                           intcon	equ	0xFF2
 42849                           intcon2	equ	0xFF1
 42850                           intcon3	equ	0xFF0
 42851                           postinc0	equ	0xFEE
 42852                           wreg	equ	0xFE8
 42853                           indf1	equ	0xFE7
 42854                           postinc1	equ	0xFE6
 42855                           postdec1	equ	0xFE5
 42856                           plusw1	equ	0xFE3
 42857                           fsr1h	equ	0xFE2
 42858                           fsr1l	equ	0xFE1
 42859                           indf2	equ	0xFDF
 42860                           postinc2	equ	0xFDE
 42861                           postdec2	equ	0xFDD
 42862                           plusw2	equ	0xFDB
 42863                           fsr2h	equ	0xFDA
 42864                           fsr2l	equ	0xFD9
 42865                           status	equ	0xFD8
 42866                           
 42867 ;; *************** function _rtcc_get_minutes *****************
 42868 ;; Defined at:
 42869 ;;		line 255 in file "rtcc.c"
 42870 ;; Parameters:    Size  Location     Type
 42871 ;;		None
 42872 ;; Auto vars:     Size  Location     Type
 42873 ;;		None
 42874 ;; Return value:  Size  Location     Type
 42875 ;;                  1    wreg      unsigned char 
 42876 ;; Registers used:
 42877 ;;		wreg, status,2
 42878 ;; Tracked objects:
 42879 ;;		On entry : 0/0
 42880 ;;		On exit  : 0/0
 42881 ;;		Unchanged: 0/0
 42882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42887 ;;Total ram usage:        0 bytes
 42888 ;; Hardware stack levels used:    1
 42889 ;; Hardware stack levels required when called:   10
 42890 ;; This function calls:
 42891 ;;		Nothing
 42892 ;; This function is called by:
 42893 ;;		__fill_buffer_get_status
 42894 ;;		__display_time
 42895 ;;		_rtcc_get_minutes_decimal
 42896 ;;		_rtcc_increment_minutes
 42897 ;;		_rtcc_decrement_minutes
 42898 ;;		_rtcc_write_eeprom
 42899 ;; This function uses a non-reentrant model
 42900 ;;
 42901                           
 42902                           	psect	text198
 42903  01AA6E                     __ptext198:
 42904                           	opt stack 0
 42905  01AA6E                     _rtcc_get_minutes:
 42906                           	opt stack 17
 42907                           
 42908                           ;rtcc.c: 257: RTCCFGbits.RTCPTR1 = 0;
 42909                           
 42910                           ; BSR set to: 15
 42911                           ;incstack = 0
 42912  01AA6E  010F               	movlb	15	; () banked
 42913  01AA70  933F               	bcf	63,1,b	;volatile
 42914                           
 42915                           ;rtcc.c: 258: RTCCFGbits.RTCPTR0 = 0;
 42916  01AA72  010F               	movlb	15	; () banked
 42917  01AA74  913F               	bcf	63,0,b	;volatile
 42918  01AA76                     l2351:
 42919                           
 42920                           ; BSR set to: 15
 42921  01AA76  010F               	movlb	15	; () banked
 42922  01AA78  B93F               	btfsc	63,4,b	;volatile
 42923  01AA7A  D7FD               	goto	l2351
 42924                           
 42925                           ; BSR set to: 15
 42926                           ;rtcc.c: 260: return RTCVALH;
 42927                           
 42928                           ; BSR set to: 15
 42929  01AA7C  010F               	movlb	15	; () banked
 42930  01AA7E  513B               	movf	59,w,b	;volatile
 42931  01AA80  0012               	return	
 42932  01AA82                     __end_of_rtcc_get_minutes:
 42933                           	opt stack 0
 42934                           tosu	equ	0xFFF
 42935                           tosh	equ	0xFFE
 42936                           tosl	equ	0xFFD
 42937                           pclath	equ	0xFFA
 42938                           tblptru	equ	0xFF8
 42939                           tblptrh	equ	0xFF7
 42940                           tblptrl	equ	0xFF6
 42941                           tablat	equ	0xFF5
 42942                           prodh	equ	0xFF4
 42943                           prodl	equ	0xFF3
 42944                           intcon	equ	0xFF2
 42945                           intcon2	equ	0xFF1
 42946                           intcon3	equ	0xFF0
 42947                           postinc0	equ	0xFEE
 42948                           wreg	equ	0xFE8
 42949                           indf1	equ	0xFE7
 42950                           postinc1	equ	0xFE6
 42951                           postdec1	equ	0xFE5
 42952                           plusw1	equ	0xFE3
 42953                           fsr1h	equ	0xFE2
 42954                           fsr1l	equ	0xFE1
 42955                           indf2	equ	0xFDF
 42956                           postinc2	equ	0xFDE
 42957                           postdec2	equ	0xFDD
 42958                           plusw2	equ	0xFDB
 42959                           fsr2h	equ	0xFDA
 42960                           fsr2l	equ	0xFD9
 42961                           status	equ	0xFD8
 42962                           
 42963 ;; *************** function _rtcc_get_hours *****************
 42964 ;; Defined at:
 42965 ;;		line 217 in file "rtcc.c"
 42966 ;; Parameters:    Size  Location     Type
 42967 ;;		None
 42968 ;; Auto vars:     Size  Location     Type
 42969 ;;		None
 42970 ;; Return value:  Size  Location     Type
 42971 ;;                  1    wreg      unsigned char 
 42972 ;; Registers used:
 42973 ;;		wreg, status,2
 42974 ;; Tracked objects:
 42975 ;;		On entry : 0/0
 42976 ;;		On exit  : 0/0
 42977 ;;		Unchanged: 0/0
 42978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42983 ;;Total ram usage:        0 bytes
 42984 ;; Hardware stack levels used:    1
 42985 ;; Hardware stack levels required when called:   10
 42986 ;; This function calls:
 42987 ;;		Nothing
 42988 ;; This function is called by:
 42989 ;;		__fill_buffer_get_status
 42990 ;;		__display_time
 42991 ;;		_rtcc_get_hours_decimal
 42992 ;;		_rtcc_increment_hours
 42993 ;;		_rtcc_decrement_hours
 42994 ;;		_rtcc_write_eeprom
 42995 ;; This function uses a non-reentrant model
 42996 ;;
 42997                           
 42998                           	psect	text199
 42999  01AA82                     __ptext199:
 43000                           	opt stack 0
 43001  01AA82                     _rtcc_get_hours:
 43002                           	opt stack 17
 43003                           
 43004                           ;rtcc.c: 219: RTCCFGbits.RTCPTR1 = 0;
 43005                           
 43006                           ; BSR set to: 15
 43007                           ;incstack = 0
 43008  01AA82  010F               	movlb	15	; () banked
 43009  01AA84  933F               	bcf	63,1,b	;volatile
 43010                           
 43011                           ;rtcc.c: 220: RTCCFGbits.RTCPTR0 = 1;
 43012  01AA86  010F               	movlb	15	; () banked
 43013  01AA88  813F               	bsf	63,0,b	;volatile
 43014  01AA8A                     l2333:
 43015                           
 43016                           ; BSR set to: 15
 43017  01AA8A  010F               	movlb	15	; () banked
 43018  01AA8C  B93F               	btfsc	63,4,b	;volatile
 43019  01AA8E  D7FD               	goto	l2333
 43020                           
 43021                           ; BSR set to: 15
 43022                           ;rtcc.c: 222: return RTCVALL;
 43023                           
 43024                           ; BSR set to: 15
 43025  01AA90  010F               	movlb	15	; () banked
 43026  01AA92  513A               	movf	58,w,b	;volatile
 43027  01AA94  0012               	return	
 43028  01AA96                     __end_of_rtcc_get_hours:
 43029                           	opt stack 0
 43030                           tosu	equ	0xFFF
 43031                           tosh	equ	0xFFE
 43032                           tosl	equ	0xFFD
 43033                           pclath	equ	0xFFA
 43034                           tblptru	equ	0xFF8
 43035                           tblptrh	equ	0xFF7
 43036                           tblptrl	equ	0xFF6
 43037                           tablat	equ	0xFF5
 43038                           prodh	equ	0xFF4
 43039                           prodl	equ	0xFF3
 43040                           intcon	equ	0xFF2
 43041                           intcon2	equ	0xFF1
 43042                           intcon3	equ	0xFF0
 43043                           postinc0	equ	0xFEE
 43044                           wreg	equ	0xFE8
 43045                           indf1	equ	0xFE7
 43046                           postinc1	equ	0xFE6
 43047                           postdec1	equ	0xFE5
 43048                           plusw1	equ	0xFE3
 43049                           fsr1h	equ	0xFE2
 43050                           fsr1l	equ	0xFE1
 43051                           indf2	equ	0xFDF
 43052                           postinc2	equ	0xFDE
 43053                           postdec2	equ	0xFDD
 43054                           plusw2	equ	0xFDB
 43055                           fsr2h	equ	0xFDA
 43056                           fsr2l	equ	0xFD9
 43057                           status	equ	0xFD8
 43058                           
 43059 ;; *************** function _rtcc_get_day *****************
 43060 ;; Defined at:
 43061 ;;		line 179 in file "rtcc.c"
 43062 ;; Parameters:    Size  Location     Type
 43063 ;;		None
 43064 ;; Auto vars:     Size  Location     Type
 43065 ;;		None
 43066 ;; Return value:  Size  Location     Type
 43067 ;;                  1    wreg      unsigned char 
 43068 ;; Registers used:
 43069 ;;		wreg, status,2
 43070 ;; Tracked objects:
 43071 ;;		On entry : 0/0
 43072 ;;		On exit  : 0/0
 43073 ;;		Unchanged: 0/0
 43074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43079 ;;Total ram usage:        0 bytes
 43080 ;; Hardware stack levels used:    1
 43081 ;; Hardware stack levels required when called:   10
 43082 ;; This function calls:
 43083 ;;		Nothing
 43084 ;; This function is called by:
 43085 ;;		__fill_buffer_get_status
 43086 ;;		__display_time
 43087 ;;		_rtcc_correct_day
 43088 ;;		_rtcc_get_day_decimal
 43089 ;;		_rtcc_increment_day
 43090 ;;		_rtcc_decrement_day
 43091 ;;		_rtcc_write_eeprom
 43092 ;; This function uses a non-reentrant model
 43093 ;;
 43094                           
 43095                           	psect	text200
 43096  01AA96                     __ptext200:
 43097                           	opt stack 0
 43098  01AA96                     _rtcc_get_day:
 43099                           	opt stack 17
 43100                           
 43101                           ;rtcc.c: 181: RTCCFGbits.RTCPTR1 = 1;
 43102                           
 43103                           ; BSR set to: 15
 43104                           ;incstack = 0
 43105  01AA96  010F               	movlb	15	; () banked
 43106  01AA98  833F               	bsf	63,1,b	;volatile
 43107                           
 43108                           ;rtcc.c: 182: RTCCFGbits.RTCPTR0 = 0;
 43109  01AA9A  010F               	movlb	15	; () banked
 43110  01AA9C  913F               	bcf	63,0,b	;volatile
 43111  01AA9E                     l2315:
 43112                           
 43113                           ; BSR set to: 15
 43114  01AA9E  010F               	movlb	15	; () banked
 43115  01AAA0  B93F               	btfsc	63,4,b	;volatile
 43116  01AAA2  D7FD               	goto	l2315
 43117                           
 43118                           ; BSR set to: 15
 43119                           ;rtcc.c: 184: return RTCVALL;
 43120                           
 43121                           ; BSR set to: 15
 43122  01AAA4  010F               	movlb	15	; () banked
 43123  01AAA6  513A               	movf	58,w,b	;volatile
 43124  01AAA8  0012               	return	
 43125  01AAAA                     __end_of_rtcc_get_day:
 43126                           	opt stack 0
 43127                           tosu	equ	0xFFF
 43128                           tosh	equ	0xFFE
 43129                           tosl	equ	0xFFD
 43130                           pclath	equ	0xFFA
 43131                           tblptru	equ	0xFF8
 43132                           tblptrh	equ	0xFF7
 43133                           tblptrl	equ	0xFF6
 43134                           tablat	equ	0xFF5
 43135                           prodh	equ	0xFF4
 43136                           prodl	equ	0xFF3
 43137                           intcon	equ	0xFF2
 43138                           intcon2	equ	0xFF1
 43139                           intcon3	equ	0xFF0
 43140                           postinc0	equ	0xFEE
 43141                           wreg	equ	0xFE8
 43142                           indf1	equ	0xFE7
 43143                           postinc1	equ	0xFE6
 43144                           postdec1	equ	0xFE5
 43145                           plusw1	equ	0xFE3
 43146                           fsr1h	equ	0xFE2
 43147                           fsr1l	equ	0xFE1
 43148                           indf2	equ	0xFDF
 43149                           postinc2	equ	0xFDE
 43150                           postdec2	equ	0xFDD
 43151                           plusw2	equ	0xFDB
 43152                           fsr2h	equ	0xFDA
 43153                           fsr2l	equ	0xFD9
 43154                           status	equ	0xFD8
 43155                           
 43156 ;; *************** function _buck_remote_get_status *****************
 43157 ;; Defined at:
 43158 ;;		line 650 in file "buck.c"
 43159 ;; Parameters:    Size  Location     Type
 43160 ;;		None
 43161 ;; Auto vars:     Size  Location     Type
 43162 ;;  retval          1    0[BANK0 ] unsigned char 
 43163 ;; Return value:  Size  Location     Type
 43164 ;;                  1    wreg      unsigned char 
 43165 ;; Registers used:
 43166 ;;		wreg, status,2, status,0
 43167 ;; Tracked objects:
 43168 ;;		On entry : 0/0
 43169 ;;		On exit  : 0/0
 43170 ;;		Unchanged: 0/0
 43171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43173 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43175 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43176 ;;Total ram usage:        1 bytes
 43177 ;; Hardware stack levels used:    1
 43178 ;; Hardware stack levels required when called:   10
 43179 ;; This function calls:
 43180 ;;		Nothing
 43181 ;; This function is called by:
 43182 ;;		__fill_buffer_get_status
 43183 ;; This function uses a non-reentrant model
 43184 ;;
 43185                           
 43186                           	psect	text201
 43187  01A340                     __ptext201:
 43188                           	opt stack 0
 43189  01A340                     _buck_remote_get_status:
 43190                           	opt stack 18
 43191                           
 43192                           ;buck.c: 652: uint8_t retval = 0x00;
 43193                           
 43194                           ; BSR set to: 15
 43195                           ;incstack = 0
 43196  01A340  0E00               	movlw	0
 43197  01A342  0100               	movlb	0	; () banked
 43198  01A344  6F60               	movwf	buck_remote_get_status@retval& (0+255),b
 43199                           
 43200                           ;buck.c: 653: if(buck_remote_enable)
 43201  01A346  0101               	movlb	1	; () banked
 43202  01A348  51F1               	movf	_buck_remote_enable& (0+255),w,b
 43203  01A34A  B4D8               	btfsc	status,2,c
 43204  01A34C  D002               	goto	l19226
 43205                           
 43206                           ; BSR set to: 1
 43207                           ;buck.c: 654: retval |= 0x01;
 43208  01A34E  0100               	movlb	0	; () banked
 43209  01A350  8160               	bsf	buck_remote_get_status@retval& (0+255),0,b
 43210  01A352                     l19226:
 43211                           
 43212                           ;buck.c: 655: if(buck_remote_on)
 43213  01A352  0100               	movlb	0	; () banked
 43214  01A354  51E3               	movf	_buck_remote_on& (0+255),w,b
 43215  01A356  B4D8               	btfsc	status,2,c
 43216  01A358  D002               	goto	l19230
 43217                           
 43218                           ; BSR set to: 0
 43219                           ;buck.c: 656: retval |= 0x02;
 43220  01A35A  0100               	movlb	0	; () banked
 43221  01A35C  8360               	bsf	buck_remote_get_status@retval& (0+255),1,b
 43222  01A35E                     l19230:
 43223                           
 43224                           ; BSR set to: 0
 43225                           ;buck.c: 657: if(buck_remote_synchronous)
 43226  01A35E  0100               	movlb	0	; () banked
 43227  01A360  51E2               	movf	_buck_remote_synchronous& (0+255),w,b
 43228  01A362  B4D8               	btfsc	status,2,c
 43229  01A364  D003               	goto	l19234
 43230                           
 43231                           ; BSR set to: 0
 43232                           ;buck.c: 658: retval |= 0x03;
 43233  01A366  0E03               	movlw	3
 43234  01A368  0100               	movlb	0	; () banked
 43235  01A36A  1360               	iorwf	buck_remote_get_status@retval& (0+255),f,b
 43236  01A36C                     l19234:
 43237                           
 43238                           ; BSR set to: 0
 43239                           ;buck.c: 659: return retval;
 43240  01A36C  0100               	movlb	0	; () banked
 43241  01A36E  5160               	movf	buck_remote_get_status@retval& (0+255),w,b
 43242  01A370  0012               	return	
 43243  01A372                     __end_of_buck_remote_get_status:
 43244                           	opt stack 0
 43245                           tosu	equ	0xFFF
 43246                           tosh	equ	0xFFE
 43247                           tosl	equ	0xFFD
 43248                           pclath	equ	0xFFA
 43249                           tblptru	equ	0xFF8
 43250                           tblptrh	equ	0xFF7
 43251                           tblptrl	equ	0xFF6
 43252                           tablat	equ	0xFF5
 43253                           prodh	equ	0xFF4
 43254                           prodl	equ	0xFF3
 43255                           intcon	equ	0xFF2
 43256                           intcon2	equ	0xFF1
 43257                           intcon3	equ	0xFF0
 43258                           postinc0	equ	0xFEE
 43259                           wreg	equ	0xFE8
 43260                           indf1	equ	0xFE7
 43261                           postinc1	equ	0xFE6
 43262                           postdec1	equ	0xFE5
 43263                           plusw1	equ	0xFE3
 43264                           fsr1h	equ	0xFE2
 43265                           fsr1l	equ	0xFE1
 43266                           indf2	equ	0xFDF
 43267                           postinc2	equ	0xFDE
 43268                           postdec2	equ	0xFDD
 43269                           plusw2	equ	0xFDB
 43270                           fsr2h	equ	0xFDA
 43271                           fsr2l	equ	0xFD9
 43272                           status	equ	0xFD8
 43273                           
 43274 ;; *************** function _buck_remote_get_dutycycle *****************
 43275 ;; Defined at:
 43276 ;;		line 662 in file "buck.c"
 43277 ;; Parameters:    Size  Location     Type
 43278 ;;		None
 43279 ;; Auto vars:     Size  Location     Type
 43280 ;;		None
 43281 ;; Return value:  Size  Location     Type
 43282 ;;                  1    wreg      unsigned char 
 43283 ;; Registers used:
 43284 ;;		wreg, status,2
 43285 ;; Tracked objects:
 43286 ;;		On entry : 0/0
 43287 ;;		On exit  : 0/0
 43288 ;;		Unchanged: 0/0
 43289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43294 ;;Total ram usage:        0 bytes
 43295 ;; Hardware stack levels used:    1
 43296 ;; Hardware stack levels required when called:   10
 43297 ;; This function calls:
 43298 ;;		Nothing
 43299 ;; This function is called by:
 43300 ;;		__fill_buffer_get_status
 43301 ;; This function uses a non-reentrant model
 43302 ;;
 43303                           
 43304                           	psect	text202
 43305  01ABD2                     __ptext202:
 43306                           	opt stack 0
 43307  01ABD2                     _buck_remote_get_dutycycle:
 43308                           	opt stack 18
 43309                           
 43310                           ;buck.c: 664: return buck_remote_dutycycle;
 43311                           
 43312                           ; BSR set to: 0
 43313                           ;incstack = 0
 43314  01ABD2  0100               	movlb	0	; () banked
 43315  01ABD4  51E1               	movf	_buck_remote_dutycycle& (0+255),w,b
 43316  01ABD6  0012               	return	
 43317  01ABD8                     __end_of_buck_remote_get_dutycycle:
 43318                           	opt stack 0
 43319                           tosu	equ	0xFFF
 43320                           tosh	equ	0xFFE
 43321                           tosl	equ	0xFFD
 43322                           pclath	equ	0xFFA
 43323                           tblptru	equ	0xFF8
 43324                           tblptrh	equ	0xFF7
 43325                           tblptrl	equ	0xFF6
 43326                           tablat	equ	0xFF5
 43327                           prodh	equ	0xFF4
 43328                           prodl	equ	0xFF3
 43329                           intcon	equ	0xFF2
 43330                           intcon2	equ	0xFF1
 43331                           intcon3	equ	0xFF0
 43332                           postinc0	equ	0xFEE
 43333                           wreg	equ	0xFE8
 43334                           indf1	equ	0xFE7
 43335                           postinc1	equ	0xFE6
 43336                           postdec1	equ	0xFE5
 43337                           plusw1	equ	0xFE3
 43338                           fsr1h	equ	0xFE2
 43339                           fsr1l	equ	0xFE1
 43340                           indf2	equ	0xFDF
 43341                           postinc2	equ	0xFDE
 43342                           postdec2	equ	0xFDD
 43343                           plusw2	equ	0xFDB
 43344                           fsr2h	equ	0xFDA
 43345                           fsr2l	equ	0xFD9
 43346                           status	equ	0xFD8
 43347                           
 43348 ;; *************** function _buck_get_mode *****************
 43349 ;; Defined at:
 43350 ;;		line 597 in file "buck.c"
 43351 ;; Parameters:    Size  Location     Type
 43352 ;;		None
 43353 ;; Auto vars:     Size  Location     Type
 43354 ;;		None
 43355 ;; Return value:  Size  Location     Type
 43356 ;;                  1    wreg      enum E9570
 43357 ;; Registers used:
 43358 ;;		wreg, status,2
 43359 ;; Tracked objects:
 43360 ;;		On entry : 0/0
 43361 ;;		On exit  : 0/0
 43362 ;;		Unchanged: 0/0
 43363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43368 ;;Total ram usage:        0 bytes
 43369 ;; Hardware stack levels used:    1
 43370 ;; Hardware stack levels required when called:   10
 43371 ;; This function calls:
 43372 ;;		Nothing
 43373 ;; This function is called by:
 43374 ;;		_main
 43375 ;;		__fill_buffer_get_status
 43376 ;;		_system_calculate_input_current
 43377 ;;		_system_calculate_output_current
 43378 ;;		__display_inout
 43379 ;;		__display_charger
 43380 ;;		_log_collect_data
 43381 ;; This function uses a non-reentrant model
 43382 ;;
 43383                           
 43384                           	psect	text203
 43385  01ABDE                     __ptext203:
 43386                           	opt stack 0
 43387  01ABDE                     _buck_get_mode:
 43388                           	opt stack 19
 43389                           
 43390                           ;buck.c: 599: return buck_status;
 43391                           
 43392                           ; BSR set to: 0
 43393                           ;incstack = 0
 43394  01ABDE  501C               	movf	_buck_status,w,c
 43395  01ABE0  0012               	return	
 43396  01ABE2                     __end_of_buck_get_mode:
 43397                           	opt stack 0
 43398                           tosu	equ	0xFFF
 43399                           tosh	equ	0xFFE
 43400                           tosl	equ	0xFFD
 43401                           pclath	equ	0xFFA
 43402                           tblptru	equ	0xFF8
 43403                           tblptrh	equ	0xFF7
 43404                           tblptrl	equ	0xFF6
 43405                           tablat	equ	0xFF5
 43406                           prodh	equ	0xFF4
 43407                           prodl	equ	0xFF3
 43408                           intcon	equ	0xFF2
 43409                           intcon2	equ	0xFF1
 43410                           intcon3	equ	0xFF0
 43411                           postinc0	equ	0xFEE
 43412                           wreg	equ	0xFE8
 43413                           indf1	equ	0xFE7
 43414                           postinc1	equ	0xFE6
 43415                           postdec1	equ	0xFE5
 43416                           plusw1	equ	0xFE3
 43417                           fsr1h	equ	0xFE2
 43418                           fsr1l	equ	0xFE1
 43419                           indf2	equ	0xFDF
 43420                           postinc2	equ	0xFDE
 43421                           postdec2	equ	0xFDD
 43422                           plusw2	equ	0xFDB
 43423                           fsr2h	equ	0xFDA
 43424                           fsr2l	equ	0xFD9
 43425                           status	equ	0xFD8
 43426                           
 43427 ;; *************** function _buck_get_dutycycle *****************
 43428 ;; Defined at:
 43429 ;;		line 592 in file "buck.c"
 43430 ;; Parameters:    Size  Location     Type
 43431 ;;		None
 43432 ;; Auto vars:     Size  Location     Type
 43433 ;;		None
 43434 ;; Return value:  Size  Location     Type
 43435 ;;                  1    wreg      unsigned char 
 43436 ;; Registers used:
 43437 ;;		wreg, status,2
 43438 ;; Tracked objects:
 43439 ;;		On entry : 0/0
 43440 ;;		On exit  : 0/0
 43441 ;;		Unchanged: 0/0
 43442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43447 ;;Total ram usage:        0 bytes
 43448 ;; Hardware stack levels used:    1
 43449 ;; Hardware stack levels required when called:   10
 43450 ;; This function calls:
 43451 ;;		Nothing
 43452 ;; This function is called by:
 43453 ;;		__fill_buffer_get_status
 43454 ;;		__display_charger
 43455 ;; This function uses a non-reentrant model
 43456 ;;
 43457                           
 43458                           	psect	text204
 43459  01ABD8                     __ptext204:
 43460                           	opt stack 0
 43461  01ABD8                     _buck_get_dutycycle:
 43462                           	opt stack 18
 43463                           
 43464                           ;buck.c: 594: return buck_dutycycle;
 43465                           
 43466                           ;incstack = 0
 43467  01ABD8  0100               	movlb	0	; () banked
 43468  01ABDA  51E4               	movf	_buck_dutycycle& (0+255),w,b
 43469  01ABDC  0012               	return	
 43470  01ABDE                     __end_of_buck_get_dutycycle:
 43471                           	opt stack 0
 43472                           tosu	equ	0xFFF
 43473                           tosh	equ	0xFFE
 43474                           tosl	equ	0xFFD
 43475                           pclath	equ	0xFFA
 43476                           tblptru	equ	0xFF8
 43477                           tblptrh	equ	0xFF7
 43478                           tblptrl	equ	0xFF6
 43479                           tablat	equ	0xFF5
 43480                           prodh	equ	0xFF4
 43481                           prodl	equ	0xFF3
 43482                           intcon	equ	0xFF2
 43483                           intcon2	equ	0xFF1
 43484                           intcon3	equ	0xFF0
 43485                           postinc0	equ	0xFEE
 43486                           wreg	equ	0xFE8
 43487                           indf1	equ	0xFE7
 43488                           postinc1	equ	0xFE6
 43489                           postdec1	equ	0xFE5
 43490                           plusw1	equ	0xFE3
 43491                           fsr1h	equ	0xFE2
 43492                           fsr1l	equ	0xFE1
 43493                           indf2	equ	0xFDF
 43494                           postinc2	equ	0xFDE
 43495                           postdec2	equ	0xFDD
 43496                           plusw2	equ	0xFDB
 43497                           fsr2h	equ	0xFDA
 43498                           fsr2l	equ	0xFD9
 43499                           status	equ	0xFD8
 43500                           
 43501 ;; *************** function __fill_buffer_get_display2 *****************
 43502 ;; Defined at:
 43503 ;;		line 353 in file "app_device_custom_hid.c"
 43504 ;; Parameters:    Size  Location     Type
 43505 ;;		None
 43506 ;; Auto vars:     Size  Location     Type
 43507 ;;  position        1    7[BANK0 ] unsigned char 
 43508 ;;  line            1    6[BANK0 ] unsigned char 
 43509 ;;  cntr            1    5[BANK0 ] unsigned char 
 43510 ;; Return value:  Size  Location     Type
 43511 ;;                  1    wreg      void 
 43512 ;; Registers used:
 43513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43514 ;; Tracked objects:
 43515 ;;		On entry : 0/0
 43516 ;;		On exit  : 0/0
 43517 ;;		Unchanged: 0/0
 43518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43520 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43521 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43522 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43523 ;;Total ram usage:        4 bytes
 43524 ;; Hardware stack levels used:    1
 43525 ;; Hardware stack levels required when called:   11
 43526 ;; This function calls:
 43527 ;;		_display_get_character
 43528 ;; This function is called by:
 43529 ;;		_APP_DeviceCustomHIDTasks
 43530 ;; This function uses a non-reentrant model
 43531 ;;
 43532                           
 43533                           	psect	text205
 43534  0196CA                     __ptext205:
 43535                           	opt stack 0
 43536  0196CA                     __fill_buffer_get_display2:
 43537                           	opt stack 18
 43538                           
 43539                           ;app_device_custom_hid.c: 355: uint8_t cntr;
 43540                           ;app_device_custom_hid.c: 356: uint8_t line;
 43541                           ;app_device_custom_hid.c: 357: uint8_t position;
 43542                           ;app_device_custom_hid.c: 360: ToSendDataBuffer[0] = COMMAND_GET_DISPLAY_2;
 43543                           
 43544                           ; BSR set to: 0
 43545                           ;incstack = 0
 43546  0196CA  0E12               	movlw	18
 43547  0196CC  0103               	movlb	3	; () banked
 43548  0196CE  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 43549                           
 43550                           ;app_device_custom_hid.c: 363: cntr = 1;
 43551  0196D0  0E01               	movlw	1
 43552  0196D2  0100               	movlb	0	; () banked
 43553  0196D4  6F65               	movwf	__fill_buffer_get_display2@cntr& (0+255),b
 43554                           
 43555                           ;app_device_custom_hid.c: 364: for(line=2; line<4; ++line)
 43556  0196D6  0E02               	movlw	2
 43557  0196D8  0100               	movlb	0	; () banked
 43558  0196DA  6F66               	movwf	__fill_buffer_get_display2@line& (0+255),b
 43559  0196DC                     l20264:
 43560                           
 43561                           ; BSR set to: 0
 43562  0196DC  0E03               	movlw	3
 43563  0196DE  0100               	movlb	0	; () banked
 43564  0196E0  6566               	cpfsgt	__fill_buffer_get_display2@line& (0+255),b
 43565  0196E2  D001               	goto	l20268
 43566  0196E4  0012               	return	
 43567  0196E6                     l20268:
 43568                           
 43569                           ; BSR set to: 0
 43570                           ;app_device_custom_hid.c: 365: {
 43571                           ;app_device_custom_hid.c: 366: for(position=0; position<20; ++position)
 43572  0196E6  0E00               	movlw	0
 43573  0196E8  0100               	movlb	0	; () banked
 43574  0196EA  6F67               	movwf	__fill_buffer_get_display2@position& (0+255),b
 43575  0196EC                     l20270:
 43576                           
 43577                           ; BSR set to: 0
 43578  0196EC  0E13               	movlw	19
 43579  0196EE  0100               	movlb	0	; () banked
 43580  0196F0  6567               	cpfsgt	__fill_buffer_get_display2@position& (0+255),b
 43581  0196F2  D001               	goto	l20274
 43582  0196F4  D018               	goto	l20282
 43583  0196F6                     l20274:
 43584                           
 43585                           ; BSR set to: 0
 43586                           ;app_device_custom_hid.c: 367: {
 43587                           ;app_device_custom_hid.c: 368: ToSendDataBuffer[cntr] = display_get_character(line, posi
      +                          tion);
 43588  0196F6  C067  F060         	movff	__fill_buffer_get_display2@position,display_get_character@position
 43589  0196FA  0100               	movlb	0	; () banked
 43590  0196FC  5166               	movf	__fill_buffer_get_display2@line& (0+255),w,b
 43591  0196FE  EC3E  F0D0         	call	_display_get_character
 43592  019702  0100               	movlb	0	; () banked
 43593  019704  6F64               	movwf	??__fill_buffer_get_display2& (0+255),b
 43594  019706  0100               	movlb	0	; () banked
 43595  019708  5165               	movf	__fill_buffer_get_display2@cntr& (0+255),w,b
 43596  01970A  0D01               	mullw	1
 43597  01970C  0EA4               	movlw	low _ToSendDataBuffer
 43598  01970E  24F3               	addwf	prodl,w,c
 43599  019710  6ED9               	movwf	fsr2l,c
 43600  019712  0E03               	movlw	high _ToSendDataBuffer
 43601  019714  20F4               	addwfc	prodh,w,c
 43602  019716  6EDA               	movwf	fsr2h,c
 43603  019718  C064  FFDF         	movff	??__fill_buffer_get_display2,indf2
 43604                           
 43605                           ; BSR set to: 0
 43606                           ;app_device_custom_hid.c: 369: ++cntr;
 43607  01971C  0100               	movlb	0	; () banked
 43608  01971E  2B65               	incf	__fill_buffer_get_display2@cntr& (0+255),f,b
 43609                           
 43610                           ; BSR set to: 0
 43611  019720  0100               	movlb	0	; () banked
 43612  019722  2B67               	incf	__fill_buffer_get_display2@position& (0+255),f,b
 43613  019724  D7E3               	goto	l20270
 43614  019726                     l20282:
 43615                           
 43616                           ; BSR set to: 0
 43617  019726  0100               	movlb	0	; () banked
 43618  019728  2B66               	incf	__fill_buffer_get_display2@line& (0+255),f,b
 43619  01972A  D7D8               	goto	l20264
 43620  01972C                     __end_of__fill_buffer_get_display2:
 43621                           	opt stack 0
 43622                           tosu	equ	0xFFF
 43623                           tosh	equ	0xFFE
 43624                           tosl	equ	0xFFD
 43625                           pclath	equ	0xFFA
 43626                           tblptru	equ	0xFF8
 43627                           tblptrh	equ	0xFF7
 43628                           tblptrl	equ	0xFF6
 43629                           tablat	equ	0xFF5
 43630                           prodh	equ	0xFF4
 43631                           prodl	equ	0xFF3
 43632                           intcon	equ	0xFF2
 43633                           intcon2	equ	0xFF1
 43634                           intcon3	equ	0xFF0
 43635                           postinc0	equ	0xFEE
 43636                           wreg	equ	0xFE8
 43637                           indf1	equ	0xFE7
 43638                           postinc1	equ	0xFE6
 43639                           postdec1	equ	0xFE5
 43640                           plusw1	equ	0xFE3
 43641                           fsr1h	equ	0xFE2
 43642                           fsr1l	equ	0xFE1
 43643                           indf2	equ	0xFDF
 43644                           postinc2	equ	0xFDE
 43645                           postdec2	equ	0xFDD
 43646                           plusw2	equ	0xFDB
 43647                           fsr2h	equ	0xFDA
 43648                           fsr2l	equ	0xFD9
 43649                           status	equ	0xFD8
 43650                           
 43651 ;; *************** function __fill_buffer_get_display1 *****************
 43652 ;; Defined at:
 43653 ;;		line 331 in file "app_device_custom_hid.c"
 43654 ;; Parameters:    Size  Location     Type
 43655 ;;		None
 43656 ;; Auto vars:     Size  Location     Type
 43657 ;;  position        1    7[BANK0 ] unsigned char 
 43658 ;;  line            1    6[BANK0 ] unsigned char 
 43659 ;;  cntr            1    5[BANK0 ] unsigned char 
 43660 ;; Return value:  Size  Location     Type
 43661 ;;                  1    wreg      void 
 43662 ;; Registers used:
 43663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43664 ;; Tracked objects:
 43665 ;;		On entry : 0/0
 43666 ;;		On exit  : 0/0
 43667 ;;		Unchanged: 0/0
 43668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43670 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43671 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43672 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43673 ;;Total ram usage:        4 bytes
 43674 ;; Hardware stack levels used:    1
 43675 ;; Hardware stack levels required when called:   11
 43676 ;; This function calls:
 43677 ;;		_display_get_character
 43678 ;; This function is called by:
 43679 ;;		_APP_DeviceCustomHIDTasks
 43680 ;; This function uses a non-reentrant model
 43681 ;;
 43682                           
 43683                           	psect	text206
 43684  01972C                     __ptext206:
 43685                           	opt stack 0
 43686  01972C                     __fill_buffer_get_display1:
 43687                           	opt stack 18
 43688                           
 43689                           ;app_device_custom_hid.c: 333: uint8_t cntr;
 43690                           ;app_device_custom_hid.c: 334: uint8_t line;
 43691                           ;app_device_custom_hid.c: 335: uint8_t position;
 43692                           ;app_device_custom_hid.c: 338: ToSendDataBuffer[0] = COMMAND_GET_DISPLAY_1;
 43693                           
 43694                           ; BSR set to: 0
 43695                           ;incstack = 0
 43696  01972C  0E11               	movlw	17
 43697  01972E  0103               	movlb	3	; () banked
 43698  019730  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 43699                           
 43700                           ;app_device_custom_hid.c: 341: cntr = 1;
 43701  019732  0E01               	movlw	1
 43702  019734  0100               	movlb	0	; () banked
 43703  019736  6F65               	movwf	__fill_buffer_get_display1@cntr& (0+255),b
 43704                           
 43705                           ;app_device_custom_hid.c: 342: for(line=0; line<2; ++line)
 43706  019738  0E00               	movlw	0
 43707  01973A  0100               	movlb	0	; () banked
 43708  01973C  6F66               	movwf	__fill_buffer_get_display1@line& (0+255),b
 43709  01973E                     l20240:
 43710                           
 43711                           ; BSR set to: 0
 43712  01973E  0E01               	movlw	1
 43713  019740  0100               	movlb	0	; () banked
 43714  019742  6566               	cpfsgt	__fill_buffer_get_display1@line& (0+255),b
 43715  019744  D001               	goto	l20244
 43716  019746  0012               	return	
 43717  019748                     l20244:
 43718                           
 43719                           ; BSR set to: 0
 43720                           ;app_device_custom_hid.c: 343: {
 43721                           ;app_device_custom_hid.c: 344: for(position=0; position<20; ++position)
 43722  019748  0E00               	movlw	0
 43723  01974A  0100               	movlb	0	; () banked
 43724  01974C  6F67               	movwf	__fill_buffer_get_display1@position& (0+255),b
 43725  01974E                     l20246:
 43726                           
 43727                           ; BSR set to: 0
 43728  01974E  0E13               	movlw	19
 43729  019750  0100               	movlb	0	; () banked
 43730  019752  6567               	cpfsgt	__fill_buffer_get_display1@position& (0+255),b
 43731  019754  D001               	goto	l20250
 43732  019756  D018               	goto	l20258
 43733  019758                     l20250:
 43734                           
 43735                           ; BSR set to: 0
 43736                           ;app_device_custom_hid.c: 345: {
 43737                           ;app_device_custom_hid.c: 346: ToSendDataBuffer[cntr] = display_get_character(line, posi
      +                          tion);
 43738  019758  C067  F060         	movff	__fill_buffer_get_display1@position,display_get_character@position
 43739  01975C  0100               	movlb	0	; () banked
 43740  01975E  5166               	movf	__fill_buffer_get_display1@line& (0+255),w,b
 43741  019760  EC3E  F0D0         	call	_display_get_character
 43742  019764  0100               	movlb	0	; () banked
 43743  019766  6F64               	movwf	??__fill_buffer_get_display1& (0+255),b
 43744  019768  0100               	movlb	0	; () banked
 43745  01976A  5165               	movf	__fill_buffer_get_display1@cntr& (0+255),w,b
 43746  01976C  0D01               	mullw	1
 43747  01976E  0EA4               	movlw	low _ToSendDataBuffer
 43748  019770  24F3               	addwf	prodl,w,c
 43749  019772  6ED9               	movwf	fsr2l,c
 43750  019774  0E03               	movlw	high _ToSendDataBuffer
 43751  019776  20F4               	addwfc	prodh,w,c
 43752  019778  6EDA               	movwf	fsr2h,c
 43753  01977A  C064  FFDF         	movff	??__fill_buffer_get_display1,indf2
 43754                           
 43755                           ; BSR set to: 0
 43756                           ;app_device_custom_hid.c: 347: ++cntr;
 43757  01977E  0100               	movlb	0	; () banked
 43758  019780  2B65               	incf	__fill_buffer_get_display1@cntr& (0+255),f,b
 43759                           
 43760                           ; BSR set to: 0
 43761  019782  0100               	movlb	0	; () banked
 43762  019784  2B67               	incf	__fill_buffer_get_display1@position& (0+255),f,b
 43763  019786  D7E3               	goto	l20246
 43764  019788                     l20258:
 43765                           
 43766                           ; BSR set to: 0
 43767  019788  0100               	movlb	0	; () banked
 43768  01978A  2B66               	incf	__fill_buffer_get_display1@line& (0+255),f,b
 43769  01978C  D7D8               	goto	l20240
 43770  01978E                     __end_of__fill_buffer_get_display1:
 43771                           	opt stack 0
 43772                           tosu	equ	0xFFF
 43773                           tosh	equ	0xFFE
 43774                           tosl	equ	0xFFD
 43775                           pclath	equ	0xFFA
 43776                           tblptru	equ	0xFF8
 43777                           tblptrh	equ	0xFF7
 43778                           tblptrl	equ	0xFF6
 43779                           tablat	equ	0xFF5
 43780                           prodh	equ	0xFF4
 43781                           prodl	equ	0xFF3
 43782                           intcon	equ	0xFF2
 43783                           intcon2	equ	0xFF1
 43784                           intcon3	equ	0xFF0
 43785                           postinc0	equ	0xFEE
 43786                           wreg	equ	0xFE8
 43787                           indf1	equ	0xFE7
 43788                           postinc1	equ	0xFE6
 43789                           postdec1	equ	0xFE5
 43790                           plusw1	equ	0xFE3
 43791                           fsr1h	equ	0xFE2
 43792                           fsr1l	equ	0xFE1
 43793                           indf2	equ	0xFDF
 43794                           postinc2	equ	0xFDE
 43795                           postdec2	equ	0xFDD
 43796                           plusw2	equ	0xFDB
 43797                           fsr2h	equ	0xFDA
 43798                           fsr2l	equ	0xFD9
 43799                           status	equ	0xFD8
 43800                           
 43801 ;; *************** function _display_get_character *****************
 43802 ;; Defined at:
 43803 ;;		line 23 in file "display.c"
 43804 ;; Parameters:    Size  Location     Type
 43805 ;;  line            1    wreg     unsigned char 
 43806 ;;  position        1    0[BANK0 ] unsigned char 
 43807 ;; Auto vars:     Size  Location     Type
 43808 ;;  line            1    3[BANK0 ] unsigned char 
 43809 ;; Return value:  Size  Location     Type
 43810 ;;                  1    wreg      unsigned char 
 43811 ;; Registers used:
 43812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 43813 ;; Tracked objects:
 43814 ;;		On entry : 0/0
 43815 ;;		On exit  : 0/0
 43816 ;;		Unchanged: 0/0
 43817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43818 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43819 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43820 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43821 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43822 ;;Total ram usage:        4 bytes
 43823 ;; Hardware stack levels used:    1
 43824 ;; Hardware stack levels required when called:   10
 43825 ;; This function calls:
 43826 ;;		Nothing
 43827 ;; This function is called by:
 43828 ;;		__fill_buffer_get_display1
 43829 ;;		__fill_buffer_get_display2
 43830 ;; This function uses a non-reentrant model
 43831 ;;
 43832                           
 43833                           	psect	text207
 43834  01A07C                     __ptext207:
 43835                           	opt stack 0
 43836  01A07C                     _display_get_character:
 43837                           	opt stack 18
 43838                           
 43839                           ; BSR set to: 0
 43840                           ;incstack = 0
 43841                           ;display_get_character@line stored from wreg
 43842  01A07C  0100               	movlb	0	; () banked
 43843  01A07E  6F63               	movwf	display_get_character@line& (0+255),b
 43844                           
 43845                           ;display.c: 25: return display_content[line][position];
 43846  01A080  0100               	movlb	0	; () banked
 43847  01A082  5163               	movf	display_get_character@line& (0+255),w,b
 43848  01A084  0D14               	mullw	20
 43849  01A086  0E54               	movlw	low _display_content
 43850  01A088  0100               	movlb	0	; () banked
 43851  01A08A  6F61               	movwf	??_display_get_character& (0+255),b
 43852  01A08C  0E03               	movlw	high _display_content
 43853  01A08E  0100               	movlb	0	; () banked
 43854  01A090  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 43855  01A092  50F3               	movf	prodl,w,c
 43856  01A094  0100               	movlb	0	; () banked
 43857  01A096  2761               	addwf	??_display_get_character& (0+255),f,b
 43858  01A098  50F4               	movf	prodh,w,c
 43859  01A09A  0100               	movlb	0	; () banked
 43860  01A09C  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 43861  01A09E  0100               	movlb	0	; () banked
 43862  01A0A0  5160               	movf	display_get_character@position& (0+255),w,b
 43863  01A0A2  0D01               	mullw	1
 43864  01A0A4  50F3               	movf	prodl,w,c
 43865  01A0A6  0100               	movlb	0	; () banked
 43866  01A0A8  2561               	addwf	??_display_get_character& (0+255),w,b
 43867  01A0AA  6ED9               	movwf	fsr2l,c
 43868  01A0AC  50F4               	movf	prodh,w,c
 43869  01A0AE  0100               	movlb	0	; () banked
 43870  01A0B0  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 43871  01A0B2  6EDA               	movwf	fsr2h,c
 43872  01A0B4  50DF               	movf	indf2,w,c
 43873  01A0B6  0012               	return	
 43874  01A0B8                     __end_of_display_get_character:
 43875                           	opt stack 0
 43876                           tosu	equ	0xFFF
 43877                           tosh	equ	0xFFE
 43878                           tosl	equ	0xFFD
 43879                           pclath	equ	0xFFA
 43880                           tblptru	equ	0xFF8
 43881                           tblptrh	equ	0xFF7
 43882                           tblptrl	equ	0xFF6
 43883                           tablat	equ	0xFF5
 43884                           prodh	equ	0xFF4
 43885                           prodl	equ	0xFF3
 43886                           intcon	equ	0xFF2
 43887                           intcon2	equ	0xFF1
 43888                           intcon3	equ	0xFF0
 43889                           postinc0	equ	0xFEE
 43890                           wreg	equ	0xFE8
 43891                           indf1	equ	0xFE7
 43892                           postinc1	equ	0xFE6
 43893                           postdec1	equ	0xFE5
 43894                           plusw1	equ	0xFE3
 43895                           fsr1h	equ	0xFE2
 43896                           fsr1l	equ	0xFE1
 43897                           indf2	equ	0xFDF
 43898                           postinc2	equ	0xFDE
 43899                           postdec2	equ	0xFDD
 43900                           plusw2	equ	0xFDB
 43901                           fsr2h	equ	0xFDA
 43902                           fsr2l	equ	0xFD9
 43903                           status	equ	0xFD8
 43904                           
 43905 ;; *************** function __fill_buffer_get_calibration2 *****************
 43906 ;; Defined at:
 43907 ;;		line 388 in file "app_device_custom_hid.c"
 43908 ;; Parameters:    Size  Location     Type
 43909 ;;		None
 43910 ;; Auto vars:     Size  Location     Type
 43911 ;;		None
 43912 ;; Return value:  Size  Location     Type
 43913 ;;                  1    wreg      void 
 43914 ;; Registers used:
 43915 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 43916 ;; Tracked objects:
 43917 ;;		On entry : 0/0
 43918 ;;		On exit  : 0/0
 43919 ;;		Unchanged: 0/0
 43920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43925 ;;Total ram usage:        0 bytes
 43926 ;; Hardware stack levels used:    1
 43927 ;; Hardware stack levels required when called:   11
 43928 ;; This function calls:
 43929 ;;		_memcpy
 43930 ;; This function is called by:
 43931 ;;		_APP_DeviceCustomHIDTasks
 43932 ;; This function uses a non-reentrant model
 43933 ;;
 43934                           
 43935                           	psect	text208
 43936  018C94                     __ptext208:
 43937                           	opt stack 0
 43938  018C94                     __fill_buffer_get_calibration2:
 43939                           	opt stack 18
 43940                           
 43941                           ;app_device_custom_hid.c: 391: ToSendDataBuffer[0] = COMMAND_GET_CALIBRATION_2;
 43942                           
 43943                           ; BSR set to: 0
 43944                           ;incstack = 0
 43945  018C94  0E14               	movlw	20
 43946  018C96  0103               	movlb	3	; () banked
 43947  018C98  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 43948                           
 43949                           ; BSR set to: 3
 43950                           ;app_device_custom_hid.c: 393: memcpy(&ToSendDataBuffer[1], &calibrationParameters[CALIB
      +                          RATION_INDEX_ONBOARD_TEMPERATURE], 12);
 43951  018C9A  0EA5               	movlw	low (_ToSendDataBuffer+1)
 43952  018C9C  0100               	movlb	0	; () banked
 43953  018C9E  6F60               	movwf	memcpy@d1& (0+255),b
 43954  018CA0  0E03               	movlw	high (_ToSendDataBuffer+1)
 43955  018CA2  0100               	movlb	0	; () banked
 43956  018CA4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 43957  018CA6  0E30               	movlw	low (_calibrationParameters+48)
 43958  018CA8  0100               	movlb	0	; () banked
 43959  018CAA  6F62               	movwf	memcpy@s1& (0+255),b
 43960  018CAC  0E03               	movlw	high (_calibrationParameters+48)
 43961  018CAE  0100               	movlb	0	; () banked
 43962  018CB0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 43963  018CB2  0E00               	movlw	0
 43964  018CB4  0100               	movlb	0	; () banked
 43965  018CB6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 43966  018CB8  0E0C               	movlw	12
 43967  018CBA  6F64               	movwf	memcpy@n& (0+255),b
 43968  018CBC  ECD4  F0C9         	call	_memcpy	;wreg free
 43969                           
 43970                           ;app_device_custom_hid.c: 394: memcpy(&ToSendDataBuffer[13], &calibrationParameters[CALI
      +                          BRATION_INDEX_EXTERNAL_TEMPERATURE_1], 12);
 43971  018CC0  0EB1               	movlw	low (_ToSendDataBuffer+13)
 43972  018CC2  0100               	movlb	0	; () banked
 43973  018CC4  6F60               	movwf	memcpy@d1& (0+255),b
 43974  018CC6  0E03               	movlw	high (_ToSendDataBuffer+13)
 43975  018CC8  0100               	movlb	0	; () banked
 43976  018CCA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 43977  018CCC  0E3C               	movlw	low (_calibrationParameters+60)
 43978  018CCE  0100               	movlb	0	; () banked
 43979  018CD0  6F62               	movwf	memcpy@s1& (0+255),b
 43980  018CD2  0E03               	movlw	high (_calibrationParameters+60)
 43981  018CD4  0100               	movlb	0	; () banked
 43982  018CD6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 43983  018CD8  0E00               	movlw	0
 43984  018CDA  0100               	movlb	0	; () banked
 43985  018CDC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 43986  018CDE  0E0C               	movlw	12
 43987  018CE0  6F64               	movwf	memcpy@n& (0+255),b
 43988  018CE2  ECD4  F0C9         	call	_memcpy	;wreg free
 43989                           
 43990                           ;app_device_custom_hid.c: 395: memcpy(&ToSendDataBuffer[25], &calibrationParameters[CALI
      +                          BRATION_INDEX_EXTERNAL_TEMPERATURE_2], 12);
 43991  018CE6  0EBD               	movlw	low (_ToSendDataBuffer+25)
 43992  018CE8  0100               	movlb	0	; () banked
 43993  018CEA  6F60               	movwf	memcpy@d1& (0+255),b
 43994  018CEC  0E03               	movlw	high (_ToSendDataBuffer+25)
 43995  018CEE  0100               	movlb	0	; () banked
 43996  018CF0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 43997  018CF2  0E48               	movlw	low (_calibrationParameters+72)
 43998  018CF4  0100               	movlb	0	; () banked
 43999  018CF6  6F62               	movwf	memcpy@s1& (0+255),b
 44000  018CF8  0E03               	movlw	high (_calibrationParameters+72)
 44001  018CFA  0100               	movlb	0	; () banked
 44002  018CFC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 44003  018CFE  0E00               	movlw	0
 44004  018D00  0100               	movlb	0	; () banked
 44005  018D02  6F65               	movwf	(memcpy@n+1)& (0+255),b
 44006  018D04  0E0C               	movlw	12
 44007  018D06  6F64               	movwf	memcpy@n& (0+255),b
 44008  018D08  ECD4  F0C9         	call	_memcpy	;wreg free
 44009  018D0C  0012               	return		;funcret
 44010  018D0E                     __end_of__fill_buffer_get_calibration2:
 44011                           	opt stack 0
 44012                           tosu	equ	0xFFF
 44013                           tosh	equ	0xFFE
 44014                           tosl	equ	0xFFD
 44015                           pclath	equ	0xFFA
 44016                           tblptru	equ	0xFF8
 44017                           tblptrh	equ	0xFF7
 44018                           tblptrl	equ	0xFF6
 44019                           tablat	equ	0xFF5
 44020                           prodh	equ	0xFF4
 44021                           prodl	equ	0xFF3
 44022                           intcon	equ	0xFF2
 44023                           intcon2	equ	0xFF1
 44024                           intcon3	equ	0xFF0
 44025                           postinc0	equ	0xFEE
 44026                           wreg	equ	0xFE8
 44027                           indf1	equ	0xFE7
 44028                           postinc1	equ	0xFE6
 44029                           postdec1	equ	0xFE5
 44030                           plusw1	equ	0xFE3
 44031                           fsr1h	equ	0xFE2
 44032                           fsr1l	equ	0xFE1
 44033                           indf2	equ	0xFDF
 44034                           postinc2	equ	0xFDE
 44035                           postdec2	equ	0xFDD
 44036                           plusw2	equ	0xFDB
 44037                           fsr2h	equ	0xFDA
 44038                           fsr2l	equ	0xFD9
 44039                           status	equ	0xFD8
 44040                           
 44041 ;; *************** function __fill_buffer_get_calibration1 *****************
 44042 ;; Defined at:
 44043 ;;		line 376 in file "app_device_custom_hid.c"
 44044 ;; Parameters:    Size  Location     Type
 44045 ;;		None
 44046 ;; Auto vars:     Size  Location     Type
 44047 ;;		None
 44048 ;; Return value:  Size  Location     Type
 44049 ;;                  1    wreg      void 
 44050 ;; Registers used:
 44051 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44052 ;; Tracked objects:
 44053 ;;		On entry : 0/0
 44054 ;;		On exit  : 0/0
 44055 ;;		Unchanged: 0/0
 44056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44061 ;;Total ram usage:        0 bytes
 44062 ;; Hardware stack levels used:    1
 44063 ;; Hardware stack levels required when called:   11
 44064 ;; This function calls:
 44065 ;;		_memcpy
 44066 ;; This function is called by:
 44067 ;;		_APP_DeviceCustomHIDTasks
 44068 ;; This function uses a non-reentrant model
 44069 ;;
 44070                           
 44071                           	psect	text209
 44072  017EBE                     __ptext209:
 44073                           	opt stack 0
 44074  017EBE                     __fill_buffer_get_calibration1:
 44075                           	opt stack 18
 44076                           
 44077                           ;app_device_custom_hid.c: 379: ToSendDataBuffer[0] = COMMAND_GET_CALIBRATION_1;
 44078                           
 44079                           ;incstack = 0
 44080  017EBE  0E13               	movlw	19
 44081  017EC0  0103               	movlb	3	; () banked
 44082  017EC2  6FA4               	movwf	_ToSendDataBuffer& (0+255),b
 44083                           
 44084                           ; BSR set to: 3
 44085                           ;app_device_custom_hid.c: 381: memcpy(&ToSendDataBuffer[1], &calibrationParameters[CALIB
      +                          RATION_INDEX_INPUT_VOLTAGE], 12);
 44086  017EC4  0EA5               	movlw	low (_ToSendDataBuffer+1)
 44087  017EC6  0100               	movlb	0	; () banked
 44088  017EC8  6F60               	movwf	memcpy@d1& (0+255),b
 44089  017ECA  0E03               	movlw	high (_ToSendDataBuffer+1)
 44090  017ECC  0100               	movlb	0	; () banked
 44091  017ECE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 44092  017ED0  0E00               	movlw	low _calibrationParameters
 44093  017ED2  0100               	movlb	0	; () banked
 44094  017ED4  6F62               	movwf	memcpy@s1& (0+255),b
 44095  017ED6  0E03               	movlw	high _calibrationParameters
 44096  017ED8  0100               	movlb	0	; () banked
 44097  017EDA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 44098  017EDC  0E00               	movlw	0
 44099  017EDE  0100               	movlb	0	; () banked
 44100  017EE0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 44101  017EE2  0E0C               	movlw	12
 44102  017EE4  6F64               	movwf	memcpy@n& (0+255),b
 44103  017EE6  ECD4  F0C9         	call	_memcpy	;wreg free
 44104                           
 44105                           ;app_device_custom_hid.c: 382: memcpy(&ToSendDataBuffer[13], &calibrationParameters[CALI
      +                          BRATION_INDEX_OUTPUT_VOLTAGE], 12);
 44106  017EEA  0EB1               	movlw	low (_ToSendDataBuffer+13)
 44107  017EEC  0100               	movlb	0	; () banked
 44108  017EEE  6F60               	movwf	memcpy@d1& (0+255),b
 44109  017EF0  0E03               	movlw	high (_ToSendDataBuffer+13)
 44110  017EF2  0100               	movlb	0	; () banked
 44111  017EF4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 44112  017EF6  0E0C               	movlw	low (_calibrationParameters+12)
 44113  017EF8  0100               	movlb	0	; () banked
 44114  017EFA  6F62               	movwf	memcpy@s1& (0+255),b
 44115  017EFC  0E03               	movlw	high (_calibrationParameters+12)
 44116  017EFE  0100               	movlb	0	; () banked
 44117  017F00  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 44118  017F02  0E00               	movlw	0
 44119  017F04  0100               	movlb	0	; () banked
 44120  017F06  6F65               	movwf	(memcpy@n+1)& (0+255),b
 44121  017F08  0E0C               	movlw	12
 44122  017F0A  6F64               	movwf	memcpy@n& (0+255),b
 44123  017F0C  ECD4  F0C9         	call	_memcpy	;wreg free
 44124                           
 44125                           ;app_device_custom_hid.c: 383: memcpy(&ToSendDataBuffer[25], &calibrationParameters[CALI
      +                          BRATION_INDEX_INPUT_CURRENT], 12);
 44126  017F10  0EBD               	movlw	low (_ToSendDataBuffer+25)
 44127  017F12  0100               	movlb	0	; () banked
 44128  017F14  6F60               	movwf	memcpy@d1& (0+255),b
 44129  017F16  0E03               	movlw	high (_ToSendDataBuffer+25)
 44130  017F18  0100               	movlb	0	; () banked
 44131  017F1A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 44132  017F1C  0E18               	movlw	low (_calibrationParameters+24)
 44133  017F1E  0100               	movlb	0	; () banked
 44134  017F20  6F62               	movwf	memcpy@s1& (0+255),b
 44135  017F22  0E03               	movlw	high (_calibrationParameters+24)
 44136  017F24  0100               	movlb	0	; () banked
 44137  017F26  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 44138  017F28  0E00               	movlw	0
 44139  017F2A  0100               	movlb	0	; () banked
 44140  017F2C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 44141  017F2E  0E0C               	movlw	12
 44142  017F30  6F64               	movwf	memcpy@n& (0+255),b
 44143  017F32  ECD4  F0C9         	call	_memcpy	;wreg free
 44144                           
 44145                           ;app_device_custom_hid.c: 384: memcpy(&ToSendDataBuffer[37], &calibrationParameters[CALI
      +                          BRATION_INDEX_OUTPUT_CURRENT], 12);
 44146  017F36  0EC9               	movlw	low (_ToSendDataBuffer+37)
 44147  017F38  0100               	movlb	0	; () banked
 44148  017F3A  6F60               	movwf	memcpy@d1& (0+255),b
 44149  017F3C  0E03               	movlw	high (_ToSendDataBuffer+37)
 44150  017F3E  0100               	movlb	0	; () banked
 44151  017F40  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 44152  017F42  0E24               	movlw	low (_calibrationParameters+36)
 44153  017F44  0100               	movlb	0	; () banked
 44154  017F46  6F62               	movwf	memcpy@s1& (0+255),b
 44155  017F48  0E03               	movlw	high (_calibrationParameters+36)
 44156  017F4A  0100               	movlb	0	; () banked
 44157  017F4C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 44158  017F4E  0E00               	movlw	0
 44159  017F50  0100               	movlb	0	; () banked
 44160  017F52  6F65               	movwf	(memcpy@n+1)& (0+255),b
 44161  017F54  0E0C               	movlw	12
 44162  017F56  6F64               	movwf	memcpy@n& (0+255),b
 44163  017F58  ECD4  F0C9         	call	_memcpy	;wreg free
 44164  017F5C  0012               	return		;funcret
 44165  017F5E                     __end_of__fill_buffer_get_calibration1:
 44166                           	opt stack 0
 44167                           tosu	equ	0xFFF
 44168                           tosh	equ	0xFFE
 44169                           tosl	equ	0xFFD
 44170                           pclath	equ	0xFFA
 44171                           tblptru	equ	0xFF8
 44172                           tblptrh	equ	0xFF7
 44173                           tblptrl	equ	0xFF6
 44174                           tablat	equ	0xFF5
 44175                           prodh	equ	0xFF4
 44176                           prodl	equ	0xFF3
 44177                           intcon	equ	0xFF2
 44178                           intcon2	equ	0xFF1
 44179                           intcon3	equ	0xFF0
 44180                           postinc0	equ	0xFEE
 44181                           wreg	equ	0xFE8
 44182                           indf1	equ	0xFE7
 44183                           postinc1	equ	0xFE6
 44184                           postdec1	equ	0xFE5
 44185                           plusw1	equ	0xFE3
 44186                           fsr1h	equ	0xFE2
 44187                           fsr1l	equ	0xFE1
 44188                           indf2	equ	0xFDF
 44189                           postinc2	equ	0xFDE
 44190                           postdec2	equ	0xFDD
 44191                           plusw2	equ	0xFDB
 44192                           fsr2h	equ	0xFDA
 44193                           fsr2l	equ	0xFD9
 44194                           status	equ	0xFD8
 44195                           
 44196 ;; *************** function _memcpy *****************
 44197 ;; Defined at:
 44198 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memcpy.c"
 44199 ;; Parameters:    Size  Location     Type
 44200 ;;  d1              2    0[BANK0 ] PTR void 
 44201 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 44202 ;;		 -> SetupPkt(8), 
 44203 ;;  s1              2    2[BANK0 ] PTR const void 
 44204 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 44205 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 44206 ;;		 -> SetupPkt(8), 
 44207 ;;  n               2    4[BANK0 ] unsigned int 
 44208 ;; Auto vars:     Size  Location     Type
 44209 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 44210 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 44211 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 44212 ;;		 -> SetupPkt(8), 
 44213 ;;  d               2    7[BANK0 ] PTR unsigned char 
 44214 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 44215 ;;		 -> SetupPkt(8), 
 44216 ;;  tmp             1    6[BANK0 ] unsigned char 
 44217 ;; Return value:  Size  Location     Type
 44218 ;;                  2    0[BANK0 ] PTR void 
 44219 ;; Registers used:
 44220 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 44221 ;; Tracked objects:
 44222 ;;		On entry : 0/0
 44223 ;;		On exit  : 0/0
 44224 ;;		Unchanged: 0/0
 44225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44226 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44227 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44229 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44230 ;;Total ram usage:       11 bytes
 44231 ;; Hardware stack levels used:    1
 44232 ;; Hardware stack levels required when called:   10
 44233 ;; This function calls:
 44234 ;;		Nothing
 44235 ;; This function is called by:
 44236 ;;		_MSDProcessCommandMediaPresent
 44237 ;;		__fill_buffer_get_calibration1
 44238 ;;		__fill_buffer_get_calibration2
 44239 ;;		__flash_set_page_size
 44240 ;;		_fat_create_file
 44241 ;; This function uses a non-reentrant model
 44242 ;;
 44243                           
 44244                           	psect	text210
 44245  0193A8                     __ptext210:
 44246                           	opt stack 0
 44247  0193A8                     _memcpy:
 44248                           	opt stack 17
 44249                           
 44250                           ;incstack = 0
 44251  0193A8  C062  F069         	movff	memcpy@s1,memcpy@s
 44252  0193AC  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 44253  0193B0  C060  F067         	movff	memcpy@d1,memcpy@d
 44254  0193B4  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 44255  0193B8  D01F               	goto	l17916
 44256  0193BA                     l17908:
 44257  0193BA  C069  FFF6         	movff	memcpy@s,tblptrl
 44258  0193BE  C06A  FFF7         	movff	memcpy@s+1,tblptrh
 44259  0193C2  0E00               	movlw	low (__mediumconst shr (0+16))
 44260  0193C4  6EF8               	movwf	tblptru,c
 44261  0193C6  0E0E               	movlw	(high __ramtop+-1)
 44262  0193C8  64F7               	cpfsgt	tblptrh,c
 44263  0193CA  D003               	bra	u16587
 44264  0193CC  0008               	tblrd		*
 44265  0193CE  50F5               	movf	tablat,w,c
 44266  0193D0  D005               	bra	u16580
 44267  0193D2                     u16587:
 44268  0193D2  CFF6 FFE9          	movff	tblptrl,fsr0l
 44269  0193D6  CFF7 FFEA          	movff	tblptrh,fsr0h
 44270  0193DA  50EF               	movf	indf0,w,c
 44271  0193DC                     u16580:
 44272  0193DC  0100               	movlb	0	; () banked
 44273  0193DE  6F66               	movwf	memcpy@tmp& (0+255),b
 44274                           
 44275                           ; BSR set to: 0
 44276  0193E0  0100               	movlb	0	; () banked
 44277  0193E2  4B69               	infsnz	memcpy@s& (0+255),f,b
 44278  0193E4  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 44279                           
 44280                           ; BSR set to: 0
 44281  0193E6  C067  FFD9         	movff	memcpy@d,fsr2l
 44282  0193EA  C068  FFDA         	movff	memcpy@d+1,fsr2h
 44283  0193EE  C066  FFDF         	movff	memcpy@tmp,indf2
 44284                           
 44285                           ; BSR set to: 0
 44286  0193F2  0100               	movlb	0	; () banked
 44287  0193F4  4B67               	infsnz	memcpy@d& (0+255),f,b
 44288  0193F6  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 44289  0193F8                     l17916:
 44290  0193F8  0100               	movlb	0	; () banked
 44291  0193FA  0764               	decf	memcpy@n& (0+255),f,b
 44292  0193FC  A0D8               	btfss	status,0,c
 44293  0193FE  0765               	decf	(memcpy@n+1)& (0+255),f,b
 44294  019400  0100               	movlb	0	; () banked
 44295  019402  2964               	incf	memcpy@n& (0+255),w,b
 44296  019404  E1DA               	bnz	l17908
 44297  019406  0100               	movlb	0	; () banked
 44298  019408  2965               	incf	(memcpy@n+1)& (0+255),w,b
 44299  01940A  B4D8               	btfsc	status,2,c
 44300  01940C  0012               	return	
 44301  01940E  D7D5               	goto	l17908
 44302  019410                     __end_of_memcpy:
 44303                           	opt stack 0
 44304                           tosu	equ	0xFFF
 44305                           tosh	equ	0xFFE
 44306                           tosl	equ	0xFFD
 44307                           pclath	equ	0xFFA
 44308                           tblptru	equ	0xFF8
 44309                           tblptrh	equ	0xFF7
 44310                           tblptrl	equ	0xFF6
 44311                           tablat	equ	0xFF5
 44312                           prodh	equ	0xFF4
 44313                           prodl	equ	0xFF3
 44314                           intcon	equ	0xFF2
 44315                           intcon2	equ	0xFF1
 44316                           intcon3	equ	0xFF0
 44317                           indf0	equ	0xFEF
 44318                           postinc0	equ	0xFEE
 44319                           fsr0h	equ	0xFEA
 44320                           fsr0l	equ	0xFE9
 44321                           wreg	equ	0xFE8
 44322                           indf1	equ	0xFE7
 44323                           postinc1	equ	0xFE6
 44324                           postdec1	equ	0xFE5
 44325                           plusw1	equ	0xFE3
 44326                           fsr1h	equ	0xFE2
 44327                           fsr1l	equ	0xFE1
 44328                           indf2	equ	0xFDF
 44329                           postinc2	equ	0xFDE
 44330                           postdec2	equ	0xFDD
 44331                           plusw2	equ	0xFDB
 44332                           fsr2h	equ	0xFDA
 44333                           fsr2l	equ	0xFD9
 44334                           status	equ	0xFD8
 44335                           
 44336 ;; *************** function _USBTransferOnePacket *****************
 44337 ;; Defined at:
 44338 ;;		line 995 in file "usb_device.c"
 44339 ;; Parameters:    Size  Location     Type
 44340 ;;  ep              1    wreg     unsigned char 
 44341 ;;  dir             1    0[BANK0 ] unsigned char 
 44342 ;;  data            2    1[BANK0 ] PTR unsigned char 
 44343 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 44344 ;;		 -> msd_cbw(31), NULL(0), 
 44345 ;;  len             1    3[BANK0 ] unsigned char 
 44346 ;; Auto vars:     Size  Location     Type
 44347 ;;  ep              1    8[BANK0 ] unsigned char 
 44348 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 44349 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 44350 ;; Return value:  Size  Location     Type
 44351 ;;                  2    0[BANK0 ] PTR void 
 44352 ;; Registers used:
 44353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44354 ;; Tracked objects:
 44355 ;;		On entry : 0/0
 44356 ;;		On exit  : 0/0
 44357 ;;		Unchanged: 0/0
 44358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44359 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44360 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44361 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44362 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44363 ;;Total ram usage:       11 bytes
 44364 ;; Hardware stack levels used:    1
 44365 ;; Hardware stack levels required when called:   10
 44366 ;; This function calls:
 44367 ;;		Nothing
 44368 ;; This function is called by:
 44369 ;;		_MSDTasks
 44370 ;;		_MSDProcessCommandMediaPresent
 44371 ;;		_MSDReadHandler
 44372 ;;		_MSDWriteHandler
 44373 ;;		_APP_DeviceCustomHIDTasks
 44374 ;; This function uses a non-reentrant model
 44375 ;;
 44376                           
 44377                           	psect	text211
 44378  0158D2                     __ptext211:
 44379                           	opt stack 0
 44380  0158D2                     _USBTransferOnePacket:
 44381                           	opt stack 18
 44382                           
 44383                           ; BSR set to: 0
 44384                           ;incstack = 0
 44385                           ;USBTransferOnePacket@ep stored from wreg
 44386  0158D2  0100               	movlb	0	; () banked
 44387  0158D4  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 44388                           
 44389                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 44390                           ;usb_device.c: 1000: if(dir != 0)
 44391  0158D6  0100               	movlb	0	; () banked
 44392  0158D8  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 44393  0158DA  0100               	movlb	0	; () banked
 44394  0158DC  B4D8               	btfsc	status,2,c
 44395  0158DE  D008               	goto	l17734
 44396                           
 44397                           ; BSR set to: 0
 44398                           ;usb_device.c: 1001: {
 44399                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 44400  0158E0  0100               	movlb	0	; () banked
 44401  0158E2  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44402  0158E4  0D02               	mullw	2
 44403  0158E6  0E10               	movlw	low _pBDTEntryIn
 44404  0158E8  24F3               	addwf	prodl,w,c
 44405  0158EA  6ED9               	movwf	fsr2l,c
 44406  0158EC  0E00               	movlw	high _pBDTEntryIn
 44407  0158EE  D007               	goto	L49
 44408  0158F0                     l17734:
 44409                           
 44410                           ; BSR set to: 0
 44411                           ;usb_device.c: 1005: else
 44412                           ;usb_device.c: 1006: {
 44413                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 44414  0158F0  0100               	movlb	0	; () banked
 44415  0158F2  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44416  0158F4  0D02               	mullw	2
 44417  0158F6  0ED3               	movlw	low _pBDTEntryOut
 44418  0158F8  24F3               	addwf	prodl,w,c
 44419  0158FA  6ED9               	movwf	fsr2l,c
 44420  0158FC  0E01               	movlw	high _pBDTEntryOut
 44421  0158FE                     L49:
 44422  0158FE  20F4               	addwfc	prodh,w,c
 44423  015900  6EDA               	movwf	fsr2h,c
 44424  015902  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 44425  015906  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 44426                           
 44427                           ; BSR set to: 0
 44428                           ;usb_device.c: 1009: }
 44429                           ;usb_device.c: 1013: if(handle == 0)
 44430                           
 44431                           ; BSR set to: 0
 44432  01590A  0100               	movlb	0	; () banked
 44433  01590C  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 44434  01590E  0100               	movlb	0	; () banked
 44435  015910  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 44436  015912  A4D8               	btfss	status,2,c
 44437  015914  D007               	goto	l17742
 44438                           
 44439                           ; BSR set to: 0
 44440                           ;usb_device.c: 1014: {
 44441                           ;usb_device.c: 1015: return 0;
 44442  015916  0E00               	movlw	0
 44443  015918  0100               	movlb	0	; () banked
 44444  01591A  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 44445  01591C  0E00               	movlw	0
 44446  01591E  0100               	movlb	0	; () banked
 44447  015920  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 44448                           
 44449                           ; BSR set to: 0
 44450  015922  0012               	return	
 44451  015924                     l17742:
 44452                           
 44453                           ; BSR set to: 0
 44454                           ;usb_device.c: 1016: }
 44455                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 44456  015924  0100               	movlb	0	; () banked
 44457  015926  EE20 F002          	lfsr	2,2
 44458  01592A  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 44459  01592C  26D9               	addwf	fsr2l,f,c
 44460  01592E  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 44461  015930  22DA               	addwfc	fsr2h,f,c
 44462  015932  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 44463  015936  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 44464                           
 44465                           ;usb_device.c: 1030: handle->CNT = len;
 44466  01593A  0100               	movlb	0	; () banked
 44467  01593C  EE20 F001          	lfsr	2,1
 44468  015940  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 44469  015942  26D9               	addwf	fsr2l,f,c
 44470  015944  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 44471  015946  22DA               	addwfc	fsr2h,f,c
 44472  015948  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 44473                           
 44474                           ; BSR set to: 0
 44475                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 44476  01594C  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44477  015950  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44478  015954  0E40               	movlw	64
 44479  015956  16DF               	andwf	indf2,f,c
 44480                           
 44481                           ; BSR set to: 0
 44482                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 44483  015958  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44484  01595C  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44485  015960  0E00               	movlw	0
 44486  015962  86DB               	bsf	plusw2,3,c
 44487                           
 44488                           ; BSR set to: 0
 44489                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 44490  015964  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44491  015968  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44492  01596C  0E00               	movlw	0
 44493  01596E  8EDB               	bsf	plusw2,7,c
 44494                           
 44495                           ; BSR set to: 0
 44496                           ;usb_device.c: 1036: if(dir != 0)
 44497  015970  0100               	movlb	0	; () banked
 44498  015972  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 44499  015974  0100               	movlb	0	; () banked
 44500  015976  B4D8               	btfsc	status,2,c
 44501  015978  D01E               	goto	l17754
 44502                           
 44503                           ; BSR set to: 0
 44504                           ;usb_device.c: 1037: {
 44505                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 44506  01597A  0100               	movlb	0	; () banked
 44507  01597C  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44508  01597E  0D02               	mullw	2
 44509  015980  0E10               	movlw	low _pBDTEntryIn
 44510  015982  24F3               	addwf	prodl,w,c
 44511  015984  6ED9               	movwf	fsr2l,c
 44512  015986  0E00               	movlw	high _pBDTEntryIn
 44513  015988  20F4               	addwfc	prodh,w,c
 44514  01598A  6EDA               	movwf	fsr2h,c
 44515  01598C  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 44516  015990  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 44517  015994  0E04               	movlw	4
 44518  015996  0100               	movlb	0	; () banked
 44519  015998  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 44520  01599A  0100               	movlb	0	; () banked
 44521  01599C  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 44522  01599E  0100               	movlb	0	; () banked
 44523  0159A0  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 44524  0159A2  0100               	movlb	0	; () banked
 44525  0159A4  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 44526  0159A6  0100               	movlb	0	; () banked
 44527  0159A8  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44528  0159AA  0D02               	mullw	2
 44529  0159AC  0E10               	movlw	low _pBDTEntryIn
 44530  0159AE  24F3               	addwf	prodl,w,c
 44531  0159B0  6ED9               	movwf	fsr2l,c
 44532  0159B2  0E00               	movlw	high _pBDTEntryIn
 44533  0159B4  D01D               	goto	L50
 44534  0159B6                     l17754:
 44535                           
 44536                           ; BSR set to: 0
 44537                           ;usb_device.c: 1041: else
 44538                           ;usb_device.c: 1042: {
 44539                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 44540  0159B6  0100               	movlb	0	; () banked
 44541  0159B8  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44542  0159BA  0D02               	mullw	2
 44543  0159BC  0ED3               	movlw	low _pBDTEntryOut
 44544  0159BE  24F3               	addwf	prodl,w,c
 44545  0159C0  6ED9               	movwf	fsr2l,c
 44546  0159C2  0E01               	movlw	high _pBDTEntryOut
 44547  0159C4  20F4               	addwfc	prodh,w,c
 44548  0159C6  6EDA               	movwf	fsr2h,c
 44549  0159C8  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 44550  0159CC  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 44551  0159D0  0E04               	movlw	4
 44552  0159D2  0100               	movlb	0	; () banked
 44553  0159D4  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 44554  0159D6  0100               	movlb	0	; () banked
 44555  0159D8  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 44556  0159DA  0100               	movlb	0	; () banked
 44557  0159DC  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 44558  0159DE  0100               	movlb	0	; () banked
 44559  0159E0  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 44560  0159E2  0100               	movlb	0	; () banked
 44561  0159E4  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 44562  0159E6  0D02               	mullw	2
 44563  0159E8  0ED3               	movlw	low _pBDTEntryOut
 44564  0159EA  24F3               	addwf	prodl,w,c
 44565  0159EC  6ED9               	movwf	fsr2l,c
 44566  0159EE  0E01               	movlw	high _pBDTEntryOut
 44567  0159F0                     L50:
 44568  0159F0  20F4               	addwfc	prodh,w,c
 44569  0159F2  6EDA               	movwf	fsr2h,c
 44570  0159F4  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 44571  0159F8  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 44572                           
 44573                           ; BSR set to: 0
 44574                           ;usb_device.c: 1045: }
 44575                           ;usb_device.c: 1046: return (void*)handle;
 44576                           
 44577                           ; BSR set to: 0
 44578  0159FC  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 44579  015A00  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 44580  015A04  0012               	return	
 44581  015A06                     __end_of_USBTransferOnePacket:
 44582                           	opt stack 0
 44583                           tosu	equ	0xFFF
 44584                           tosh	equ	0xFFE
 44585                           tosl	equ	0xFFD
 44586                           pclath	equ	0xFFA
 44587                           tblptru	equ	0xFF8
 44588                           tblptrh	equ	0xFF7
 44589                           tblptrl	equ	0xFF6
 44590                           tablat	equ	0xFF5
 44591                           prodh	equ	0xFF4
 44592                           prodl	equ	0xFF3
 44593                           intcon	equ	0xFF2
 44594                           intcon2	equ	0xFF1
 44595                           intcon3	equ	0xFF0
 44596                           indf0	equ	0xFEF
 44597                           postinc0	equ	0xFEE
 44598                           fsr0h	equ	0xFEA
 44599                           fsr0l	equ	0xFE9
 44600                           wreg	equ	0xFE8
 44601                           indf1	equ	0xFE7
 44602                           postinc1	equ	0xFE6
 44603                           postdec1	equ	0xFE5
 44604                           plusw1	equ	0xFE3
 44605                           fsr1h	equ	0xFE2
 44606                           fsr1l	equ	0xFE1
 44607                           indf2	equ	0xFDF
 44608                           postinc2	equ	0xFDE
 44609                           postdec2	equ	0xFDD
 44610                           plusw2	equ	0xFDB
 44611                           fsr2h	equ	0xFDA
 44612                           fsr2l	equ	0xFD9
 44613                           status	equ	0xFD8
 44614                           
 44615 ;; *************** function _SYS_InterruptHigh *****************
 44616 ;; Defined at:
 44617 ;;		line 269 in file "system.c"
 44618 ;; Parameters:    Size  Location     Type
 44619 ;;		None
 44620 ;; Auto vars:     Size  Location     Type
 44621 ;;		None
 44622 ;; Return value:  Size  Location     Type
 44623 ;;                  1    wreg      void 
 44624 ;; Registers used:
 44625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 44626 ;; Tracked objects:
 44627 ;;		On entry : 0/0
 44628 ;;		On exit  : 0/0
 44629 ;;		Unchanged: 0/0
 44630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44633 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44634 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44635 ;;Total ram usage:       14 bytes
 44636 ;; Hardware stack levels used:    1
 44637 ;; Hardware stack levels required when called:    9
 44638 ;; This function calls:
 44639 ;;		_USBDeviceTasks
 44640 ;;		_tmr_isr
 44641 ;; This function is called by:
 44642 ;;		Interrupt level 2
 44643 ;; This function uses a non-reentrant model
 44644 ;;
 44645                           
 44646                           	psect	intcode
 44647  000008                     __pintcode:
 44648                           	opt stack 0
 44649  000008                     _SYS_InterruptHigh:
 44650                           	opt stack 9
 44651                           
 44652                           ; BSR set to: 0
 44653                           ;incstack = 0
 44654  000008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 44655  00000A  CFFA F04D          	movff	pclath,??_SYS_InterruptHigh
 44656  00000E  CFFB F04E          	movff	pclatu,??_SYS_InterruptHigh+1
 44657  000012  CFE9 F04F          	movff	fsr0l,??_SYS_InterruptHigh+2
 44658  000016  CFEA F050          	movff	fsr0h,??_SYS_InterruptHigh+3
 44659  00001A  CFE1 F051          	movff	fsr1l,??_SYS_InterruptHigh+4
 44660  00001E  CFE2 F052          	movff	fsr1h,??_SYS_InterruptHigh+5
 44661  000022  CFD9 F053          	movff	fsr2l,??_SYS_InterruptHigh+6
 44662  000026  CFDA F054          	movff	fsr2h,??_SYS_InterruptHigh+7
 44663  00002A  CFF3 F055          	movff	prodl,??_SYS_InterruptHigh+8
 44664  00002E  CFF4 F056          	movff	prodh,??_SYS_InterruptHigh+9
 44665  000032  CFF6 F057          	movff	tblptrl,??_SYS_InterruptHigh+10
 44666  000036  CFF7 F058          	movff	tblptrh,??_SYS_InterruptHigh+11
 44667  00003A  CFF8 F059          	movff	tblptru,??_SYS_InterruptHigh+12
 44668  00003E  CFF5 F05A          	movff	tablat,??_SYS_InterruptHigh+13
 44669                           
 44670                           ;system.c: 272: USBDeviceTasks();
 44671  000042  EC82  F0AA         	call	_USBDeviceTasks	;wreg free
 44672                           
 44673                           ;system.c: 276: tmr_isr();
 44674  000046  ECFE  F0BF         	call	_tmr_isr	;wreg free
 44675  00004A  C05A  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 44676  00004E  C059  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 44677  000052  C058  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 44678  000056  C057  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 44679  00005A  C056  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 44680  00005E  C055  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 44681  000062  C054  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 44682  000066  C053  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 44683  00006A  C052  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 44684  00006E  C051  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 44685  000072  C050  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 44686  000076  C04F  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 44687  00007A  C04E  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 44688  00007E  C04D  FFFA         	movff	??_SYS_InterruptHigh,pclath
 44689  000082  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 44690  000084  0011               	retfie		f
 44691  000086                     __end_of_SYS_InterruptHigh:
 44692                           	opt stack 0
 44693                           tosu	equ	0xFFF
 44694                           tosh	equ	0xFFE
 44695                           tosl	equ	0xFFD
 44696                           pclatu	equ	0xFFB
 44697                           pclath	equ	0xFFA
 44698                           tblptru	equ	0xFF8
 44699                           tblptrh	equ	0xFF7
 44700                           tblptrl	equ	0xFF6
 44701                           tablat	equ	0xFF5
 44702                           prodh	equ	0xFF4
 44703                           prodl	equ	0xFF3
 44704                           intcon	equ	0xFF2
 44705                           intcon2	equ	0xFF1
 44706                           intcon3	equ	0xFF0
 44707                           indf0	equ	0xFEF
 44708                           postinc0	equ	0xFEE
 44709                           fsr0h	equ	0xFEA
 44710                           fsr0l	equ	0xFE9
 44711                           wreg	equ	0xFE8
 44712                           indf1	equ	0xFE7
 44713                           postinc1	equ	0xFE6
 44714                           postdec1	equ	0xFE5
 44715                           plusw1	equ	0xFE3
 44716                           fsr1h	equ	0xFE2
 44717                           fsr1l	equ	0xFE1
 44718                           indf2	equ	0xFDF
 44719                           postinc2	equ	0xFDE
 44720                           postdec2	equ	0xFDD
 44721                           plusw2	equ	0xFDB
 44722                           fsr2h	equ	0xFDA
 44723                           fsr2l	equ	0xFD9
 44724                           status	equ	0xFD8
 44725                           
 44726 ;; *************** function _tmr_isr *****************
 44727 ;; Defined at:
 44728 ;;		line 46 in file "os.c"
 44729 ;; Parameters:    Size  Location     Type
 44730 ;;		None
 44731 ;; Auto vars:     Size  Location     Type
 44732 ;;		None
 44733 ;; Return value:  Size  Location     Type
 44734 ;;                  1    wreg      void 
 44735 ;; Registers used:
 44736 ;;		wreg, status,2, status,0
 44737 ;; Tracked objects:
 44738 ;;		On entry : 0/0
 44739 ;;		On exit  : 0/0
 44740 ;;		Unchanged: 0/0
 44741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44746 ;;Total ram usage:        0 bytes
 44747 ;; Hardware stack levels used:    1
 44748 ;; This function calls:
 44749 ;;		Nothing
 44750 ;; This function is called by:
 44751 ;;		_SYS_InterruptHigh
 44752 ;; This function uses a non-reentrant model
 44753 ;;
 44754                           
 44755                           	psect	text213
 44756  017FFC                     __ptext213:
 44757                           	opt stack 0
 44758  017FFC                     _tmr_isr:
 44759                           	opt stack 17
 44760                           
 44761                           ;os.c: 49: if(INTCONbits.T0IF)
 44762                           
 44763                           ;incstack = 0
 44764  017FFC  A4F2               	btfss	intcon,2,c	;volatile
 44765  017FFE  D039               	goto	i2l1322
 44766                           
 44767                           ;os.c: 50: {
 44768                           ;os.c: 52: if(os.done)
 44769  018000  0102               	movlb	2	; () banked
 44770  018002  5109               	movf	(_os+9)& (0+255),w,b	;volatile
 44771  018004  A4D8               	btfss	status,2,c
 44772  018006  D00D               	goto	i2l16724
 44773  018008  D028               	goto	i2l16738
 44774  01800A                     i2l1325:
 44775                           
 44776                           ; BSR set to: 2
 44777                           ;os.c: 58: TMR0H = 0xFF;
 44778  01800A  68D7               	setf	4055,c	;volatile
 44779                           
 44780                           ; BSR set to: 2
 44781                           ;os.c: 59: TMR0L = 0x80;
 44782  01800C  0E80               	movlw	128
 44783  01800E  D007               	goto	L52
 44784  018010                     i2l16718:
 44785                           
 44786                           ; BSR set to: 2
 44787                           ;os.c: 62: TMR0H = 0xF8;
 44788  018010  0EF8               	movlw	248
 44789  018012  6ED7               	movwf	4055,c	;volatile
 44790                           
 44791                           ;os.c: 63: TMR0L = 0x30;
 44792  018014  0E30               	movlw	48
 44793  018016  D003               	goto	L52
 44794  018018                     i2l16720:
 44795                           
 44796                           ; BSR set to: 2
 44797                           ;os.c: 66: TMR0H = 0xD1;
 44798  018018  0ED1               	movlw	209
 44799  01801A  6ED7               	movwf	4055,c	;volatile
 44800                           
 44801                           ;os.c: 67: TMR0L = 0x20;
 44802  01801C  0E20               	movlw	32
 44803  01801E                     L52:
 44804  01801E  6ED6               	movwf	4054,c	;volatile
 44805                           
 44806                           ; BSR set to: 2
 44807                           ;os.c: 69: }
 44808                           
 44809                           ;os.c: 68: break;
 44810  018020  D00B               	goto	i2l16726
 44811  018022                     i2l16724:
 44812                           
 44813                           ; BSR set to: 2
 44814  018022  0102               	movlb	2	; () banked
 44815  018024  5100               	movf	_os& (0+255),w,b	;volatile
 44816                           
 44817                           ; Switch size 1, requested type "space"
 44818                           ; Number of cases is 3, Range of values is 0 to 2
 44819                           ; switch strategies available:
 44820                           ; Name         Instructions Cycles
 44821                           ; simple_byte           10     6 (average)
 44822                           ;	Chosen strategy is simple_byte
 44823  018026  0A00               	xorlw	0	; case 0
 44824  018028  B4D8               	btfsc	status,2,c
 44825  01802A  D7EF               	goto	i2l1325
 44826  01802C  0A01               	xorlw	1	; case 1
 44827  01802E  B4D8               	btfsc	status,2,c
 44828  018030  D7EF               	goto	i2l16718
 44829  018032  0A03               	xorlw	3	; case 2
 44830  018034  B4D8               	btfsc	status,2,c
 44831  018036  D7F0               	goto	i2l16720
 44832  018038                     i2l16726:
 44833                           
 44834                           ; BSR set to: 2
 44835                           ;os.c: 71: ++os.timeSlot;
 44836  018038  0102               	movlb	2	; () banked
 44837  01803A  2B08               	incf	(_os+8)& (0+255),f,b	;volatile
 44838                           
 44839                           ; BSR set to: 2
 44840                           ;os.c: 76: os.done = 0;
 44841  01803C  0E00               	movlw	0
 44842  01803E  0102               	movlb	2	; () banked
 44843  018040  6F09               	movwf	(_os+9)& (0+255),b	;volatile
 44844                           
 44845                           ;os.c: 77: }
 44846  018042  D016               	goto	i2l1329
 44847  018044                     i2l1331:
 44848                           
 44849                           ; BSR set to: 2
 44850                           ;os.c: 84: TMR0H = 0xFF;
 44851  018044  68D7               	setf	4055,c	;volatile
 44852                           
 44853                           ; BSR set to: 2
 44854                           ;os.c: 85: TMR0L = 0xE0;
 44855  018046  0EE0               	movlw	224
 44856  018048  D006               	goto	L54
 44857  01804A                     i2l1333:
 44858                           
 44859                           ; BSR set to: 2
 44860                           ;os.c: 88: TMR0H = 0xFF;
 44861  01804A  68D7               	setf	4055,c	;volatile
 44862                           
 44863                           ; BSR set to: 2
 44864                           ;os.c: 89: TMR0L = 0x06;
 44865  01804C  0E06               	movlw	6
 44866  01804E  D003               	goto	L54
 44867  018050                     i2l16734:
 44868                           
 44869                           ; BSR set to: 2
 44870                           ;os.c: 92: TMR0H = 0xFA;
 44871  018050  0EFA               	movlw	250
 44872  018052  6ED7               	movwf	4055,c	;volatile
 44873                           
 44874                           ;os.c: 93: TMR0L = 0x24;
 44875  018054  0E24               	movlw	36
 44876  018056                     L54:
 44877  018056  6ED6               	movwf	4054,c	;volatile
 44878                           
 44879                           ; BSR set to: 2
 44880                           ;os.c: 95: }
 44881                           
 44882                           ;os.c: 94: break;
 44883  018058  D00B               	goto	i2l1329
 44884  01805A                     i2l16738:
 44885                           
 44886                           ; BSR set to: 2
 44887  01805A  0102               	movlb	2	; () banked
 44888  01805C  5100               	movf	_os& (0+255),w,b	;volatile
 44889                           
 44890                           ; Switch size 1, requested type "space"
 44891                           ; Number of cases is 3, Range of values is 0 to 2
 44892                           ; switch strategies available:
 44893                           ; Name         Instructions Cycles
 44894                           ; simple_byte           10     6 (average)
 44895                           ;	Chosen strategy is simple_byte
 44896  01805E  0A00               	xorlw	0	; case 0
 44897  018060  B4D8               	btfsc	status,2,c
 44898  018062  D7F0               	goto	i2l1331
 44899  018064  0A01               	xorlw	1	; case 1
 44900  018066  B4D8               	btfsc	status,2,c
 44901  018068  D7F0               	goto	i2l1333
 44902  01806A  0A03               	xorlw	3	; case 2
 44903  01806C  B4D8               	btfsc	status,2,c
 44904  01806E  D7F0               	goto	i2l16734
 44905  018070                     i2l1329:
 44906                           
 44907                           ; BSR set to: 2
 44908                           ;os.c: 96: }
 44909                           ;os.c: 97: INTCONbits.T0IF = 0;
 44910  018070  94F2               	bcf	intcon,2,c	;volatile
 44911  018072                     i2l1322:
 44912                           
 44913                           ;os.c: 98: }
 44914                           ;os.c: 101: if(INTCON3bits.INT1IF)
 44915  018072  A0F0               	btfss	intcon3,0,c	;volatile
 44916  018074  D003               	goto	i2l16744
 44917                           
 44918                           ;os.c: 102: {
 44919                           ;os.c: 103: ++os.buttonCount;
 44920  018076  0102               	movlb	2	; () banked
 44921  018078  2B07               	incf	(_os+7)& (0+255),f,b	;volatile
 44922                           
 44923                           ; BSR set to: 2
 44924                           ;os.c: 104: INTCON3bits.INT1IF = 0;
 44925  01807A  90F0               	bcf	intcon3,0,c	;volatile
 44926  01807C                     i2l16744:
 44927                           
 44928                           ;os.c: 105: }
 44929                           ;os.c: 108: if(INTCON3bits.INT2IF)
 44930  01807C  A2F0               	btfss	intcon3,1,c	;volatile
 44931  01807E  D005               	goto	i2l16752
 44932                           
 44933                           ;os.c: 109: {
 44934                           ;os.c: 110: if(!PORTBbits.RB6)
 44935  018080  BC81               	btfsc	3969,6,c	;volatile
 44936  018082  D002               	goto	i2l16750
 44937                           
 44938                           ;os.c: 111: {
 44939                           ;os.c: 112: --os.encoderCount;
 44940  018084  0102               	movlb	2	; () banked
 44941  018086  0706               	decf	(_os+6)& (0+255),f,b	;volatile
 44942  018088                     i2l16750:
 44943                           
 44944                           ;os.c: 113: }
 44945                           ;os.c: 114: INTCON3bits.INT2IF = 0;
 44946  018088  92F0               	bcf	intcon3,1,c	;volatile
 44947  01808A                     i2l16752:
 44948                           
 44949                           ;os.c: 115: }
 44950                           ;os.c: 116: if(INTCON3bits.INT3IF)
 44951  01808A  A4F0               	btfss	intcon3,2,c	;volatile
 44952  01808C  0012               	return	
 44953                           
 44954                           ;os.c: 117: {
 44955                           ;os.c: 118: if(!PORTBbits.RB7)
 44956  01808E  BE81               	btfsc	3969,7,c	;volatile
 44957  018090  D002               	goto	i2l16758
 44958                           
 44959                           ;os.c: 119: {
 44960                           ;os.c: 120: ++os.encoderCount;
 44961  018092  0102               	movlb	2	; () banked
 44962  018094  2B06               	incf	(_os+6)& (0+255),f,b	;volatile
 44963  018096                     i2l16758:
 44964                           
 44965                           ;os.c: 121: }
 44966                           ;os.c: 122: INTCON3bits.INT3IF = 0;
 44967  018096  94F0               	bcf	intcon3,2,c	;volatile
 44968  018098  0012               	return	
 44969  01809A                     __end_of_tmr_isr:
 44970                           	opt stack 0
 44971                           tosu	equ	0xFFF
 44972                           tosh	equ	0xFFE
 44973                           tosl	equ	0xFFD
 44974                           pclatu	equ	0xFFB
 44975                           pclath	equ	0xFFA
 44976                           tblptru	equ	0xFF8
 44977                           tblptrh	equ	0xFF7
 44978                           tblptrl	equ	0xFF6
 44979                           tablat	equ	0xFF5
 44980                           prodh	equ	0xFF4
 44981                           prodl	equ	0xFF3
 44982                           intcon	equ	0xFF2
 44983                           intcon2	equ	0xFF1
 44984                           intcon3	equ	0xFF0
 44985                           indf0	equ	0xFEF
 44986                           postinc0	equ	0xFEE
 44987                           fsr0h	equ	0xFEA
 44988                           fsr0l	equ	0xFE9
 44989                           wreg	equ	0xFE8
 44990                           indf1	equ	0xFE7
 44991                           postinc1	equ	0xFE6
 44992                           postdec1	equ	0xFE5
 44993                           plusw1	equ	0xFE3
 44994                           fsr1h	equ	0xFE2
 44995                           fsr1l	equ	0xFE1
 44996                           indf2	equ	0xFDF
 44997                           postinc2	equ	0xFDE
 44998                           postdec2	equ	0xFDD
 44999                           plusw2	equ	0xFDB
 45000                           fsr2h	equ	0xFDA
 45001                           fsr2l	equ	0xFD9
 45002                           status	equ	0xFD8
 45003                           
 45004 ;; *************** function _USBDeviceTasks *****************
 45005 ;; Defined at:
 45006 ;;		line 477 in file "usb_device.c"
 45007 ;; Parameters:    Size  Location     Type
 45008 ;;		None
 45009 ;; Auto vars:     Size  Location     Type
 45010 ;;  i               1   30[COMRAM] unsigned char 
 45011 ;; Return value:  Size  Location     Type
 45012 ;;                  1    wreg      void 
 45013 ;; Registers used:
 45014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 45015 ;; Tracked objects:
 45016 ;;		On entry : 0/0
 45017 ;;		On exit  : 0/0
 45018 ;;		Unchanged: 0/0
 45019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45023 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45024 ;;Total ram usage:        1 bytes
 45025 ;; Hardware stack levels used:    1
 45026 ;; Hardware stack levels required when called:    8
 45027 ;; This function calls:
 45028 ;;		_USBCtrlEPAllowStatusStage
 45029 ;;		_USBCtrlEPService
 45030 ;;		_USBIncrement1msInternalTimers
 45031 ;;		_USBStallHandler
 45032 ;;		_USBSuspend
 45033 ;;		_USBWakeFromSuspend
 45034 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 45035 ;;		i2_USBDeviceInit
 45036 ;; This function is called by:
 45037 ;;		_SYS_InterruptHigh
 45038 ;; This function uses a non-reentrant model
 45039 ;;
 45040                           
 45041                           	psect	text214
 45042  015504                     __ptext214:
 45043                           	opt stack 0
 45044  015504                     _USBDeviceTasks:
 45045                           	opt stack 9
 45046                           
 45047                           ;usb_device.c: 479: uint8_t i;
 45048                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 45049                           
 45050                           ;incstack = 0
 45051  015504  042B               	decf	_USBDeviceState,w,c	;volatile
 45052  015506  B4D8               	btfsc	status,2,c
 45053                           
 45054                           ;usb_device.c: 591: {
 45055                           ;usb_device.c: 601: if(!UCONbits.SE0)
 45056  015508  BA65               	btfsc	3941,5,c	;volatile
 45057  01550A  D008               	goto	i2l21792
 45058                           
 45059                           ;usb_device.c: 602: {
 45060                           ;usb_device.c: 608: {UIR = 0;};
 45061  01550C  0E00               	movlw	0
 45062  01550E  6E62               	movwf	3938,c	;volatile
 45063                           
 45064                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 45065  015510  010F               	movlb	15	; () banked
 45066  015512  8136               	bsf	54,0,b	;volatile
 45067                           
 45068                           ; BSR set to: 15
 45069                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 45070  015514  010F               	movlb	15	; () banked
 45071  015516  8936               	bsf	54,4,b	;volatile
 45072                           
 45073                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 45074  015518  0E02               	movlw	2
 45075  01551A  6E2B               	movwf	_USBDeviceState,c	;volatile
 45076  01551C                     i2l21792:
 45077                           
 45078                           ;usb_device.c: 617: }
 45079                           ;usb_device.c: 618: }
 45080                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 45081  01551C  A462               	btfss	3938,2,c	;volatile
 45082  01551E  D006               	goto	i2l21800
 45083  015520  010F               	movlb	15	; () banked
 45084  015522  A536               	btfss	54,2,b	;volatile
 45085  015524  D003               	goto	i2l21800
 45086                           
 45087                           ; BSR set to: 15
 45088                           ;usb_device.c: 635: {
 45089                           ;usb_device.c: 636: (UIR &= 0xFB);
 45090  015526  9462               	bcf	3938,2,c	;volatile
 45091                           
 45092                           ; BSR set to: 15
 45093                           ;usb_device.c: 640: USBWakeFromSuspend();
 45094  015528  ECE9  F0D0         	call	_USBWakeFromSuspend	;wreg free
 45095  01552C                     i2l21800:
 45096                           
 45097                           ;usb_device.c: 642: }
 45098                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
 45099  01552C  A265               	btfss	3941,1,c	;volatile
 45100  01552E  D002               	goto	i2l159
 45101                           
 45102                           ;usb_device.c: 648: {
 45103                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 45104  015530  98A1               	bcf	4001,4,c	;volatile
 45105                           
 45106                           ;usb_device.c: 650: return;
 45107  015532  0012               	return	
 45108  015534                     i2l159:
 45109                           
 45110                           ;usb_device.c: 651: }
 45111                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 45112  015534  A062               	btfss	3938,0,c	;volatile
 45113  015536  D009               	goto	i2l21814
 45114  015538  010F               	movlb	15	; () banked
 45115  01553A  A136               	btfss	54,0,b	;volatile
 45116  01553C  D006               	goto	i2l21814
 45117                           
 45118                           ; BSR set to: 15
 45119                           ;usb_device.c: 664: {
 45120                           ;usb_device.c: 665: USBDeviceInit();
 45121  01553E  EC90  F0A8         	call	i2_USBDeviceInit	;wreg free
 45122                           
 45123                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 45124  015542  88A0               	bsf	4000,4,c	;volatile
 45125                           
 45126                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 45127  015544  0E04               	movlw	4
 45128  015546  6E2B               	movwf	_USBDeviceState,c	;volatile
 45129                           
 45130                           ;usb_device.c: 681: (UIR &= 0xFE);
 45131  015548  9062               	bcf	3938,0,c	;volatile
 45132  01554A                     i2l21814:
 45133                           
 45134                           ;usb_device.c: 682: }
 45135                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 45136  01554A  A862               	btfss	3938,4,c	;volatile
 45137  01554C  D004               	goto	i2l21820
 45138  01554E  010F               	movlb	15	; () banked
 45139  015550  B936               	btfsc	54,4,b	;volatile
 45140                           
 45141                           ; BSR set to: 15
 45142                           ;usb_device.c: 688: {
 45143                           ;usb_device.c: 694: USBSuspend();
 45144  015552  ECB9  F0D1         	call	_USBSuspend	;wreg free
 45145  015556                     i2l21820:
 45146                           
 45147                           ;usb_device.c: 696: }
 45148                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 45149  015556  AC62               	btfss	3938,6,c	;volatile
 45150  015558  D01B               	goto	i2l21838
 45151                           
 45152                           ;usb_device.c: 709: {
 45153                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 45154  01555A  010F               	movlb	15	; () banked
 45155  01555C  AD36               	btfss	54,6,b	;volatile
 45156  01555E  D00E               	goto	i2l21826
 45157                           
 45158                           ; BSR set to: 15
 45159                           ;usb_device.c: 712: {
 45160                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 45161  015560  0E00               	movlw	0
 45162  015562  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 45163  015564  0E73               	movlw	115
 45164  015566  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 45165  015568  0E00               	movlw	0
 45166  01556A  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 45167  01556C  0E00               	movlw	0
 45168  01556E  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 45169  015570  0E00               	movlw	0
 45170  015572  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 45171  015574  0E01               	movlw	1
 45172  015576  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 45173  015578  EC82  F0C4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 45174  01557C                     i2l21826:
 45175                           
 45176                           ;usb_device.c: 714: }
 45177                           ;usb_device.c: 715: (UIR &= 0xBF);
 45178  01557C  9C62               	bcf	3938,6,c	;volatile
 45179                           
 45180                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 45181  01557E  ECE4  F0D3         	call	_USBIncrement1msInternalTimers	;wreg free
 45182                           
 45183                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 45184  015582  5024               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 45185  015584  A4D8               	btfss	status,2,c
 45186                           
 45187                           ;usb_device.c: 736: {
 45188                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 45189  015586  0624               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 45190                           
 45191                           ;usb_device.c: 738: }
 45192                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 45193  015588  5024               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 45194  01558A  B4D8               	btfsc	status,2,c
 45195                           
 45196                           ;usb_device.c: 745: {
 45197                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 45198  01558C  ECB3  F0BA         	call	_USBCtrlEPAllowStatusStage	;wreg free
 45199  015590                     i2l21838:
 45200                           
 45201                           ;usb_device.c: 747: }
 45202                           ;usb_device.c: 749: }
 45203                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 45204  015590  AA62               	btfss	3938,5,c	;volatile
 45205  015592  D004               	goto	i2l21844
 45206  015594  010F               	movlb	15	; () banked
 45207  015596  BB36               	btfsc	54,5,b	;volatile
 45208                           
 45209                           ; BSR set to: 15
 45210                           ;usb_device.c: 752: {
 45211                           ;usb_device.c: 753: USBStallHandler();
 45212  015598  EC5F  F0CF         	call	_USBStallHandler	;wreg free
 45213  01559C                     i2l21844:
 45214                           
 45215                           ;usb_device.c: 754: }
 45216                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 45217  01559C  A262               	btfss	3938,1,c	;volatile
 45218  01559E  D012               	goto	i2l21852
 45219  0155A0  010F               	movlb	15	; () banked
 45220  0155A2  A336               	btfss	54,1,b	;volatile
 45221  0155A4  D00F               	goto	i2l21852
 45222                           
 45223                           ; BSR set to: 15
 45224                           ;usb_device.c: 757: {
 45225                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 45226  0155A6  0E7F               	movlw	127
 45227  0155A8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 45228  0155AA  683D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 45229  0155AC  0E00               	movlw	0
 45230  0155AE  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 45231  0155B0  0E00               	movlw	0
 45232  0155B2  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 45233  0155B4  0E00               	movlw	0
 45234  0155B6  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 45235  0155B8  0E01               	movlw	1
 45236  0155BA  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 45237  0155BC  EC82  F0C4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 45238                           
 45239                           ;usb_device.c: 759: {UEIR = 0;};
 45240  0155C0  0E00               	movlw	0
 45241  0155C2  6E63               	movwf	3939,c	;volatile
 45242  0155C4                     i2l21852:
 45243                           
 45244                           ;usb_device.c: 767: }
 45245                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 45246  0155C4  0E04               	movlw	4
 45247  0155C6  602B               	cpfslt	_USBDeviceState,c	;volatile
 45248  0155C8  D002               	goto	i2l169
 45249                           
 45250                           ;usb_device.c: 775: {
 45251                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 45252  0155CA  98A1               	bcf	4001,4,c	;volatile
 45253                           
 45254                           ;usb_device.c: 777: return;
 45255  0155CC  0012               	return	
 45256  0155CE                     i2l169:
 45257                           
 45258                           ;usb_device.c: 778: }
 45259                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 45260  0155CE  010F               	movlb	15	; () banked
 45261  0155D0  A736               	btfss	54,3,b	;volatile
 45262  0155D2  D039               	goto	i2l170
 45263                           
 45264                           ; BSR set to: 15
 45265                           ;usb_device.c: 784: {
 45266                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 45267  0155D4  0E00               	movlw	0
 45268  0155D6  6E4C               	movwf	USBDeviceTasks@i,c
 45269  0155D8                     i2l21858:
 45270                           
 45271                           ; BSR set to: 15
 45272  0155D8  0E03               	movlw	3
 45273  0155DA  644C               	cpfsgt	USBDeviceTasks@i,c
 45274  0155DC  D001               	goto	i2l171
 45275  0155DE  D033               	goto	i2l170
 45276  0155E0                     i2l171:
 45277                           
 45278                           ;usb_device.c: 786: {
 45279                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 45280  0155E0  A662               	btfss	3938,3,c	;volatile
 45281  0155E2  D031               	goto	i2l170
 45282                           
 45283                           ;usb_device.c: 788: {
 45284                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 45285  0155E4  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 45286                           
 45287                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 45288  0155E8  302C               	rrcf	_USTATcopy,w,c	;volatile
 45289  0155EA  32E8               	rrcf	wreg,f,c
 45290  0155EC  32E8               	rrcf	wreg,f,c
 45291  0155EE  0B0F               	andlw	15
 45292  0155F0  6E26               	movwf	_endpoint_number,c	;volatile
 45293                           
 45294                           ;usb_device.c: 793: (UIR &= 0xF7);
 45295  0155F2  9662               	bcf	3938,3,c	;volatile
 45296                           
 45297                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 45298  0155F4  B42C               	btfsc	_USTATcopy,2,c	;volatile
 45299  0155F6  D007               	goto	i2l21872
 45300                           
 45301                           ;usb_device.c: 799: {
 45302                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 45303  0155F8  5026               	movf	_endpoint_number,w,c	;volatile
 45304  0155FA  0D01               	mullw	1
 45305  0155FC  0EE1               	movlw	low _ep_data_out
 45306  0155FE  24F3               	addwf	prodl,w,c
 45307  015600  6ED9               	movwf	fsr2l,c
 45308  015602  0E01               	movlw	high _ep_data_out
 45309  015604  D006               	goto	L55
 45310  015606                     i2l21872:
 45311                           
 45312                           ;usb_device.c: 802: else
 45313                           ;usb_device.c: 803: {
 45314                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 45315  015606  5026               	movf	_endpoint_number,w,c	;volatile
 45316  015608  0D01               	mullw	1
 45317  01560A  0EE4               	movlw	low _ep_data_in
 45318  01560C  24F3               	addwf	prodl,w,c
 45319  01560E  6ED9               	movwf	fsr2l,c
 45320  015610  0E01               	movlw	high _ep_data_in
 45321  015612                     L55:
 45322  015612  20F4               	addwfc	prodh,w,c
 45323  015614  6EDA               	movwf	fsr2h,c
 45324  015616  0101               	movlb	1	; () banked
 45325  015618  70DF               	btg	indf2,0,c
 45326                           
 45327                           ; BSR set to: 1
 45328                           ;usb_device.c: 805: }
 45329                           ;usb_device.c: 810: if(endpoint_number == 0)
 45330                           
 45331                           ; BSR set to: 1
 45332  01561A  5026               	movf	_endpoint_number,w,c	;volatile
 45333  01561C  A4D8               	btfss	status,2,c
 45334  01561E  D003               	goto	i2l21878
 45335                           
 45336                           ; BSR set to: 1
 45337                           ;usb_device.c: 811: {
 45338                           ;usb_device.c: 812: USBCtrlEPService();
 45339  015620  EC7D  F0C1         	call	_USBCtrlEPService	;wreg free
 45340                           
 45341                           ;usb_device.c: 813: }
 45342  015624  D00E               	goto	i2l21880
 45343  015626                     i2l21878:
 45344                           
 45345                           ;usb_device.c: 814: else
 45346                           ;usb_device.c: 815: {
 45347                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 45348  015626  0E00               	movlw	0
 45349  015628  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 45350  01562A  0E72               	movlw	114
 45351  01562C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 45352  01562E  0E2C               	movlw	low _USTATcopy
 45353  015630  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 45354  015632  0E00               	movlw	high _USTATcopy
 45355  015634  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 45356  015636  0E00               	movlw	0
 45357  015638  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 45358  01563A  0E00               	movlw	0
 45359  01563C  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 45360  01563E  EC82  F0C4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 45361  015642                     i2l21880:
 45362  015642  2A4C               	incf	USBDeviceTasks@i,f,c
 45363  015644  D7C9               	goto	i2l21858
 45364  015646                     i2l170:
 45365                           
 45366                           ;usb_device.c: 822: }
 45367                           ;usb_device.c: 823: }
 45368                           ;usb_device.c: 824: }
 45369                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 45370  015646  98A1               	bcf	4001,4,c	;volatile
 45371  015648  0012               	return		;funcret
 45372  01564A                     __end_of_USBDeviceTasks:
 45373                           	opt stack 0
 45374                           tosu	equ	0xFFF
 45375                           tosh	equ	0xFFE
 45376                           tosl	equ	0xFFD
 45377                           pclatu	equ	0xFFB
 45378                           pclath	equ	0xFFA
 45379                           tblptru	equ	0xFF8
 45380                           tblptrh	equ	0xFF7
 45381                           tblptrl	equ	0xFF6
 45382                           tablat	equ	0xFF5
 45383                           prodh	equ	0xFF4
 45384                           prodl	equ	0xFF3
 45385                           intcon	equ	0xFF2
 45386                           intcon2	equ	0xFF1
 45387                           intcon3	equ	0xFF0
 45388                           indf0	equ	0xFEF
 45389                           postinc0	equ	0xFEE
 45390                           fsr0h	equ	0xFEA
 45391                           fsr0l	equ	0xFE9
 45392                           wreg	equ	0xFE8
 45393                           indf1	equ	0xFE7
 45394                           postinc1	equ	0xFE6
 45395                           postdec1	equ	0xFE5
 45396                           plusw1	equ	0xFE3
 45397                           fsr1h	equ	0xFE2
 45398                           fsr1l	equ	0xFE1
 45399                           indf2	equ	0xFDF
 45400                           postinc2	equ	0xFDE
 45401                           postdec2	equ	0xFDD
 45402                           plusw2	equ	0xFDB
 45403                           fsr2h	equ	0xFDA
 45404                           fsr2l	equ	0xFD9
 45405                           status	equ	0xFD8
 45406                           
 45407 ;; *************** function i2_USBDeviceInit *****************
 45408 ;; Defined at:
 45409 ;;		line 277 in file "usb_device.c"
 45410 ;; Parameters:    Size  Location     Type
 45411 ;;		None
 45412 ;; Auto vars:     Size  Location     Type
 45413 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 45414 ;; Return value:  Size  Location     Type
 45415 ;;                  1    wreg      void 
 45416 ;; Registers used:
 45417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45418 ;; Tracked objects:
 45419 ;;		On entry : 0/0
 45420 ;;		On exit  : 0/0
 45421 ;;		Unchanged: 0/0
 45422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45426 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45427 ;;Total ram usage:        1 bytes
 45428 ;; Hardware stack levels used:    1
 45429 ;; Hardware stack levels required when called:    1
 45430 ;; This function calls:
 45431 ;;		i2_memset
 45432 ;; This function is called by:
 45433 ;;		_USBDeviceTasks
 45434 ;; This function uses a non-reentrant model
 45435 ;;
 45436                           
 45437                           	psect	text215
 45438  015120                     __ptext215:
 45439                           	opt stack 0
 45440  015120                     i2_USBDeviceInit:
 45441                           	opt stack 15
 45442                           
 45443                           ;usb_device.c: 279: uint8_t i;
 45444                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 45445                           
 45446                           ;incstack = 0
 45447  015120  98A0               	bcf	4000,4,c	;volatile
 45448                           
 45449                           ;usb_device.c: 285: ;
 45450                           ;usb_device.c: 288: {UEIR = 0;};
 45451  015122  0E00               	movlw	0
 45452  015124  6E63               	movwf	3939,c	;volatile
 45453                           
 45454                           ;usb_device.c: 291: {UIR = 0;};
 45455  015126  0E00               	movlw	0
 45456  015128  6E62               	movwf	3938,c	;volatile
 45457                           
 45458                           ;usb_device.c: 294: UEP0 = 0;
 45459  01512A  0E00               	movlw	0
 45460  01512C  010F               	movlb	15	; () banked
 45461  01512E  6F26               	movwf	38,b	;volatile
 45462                           
 45463                           ; BSR set to: 15
 45464                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 45465  015130  0E27               	movlw	39
 45466  015132  6E2E               	movwf	i2memset@p1,c
 45467  015134  0E0F               	movlw	15
 45468  015136  6E2F               	movwf	i2memset@p1+1,c
 45469  015138  0E00               	movlw	0
 45470  01513A  6E31               	movwf	i2memset@c+1,c
 45471  01513C  0E00               	movlw	0
 45472  01513E  6E30               	movwf	i2memset@c,c
 45473  015140  0E00               	movlw	0
 45474  015142  6E33               	movwf	i2memset@n+1,c
 45475  015144  0E02               	movlw	2
 45476  015146  6E32               	movwf	i2memset@n,c
 45477  015148  EC84  F0D2         	call	i2_memset	;wreg free
 45478                           
 45479                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 45480  01514C  0E16               	movlw	22
 45481  01514E  010F               	movlb	15	; () banked
 45482  015150  6F39               	movwf	57,b	;volatile
 45483                           
 45484                           ; BSR set to: 15
 45485  015152  0E9F               	movlw	159
 45486  015154  010F               	movlb	15	; () banked
 45487  015156  6F37               	movwf	55,b	;volatile
 45488                           
 45489                           ; BSR set to: 15
 45490  015158  0E7B               	movlw	123
 45491  01515A  010F               	movlb	15	; () banked
 45492  01515C  6F36               	movwf	54,b	;volatile
 45493                           
 45494                           ; BSR set to: 15
 45495                           ;usb_device.c: 301: ;
 45496                           ;usb_device.c: 304: ;
 45497                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 45498  01515E  0E00               	movlw	0
 45499  015160  6E36               	movwf	i2USBDeviceInit@i,c
 45500  015162                     i2l15868:
 45501                           
 45502                           ; BSR set to: 15
 45503  015162  0E0B               	movlw	11
 45504  015164  6436               	cpfsgt	i2USBDeviceInit@i,c
 45505  015166  D001               	goto	i2l15872
 45506  015168  D00E               	goto	i2l148
 45507  01516A                     i2l15872:
 45508                           
 45509                           ;usb_device.c: 308: {
 45510                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 45511  01516A  5036               	movf	i2USBDeviceInit@i,w,c
 45512  01516C  0D04               	mullw	4
 45513  01516E  0E00               	movlw	0
 45514  015170  24F3               	addwf	prodl,w,c
 45515  015172  6ED9               	movwf	fsr2l,c
 45516  015174  0E0D               	movlw	13
 45517  015176  20F4               	addwfc	prodh,w,c
 45518  015178  6EDA               	movwf	fsr2h,c
 45519  01517A  6ADE               	clrf	postinc2,c
 45520  01517C  6ADE               	clrf	postinc2,c
 45521  01517E  6ADE               	clrf	postinc2,c
 45522  015180  6ADD               	clrf	postdec2,c
 45523  015182  2A36               	incf	i2USBDeviceInit@i,f,c
 45524  015184  D7EE               	goto	i2l15868
 45525  015186                     i2l148:
 45526                           
 45527                           ;usb_device.c: 310: }
 45528                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 45529  015186  8C65               	bsf	3941,6,c	;volatile
 45530                           
 45531                           ;usb_device.c: 316: UADDR = 0x00;
 45532  015188  0E00               	movlw	0
 45533  01518A  010F               	movlb	15	; () banked
 45534  01518C  6F38               	movwf	56,b	;volatile
 45535                           
 45536                           ; BSR set to: 15
 45537                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 45538  01518E  9865               	bcf	3941,4,c	;volatile
 45539                           
 45540                           ; BSR set to: 15
 45541                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 45542  015190  9C65               	bcf	3941,6,c	;volatile
 45543  015192                     i2l15884:
 45544                           
 45545                           ;usb_device.c: 326: {
 45546                           ;usb_device.c: 327: (UIR &= 0xF7);
 45547  015192  9662               	bcf	3938,3,c	;volatile
 45548                           
 45549                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 45550  015194  0E00               	movlw	0
 45551  015196  6E0D               	movwf	_inPipes+3,c	;volatile
 45552                           
 45553                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 45554  015198  0E00               	movlw	0
 45555  01519A  6E04               	movwf	_outPipes+3,c	;volatile
 45556                           
 45557                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 45558  01519C  0E00               	movlw	0
 45559  01519E  6E06               	movwf	_outPipes+5,c	;volatile
 45560  0151A0  0E00               	movlw	0
 45561  0151A2  6E05               	movwf	_outPipes+4,c	;volatile
 45562                           
 45563                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 45564  0151A4  B662               	btfsc	3938,3,c	;volatile
 45565  0151A6  D7F5               	goto	i2l15884
 45566                           
 45567                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 45568  0151A8  0E01               	movlw	1
 45569  0151AA  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 45570                           
 45571                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 45572  0151AC  0E01               	movlw	1
 45573  0151AE  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 45574                           
 45575                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 45576  0151B0  0E00               	movlw	0
 45577  0151B2  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 45578                           
 45579                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 45580  0151B4  0E00               	movlw	0
 45581  0151B6  0101               	movlb	1	; () banked
 45582  0151B8  6FFB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 45583                           
 45584                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 45585  0151BA  0E00               	movlw	0
 45586  0151BC  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 45587                           
 45588                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 45589  0151BE  0E00               	movlw	0
 45590  0151C0  6E36               	movwf	i2USBDeviceInit@i,c
 45591  0151C2                     i2l15896:
 45592                           
 45593                           ; BSR set to: 1
 45594  0151C2  0E02               	movlw	2
 45595  0151C4  6436               	cpfsgt	i2USBDeviceInit@i,c
 45596  0151C6  D001               	goto	i2l15900
 45597  0151C8  D02E               	goto	i2l15906
 45598  0151CA                     i2l15900:
 45599                           
 45600                           ;usb_device.c: 346: {
 45601                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 45602  0151CA  5036               	movf	i2USBDeviceInit@i,w,c
 45603  0151CC  0D02               	mullw	2
 45604  0151CE  0E10               	movlw	low _pBDTEntryIn
 45605  0151D0  24F3               	addwf	prodl,w,c
 45606  0151D2  6ED9               	movwf	fsr2l,c
 45607  0151D4  0E00               	movlw	high _pBDTEntryIn
 45608  0151D6  20F4               	addwfc	prodh,w,c
 45609  0151D8  6EDA               	movwf	fsr2h,c
 45610  0151DA  0E00               	movlw	0
 45611  0151DC  6EDE               	movwf	postinc2,c
 45612  0151DE  0E00               	movlw	0
 45613  0151E0  6EDD               	movwf	postdec2,c
 45614                           
 45615                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 45616  0151E2  5036               	movf	i2USBDeviceInit@i,w,c
 45617  0151E4  0D02               	mullw	2
 45618  0151E6  0ED3               	movlw	low _pBDTEntryOut
 45619  0151E8  24F3               	addwf	prodl,w,c
 45620  0151EA  6ED9               	movwf	fsr2l,c
 45621  0151EC  0E01               	movlw	high _pBDTEntryOut
 45622  0151EE  20F4               	addwfc	prodh,w,c
 45623  0151F0  6EDA               	movwf	fsr2h,c
 45624  0151F2  0E00               	movlw	0
 45625  0151F4  6EDE               	movwf	postinc2,c
 45626  0151F6  0E00               	movlw	0
 45627  0151F8  6EDD               	movwf	postdec2,c
 45628                           
 45629                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 45630  0151FA  5036               	movf	i2USBDeviceInit@i,w,c
 45631  0151FC  0D01               	mullw	1
 45632  0151FE  0EE4               	movlw	low _ep_data_in
 45633  015200  24F3               	addwf	prodl,w,c
 45634  015202  6ED9               	movwf	fsr2l,c
 45635  015204  0E01               	movlw	high _ep_data_in
 45636  015206  20F4               	addwfc	prodh,w,c
 45637  015208  6EDA               	movwf	fsr2h,c
 45638  01520A  0E00               	movlw	0
 45639  01520C  6EDF               	movwf	indf2,c
 45640                           
 45641                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 45642  01520E  5036               	movf	i2USBDeviceInit@i,w,c
 45643  015210  0D01               	mullw	1
 45644  015212  0EE1               	movlw	low _ep_data_out
 45645  015214  24F3               	addwf	prodl,w,c
 45646  015216  6ED9               	movwf	fsr2l,c
 45647  015218  0E01               	movlw	high _ep_data_out
 45648  01521A  20F4               	addwfc	prodh,w,c
 45649  01521C  6EDA               	movwf	fsr2h,c
 45650  01521E  0E00               	movlw	0
 45651  015220  6EDF               	movwf	indf2,c
 45652  015222  2A36               	incf	i2USBDeviceInit@i,f,c
 45653  015224  D7CE               	goto	i2l15896
 45654  015226                     i2l15906:
 45655                           
 45656                           ;usb_device.c: 351: }
 45657                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 45658  015226  0E08               	movlw	8
 45659  015228  6E10               	movwf	_pBDTEntryIn,c
 45660  01522A  0E0D               	movlw	13
 45661  01522C  6E11               	movwf	_pBDTEntryIn+1,c
 45662                           
 45663                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 45664  01522E  0E16               	movlw	22
 45665  015230  010F               	movlb	15	; () banked
 45666  015232  6F26               	movwf	38,b	;volatile
 45667                           
 45668                           ; BSR set to: 15
 45669                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 45670  015234  0E0D               	movlw	13
 45671  015236  010D               	movlb	13	; () banked
 45672  015238  6F03               	movwf	3,b	;volatile
 45673  01523A  0E30               	movlw	48
 45674  01523C  6F02               	movwf	2,b	;volatile
 45675                           
 45676                           ; BSR set to: 13
 45677                           ;usb_device.c: 359: BDT[0].CNT = 8;
 45678  01523E  0E08               	movlw	8
 45679  015240  010D               	movlb	13	; () banked
 45680  015242  6F01               	movwf	1,b	;volatile
 45681                           
 45682                           ; BSR set to: 13
 45683                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 45684  015244  0E04               	movlw	4
 45685  015246  010D               	movlb	13	; () banked
 45686  015248  6F00               	movwf	0,b	;volatile
 45687                           
 45688                           ; BSR set to: 13
 45689                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 45690  01524A  010D               	movlb	13	; () banked
 45691  01524C  8F00               	bsf	0,7,b	;volatile
 45692                           
 45693                           ; BSR set to: 13
 45694                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 45695  01524E  0E00               	movlw	0
 45696  015250  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 45697                           
 45698                           ; BSR set to: 13
 45699                           ;usb_device.c: 366: USB1msTickCount = 0;
 45700  015252  0E00               	movlw	0
 45701  015254  0101               	movlb	1	; () banked
 45702  015256  6FDD               	movwf	_USB1msTickCount& (0+255),b	;volatile
 45703  015258  0E00               	movlw	0
 45704  01525A  6FDE               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 45705  01525C  0E00               	movlw	0
 45706  01525E  6FDF               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 45707  015260  0E00               	movlw	0
 45708  015262  6FE0               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 45709                           
 45710                           ; BSR set to: 1
 45711                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 45712  015264  0E00               	movlw	0
 45713  015266  0101               	movlb	1	; () banked
 45714  015268  6FFA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 45715                           
 45716                           ; BSR set to: 1
 45717                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 45718  01526A  0E00               	movlw	0
 45719  01526C  6E2B               	movwf	_USBDeviceState,c	;volatile
 45720                           
 45721                           ; BSR set to: 1
 45722  01526E  0012               	return		;funcret
 45723  015270                     __end_ofi2_USBDeviceInit:
 45724                           	opt stack 0
 45725                           tosu	equ	0xFFF
 45726                           tosh	equ	0xFFE
 45727                           tosl	equ	0xFFD
 45728                           pclatu	equ	0xFFB
 45729                           pclath	equ	0xFFA
 45730                           tblptru	equ	0xFF8
 45731                           tblptrh	equ	0xFF7
 45732                           tblptrl	equ	0xFF6
 45733                           tablat	equ	0xFF5
 45734                           prodh	equ	0xFF4
 45735                           prodl	equ	0xFF3
 45736                           intcon	equ	0xFF2
 45737                           intcon2	equ	0xFF1
 45738                           intcon3	equ	0xFF0
 45739                           indf0	equ	0xFEF
 45740                           postinc0	equ	0xFEE
 45741                           fsr0h	equ	0xFEA
 45742                           fsr0l	equ	0xFE9
 45743                           wreg	equ	0xFE8
 45744                           indf1	equ	0xFE7
 45745                           postinc1	equ	0xFE6
 45746                           postdec1	equ	0xFE5
 45747                           plusw1	equ	0xFE3
 45748                           fsr1h	equ	0xFE2
 45749                           fsr1l	equ	0xFE1
 45750                           indf2	equ	0xFDF
 45751                           postinc2	equ	0xFDE
 45752                           postdec2	equ	0xFDD
 45753                           plusw2	equ	0xFDB
 45754                           fsr2h	equ	0xFDA
 45755                           fsr2l	equ	0xFD9
 45756                           status	equ	0xFD8
 45757                           
 45758 ;; *************** function _USBWakeFromSuspend *****************
 45759 ;; Defined at:
 45760 ;;		line 2305 in file "usb_device.c"
 45761 ;; Parameters:    Size  Location     Type
 45762 ;;		None
 45763 ;; Auto vars:     Size  Location     Type
 45764 ;;		None
 45765 ;; Return value:  Size  Location     Type
 45766 ;;                  1    wreg      void 
 45767 ;; Registers used:
 45768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 45769 ;; Tracked objects:
 45770 ;;		On entry : 0/0
 45771 ;;		On exit  : 0/0
 45772 ;;		Unchanged: 0/0
 45773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45778 ;;Total ram usage:        0 bytes
 45779 ;; Hardware stack levels used:    1
 45780 ;; Hardware stack levels required when called:    4
 45781 ;; This function calls:
 45782 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 45783 ;; This function is called by:
 45784 ;;		_USBDeviceTasks
 45785 ;; This function uses a non-reentrant model
 45786 ;;
 45787                           
 45788                           	psect	text216
 45789  01A1D2                     __ptext216:
 45790                           	opt stack 0
 45791  01A1D2                     _USBWakeFromSuspend:
 45792                           	opt stack 12
 45793                           
 45794                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 45795                           
 45796                           ; BSR set to: 1
 45797                           ;incstack = 0
 45798  01A1D2  0E00               	movlw	0
 45799  01A1D4  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 45800                           
 45801                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 45802  01A1D6  0E00               	movlw	0
 45803  01A1D8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 45804  01A1DA  0E74               	movlw	116
 45805  01A1DC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 45806  01A1DE  0E00               	movlw	0
 45807  01A1E0  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 45808  01A1E2  0E00               	movlw	0
 45809  01A1E4  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 45810  01A1E6  0E00               	movlw	0
 45811  01A1E8  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 45812  01A1EA  0E00               	movlw	0
 45813  01A1EC  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 45814  01A1EE  EC82  F0C4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 45815                           
 45816                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 45817  01A1F2  9265               	bcf	3941,1,c	;volatile
 45818                           
 45819                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 45820  01A1F4  010F               	movlb	15	; () banked
 45821  01A1F6  9536               	bcf	54,2,b	;volatile
 45822                           
 45823                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 45824  01A1F8  D001               	goto	i2l20020
 45825  01A1FA                     i2l20018:
 45826                           
 45827                           ;usb_device.c: 2345: {
 45828                           ;usb_device.c: 2346: (UIR &= 0xFB);
 45829  01A1FA  9462               	bcf	3938,2,c	;volatile
 45830  01A1FC                     i2l20020:
 45831  01A1FC  B462               	btfsc	3938,2,c	;volatile
 45832  01A1FE  D7FD               	goto	i2l20018
 45833                           
 45834                           ;usb_device.c: 2347: }
 45835                           ;usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 45836  01A200  0E00               	movlw	0
 45837  01A202  0101               	movlb	1	; () banked
 45838  01A204  6FFA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 45839                           
 45840                           ; BSR set to: 1
 45841  01A206  0012               	return		;funcret
 45842  01A208                     __end_of_USBWakeFromSuspend:
 45843                           	opt stack 0
 45844                           tosu	equ	0xFFF
 45845                           tosh	equ	0xFFE
 45846                           tosl	equ	0xFFD
 45847                           pclatu	equ	0xFFB
 45848                           pclath	equ	0xFFA
 45849                           tblptru	equ	0xFF8
 45850                           tblptrh	equ	0xFF7
 45851                           tblptrl	equ	0xFF6
 45852                           tablat	equ	0xFF5
 45853                           prodh	equ	0xFF4
 45854                           prodl	equ	0xFF3
 45855                           intcon	equ	0xFF2
 45856                           intcon2	equ	0xFF1
 45857                           intcon3	equ	0xFF0
 45858                           indf0	equ	0xFEF
 45859                           postinc0	equ	0xFEE
 45860                           fsr0h	equ	0xFEA
 45861                           fsr0l	equ	0xFE9
 45862                           wreg	equ	0xFE8
 45863                           indf1	equ	0xFE7
 45864                           postinc1	equ	0xFE6
 45865                           postdec1	equ	0xFE5
 45866                           plusw1	equ	0xFE3
 45867                           fsr1h	equ	0xFE2
 45868                           fsr1l	equ	0xFE1
 45869                           indf2	equ	0xFDF
 45870                           postinc2	equ	0xFDE
 45871                           postdec2	equ	0xFDD
 45872                           plusw2	equ	0xFDB
 45873                           fsr2h	equ	0xFDA
 45874                           fsr2l	equ	0xFD9
 45875                           status	equ	0xFD8
 45876                           
 45877 ;; *************** function _USBSuspend *****************
 45878 ;; Defined at:
 45879 ;;		line 2247 in file "usb_device.c"
 45880 ;; Parameters:    Size  Location     Type
 45881 ;;		None
 45882 ;; Auto vars:     Size  Location     Type
 45883 ;;		None
 45884 ;; Return value:  Size  Location     Type
 45885 ;;                  1    wreg      void 
 45886 ;; Registers used:
 45887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 45888 ;; Tracked objects:
 45889 ;;		On entry : 0/0
 45890 ;;		On exit  : 0/0
 45891 ;;		Unchanged: 0/0
 45892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45897 ;;Total ram usage:        0 bytes
 45898 ;; Hardware stack levels used:    1
 45899 ;; Hardware stack levels required when called:    4
 45900 ;; This function calls:
 45901 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 45902 ;; This function is called by:
 45903 ;;		_USBDeviceTasks
 45904 ;; This function uses a non-reentrant model
 45905 ;;
 45906                           
 45907                           	psect	text217
 45908  01A372                     __ptext217:
 45909                           	opt stack 0
 45910  01A372                     _USBSuspend:
 45911                           	opt stack 12
 45912                           
 45913                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 45914                           
 45915                           ; BSR set to: 1
 45916                           ;incstack = 0
 45917  01A372  010F               	movlb	15	; () banked
 45918  01A374  8536               	bsf	54,2,b	;volatile
 45919                           
 45920                           ; BSR set to: 15
 45921                           ;usb_device.c: 2273: (UIR &= 0xEF);
 45922  01A376  9862               	bcf	3938,4,c	;volatile
 45923                           
 45924                           ; BSR set to: 15
 45925                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 45926  01A378  8265               	bsf	3941,1,c	;volatile
 45927                           
 45928                           ; BSR set to: 15
 45929                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 45930  01A37A  0E01               	movlw	1
 45931  01A37C  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 45932                           
 45933                           ; BSR set to: 15
 45934                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 45935  01A37E  0E00               	movlw	0
 45936  01A380  0101               	movlb	1	; () banked
 45937  01A382  6FFA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 45938                           
 45939                           ; BSR set to: 1
 45940                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 45941  01A384  0E00               	movlw	0
 45942  01A386  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 45943  01A388  0E75               	movlw	117
 45944  01A38A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 45945  01A38C  0E00               	movlw	0
 45946  01A38E  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 45947  01A390  0E00               	movlw	0
 45948  01A392  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 45949  01A394  0E00               	movlw	0
 45950  01A396  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 45951  01A398  0E00               	movlw	0
 45952  01A39A  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 45953  01A39C  EC82  F0C4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 45954  01A3A0  0012               	return		;funcret
 45955  01A3A2                     __end_of_USBSuspend:
 45956                           	opt stack 0
 45957                           tosu	equ	0xFFF
 45958                           tosh	equ	0xFFE
 45959                           tosl	equ	0xFFD
 45960                           pclatu	equ	0xFFB
 45961                           pclath	equ	0xFFA
 45962                           tblptru	equ	0xFF8
 45963                           tblptrh	equ	0xFF7
 45964                           tblptrl	equ	0xFF6
 45965                           tablat	equ	0xFF5
 45966                           prodh	equ	0xFF4
 45967                           prodl	equ	0xFF3
 45968                           intcon	equ	0xFF2
 45969                           intcon2	equ	0xFF1
 45970                           intcon3	equ	0xFF0
 45971                           indf0	equ	0xFEF
 45972                           postinc0	equ	0xFEE
 45973                           fsr0h	equ	0xFEA
 45974                           fsr0l	equ	0xFE9
 45975                           wreg	equ	0xFE8
 45976                           indf1	equ	0xFE7
 45977                           postinc1	equ	0xFE6
 45978                           postdec1	equ	0xFE5
 45979                           plusw1	equ	0xFE3
 45980                           fsr1h	equ	0xFE2
 45981                           fsr1l	equ	0xFE1
 45982                           indf2	equ	0xFDF
 45983                           postinc2	equ	0xFDE
 45984                           postdec2	equ	0xFDD
 45985                           plusw2	equ	0xFDB
 45986                           fsr2h	equ	0xFDA
 45987                           fsr2l	equ	0xFD9
 45988                           status	equ	0xFD8
 45989                           
 45990 ;; *************** function _USBStallHandler *****************
 45991 ;; Defined at:
 45992 ;;		line 2204 in file "usb_device.c"
 45993 ;; Parameters:    Size  Location     Type
 45994 ;;		None
 45995 ;; Auto vars:     Size  Location     Type
 45996 ;;		None
 45997 ;; Return value:  Size  Location     Type
 45998 ;;                  1    wreg      void 
 45999 ;; Registers used:
 46000 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 46001 ;; Tracked objects:
 46002 ;;		On entry : 0/0
 46003 ;;		On exit  : 0/0
 46004 ;;		Unchanged: 0/0
 46005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46008 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46009 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46010 ;;Total ram usage:        1 bytes
 46011 ;; Hardware stack levels used:    1
 46012 ;; This function calls:
 46013 ;;		Nothing
 46014 ;; This function is called by:
 46015 ;;		_USBDeviceTasks
 46016 ;; This function uses a non-reentrant model
 46017 ;;
 46018                           
 46019                           	psect	text218
 46020  019EBE                     __ptext218:
 46021                           	opt stack 0
 46022  019EBE                     _USBStallHandler:
 46023                           	opt stack 16
 46024                           
 46025                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 46026                           
 46027                           ;incstack = 0
 46028  019EBE  010F               	movlb	15	; () banked
 46029  019EC0  A126               	btfss	38,0,b	;volatile
 46030  019EC2  D01E               	goto	i2l309
 46031                           
 46032                           ; BSR set to: 15
 46033                           ;usb_device.c: 2217: {
 46034                           ;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 46035  019EC4  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 46036  019EC8  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 46037  019ECC  0E80               	movlw	128
 46038  019ECE  18DE               	xorwf	postinc2,w,c
 46039  019ED0  A4D8               	btfss	status,2,c
 46040  019ED2  D014               	goto	i2l14178
 46041                           
 46042                           ; BSR set to: 15
 46043  019ED4  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 46044  019ED8  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 46045  019EDC  0E84               	movlw	132
 46046  019EDE  18DE               	xorwf	postinc2,w,c
 46047  019EE0  A4D8               	btfss	status,2,c
 46048  019EE2  D00C               	goto	i2l14178
 46049                           
 46050                           ; BSR set to: 15
 46051                           ;usb_device.c: 2220: {
 46052                           ;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 46053  019EE4  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 46054  019EE8  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 46055  019EEC  0E0C               	movlw	12
 46056  019EEE  6EDF               	movwf	indf2,c
 46057                           
 46058                           ; BSR set to: 15
 46059                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 46060  019EF0  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 46061  019EF4  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 46062  019EF8  0E00               	movlw	0
 46063  019EFA  8EDB               	bsf	plusw2,7,c
 46064  019EFC                     i2l14178:
 46065                           
 46066                           ; BSR set to: 15
 46067                           ;usb_device.c: 2224: }
 46068                           ;usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 46069  019EFC  010F               	movlb	15	; () banked
 46070  019EFE  9126               	bcf	38,0,b	;volatile
 46071  019F00                     i2l309:
 46072                           
 46073                           ; BSR set to: 15
 46074                           ;usb_device.c: 2226: }
 46075                           ;usb_device.c: 2228: (UIR &= 0xDF);
 46076  019F00  9A62               	bcf	3938,5,c	;volatile
 46077                           
 46078                           ; BSR set to: 15
 46079  019F02  0012               	return		;funcret
 46080  019F04                     __end_of_USBStallHandler:
 46081                           	opt stack 0
 46082                           tosu	equ	0xFFF
 46083                           tosh	equ	0xFFE
 46084                           tosl	equ	0xFFD
 46085                           pclatu	equ	0xFFB
 46086                           pclath	equ	0xFFA
 46087                           tblptru	equ	0xFF8
 46088                           tblptrh	equ	0xFF7
 46089                           tblptrl	equ	0xFF6
 46090                           tablat	equ	0xFF5
 46091                           prodh	equ	0xFF4
 46092                           prodl	equ	0xFF3
 46093                           intcon	equ	0xFF2
 46094                           intcon2	equ	0xFF1
 46095                           intcon3	equ	0xFF0
 46096                           indf0	equ	0xFEF
 46097                           postinc0	equ	0xFEE
 46098                           fsr0h	equ	0xFEA
 46099                           fsr0l	equ	0xFE9
 46100                           wreg	equ	0xFE8
 46101                           indf1	equ	0xFE7
 46102                           postinc1	equ	0xFE6
 46103                           postdec1	equ	0xFE5
 46104                           plusw1	equ	0xFE3
 46105                           fsr1h	equ	0xFE2
 46106                           fsr1l	equ	0xFE1
 46107                           indf2	equ	0xFDF
 46108                           postinc2	equ	0xFDE
 46109                           postdec2	equ	0xFDD
 46110                           plusw2	equ	0xFDB
 46111                           fsr2h	equ	0xFDA
 46112                           fsr2l	equ	0xFD9
 46113                           status	equ	0xFD8
 46114                           
 46115 ;; *************** function _USBIncrement1msInternalTimers *****************
 46116 ;; Defined at:
 46117 ;;		line 3027 in file "usb_device.c"
 46118 ;; Parameters:    Size  Location     Type
 46119 ;;		None
 46120 ;; Auto vars:     Size  Location     Type
 46121 ;;		None
 46122 ;; Return value:  Size  Location     Type
 46123 ;;                  1    wreg      void 
 46124 ;; Registers used:
 46125 ;;		wreg, status,2, status,0
 46126 ;; Tracked objects:
 46127 ;;		On entry : 0/0
 46128 ;;		On exit  : 0/0
 46129 ;;		Unchanged: 0/0
 46130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46135 ;;Total ram usage:        0 bytes
 46136 ;; Hardware stack levels used:    1
 46137 ;; This function calls:
 46138 ;;		Nothing
 46139 ;; This function is called by:
 46140 ;;		_USBDeviceTasks
 46141 ;; This function uses a non-reentrant model
 46142 ;;
 46143                           
 46144                           	psect	text219
 46145  01A7C8                     __ptext219:
 46146                           	opt stack 0
 46147  01A7C8                     _USBIncrement1msInternalTimers:
 46148                           	opt stack 16
 46149                           
 46150                           ;usb_device.c: 3035: USB1msTickCount++;
 46151                           
 46152                           ; BSR set to: 15
 46153                           ;incstack = 0
 46154  01A7C8  0E01               	movlw	1
 46155  01A7CA  0101               	movlb	1	; () banked
 46156  01A7CC  27DD               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 46157  01A7CE  0E00               	movlw	0
 46158  01A7D0  23DE               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 46159  01A7D2  23DF               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 46160  01A7D4  23E0               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 46161                           
 46162                           ; BSR set to: 1
 46163                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 46164  01A7D6  5027               	movf	_USBBusIsSuspended,w,c	;volatile
 46165  01A7D8  A4D8               	btfss	status,2,c
 46166  01A7DA  0012               	return	
 46167                           
 46168                           ; BSR set to: 1
 46169                           ;usb_device.c: 3037: {
 46170                           ;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 46171  01A7DC  0101               	movlb	1	; () banked
 46172  01A7DE  2BFA               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 46173                           
 46174                           ; BSR set to: 1
 46175                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 46176  01A7E0  0101               	movlb	1	; () banked
 46177  01A7E2  51FA               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 46178  01A7E4  A4D8               	btfss	status,2,c
 46179  01A7E6  0012               	return	
 46180                           
 46181                           ; BSR set to: 1
 46182                           ;usb_device.c: 3041: {
 46183                           ;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 46184  01A7E8  0101               	movlb	1	; () banked
 46185  01A7EA  69FA               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 46186                           
 46187                           ; BSR set to: 1
 46188  01A7EC  0012               	return	
 46189  01A7EE                     __end_of_USBIncrement1msInternalTimers:
 46190                           	opt stack 0
 46191                           tosu	equ	0xFFF
 46192                           tosh	equ	0xFFE
 46193                           tosl	equ	0xFFD
 46194                           pclatu	equ	0xFFB
 46195                           pclath	equ	0xFFA
 46196                           tblptru	equ	0xFF8
 46197                           tblptrh	equ	0xFF7
 46198                           tblptrl	equ	0xFF6
 46199                           tablat	equ	0xFF5
 46200                           prodh	equ	0xFF4
 46201                           prodl	equ	0xFF3
 46202                           intcon	equ	0xFF2
 46203                           intcon2	equ	0xFF1
 46204                           intcon3	equ	0xFF0
 46205                           indf0	equ	0xFEF
 46206                           postinc0	equ	0xFEE
 46207                           fsr0h	equ	0xFEA
 46208                           fsr0l	equ	0xFE9
 46209                           wreg	equ	0xFE8
 46210                           indf1	equ	0xFE7
 46211                           postinc1	equ	0xFE6
 46212                           postdec1	equ	0xFE5
 46213                           plusw1	equ	0xFE3
 46214                           fsr1h	equ	0xFE2
 46215                           fsr1l	equ	0xFE1
 46216                           indf2	equ	0xFDF
 46217                           postinc2	equ	0xFDE
 46218                           postdec2	equ	0xFDD
 46219                           plusw2	equ	0xFDB
 46220                           fsr2h	equ	0xFDA
 46221                           fsr2l	equ	0xFD9
 46222                           status	equ	0xFD8
 46223                           
 46224 ;; *************** function _USBCtrlEPService *****************
 46225 ;; Defined at:
 46226 ;;		line 2374 in file "usb_device.c"
 46227 ;; Parameters:    Size  Location     Type
 46228 ;;		None
 46229 ;; Auto vars:     Size  Location     Type
 46230 ;;		None
 46231 ;; Return value:  Size  Location     Type
 46232 ;;                  1    wreg      void 
 46233 ;; Registers used:
 46234 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 46235 ;; Tracked objects:
 46236 ;;		On entry : 0/0
 46237 ;;		On exit  : 0/0
 46238 ;;		Unchanged: 0/0
 46239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46242 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46244 ;;Total ram usage:        1 bytes
 46245 ;; Hardware stack levels used:    1
 46246 ;; Hardware stack levels required when called:    7
 46247 ;; This function calls:
 46248 ;;		_USBCtrlTrfInHandler
 46249 ;;		_USBCtrlTrfOutHandler
 46250 ;;		_USBCtrlTrfSetupHandler
 46251 ;;		i2_memcpy
 46252 ;; This function is called by:
 46253 ;;		_USBDeviceTasks
 46254 ;; This function uses a non-reentrant model
 46255 ;;
 46256                           
 46257                           	psect	text220
 46258  0182FA                     __ptext220:
 46259                           	opt stack 0
 46260  0182FA                     _USBCtrlEPService:
 46261                           	opt stack 9
 46262                           
 46263                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 46264                           
 46265                           ; BSR set to: 1
 46266                           ;incstack = 0
 46267  0182FA  0E2D               	movlw	45
 46268  0182FC  6E24               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 46269                           
 46270                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 46271  0182FE  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 46272  018302  0EFD               	movlw	253
 46273  018304  164B               	andwf	??_USBCtrlEPService,f,c
 46274  018306  A4D8               	btfss	status,2,c
 46275  018308  D03B               	goto	i2l20054
 46276                           
 46277                           ;usb_device.c: 2385: {
 46278                           ;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 46279  01830A  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 46280  01830E  90D8               	bcf	status,0,c
 46281  018310  324B               	rrcf	??_USBCtrlEPService,f,c
 46282  018312  0E3F               	movlw	63
 46283  018314  164B               	andwf	??_USBCtrlEPService,f,c
 46284  018316  504B               	movf	??_USBCtrlEPService,w,c
 46285  018318  0D04               	mullw	4
 46286  01831A  0E00               	movlw	0
 46287  01831C  24F3               	addwf	prodl,w,c
 46288  01831E  6E1A               	movwf	_pBDTEntryEP0OutCurrent,c
 46289  018320  0E0D               	movlw	13
 46290  018322  20F4               	addwfc	prodh,w,c
 46291  018324  6E1B               	movwf	_pBDTEntryEP0OutCurrent+1,c
 46292                           
 46293                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 46294  018326  C01A  F018         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 46295  01832A  C01B  F019         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 46296                           
 46297                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 46298  01832E  0E04               	movlw	4
 46299  018330  1818               	xorwf	_pBDTEntryEP0OutNext,w,c
 46300  018332  6E18               	movwf	_pBDTEntryEP0OutNext,c
 46301  018334  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 46302  018336  6E19               	movwf	_pBDTEntryEP0OutNext+1,c
 46303                           
 46304                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 46305  018338  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 46306  01833C  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 46307  018340  30DF               	rrcf	indf2,w,c
 46308  018342  32E8               	rrcf	wreg,f,c
 46309  018344  0B0F               	andlw	15
 46310  018346  0A0D               	xorlw	13
 46311  018348  A4D8               	btfss	status,2,c
 46312  01834A  D017               	goto	i2l20052
 46313                           
 46314                           ;usb_device.c: 2402: {
 46315                           ;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
 46316  01834C  0E30               	movlw	48
 46317  01834E  6E2E               	movwf	i2memcpy@d1,c
 46318  018350  0E0D               	movlw	13
 46319  018352  6E2F               	movwf	i2memcpy@d1+1,c
 46320  018354  EE20 F002          	lfsr	2,2
 46321  018358  501A               	movf	_pBDTEntryEP0OutCurrent,w,c
 46322  01835A  26D9               	addwf	fsr2l,f,c
 46323  01835C  501B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 46324  01835E  22DA               	addwfc	fsr2h,f,c
 46325  018360  CFDE F030          	movff	postinc2,i2memcpy@s1
 46326  018364  CFDD F031          	movff	postdec2,i2memcpy@s1+1
 46327  018368  0E00               	movlw	0
 46328  01836A  6E33               	movwf	i2memcpy@n+1,c
 46329  01836C  0E08               	movlw	8
 46330  01836E  6E32               	movwf	i2memcpy@n,c
 46331  018370  EC53  F0CC         	call	i2_memcpy	;wreg free
 46332                           
 46333                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 46334  018374  EC5B  F0C2         	call	_USBCtrlTrfSetupHandler	;wreg free
 46335                           
 46336                           ;usb_device.c: 2411: }
 46337  018378  0012               	return	
 46338  01837A                     i2l20052:
 46339                           
 46340                           ;usb_device.c: 2412: else
 46341                           ;usb_device.c: 2413: {
 46342                           ;usb_device.c: 2415: USBCtrlTrfOutHandler();
 46343  01837A  EC81  F0CC         	call	_USBCtrlTrfOutHandler	;wreg free
 46344                           
 46345                           ;usb_device.c: 2416: }
 46346                           ;usb_device.c: 2417: }
 46347  01837E  0012               	return	
 46348  018380                     i2l20054:
 46349                           
 46350                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 46351  018380  502C               	movf	_USTATcopy,w,c	;volatile
 46352  018382  0BFD               	andlw	253
 46353  018384  0A04               	xorlw	4
 46354  018386  A4D8               	btfss	status,2,c
 46355  018388  0012               	return	
 46356                           
 46357                           ;usb_device.c: 2419: {
 46358                           ;usb_device.c: 2422: USBCtrlTrfInHandler();
 46359  01838A  EC74  F0BB         	call	_USBCtrlTrfInHandler	;wreg free
 46360  01838E  0012               	return	
 46361  018390                     __end_of_USBCtrlEPService:
 46362                           	opt stack 0
 46363                           tosu	equ	0xFFF
 46364                           tosh	equ	0xFFE
 46365                           tosl	equ	0xFFD
 46366                           pclatu	equ	0xFFB
 46367                           pclath	equ	0xFFA
 46368                           tblptru	equ	0xFF8
 46369                           tblptrh	equ	0xFF7
 46370                           tblptrl	equ	0xFF6
 46371                           tablat	equ	0xFF5
 46372                           prodh	equ	0xFF4
 46373                           prodl	equ	0xFF3
 46374                           intcon	equ	0xFF2
 46375                           intcon2	equ	0xFF1
 46376                           intcon3	equ	0xFF0
 46377                           indf0	equ	0xFEF
 46378                           postinc0	equ	0xFEE
 46379                           fsr0h	equ	0xFEA
 46380                           fsr0l	equ	0xFE9
 46381                           wreg	equ	0xFE8
 46382                           indf1	equ	0xFE7
 46383                           postinc1	equ	0xFE6
 46384                           postdec1	equ	0xFE5
 46385                           plusw1	equ	0xFE3
 46386                           fsr1h	equ	0xFE2
 46387                           fsr1l	equ	0xFE1
 46388                           indf2	equ	0xFDF
 46389                           postinc2	equ	0xFDE
 46390                           postdec2	equ	0xFDD
 46391                           plusw2	equ	0xFDB
 46392                           fsr2h	equ	0xFDA
 46393                           fsr2l	equ	0xFD9
 46394                           status	equ	0xFD8
 46395                           
 46396 ;; *************** function i2_memcpy *****************
 46397 ;; Defined at:
 46398 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memcpy.c"
 46399 ;; Parameters:    Size  Location     Type
 46400 ;;  d1              2    0[COMRAM] PTR void 
 46401 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 46402 ;;		 -> SetupPkt(8), 
 46403 ;;  s1              2    2[COMRAM] PTR const void 
 46404 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 46405 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 46406 ;;		 -> SetupPkt(8), 
 46407 ;;  n               2    4[COMRAM] unsigned int 
 46408 ;; Auto vars:     Size  Location     Type
 46409 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 46410 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 46411 ;;		 -> calibrationParameters(84), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 46412 ;;		 -> SetupPkt(8), 
 46413 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 46414 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 46415 ;;		 -> SetupPkt(8), 
 46416 ;;  memcpy          1   10[COMRAM] unsigned char 
 46417 ;; Return value:  Size  Location     Type
 46418 ;;                  2    0[COMRAM] PTR void 
 46419 ;; Registers used:
 46420 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 46421 ;; Tracked objects:
 46422 ;;		On entry : 0/0
 46423 ;;		On exit  : 0/0
 46424 ;;		Unchanged: 0/0
 46425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46426 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46427 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46429 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46430 ;;Total ram usage:       11 bytes
 46431 ;; Hardware stack levels used:    1
 46432 ;; This function calls:
 46433 ;;		Nothing
 46434 ;; This function is called by:
 46435 ;;		_USBCtrlEPService
 46436 ;; This function uses a non-reentrant model
 46437 ;;
 46438                           
 46439                           	psect	text221
 46440  0198A6                     __ptext221:
 46441                           	opt stack 0
 46442  0198A6                     i2_memcpy:
 46443                           	opt stack 15
 46444                           
 46445                           ;incstack = 0
 46446  0198A6  C030  F036         	movff	i2memcpy@s1,i2memcpy@s
 46447  0198AA  C031  F037         	movff	i2memcpy@s1+1,i2memcpy@s+1
 46448  0198AE  C02E  F034         	movff	i2memcpy@d1,i2memcpy@d
 46449  0198B2  C02F  F035         	movff	i2memcpy@d1+1,i2memcpy@d+1
 46450  0198B6  D01C               	goto	i2l14122
 46451  0198B8                     i2l14114:
 46452  0198B8  C036  FFF6         	movff	i2memcpy@s,tblptrl
 46453  0198BC  C037  FFF7         	movff	i2memcpy@s+1,tblptrh
 46454  0198C0  0E00               	movlw	low (__mediumconst shr (0+16))
 46455  0198C2  6EF8               	movwf	tblptru,c
 46456  0198C4  0E0E               	movlw	(high __ramtop+-1)
 46457  0198C6  64F7               	cpfsgt	tblptrh,c
 46458  0198C8  D003               	bra	i2u1199_47
 46459  0198CA  0008               	tblrd		*
 46460  0198CC  50F5               	movf	tablat,w,c
 46461  0198CE  D005               	bra	i2u1199_40
 46462  0198D0                     i2u1199_47:
 46463  0198D0  CFF6 FFE9          	movff	tblptrl,fsr0l
 46464  0198D4  CFF7 FFEA          	movff	tblptrh,fsr0h
 46465  0198D8  50EF               	movf	indf0,w,c
 46466  0198DA                     i2u1199_40:
 46467  0198DA  6E38               	movwf	i2memcpy@tmp,c
 46468  0198DC  4A36               	infsnz	i2memcpy@s,f,c
 46469  0198DE  2A37               	incf	i2memcpy@s+1,f,c
 46470  0198E0  C034  FFD9         	movff	i2memcpy@d,fsr2l
 46471  0198E4  C035  FFDA         	movff	i2memcpy@d+1,fsr2h
 46472  0198E8  C038  FFDF         	movff	i2memcpy@tmp,indf2
 46473  0198EC  4A34               	infsnz	i2memcpy@d,f,c
 46474  0198EE  2A35               	incf	i2memcpy@d+1,f,c
 46475  0198F0                     i2l14122:
 46476  0198F0  0632               	decf	i2memcpy@n,f,c
 46477  0198F2  A0D8               	btfss	status,0,c
 46478  0198F4  0633               	decf	i2memcpy@n+1,f,c
 46479  0198F6  2832               	incf	i2memcpy@n,w,c
 46480  0198F8  E1DF               	bnz	i2l14114
 46481  0198FA  2833               	incf	i2memcpy@n+1,w,c
 46482  0198FC  B4D8               	btfsc	status,2,c
 46483  0198FE  0012               	return	
 46484  019900  D7DB               	goto	i2l14114
 46485  019902                     __end_ofi2_memcpy:
 46486                           	opt stack 0
 46487                           tosu	equ	0xFFF
 46488                           tosh	equ	0xFFE
 46489                           tosl	equ	0xFFD
 46490                           pclatu	equ	0xFFB
 46491                           pclath	equ	0xFFA
 46492                           tblptru	equ	0xFF8
 46493                           tblptrh	equ	0xFF7
 46494                           tblptrl	equ	0xFF6
 46495                           tablat	equ	0xFF5
 46496                           prodh	equ	0xFF4
 46497                           prodl	equ	0xFF3
 46498                           intcon	equ	0xFF2
 46499                           intcon2	equ	0xFF1
 46500                           intcon3	equ	0xFF0
 46501                           indf0	equ	0xFEF
 46502                           postinc0	equ	0xFEE
 46503                           fsr0h	equ	0xFEA
 46504                           fsr0l	equ	0xFE9
 46505                           wreg	equ	0xFE8
 46506                           indf1	equ	0xFE7
 46507                           postinc1	equ	0xFE6
 46508                           postdec1	equ	0xFE5
 46509                           plusw1	equ	0xFE3
 46510                           fsr1h	equ	0xFE2
 46511                           fsr1l	equ	0xFE1
 46512                           indf2	equ	0xFDF
 46513                           postinc2	equ	0xFDE
 46514                           postdec2	equ	0xFDD
 46515                           plusw2	equ	0xFDB
 46516                           fsr2h	equ	0xFDA
 46517                           fsr2l	equ	0xFD9
 46518                           status	equ	0xFD8
 46519                           
 46520 ;; *************** function _USBCtrlTrfSetupHandler *****************
 46521 ;; Defined at:
 46522 ;;		line 2467 in file "usb_device.c"
 46523 ;; Parameters:    Size  Location     Type
 46524 ;;		None
 46525 ;; Auto vars:     Size  Location     Type
 46526 ;;		None
 46527 ;; Return value:  Size  Location     Type
 46528 ;;                  1    wreg      void 
 46529 ;; Registers used:
 46530 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46531 ;; Tracked objects:
 46532 ;;		On entry : 0/0
 46533 ;;		On exit  : 0/0
 46534 ;;		Unchanged: 0/0
 46535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46540 ;;Total ram usage:        0 bytes
 46541 ;; Hardware stack levels used:    1
 46542 ;; Hardware stack levels required when called:    6
 46543 ;; This function calls:
 46544 ;;		_USBCheckStdRequest
 46545 ;;		_USBCtrlEPServiceComplete
 46546 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 46547 ;; This function is called by:
 46548 ;;		_USBCtrlEPService
 46549 ;; This function uses a non-reentrant model
 46550 ;;
 46551                           
 46552                           	psect	text222
 46553  0184B6                     __ptext222:
 46554                           	opt stack 0
 46555  0184B6                     _USBCtrlTrfSetupHandler:
 46556                           	opt stack 9
 46557                           
 46558                           ;usb_device.c: 2472: shortPacketStatus = 0;
 46559                           
 46560                           ;incstack = 0
 46561  0184B6  0E00               	movlw	0
 46562  0184B8  6E2A               	movwf	_shortPacketStatus,c	;volatile
 46563                           
 46564                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 46565  0184BA  0E00               	movlw	0
 46566  0184BC  6E23               	movwf	_USBDeferStatusStagePacket,c	;volatile
 46567                           
 46568                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 46569  0184BE  0E00               	movlw	0
 46570  0184C0  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 46571                           
 46572                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 46573  0184C2  0E00               	movlw	0
 46574  0184C4  0101               	movlb	1	; () banked
 46575  0184C6  6FFB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 46576                           
 46577                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 46578  0184C8  0E00               	movlw	0
 46579  0184CA  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 46580                           
 46581                           ;usb_device.c: 2477: controlTransferState = 0;
 46582  0184CC  0E00               	movlw	0
 46583  0184CE  6E29               	movwf	_controlTransferState,c	;volatile
 46584                           
 46585                           ; BSR set to: 1
 46586                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 46587  0184D0  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 46588  0184D4  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 46589  0184D8  0E7F               	movlw	127
 46590  0184DA  16DF               	andwf	indf2,f,c
 46591                           
 46592                           ; BSR set to: 1
 46593                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 46594  0184DC  0E04               	movlw	4
 46595  0184DE  1810               	xorwf	_pBDTEntryIn,w,c
 46596  0184E0  6E10               	movwf	_pBDTEntryIn,c
 46597  0184E2  5011               	movf	_pBDTEntryIn+1,w,c
 46598  0184E4  6E11               	movwf	_pBDTEntryIn+1,c
 46599                           
 46600                           ; BSR set to: 1
 46601                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 46602  0184E6  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 46603  0184EA  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 46604  0184EE  0E7F               	movlw	127
 46605  0184F0  16DF               	andwf	indf2,f,c
 46606                           
 46607                           ; BSR set to: 1
 46608                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 46609  0184F2  0E04               	movlw	4
 46610  0184F4  1810               	xorwf	_pBDTEntryIn,w,c
 46611  0184F6  6E10               	movwf	_pBDTEntryIn,c
 46612  0184F8  5011               	movf	_pBDTEntryIn+1,w,c
 46613  0184FA  6E11               	movwf	_pBDTEntryIn+1,c
 46614                           
 46615                           ; BSR set to: 1
 46616                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 46617  0184FC  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 46618  018500  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 46619  018504  0E7F               	movlw	127
 46620  018506  16DF               	andwf	indf2,f,c
 46621                           
 46622                           ; BSR set to: 1
 46623                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 46624  018508  0E00               	movlw	0
 46625  01850A  6E0D               	movwf	_inPipes+3,c	;volatile
 46626                           
 46627                           ; BSR set to: 1
 46628                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 46629  01850C  0E00               	movlw	0
 46630  01850E  6E0F               	movwf	_inPipes+5,c	;volatile
 46631  018510  0E00               	movlw	0
 46632  018512  6E0E               	movwf	_inPipes+4,c	;volatile
 46633                           
 46634                           ; BSR set to: 1
 46635                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 46636  018514  0E00               	movlw	0
 46637  018516  6E04               	movwf	_outPipes+3,c	;volatile
 46638                           
 46639                           ; BSR set to: 1
 46640                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 46641  018518  0E00               	movlw	0
 46642  01851A  6E06               	movwf	_outPipes+5,c	;volatile
 46643  01851C  0E00               	movlw	0
 46644  01851E  6E05               	movwf	_outPipes+4,c	;volatile
 46645                           
 46646                           ; BSR set to: 1
 46647                           ;usb_device.c: 2502: USBCheckStdRequest();
 46648  018520  EC61  F0B7         	call	_USBCheckStdRequest	;wreg free
 46649                           
 46650                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 46651  018524  0E00               	movlw	0
 46652  018526  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 46653  018528  0E03               	movlw	3
 46654  01852A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 46655  01852C  0E00               	movlw	0
 46656  01852E  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 46657  018530  0E00               	movlw	0
 46658  018532  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 46659  018534  0E00               	movlw	0
 46660  018536  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 46661  018538  0E00               	movlw	0
 46662  01853A  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 46663  01853C  EC82  F0C4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 46664                           
 46665                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 46666  018540  EC92  F0B5         	call	_USBCtrlEPServiceComplete	;wreg free
 46667  018544  0012               	return		;funcret
 46668  018546                     __end_of_USBCtrlTrfSetupHandler:
 46669                           	opt stack 0
 46670                           tosu	equ	0xFFF
 46671                           tosh	equ	0xFFE
 46672                           tosl	equ	0xFFD
 46673                           pclatu	equ	0xFFB
 46674                           pclath	equ	0xFFA
 46675                           tblptru	equ	0xFF8
 46676                           tblptrh	equ	0xFF7
 46677                           tblptrl	equ	0xFF6
 46678                           tablat	equ	0xFF5
 46679                           prodh	equ	0xFF4
 46680                           prodl	equ	0xFF3
 46681                           intcon	equ	0xFF2
 46682                           intcon2	equ	0xFF1
 46683                           intcon3	equ	0xFF0
 46684                           indf0	equ	0xFEF
 46685                           postinc0	equ	0xFEE
 46686                           fsr0h	equ	0xFEA
 46687                           fsr0l	equ	0xFE9
 46688                           wreg	equ	0xFE8
 46689                           indf1	equ	0xFE7
 46690                           postinc1	equ	0xFE6
 46691                           postdec1	equ	0xFE5
 46692                           plusw1	equ	0xFE3
 46693                           fsr1h	equ	0xFE2
 46694                           fsr1l	equ	0xFE1
 46695                           indf2	equ	0xFDF
 46696                           postinc2	equ	0xFDE
 46697                           postdec2	equ	0xFDD
 46698                           plusw2	equ	0xFDB
 46699                           fsr2h	equ	0xFDA
 46700                           fsr2l	equ	0xFD9
 46701                           status	equ	0xFD8
 46702                           
 46703 ;; *************** function _USBCtrlEPServiceComplete *****************
 46704 ;; Defined at:
 46705 ;;		line 1618 in file "usb_device.c"
 46706 ;; Parameters:    Size  Location     Type
 46707 ;;		None
 46708 ;; Auto vars:     Size  Location     Type
 46709 ;;		None
 46710 ;; Return value:  Size  Location     Type
 46711 ;;                  1    wreg      void 
 46712 ;; Registers used:
 46713 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 46714 ;; Tracked objects:
 46715 ;;		On entry : 0/0
 46716 ;;		On exit  : 0/0
 46717 ;;		Unchanged: 0/0
 46718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46723 ;;Total ram usage:        0 bytes
 46724 ;; Hardware stack levels used:    1
 46725 ;; Hardware stack levels required when called:    2
 46726 ;; This function calls:
 46727 ;;		_USBCtrlEPAllowDataStage
 46728 ;;		_USBCtrlEPAllowStatusStage
 46729 ;; This function is called by:
 46730 ;;		_USBCtrlTrfSetupHandler
 46731 ;; This function uses a non-reentrant model
 46732 ;;
 46733                           
 46734                           	psect	text223
 46735  016B24                     __ptext223:
 46736                           	opt stack 0
 46737  016B24                     _USBCtrlEPServiceComplete:
 46738                           	opt stack 12
 46739                           
 46740                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 46741                           
 46742                           ;incstack = 0
 46743  016B24  9865               	bcf	3941,4,c	;volatile
 46744                           
 46745                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 46746  016B26  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 46747  016B28  D039               	goto	i2l233
 46748                           
 46749                           ;usb_device.c: 1631: {
 46750                           ;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 46751  016B2A  AE04               	btfss	_outPipes+3,7,c	;volatile
 46752  016B2C  D00C               	goto	i2l12650
 46753                           
 46754                           ;usb_device.c: 1633: {
 46755                           ;usb_device.c: 1634: controlTransferState = 2;
 46756  016B2E  0E02               	movlw	2
 46757  016B30  6E29               	movwf	_controlTransferState,c	;volatile
 46758                           
 46759                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 46760  016B32  0101               	movlb	1	; () banked
 46761  016B34  51FB               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 46762  016B36  B4D8               	btfsc	status,2,c
 46763                           
 46764                           ; BSR set to: 1
 46765                           ;usb_device.c: 1646: {
 46766                           ;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 46767  016B38  EC9A  F0C0         	call	_USBCtrlEPAllowDataStage	;wreg free
 46768                           
 46769                           ;usb_device.c: 1648: }
 46770                           ;usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 46771  016B3C  0E00               	movlw	0
 46772  016B3E  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 46773                           
 46774                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 46775  016B40  0E00               	movlw	0
 46776  016B42  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 46777                           
 46778                           ;usb_device.c: 1654: }
 46779  016B44  0012               	return	
 46780  016B46                     i2l12650:
 46781                           
 46782                           ;usb_device.c: 1655: else
 46783                           ;usb_device.c: 1656: {
 46784                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->CNT = 8;
 46785  016B46  EE20 F001          	lfsr	2,1
 46786  016B4A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 46787  016B4C  26D9               	addwf	fsr2l,f,c
 46788  016B4E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 46789  016B50  22DA               	addwfc	fsr2h,f,c
 46790  016B52  0E08               	movlw	8
 46791  016B54  6EDF               	movwf	indf2,c
 46792                           
 46793                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 46794  016B56  EE20 F002          	lfsr	2,2
 46795  016B5A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 46796  016B5C  26D9               	addwf	fsr2l,f,c
 46797  016B5E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 46798  016B60  22DA               	addwfc	fsr2h,f,c
 46799  016B62  0E30               	movlw	48
 46800  016B64  6EDE               	movwf	postinc2,c
 46801  016B66  0E0D               	movlw	13
 46802  016B68  6EDD               	movwf	postdec2,c
 46803                           
 46804                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 46805  016B6A  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 46806  016B6E  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 46807  016B72  0E0C               	movlw	12
 46808  016B74  6EDF               	movwf	indf2,c
 46809                           
 46810                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 46811  016B76  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 46812  016B7A  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 46813  016B7E  0E00               	movlw	0
 46814  016B80  8EDB               	bsf	plusw2,7,c
 46815                           
 46816                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 46817  016B82  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 46818  016B86  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 46819  016B8A  0E04               	movlw	4
 46820  016B8C  6EDF               	movwf	indf2,c
 46821                           
 46822                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 46823  016B8E  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 46824  016B92  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 46825  016B96  0E00               	movlw	0
 46826  016B98  8EDB               	bsf	plusw2,7,c
 46827                           
 46828                           ;usb_device.c: 1667: }
 46829                           ;usb_device.c: 1668: }
 46830  016B9A  0012               	return	
 46831  016B9C                     i2l233:
 46832                           
 46833                           ;usb_device.c: 1669: else
 46834                           ;usb_device.c: 1670: {
 46835                           ;usb_device.c: 1671: if(SetupPkt.DataDir == (0x80>>7))
 46836  016B9C  010D               	movlb	13	; () banked
 46837  016B9E  AF30               	btfss	48,7,b	;volatile
 46838  016BA0  D010               	goto	i2l12670
 46839                           
 46840                           ; BSR set to: 13
 46841                           ;usb_device.c: 1672: {
 46842                           ;usb_device.c: 1673: controlTransferState = 1;
 46843  016BA2  0E01               	movlw	1
 46844  016BA4  6E29               	movwf	_controlTransferState,c	;volatile
 46845                           
 46846                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 46847  016BA6  5020               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 46848  016BA8  B4D8               	btfsc	status,2,c
 46849                           
 46850                           ; BSR set to: 13
 46851                           ;usb_device.c: 1688: {
 46852                           ;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 46853  016BAA  EC9A  F0C0         	call	_USBCtrlEPAllowDataStage	;wreg free
 46854                           
 46855                           ;usb_device.c: 1690: }
 46856                           ;usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 46857  016BAE  0E00               	movlw	0
 46858  016BB0  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 46859                           
 46860                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 46861  016BB2  0E00               	movlw	0
 46862  016BB4  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 46863                           
 46864                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 46865  016BB6  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 46866  016BB8  A4D8               	btfss	status,2,c
 46867  016BBA  0012               	return	
 46868                           
 46869                           ;usb_device.c: 1715: {
 46870                           ;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 46871  016BBC  ECB3  F0BA         	call	_USBCtrlEPAllowStatusStage	;wreg free
 46872                           
 46873                           ;usb_device.c: 1717: }
 46874                           ;usb_device.c: 1718: }
 46875  016BC0  0012               	return	
 46876  016BC2                     i2l12670:
 46877                           
 46878                           ;usb_device.c: 1719: else
 46879                           ;usb_device.c: 1720: {
 46880                           ;usb_device.c: 1731: controlTransferState = 2;
 46881  016BC2  0E02               	movlw	2
 46882  016BC4  6E29               	movwf	_controlTransferState,c	;volatile
 46883                           
 46884                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 46885  016BC6  EE20 F001          	lfsr	2,1
 46886  016BCA  5018               	movf	_pBDTEntryEP0OutNext,w,c
 46887  016BCC  26D9               	addwf	fsr2l,f,c
 46888  016BCE  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 46889  016BD0  22DA               	addwfc	fsr2h,f,c
 46890  016BD2  0E08               	movlw	8
 46891  016BD4  6EDF               	movwf	indf2,c
 46892                           
 46893                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 46894  016BD6  EE20 F002          	lfsr	2,2
 46895  016BDA  5018               	movf	_pBDTEntryEP0OutNext,w,c
 46896  016BDC  26D9               	addwf	fsr2l,f,c
 46897  016BDE  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 46898  016BE0  22DA               	addwfc	fsr2h,f,c
 46899  016BE2  0E30               	movlw	48
 46900  016BE4  6EDE               	movwf	postinc2,c
 46901  016BE6  0E0D               	movlw	13
 46902  016BE8  6EDD               	movwf	postdec2,c
 46903                           
 46904                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 46905  016BEA  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 46906  016BEE  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 46907  016BF2  0E04               	movlw	4
 46908  016BF4  6EDF               	movwf	indf2,c
 46909                           
 46910                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 46911  016BF6  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 46912  016BFA  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 46913  016BFE  0E00               	movlw	0
 46914  016C00  8EDB               	bsf	plusw2,7,c
 46915                           
 46916                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 46917  016C02  0E00               	movlw	0
 46918  016C04  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 46919                           
 46920                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 46921  016C06  0E00               	movlw	0
 46922  016C08  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 46923                           
 46924                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 46925  016C0A  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 46926  016C0C  A4D8               	btfss	status,2,c
 46927  016C0E  0012               	return	
 46928                           
 46929                           ;usb_device.c: 1743: {
 46930                           ;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 46931  016C10  ECB3  F0BA         	call	_USBCtrlEPAllowStatusStage	;wreg free
 46932  016C14  0012               	return	
 46933  016C16                     __end_of_USBCtrlEPServiceComplete:
 46934                           	opt stack 0
 46935                           tosu	equ	0xFFF
 46936                           tosh	equ	0xFFE
 46937                           tosl	equ	0xFFD
 46938                           pclatu	equ	0xFFB
 46939                           pclath	equ	0xFFA
 46940                           tblptru	equ	0xFF8
 46941                           tblptrh	equ	0xFF7
 46942                           tblptrl	equ	0xFF6
 46943                           tablat	equ	0xFF5
 46944                           prodh	equ	0xFF4
 46945                           prodl	equ	0xFF3
 46946                           intcon	equ	0xFF2
 46947                           intcon2	equ	0xFF1
 46948                           intcon3	equ	0xFF0
 46949                           indf0	equ	0xFEF
 46950                           postinc0	equ	0xFEE
 46951                           fsr0h	equ	0xFEA
 46952                           fsr0l	equ	0xFE9
 46953                           wreg	equ	0xFE8
 46954                           indf1	equ	0xFE7
 46955                           postinc1	equ	0xFE6
 46956                           postdec1	equ	0xFE5
 46957                           plusw1	equ	0xFE3
 46958                           fsr1h	equ	0xFE2
 46959                           fsr1l	equ	0xFE1
 46960                           indf2	equ	0xFDF
 46961                           postinc2	equ	0xFDE
 46962                           postdec2	equ	0xFDD
 46963                           plusw2	equ	0xFDB
 46964                           fsr2h	equ	0xFDA
 46965                           fsr2l	equ	0xFD9
 46966                           status	equ	0xFD8
 46967                           
 46968 ;; *************** function _USBCtrlEPAllowDataStage *****************
 46969 ;; Defined at:
 46970 ;;		line 1490 in file "usb_device.c"
 46971 ;; Parameters:    Size  Location     Type
 46972 ;;		None
 46973 ;; Auto vars:     Size  Location     Type
 46974 ;;		None
 46975 ;; Return value:  Size  Location     Type
 46976 ;;                  1    wreg      void 
 46977 ;; Registers used:
 46978 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 46979 ;; Tracked objects:
 46980 ;;		On entry : 0/0
 46981 ;;		On exit  : 0/0
 46982 ;;		Unchanged: 0/0
 46983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46988 ;;Total ram usage:        0 bytes
 46989 ;; Hardware stack levels used:    1
 46990 ;; Hardware stack levels required when called:    1
 46991 ;; This function calls:
 46992 ;;		_USBCtrlTrfTxService
 46993 ;; This function is called by:
 46994 ;;		_USBCtrlEPServiceComplete
 46995 ;; This function uses a non-reentrant model
 46996 ;;
 46997                           
 46998                           	psect	text224
 46999  018134                     __ptext224:
 47000                           	opt stack 0
 47001  018134                     _USBCtrlEPAllowDataStage:
 47002                           	opt stack 12
 47003                           
 47004                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 47005                           
 47006                           ;incstack = 0
 47007  018134  0E00               	movlw	0
 47008  018136  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 47009                           
 47010                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 47011  018138  0E00               	movlw	0
 47012  01813A  0101               	movlb	1	; () banked
 47013  01813C  6FFB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 47014                           
 47015                           ; BSR set to: 1
 47016                           ;usb_device.c: 1495: if(controlTransferState == 2)
 47017  01813E  0E02               	movlw	2
 47018  018140  1829               	xorwf	_controlTransferState,w,c	;volatile
 47019  018142  A4D8               	btfss	status,2,c
 47020  018144  D01F               	goto	i2l12066
 47021                           
 47022                           ; BSR set to: 1
 47023                           ;usb_device.c: 1496: {
 47024                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 47025  018146  EE20 F001          	lfsr	2,1
 47026  01814A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 47027  01814C  26D9               	addwf	fsr2l,f,c
 47028  01814E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 47029  018150  22DA               	addwfc	fsr2h,f,c
 47030  018152  0E08               	movlw	8
 47031  018154  6EDF               	movwf	indf2,c
 47032                           
 47033                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 47034  018156  EE20 F002          	lfsr	2,2
 47035  01815A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 47036  01815C  26D9               	addwf	fsr2l,f,c
 47037  01815E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 47038  018160  22DA               	addwfc	fsr2h,f,c
 47039  018162  0E38               	movlw	56
 47040  018164  6EDE               	movwf	postinc2,c
 47041  018166  0E0D               	movlw	13
 47042  018168  6EDD               	movwf	postdec2,c
 47043                           
 47044                           ; BSR set to: 1
 47045                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 47046  01816A  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 47047  01816E  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 47048  018172  0E48               	movlw	72
 47049  018174  6EDF               	movwf	indf2,c
 47050                           
 47051                           ; BSR set to: 1
 47052                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 47053  018176  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 47054  01817A  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 47055  01817E  0E00               	movlw	0
 47056  018180  8EDB               	bsf	plusw2,7,c
 47057                           
 47058                           ;usb_device.c: 1502: }
 47059  018182  0012               	return	
 47060  018184                     i2l12066:
 47061                           
 47062                           ; BSR set to: 1
 47063                           ;usb_device.c: 1503: else
 47064                           ;usb_device.c: 1504: {
 47065                           ;usb_device.c: 1507: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 47066  018184  500E               	movf	_inPipes+4,w,c	;volatile
 47067  018186  010D               	movlb	13	; () banked
 47068  018188  5D36               	subwf	54,w,b	;volatile
 47069  01818A  500F               	movf	_inPipes+5,w,c	;volatile
 47070  01818C  010D               	movlb	13	; () banked
 47071  01818E  5937               	subwfb	55,w,b	;volatile
 47072  018190  B0D8               	btfsc	status,0,c
 47073  018192  D004               	goto	i2l12070
 47074                           
 47075                           ; BSR set to: 13
 47076                           ;usb_device.c: 1508: {
 47077                           ;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 47078  018194  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 47079  018198  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 47080  01819C                     i2l12070:
 47081                           
 47082                           ; BSR set to: 13
 47083                           ;usb_device.c: 1510: }
 47084                           ;usb_device.c: 1511: USBCtrlTrfTxService();
 47085  01819C  ECE7  F0B9         	call	_USBCtrlTrfTxService	;wreg free
 47086                           
 47087                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 47088  0181A0  EE20 F002          	lfsr	2,2
 47089  0181A4  5010               	movf	_pBDTEntryIn,w,c
 47090  0181A6  26D9               	addwf	fsr2l,f,c
 47091  0181A8  5011               	movf	_pBDTEntryIn+1,w,c
 47092  0181AA  22DA               	addwfc	fsr2h,f,c
 47093  0181AC  0E38               	movlw	56
 47094  0181AE  6EDE               	movwf	postinc2,c
 47095  0181B0  0E0D               	movlw	13
 47096  0181B2  6EDD               	movwf	postdec2,c
 47097                           
 47098                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 47099  0181B4  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 47100  0181B8  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 47101  0181BC  0E48               	movlw	72
 47102  0181BE  6EDF               	movwf	indf2,c
 47103                           
 47104                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 47105  0181C0  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 47106  0181C4  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 47107  0181C8  0E00               	movlw	0
 47108  0181CA  8EDB               	bsf	plusw2,7,c
 47109  0181CC  0012               	return	
 47110  0181CE                     __end_of_USBCtrlEPAllowDataStage:
 47111                           	opt stack 0
 47112                           tosu	equ	0xFFF
 47113                           tosh	equ	0xFFE
 47114                           tosl	equ	0xFFD
 47115                           pclatu	equ	0xFFB
 47116                           pclath	equ	0xFFA
 47117                           tblptru	equ	0xFF8
 47118                           tblptrh	equ	0xFF7
 47119                           tblptrl	equ	0xFF6
 47120                           tablat	equ	0xFF5
 47121                           prodh	equ	0xFF4
 47122                           prodl	equ	0xFF3
 47123                           intcon	equ	0xFF2
 47124                           intcon2	equ	0xFF1
 47125                           intcon3	equ	0xFF0
 47126                           indf0	equ	0xFEF
 47127                           postinc0	equ	0xFEE
 47128                           fsr0h	equ	0xFEA
 47129                           fsr0l	equ	0xFE9
 47130                           wreg	equ	0xFE8
 47131                           indf1	equ	0xFE7
 47132                           postinc1	equ	0xFE6
 47133                           postdec1	equ	0xFE5
 47134                           plusw1	equ	0xFE3
 47135                           fsr1h	equ	0xFE2
 47136                           fsr1l	equ	0xFE1
 47137                           indf2	equ	0xFDF
 47138                           postinc2	equ	0xFDE
 47139                           postdec2	equ	0xFDD
 47140                           plusw2	equ	0xFDB
 47141                           fsr2h	equ	0xFDA
 47142                           fsr2l	equ	0xFD9
 47143                           status	equ	0xFD8
 47144                           
 47145 ;; *************** function _USBCheckStdRequest *****************
 47146 ;; Defined at:
 47147 ;;		line 2688 in file "usb_device.c"
 47148 ;; Parameters:    Size  Location     Type
 47149 ;;		None
 47150 ;; Auto vars:     Size  Location     Type
 47151 ;;		None
 47152 ;; Return value:  Size  Location     Type
 47153 ;;                  1    wreg      void 
 47154 ;; Registers used:
 47155 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47156 ;; Tracked objects:
 47157 ;;		On entry : 0/0
 47158 ;;		On exit  : 0/0
 47159 ;;		Unchanged: 0/0
 47160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47165 ;;Total ram usage:        0 bytes
 47166 ;; Hardware stack levels used:    1
 47167 ;; Hardware stack levels required when called:    5
 47168 ;; This function calls:
 47169 ;;		_USBStdFeatureReqHandler
 47170 ;;		_USBStdGetDscHandler
 47171 ;;		_USBStdGetStatusHandler
 47172 ;;		_USBStdSetCfgHandler
 47173 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47174 ;; This function is called by:
 47175 ;;		_USBCtrlTrfSetupHandler
 47176 ;; This function uses a non-reentrant model
 47177 ;;
 47178                           
 47179                           	psect	text225
 47180  016EC2                     __ptext225:
 47181                           	opt stack 0
 47182  016EC2                     _USBCheckStdRequest:
 47183                           	opt stack 9
 47184                           
 47185                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 47186                           
 47187                           ;incstack = 0
 47188  016EC2  010D               	movlb	13	; () banked
 47189  016EC4  3930               	swapf	48,w,b	;volatile
 47190  016EC6  32E8               	rrcf	wreg,f,c
 47191  016EC8  0B03               	andlw	3
 47192  016ECA  0900               	iorlw	0
 47193  016ECC  A4D8               	btfss	status,2,c
 47194  016ECE  0012               	return	
 47195  016ED0  D043               	goto	i2l18736
 47196  016ED2                     i2l358:
 47197                           
 47198                           ; BSR set to: 13
 47199                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 47200  016ED2  8E0D               	bsf	_inPipes+3,7,c	;volatile
 47201                           
 47202                           ; BSR set to: 13
 47203                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 47204  016ED4  0E08               	movlw	8
 47205  016ED6  6E2B               	movwf	_USBDeviceState,c	;volatile
 47206                           
 47207                           ;usb_device.c: 2698: break;
 47208  016ED8  0012               	return	
 47209  016EDA                     i2l18706:
 47210                           
 47211                           ; BSR set to: 13
 47212                           ;usb_device.c: 2700: USBStdGetDscHandler();
 47213  016EDA  EC9C  F0AD         	call	_USBStdGetDscHandler	;wreg free
 47214                           
 47215                           ;usb_device.c: 2701: break;
 47216  016EDE  0012               	return	
 47217  016EE0                     i2l18708:
 47218                           
 47219                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 47220  016EE0  ECF3  F0B6         	call	_USBStdSetCfgHandler	;wreg free
 47221                           
 47222                           ;usb_device.c: 2704: break;
 47223  016EE4  0012               	return	
 47224  016EE6                     i2l18710:
 47225                           
 47226                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 47227  016EE6  0E2D               	movlw	low _USBActiveConfiguration
 47228  016EE8  6E0A               	movwf	_inPipes,c	;volatile
 47229  016EEA  0E00               	movlw	high _USBActiveConfiguration
 47230  016EEC  6E0B               	movwf	_inPipes+1,c	;volatile
 47231                           
 47232                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 47233  016EEE  800D               	bsf	_inPipes+3,0,c	;volatile
 47234                           
 47235                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 47236  016EF0  0E01               	movlw	1
 47237  016EF2  6E0E               	movwf	_inPipes+4,c	;volatile
 47238                           
 47239                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 47240  016EF4  8E0D               	bsf	_inPipes+3,7,c	;volatile
 47241                           
 47242                           ;usb_device.c: 2710: break;
 47243  016EF6  0012               	return	
 47244  016EF8                     i2l18718:
 47245                           
 47246                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 47247  016EF8  ECB8  F0BE         	call	_USBStdGetStatusHandler	;wreg free
 47248                           
 47249                           ;usb_device.c: 2713: break;
 47250  016EFC  0012               	return	
 47251  016EFE                     i2l18720:
 47252                           
 47253                           ;usb_device.c: 2715: case 3:
 47254                           ;usb_device.c: 2716: USBStdFeatureReqHandler();
 47255  016EFE  EC8E  F09D         	call	_USBStdFeatureReqHandler	;wreg free
 47256                           
 47257                           ;usb_device.c: 2717: break;
 47258  016F02  0012               	return	
 47259  016F04                     i2l18722:
 47260                           
 47261                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 47262  016F04  010D               	movlb	13	; () banked
 47263  016F06  5134               	movf	52,w,b	;volatile
 47264  016F08  0D01               	mullw	1
 47265  016F0A  0EFC               	movlw	low _USBAlternateInterface
 47266  016F0C  24F3               	addwf	prodl,w,c
 47267  016F0E  6E0A               	movwf	_inPipes,c	;volatile
 47268  016F10  0E01               	movlw	high _USBAlternateInterface
 47269  016F12  20F4               	addwfc	prodh,w,c
 47270  016F14  6E0B               	movwf	_inPipes+1,c	;volatile
 47271                           
 47272                           ; BSR set to: 13
 47273                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 47274  016F16  800D               	bsf	_inPipes+3,0,c	;volatile
 47275                           
 47276                           ; BSR set to: 13
 47277                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 47278  016F18  0E01               	movlw	1
 47279  016F1A  6E0E               	movwf	_inPipes+4,c	;volatile
 47280                           
 47281                           ; BSR set to: 13
 47282                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 47283  016F1C  8E0D               	bsf	_inPipes+3,7,c	;volatile
 47284                           
 47285                           ;usb_device.c: 2723: break;
 47286  016F1E  0012               	return	
 47287  016F20                     i2l367:
 47288                           
 47289                           ; BSR set to: 13
 47290                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 47291  016F20  8E0D               	bsf	_inPipes+3,7,c	;volatile
 47292                           
 47293                           ; BSR set to: 13
 47294                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 47295  016F22  010D               	movlb	13	; () banked
 47296  016F24  5134               	movf	52,w,b	;volatile
 47297  016F26  0D01               	mullw	1
 47298  016F28  0EFC               	movlw	low _USBAlternateInterface
 47299  016F2A  24F3               	addwf	prodl,w,c
 47300  016F2C  6ED9               	movwf	fsr2l,c
 47301  016F2E  0E01               	movlw	high _USBAlternateInterface
 47302  016F30  20F4               	addwfc	prodh,w,c
 47303  016F32  6EDA               	movwf	fsr2h,c
 47304  016F34  CD32 FFDF          	movff	3378,indf2	;volatile
 47305                           
 47306                           ;usb_device.c: 2727: break;
 47307  016F38  0012               	return	
 47308  016F3A                     i2l18732:
 47309                           
 47310                           ; BSR set to: 13
 47311                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 47312  016F3A  0E00               	movlw	0
 47313  016F3C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47314  016F3E  0E02               	movlw	2
 47315  016F40  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47316  016F42  0E00               	movlw	0
 47317  016F44  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 47318  016F46  0E00               	movlw	0
 47319  016F48  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 47320  016F4A  0E00               	movlw	0
 47321  016F4C  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47322  016F4E  0E00               	movlw	0
 47323  016F50  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47324  016F52  EC82  F0C4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47325                           
 47326                           ;usb_device.c: 2734: }
 47327                           
 47328                           ;usb_device.c: 2733: break;
 47329                           
 47330                           ;usb_device.c: 2732: default:
 47331                           
 47332                           ;usb_device.c: 2731: case 12:
 47333                           
 47334                           ;usb_device.c: 2730: break;
 47335  016F56  0012               	return	
 47336  016F58                     i2l18736:
 47337  016F58  010D               	movlb	13	; () banked
 47338  016F5A  5131               	movf	49,w,b	;volatile
 47339                           
 47340                           ; Switch size 1, requested type "space"
 47341                           ; Number of cases is 11, Range of values is 0 to 12
 47342                           ; switch strategies available:
 47343                           ; Name         Instructions Cycles
 47344                           ; simple_byte           34    18 (average)
 47345                           ;	Chosen strategy is simple_byte
 47346  016F5C  0A00               	xorlw	0	; case 0
 47347  016F5E  B4D8               	btfsc	status,2,c
 47348  016F60  D7CB               	goto	i2l18718
 47349  016F62  0A01               	xorlw	1	; case 1
 47350  016F64  B4D8               	btfsc	status,2,c
 47351  016F66  D7CB               	goto	i2l18720
 47352  016F68  0A02               	xorlw	2	; case 3
 47353  016F6A  B4D8               	btfsc	status,2,c
 47354  016F6C  D7C8               	goto	i2l18720
 47355  016F6E  0A06               	xorlw	6	; case 5
 47356  016F70  B4D8               	btfsc	status,2,c
 47357  016F72  D7AF               	goto	i2l358
 47358  016F74  0A03               	xorlw	3	; case 6
 47359  016F76  B4D8               	btfsc	status,2,c
 47360  016F78  D7B0               	goto	i2l18706
 47361  016F7A  0A01               	xorlw	1	; case 7
 47362  016F7C  B4D8               	btfsc	status,2,c
 47363  016F7E  D7DD               	goto	i2l18732
 47364  016F80  0A0F               	xorlw	15	; case 8
 47365  016F82  B4D8               	btfsc	status,2,c
 47366  016F84  D7B0               	goto	i2l18710
 47367  016F86  0A01               	xorlw	1	; case 9
 47368  016F88  B4D8               	btfsc	status,2,c
 47369  016F8A  D7AA               	goto	i2l18708
 47370  016F8C  0A03               	xorlw	3	; case 10
 47371  016F8E  B4D8               	btfsc	status,2,c
 47372  016F90  D7B9               	goto	i2l18722
 47373  016F92  0A01               	xorlw	1	; case 11
 47374  016F94  B4D8               	btfsc	status,2,c
 47375  016F96  D7C4               	goto	i2l367
 47376  016F98  0A07               	xorlw	7	; case 12
 47377  016F9A  0012               	return	
 47378  016F9C                     __end_of_USBCheckStdRequest:
 47379                           	opt stack 0
 47380                           tosu	equ	0xFFF
 47381                           tosh	equ	0xFFE
 47382                           tosl	equ	0xFFD
 47383                           pclatu	equ	0xFFB
 47384                           pclath	equ	0xFFA
 47385                           tblptru	equ	0xFF8
 47386                           tblptrh	equ	0xFF7
 47387                           tblptrl	equ	0xFF6
 47388                           tablat	equ	0xFF5
 47389                           prodh	equ	0xFF4
 47390                           prodl	equ	0xFF3
 47391                           intcon	equ	0xFF2
 47392                           intcon2	equ	0xFF1
 47393                           intcon3	equ	0xFF0
 47394                           indf0	equ	0xFEF
 47395                           postinc0	equ	0xFEE
 47396                           fsr0h	equ	0xFEA
 47397                           fsr0l	equ	0xFE9
 47398                           wreg	equ	0xFE8
 47399                           indf1	equ	0xFE7
 47400                           postinc1	equ	0xFE6
 47401                           postdec1	equ	0xFE5
 47402                           plusw1	equ	0xFE3
 47403                           fsr1h	equ	0xFE2
 47404                           fsr1l	equ	0xFE1
 47405                           indf2	equ	0xFDF
 47406                           postinc2	equ	0xFDE
 47407                           postdec2	equ	0xFDD
 47408                           plusw2	equ	0xFDB
 47409                           fsr2h	equ	0xFDA
 47410                           fsr2l	equ	0xFD9
 47411                           status	equ	0xFD8
 47412                           
 47413 ;; *************** function _USBStdSetCfgHandler *****************
 47414 ;; Defined at:
 47415 ;;		line 1970 in file "usb_device.c"
 47416 ;; Parameters:    Size  Location     Type
 47417 ;;		None
 47418 ;; Auto vars:     Size  Location     Type
 47419 ;;  i               1   23[COMRAM] unsigned char 
 47420 ;; Return value:  Size  Location     Type
 47421 ;;                  1    wreg      void 
 47422 ;; Registers used:
 47423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 47424 ;; Tracked objects:
 47425 ;;		On entry : 0/0
 47426 ;;		On exit  : 0/0
 47427 ;;		Unchanged: 0/0
 47428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47432 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47433 ;;Total ram usage:        1 bytes
 47434 ;; Hardware stack levels used:    1
 47435 ;; Hardware stack levels required when called:    4
 47436 ;; This function calls:
 47437 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47438 ;;		i2_memset
 47439 ;; This function is called by:
 47440 ;;		_USBCheckStdRequest
 47441 ;; This function uses a non-reentrant model
 47442 ;;
 47443                           
 47444                           	psect	text226
 47445  016DE6                     __ptext226:
 47446                           	opt stack 0
 47447  016DE6                     _USBStdSetCfgHandler:
 47448                           	opt stack 9
 47449                           
 47450                           ;usb_device.c: 1972: uint8_t i;
 47451                           ;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 47452                           
 47453                           ;incstack = 0
 47454  016DE6  8E0D               	bsf	_inPipes+3,7,c	;volatile
 47455                           
 47456                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 47457  016DE8  0E27               	movlw	39
 47458  016DEA  6E2E               	movwf	i2memset@p1,c
 47459  016DEC  0E0F               	movlw	15
 47460  016DEE  6E2F               	movwf	i2memset@p1+1,c
 47461  016DF0  0E00               	movlw	0
 47462  016DF2  6E31               	movwf	i2memset@c+1,c
 47463  016DF4  0E00               	movlw	0
 47464  016DF6  6E30               	movwf	i2memset@c,c
 47465  016DF8  0E00               	movlw	0
 47466  016DFA  6E33               	movwf	i2memset@n+1,c
 47467  016DFC  0E02               	movlw	2
 47468  016DFE  6E32               	movwf	i2memset@n,c
 47469  016E00  EC84  F0D2         	call	i2_memset	;wreg free
 47470                           
 47471                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 47472  016E04  0E00               	movlw	0
 47473  016E06  6E2E               	movwf	i2memset@p1,c
 47474  016E08  0E0D               	movlw	13
 47475  016E0A  6E2F               	movwf	i2memset@p1+1,c
 47476  016E0C  0E00               	movlw	0
 47477  016E0E  6E31               	movwf	i2memset@c+1,c
 47478  016E10  0E00               	movlw	0
 47479  016E12  6E30               	movwf	i2memset@c,c
 47480  016E14  0E00               	movlw	0
 47481  016E16  6E33               	movwf	i2memset@n+1,c
 47482  016E18  0E30               	movlw	48
 47483  016E1A  6E32               	movwf	i2memset@n,c
 47484  016E1C  EC84  F0D2         	call	i2_memset	;wreg free
 47485                           
 47486                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 47487  016E20  8C65               	bsf	3941,6,c	;volatile
 47488                           
 47489                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 47490  016E22  0E00               	movlw	0
 47491  016E24  6E45               	movwf	USBStdSetCfgHandler@i,c
 47492  016E26                     i2l18208:
 47493  016E26  0E02               	movlw	2
 47494  016E28  6445               	cpfsgt	USBStdSetCfgHandler@i,c
 47495  016E2A  D001               	goto	i2l18212
 47496  016E2C  D016               	goto	i2l18218
 47497  016E2E                     i2l18212:
 47498                           
 47499                           ;usb_device.c: 1990: {
 47500                           ;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 47501  016E2E  5045               	movf	USBStdSetCfgHandler@i,w,c
 47502  016E30  0D01               	mullw	1
 47503  016E32  0EE4               	movlw	low _ep_data_in
 47504  016E34  24F3               	addwf	prodl,w,c
 47505  016E36  6ED9               	movwf	fsr2l,c
 47506  016E38  0E01               	movlw	high _ep_data_in
 47507  016E3A  20F4               	addwfc	prodh,w,c
 47508  016E3C  6EDA               	movwf	fsr2h,c
 47509  016E3E  0E00               	movlw	0
 47510  016E40  6EDF               	movwf	indf2,c
 47511                           
 47512                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 47513  016E42  5045               	movf	USBStdSetCfgHandler@i,w,c
 47514  016E44  0D01               	mullw	1
 47515  016E46  0EE1               	movlw	low _ep_data_out
 47516  016E48  24F3               	addwf	prodl,w,c
 47517  016E4A  6ED9               	movwf	fsr2l,c
 47518  016E4C  0E01               	movlw	high _ep_data_out
 47519  016E4E  20F4               	addwfc	prodh,w,c
 47520  016E50  6EDA               	movwf	fsr2h,c
 47521  016E52  0E00               	movlw	0
 47522  016E54  6EDF               	movwf	indf2,c
 47523  016E56  2A45               	incf	USBStdSetCfgHandler@i,f,c
 47524  016E58  D7E6               	goto	i2l18208
 47525  016E5A                     i2l18218:
 47526                           
 47527                           ;usb_device.c: 1993: }
 47528                           ;usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 47529  016E5A  0EFC               	movlw	low _USBAlternateInterface
 47530  016E5C  6E2E               	movwf	i2memset@p1,c
 47531  016E5E  0E01               	movlw	high _USBAlternateInterface
 47532  016E60  6E2F               	movwf	i2memset@p1+1,c
 47533  016E62  0E00               	movlw	0
 47534  016E64  6E31               	movwf	i2memset@c+1,c
 47535  016E66  0E00               	movlw	0
 47536  016E68  6E30               	movwf	i2memset@c,c
 47537  016E6A  0E00               	movlw	0
 47538  016E6C  6E33               	movwf	i2memset@n+1,c
 47539  016E6E  0E02               	movlw	2
 47540  016E70  6E32               	movwf	i2memset@n,c
 47541  016E72  EC84  F0D2         	call	i2_memset	;wreg free
 47542                           
 47543                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 47544  016E76  9C65               	bcf	3941,6,c	;volatile
 47545                           
 47546                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 47547  016E78  0E08               	movlw	8
 47548  016E7A  6E10               	movwf	_pBDTEntryIn,c
 47549  016E7C  0E0D               	movlw	13
 47550  016E7E  6E11               	movwf	_pBDTEntryIn+1,c
 47551                           
 47552                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 47553  016E80  0E00               	movlw	0
 47554  016E82  6E1A               	movwf	_pBDTEntryEP0OutCurrent,c
 47555  016E84  0E0D               	movlw	13
 47556  016E86  6E1B               	movwf	_pBDTEntryEP0OutCurrent+1,c
 47557                           
 47558                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 47559  016E88  C01A  F018         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 47560  016E8C  C01B  F019         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 47561                           
 47562                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 47563  016E90  CD32 F02D          	movff	3378,_USBActiveConfiguration	;volatile
 47564                           
 47565                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 47566  016E94  502D               	movf	_USBActiveConfiguration,w,c	;volatile
 47567  016E96  A4D8               	btfss	status,2,c
 47568  016E98  D003               	goto	i2l18234
 47569                           
 47570                           ;usb_device.c: 2012: {
 47571                           ;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 47572  016E9A  0E10               	movlw	16
 47573  016E9C  6E2B               	movwf	_USBDeviceState,c	;volatile
 47574                           
 47575                           ;usb_device.c: 2015: }
 47576  016E9E  0012               	return	
 47577  016EA0                     i2l18234:
 47578                           
 47579                           ;usb_device.c: 2016: else
 47580                           ;usb_device.c: 2017: {
 47581                           ;usb_device.c: 2019: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 47582  016EA0  0E00               	movlw	0
 47583  016EA2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 47584  016EA4  0E01               	movlw	1
 47585  016EA6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 47586  016EA8  0E2D               	movlw	low _USBActiveConfiguration
 47587  016EAA  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 47588  016EAC  0E00               	movlw	high _USBActiveConfiguration
 47589  016EAE  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 47590  016EB0  0E00               	movlw	0
 47591  016EB2  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 47592  016EB4  0E01               	movlw	1
 47593  016EB6  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 47594  016EB8  EC82  F0C4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 47595                           
 47596                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 47597  016EBC  0E20               	movlw	32
 47598  016EBE  6E2B               	movwf	_USBDeviceState,c	;volatile
 47599  016EC0  0012               	return	
 47600  016EC2                     __end_of_USBStdSetCfgHandler:
 47601                           	opt stack 0
 47602                           tosu	equ	0xFFF
 47603                           tosh	equ	0xFFE
 47604                           tosl	equ	0xFFD
 47605                           pclatu	equ	0xFFB
 47606                           pclath	equ	0xFFA
 47607                           tblptru	equ	0xFF8
 47608                           tblptrh	equ	0xFF7
 47609                           tblptrl	equ	0xFF6
 47610                           tablat	equ	0xFF5
 47611                           prodh	equ	0xFF4
 47612                           prodl	equ	0xFF3
 47613                           intcon	equ	0xFF2
 47614                           intcon2	equ	0xFF1
 47615                           intcon3	equ	0xFF0
 47616                           indf0	equ	0xFEF
 47617                           postinc0	equ	0xFEE
 47618                           fsr0h	equ	0xFEA
 47619                           fsr0l	equ	0xFE9
 47620                           wreg	equ	0xFE8
 47621                           indf1	equ	0xFE7
 47622                           postinc1	equ	0xFE6
 47623                           postdec1	equ	0xFE5
 47624                           plusw1	equ	0xFE3
 47625                           fsr1h	equ	0xFE2
 47626                           fsr1l	equ	0xFE1
 47627                           indf2	equ	0xFDF
 47628                           postinc2	equ	0xFDE
 47629                           postdec2	equ	0xFDD
 47630                           plusw2	equ	0xFDB
 47631                           fsr2h	equ	0xFDA
 47632                           fsr2l	equ	0xFD9
 47633                           status	equ	0xFD8
 47634                           
 47635 ;; *************** function i2_memset *****************
 47636 ;; Defined at:
 47637 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
 47638 ;; Parameters:    Size  Location     Type
 47639 ;;  p1              2    0[COMRAM] PTR void 
 47640 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 47641 ;;  c               2    2[COMRAM] int 
 47642 ;;  n               2    4[COMRAM] unsigned int 
 47643 ;; Auto vars:     Size  Location     Type
 47644 ;;  memset          2    6[COMRAM] PTR unsigned char 
 47645 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 47646 ;; Return value:  Size  Location     Type
 47647 ;;                  2    0[COMRAM] PTR void 
 47648 ;; Registers used:
 47649 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 47650 ;; Tracked objects:
 47651 ;;		On entry : 0/0
 47652 ;;		On exit  : 0/0
 47653 ;;		Unchanged: 0/0
 47654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47655 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47656 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47658 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47659 ;;Total ram usage:        8 bytes
 47660 ;; Hardware stack levels used:    1
 47661 ;; This function calls:
 47662 ;;		Nothing
 47663 ;; This function is called by:
 47664 ;;		_USBStdSetCfgHandler
 47665 ;;		i2_USBDeviceInit
 47666 ;; This function uses a non-reentrant model
 47667 ;;
 47668                           
 47669                           	psect	text227
 47670  01A508                     __ptext227:
 47671                           	opt stack 0
 47672  01A508                     i2_memset:
 47673                           	opt stack 15
 47674                           
 47675                           ;incstack = 0
 47676  01A508  C02E  F034         	movff	i2memset@p1,i2memset@p
 47677  01A50C  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 47678  01A510  D008               	goto	i2l12020
 47679  01A512                     i2l12016:
 47680  01A512  C034  FFD9         	movff	i2memset@p,fsr2l
 47681  01A516  C035  FFDA         	movff	i2memset@p+1,fsr2h
 47682  01A51A  C030  FFDF         	movff	i2memset@c,indf2
 47683  01A51E  4A34               	infsnz	i2memset@p,f,c
 47684  01A520  2A35               	incf	i2memset@p+1,f,c
 47685  01A522                     i2l12020:
 47686  01A522  0632               	decf	i2memset@n,f,c
 47687  01A524  A0D8               	btfss	status,0,c
 47688  01A526  0633               	decf	i2memset@n+1,f,c
 47689  01A528  2832               	incf	i2memset@n,w,c
 47690  01A52A  E1F3               	bnz	i2l12016
 47691  01A52C  2833               	incf	i2memset@n+1,w,c
 47692  01A52E  B4D8               	btfsc	status,2,c
 47693  01A530  0012               	return	
 47694  01A532  D7EF               	goto	i2l12016
 47695  01A534                     __end_ofi2_memset:
 47696                           	opt stack 0
 47697                           tosu	equ	0xFFF
 47698                           tosh	equ	0xFFE
 47699                           tosl	equ	0xFFD
 47700                           pclatu	equ	0xFFB
 47701                           pclath	equ	0xFFA
 47702                           tblptru	equ	0xFF8
 47703                           tblptrh	equ	0xFF7
 47704                           tblptrl	equ	0xFF6
 47705                           tablat	equ	0xFF5
 47706                           prodh	equ	0xFF4
 47707                           prodl	equ	0xFF3
 47708                           intcon	equ	0xFF2
 47709                           intcon2	equ	0xFF1
 47710                           intcon3	equ	0xFF0
 47711                           indf0	equ	0xFEF
 47712                           postinc0	equ	0xFEE
 47713                           fsr0h	equ	0xFEA
 47714                           fsr0l	equ	0xFE9
 47715                           wreg	equ	0xFE8
 47716                           indf1	equ	0xFE7
 47717                           postinc1	equ	0xFE6
 47718                           postdec1	equ	0xFE5
 47719                           plusw1	equ	0xFE3
 47720                           fsr1h	equ	0xFE2
 47721                           fsr1l	equ	0xFE1
 47722                           indf2	equ	0xFDF
 47723                           postinc2	equ	0xFDE
 47724                           postdec2	equ	0xFDD
 47725                           plusw2	equ	0xFDB
 47726                           fsr2h	equ	0xFDA
 47727                           fsr2l	equ	0xFD9
 47728                           status	equ	0xFD8
 47729                           
 47730 ;; *************** function _USBStdGetStatusHandler *****************
 47731 ;; Defined at:
 47732 ;;		line 2131 in file "usb_device.c"
 47733 ;; Parameters:    Size  Location     Type
 47734 ;;		None
 47735 ;; Auto vars:     Size  Location     Type
 47736 ;;  p               2    1[COMRAM] PTR struct __BDT
 47737 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 47738 ;; Return value:  Size  Location     Type
 47739 ;;                  1    wreg      void 
 47740 ;; Registers used:
 47741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 47742 ;; Tracked objects:
 47743 ;;		On entry : 0/0
 47744 ;;		On exit  : 0/0
 47745 ;;		Unchanged: 0/0
 47746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47748 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47749 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47750 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47751 ;;Total ram usage:        3 bytes
 47752 ;; Hardware stack levels used:    1
 47753 ;; This function calls:
 47754 ;;		Nothing
 47755 ;; This function is called by:
 47756 ;;		_USBCheckStdRequest
 47757 ;; This function uses a non-reentrant model
 47758 ;;
 47759                           
 47760                           	psect	text228
 47761  017D70                     __ptext228:
 47762                           	opt stack 0
 47763  017D70                     _USBStdGetStatusHandler:
 47764                           	opt stack 13
 47765                           
 47766                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 47767                           
 47768                           ;incstack = 0
 47769  017D70  0E00               	movlw	0
 47770  017D72  010D               	movlb	13	; () banked
 47771  017D74  6F38               	movwf	56,b	;volatile
 47772                           
 47773                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 47774  017D76  0E00               	movlw	0
 47775  017D78  010D               	movlb	13	; () banked
 47776  017D7A  6F39               	movwf	57,b	;volatile
 47777                           
 47778                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 47779  017D7C  D038               	goto	i2l12168
 47780  017D7E                     i2l296:
 47781                           
 47782                           ; BSR set to: 13
 47783                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 47784  017D7E  8E0D               	bsf	_inPipes+3,7,c	;volatile
 47785                           
 47786                           ; BSR set to: 13
 47787                           ;usb_device.c: 2147: }
 47788                           ;usb_device.c: 2149: if(RemoteWakeup == 1)
 47789                           
 47790                           ; BSR set to: 13
 47791                           
 47792                           ; BSR set to: 13
 47793                           ;usb_device.c: 2145: {
 47794                           ;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 47795                           
 47796                           ;usb_device.c: 2144: if(0 == 1)
 47797  017D80  0428               	decf	_RemoteWakeup,w,c	;volatile
 47798  017D82  A4D8               	btfss	status,2,c
 47799  017D84  D040               	goto	i2l299
 47800                           
 47801                           ; BSR set to: 13
 47802                           ;usb_device.c: 2150: {
 47803                           ;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 47804  017D86  010D               	movlb	13	; () banked
 47805  017D88  8338               	bsf	56,1,b	;volatile
 47806                           
 47807                           ; BSR set to: 13
 47808                           ;usb_device.c: 2152: }
 47809                           ;usb_device.c: 2153: break;
 47810  017D8A  D03D               	goto	i2l299
 47811  017D8C                     i2l300:
 47812                           
 47813                           ; BSR set to: 13
 47814                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 47815  017D8C  8E0D               	bsf	_inPipes+3,7,c	;volatile
 47816                           
 47817                           ;usb_device.c: 2156: break;
 47818  017D8E  D03B               	goto	i2l299
 47819  017D90                     i2l301:
 47820                           
 47821                           ; BSR set to: 13
 47822                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 47823  017D90  8E0D               	bsf	_inPipes+3,7,c	;volatile
 47824                           
 47825                           ;usb_device.c: 2162: {
 47826                           ;usb_device.c: 2163: BDT_ENTRY *p;
 47827                           ;usb_device.c: 2165: if(SetupPkt.EPDir == 0)
 47828  017D92  010D               	movlb	13	; () banked
 47829  017D94  BF34               	btfsc	52,7,b	;volatile
 47830  017D96  D00B               	goto	i2l12158
 47831                           
 47832                           ; BSR set to: 13
 47833                           ;usb_device.c: 2166: {
 47834                           ;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 47835  017D98  010D               	movlb	13	; () banked
 47836  017D9A  5134               	movf	52,w,b	;volatile
 47837  017D9C  0B0F               	andlw	15
 47838  017D9E  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 47839  017DA0  502E               	movf	??_USBStdGetStatusHandler,w,c
 47840  017DA2  0D02               	mullw	2
 47841  017DA4  0ED3               	movlw	low _pBDTEntryOut
 47842  017DA6  24F3               	addwf	prodl,w,c
 47843  017DA8  6ED9               	movwf	fsr2l,c
 47844  017DAA  0E01               	movlw	high _pBDTEntryOut
 47845  017DAC  D00A               	goto	L56
 47846  017DAE                     i2l12158:
 47847                           
 47848                           ; BSR set to: 13
 47849                           ;usb_device.c: 2169: else
 47850                           ;usb_device.c: 2170: {
 47851                           ;usb_device.c: 2171: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 47852  017DAE  010D               	movlb	13	; () banked
 47853  017DB0  5134               	movf	52,w,b	;volatile
 47854  017DB2  0B0F               	andlw	15
 47855  017DB4  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 47856  017DB6  502E               	movf	??_USBStdGetStatusHandler,w,c
 47857  017DB8  0D02               	mullw	2
 47858  017DBA  0E10               	movlw	low _pBDTEntryIn
 47859  017DBC  24F3               	addwf	prodl,w,c
 47860  017DBE  6ED9               	movwf	fsr2l,c
 47861  017DC0  0E00               	movlw	high _pBDTEntryIn
 47862  017DC2                     L56:
 47863  017DC2  20F4               	addwfc	prodh,w,c
 47864  017DC4  6EDA               	movwf	fsr2h,c
 47865  017DC6  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 47866  017DCA  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 47867                           
 47868                           ; BSR set to: 13
 47869                           ;usb_device.c: 2172: }
 47870                           ;usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 47871                           
 47872                           ; BSR set to: 13
 47873  017DCE  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 47874  017DD2  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 47875  017DD6  AEDF               	btfss	indf2,7,c
 47876  017DD8  D016               	goto	i2l299
 47877                           
 47878                           ; BSR set to: 13
 47879  017DDA  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 47880  017DDE  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 47881  017DE2  A4DF               	btfss	indf2,2,c
 47882  017DE4  D010               	goto	i2l299
 47883                           
 47884                           ; BSR set to: 13
 47885                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 47886  017DE6  0E01               	movlw	1
 47887  017DE8  010D               	movlb	13	; () banked
 47888  017DEA  6F38               	movwf	56,b	;volatile
 47889                           
 47890                           ; BSR set to: 13
 47891                           ;usb_device.c: 2177: }
 47892                           ;usb_device.c: 2178: }
 47893                           
 47894                           ; BSR set to: 13
 47895                           ;usb_device.c: 2176: break;
 47896  017DEC  D00C               	goto	i2l299
 47897  017DEE                     i2l12168:
 47898                           
 47899                           ; BSR set to: 13
 47900  017DEE  010D               	movlb	13	; () banked
 47901  017DF0  5130               	movf	48,w,b	;volatile
 47902  017DF2  0B1F               	andlw	31
 47903                           
 47904                           ; Switch size 1, requested type "space"
 47905                           ; Number of cases is 3, Range of values is 0 to 2
 47906                           ; switch strategies available:
 47907                           ; Name         Instructions Cycles
 47908                           ; simple_byte           10     6 (average)
 47909                           ;	Chosen strategy is simple_byte
 47910  017DF4  0A00               	xorlw	0	; case 0
 47911  017DF6  B4D8               	btfsc	status,2,c
 47912  017DF8  D7C2               	goto	i2l296
 47913  017DFA  0A01               	xorlw	1	; case 1
 47914  017DFC  B4D8               	btfsc	status,2,c
 47915  017DFE  D7C6               	goto	i2l300
 47916  017E00  0A03               	xorlw	3	; case 2
 47917  017E02  B4D8               	btfsc	status,2,c
 47918  017E04  D7C5               	goto	i2l301
 47919  017E06                     i2l299:
 47920                           
 47921                           ; BSR set to: 13
 47922                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 47923  017E06  AE0D               	btfss	_inPipes+3,7,c	;volatile
 47924  017E08  0012               	return	
 47925                           
 47926                           ; BSR set to: 13
 47927                           ;usb_device.c: 2181: {
 47928                           ;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 47929  017E0A  0E38               	movlw	56
 47930  017E0C  6E0A               	movwf	_inPipes,c	;volatile
 47931  017E0E  0E0D               	movlw	13
 47932  017E10  6E0B               	movwf	_inPipes+1,c	;volatile
 47933                           
 47934                           ; BSR set to: 13
 47935                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 47936  017E12  800D               	bsf	_inPipes+3,0,c	;volatile
 47937                           
 47938                           ; BSR set to: 13
 47939                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 47940  017E14  0E02               	movlw	2
 47941  017E16  6E0E               	movwf	_inPipes+4,c	;volatile
 47942  017E18  0012               	return	
 47943  017E1A                     __end_of_USBStdGetStatusHandler:
 47944                           	opt stack 0
 47945                           tosu	equ	0xFFF
 47946                           tosh	equ	0xFFE
 47947                           tosl	equ	0xFFD
 47948                           pclatu	equ	0xFFB
 47949                           pclath	equ	0xFFA
 47950                           tblptru	equ	0xFF8
 47951                           tblptrh	equ	0xFF7
 47952                           tblptrl	equ	0xFF6
 47953                           tablat	equ	0xFF5
 47954                           prodh	equ	0xFF4
 47955                           prodl	equ	0xFF3
 47956                           intcon	equ	0xFF2
 47957                           intcon2	equ	0xFF1
 47958                           intcon3	equ	0xFF0
 47959                           indf0	equ	0xFEF
 47960                           postinc0	equ	0xFEE
 47961                           fsr0h	equ	0xFEA
 47962                           fsr0l	equ	0xFE9
 47963                           wreg	equ	0xFE8
 47964                           indf1	equ	0xFE7
 47965                           postinc1	equ	0xFE6
 47966                           postdec1	equ	0xFE5
 47967                           plusw1	equ	0xFE3
 47968                           fsr1h	equ	0xFE2
 47969                           fsr1l	equ	0xFE1
 47970                           indf2	equ	0xFDF
 47971                           postinc2	equ	0xFDE
 47972                           postdec2	equ	0xFDD
 47973                           plusw2	equ	0xFDB
 47974                           fsr2h	equ	0xFDA
 47975                           fsr2l	equ	0xFD9
 47976                           status	equ	0xFD8
 47977                           
 47978 ;; *************** function _USBStdGetDscHandler *****************
 47979 ;; Defined at:
 47980 ;;		line 2045 in file "usb_device.c"
 47981 ;; Parameters:    Size  Location     Type
 47982 ;;		None
 47983 ;; Auto vars:     Size  Location     Type
 47984 ;;		None
 47985 ;; Return value:  Size  Location     Type
 47986 ;;                  1    wreg      void 
 47987 ;; Registers used:
 47988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 47989 ;; Tracked objects:
 47990 ;;		On entry : 0/0
 47991 ;;		On exit  : 0/0
 47992 ;;		Unchanged: 0/0
 47993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47996 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47997 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47998 ;;Total ram usage:        2 bytes
 47999 ;; Hardware stack levels used:    1
 48000 ;; This function calls:
 48001 ;;		Nothing
 48002 ;; This function is called by:
 48003 ;;		_USBCheckStdRequest
 48004 ;; This function uses a non-reentrant model
 48005 ;;
 48006                           
 48007                           	psect	text229
 48008  015B38                     __ptext229:
 48009                           	opt stack 0
 48010  015B38                     _USBStdGetDscHandler:
 48011                           	opt stack 13
 48012                           
 48013                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 48014                           
 48015                           ; BSR set to: 13
 48016                           ;incstack = 0
 48017  015B38  0E80               	movlw	128
 48018  015B3A  010D               	movlb	13	; () banked
 48019  015B3C  1930               	xorwf	48,w,b	;volatile
 48020  015B3E  A4D8               	btfss	status,2,c
 48021  015B40  0012               	return	
 48022                           
 48023                           ; BSR set to: 13
 48024                           ;usb_device.c: 2048: {
 48025                           ;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 48026  015B42  0EC0               	movlw	192
 48027  015B44  6E0D               	movwf	_inPipes+3,c	;volatile
 48028                           
 48029                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 48030  015B46  D085               	goto	i2l12146
 48031  015B48                     i2l12120:
 48032                           
 48033                           ; BSR set to: 13
 48034                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 48035  015B48  0EB2               	movlw	low _device_dsc
 48036  015B4A  6E0A               	movwf	_inPipes,c	;volatile
 48037  015B4C  0EFF               	movlw	high _device_dsc
 48038  015B4E  6E0B               	movwf	_inPipes+1,c	;volatile
 48039                           
 48040                           ; BSR set to: 13
 48041                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 48042  015B50  0E00               	movlw	0
 48043  015B52  6E0F               	movwf	_inPipes+5,c	;volatile
 48044  015B54  0E12               	movlw	18
 48045  015B56  6E0E               	movwf	_inPipes+4,c	;volatile
 48046                           
 48047                           ;usb_device.c: 2060: break;
 48048  015B58  0012               	return	
 48049  015B5A                     i2l12124:
 48050                           
 48051                           ; BSR set to: 13
 48052                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 48053  015B5A  010D               	movlb	13	; () banked
 48054  015B5C  5132               	movf	50,w,b	;volatile
 48055  015B5E  A4D8               	btfss	status,2,c
 48056  015B60  D043               	goto	i2l12132
 48057                           
 48058                           ; BSR set to: 13
 48059                           ;usb_device.c: 2066: {
 48060                           ;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 48061  015B62  010D               	movlb	13	; () banked
 48062  015B64  5132               	movf	50,w,b	;volatile
 48063  015B66  0D02               	mullw	2
 48064  015B68  0EB3               	movlw	low _USB_CD_Ptr
 48065  015B6A  24F3               	addwf	prodl,w,c
 48066  015B6C  6EF6               	movwf	tblptrl,c
 48067  015B6E  0EFE               	movlw	high _USB_CD_Ptr
 48068  015B70  20F4               	addwfc	prodh,w,c
 48069  015B72  6EF7               	movwf	tblptrh,c
 48070  015B74                     	if	1	;There are 3 active tblptr bytes
 48071  015B74  6AF8               	clrf	tblptru,c
 48072  015B76  0E00               	movlw	low (__mediumconst shr (0+16))
 48073  015B78  22F8               	addwfc	tblptru,f,c
 48074  015B7A                     	endif
 48075  015B7A  0009               	tblrd		*+
 48076  015B7C  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 48077  015B80  000A               	tblrd		*-
 48078  015B82  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 48079                           
 48080                           ; BSR set to: 13
 48081                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 48082  015B86  0E02               	movlw	2
 48083  015B88  240A               	addwf	_inPipes,w,c	;volatile
 48084  015B8A  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 48085  015B8C  0E00               	movlw	0
 48086  015B8E  200B               	addwfc	_inPipes+1,w,c	;volatile
 48087  015B90  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 48088  015B92  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 48089  015B96  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 48090  015B9A  0E00               	movlw	low (__mediumconst shr (0+16))
 48091  015B9C  6EF8               	movwf	tblptru,c
 48092  015B9E  0E0E               	movlw	(high __ramtop+-1)
 48093  015BA0  64F7               	cpfsgt	tblptrh,c
 48094  015BA2  D003               	bra	i2u964_47
 48095  015BA4  0008               	tblrd		*
 48096  015BA6  50F5               	movf	tablat,w,c
 48097  015BA8  D005               	bra	i2u964_40
 48098  015BAA                     i2u964_47:
 48099  015BAA  CFF6 FFE9          	movff	tblptrl,fsr0l
 48100  015BAE  CFF7 FFEA          	movff	tblptrh,fsr0h
 48101  015BB2  50EF               	movf	indf0,w,c
 48102  015BB4                     i2u964_40:
 48103  015BB4  6E0E               	movwf	_inPipes+4,c	;volatile
 48104                           
 48105                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 48106  015BB6  0E03               	movlw	3
 48107  015BB8  240A               	addwf	_inPipes,w,c	;volatile
 48108  015BBA  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 48109  015BBC  0E00               	movlw	0
 48110  015BBE  200B               	addwfc	_inPipes+1,w,c	;volatile
 48111  015BC0  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 48112  015BC2  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 48113  015BC6  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 48114  015BCA  0E00               	movlw	low (__mediumconst shr (0+16))
 48115  015BCC  6EF8               	movwf	tblptru,c
 48116  015BCE  0E0E               	movlw	(high __ramtop+-1)
 48117  015BD0  64F7               	cpfsgt	tblptrh,c
 48118  015BD2  D003               	bra	i2u965_47
 48119  015BD4  0008               	tblrd		*
 48120  015BD6  50F5               	movf	tablat,w,c
 48121  015BD8  D005               	bra	i2u965_40
 48122  015BDA                     i2u965_47:
 48123  015BDA  CFF6 FFE9          	movff	tblptrl,fsr0l
 48124  015BDE  CFF7 FFEA          	movff	tblptrh,fsr0h
 48125  015BE2  50EF               	movf	indf0,w,c
 48126  015BE4                     i2u965_40:
 48127  015BE4  6E0F               	movwf	_inPipes+5,c	;volatile
 48128                           
 48129                           ;usb_device.c: 2078: }
 48130  015BE6  0012               	return	
 48131  015BE8                     i2l12132:
 48132                           
 48133                           ;usb_device.c: 2079: else
 48134                           ;usb_device.c: 2080: {
 48135                           ;usb_device.c: 2081: inPipes[0].info.Val = 0;
 48136  015BE8  0E00               	movlw	0
 48137  015BEA  6E0D               	movwf	_inPipes+3,c	;volatile
 48138                           
 48139                           ;usb_device.c: 2082: }
 48140                           ;usb_device.c: 2083: break;
 48141  015BEC  0012               	return	
 48142  015BEE                     i2l12134:
 48143                           
 48144                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 48145  015BEE  0E04               	movlw	4
 48146  015BF0  010D               	movlb	13	; () banked
 48147  015BF2  6132               	cpfslt	50,b	;volatile
 48148  015BF4  D028               	goto	i2l12140
 48149                           
 48150                           ; BSR set to: 13
 48151                           ;usb_device.c: 2089: {
 48152                           ;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 48153  015BF6  010D               	movlb	13	; () banked
 48154  015BF8  5132               	movf	50,w,b	;volatile
 48155  015BFA  0D02               	mullw	2
 48156  015BFC  0EA1               	movlw	low _USB_SD_Ptr
 48157  015BFE  24F3               	addwf	prodl,w,c
 48158  015C00  6EF6               	movwf	tblptrl,c
 48159  015C02  0EFE               	movlw	high _USB_SD_Ptr
 48160  015C04  20F4               	addwfc	prodh,w,c
 48161  015C06  6EF7               	movwf	tblptrh,c
 48162  015C08                     	if	1	;There are 3 active tblptr bytes
 48163  015C08  6AF8               	clrf	tblptru,c
 48164  015C0A  0E00               	movlw	low (__mediumconst shr (0+16))
 48165  015C0C  22F8               	addwfc	tblptru,f,c
 48166  015C0E                     	endif
 48167  015C0E  0009               	tblrd		*+
 48168  015C10  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 48169  015C14  000A               	tblrd		*-
 48170  015C16  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 48171                           
 48172                           ; BSR set to: 13
 48173                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 48174  015C1A  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 48175  015C1E  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 48176  015C22  0E00               	movlw	low (__mediumconst shr (0+16))
 48177  015C24  6EF8               	movwf	tblptru,c
 48178  015C26  0E0E               	movlw	(high __ramtop+-1)
 48179  015C28  64F7               	cpfsgt	tblptrh,c
 48180  015C2A  D003               	bra	i2u967_47
 48181  015C2C  0008               	tblrd		*
 48182  015C2E  50F5               	movf	tablat,w,c
 48183  015C30  D005               	bra	i2u967_40
 48184  015C32                     i2u967_47:
 48185  015C32  CFF6 FFE9          	movff	tblptrl,fsr0l
 48186  015C36  CFF7 FFEA          	movff	tblptrh,fsr0h
 48187  015C3A  50EF               	movf	indf0,w,c
 48188  015C3C                     i2u967_40:
 48189  015C3C  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 48190  015C3E  502E               	movf	??_USBStdGetDscHandler,w,c
 48191  015C40  6E0E               	movwf	_inPipes+4,c	;volatile
 48192  015C42  6A0F               	clrf	_inPipes+5,c	;volatile
 48193                           
 48194                           ;usb_device.c: 2094: }
 48195  015C44  0012               	return	
 48196  015C46                     i2l12140:
 48197                           
 48198                           ;usb_device.c: 2104: else
 48199                           ;usb_device.c: 2105: {
 48200                           ;usb_device.c: 2106: inPipes[0].info.Val = 0;
 48201  015C46  0E00               	movlw	0
 48202  015C48  6E0D               	movwf	_inPipes+3,c	;volatile
 48203                           
 48204                           ;usb_device.c: 2107: }
 48205                           ;usb_device.c: 2108: break;
 48206  015C4A  0012               	return	
 48207  015C4C                     i2l12142:
 48208                           
 48209                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 48210  015C4C  0E00               	movlw	0
 48211  015C4E  6E0D               	movwf	_inPipes+3,c	;volatile
 48212                           
 48213                           ;usb_device.c: 2112: }
 48214                           
 48215                           ;usb_device.c: 2111: break;
 48216  015C50  0012               	return	
 48217  015C52                     i2l12146:
 48218  015C52  010D               	movlb	13	; () banked
 48219  015C54  5133               	movf	51,w,b	;volatile
 48220                           
 48221                           ; Switch size 1, requested type "space"
 48222                           ; Number of cases is 3, Range of values is 1 to 3
 48223                           ; switch strategies available:
 48224                           ; Name         Instructions Cycles
 48225                           ; simple_byte           10     6 (average)
 48226                           ;	Chosen strategy is simple_byte
 48227  015C56  0A01               	xorlw	1	; case 1
 48228  015C58  B4D8               	btfsc	status,2,c
 48229  015C5A  D776               	goto	i2l12120
 48230  015C5C  0A03               	xorlw	3	; case 2
 48231  015C5E  B4D8               	btfsc	status,2,c
 48232  015C60  D77C               	goto	i2l12124
 48233  015C62  0A01               	xorlw	1	; case 3
 48234  015C64  B4D8               	btfsc	status,2,c
 48235  015C66  D7C3               	goto	i2l12134
 48236  015C68  D7F1               	goto	i2l12142
 48237  015C6A                     __end_of_USBStdGetDscHandler:
 48238                           	opt stack 0
 48239                           tosu	equ	0xFFF
 48240                           tosh	equ	0xFFE
 48241                           tosl	equ	0xFFD
 48242                           pclatu	equ	0xFFB
 48243                           pclath	equ	0xFFA
 48244                           tblptru	equ	0xFF8
 48245                           tblptrh	equ	0xFF7
 48246                           tblptrl	equ	0xFF6
 48247                           tablat	equ	0xFF5
 48248                           prodh	equ	0xFF4
 48249                           prodl	equ	0xFF3
 48250                           intcon	equ	0xFF2
 48251                           intcon2	equ	0xFF1
 48252                           intcon3	equ	0xFF0
 48253                           indf0	equ	0xFEF
 48254                           postinc0	equ	0xFEE
 48255                           fsr0h	equ	0xFEA
 48256                           fsr0l	equ	0xFE9
 48257                           wreg	equ	0xFE8
 48258                           indf1	equ	0xFE7
 48259                           postinc1	equ	0xFE6
 48260                           postdec1	equ	0xFE5
 48261                           plusw1	equ	0xFE3
 48262                           fsr1h	equ	0xFE2
 48263                           fsr1l	equ	0xFE1
 48264                           indf2	equ	0xFDF
 48265                           postinc2	equ	0xFDE
 48266                           postdec2	equ	0xFDD
 48267                           plusw2	equ	0xFDB
 48268                           fsr2h	equ	0xFDA
 48269                           fsr2l	equ	0xFD9
 48270                           status	equ	0xFD8
 48271                           
 48272 ;; *************** function _USBStdFeatureReqHandler *****************
 48273 ;; Defined at:
 48274 ;;		line 2756 in file "usb_device.c"
 48275 ;; Parameters:    Size  Location     Type
 48276 ;;		None
 48277 ;; Auto vars:     Size  Location     Type
 48278 ;;  p               2   27[COMRAM] PTR struct __BDT
 48279 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 48280 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 48281 ;;		 -> UEP0(1), 
 48282 ;;  current_ep_d    1   26[COMRAM] struct .
 48283 ;; Return value:  Size  Location     Type
 48284 ;;                  1    wreg      void 
 48285 ;; Registers used:
 48286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 48287 ;; Tracked objects:
 48288 ;;		On entry : 0/0
 48289 ;;		On exit  : 0/0
 48290 ;;		Unchanged: 0/0
 48291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48293 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48294 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48295 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48296 ;;Total ram usage:        6 bytes
 48297 ;; Hardware stack levels used:    1
 48298 ;; Hardware stack levels required when called:    4
 48299 ;; This function calls:
 48300 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48301 ;; This function is called by:
 48302 ;;		_USBCheckStdRequest
 48303 ;; This function uses a non-reentrant model
 48304 ;;
 48305                           
 48306                           	psect	text230
 48307  013B1C                     __ptext230:
 48308                           	opt stack 0
 48309  013B1C                     _USBStdFeatureReqHandler:
 48310                           	opt stack 9
 48311                           
 48312                           ;usb_device.c: 2758: BDT_ENTRY *p;
 48313                           ;usb_device.c: 2759: EP_STATUS current_ep_data;
 48314                           ;usb_device.c: 2763: unsigned char* pUEP;
 48315                           ;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&
 48316                           ;usb_device.c: 2802: (SetupPkt.Recipient == (0x00)))
 48317                           
 48318                           ;incstack = 0
 48319  013B1C  010D               	movlb	13	; () banked
 48320  013B1E  0532               	decf	50,w,b	;volatile
 48321  013B20  A4D8               	btfss	status,2,c
 48322  013B22  D010               	goto	i2l373
 48323                           
 48324                           ; BSR set to: 13
 48325  013B24  010D               	movlb	13	; () banked
 48326  013B26  5130               	movf	48,w,b	;volatile
 48327  013B28  0B1F               	andlw	31
 48328  013B2A  0900               	iorlw	0
 48329  013B2C  A4D8               	btfss	status,2,c
 48330  013B2E  D00A               	goto	i2l373
 48331                           
 48332                           ; BSR set to: 13
 48333                           ;usb_device.c: 2803: {
 48334                           ;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 48335  013B30  8E0D               	bsf	_inPipes+3,7,c	;volatile
 48336                           
 48337                           ; BSR set to: 13
 48338                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 48339  013B32  0E03               	movlw	3
 48340  013B34  010D               	movlb	13	; () banked
 48341  013B36  1931               	xorwf	49,w,b	;volatile
 48342  013B38  A4D8               	btfss	status,2,c
 48343  013B3A  D002               	goto	i2l18248
 48344                           
 48345                           ; BSR set to: 13
 48346                           ;usb_device.c: 2806: RemoteWakeup = 1;
 48347  013B3C  0E01               	movlw	1
 48348  013B3E  D001               	goto	L57
 48349  013B40                     i2l18248:
 48350                           
 48351                           ; BSR set to: 13
 48352                           ;usb_device.c: 2807: else
 48353                           ;usb_device.c: 2808: RemoteWakeup = 0;
 48354  013B40  0E00               	movlw	0
 48355  013B42                     L57:
 48356  013B42  6E28               	movwf	_RemoteWakeup,c	;volatile
 48357  013B44                     i2l373:
 48358                           
 48359                           ; BSR set to: 13
 48360                           ;usb_device.c: 2809: }
 48361                           ;usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&
 48362                           ;usb_device.c: 2813: (SetupPkt.Recipient == (0x02))&&
 48363                           ;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 48364                           ;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 48365  013B44  010D               	movlb	13	; () banked
 48366  013B46  5132               	movf	50,w,b	;volatile
 48367  013B48  A4D8               	btfss	status,2,c
 48368  013B4A  0012               	return	
 48369                           
 48370                           ; BSR set to: 13
 48371  013B4C  010D               	movlb	13	; () banked
 48372  013B4E  5130               	movf	48,w,b	;volatile
 48373  013B50  0B1F               	andlw	31
 48374  013B52  0A02               	xorlw	2
 48375  013B54  A4D8               	btfss	status,2,c
 48376  013B56  0012               	return	
 48377                           
 48378                           ; BSR set to: 13
 48379  013B58  010D               	movlb	13	; () banked
 48380  013B5A  5134               	movf	52,w,b	;volatile
 48381  013B5C  0B0F               	andlw	15
 48382  013B5E  0900               	iorlw	0
 48383  013B60  B4D8               	btfsc	status,2,c
 48384  013B62  0012               	return	
 48385                           
 48386                           ; BSR set to: 13
 48387  013B64  010D               	movlb	13	; () banked
 48388  013B66  5134               	movf	52,w,b	;volatile
 48389  013B68  0B0F               	andlw	15
 48390  013B6A  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48391  013B6C  0E03               	movlw	3
 48392  013B6E  6045               	cpfslt	??_USBStdFeatureReqHandler,c
 48393  013B70  0012               	return	
 48394                           
 48395                           ; BSR set to: 13
 48396  013B72  0E20               	movlw	32
 48397  013B74  182B               	xorwf	_USBDeviceState,w,c	;volatile
 48398  013B76  A4D8               	btfss	status,2,c
 48399  013B78  0012               	return	
 48400                           
 48401                           ; BSR set to: 13
 48402                           ;usb_device.c: 2816: {
 48403                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 48404  013B7A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 48405                           
 48406                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 48407  013B7C  010D               	movlb	13	; () banked
 48408  013B7E  BF34               	btfsc	52,7,b	;volatile
 48409  013B80  D01B               	goto	i2l18262
 48410                           
 48411                           ; BSR set to: 13
 48412                           ;usb_device.c: 2823: {
 48413                           ;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 48414  013B82  010D               	movlb	13	; () banked
 48415  013B84  5134               	movf	52,w,b	;volatile
 48416  013B86  0B0F               	andlw	15
 48417  013B88  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48418  013B8A  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48419  013B8C  0D02               	mullw	2
 48420  013B8E  0ED3               	movlw	low _pBDTEntryOut
 48421  013B90  24F3               	addwf	prodl,w,c
 48422  013B92  6ED9               	movwf	fsr2l,c
 48423  013B94  0E01               	movlw	high _pBDTEntryOut
 48424  013B96  20F4               	addwfc	prodh,w,c
 48425  013B98  6EDA               	movwf	fsr2h,c
 48426  013B9A  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 48427  013B9E  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 48428                           
 48429                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 48430  013BA2  010D               	movlb	13	; () banked
 48431  013BA4  5134               	movf	52,w,b	;volatile
 48432  013BA6  0B0F               	andlw	15
 48433  013BA8  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48434  013BAA  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48435  013BAC  0D01               	mullw	1
 48436  013BAE  0EE1               	movlw	low _ep_data_out
 48437  013BB0  24F3               	addwf	prodl,w,c
 48438  013BB2  6ED9               	movwf	fsr2l,c
 48439  013BB4  0E01               	movlw	high _ep_data_out
 48440  013BB6  D01A               	goto	L58
 48441  013BB8                     i2l18262:
 48442                           
 48443                           ; BSR set to: 13
 48444                           ;usb_device.c: 2827: else
 48445                           ;usb_device.c: 2828: {
 48446                           ;usb_device.c: 2829: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 48447  013BB8  010D               	movlb	13	; () banked
 48448  013BBA  5134               	movf	52,w,b	;volatile
 48449  013BBC  0B0F               	andlw	15
 48450  013BBE  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48451  013BC0  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48452  013BC2  0D02               	mullw	2
 48453  013BC4  0E10               	movlw	low _pBDTEntryIn
 48454  013BC6  24F3               	addwf	prodl,w,c
 48455  013BC8  6ED9               	movwf	fsr2l,c
 48456  013BCA  0E00               	movlw	high _pBDTEntryIn
 48457  013BCC  20F4               	addwfc	prodh,w,c
 48458  013BCE  6EDA               	movwf	fsr2h,c
 48459  013BD0  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 48460  013BD4  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 48461                           
 48462                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 48463  013BD8  010D               	movlb	13	; () banked
 48464  013BDA  5134               	movf	52,w,b	;volatile
 48465  013BDC  0B0F               	andlw	15
 48466  013BDE  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48467  013BE0  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48468  013BE2  0D01               	mullw	1
 48469  013BE4  0EE4               	movlw	low _ep_data_in
 48470  013BE6  24F3               	addwf	prodl,w,c
 48471  013BE8  6ED9               	movwf	fsr2l,c
 48472  013BEA  0E01               	movlw	high _ep_data_in
 48473  013BEC                     L58:
 48474  013BEC  20F4               	addwfc	prodh,w,c
 48475  013BEE  6EDA               	movwf	fsr2h,c
 48476  013BF0  50DF               	movf	indf2,w,c
 48477  013BF2  6E48               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 48478                           
 48479                           ; BSR set to: 13
 48480                           ;usb_device.c: 2831: }
 48481                           ;usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 48482                           
 48483                           ; BSR set to: 13
 48484  013BF4  B048               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 48485  013BF6  D006               	goto	i2l18268
 48486                           
 48487                           ; BSR set to: 13
 48488                           ;usb_device.c: 2838: {
 48489                           ;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 48490  013BF8  0EFB               	movlw	251
 48491  013BFA  1449               	andwf	USBStdFeatureReqHandler@p,w,c
 48492  013BFC  6E49               	movwf	USBStdFeatureReqHandler@p,c
 48493  013BFE  0EFF               	movlw	255
 48494  013C00  144A               	andwf	USBStdFeatureReqHandler@p+1,w,c
 48495  013C02  D004               	goto	L59
 48496  013C04                     i2l18268:
 48497                           
 48498                           ; BSR set to: 13
 48499                           ;usb_device.c: 2841: else
 48500                           ;usb_device.c: 2842: {
 48501                           ;usb_device.c: 2843: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 48502  013C04  0E04               	movlw	4
 48503  013C06  1049               	iorwf	USBStdFeatureReqHandler@p,w,c
 48504  013C08  6E49               	movwf	USBStdFeatureReqHandler@p,c
 48505  013C0A  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 48506  013C0C                     L59:
 48507  013C0C  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 48508                           
 48509                           ; BSR set to: 13
 48510                           ;usb_device.c: 2844: }
 48511                           ;usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 48512                           
 48513                           ; BSR set to: 13
 48514  013C0E  010D               	movlb	13	; () banked
 48515  013C10  BF34               	btfsc	52,7,b	;volatile
 48516  013C12  D00B               	goto	i2l18274
 48517                           
 48518                           ; BSR set to: 13
 48519                           ;usb_device.c: 2850: {
 48520                           ;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 48521  013C14  010D               	movlb	13	; () banked
 48522  013C16  5134               	movf	52,w,b	;volatile
 48523  013C18  0B0F               	andlw	15
 48524  013C1A  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48525  013C1C  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48526  013C1E  0D02               	mullw	2
 48527  013C20  0ED3               	movlw	low _pBDTEntryOut
 48528  013C22  24F3               	addwf	prodl,w,c
 48529  013C24  6ED9               	movwf	fsr2l,c
 48530  013C26  0E01               	movlw	high _pBDTEntryOut
 48531  013C28  D00A               	goto	L60
 48532  013C2A                     i2l18274:
 48533                           
 48534                           ; BSR set to: 13
 48535                           ;usb_device.c: 2853: else
 48536                           ;usb_device.c: 2854: {
 48537                           ;usb_device.c: 2855: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 48538  013C2A  010D               	movlb	13	; () banked
 48539  013C2C  5134               	movf	52,w,b	;volatile
 48540  013C2E  0B0F               	andlw	15
 48541  013C30  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48542  013C32  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48543  013C34  0D02               	mullw	2
 48544  013C36  0E10               	movlw	low _pBDTEntryIn
 48545  013C38  24F3               	addwf	prodl,w,c
 48546  013C3A  6ED9               	movwf	fsr2l,c
 48547  013C3C  0E00               	movlw	high _pBDTEntryIn
 48548  013C3E                     L60:
 48549  013C3E  20F4               	addwfc	prodh,w,c
 48550  013C40  6EDA               	movwf	fsr2h,c
 48551  013C42  C049  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 48552  013C46  C04A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 48553                           
 48554                           ; BSR set to: 13
 48555                           ;usb_device.c: 2856: }
 48556                           ;usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 48557                           
 48558                           ; BSR set to: 13
 48559  013C4A  0E03               	movlw	3
 48560  013C4C  010D               	movlb	13	; () banked
 48561  013C4E  1931               	xorwf	49,w,b	;volatile
 48562  013C50  A4D8               	btfss	status,2,c
 48563  013C52  D02F               	goto	i2l18290
 48564                           
 48565                           ; BSR set to: 13
 48566                           ;usb_device.c: 2860: {
 48567                           ;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 48568  013C54  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 48569  013C58  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 48570  013C5C  AEDF               	btfss	indf2,7,c
 48571  013C5E  D01C               	goto	i2l18286
 48572                           
 48573                           ; BSR set to: 13
 48574                           ;usb_device.c: 2862: {
 48575                           ;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 48576  013C60  010D               	movlb	13	; () banked
 48577  013C62  BF34               	btfsc	52,7,b	;volatile
 48578  013C64  D00B               	goto	i2l18284
 48579                           
 48580                           ; BSR set to: 13
 48581                           ;usb_device.c: 2866: {
 48582                           ;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 48583  013C66  010D               	movlb	13	; () banked
 48584  013C68  5134               	movf	52,w,b	;volatile
 48585  013C6A  0B0F               	andlw	15
 48586  013C6C  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48587  013C6E  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48588  013C70  0D01               	mullw	1
 48589  013C72  0EE1               	movlw	low _ep_data_out
 48590  013C74  24F3               	addwf	prodl,w,c
 48591  013C76  6ED9               	movwf	fsr2l,c
 48592  013C78  0E01               	movlw	high _ep_data_out
 48593  013C7A  D00A               	goto	L61
 48594  013C7C                     i2l18284:
 48595                           
 48596                           ;usb_device.c: 2869: else
 48597                           ;usb_device.c: 2870: {
 48598                           ;usb_device.c: 2871: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 48599  013C7C  010D               	movlb	13	; () banked
 48600  013C7E  5134               	movf	52,w,b	;volatile
 48601  013C80  0B0F               	andlw	15
 48602  013C82  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48603  013C84  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48604  013C86  0D01               	mullw	1
 48605  013C88  0EE4               	movlw	low _ep_data_in
 48606  013C8A  24F3               	addwf	prodl,w,c
 48607  013C8C  6ED9               	movwf	fsr2l,c
 48608  013C8E  0E01               	movlw	high _ep_data_in
 48609  013C90                     L61:
 48610  013C90  20F4               	addwfc	prodh,w,c
 48611  013C92  6EDA               	movwf	fsr2h,c
 48612  013C94  0101               	movlb	1	; () banked
 48613  013C96  82DF               	bsf	indf2,1,c
 48614  013C98                     i2l18286:
 48615                           
 48616                           ;usb_device.c: 2872: }
 48617                           ;usb_device.c: 2873: }
 48618                           ;usb_device.c: 2876: p->STAT.Val |= 0x04;
 48619  013C98  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 48620  013C9C  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 48621  013CA0  0E00               	movlw	0
 48622  013CA2  84DB               	bsf	plusw2,2,c
 48623                           
 48624                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 48625  013CA4  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 48626  013CA8  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 48627  013CAC  0E00               	movlw	0
 48628  013CAE  8EDB               	bsf	plusw2,7,c
 48629                           
 48630                           ;usb_device.c: 2878: }
 48631  013CB0  0012               	return	
 48632  013CB2                     i2l18290:
 48633                           
 48634                           ;usb_device.c: 2879: else
 48635                           ;usb_device.c: 2880: {
 48636                           ;usb_device.c: 2884: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 48637  013CB2  0E04               	movlw	4
 48638  013CB4  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 48639  013CB6  6E49               	movwf	USBStdFeatureReqHandler@p,c
 48640  013CB8  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 48641  013CBA  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 48642                           
 48643                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 48644  013CBC  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 48645  013CC0  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 48646  013CC4  AEDF               	btfss	indf2,7,c
 48647  013CC6  D01B               	goto	i2l18300
 48648                           
 48649                           ;usb_device.c: 2887: {
 48650                           ;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 48651  013CC8  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 48652  013CCC  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 48653  013CD0  0E7F               	movlw	127
 48654  013CD2  16DF               	andwf	indf2,f,c
 48655                           
 48656                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 48657  013CD4  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 48658  013CD8  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 48659  013CDC  0E00               	movlw	0
 48660  013CDE  8CDB               	bsf	plusw2,6,c
 48661                           
 48662                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 48663  013CE0  0E00               	movlw	0
 48664  013CE2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48665  013CE4  0E05               	movlw	5
 48666  013CE6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48667  013CE8  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 48668  013CEC  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 48669  013CF0  0E00               	movlw	0
 48670  013CF2  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48671  013CF4  0E02               	movlw	2
 48672  013CF6  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48673  013CF8  EC82  F0C4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48674                           
 48675                           ;usb_device.c: 2893: }
 48676  013CFC  D006               	goto	i2l18302
 48677  013CFE                     i2l18300:
 48678                           
 48679                           ;usb_device.c: 2894: else
 48680                           ;usb_device.c: 2895: {
 48681                           ;usb_device.c: 2897: p->STAT.Val |= 0x40;
 48682  013CFE  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 48683  013D02  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 48684  013D06  0E00               	movlw	0
 48685  013D08  8CDB               	bsf	plusw2,6,c
 48686  013D0A                     i2l18302:
 48687                           
 48688                           ;usb_device.c: 2898: }
 48689                           ;usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 48690  013D0A  0E04               	movlw	4
 48691  013D0C  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 48692  013D0E  6E49               	movwf	USBStdFeatureReqHandler@p,c
 48693  013D10  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 48694  013D12  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 48695                           
 48696                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 48697  013D14  B248               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 48698  013D16  D006               	goto	i2l392
 48699  013D18  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 48700  013D1C  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 48701  013D20  AEDF               	btfss	indf2,7,c
 48702  013D22  D031               	goto	i2l18316
 48703  013D24                     i2l392:
 48704                           
 48705                           ;usb_device.c: 2909: {
 48706                           ;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 48707  013D24  010D               	movlb	13	; () banked
 48708  013D26  BF34               	btfsc	52,7,b	;volatile
 48709  013D28  D00B               	goto	i2l18310
 48710                           
 48711                           ; BSR set to: 13
 48712                           ;usb_device.c: 2911: {
 48713                           ;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 48714  013D2A  010D               	movlb	13	; () banked
 48715  013D2C  5134               	movf	52,w,b	;volatile
 48716  013D2E  0B0F               	andlw	15
 48717  013D30  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48718  013D32  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48719  013D34  0D01               	mullw	1
 48720  013D36  0EE1               	movlw	low _ep_data_out
 48721  013D38  24F3               	addwf	prodl,w,c
 48722  013D3A  6ED9               	movwf	fsr2l,c
 48723  013D3C  0E01               	movlw	high _ep_data_out
 48724  013D3E  D00A               	goto	L62
 48725  013D40                     i2l18310:
 48726                           
 48727                           ;usb_device.c: 2914: else
 48728                           ;usb_device.c: 2915: {
 48729                           ;usb_device.c: 2916: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 48730  013D40  010D               	movlb	13	; () banked
 48731  013D42  5134               	movf	52,w,b	;volatile
 48732  013D44  0B0F               	andlw	15
 48733  013D46  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48734  013D48  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48735  013D4A  0D01               	mullw	1
 48736  013D4C  0EE4               	movlw	low _ep_data_in
 48737  013D4E  24F3               	addwf	prodl,w,c
 48738  013D50  6ED9               	movwf	fsr2l,c
 48739  013D52  0E01               	movlw	high _ep_data_in
 48740  013D54                     L62:
 48741  013D54  20F4               	addwfc	prodh,w,c
 48742  013D56  6EDA               	movwf	fsr2h,c
 48743  013D58  0101               	movlb	1	; () banked
 48744  013D5A  92DF               	bcf	indf2,1,c
 48745                           
 48746                           ; BSR set to: 1
 48747                           ;usb_device.c: 2917: }
 48748                           ;usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 48749                           
 48750                           ; BSR set to: 1
 48751  013D5C  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 48752  013D60  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 48753  013D64  0E3B               	movlw	59
 48754  013D66  16DF               	andwf	indf2,f,c
 48755                           
 48756                           ; BSR set to: 1
 48757                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 48758  013D68  0E00               	movlw	0
 48759  013D6A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48760  013D6C  0E05               	movlw	5
 48761  013D6E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48762  013D70  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 48763  013D74  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 48764  013D78  0E00               	movlw	0
 48765  013D7A  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48766  013D7C  0E02               	movlw	2
 48767  013D7E  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48768  013D80  EC82  F0C4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48769                           
 48770                           ;usb_device.c: 2923: }
 48771  013D84  D006               	goto	i2l18318
 48772  013D86                     i2l18316:
 48773                           
 48774                           ;usb_device.c: 2924: else
 48775                           ;usb_device.c: 2925: {
 48776                           ;usb_device.c: 2927: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 48777  013D86  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 48778  013D8A  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 48779  013D8E  0E3B               	movlw	59
 48780  013D90  16DF               	andwf	indf2,f,c
 48781  013D92                     i2l18318:
 48782                           
 48783                           ;usb_device.c: 2928: }
 48784                           ;usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 48785  013D92  010D               	movlb	13	; () banked
 48786  013D94  5134               	movf	52,w,b	;volatile
 48787  013D96  0B0F               	andlw	15
 48788  013D98  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 48789  013D9A  5045               	movf	??_USBStdFeatureReqHandler,w,c
 48790  013D9C  0D01               	mullw	1
 48791  013D9E  0E26               	movlw	38
 48792  013DA0  24F3               	addwf	prodl,w,c
 48793  013DA2  6E46               	movwf	USBStdFeatureReqHandler@pUEP,c
 48794  013DA4  0E0F               	movlw	15
 48795  013DA6  20F4               	addwfc	prodh,w,c
 48796  013DA8  6E47               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 48797                           
 48798                           ; BSR set to: 13
 48799                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 48800  013DAA  C046  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 48801  013DAE  C047  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 48802  013DB2  0EFE               	movlw	254
 48803  013DB4  16DF               	andwf	indf2,f,c
 48804                           
 48805                           ; BSR set to: 13
 48806  013DB6  0012               	return	
 48807  013DB8                     __end_of_USBStdFeatureReqHandler:
 48808                           	opt stack 0
 48809                           tosu	equ	0xFFF
 48810                           tosh	equ	0xFFE
 48811                           tosl	equ	0xFFD
 48812                           pclatu	equ	0xFFB
 48813                           pclath	equ	0xFFA
 48814                           tblptru	equ	0xFF8
 48815                           tblptrh	equ	0xFF7
 48816                           tblptrl	equ	0xFF6
 48817                           tablat	equ	0xFF5
 48818                           prodh	equ	0xFF4
 48819                           prodl	equ	0xFF3
 48820                           intcon	equ	0xFF2
 48821                           intcon2	equ	0xFF1
 48822                           intcon3	equ	0xFF0
 48823                           indf0	equ	0xFEF
 48824                           postinc0	equ	0xFEE
 48825                           fsr0h	equ	0xFEA
 48826                           fsr0l	equ	0xFE9
 48827                           wreg	equ	0xFE8
 48828                           indf1	equ	0xFE7
 48829                           postinc1	equ	0xFE6
 48830                           postdec1	equ	0xFE5
 48831                           plusw1	equ	0xFE3
 48832                           fsr1h	equ	0xFE2
 48833                           fsr1l	equ	0xFE1
 48834                           indf2	equ	0xFDF
 48835                           postinc2	equ	0xFDE
 48836                           postdec2	equ	0xFDD
 48837                           plusw2	equ	0xFDB
 48838                           fsr2h	equ	0xFDA
 48839                           fsr2l	equ	0xFD9
 48840                           status	equ	0xFD8
 48841                           
 48842 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 48843 ;; Defined at:
 48844 ;;		line 54 in file "usb_events.c"
 48845 ;; Parameters:    Size  Location     Type
 48846 ;;  event           2   15[COMRAM] enum E8437
 48847 ;;  pdata           2   17[COMRAM] PTR void 
 48848 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 48849 ;;		 -> BDT(48), 
 48850 ;;  size            2   19[COMRAM] unsigned int 
 48851 ;; Auto vars:     Size  Location     Type
 48852 ;;		None
 48853 ;; Return value:  Size  Location     Type
 48854 ;;                  1    wreg      unsigned char 
 48855 ;; Registers used:
 48856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 48857 ;; Tracked objects:
 48858 ;;		On entry : 0/0
 48859 ;;		On exit  : 0/0
 48860 ;;		Unchanged: 0/0
 48861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48862 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48864 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48865 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48866 ;;Total ram usage:        8 bytes
 48867 ;; Hardware stack levels used:    1
 48868 ;; Hardware stack levels required when called:    3
 48869 ;; This function calls:
 48870 ;;		_APP_DeviceCustomHIDInitialize
 48871 ;;		_APP_DeviceMSDInitialize
 48872 ;;		_MSDTransferTerminated
 48873 ;;		_USBCheckHIDRequest
 48874 ;;		_USBCheckMSDRequest
 48875 ;;		i2_SYSTEM_Initialize
 48876 ;; This function is called by:
 48877 ;;		_USBDeviceTasks
 48878 ;;		_USBStdSetCfgHandler
 48879 ;;		_USBSuspend
 48880 ;;		_USBWakeFromSuspend
 48881 ;;		_USBCtrlTrfSetupHandler
 48882 ;;		_USBCheckStdRequest
 48883 ;;		_USBStdFeatureReqHandler
 48884 ;; This function uses a non-reentrant model
 48885 ;;
 48886                           
 48887                           	psect	text231
 48888  018904                     __ptext231:
 48889                           	opt stack 0
 48890  018904                     _USER_USB_CALLBACK_EVENT_HANDLER:
 48891                           	opt stack 13
 48892                           
 48893                           ;usb_events.c: 56: switch((int)event)
 48894                           
 48895                           ;incstack = 0
 48896  018904  D019               	goto	i2l17896
 48897  018906                     i2l17880:
 48898                           
 48899                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 48900  018906  0E01               	movlw	1
 48901  018908  ECB7  F0CD         	call	i2_SYSTEM_Initialize
 48902                           
 48903                           ;usb_events.c: 79: break;
 48904  01890C  0012               	return	
 48905  01890E                     i2l17882:
 48906                           
 48907                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 48908  01890E  0E02               	movlw	2
 48909  018910  ECB7  F0CD         	call	i2_SYSTEM_Initialize
 48910                           
 48911                           ;usb_events.c: 90: break;
 48912  018914  0012               	return	
 48913  018916                     i2l17884:
 48914                           
 48915                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 48916  018916  EC04  F0D1         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 48917                           
 48918                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 48919  01891A  EC9C  F0D5         	call	_APP_DeviceMSDInitialize	;wreg free
 48920                           
 48921                           ;usb_events.c: 100: break;
 48922                           
 48923                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 48924                           
 48925                           ;usb_events.c: 97: break;
 48926  01891E  0012               	return	
 48927  018920                     i2l17888:
 48928                           
 48929                           ;usb_events.c: 105: USBCheckHIDRequest();
 48930  018920  ECCE  F0B7         	call	_USBCheckHIDRequest	;wreg free
 48931                           
 48932                           ;usb_events.c: 108: USBCheckMSDRequest();
 48933  018924  EC13  F0B9         	call	_USBCheckMSDRequest	;wreg free
 48934                           
 48935                           ;usb_events.c: 112: break;
 48936                           
 48937                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 48938                           
 48939                           ;usb_events.c: 109: break;
 48940  018928  0012               	return	
 48941  01892A                     i2l17892:
 48942                           
 48943                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 48944  01892A  C03F  F039         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 48945  01892E  C040  F03A         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 48946  018932  EC8C  F0CD         	call	_MSDTransferTerminated	;wreg free
 48947                           
 48948                           ;usb_events.c: 129: }
 48949                           
 48950                           ;usb_events.c: 128: break;
 48951                           
 48952                           ;usb_events.c: 127: default:
 48953                           
 48954                           ;usb_events.c: 125: break;
 48955  018936  0012               	return	
 48956  018938                     i2l17896:
 48957  018938  C03D  F043         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 48958  01893C  C03E  F044         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 48959                           
 48960                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 48961                           ; Switch size 1, requested type "space"
 48962                           ; Number of cases is 2, Range of values is 0 to 127
 48963                           ; switch strategies available:
 48964                           ; Name         Instructions Cycles
 48965                           ; simple_byte            7     4 (average)
 48966                           ;	Chosen strategy is simple_byte
 48967  018940  5044               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 48968  018942  0A00               	xorlw	0	; case 0
 48969  018944  B4D8               	btfsc	status,2,c
 48970  018946  D004               	goto	i2l23114
 48971  018948  0A7F               	xorlw	127	; case 127
 48972  01894A  A4D8               	btfss	status,2,c
 48973  01894C  0012               	return	
 48974  01894E  D01A               	goto	i2l23116
 48975  018950                     i2l23114:
 48976                           
 48977                           ; Switch size 1, requested type "space"
 48978                           ; Number of cases is 8, Range of values is 1 to 117
 48979                           ; switch strategies available:
 48980                           ; Name         Instructions Cycles
 48981                           ; simple_byte           25    13 (average)
 48982                           ;	Chosen strategy is simple_byte
 48983  018950  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 48984  018952  0A01               	xorlw	1	; case 1
 48985  018954  B4D8               	btfsc	status,2,c
 48986  018956  D7DF               	goto	i2l17884
 48987  018958  0A03               	xorlw	3	; case 2
 48988  01895A  B4D8               	btfsc	status,2,c
 48989  01895C  0012               	return	
 48990  01895E  0A01               	xorlw	1	; case 3
 48991  018960  B4D8               	btfsc	status,2,c
 48992  018962  D7DE               	goto	i2l17888
 48993  018964  0A06               	xorlw	6	; case 5
 48994  018966  B4D8               	btfsc	status,2,c
 48995  018968  D7E0               	goto	i2l17892
 48996  01896A  0A77               	xorlw	119	; case 114
 48997  01896C  B4D8               	btfsc	status,2,c
 48998  01896E  0012               	return	
 48999  018970  0A01               	xorlw	1	; case 115
 49000  018972  B4D8               	btfsc	status,2,c
 49001  018974  0012               	return	
 49002  018976  0A07               	xorlw	7	; case 116
 49003  018978  B4D8               	btfsc	status,2,c
 49004  01897A  D7C9               	goto	i2l17882
 49005  01897C  0A01               	xorlw	1	; case 117
 49006  01897E  A4D8               	btfss	status,2,c
 49007  018980  0012               	return	
 49008  018982  D7C1               	goto	i2l17880
 49009  018984                     i2l23116:
 49010                           
 49011                           ; Switch size 1, requested type "space"
 49012                           ; Number of cases is 1, Range of values is 255 to 255
 49013                           ; switch strategies available:
 49014                           ; Name         Instructions Cycles
 49015                           ; simple_byte            4     3 (average)
 49016                           ;	Chosen strategy is simple_byte
 49017  018984  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 49018  018986  0AFF               	xorlw	255	; case 255
 49019  018988  0012               	return	
 49020  01898A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 49021                           	opt stack 0
 49022                           tosu	equ	0xFFF
 49023                           tosh	equ	0xFFE
 49024                           tosl	equ	0xFFD
 49025                           pclatu	equ	0xFFB
 49026                           pclath	equ	0xFFA
 49027                           tblptru	equ	0xFF8
 49028                           tblptrh	equ	0xFF7
 49029                           tblptrl	equ	0xFF6
 49030                           tablat	equ	0xFF5
 49031                           prodh	equ	0xFF4
 49032                           prodl	equ	0xFF3
 49033                           intcon	equ	0xFF2
 49034                           intcon2	equ	0xFF1
 49035                           intcon3	equ	0xFF0
 49036                           indf0	equ	0xFEF
 49037                           postinc0	equ	0xFEE
 49038                           fsr0h	equ	0xFEA
 49039                           fsr0l	equ	0xFE9
 49040                           wreg	equ	0xFE8
 49041                           indf1	equ	0xFE7
 49042                           postinc1	equ	0xFE6
 49043                           postdec1	equ	0xFE5
 49044                           plusw1	equ	0xFE3
 49045                           fsr1h	equ	0xFE2
 49046                           fsr1l	equ	0xFE1
 49047                           indf2	equ	0xFDF
 49048                           postinc2	equ	0xFDE
 49049                           postdec2	equ	0xFDD
 49050                           plusw2	equ	0xFDB
 49051                           fsr2h	equ	0xFDA
 49052                           fsr2l	equ	0xFD9
 49053                           status	equ	0xFD8
 49054                           
 49055 ;; *************** function i2_SYSTEM_Initialize *****************
 49056 ;; Defined at:
 49057 ;;		line 146 in file "system.c"
 49058 ;; Parameters:    Size  Location     Type
 49059 ;;  state           1    wreg     enum E8228
 49060 ;; Auto vars:     Size  Location     Type
 49061 ;;  state           1    4[COMRAM] enum E8228
 49062 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 49063 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 49064 ;; Return value:  Size  Location     Type
 49065 ;;                  1    wreg      void 
 49066 ;; Registers used:
 49067 ;;		wreg, status,2, status,0
 49068 ;; Tracked objects:
 49069 ;;		On entry : 0/0
 49070 ;;		On exit  : 0/0
 49071 ;;		Unchanged: 0/0
 49072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49074 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49076 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49077 ;;Total ram usage:        5 bytes
 49078 ;; Hardware stack levels used:    1
 49079 ;; This function calls:
 49080 ;;		Nothing
 49081 ;; This function is called by:
 49082 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49083 ;; This function uses a non-reentrant model
 49084 ;;
 49085                           
 49086                           	psect	text232
 49087  019B6E                     __ptext232:
 49088                           	opt stack 0
 49089  019B6E                     i2_SYSTEM_Initialize:
 49090                           	opt stack 15
 49091                           
 49092                           ;incstack = 0
 49093                           ;i2SYSTEM_Initialize@state stored from wreg
 49094  019B6E  6E32               	movwf	i2SYSTEM_Initialize@state,c
 49095                           
 49096                           ;system.c: 148: switch(state)
 49097  019B70  D01D               	goto	i2l11642
 49098  019B72                     i2l11630:
 49099                           
 49100                           ;system.c: 157: {
 49101                           ;system.c: 158: unsigned int pll_startup_counter = 600;
 49102  019B72  0E02               	movlw	2
 49103  019B74  6E2F               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 49104  019B76  0E58               	movlw	88
 49105  019B78  6E2E               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 49106                           
 49107                           ;system.c: 159: OSCTUNEbits.PLLEN = 1;
 49108  019B7A  8C9B               	bsf	3995,6,c	;volatile
 49109  019B7C                     i2l11634:
 49110  019B7C  062E               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 49111  019B7E  A0D8               	btfss	status,0,c
 49112  019B80  062F               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 49113  019B82  282E               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 49114  019B84  E1FB               	bnz	i2l11634
 49115  019B86  282F               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 49116  019B88  B4D8               	btfsc	status,2,c
 49117  019B8A  0012               	return	
 49118  019B8C  D7F7               	goto	i2l11634
 49119  019B8E                     i2l11636:
 49120                           
 49121                           ;system.c: 185: OSCCON = 0x70;
 49122  019B8E  0E70               	movlw	112
 49123  019B90  6ED3               	movwf	4051,c	;volatile
 49124                           
 49125                           ;system.c: 191: {
 49126                           ;system.c: 192: unsigned int pll_startup_counter = 800;
 49127  019B92  0E03               	movlw	3
 49128  019B94  6E31               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3284+1,c
 49129  019B96  0E20               	movlw	32
 49130  019B98  6E30               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3284,c
 49131  019B9A                     i2l11638:
 49132  019B9A  0630               	decf	i2SYSTEM_Initialize@pll_startup_counter_3284,f,c
 49133  019B9C  A0D8               	btfss	status,0,c
 49134  019B9E  0631               	decf	i2SYSTEM_Initialize@pll_startup_counter_3284+1,f,c
 49135  019BA0  2830               	incf	i2SYSTEM_Initialize@pll_startup_counter_3284,w,c
 49136  019BA2  E1FB               	bnz	i2l11638
 49137  019BA4  2831               	incf	i2SYSTEM_Initialize@pll_startup_counter_3284+1,w,c
 49138  019BA6  B4D8               	btfsc	status,2,c
 49139  019BA8  0012               	return	
 49140  019BAA  D7F7               	goto	i2l11638
 49141  019BAC                     i2l11642:
 49142  019BAC  5032               	movf	i2SYSTEM_Initialize@state,w,c
 49143                           
 49144                           ; Switch size 1, requested type "space"
 49145                           ; Number of cases is 3, Range of values is 0 to 2
 49146                           ; switch strategies available:
 49147                           ; Name         Instructions Cycles
 49148                           ; simple_byte           10     6 (average)
 49149                           ;	Chosen strategy is simple_byte
 49150  019BAE  0A00               	xorlw	0	; case 0
 49151  019BB0  B4D8               	btfsc	status,2,c
 49152  019BB2  D7DF               	goto	i2l11630
 49153  019BB4  0A01               	xorlw	1	; case 1
 49154  019BB6  B4D8               	btfsc	status,2,c
 49155  019BB8  0012               	return	
 49156  019BBA  0A03               	xorlw	3	; case 2
 49157  019BBC  A4D8               	btfss	status,2,c
 49158  019BBE  0012               	return	
 49159  019BC0  D7E6               	goto	i2l11636
 49160  019BC2                     __end_ofi2_SYSTEM_Initialize:
 49161                           	opt stack 0
 49162                           tosu	equ	0xFFF
 49163                           tosh	equ	0xFFE
 49164                           tosl	equ	0xFFD
 49165                           pclatu	equ	0xFFB
 49166                           pclath	equ	0xFFA
 49167                           tblptru	equ	0xFF8
 49168                           tblptrh	equ	0xFF7
 49169                           tblptrl	equ	0xFF6
 49170                           tablat	equ	0xFF5
 49171                           prodh	equ	0xFF4
 49172                           prodl	equ	0xFF3
 49173                           intcon	equ	0xFF2
 49174                           intcon2	equ	0xFF1
 49175                           intcon3	equ	0xFF0
 49176                           indf0	equ	0xFEF
 49177                           postinc0	equ	0xFEE
 49178                           fsr0h	equ	0xFEA
 49179                           fsr0l	equ	0xFE9
 49180                           wreg	equ	0xFE8
 49181                           indf1	equ	0xFE7
 49182                           postinc1	equ	0xFE6
 49183                           postdec1	equ	0xFE5
 49184                           plusw1	equ	0xFE3
 49185                           fsr1h	equ	0xFE2
 49186                           fsr1l	equ	0xFE1
 49187                           indf2	equ	0xFDF
 49188                           postinc2	equ	0xFDE
 49189                           postdec2	equ	0xFDD
 49190                           plusw2	equ	0xFDB
 49191                           fsr2h	equ	0xFDA
 49192                           fsr2l	equ	0xFD9
 49193                           status	equ	0xFD8
 49194                           
 49195 ;; *************** function _USBCheckMSDRequest *****************
 49196 ;; Defined at:
 49197 ;;		line 218 in file "usb_device_msd.c"
 49198 ;; Parameters:    Size  Location     Type
 49199 ;;		None
 49200 ;; Auto vars:     Size  Location     Type
 49201 ;;		None
 49202 ;; Return value:  Size  Location     Type
 49203 ;;                  1    wreg      void 
 49204 ;; Registers used:
 49205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49206 ;; Tracked objects:
 49207 ;;		On entry : 0/0
 49208 ;;		On exit  : 0/0
 49209 ;;		Unchanged: 0/0
 49210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49212 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49214 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49215 ;;Total ram usage:        4 bytes
 49216 ;; Hardware stack levels used:    1
 49217 ;; Hardware stack levels required when called:    1
 49218 ;; This function calls:
 49219 ;;		i2_USBTransferOnePacket
 49220 ;; This function is called by:
 49221 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49222 ;; This function uses a non-reentrant model
 49223 ;;
 49224                           
 49225                           	psect	text233
 49226  017226                     __ptext233:
 49227                           	opt stack 0
 49228  017226                     _USBCheckMSDRequest:
 49229                           	opt stack 14
 49230                           
 49231                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 49232                           
 49233                           ;incstack = 0
 49234  017226  010D               	movlb	13	; () banked
 49235  017228  5130               	movf	48,w,b	;volatile
 49236  01722A  0B1F               	andlw	31
 49237  01722C  06E8               	decf	wreg,f,c
 49238  01722E  A4D8               	btfss	status,2,c
 49239  017230  0012               	return	
 49240                           
 49241                           ; BSR set to: 13
 49242                           ;usb_device_msd.c: 223: }
 49243                           ;usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 49244                           
 49245                           ; BSR set to: 13
 49246                           
 49247                           ; BSR set to: 13
 49248                           ;usb_device_msd.c: 221: {
 49249                           ;usb_device_msd.c: 222: return;
 49250  017232  010D               	movlb	13	; () banked
 49251  017234  5134               	movf	52,w,b	;volatile
 49252  017236  A4D8               	btfss	status,2,c
 49253  017238  0012               	return	
 49254  01723A  D057               	goto	i2l11492
 49255  01723C                     i2l11454:
 49256                           
 49257                           ; BSR set to: 13
 49258                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 49259  01723C  010D               	movlb	13	; () banked
 49260  01723E  5132               	movf	50,w,b	;volatile
 49261  017240  010D               	movlb	13	; () banked
 49262  017242  1133               	iorwf	51,w,b	;volatile
 49263  017244  A4D8               	btfss	status,2,c
 49264  017246  0012               	return	
 49265                           
 49266                           ; BSR set to: 13
 49267  017248  010D               	movlb	13	; () banked
 49268  01724A  5136               	movf	54,w,b	;volatile
 49269  01724C  010D               	movlb	13	; () banked
 49270  01724E  1137               	iorwf	55,w,b	;volatile
 49271  017250  A4D8               	btfss	status,2,c
 49272  017252  0012               	return	
 49273                           
 49274                           ; BSR set to: 13
 49275                           ;usb_device_msd.c: 238: }
 49276                           ;usb_device_msd.c: 246: MSD_State = 0x00;
 49277                           
 49278                           ; BSR set to: 13
 49279                           
 49280                           ; BSR set to: 13
 49281                           ;usb_device_msd.c: 236: {
 49282                           ;usb_device_msd.c: 237: return;
 49283  017254  0E00               	movlw	0
 49284  017256  0100               	movlb	0	; () banked
 49285  017258  6FE7               	movwf	_MSD_State& (0+255),b
 49286                           
 49287                           ; BSR set to: 0
 49288                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 49289  01725A  0100               	movlb	0	; () banked
 49290  01725C  69E6               	setf	_MSDCommandState& (0+255),b
 49291                           
 49292                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 49293  01725E  0E00               	movlw	0
 49294  017260  0101               	movlb	1	; () banked
 49295  017262  6FF9               	movwf	_MSDReadState& (0+255),b
 49296                           
 49297                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 49298  017264  0E00               	movlw	0
 49299  017266  6E1F               	movwf	_MSDWriteState,c
 49300                           
 49301                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 49302  017268  0E01               	movlw	1
 49303  01726A  0101               	movlb	1	; () banked
 49304  01726C  6FF5               	movwf	_MSDCBWValid& (0+255),b
 49305                           
 49306                           ; BSR set to: 1
 49307                           
 49308                           ; BSR set to: 1
 49309                           
 49310                           ; BSR set to: 1
 49311                           
 49312                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 49313  01726E  C1D7  F039         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2640
 49314  017272  C1D8  F03A         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2640+1
 49315                           
 49316                           ; BSR set to: 1
 49317  017276  5039               	movf	_USBCheckMSDRequest$2640,w,c
 49318  017278  103A               	iorwf	_USBCheckMSDRequest$2640+1,w,c
 49319  01727A  B4D8               	btfsc	status,2,c
 49320  01727C  D00A               	goto	i2l11474
 49321                           
 49322                           ; BSR set to: 1
 49323                           
 49324                           ; BSR set to: 1
 49325                           
 49326                           ; BSR set to: 1
 49327                           
 49328                           ; BSR set to: 1
 49329  01727E  C1D7  F03B         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2641
 49330  017282  C1D8  F03C         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2641+1
 49331                           
 49332                           ; BSR set to: 1
 49333                           
 49334                           ; BSR set to: 1
 49335  017286  C03B  FFD9         	movff	_USBCheckMSDRequest$2641,fsr2l
 49336  01728A  C03C  FFDA         	movff	_USBCheckMSDRequest$2641+1,fsr2h
 49337  01728E  BEDF               	btfsc	indf2,7,c
 49338  017290  D00F               	goto	i2l11476
 49339  017292                     i2l11474:
 49340                           
 49341                           ; BSR set to: 1
 49342                           ;usb_device_msd.c: 256: {
 49343                           ;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,6
      +                          4u);
 49344  017292  0E00               	movlw	0
 49345  017294  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 49346  017296  0E40               	movlw	64
 49347  017298  6E2F               	movwf	i2USBTransferOnePacket@data,c
 49348  01729A  0E0D               	movlw	13
 49349  01729C  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 49350  01729E  0E40               	movlw	64
 49351  0172A0  6E31               	movwf	i2USBTransferOnePacket@len,c
 49352  0172A2  0E02               	movlw	2
 49353  0172A4  EC1E  F0B4         	call	i2_USBTransferOnePacket
 49354  0172A8  C02E  F0DD         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 49355  0172AC  C02F  F0DE         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 49356  0172B0                     i2l11476:
 49357                           
 49358                           ;usb_device_msd.c: 258: }
 49359                           ;usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 49360  0172B0  0E80               	movlw	128
 49361  0172B2  6E0D               	movwf	_inPipes+3,c	;volatile
 49362                           
 49363                           ;usb_device_msd.c: 263: break;
 49364  0172B4  0012               	return	
 49365  0172B6                     i2l11478:
 49366                           
 49367                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 49368  0172B6  010D               	movlb	13	; () banked
 49369  0172B8  5132               	movf	50,w,b	;volatile
 49370  0172BA  010D               	movlb	13	; () banked
 49371  0172BC  1133               	iorwf	51,w,b	;volatile
 49372  0172BE  A4D8               	btfss	status,2,c
 49373  0172C0  0012               	return	
 49374                           
 49375                           ; BSR set to: 13
 49376  0172C2  010D               	movlb	13	; () banked
 49377  0172C4  0536               	decf	54,w,b	;volatile
 49378  0172C6  010D               	movlb	13	; () banked
 49379  0172C8  1137               	iorwf	55,w,b	;volatile
 49380  0172CA  A4D8               	btfss	status,2,c
 49381  0172CC  0012               	return	
 49382                           
 49383                           ; BSR set to: 13
 49384                           ;usb_device_msd.c: 271: }
 49385                           ;usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 49386                           
 49387                           ; BSR set to: 13
 49388                           
 49389                           ; BSR set to: 13
 49390                           ;usb_device_msd.c: 269: {
 49391                           ;usb_device_msd.c: 270: break;
 49392  0172CE  0E00               	movlw	0
 49393  0172D0  010D               	movlb	13	; () banked
 49394  0172D2  6F38               	movwf	56,b	;volatile
 49395                           
 49396                           ; BSR set to: 13
 49397                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 49398  0172D4  0E38               	movlw	56
 49399  0172D6  6E0A               	movwf	_inPipes,c	;volatile
 49400  0172D8  0E0D               	movlw	13
 49401  0172DA  6E0B               	movwf	_inPipes+1,c	;volatile
 49402                           
 49403                           ; BSR set to: 13
 49404  0172DC  0E00               	movlw	0
 49405  0172DE  6E0F               	movwf	_inPipes+5,c	;volatile
 49406  0172E0  0E01               	movlw	1
 49407  0172E2  6E0E               	movwf	_inPipes+4,c	;volatile
 49408                           
 49409                           ; BSR set to: 13
 49410  0172E4  0EC1               	movlw	193
 49411  0172E6  6E0D               	movwf	_inPipes+3,c	;volatile
 49412                           
 49413                           ; BSR set to: 13
 49414                           ;usb_device_msd.c: 278: }
 49415                           
 49416                           ;usb_device_msd.c: 277: break;
 49417  0172E8  0012               	return	
 49418  0172EA                     i2l11492:
 49419                           
 49420                           ; BSR set to: 13
 49421  0172EA  010D               	movlb	13	; () banked
 49422  0172EC  5131               	movf	49,w,b	;volatile
 49423                           
 49424                           ; Switch size 1, requested type "space"
 49425                           ; Number of cases is 2, Range of values is 254 to 255
 49426                           ; switch strategies available:
 49427                           ; Name         Instructions Cycles
 49428                           ; simple_byte            7     4 (average)
 49429                           ;	Chosen strategy is simple_byte
 49430  0172EE  0AFE               	xorlw	254	; case 254
 49431  0172F0  B4D8               	btfsc	status,2,c
 49432  0172F2  D7E1               	goto	i2l11478
 49433  0172F4  0A01               	xorlw	1	; case 255
 49434  0172F6  A4D8               	btfss	status,2,c
 49435  0172F8  0012               	return	
 49436  0172FA  D7A0               	goto	i2l11454
 49437  0172FC                     __end_of_USBCheckMSDRequest:
 49438                           	opt stack 0
 49439                           tosu	equ	0xFFF
 49440                           tosh	equ	0xFFE
 49441                           tosl	equ	0xFFD
 49442                           pclatu	equ	0xFFB
 49443                           pclath	equ	0xFFA
 49444                           tblptru	equ	0xFF8
 49445                           tblptrh	equ	0xFF7
 49446                           tblptrl	equ	0xFF6
 49447                           tablat	equ	0xFF5
 49448                           prodh	equ	0xFF4
 49449                           prodl	equ	0xFF3
 49450                           intcon	equ	0xFF2
 49451                           intcon2	equ	0xFF1
 49452                           intcon3	equ	0xFF0
 49453                           indf0	equ	0xFEF
 49454                           postinc0	equ	0xFEE
 49455                           fsr0h	equ	0xFEA
 49456                           fsr0l	equ	0xFE9
 49457                           wreg	equ	0xFE8
 49458                           indf1	equ	0xFE7
 49459                           postinc1	equ	0xFE6
 49460                           postdec1	equ	0xFE5
 49461                           plusw1	equ	0xFE3
 49462                           fsr1h	equ	0xFE2
 49463                           fsr1l	equ	0xFE1
 49464                           indf2	equ	0xFDF
 49465                           postinc2	equ	0xFDE
 49466                           postdec2	equ	0xFDD
 49467                           plusw2	equ	0xFDB
 49468                           fsr2h	equ	0xFDA
 49469                           fsr2l	equ	0xFD9
 49470                           status	equ	0xFD8
 49471                           
 49472 ;; *************** function _USBCheckHIDRequest *****************
 49473 ;; Defined at:
 49474 ;;		line 153 in file "usb_device_hid.c"
 49475 ;; Parameters:    Size  Location     Type
 49476 ;;		None
 49477 ;; Auto vars:     Size  Location     Type
 49478 ;;		None
 49479 ;; Return value:  Size  Location     Type
 49480 ;;                  1    wreg      void 
 49481 ;; Registers used:
 49482 ;;		wreg, status,2, status,0
 49483 ;; Tracked objects:
 49484 ;;		On entry : 0/0
 49485 ;;		On exit  : 0/0
 49486 ;;		Unchanged: 0/0
 49487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49492 ;;Total ram usage:        0 bytes
 49493 ;; Hardware stack levels used:    1
 49494 ;; This function calls:
 49495 ;;		Nothing
 49496 ;; This function is called by:
 49497 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49498 ;; This function uses a non-reentrant model
 49499 ;;
 49500                           
 49501                           	psect	text234
 49502  016F9C                     __ptext234:
 49503                           	opt stack 0
 49504  016F9C                     _USBCheckHIDRequest:
 49505                           	opt stack 15
 49506                           
 49507                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 49508                           
 49509                           ;incstack = 0
 49510  016F9C  010D               	movlb	13	; () banked
 49511  016F9E  5130               	movf	48,w,b	;volatile
 49512  016FA0  0B1F               	andlw	31
 49513  016FA2  06E8               	decf	wreg,f,c
 49514  016FA4  A4D8               	btfss	status,2,c
 49515  016FA6  0012               	return	
 49516                           
 49517                           ; BSR set to: 13
 49518                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 49519                           
 49520                           ; BSR set to: 13
 49521                           
 49522                           ; BSR set to: 13
 49523  016FA8  010D               	movlb	13	; () banked
 49524  016FAA  5134               	movf	52,w,b	;volatile
 49525  016FAC  A4D8               	btfss	status,2,c
 49526  016FAE  0012               	return	
 49527                           
 49528                           ; BSR set to: 13
 49529                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 49530                           
 49531                           ; BSR set to: 13
 49532                           
 49533                           ; BSR set to: 13
 49534  016FB0  0E06               	movlw	6
 49535  016FB2  010D               	movlb	13	; () banked
 49536  016FB4  1931               	xorwf	49,w,b	;volatile
 49537  016FB6  B4D8               	btfsc	status,2,c
 49538  016FB8  D018               	goto	i2l11416
 49539  016FBA  D020               	goto	i2l11418
 49540  016FBC                     i2l11400:
 49541                           
 49542                           ; BSR set to: 13
 49543                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 49544  016FBC  042D               	decf	_USBActiveConfiguration,w,c	;volatile
 49545  016FBE  A4D8               	btfss	status,2,c
 49546  016FC0  D01D               	goto	i2l11418
 49547                           
 49548                           ; BSR set to: 13
 49549                           ;usb_device_hid.c: 169: {
 49550                           ;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t*)&configDescriptor1 + 18
      +                          ; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].info.Val = 0x40 | 0x80 | 0x0
      +                          0; };
 49551  016FC2  0EC7               	movlw	low (_configDescriptor1+18)
 49552  016FC4  6E0A               	movwf	_inPipes,c	;volatile
 49553  016FC6  0EFE               	movlw	high (_configDescriptor1+18)
 49554  016FC8  6E0B               	movwf	_inPipes+1,c	;volatile
 49555                           
 49556                           ; BSR set to: 13
 49557  016FCA  0E00               	movlw	0
 49558  016FCC  6E0F               	movwf	_inPipes+5,c	;volatile
 49559  016FCE  0E09               	movlw	9
 49560  016FD0  D00A               	goto	L63
 49561  016FD2                     i2l11406:
 49562                           
 49563                           ; BSR set to: 13
 49564  016FD2  0EC0               	movlw	192
 49565  016FD4  6E0D               	movwf	_inPipes+3,c	;volatile
 49566                           
 49567                           ; BSR set to: 13
 49568                           ;usb_device_hid.c: 174: }
 49569                           ;usb_device_hid.c: 175: break;
 49570  016FD6  D012               	goto	i2l11418
 49571  016FD8                     i2l11408:
 49572                           
 49573                           ; BSR set to: 13
 49574                           ;usb_device_hid.c: 178: {
 49575                           ;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t*)&hid_rpt01; inPipes[0].
      +                          wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 49576  016FD8  0E7B               	movlw	low _hid_rpt01
 49577  016FDA  6E0A               	movwf	_inPipes,c	;volatile
 49578  016FDC  0EFF               	movlw	high _hid_rpt01
 49579  016FDE  6E0B               	movwf	_inPipes+1,c	;volatile
 49580                           
 49581                           ; BSR set to: 13
 49582  016FE0  0E00               	movlw	0
 49583  016FE2  6E0F               	movwf	_inPipes+5,c	;volatile
 49584  016FE4  0E1D               	movlw	29
 49585  016FE6                     L63:
 49586  016FE6  6E0E               	movwf	_inPipes+4,c	;volatile
 49587  016FE8  D7F4               	goto	i2l11406
 49588  016FEA                     i2l11416:
 49589                           
 49590                           ; BSR set to: 13
 49591  016FEA  010D               	movlb	13	; () banked
 49592  016FEC  5133               	movf	51,w,b	;volatile
 49593                           
 49594                           ; Switch size 1, requested type "space"
 49595                           ; Number of cases is 3, Range of values is 33 to 35
 49596                           ; switch strategies available:
 49597                           ; Name         Instructions Cycles
 49598                           ; simple_byte           10     6 (average)
 49599                           ;	Chosen strategy is simple_byte
 49600  016FEE  0A21               	xorlw	33	; case 33
 49601  016FF0  B4D8               	btfsc	status,2,c
 49602  016FF2  D7E4               	goto	i2l11400
 49603  016FF4  0A03               	xorlw	3	; case 34
 49604  016FF6  B4D8               	btfsc	status,2,c
 49605  016FF8  D7EF               	goto	i2l11408
 49606  016FFA  0A01               	xorlw	1	; case 35
 49607  016FFC                     i2l11418:
 49608                           
 49609                           ; BSR set to: 13
 49610                           ;usb_device_hid.c: 199: }
 49611                           ;usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 49612  016FFC  010D               	movlb	13	; () banked
 49613  016FFE  3930               	swapf	48,w,b	;volatile
 49614  017000  32E8               	rrcf	wreg,f,c
 49615  017002  0B03               	andlw	3
 49616  017004  06E8               	decf	wreg,f,c
 49617  017006  A4D8               	btfss	status,2,c
 49618  017008  0012               	return	
 49619  01700A  D020               	goto	i2l11444
 49620  01700C                     i2l11422:
 49621                           
 49622                           ; BSR set to: 13
 49623                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 49624  01700C  0EFF               	movlw	low _idle_rate
 49625  01700E  6E0A               	movwf	_inPipes,c	;volatile
 49626  017010  0E01               	movlw	high _idle_rate
 49627  017012  6E0B               	movwf	_inPipes+1,c	;volatile
 49628                           
 49629                           ; BSR set to: 13
 49630  017014  0E00               	movlw	0
 49631  017016  6E0F               	movwf	_inPipes+5,c	;volatile
 49632  017018  0E01               	movlw	1
 49633  01701A  6E0E               	movwf	_inPipes+4,c	;volatile
 49634                           
 49635                           ; BSR set to: 13
 49636  01701C  0EC1               	movlw	193
 49637  01701E  6E0D               	movwf	_inPipes+3,c	;volatile
 49638                           
 49639                           ;usb_device_hid.c: 223: break;
 49640  017020  0012               	return	
 49641  017022                     i2l11428:
 49642                           
 49643                           ; BSR set to: 13
 49644                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 49645  017022  0E80               	movlw	128
 49646  017024  6E0D               	movwf	_inPipes+3,c	;volatile
 49647                           
 49648                           ; BSR set to: 13
 49649                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 49650  017026  CD33 F1FF          	movff	3379,_idle_rate	;volatile
 49651                           
 49652                           ;usb_device_hid.c: 227: ;
 49653                           ;usb_device_hid.c: 228: break;
 49654  01702A  0012               	return	
 49655  01702C                     i2l11432:
 49656                           
 49657                           ; BSR set to: 13
 49658                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 49659  01702C  0EFE               	movlw	low _active_protocol
 49660  01702E  6E0A               	movwf	_inPipes,c	;volatile
 49661  017030  0E01               	movlw	high _active_protocol
 49662  017032  6E0B               	movwf	_inPipes+1,c	;volatile
 49663                           
 49664                           ; BSR set to: 13
 49665  017034  0E00               	movlw	0
 49666  017036  6E0F               	movwf	_inPipes+5,c	;volatile
 49667  017038  0E01               	movlw	1
 49668  01703A  6E0E               	movwf	_inPipes+4,c	;volatile
 49669                           
 49670                           ; BSR set to: 13
 49671  01703C  0E81               	movlw	129
 49672  01703E  6E0D               	movwf	_inPipes+3,c	;volatile
 49673                           
 49674                           ;usb_device_hid.c: 234: break;
 49675  017040  0012               	return	
 49676  017042                     i2l11438:
 49677                           
 49678                           ; BSR set to: 13
 49679                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 49680  017042  0E80               	movlw	128
 49681  017044  6E0D               	movwf	_inPipes+3,c	;volatile
 49682                           
 49683                           ; BSR set to: 13
 49684                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 49685  017046  CD32 F1FE          	movff	3378,_active_protocol	;volatile
 49686                           
 49687                           ; BSR set to: 13
 49688                           ;usb_device_hid.c: 239: }
 49689                           
 49690                           ;usb_device_hid.c: 238: break;
 49691  01704A  0012               	return	
 49692  01704C                     i2l11444:
 49693                           
 49694                           ; BSR set to: 13
 49695  01704C  010D               	movlb	13	; () banked
 49696  01704E  5131               	movf	49,w,b	;volatile
 49697                           
 49698                           ; Switch size 1, requested type "space"
 49699                           ; Number of cases is 6, Range of values is 1 to 11
 49700                           ; switch strategies available:
 49701                           ; Name         Instructions Cycles
 49702                           ; simple_byte           19    10 (average)
 49703                           ;	Chosen strategy is simple_byte
 49704  017050  0A01               	xorlw	1	; case 1
 49705  017052  B4D8               	btfsc	status,2,c
 49706  017054  0012               	return	
 49707  017056  0A03               	xorlw	3	; case 2
 49708  017058  B4D8               	btfsc	status,2,c
 49709  01705A  D7D8               	goto	i2l11422
 49710  01705C  0A01               	xorlw	1	; case 3
 49711  01705E  B4D8               	btfsc	status,2,c
 49712  017060  D7E5               	goto	i2l11432
 49713  017062  0A0A               	xorlw	10	; case 9
 49714  017064  B4D8               	btfsc	status,2,c
 49715  017066  0012               	return	
 49716  017068  0A03               	xorlw	3	; case 10
 49717  01706A  B4D8               	btfsc	status,2,c
 49718  01706C  D7DA               	goto	i2l11428
 49719  01706E  0A01               	xorlw	1	; case 11
 49720  017070  A4D8               	btfss	status,2,c
 49721  017072  0012               	return	
 49722  017074  D7E6               	goto	i2l11438
 49723  017076                     __end_of_USBCheckHIDRequest:
 49724                           	opt stack 0
 49725                           tosu	equ	0xFFF
 49726                           tosh	equ	0xFFE
 49727                           tosl	equ	0xFFD
 49728                           pclatu	equ	0xFFB
 49729                           pclath	equ	0xFFA
 49730                           tblptru	equ	0xFF8
 49731                           tblptrh	equ	0xFF7
 49732                           tblptrl	equ	0xFF6
 49733                           tablat	equ	0xFF5
 49734                           prodh	equ	0xFF4
 49735                           prodl	equ	0xFF3
 49736                           intcon	equ	0xFF2
 49737                           intcon2	equ	0xFF1
 49738                           intcon3	equ	0xFF0
 49739                           indf0	equ	0xFEF
 49740                           postinc0	equ	0xFEE
 49741                           fsr0h	equ	0xFEA
 49742                           fsr0l	equ	0xFE9
 49743                           wreg	equ	0xFE8
 49744                           indf1	equ	0xFE7
 49745                           postinc1	equ	0xFE6
 49746                           postdec1	equ	0xFE5
 49747                           plusw1	equ	0xFE3
 49748                           fsr1h	equ	0xFE2
 49749                           fsr1l	equ	0xFE1
 49750                           indf2	equ	0xFDF
 49751                           postinc2	equ	0xFDE
 49752                           postdec2	equ	0xFDD
 49753                           plusw2	equ	0xFDB
 49754                           fsr2h	equ	0xFDA
 49755                           fsr2l	equ	0xFD9
 49756                           status	equ	0xFD8
 49757                           
 49758 ;; *************** function _MSDTransferTerminated *****************
 49759 ;; Defined at:
 49760 ;;		line 1674 in file "usb_device_msd.c"
 49761 ;; Parameters:    Size  Location     Type
 49762 ;;  handle          2   11[COMRAM] PTR void 
 49763 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 49764 ;;		 -> BDT(48), 
 49765 ;; Auto vars:     Size  Location     Type
 49766 ;;		None
 49767 ;; Return value:  Size  Location     Type
 49768 ;;                  1    wreg      void 
 49769 ;; Registers used:
 49770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49771 ;; Tracked objects:
 49772 ;;		On entry : 0/0
 49773 ;;		On exit  : 0/0
 49774 ;;		Unchanged: 0/0
 49775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49776 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49777 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49779 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49780 ;;Total ram usage:        4 bytes
 49781 ;; Hardware stack levels used:    1
 49782 ;; Hardware stack levels required when called:    1
 49783 ;; This function calls:
 49784 ;;		i2_USBStallEndpoint
 49785 ;;		i2_USBTransferOnePacket
 49786 ;; This function is called by:
 49787 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49788 ;; This function uses a non-reentrant model
 49789 ;;
 49790                           
 49791                           	psect	text235
 49792  019B18                     __ptext235:
 49793                           	opt stack 0
 49794  019B18                     _MSDTransferTerminated:
 49795                           	opt stack 14
 49796                           
 49797                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 49798                           
 49799                           ; BSR set to: 13
 49800                           ;incstack = 0
 49801  019B18  0101               	movlb	1	; () banked
 49802  019B1A  51F5               	movf	_MSDCBWValid& (0+255),w,b
 49803  019B1C  A4D8               	btfss	status,2,c
 49804  019B1E  D00B               	goto	i2l11582
 49805                           
 49806                           ; BSR set to: 1
 49807                           ;usb_device_msd.c: 1677: {
 49808                           ;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 49809  019B20  0E01               	movlw	1
 49810  019B22  6E2E               	movwf	i2USBStallEndpoint@dir,c
 49811  019B24  0E02               	movlw	2
 49812  019B26  EC9B  F0B3         	call	i2_USBStallEndpoint
 49813                           
 49814                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 49815  019B2A  0E00               	movlw	0
 49816  019B2C  6E2E               	movwf	i2USBStallEndpoint@dir,c
 49817  019B2E  0E02               	movlw	2
 49818  019B30  EC9B  F0B3         	call	i2_USBStallEndpoint
 49819                           
 49820                           ;usb_device_msd.c: 1681: }
 49821  019B34  0012               	return	
 49822  019B36                     i2l11582:
 49823  019B36  C1D7  F03B         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2729
 49824  019B3A  C1D8  F03C         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2729+1
 49825  019B3E  503B               	movf	_MSDTransferTerminated$2729,w,c
 49826  019B40  1839               	xorwf	MSDTransferTerminated@handle,w,c
 49827  019B42  E114               	bnz	i2l787
 49828  019B44  503C               	movf	_MSDTransferTerminated$2729+1,w,c
 49829  019B46  183A               	xorwf	MSDTransferTerminated@handle+1,w,c
 49830  019B48  A4D8               	btfss	status,2,c
 49831  019B4A  0012               	return	
 49832                           
 49833                           ;usb_device_msd.c: 1687: {
 49834                           ;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,
      +                          64u);
 49835  019B4C  0E00               	movlw	0
 49836  019B4E  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 49837  019B50  0E40               	movlw	64
 49838  019B52  6E2F               	movwf	i2USBTransferOnePacket@data,c
 49839  019B54  0E0D               	movlw	13
 49840  019B56  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 49841  019B58  0E40               	movlw	64
 49842  019B5A  6E31               	movwf	i2USBTransferOnePacket@len,c
 49843  019B5C  0E02               	movlw	2
 49844  019B5E  EC1E  F0B4         	call	i2_USBTransferOnePacket
 49845  019B62  C02E  F0DD         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 49846  019B66  C02F  F0DE         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 49847  019B6A  0012               	return	
 49848  019B6C                     i2l787:
 49849  019B6C  0012               	return		;funcret
 49850  019B6E                     __end_of_MSDTransferTerminated:
 49851                           	opt stack 0
 49852                           tosu	equ	0xFFF
 49853                           tosh	equ	0xFFE
 49854                           tosl	equ	0xFFD
 49855                           pclatu	equ	0xFFB
 49856                           pclath	equ	0xFFA
 49857                           tblptru	equ	0xFF8
 49858                           tblptrh	equ	0xFF7
 49859                           tblptrl	equ	0xFF6
 49860                           tablat	equ	0xFF5
 49861                           prodh	equ	0xFF4
 49862                           prodl	equ	0xFF3
 49863                           intcon	equ	0xFF2
 49864                           intcon2	equ	0xFF1
 49865                           intcon3	equ	0xFF0
 49866                           indf0	equ	0xFEF
 49867                           postinc0	equ	0xFEE
 49868                           fsr0h	equ	0xFEA
 49869                           fsr0l	equ	0xFE9
 49870                           wreg	equ	0xFE8
 49871                           indf1	equ	0xFE7
 49872                           postinc1	equ	0xFE6
 49873                           postdec1	equ	0xFE5
 49874                           plusw1	equ	0xFE3
 49875                           fsr1h	equ	0xFE2
 49876                           fsr1l	equ	0xFE1
 49877                           indf2	equ	0xFDF
 49878                           postinc2	equ	0xFDE
 49879                           postdec2	equ	0xFDD
 49880                           plusw2	equ	0xFDB
 49881                           fsr2h	equ	0xFDA
 49882                           fsr2l	equ	0xFD9
 49883                           status	equ	0xFD8
 49884                           
 49885 ;; *************** function i2_USBStallEndpoint *****************
 49886 ;; Defined at:
 49887 ;;		line 1073 in file "usb_device.c"
 49888 ;; Parameters:    Size  Location     Type
 49889 ;;  ep              1    wreg     unsigned char 
 49890 ;;  dir             1    0[COMRAM] unsigned char 
 49891 ;; Auto vars:     Size  Location     Type
 49892 ;;  ep              1    5[COMRAM] unsigned char 
 49893 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 49894 ;;		 -> BDT(48), 
 49895 ;; Return value:  Size  Location     Type
 49896 ;;                  1    wreg      void 
 49897 ;; Registers used:
 49898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 49899 ;; Tracked objects:
 49900 ;;		On entry : 0/0
 49901 ;;		On exit  : 0/0
 49902 ;;		Unchanged: 0/0
 49903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49904 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49905 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49906 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49907 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49908 ;;Total ram usage:        8 bytes
 49909 ;; Hardware stack levels used:    1
 49910 ;; This function calls:
 49911 ;;		Nothing
 49912 ;; This function is called by:
 49913 ;;		_MSDTransferTerminated
 49914 ;; This function uses a non-reentrant model
 49915 ;;
 49916                           
 49917                           	psect	text236
 49918  016736                     __ptext236:
 49919                           	opt stack 0
 49920  016736                     i2_USBStallEndpoint:
 49921                           	opt stack 14
 49922                           
 49923                           ;incstack = 0
 49924                           ;i2USBStallEndpoint@ep stored from wreg
 49925  016736  6E33               	movwf	i2USBStallEndpoint@ep,c
 49926                           
 49927                           ;usb_device.c: 1075: BDT_ENTRY *p;
 49928                           ;usb_device.c: 1077: if(ep == 0)
 49929  016738  5033               	movf	i2USBStallEndpoint@ep,w,c
 49930  01673A  A4D8               	btfss	status,2,c
 49931  01673C  D02B               	goto	i2l11346
 49932                           
 49933                           ;usb_device.c: 1078: {
 49934                           ;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 49935  01673E  EE20 F001          	lfsr	2,1
 49936  016742  5018               	movf	_pBDTEntryEP0OutNext,w,c
 49937  016744  26D9               	addwf	fsr2l,f,c
 49938  016746  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 49939  016748  22DA               	addwfc	fsr2h,f,c
 49940  01674A  0E08               	movlw	8
 49941  01674C  6EDF               	movwf	indf2,c
 49942                           
 49943                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 49944  01674E  EE20 F002          	lfsr	2,2
 49945  016752  5018               	movf	_pBDTEntryEP0OutNext,w,c
 49946  016754  26D9               	addwf	fsr2l,f,c
 49947  016756  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 49948  016758  22DA               	addwfc	fsr2h,f,c
 49949  01675A  0E30               	movlw	48
 49950  01675C  6EDE               	movwf	postinc2,c
 49951  01675E  0E0D               	movlw	13
 49952  016760  6EDD               	movwf	postdec2,c
 49953                           
 49954                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 49955  016762  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49956  016766  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49957  01676A  0E0C               	movlw	12
 49958  01676C  6EDF               	movwf	indf2,c
 49959                           
 49960                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49961  01676E  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49962  016772  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49963  016776  0E00               	movlw	0
 49964  016778  8EDB               	bsf	plusw2,7,c
 49965                           
 49966                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 49967  01677A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 49968  01677E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49969  016782  0E04               	movlw	4
 49970  016784  6EDF               	movwf	indf2,c
 49971                           
 49972                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 49973  016786  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 49974  01678A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49975  01678E  0E00               	movlw	0
 49976  016790  8EDB               	bsf	plusw2,7,c
 49977                           
 49978                           ;usb_device.c: 1089: }
 49979  016792  0012               	return	
 49980  016794                     i2l11346:
 49981                           
 49982                           ;usb_device.c: 1090: else
 49983                           ;usb_device.c: 1091: {
 49984                           ;usb_device.c: 1092: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+0)]);
 49985  016794  502E               	movf	i2USBStallEndpoint@dir,w,c
 49986  016796  6E2F               	movwf	??i2_USBStallEndpoint& (0+255),c
 49987  016798  6A30               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 49988  01679A  90D8               	bcf	status,0,c
 49989  01679C  362F               	rlcf	??i2_USBStallEndpoint,f,c
 49990  01679E  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 49991  0167A0  5033               	movf	i2USBStallEndpoint@ep,w,c
 49992  0167A2  6E31               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 49993  0167A4  6A32               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 49994  0167A6  90D8               	bcf	status,0,c
 49995  0167A8  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 49996  0167AA  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 49997  0167AC  90D8               	bcf	status,0,c
 49998  0167AE  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 49999  0167B0  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 50000  0167B2  502F               	movf	??i2_USBStallEndpoint,w,c
 50001  0167B4  2631               	addwf	??i2_USBStallEndpoint+2,f,c
 50002  0167B6  5030               	movf	??i2_USBStallEndpoint+1,w,c
 50003  0167B8  2232               	addwfc	??i2_USBStallEndpoint+3,f,c
 50004  0167BA  90D8               	bcf	status,0,c
 50005  0167BC  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 50006  0167BE  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 50007  0167C0  90D8               	bcf	status,0,c
 50008  0167C2  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 50009  0167C4  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 50010  0167C6  0E00               	movlw	0
 50011  0167C8  2431               	addwf	??i2_USBStallEndpoint+2,w,c
 50012  0167CA  6E34               	movwf	i2USBStallEndpoint@p,c
 50013  0167CC  0E0D               	movlw	13
 50014  0167CE  2032               	addwfc	??i2_USBStallEndpoint+3,w,c
 50015  0167D0  6E35               	movwf	i2USBStallEndpoint@p+1,c
 50016                           
 50017                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 50018  0167D2  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 50019  0167D6  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 50020  0167DA  0E00               	movlw	0
 50021  0167DC  84DB               	bsf	plusw2,2,c
 50022                           
 50023                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 50024  0167DE  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 50025  0167E2  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 50026  0167E6  0E00               	movlw	0
 50027  0167E8  8EDB               	bsf	plusw2,7,c
 50028                           
 50029                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 50030  0167EA  5033               	movf	i2USBStallEndpoint@ep,w,c
 50031  0167EC  0D04               	mullw	4
 50032  0167EE  CFF3 F02F          	movff	prodl,??i2_USBStallEndpoint
 50033  0167F2  CFF4 F030          	movff	prodh,??i2_USBStallEndpoint+1
 50034  0167F6  502E               	movf	i2USBStallEndpoint@dir,w,c
 50035  0167F8  0D02               	mullw	2
 50036  0167FA  50F3               	movf	prodl,w,c
 50037  0167FC  262F               	addwf	??i2_USBStallEndpoint,f,c
 50038  0167FE  50F4               	movf	prodh,w,c
 50039  016800  2230               	addwfc	??i2_USBStallEndpoint+1,f,c
 50040  016802  90D8               	bcf	status,0,c
 50041  016804  362F               	rlcf	??i2_USBStallEndpoint,f,c
 50042  016806  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 50043  016808  90D8               	bcf	status,0,c
 50044  01680A  362F               	rlcf	??i2_USBStallEndpoint,f,c
 50045  01680C  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 50046  01680E  0E04               	movlw	4
 50047  016810  262F               	addwf	??i2_USBStallEndpoint,f,c
 50048  016812  0E00               	movlw	0
 50049  016814  2230               	addwfc	??i2_USBStallEndpoint+1,f,c
 50050  016816  0E00               	movlw	0
 50051  016818  242F               	addwf	??i2_USBStallEndpoint,w,c
 50052  01681A  6E34               	movwf	i2USBStallEndpoint@p,c
 50053  01681C  0E0D               	movlw	13
 50054  01681E  2030               	addwfc	??i2_USBStallEndpoint+1,w,c
 50055  016820  6E35               	movwf	i2USBStallEndpoint@p+1,c
 50056                           
 50057                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 50058  016822  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 50059  016826  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 50060  01682A  0E00               	movlw	0
 50061  01682C  84DB               	bsf	plusw2,2,c
 50062                           
 50063                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 50064  01682E  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 50065  016832  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 50066  016836  0E00               	movlw	0
 50067  016838  8EDB               	bsf	plusw2,7,c
 50068  01683A  0012               	return	
 50069  01683C                     __end_ofi2_USBStallEndpoint:
 50070                           	opt stack 0
 50071                           tosu	equ	0xFFF
 50072                           tosh	equ	0xFFE
 50073                           tosl	equ	0xFFD
 50074                           pclatu	equ	0xFFB
 50075                           pclath	equ	0xFFA
 50076                           tblptru	equ	0xFF8
 50077                           tblptrh	equ	0xFF7
 50078                           tblptrl	equ	0xFF6
 50079                           tablat	equ	0xFF5
 50080                           prodh	equ	0xFF4
 50081                           prodl	equ	0xFF3
 50082                           intcon	equ	0xFF2
 50083                           intcon2	equ	0xFF1
 50084                           intcon3	equ	0xFF0
 50085                           indf0	equ	0xFEF
 50086                           postinc0	equ	0xFEE
 50087                           fsr0h	equ	0xFEA
 50088                           fsr0l	equ	0xFE9
 50089                           wreg	equ	0xFE8
 50090                           indf1	equ	0xFE7
 50091                           postinc1	equ	0xFE6
 50092                           postdec1	equ	0xFE5
 50093                           plusw1	equ	0xFE3
 50094                           fsr1h	equ	0xFE2
 50095                           fsr1l	equ	0xFE1
 50096                           indf2	equ	0xFDF
 50097                           postinc2	equ	0xFDE
 50098                           postdec2	equ	0xFDD
 50099                           plusw2	equ	0xFDB
 50100                           fsr2h	equ	0xFDA
 50101                           fsr2l	equ	0xFD9
 50102                           status	equ	0xFD8
 50103                           
 50104 ;; *************** function _APP_DeviceMSDInitialize *****************
 50105 ;; Defined at:
 50106 ;;		line 84 in file "app_device_msd.c"
 50107 ;; Parameters:    Size  Location     Type
 50108 ;;		None
 50109 ;; Auto vars:     Size  Location     Type
 50110 ;;		None
 50111 ;; Return value:  Size  Location     Type
 50112 ;;                  1    wreg      void 
 50113 ;; Registers used:
 50114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50115 ;; Tracked objects:
 50116 ;;		On entry : 0/0
 50117 ;;		On exit  : 0/0
 50118 ;;		Unchanged: 0/0
 50119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50124 ;;Total ram usage:        0 bytes
 50125 ;; Hardware stack levels used:    1
 50126 ;; Hardware stack levels required when called:    2
 50127 ;; This function calls:
 50128 ;;		_USBEnableEndpoint
 50129 ;;		_USBMSDInit
 50130 ;; This function is called by:
 50131 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50132 ;; This function uses a non-reentrant model
 50133 ;;
 50134                           
 50135                           	psect	text237
 50136  01AB38                     __ptext237:
 50137                           	opt stack 0
 50138  01AB38                     _APP_DeviceMSDInitialize:
 50139                           	opt stack 13
 50140                           
 50141                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 50142                           
 50143                           ;incstack = 0
 50144  01AB38  0E1E               	movlw	30
 50145  01AB3A  6E36               	movwf	USBEnableEndpoint@options,c
 50146  01AB3C  0E02               	movlw	2
 50147  01AB3E  EC5C  F0D0         	call	_USBEnableEndpoint
 50148                           
 50149                           ;app_device_msd.c: 93: USBMSDInit();
 50150  01AB42  ECCD  F0AE         	call	_USBMSDInit	;wreg free
 50151  01AB46  0012               	return		;funcret
 50152  01AB48                     __end_of_APP_DeviceMSDInitialize:
 50153                           	opt stack 0
 50154                           tosu	equ	0xFFF
 50155                           tosh	equ	0xFFE
 50156                           tosl	equ	0xFFD
 50157                           pclatu	equ	0xFFB
 50158                           pclath	equ	0xFFA
 50159                           tblptru	equ	0xFF8
 50160                           tblptrh	equ	0xFF7
 50161                           tblptrl	equ	0xFF6
 50162                           tablat	equ	0xFF5
 50163                           prodh	equ	0xFF4
 50164                           prodl	equ	0xFF3
 50165                           intcon	equ	0xFF2
 50166                           intcon2	equ	0xFF1
 50167                           intcon3	equ	0xFF0
 50168                           indf0	equ	0xFEF
 50169                           postinc0	equ	0xFEE
 50170                           fsr0h	equ	0xFEA
 50171                           fsr0l	equ	0xFE9
 50172                           wreg	equ	0xFE8
 50173                           indf1	equ	0xFE7
 50174                           postinc1	equ	0xFE6
 50175                           postdec1	equ	0xFE5
 50176                           plusw1	equ	0xFE3
 50177                           fsr1h	equ	0xFE2
 50178                           fsr1l	equ	0xFE1
 50179                           indf2	equ	0xFDF
 50180                           postinc2	equ	0xFDE
 50181                           postdec2	equ	0xFDD
 50182                           plusw2	equ	0xFDB
 50183                           fsr2h	equ	0xFDA
 50184                           fsr2l	equ	0xFD9
 50185                           status	equ	0xFD8
 50186                           
 50187 ;; *************** function _USBMSDInit *****************
 50188 ;; Defined at:
 50189 ;;		line 142 in file "usb_device_msd.c"
 50190 ;; Parameters:    Size  Location     Type
 50191 ;;		None
 50192 ;; Auto vars:     Size  Location     Type
 50193 ;;		None
 50194 ;; Return value:  Size  Location     Type
 50195 ;;                  1    wreg      void 
 50196 ;; Registers used:
 50197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50198 ;; Tracked objects:
 50199 ;;		On entry : 0/0
 50200 ;;		On exit  : 0/0
 50201 ;;		Unchanged: 0/0
 50202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50205 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50206 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50207 ;;Total ram usage:        3 bytes
 50208 ;; Hardware stack levels used:    1
 50209 ;; Hardware stack levels required when called:    1
 50210 ;; This function calls:
 50211 ;;		i2_ExternalFlash_MediaDetect
 50212 ;;		i2_ExternalFlash_MediaInitialize
 50213 ;;		i2_ResetSenseData
 50214 ;;		i2_USBTransferOnePacket
 50215 ;; This function is called by:
 50216 ;;		_APP_DeviceMSDInitialize
 50217 ;; This function uses a non-reentrant model
 50218 ;;
 50219                           
 50220                           	psect	text238
 50221  015D9A                     __ptext238:
 50222                           	opt stack 0
 50223  015D9A                     _USBMSDInit:
 50224                           	opt stack 13
 50225                           
 50226                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 50227                           
 50228                           ;incstack = 0
 50229  015D9A  0E00               	movlw	0
 50230  015D9C  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 50231  015D9E  0E40               	movlw	64
 50232  015DA0  6E2F               	movwf	i2USBTransferOnePacket@data,c
 50233  015DA2  0E0D               	movlw	13
 50234  015DA4  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 50235  015DA6  0E40               	movlw	64
 50236  015DA8  6E31               	movwf	i2USBTransferOnePacket@len,c
 50237  015DAA  0E02               	movlw	2
 50238  015DAC  EC1E  F0B4         	call	i2_USBTransferOnePacket
 50239  015DB0  C02E  F0DD         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 50240  015DB4  C02F  F0DE         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 50241  015DB8  C014  F0DB         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 50242  015DBC  C015  F0DC         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 50243                           
 50244                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 50245  015DC0  0E00               	movlw	0
 50246  015DC2  0100               	movlb	0	; () banked
 50247  015DC4  6FE7               	movwf	_MSD_State& (0+255),b
 50248                           
 50249                           ; BSR set to: 0
 50250                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 50251  015DC6  0100               	movlb	0	; () banked
 50252  015DC8  69E6               	setf	_MSDCommandState& (0+255),b
 50253                           
 50254                           ; BSR set to: 0
 50255                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 50256  015DCA  0E00               	movlw	0
 50257  015DCC  0101               	movlb	1	; () banked
 50258  015DCE  6FF9               	movwf	_MSDReadState& (0+255),b
 50259                           
 50260                           ; BSR set to: 1
 50261                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 50262  015DD0  0E00               	movlw	0
 50263  015DD2  6E1F               	movwf	_MSDWriteState,c
 50264                           
 50265                           ; BSR set to: 1
 50266                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 50267  015DD4  0E00               	movlw	0
 50268  015DD6  0100               	movlb	0	; () banked
 50269  015DD8  6FE5               	movwf	_MSDHostNoData& (0+255),b
 50270                           
 50271                           ; BSR set to: 0
 50272                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 50273  015DDA  0E00               	movlw	0
 50274  015DDC  0102               	movlb	2	; () banked
 50275  015DDE  6FAA               	movwf	_gblNumBLKS& (0+255),b
 50276  015DE0  0E00               	movlw	0
 50277  015DE2  6FAB               	movwf	(_gblNumBLKS+1)& (0+255),b
 50278  015DE4  0E00               	movlw	0
 50279  015DE6  6FAC               	movwf	(_gblNumBLKS+2)& (0+255),b
 50280  015DE8  0E00               	movlw	0
 50281  015DEA  6FAD               	movwf	(_gblNumBLKS+3)& (0+255),b
 50282                           
 50283                           ; BSR set to: 2
 50284                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 50285  015DEC  0E00               	movlw	0
 50286  015DEE  0102               	movlb	2	; () banked
 50287  015DF0  6FA6               	movwf	_gblBLKLen& (0+255),b
 50288  015DF2  0E00               	movlw	0
 50289  015DF4  6FA7               	movwf	(_gblBLKLen+1)& (0+255),b
 50290  015DF6  0E00               	movlw	0
 50291  015DF8  6FA8               	movwf	(_gblBLKLen+2)& (0+255),b
 50292  015DFA  0E00               	movlw	0
 50293  015DFC  6FA9               	movwf	(_gblBLKLen+3)& (0+255),b
 50294                           
 50295                           ; BSR set to: 2
 50296                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 50297  015DFE  0E01               	movlw	1
 50298  015E00  0101               	movlb	1	; () banked
 50299  015E02  6FF5               	movwf	_MSDCBWValid& (0+255),b
 50300                           
 50301                           ; BSR set to: 1
 50302                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 50303  015E04  0E00               	movlw	0
 50304  015E06  0102               	movlb	2	; () banked
 50305  015E08  6FB3               	movwf	(_gblMediaPresent+1)& (0+255),b
 50306  015E0A  0E00               	movlw	0
 50307  015E0C  6FB2               	movwf	_gblMediaPresent& (0+255),b
 50308                           
 50309                           ; BSR set to: 2
 50310                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 50311  015E0E  0E00               	movlw	0
 50312  015E10  0102               	movlb	2	; () banked
 50313  015E12  6F4E               	movwf	(_gblCBW+13)& (0+255),b
 50314  015E14  D04C               	goto	i2l17674
 50315  015E16                     i2l17662:
 50316                           
 50317                           ; BSR set to: 2
 50318                           ;usb_device_msd.c: 161: {
 50319                           ;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 50320  015E16  0102               	movlb	2	; () banked
 50321  015E18  514E               	movf	(_gblCBW+13)& (0+255),w,b
 50322  015E1A  0D01               	mullw	1
 50323  015E1C  0EF6               	movlw	low _SoftDetach
 50324  015E1E  24F3               	addwf	prodl,w,c
 50325  015E20  6ED9               	movwf	fsr2l,c
 50326  015E22  0E01               	movlw	high _SoftDetach
 50327  015E24  20F4               	addwfc	prodh,w,c
 50328  015E26  6EDA               	movwf	fsr2h,c
 50329  015E28  0E00               	movlw	0
 50330  015E2A  6EDF               	movwf	indf2,c
 50331                           
 50332                           ; BSR set to: 2
 50333                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 50334  015E2C  C2D0  F02E         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 50335  015E30  C2D1  F02F         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 50336  015E34  EE22  F0C4         	lfsr	2,_LUN+9
 50337  015E38  D801               	call	i2u1622_48
 50338  015E3A  D00A               	goto	i2u1622_49
 50339  015E3C                     i2u1622_48:
 50340  015E3C  0005               	push	
 50341  015E3E  6EFA               	movwf	pclath,c
 50342  015E40  50DE               	movf	postinc2,w,c
 50343  015E42  6EFD               	movwf	tosl,c
 50344  015E44  50DE               	movf	postinc2,w,c
 50345  015E46  6EFE               	movwf	tosh,c
 50346  015E48  50DE               	movf	postinc2,w,c
 50347  015E4A  6EFF               	movwf	tosu,c
 50348  015E4C  50FA               	movf	pclath,w,c
 50349  015E4E  0012               	return		;indir
 50350  015E50                     i2u1622_49:
 50351  015E50  0900               	iorlw	0
 50352  015E52  B4D8               	btfsc	status,2,c
 50353  015E54  D028               	goto	i2l17670
 50354                           
 50355                           ;usb_device_msd.c: 167: {
 50356                           ;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaParameters))
 50357  015E56  C2D0  F02E         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 50358  015E5A  C2D1  F02F         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 50359  015E5E  D801               	call	i2u1624_48
 50360  015E60  D00B               	goto	i2u1624_49
 50361  015E62                     i2u1624_48:
 50362  015E62  0005               	push	
 50363  015E64  6EFA               	movwf	pclath,c
 50364  015E66  0102               	movlb	2	; () banked
 50365  015E68  51BB               	movf	_LUN& (0+255),w,b
 50366  015E6A  6EFD               	movwf	tosl,c
 50367  015E6C  51BC               	movf	(_LUN+1)& (0+255),w,b
 50368  015E6E  6EFE               	movwf	tosh,c
 50369  015E70  51BD               	movf	(_LUN+2)& (0+255),w,b
 50370  015E72  6EFF               	movwf	tosu,c
 50371  015E74  50FA               	movf	pclath,w,c
 50372  015E76  0012               	return		;indir
 50373  015E78                     i2u1624_49:
 50374  015E78  502E               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 50375  015E7A  102F               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 50376  015E7C  B4D8               	btfsc	status,2,c
 50377  015E7E  D013               	goto	i2l17670
 50378                           
 50379                           ;usb_device_msd.c: 170: {
 50380                           ;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW.bCBWLUN);
 50381  015E80  C24E  F039         	movff	_gblCBW+13,??_USBMSDInit
 50382  015E84  0E01               	movlw	1
 50383  015E86  6E3A               	movwf	(??_USBMSDInit+1)& (0+255),c
 50384  015E88  0E00               	movlw	0
 50385  015E8A  6E3B               	movwf	(??_USBMSDInit+2)& (0+255),c
 50386  015E8C  2A39               	incf	??_USBMSDInit,f,c
 50387  015E8E  D003               	goto	i2u1626_44
 50388  015E90                     i2u1626_45:
 50389  015E90  90D8               	bcf	status,0,c
 50390  015E92  363A               	rlcf	??_USBMSDInit+1,f,c
 50391  015E94  363B               	rlcf	??_USBMSDInit+2,f,c
 50392  015E96                     i2u1626_44:
 50393  015E96  2E39               	decfsz	??_USBMSDInit,f,c
 50394  015E98  D7FB               	goto	i2u1626_45
 50395  015E9A  503A               	movf	??_USBMSDInit+1,w,c
 50396  015E9C  0102               	movlb	2	; () banked
 50397  015E9E  13B2               	iorwf	_gblMediaPresent& (0+255),f,b
 50398  015EA0  503B               	movf	??_USBMSDInit+2,w,c
 50399  015EA2  0102               	movlb	2	; () banked
 50400  015EA4  13B3               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 50401  015EA6                     i2l17670:
 50402                           
 50403                           ;usb_device_msd.c: 174: }
 50404                           ;usb_device_msd.c: 175: }
 50405                           ;usb_device_msd.c: 176: ResetSenseData();
 50406  015EA6  ECC5  F0C4         	call	i2_ResetSenseData	;wreg free
 50407  015EAA  0102               	movlb	2	; () banked
 50408  015EAC  2B4E               	incf	(_gblCBW+13)& (0+255),f,b
 50409  015EAE                     i2l17674:
 50410                           
 50411                           ; BSR set to: 2
 50412  015EAE  0102               	movlb	2	; () banked
 50413  015EB0  514E               	movf	(_gblCBW+13)& (0+255),w,b
 50414  015EB2  A4D8               	btfss	status,2,c
 50415  015EB4  0012               	return	
 50416  015EB6  D7AF               	goto	i2l17662
 50417  015EB8                     __end_of_USBMSDInit:
 50418                           	opt stack 0
 50419                           tosu	equ	0xFFF
 50420                           tosh	equ	0xFFE
 50421                           tosl	equ	0xFFD
 50422                           pclatu	equ	0xFFB
 50423                           pclath	equ	0xFFA
 50424                           tblptru	equ	0xFF8
 50425                           tblptrh	equ	0xFF7
 50426                           tblptrl	equ	0xFF6
 50427                           tablat	equ	0xFF5
 50428                           prodh	equ	0xFF4
 50429                           prodl	equ	0xFF3
 50430                           intcon	equ	0xFF2
 50431                           intcon2	equ	0xFF1
 50432                           intcon3	equ	0xFF0
 50433                           indf0	equ	0xFEF
 50434                           postinc0	equ	0xFEE
 50435                           fsr0h	equ	0xFEA
 50436                           fsr0l	equ	0xFE9
 50437                           wreg	equ	0xFE8
 50438                           indf1	equ	0xFE7
 50439                           postinc1	equ	0xFE6
 50440                           postdec1	equ	0xFE5
 50441                           plusw1	equ	0xFE3
 50442                           fsr1h	equ	0xFE2
 50443                           fsr1l	equ	0xFE1
 50444                           indf2	equ	0xFDF
 50445                           postinc2	equ	0xFDE
 50446                           postdec2	equ	0xFDD
 50447                           plusw2	equ	0xFDB
 50448                           fsr2h	equ	0xFDA
 50449                           fsr2l	equ	0xFD9
 50450                           status	equ	0xFD8
 50451                           
 50452 ;; *************** function i2_ResetSenseData *****************
 50453 ;; Defined at:
 50454 ;;		line 1373 in file "usb_device_msd.c"
 50455 ;; Parameters:    Size  Location     Type
 50456 ;;		None
 50457 ;; Auto vars:     Size  Location     Type
 50458 ;;		None
 50459 ;; Return value:  Size  Location     Type
 50460 ;;                  1    wreg      void 
 50461 ;; Registers used:
 50462 ;;		wreg, status,2
 50463 ;; Tracked objects:
 50464 ;;		On entry : 0/0
 50465 ;;		On exit  : 0/0
 50466 ;;		Unchanged: 0/0
 50467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50472 ;;Total ram usage:        0 bytes
 50473 ;; Hardware stack levels used:    1
 50474 ;; This function calls:
 50475 ;;		Nothing
 50476 ;; This function is called by:
 50477 ;;		_USBMSDInit
 50478 ;; This function uses a non-reentrant model
 50479 ;;
 50480                           
 50481                           	psect	text239
 50482  01898A                     __ptext239:
 50483                           	opt stack 0
 50484  01898A                     i2_ResetSenseData:
 50485                           	opt stack 13
 50486                           
 50487                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 50488                           
 50489                           ; BSR set to: 2
 50490                           ;incstack = 0
 50491  01898A  0102               	movlb	2	; () banked
 50492  01898C  9160               	bcf	_gblSenseData& (0+255),0,b
 50493  01898E  9360               	bcf	_gblSenseData& (0+255),1,b
 50494  018990  9560               	bcf	_gblSenseData& (0+255),2,b
 50495  018992  9760               	bcf	_gblSenseData& (0+255),3,b
 50496  018994  8960               	bsf	_gblSenseData& (0+255),4,b
 50497  018996  8B60               	bsf	_gblSenseData& (0+255),5,b
 50498  018998  8D60               	bsf	_gblSenseData& (0+255),6,b
 50499                           
 50500                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 50501  01899A  0102               	movlb	2	; () banked
 50502  01899C  9F60               	bcf	_gblSenseData& (0+255),7,b
 50503                           
 50504                           ; BSR set to: 2
 50505                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 50506  01899E  0E00               	movlw	0
 50507  0189A0  0102               	movlb	2	; () banked
 50508  0189A2  6F61               	movwf	(_gblSenseData+1)& (0+255),b
 50509                           
 50510                           ; BSR set to: 2
 50511                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 50512  0189A4  0102               	movlb	2	; () banked
 50513  0189A6  9162               	bcf	(_gblSenseData+2)& (0+255),0,b
 50514  0189A8  9362               	bcf	(_gblSenseData+2)& (0+255),1,b
 50515  0189AA  9562               	bcf	(_gblSenseData+2)& (0+255),2,b
 50516  0189AC  9762               	bcf	(_gblSenseData+2)& (0+255),3,b
 50517                           
 50518                           ; BSR set to: 2
 50519                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 50520  0189AE  0102               	movlb	2	; () banked
 50521  0189B0  9B62               	bcf	(_gblSenseData+2)& (0+255),5,b
 50522                           
 50523                           ; BSR set to: 2
 50524                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 50525  0189B2  0102               	movlb	2	; () banked
 50526  0189B4  9D62               	bcf	(_gblSenseData+2)& (0+255),6,b
 50527                           
 50528                           ; BSR set to: 2
 50529                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 50530  0189B6  0102               	movlb	2	; () banked
 50531  0189B8  9F62               	bcf	(_gblSenseData+2)& (0+255),7,b
 50532                           
 50533                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 50534  0189BA  0E00               	movlw	0
 50535  0189BC  0102               	movlb	2	; () banked
 50536  0189BE  6F63               	movwf	(_gblSenseData+3)& (0+255),b
 50537                           
 50538                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 50539  0189C0  0E00               	movlw	0
 50540  0189C2  0102               	movlb	2	; () banked
 50541  0189C4  6F64               	movwf	(_gblSenseData+4)& (0+255),b
 50542                           
 50543                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 50544  0189C6  0E00               	movlw	0
 50545  0189C8  0102               	movlb	2	; () banked
 50546  0189CA  6F65               	movwf	(_gblSenseData+5)& (0+255),b
 50547                           
 50548                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 50549  0189CC  0E00               	movlw	0
 50550  0189CE  0102               	movlb	2	; () banked
 50551  0189D0  6F66               	movwf	(_gblSenseData+6)& (0+255),b
 50552                           
 50553                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 50554  0189D2  0E0A               	movlw	10
 50555  0189D4  0102               	movlb	2	; () banked
 50556  0189D6  6F67               	movwf	(_gblSenseData+7)& (0+255),b
 50557                           
 50558                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 50559  0189D8  0E00               	movlw	0
 50560  0189DA  0102               	movlb	2	; () banked
 50561  0189DC  6F68               	movwf	(_gblSenseData+8)& (0+255),b
 50562  0189DE  0E00               	movlw	0
 50563  0189E0  6F69               	movwf	(_gblSenseData+9)& (0+255),b
 50564  0189E2  0E00               	movlw	0
 50565  0189E4  6F6A               	movwf	(_gblSenseData+10)& (0+255),b
 50566  0189E6  0E00               	movlw	0
 50567  0189E8  6F6B               	movwf	(_gblSenseData+11)& (0+255),b
 50568                           
 50569                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 50570  0189EA  0E00               	movlw	0
 50571  0189EC  0102               	movlb	2	; () banked
 50572  0189EE  6F6C               	movwf	(_gblSenseData+12)& (0+255),b
 50573                           
 50574                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 50575  0189F0  0E00               	movlw	0
 50576  0189F2  0102               	movlb	2	; () banked
 50577  0189F4  6F6D               	movwf	(_gblSenseData+13)& (0+255),b
 50578                           
 50579                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 50580  0189F6  0E00               	movlw	0
 50581  0189F8  0102               	movlb	2	; () banked
 50582  0189FA  6F6E               	movwf	(_gblSenseData+14)& (0+255),b
 50583                           
 50584                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 50585  0189FC  0E00               	movlw	0
 50586  0189FE  0102               	movlb	2	; () banked
 50587  018A00  6F6F               	movwf	(_gblSenseData+15)& (0+255),b
 50588                           
 50589                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 50590  018A02  0E00               	movlw	0
 50591  018A04  0102               	movlb	2	; () banked
 50592  018A06  6F70               	movwf	(_gblSenseData+16)& (0+255),b
 50593                           
 50594                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 50595  018A08  0E00               	movlw	0
 50596  018A0A  0102               	movlb	2	; () banked
 50597  018A0C  6F71               	movwf	(_gblSenseData+17)& (0+255),b
 50598                           
 50599                           ; BSR set to: 2
 50600  018A0E  0012               	return		;funcret
 50601  018A10                     __end_ofi2_ResetSenseData:
 50602                           	opt stack 0
 50603                           tosu	equ	0xFFF
 50604                           tosh	equ	0xFFE
 50605                           tosl	equ	0xFFD
 50606                           pclatu	equ	0xFFB
 50607                           pclath	equ	0xFFA
 50608                           tblptru	equ	0xFF8
 50609                           tblptrh	equ	0xFF7
 50610                           tblptrl	equ	0xFF6
 50611                           tablat	equ	0xFF5
 50612                           prodh	equ	0xFF4
 50613                           prodl	equ	0xFF3
 50614                           intcon	equ	0xFF2
 50615                           intcon2	equ	0xFF1
 50616                           intcon3	equ	0xFF0
 50617                           indf0	equ	0xFEF
 50618                           postinc0	equ	0xFEE
 50619                           fsr0h	equ	0xFEA
 50620                           fsr0l	equ	0xFE9
 50621                           wreg	equ	0xFE8
 50622                           indf1	equ	0xFE7
 50623                           postinc1	equ	0xFE6
 50624                           postdec1	equ	0xFE5
 50625                           plusw1	equ	0xFE3
 50626                           fsr1h	equ	0xFE2
 50627                           fsr1l	equ	0xFE1
 50628                           indf2	equ	0xFDF
 50629                           postinc2	equ	0xFDE
 50630                           postdec2	equ	0xFDD
 50631                           plusw2	equ	0xFDB
 50632                           fsr2h	equ	0xFDA
 50633                           fsr2l	equ	0xFD9
 50634                           status	equ	0xFD8
 50635                           
 50636 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 50637 ;; Defined at:
 50638 ;;		line 10 in file "external_flash.c"
 50639 ;; Parameters:    Size  Location     Type
 50640 ;;  config          2    0[COMRAM] PTR void 
 50641 ;;		 -> NULL(0), 
 50642 ;; Auto vars:     Size  Location     Type
 50643 ;;		None
 50644 ;; Return value:  Size  Location     Type
 50645 ;;                  2    0[COMRAM] PTR struct .
 50646 ;; Registers used:
 50647 ;;		wreg, status,2, status,0
 50648 ;; Tracked objects:
 50649 ;;		On entry : 0/0
 50650 ;;		On exit  : 0/0
 50651 ;;		Unchanged: 0/0
 50652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50656 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50657 ;;Total ram usage:        2 bytes
 50658 ;; Hardware stack levels used:    1
 50659 ;; This function calls:
 50660 ;;		Nothing
 50661 ;; This function is called by:
 50662 ;; This function uses a non-reentrant model
 50663 ;;
 50664                           
 50665                           	psect	text240
 50666  01A88C                     __ptext240:
 50667                           	opt stack 0
 50668  01A88C                     i2_ExternalFlash_MediaInitialize:
 50669                           	opt stack 13
 50670                           
 50671                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 50672                           
 50673                           ; BSR set to: 2
 50674                           ;incstack = 0
 50675  01A88C  0102               	movlb	2	; () banked
 50676  01A88E  81B7               	bsf	(_mediaInformation+1)& (0+255),0,b
 50677                           
 50678                           ; BSR set to: 2
 50679                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 50680  01A890  0E02               	movlw	2
 50681  01A892  0102               	movlb	2	; () banked
 50682  01A894  6FB9               	movwf	(_mediaInformation+3)& (0+255),b
 50683  01A896  0E00               	movlw	0
 50684  01A898  6FB8               	movwf	(_mediaInformation+2)& (0+255),b
 50685                           
 50686                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 50687  01A89A  0E00               	movlw	0
 50688  01A89C  0102               	movlb	2	; () banked
 50689  01A89E  6FB6               	movwf	_mediaInformation& (0+255),b
 50690                           
 50691                           ; BSR set to: 2
 50692                           ;external_flash.c: 15: return &mediaInformation;
 50693  01A8A0  0EB6               	movlw	low _mediaInformation
 50694  01A8A2  6E2E               	movwf	?i2_ExternalFlash_MediaInitialize,c
 50695  01A8A4  0E02               	movlw	high _mediaInformation
 50696  01A8A6  6E2F               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 50697  01A8A8  0012               	return	
 50698  01A8AA                     __end_ofi2_ExternalFlash_MediaInitialize:
 50699                           	opt stack 0
 50700                           tosu	equ	0xFFF
 50701                           tosh	equ	0xFFE
 50702                           tosl	equ	0xFFD
 50703                           pclatu	equ	0xFFB
 50704                           pclath	equ	0xFFA
 50705                           tblptru	equ	0xFF8
 50706                           tblptrh	equ	0xFF7
 50707                           tblptrl	equ	0xFF6
 50708                           tablat	equ	0xFF5
 50709                           prodh	equ	0xFF4
 50710                           prodl	equ	0xFF3
 50711                           intcon	equ	0xFF2
 50712                           intcon2	equ	0xFF1
 50713                           intcon3	equ	0xFF0
 50714                           indf0	equ	0xFEF
 50715                           postinc0	equ	0xFEE
 50716                           fsr0h	equ	0xFEA
 50717                           fsr0l	equ	0xFE9
 50718                           wreg	equ	0xFE8
 50719                           indf1	equ	0xFE7
 50720                           postinc1	equ	0xFE6
 50721                           postdec1	equ	0xFE5
 50722                           plusw1	equ	0xFE3
 50723                           fsr1h	equ	0xFE2
 50724                           fsr1l	equ	0xFE1
 50725                           indf2	equ	0xFDF
 50726                           postinc2	equ	0xFDE
 50727                           postdec2	equ	0xFDD
 50728                           plusw2	equ	0xFDB
 50729                           fsr2h	equ	0xFDA
 50730                           fsr2l	equ	0xFD9
 50731                           status	equ	0xFD8
 50732                           
 50733 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 50734 ;; Defined at:
 50735 ;;		line 29 in file "external_flash.c"
 50736 ;; Parameters:    Size  Location     Type
 50737 ;;  config          2    0[COMRAM] PTR void 
 50738 ;;		 -> NULL(0), 
 50739 ;; Auto vars:     Size  Location     Type
 50740 ;;		None
 50741 ;; Return value:  Size  Location     Type
 50742 ;;                  1    wreg      unsigned char 
 50743 ;; Registers used:
 50744 ;;		wreg
 50745 ;; Tracked objects:
 50746 ;;		On entry : 0/0
 50747 ;;		On exit  : 0/0
 50748 ;;		Unchanged: 0/0
 50749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50753 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50754 ;;Total ram usage:        2 bytes
 50755 ;; Hardware stack levels used:    1
 50756 ;; This function calls:
 50757 ;;		Nothing
 50758 ;; This function is called by:
 50759 ;; This function uses a non-reentrant model
 50760 ;;
 50761                           
 50762                           	psect	text241
 50763  01ABE2                     __ptext241:
 50764                           	opt stack 0
 50765  01ABE2                     i2_ExternalFlash_MediaDetect:
 50766                           	opt stack 13
 50767                           
 50768                           ;external_flash.c: 31: return 1;
 50769                           
 50770                           ; BSR set to: 2
 50771                           ;incstack = 0
 50772  01ABE2  0E01               	movlw	1
 50773  01ABE4  0012               	return	
 50774  01ABE6                     __end_ofi2_ExternalFlash_MediaDetect:
 50775                           	opt stack 0
 50776                           tosu	equ	0xFFF
 50777                           tosh	equ	0xFFE
 50778                           tosl	equ	0xFFD
 50779                           pclatu	equ	0xFFB
 50780                           pclath	equ	0xFFA
 50781                           tblptru	equ	0xFF8
 50782                           tblptrh	equ	0xFF7
 50783                           tblptrl	equ	0xFF6
 50784                           tablat	equ	0xFF5
 50785                           prodh	equ	0xFF4
 50786                           prodl	equ	0xFF3
 50787                           intcon	equ	0xFF2
 50788                           intcon2	equ	0xFF1
 50789                           intcon3	equ	0xFF0
 50790                           indf0	equ	0xFEF
 50791                           postinc0	equ	0xFEE
 50792                           fsr0h	equ	0xFEA
 50793                           fsr0l	equ	0xFE9
 50794                           wreg	equ	0xFE8
 50795                           indf1	equ	0xFE7
 50796                           postinc1	equ	0xFE6
 50797                           postdec1	equ	0xFE5
 50798                           plusw1	equ	0xFE3
 50799                           fsr1h	equ	0xFE2
 50800                           fsr1l	equ	0xFE1
 50801                           indf2	equ	0xFDF
 50802                           postinc2	equ	0xFDE
 50803                           postdec2	equ	0xFDD
 50804                           plusw2	equ	0xFDB
 50805                           fsr2h	equ	0xFDA
 50806                           fsr2l	equ	0xFD9
 50807                           status	equ	0xFD8
 50808                           
 50809 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 50810 ;; Defined at:
 50811 ;;		line 81 in file "app_device_custom_hid.c"
 50812 ;; Parameters:    Size  Location     Type
 50813 ;;		None
 50814 ;; Auto vars:     Size  Location     Type
 50815 ;;		None
 50816 ;; Return value:  Size  Location     Type
 50817 ;;                  1    wreg      void 
 50818 ;; Registers used:
 50819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 50820 ;; Tracked objects:
 50821 ;;		On entry : 0/0
 50822 ;;		On exit  : 0/0
 50823 ;;		Unchanged: 0/0
 50824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50829 ;;Total ram usage:        0 bytes
 50830 ;; Hardware stack levels used:    1
 50831 ;; Hardware stack levels required when called:    2
 50832 ;; This function calls:
 50833 ;;		_USBEnableEndpoint
 50834 ;;		i2_USBTransferOnePacket
 50835 ;; This function is called by:
 50836 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50837 ;; This function uses a non-reentrant model
 50838 ;;
 50839                           
 50840                           	psect	text242
 50841  01A208                     __ptext242:
 50842                           	opt stack 0
 50843  01A208                     _APP_DeviceCustomHIDInitialize:
 50844                           	opt stack 13
 50845                           
 50846                           ;app_device_custom_hid.c: 85: USBInHandle = 0;
 50847                           
 50848                           ;incstack = 0
 50849  01A208  0E00               	movlw	0
 50850  01A20A  0100               	movlb	0	; () banked
 50851  01A20C  6FD7               	movwf	_USBInHandle& (0+255),b
 50852  01A20E  0E00               	movlw	0
 50853  01A210  0100               	movlb	0	; () banked
 50854  01A212  6FD8               	movwf	(_USBInHandle+1)& (0+255),b
 50855                           
 50856                           ; BSR set to: 0
 50857                           ;app_device_custom_hid.c: 88: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 50858  01A214  0E1E               	movlw	30
 50859  01A216  6E36               	movwf	USBEnableEndpoint@options,c
 50860  01A218  0E01               	movlw	1
 50861  01A21A  EC5C  F0D0         	call	_USBEnableEndpoint
 50862                           
 50863                           ;app_device_custom_hid.c: 91: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 50864  01A21E  0E00               	movlw	0
 50865  01A220  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 50866  01A222  0E78               	movlw	low _ReceivedDataBuffer
 50867  01A224  6E2F               	movwf	i2USBTransferOnePacket@data,c
 50868  01A226  0E04               	movlw	high _ReceivedDataBuffer
 50869  01A228  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 50870  01A22A  0E40               	movlw	64
 50871  01A22C  6E31               	movwf	i2USBTransferOnePacket@len,c
 50872  01A22E  0E01               	movlw	1
 50873  01A230  EC1E  F0B4         	call	i2_USBTransferOnePacket
 50874  01A234  C02E  F1E9         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 50875  01A238  C02F  F1EA         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 50876  01A23C  0012               	return		;funcret
 50877  01A23E                     __end_of_APP_DeviceCustomHIDInitialize:
 50878                           	opt stack 0
 50879                           tosu	equ	0xFFF
 50880                           tosh	equ	0xFFE
 50881                           tosl	equ	0xFFD
 50882                           pclatu	equ	0xFFB
 50883                           pclath	equ	0xFFA
 50884                           tblptru	equ	0xFF8
 50885                           tblptrh	equ	0xFF7
 50886                           tblptrl	equ	0xFF6
 50887                           tablat	equ	0xFF5
 50888                           prodh	equ	0xFF4
 50889                           prodl	equ	0xFF3
 50890                           intcon	equ	0xFF2
 50891                           intcon2	equ	0xFF1
 50892                           intcon3	equ	0xFF0
 50893                           indf0	equ	0xFEF
 50894                           postinc0	equ	0xFEE
 50895                           fsr0h	equ	0xFEA
 50896                           fsr0l	equ	0xFE9
 50897                           wreg	equ	0xFE8
 50898                           indf1	equ	0xFE7
 50899                           postinc1	equ	0xFE6
 50900                           postdec1	equ	0xFE5
 50901                           plusw1	equ	0xFE3
 50902                           fsr1h	equ	0xFE2
 50903                           fsr1l	equ	0xFE1
 50904                           indf2	equ	0xFDF
 50905                           postinc2	equ	0xFDE
 50906                           postdec2	equ	0xFDD
 50907                           plusw2	equ	0xFDB
 50908                           fsr2h	equ	0xFDA
 50909                           fsr2l	equ	0xFD9
 50910                           status	equ	0xFD8
 50911                           
 50912 ;; *************** function i2_USBTransferOnePacket *****************
 50913 ;; Defined at:
 50914 ;;		line 995 in file "usb_device.c"
 50915 ;; Parameters:    Size  Location     Type
 50916 ;;  ep              1    wreg     unsigned char 
 50917 ;;  dir             1    0[COMRAM] unsigned char 
 50918 ;;  data            2    1[COMRAM] PTR unsigned char 
 50919 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 50920 ;;		 -> msd_cbw(31), NULL(0), 
 50921 ;;  len             1    3[COMRAM] unsigned char 
 50922 ;; Auto vars:     Size  Location     Type
 50923 ;;  ep              1    8[COMRAM] unsigned char 
 50924 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 50925 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 50926 ;; Return value:  Size  Location     Type
 50927 ;;                  2    0[COMRAM] PTR void 
 50928 ;; Registers used:
 50929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 50930 ;; Tracked objects:
 50931 ;;		On entry : 0/0
 50932 ;;		On exit  : 0/0
 50933 ;;		Unchanged: 0/0
 50934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50935 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50936 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50937 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50938 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50939 ;;Total ram usage:       11 bytes
 50940 ;; Hardware stack levels used:    1
 50941 ;; This function calls:
 50942 ;;		Nothing
 50943 ;; This function is called by:
 50944 ;;		_USBMSDInit
 50945 ;;		_USBCheckMSDRequest
 50946 ;;		_MSDTransferTerminated
 50947 ;;		_APP_DeviceCustomHIDInitialize
 50948 ;; This function uses a non-reentrant model
 50949 ;;
 50950                           
 50951                           	psect	text243
 50952  01683C                     __ptext243:
 50953                           	opt stack 0
 50954  01683C                     i2_USBTransferOnePacket:
 50955                           	opt stack 14
 50956                           
 50957                           ;incstack = 0
 50958                           ;i2USBTransferOnePacket@ep stored from wreg
 50959  01683C  6E36               	movwf	i2USBTransferOnePacket@ep,c
 50960                           
 50961                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 50962                           ;usb_device.c: 1000: if(dir != 0)
 50963  01683E  502E               	movf	i2USBTransferOnePacket@dir,w,c
 50964  016840  B4D8               	btfsc	status,2,c
 50965  016842  D007               	goto	i2l11180
 50966                           
 50967                           ;usb_device.c: 1001: {
 50968                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 50969  016844  5036               	movf	i2USBTransferOnePacket@ep,w,c
 50970  016846  0D02               	mullw	2
 50971  016848  0E10               	movlw	low _pBDTEntryIn
 50972  01684A  24F3               	addwf	prodl,w,c
 50973  01684C  6ED9               	movwf	fsr2l,c
 50974  01684E  0E00               	movlw	high _pBDTEntryIn
 50975  016850  D006               	goto	L64
 50976  016852                     i2l11180:
 50977                           
 50978                           ;usb_device.c: 1005: else
 50979                           ;usb_device.c: 1006: {
 50980                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 50981  016852  5036               	movf	i2USBTransferOnePacket@ep,w,c
 50982  016854  0D02               	mullw	2
 50983  016856  0ED3               	movlw	low _pBDTEntryOut
 50984  016858  24F3               	addwf	prodl,w,c
 50985  01685A  6ED9               	movwf	fsr2l,c
 50986  01685C  0E01               	movlw	high _pBDTEntryOut
 50987  01685E                     L64:
 50988  01685E  20F4               	addwfc	prodh,w,c
 50989  016860  6EDA               	movwf	fsr2h,c
 50990  016862  CFDE F037          	movff	postinc2,i2USBTransferOnePacket@handle
 50991  016866  CFDD F038          	movff	postdec2,i2USBTransferOnePacket@handle+1
 50992                           
 50993                           ;usb_device.c: 1009: }
 50994                           ;usb_device.c: 1013: if(handle == 0)
 50995  01686A  5037               	movf	i2USBTransferOnePacket@handle,w,c
 50996  01686C  1038               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 50997  01686E  A4D8               	btfss	status,2,c
 50998  016870  D005               	goto	i2l11188
 50999                           
 51000                           ;usb_device.c: 1014: {
 51001                           ;usb_device.c: 1015: return 0;
 51002  016872  0E00               	movlw	0
 51003  016874  6E2E               	movwf	?i2_USBTransferOnePacket,c
 51004  016876  0E00               	movlw	0
 51005  016878  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 51006  01687A  0012               	return	
 51007  01687C                     i2l11188:
 51008                           
 51009                           ;usb_device.c: 1016: }
 51010                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 51011  01687C  EE20 F002          	lfsr	2,2
 51012  016880  5037               	movf	i2USBTransferOnePacket@handle,w,c
 51013  016882  26D9               	addwf	fsr2l,f,c
 51014  016884  5038               	movf	i2USBTransferOnePacket@handle+1,w,c
 51015  016886  22DA               	addwfc	fsr2h,f,c
 51016  016888  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 51017  01688C  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 51018                           
 51019                           ;usb_device.c: 1030: handle->CNT = len;
 51020  016890  EE20 F001          	lfsr	2,1
 51021  016894  5037               	movf	i2USBTransferOnePacket@handle,w,c
 51022  016896  26D9               	addwf	fsr2l,f,c
 51023  016898  5038               	movf	i2USBTransferOnePacket@handle+1,w,c
 51024  01689A  22DA               	addwfc	fsr2h,f,c
 51025  01689C  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 51026                           
 51027                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 51028  0168A0  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 51029  0168A4  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 51030  0168A8  0E40               	movlw	64
 51031  0168AA  16DF               	andwf	indf2,f,c
 51032                           
 51033                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 51034  0168AC  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 51035  0168B0  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 51036  0168B4  0E00               	movlw	0
 51037  0168B6  86DB               	bsf	plusw2,3,c
 51038                           
 51039                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 51040  0168B8  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 51041  0168BC  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 51042  0168C0  0E00               	movlw	0
 51043  0168C2  8EDB               	bsf	plusw2,7,c
 51044                           
 51045                           ;usb_device.c: 1036: if(dir != 0)
 51046  0168C4  502E               	movf	i2USBTransferOnePacket@dir,w,c
 51047  0168C6  B4D8               	btfsc	status,2,c
 51048  0168C8  D018               	goto	i2l11200
 51049                           
 51050                           ;usb_device.c: 1037: {
 51051                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 51052  0168CA  5036               	movf	i2USBTransferOnePacket@ep,w,c
 51053  0168CC  0D02               	mullw	2
 51054  0168CE  0E10               	movlw	low _pBDTEntryIn
 51055  0168D0  24F3               	addwf	prodl,w,c
 51056  0168D2  6ED9               	movwf	fsr2l,c
 51057  0168D4  0E00               	movlw	high _pBDTEntryIn
 51058  0168D6  20F4               	addwfc	prodh,w,c
 51059  0168D8  6EDA               	movwf	fsr2h,c
 51060  0168DA  CFDE F032          	movff	postinc2,??i2_USBTransferOnePacket
 51061  0168DE  CFDD F033          	movff	postdec2,??i2_USBTransferOnePacket+1
 51062  0168E2  0E04               	movlw	4
 51063  0168E4  1832               	xorwf	??i2_USBTransferOnePacket,w,c
 51064  0168E6  6E34               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 51065  0168E8  5033               	movf	??i2_USBTransferOnePacket+1,w,c
 51066  0168EA  6E35               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 51067  0168EC  5036               	movf	i2USBTransferOnePacket@ep,w,c
 51068  0168EE  0D02               	mullw	2
 51069  0168F0  0E10               	movlw	low _pBDTEntryIn
 51070  0168F2  24F3               	addwf	prodl,w,c
 51071  0168F4  6ED9               	movwf	fsr2l,c
 51072  0168F6  0E00               	movlw	high _pBDTEntryIn
 51073  0168F8  D017               	goto	L65
 51074  0168FA                     i2l11200:
 51075                           
 51076                           ;usb_device.c: 1041: else
 51077                           ;usb_device.c: 1042: {
 51078                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 51079  0168FA  5036               	movf	i2USBTransferOnePacket@ep,w,c
 51080  0168FC  0D02               	mullw	2
 51081  0168FE  0ED3               	movlw	low _pBDTEntryOut
 51082  016900  24F3               	addwf	prodl,w,c
 51083  016902  6ED9               	movwf	fsr2l,c
 51084  016904  0E01               	movlw	high _pBDTEntryOut
 51085  016906  20F4               	addwfc	prodh,w,c
 51086  016908  6EDA               	movwf	fsr2h,c
 51087  01690A  CFDE F032          	movff	postinc2,??i2_USBTransferOnePacket
 51088  01690E  CFDD F033          	movff	postdec2,??i2_USBTransferOnePacket+1
 51089  016912  0E04               	movlw	4
 51090  016914  1832               	xorwf	??i2_USBTransferOnePacket,w,c
 51091  016916  6E34               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 51092  016918  5033               	movf	??i2_USBTransferOnePacket+1,w,c
 51093  01691A  6E35               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 51094  01691C  5036               	movf	i2USBTransferOnePacket@ep,w,c
 51095  01691E  0D02               	mullw	2
 51096  016920  0ED3               	movlw	low _pBDTEntryOut
 51097  016922  24F3               	addwf	prodl,w,c
 51098  016924  6ED9               	movwf	fsr2l,c
 51099  016926  0E01               	movlw	high _pBDTEntryOut
 51100  016928                     L65:
 51101  016928  20F4               	addwfc	prodh,w,c
 51102  01692A  6EDA               	movwf	fsr2h,c
 51103  01692C  C034  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 51104  016930  C035  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 51105                           
 51106                           ;usb_device.c: 1045: }
 51107                           ;usb_device.c: 1046: return (void*)handle;
 51108  016934  C037  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 51109  016938  C038  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 51110  01693C  0012               	return	
 51111  01693E                     __end_ofi2_USBTransferOnePacket:
 51112                           	opt stack 0
 51113                           tosu	equ	0xFFF
 51114                           tosh	equ	0xFFE
 51115                           tosl	equ	0xFFD
 51116                           pclatu	equ	0xFFB
 51117                           pclath	equ	0xFFA
 51118                           tblptru	equ	0xFF8
 51119                           tblptrh	equ	0xFF7
 51120                           tblptrl	equ	0xFF6
 51121                           tablat	equ	0xFF5
 51122                           prodh	equ	0xFF4
 51123                           prodl	equ	0xFF3
 51124                           intcon	equ	0xFF2
 51125                           intcon2	equ	0xFF1
 51126                           intcon3	equ	0xFF0
 51127                           indf0	equ	0xFEF
 51128                           postinc0	equ	0xFEE
 51129                           fsr0h	equ	0xFEA
 51130                           fsr0l	equ	0xFE9
 51131                           wreg	equ	0xFE8
 51132                           indf1	equ	0xFE7
 51133                           postinc1	equ	0xFE6
 51134                           postdec1	equ	0xFE5
 51135                           plusw1	equ	0xFE3
 51136                           fsr1h	equ	0xFE2
 51137                           fsr1l	equ	0xFE1
 51138                           indf2	equ	0xFDF
 51139                           postinc2	equ	0xFDE
 51140                           postdec2	equ	0xFDD
 51141                           plusw2	equ	0xFDB
 51142                           fsr2h	equ	0xFDA
 51143                           fsr2l	equ	0xFD9
 51144                           status	equ	0xFD8
 51145                           
 51146 ;; *************** function _USBEnableEndpoint *****************
 51147 ;; Defined at:
 51148 ;;		line 878 in file "usb_device.c"
 51149 ;; Parameters:    Size  Location     Type
 51150 ;;  ep              1    wreg     unsigned char 
 51151 ;;  options         1    8[COMRAM] unsigned char 
 51152 ;; Auto vars:     Size  Location     Type
 51153 ;;  ep              1   11[COMRAM] unsigned char 
 51154 ;;  p               2    9[COMRAM] PTR unsigned char 
 51155 ;;		 -> UEP0(1), 
 51156 ;; Return value:  Size  Location     Type
 51157 ;;                  1    wreg      void 
 51158 ;; Registers used:
 51159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51160 ;; Tracked objects:
 51161 ;;		On entry : 0/0
 51162 ;;		On exit  : 0/0
 51163 ;;		Unchanged: 0/0
 51164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51165 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51166 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51168 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51169 ;;Total ram usage:        4 bytes
 51170 ;; Hardware stack levels used:    1
 51171 ;; Hardware stack levels required when called:    1
 51172 ;; This function calls:
 51173 ;;		_USBConfigureEndpoint
 51174 ;; This function is called by:
 51175 ;;		_APP_DeviceCustomHIDInitialize
 51176 ;;		_APP_DeviceMSDInitialize
 51177 ;; This function uses a non-reentrant model
 51178 ;;
 51179                           
 51180                           	psect	text244
 51181  01A0B8                     __ptext244:
 51182                           	opt stack 0
 51183  01A0B8                     _USBEnableEndpoint:
 51184                           	opt stack 13
 51185                           
 51186                           ;incstack = 0
 51187                           ;USBEnableEndpoint@ep stored from wreg
 51188  01A0B8  6E39               	movwf	USBEnableEndpoint@ep,c
 51189                           
 51190                           ;usb_device.c: 880: unsigned char* p;
 51191                           ;usb_device.c: 884: if(options & 0x04)
 51192  01A0BA  A436               	btfss	USBEnableEndpoint@options,2,c
 51193  01A0BC  D005               	goto	i2l11234
 51194                           
 51195                           ;usb_device.c: 885: {
 51196                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 51197  01A0BE  0E00               	movlw	0
 51198  01A0C0  6E2E               	movwf	USBConfigureEndpoint@direction,c
 51199  01A0C2  5039               	movf	USBEnableEndpoint@ep,w,c
 51200  01A0C4  ECC8  F0C1         	call	_USBConfigureEndpoint
 51201  01A0C8                     i2l11234:
 51202                           
 51203                           ;usb_device.c: 887: }
 51204                           ;usb_device.c: 888: if(options & 0x02)
 51205  01A0C8  A236               	btfss	USBEnableEndpoint@options,1,c
 51206  01A0CA  D005               	goto	i2l11238
 51207                           
 51208                           ;usb_device.c: 889: {
 51209                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 51210  01A0CC  0E01               	movlw	1
 51211  01A0CE  6E2E               	movwf	USBConfigureEndpoint@direction,c
 51212  01A0D0  5039               	movf	USBEnableEndpoint@ep,w,c
 51213  01A0D2  ECC8  F0C1         	call	_USBConfigureEndpoint
 51214  01A0D6                     i2l11238:
 51215                           
 51216                           ;usb_device.c: 891: }
 51217                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 51218  01A0D6  5039               	movf	USBEnableEndpoint@ep,w,c
 51219  01A0D8  0D01               	mullw	1
 51220  01A0DA  0E26               	movlw	38
 51221  01A0DC  24F3               	addwf	prodl,w,c
 51222  01A0DE  6E37               	movwf	USBEnableEndpoint@p,c
 51223  01A0E0  0E0F               	movlw	15
 51224  01A0E2  20F4               	addwfc	prodh,w,c
 51225  01A0E4  6E38               	movwf	USBEnableEndpoint@p+1,c
 51226                           
 51227                           ;usb_device.c: 901: *p = options;
 51228  01A0E6  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 51229  01A0EA  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 51230  01A0EE  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 51231  01A0F2  0012               	return		;funcret
 51232  01A0F4                     __end_of_USBEnableEndpoint:
 51233                           	opt stack 0
 51234                           tosu	equ	0xFFF
 51235                           tosh	equ	0xFFE
 51236                           tosl	equ	0xFFD
 51237                           pclatu	equ	0xFFB
 51238                           pclath	equ	0xFFA
 51239                           tblptru	equ	0xFF8
 51240                           tblptrh	equ	0xFF7
 51241                           tblptrl	equ	0xFF6
 51242                           tablat	equ	0xFF5
 51243                           prodh	equ	0xFF4
 51244                           prodl	equ	0xFF3
 51245                           intcon	equ	0xFF2
 51246                           intcon2	equ	0xFF1
 51247                           intcon3	equ	0xFF0
 51248                           indf0	equ	0xFEF
 51249                           postinc0	equ	0xFEE
 51250                           fsr0h	equ	0xFEA
 51251                           fsr0l	equ	0xFE9
 51252                           wreg	equ	0xFE8
 51253                           indf1	equ	0xFE7
 51254                           postinc1	equ	0xFE6
 51255                           postdec1	equ	0xFE5
 51256                           plusw1	equ	0xFE3
 51257                           fsr1h	equ	0xFE2
 51258                           fsr1l	equ	0xFE1
 51259                           indf2	equ	0xFDF
 51260                           postinc2	equ	0xFDE
 51261                           postdec2	equ	0xFDD
 51262                           plusw2	equ	0xFDB
 51263                           fsr2h	equ	0xFDA
 51264                           fsr2l	equ	0xFD9
 51265                           status	equ	0xFD8
 51266                           
 51267 ;; *************** function _USBConfigureEndpoint *****************
 51268 ;; Defined at:
 51269 ;;		line 1545 in file "usb_device.c"
 51270 ;; Parameters:    Size  Location     Type
 51271 ;;  EPNum           1    wreg     unsigned char 
 51272 ;;  direction       1    0[COMRAM] unsigned char 
 51273 ;; Auto vars:     Size  Location     Type
 51274 ;;  EPNum           1    5[COMRAM] unsigned char 
 51275 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 51276 ;;		 -> BDT(48), 
 51277 ;; Return value:  Size  Location     Type
 51278 ;;                  1    wreg      void 
 51279 ;; Registers used:
 51280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 51281 ;; Tracked objects:
 51282 ;;		On entry : 0/0
 51283 ;;		On exit  : 0/0
 51284 ;;		Unchanged: 0/0
 51285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51286 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51287 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51288 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51289 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51290 ;;Total ram usage:        8 bytes
 51291 ;; Hardware stack levels used:    1
 51292 ;; This function calls:
 51293 ;;		Nothing
 51294 ;; This function is called by:
 51295 ;;		_USBEnableEndpoint
 51296 ;; This function uses a non-reentrant model
 51297 ;;
 51298                           
 51299                           	psect	text245
 51300  018390                     __ptext245:
 51301                           	opt stack 0
 51302  018390                     _USBConfigureEndpoint:
 51303                           	opt stack 13
 51304                           
 51305                           ;incstack = 0
 51306                           ;USBConfigureEndpoint@EPNum stored from wreg
 51307  018390  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 51308                           
 51309                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;
 51310                           ;usb_device.c: 1551: handle = (volatile BDT_ENTRY*)&BDT[0];
 51311  018392  0E00               	movlw	0
 51312  018394  6E34               	movwf	USBConfigureEndpoint@handle,c
 51313  018396  0E0D               	movlw	13
 51314  018398  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 51315                           
 51316                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 51317  01839A  502E               	movf	USBConfigureEndpoint@direction,w,c
 51318  01839C  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 51319  01839E  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 51320  0183A0  90D8               	bcf	status,0,c
 51321  0183A2  362F               	rlcf	??_USBConfigureEndpoint,f,c
 51322  0183A4  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 51323  0183A6  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 51324  0183A8  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 51325  0183AA  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 51326  0183AC  90D8               	bcf	status,0,c
 51327  0183AE  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 51328  0183B0  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 51329  0183B2  90D8               	bcf	status,0,c
 51330  0183B4  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 51331  0183B6  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 51332  0183B8  502F               	movf	??_USBConfigureEndpoint,w,c
 51333  0183BA  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 51334  0183BC  5030               	movf	??_USBConfigureEndpoint+1,w,c
 51335  0183BE  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 51336  0183C0  90D8               	bcf	status,0,c
 51337  0183C2  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 51338  0183C4  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 51339  0183C6  90D8               	bcf	status,0,c
 51340  0183C8  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 51341  0183CA  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 51342  0183CC  5031               	movf	??_USBConfigureEndpoint+2,w,c
 51343  0183CE  2634               	addwf	USBConfigureEndpoint@handle,f,c
 51344  0183D0  5032               	movf	??_USBConfigureEndpoint+3,w,c
 51345  0183D2  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 51346                           
 51347                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 51348  0183D4  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 51349  0183D8  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 51350  0183DC  9EDF               	bcf	indf2,7,c
 51351                           
 51352                           ;usb_device.c: 1559: if(direction == 0)
 51353  0183DE  502E               	movf	USBConfigureEndpoint@direction,w,c
 51354  0183E0  A4D8               	btfss	status,2,c
 51355  0183E2  D007               	goto	i2l11048
 51356                           
 51357                           ;usb_device.c: 1560: {
 51358                           ;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 51359  0183E4  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 51360  0183E6  0D02               	mullw	2
 51361  0183E8  0ED3               	movlw	low _pBDTEntryOut
 51362  0183EA  24F3               	addwf	prodl,w,c
 51363  0183EC  6ED9               	movwf	fsr2l,c
 51364  0183EE  0E01               	movlw	high _pBDTEntryOut
 51365  0183F0  D006               	goto	L66
 51366  0183F2                     i2l11048:
 51367                           
 51368                           ;usb_device.c: 1563: else
 51369                           ;usb_device.c: 1564: {
 51370                           ;usb_device.c: 1565: pBDTEntryIn[EPNum] = handle;
 51371  0183F2  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 51372  0183F4  0D02               	mullw	2
 51373  0183F6  0E10               	movlw	low _pBDTEntryIn
 51374  0183F8  24F3               	addwf	prodl,w,c
 51375  0183FA  6ED9               	movwf	fsr2l,c
 51376  0183FC  0E00               	movlw	high _pBDTEntryIn
 51377  0183FE                     L66:
 51378  0183FE  20F4               	addwfc	prodh,w,c
 51379  018400  6EDA               	movwf	fsr2h,c
 51380  018402  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 51381  018406  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 51382                           
 51383                           ;usb_device.c: 1566: }
 51384                           ;usb_device.c: 1569: handle->STAT.DTS = 0;
 51385  01840A  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 51386  01840E  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 51387  018412  9CDF               	bcf	indf2,6,c
 51388                           
 51389                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 51390  018414  EE20 F004          	lfsr	2,4
 51391  018418  5034               	movf	USBConfigureEndpoint@handle,w,c
 51392  01841A  26D9               	addwf	fsr2l,f,c
 51393  01841C  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 51394  01841E  22DA               	addwfc	fsr2h,f,c
 51395  018420  8CDF               	bsf	indf2,6,c
 51396  018422  0012               	return		;funcret
 51397  018424                     __end_of_USBConfigureEndpoint:
 51398                           	opt stack 0
 51399                           tosu	equ	0xFFF
 51400                           tosh	equ	0xFFE
 51401                           tosl	equ	0xFFD
 51402                           pclatu	equ	0xFFB
 51403                           pclath	equ	0xFFA
 51404                           tblptru	equ	0xFF8
 51405                           tblptrh	equ	0xFF7
 51406                           tblptrl	equ	0xFF6
 51407                           tablat	equ	0xFF5
 51408                           prodh	equ	0xFF4
 51409                           prodl	equ	0xFF3
 51410                           intcon	equ	0xFF2
 51411                           intcon2	equ	0xFF1
 51412                           intcon3	equ	0xFF0
 51413                           indf0	equ	0xFEF
 51414                           postinc0	equ	0xFEE
 51415                           fsr0h	equ	0xFEA
 51416                           fsr0l	equ	0xFE9
 51417                           wreg	equ	0xFE8
 51418                           indf1	equ	0xFE7
 51419                           postinc1	equ	0xFE6
 51420                           postdec1	equ	0xFE5
 51421                           plusw1	equ	0xFE3
 51422                           fsr1h	equ	0xFE2
 51423                           fsr1l	equ	0xFE1
 51424                           indf2	equ	0xFDF
 51425                           postinc2	equ	0xFDE
 51426                           postdec2	equ	0xFDD
 51427                           plusw2	equ	0xFDB
 51428                           fsr2h	equ	0xFDA
 51429                           fsr2l	equ	0xFD9
 51430                           status	equ	0xFD8
 51431                           
 51432 ;; *************** function _USBCtrlTrfOutHandler *****************
 51433 ;; Defined at:
 51434 ;;		line 2540 in file "usb_device.c"
 51435 ;; Parameters:    Size  Location     Type
 51436 ;;		None
 51437 ;; Auto vars:     Size  Location     Type
 51438 ;;		None
 51439 ;; Return value:  Size  Location     Type
 51440 ;;                  1    wreg      void 
 51441 ;; Registers used:
 51442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51443 ;; Tracked objects:
 51444 ;;		On entry : 0/0
 51445 ;;		On exit  : 0/0
 51446 ;;		Unchanged: 0/0
 51447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51452 ;;Total ram usage:        0 bytes
 51453 ;; Hardware stack levels used:    1
 51454 ;; Hardware stack levels required when called:    2
 51455 ;; This function calls:
 51456 ;;		_USBCtrlTrfRxService
 51457 ;; This function is called by:
 51458 ;;		_USBCtrlEPService
 51459 ;; This function uses a non-reentrant model
 51460 ;;
 51461                           
 51462                           	psect	text246
 51463  019902                     __ptext246:
 51464                           	opt stack 0
 51465  019902                     _USBCtrlTrfOutHandler:
 51466                           	opt stack 13
 51467                           
 51468                           ;usb_device.c: 2542: if(controlTransferState == 2)
 51469                           
 51470                           ;incstack = 0
 51471  019902  0E02               	movlw	2
 51472  019904  1829               	xorwf	_controlTransferState,w,c	;volatile
 51473  019906  A4D8               	btfss	status,2,c
 51474  019908  D003               	goto	i2l13238
 51475                           
 51476                           ;usb_device.c: 2543: {
 51477                           ;usb_device.c: 2544: USBCtrlTrfRxService();
 51478  01990A  EC8C  F0B1         	call	_USBCtrlTrfRxService	;wreg free
 51479                           
 51480                           ;usb_device.c: 2545: }
 51481  01990E  0012               	return	
 51482  019910                     i2l13238:
 51483                           
 51484                           ;usb_device.c: 2546: else
 51485                           ;usb_device.c: 2547: {
 51486                           ;usb_device.c: 2550: controlTransferState = 0;
 51487  019910  0E00               	movlw	0
 51488  019912  6E29               	movwf	_controlTransferState,c	;volatile
 51489                           
 51490                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 51491  019914  5025               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 51492  019916  A4D8               	btfss	status,2,c
 51493  019918  D01F               	goto	i2l13246
 51494                           
 51495                           ;usb_device.c: 2558: {
 51496                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 51497  01991A  EE20 F001          	lfsr	2,1
 51498  01991E  5018               	movf	_pBDTEntryEP0OutNext,w,c
 51499  019920  26D9               	addwf	fsr2l,f,c
 51500  019922  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 51501  019924  22DA               	addwfc	fsr2h,f,c
 51502  019926  0E08               	movlw	8
 51503  019928  6EDF               	movwf	indf2,c
 51504                           
 51505                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 51506  01992A  EE20 F002          	lfsr	2,2
 51507  01992E  5018               	movf	_pBDTEntryEP0OutNext,w,c
 51508  019930  26D9               	addwf	fsr2l,f,c
 51509  019932  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 51510  019934  22DA               	addwfc	fsr2h,f,c
 51511  019936  0E30               	movlw	48
 51512  019938  6EDE               	movwf	postinc2,c
 51513  01993A  0E0D               	movlw	13
 51514  01993C  6EDD               	movwf	postdec2,c
 51515                           
 51516                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 51517  01993E  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51518  019942  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51519  019946  0E0C               	movlw	12
 51520  019948  6EDF               	movwf	indf2,c
 51521                           
 51522                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 51523  01994A  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51524  01994E  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51525  019952  0E00               	movlw	0
 51526  019954  8EDB               	bsf	plusw2,7,c
 51527                           
 51528                           ;usb_device.c: 2563: }
 51529  019956  0012               	return	
 51530  019958                     i2l13246:
 51531                           
 51532                           ;usb_device.c: 2564: else
 51533                           ;usb_device.c: 2565: {
 51534                           ;usb_device.c: 2566: BothEP0OutUOWNsSet = 0;
 51535  019958  0E00               	movlw	0
 51536  01995A  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 51537  01995C  0012               	return	
 51538  01995E                     __end_of_USBCtrlTrfOutHandler:
 51539                           	opt stack 0
 51540                           tosu	equ	0xFFF
 51541                           tosh	equ	0xFFE
 51542                           tosl	equ	0xFFD
 51543                           pclatu	equ	0xFFB
 51544                           pclath	equ	0xFFA
 51545                           tblptru	equ	0xFF8
 51546                           tblptrh	equ	0xFF7
 51547                           tblptrl	equ	0xFF6
 51548                           tablat	equ	0xFF5
 51549                           prodh	equ	0xFF4
 51550                           prodl	equ	0xFF3
 51551                           intcon	equ	0xFF2
 51552                           intcon2	equ	0xFF1
 51553                           intcon3	equ	0xFF0
 51554                           indf0	equ	0xFEF
 51555                           postinc0	equ	0xFEE
 51556                           fsr0h	equ	0xFEA
 51557                           fsr0l	equ	0xFE9
 51558                           wreg	equ	0xFE8
 51559                           indf1	equ	0xFE7
 51560                           postinc1	equ	0xFE6
 51561                           postdec1	equ	0xFE5
 51562                           plusw1	equ	0xFE3
 51563                           fsr1h	equ	0xFE2
 51564                           fsr1l	equ	0xFE1
 51565                           indf2	equ	0xFDF
 51566                           postinc2	equ	0xFDE
 51567                           postdec2	equ	0xFDD
 51568                           plusw2	equ	0xFDB
 51569                           fsr2h	equ	0xFDA
 51570                           fsr2l	equ	0xFD9
 51571                           status	equ	0xFD8
 51572                           
 51573 ;; *************** function _USBCtrlTrfRxService *****************
 51574 ;; Defined at:
 51575 ;;		line 1854 in file "usb_device.c"
 51576 ;; Parameters:    Size  Location     Type
 51577 ;;		None
 51578 ;; Auto vars:     Size  Location     Type
 51579 ;;  byteToRead      1    1[COMRAM] unsigned char 
 51580 ;;  i               1    0[COMRAM] unsigned char 
 51581 ;; Return value:  Size  Location     Type
 51582 ;;                  1    wreg      void 
 51583 ;; Registers used:
 51584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51585 ;; Tracked objects:
 51586 ;;		On entry : 0/0
 51587 ;;		On exit  : 0/0
 51588 ;;		Unchanged: 0/0
 51589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51594 ;;Total ram usage:        2 bytes
 51595 ;; Hardware stack levels used:    1
 51596 ;; Hardware stack levels required when called:    1
 51597 ;; This function calls:
 51598 ;;		_USBCtrlEPAllowStatusStage
 51599 ;; This function is called by:
 51600 ;;		_USBCtrlTrfOutHandler
 51601 ;; This function uses a non-reentrant model
 51602 ;;
 51603                           
 51604                           	psect	text247
 51605  016318                     __ptext247:
 51606                           	opt stack 0
 51607  016318                     _USBCtrlTrfRxService:
 51608                           	opt stack 13
 51609                           
 51610                           ;usb_device.c: 1856: uint8_t byteToRead;
 51611                           ;usb_device.c: 1857: uint8_t i;
 51612                           ;usb_device.c: 1861: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 51613                           
 51614                           ;incstack = 0
 51615  016318  EE20 F001          	lfsr	2,1
 51616  01631C  501A               	movf	_pBDTEntryEP0OutCurrent,w,c
 51617  01631E  26D9               	addwf	fsr2l,f,c
 51618  016320  501B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 51619  016322  22DA               	addwfc	fsr2h,f,c
 51620  016324  50DF               	movf	indf2,w,c
 51621  016326  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 51622                           
 51623                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 51624  016328  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 51625  01632A  5C05               	subwf	_outPipes+4,w,c	;volatile
 51626  01632C  0E00               	movlw	0
 51627  01632E  5806               	subwfb	_outPipes+5,w,c	;volatile
 51628  016330  A0D8               	btfss	status,0,c
 51629                           
 51630                           ;usb_device.c: 1868: {
 51631                           ;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 51632  016332  C005  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 51633                           
 51634                           ;usb_device.c: 1870: }
 51635                           ;usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 51636  016336  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 51637  016338  5E05               	subwf	_outPipes+4,f,c	;volatile
 51638  01633A  0E00               	movlw	0
 51639  01633C  5A06               	subwfb	_outPipes+5,f,c	;volatile
 51640                           
 51641                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 51642  01633E  0E00               	movlw	0
 51643  016340  6E2E               	movwf	USBCtrlTrfRxService@i,c
 51644  016342  D011               	goto	i2l12704
 51645  016344                     i2l12698:
 51646                           
 51647                           ;usb_device.c: 1877: {
 51648                           ;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 51649  016344  502E               	movf	USBCtrlTrfRxService@i,w,c
 51650  016346  0D01               	mullw	1
 51651  016348  0E38               	movlw	56
 51652  01634A  24F3               	addwf	prodl,w,c
 51653  01634C  6ED9               	movwf	fsr2l,c
 51654  01634E  0E0D               	movlw	13
 51655  016350  20F4               	addwfc	prodh,w,c
 51656  016352  6EDA               	movwf	fsr2h,c
 51657  016354  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 51658  016358  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 51659  01635C  CFDF FFE7          	movff	indf2,indf1
 51660  016360  4A01               	infsnz	_outPipes,f,c	;volatile
 51661  016362  2A02               	incf	_outPipes+1,f,c	;volatile
 51662  016364  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 51663  016366                     i2l12704:
 51664  016366  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 51665  016368  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 51666  01636A  A0D8               	btfss	status,0,c
 51667  01636C  D7EB               	goto	i2l12698
 51668                           
 51669                           ;usb_device.c: 1879: }
 51670                           ;usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 51671  01636E  5005               	movf	_outPipes+4,w,c	;volatile
 51672  016370  1006               	iorwf	_outPipes+5,w,c	;volatile
 51673  016372  B4D8               	btfsc	status,2,c
 51674  016374  D032               	goto	i2l12720
 51675                           
 51676                           ;usb_device.c: 1884: {
 51677                           ;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 51678  016376  EE20 F001          	lfsr	2,1
 51679  01637A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 51680  01637C  26D9               	addwf	fsr2l,f,c
 51681  01637E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 51682  016380  22DA               	addwfc	fsr2h,f,c
 51683  016382  0E08               	movlw	8
 51684  016384  6EDF               	movwf	indf2,c
 51685                           
 51686                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 51687  016386  EE20 F002          	lfsr	2,2
 51688  01638A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 51689  01638C  26D9               	addwf	fsr2l,f,c
 51690  01638E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 51691  016390  22DA               	addwfc	fsr2h,f,c
 51692  016392  0E38               	movlw	56
 51693  016394  6EDE               	movwf	postinc2,c
 51694  016396  0E0D               	movlw	13
 51695  016398  6EDD               	movwf	postdec2,c
 51696                           
 51697                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 51698  01639A  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 51699  01639E  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 51700  0163A2  BCDF               	btfsc	indf2,6,c
 51701  0163A4  D00D               	goto	i2l12716
 51702                           
 51703                           ;usb_device.c: 1888: {
 51704                           ;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 51705  0163A6  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51706  0163AA  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51707  0163AE  0E48               	movlw	72
 51708  0163B0  6EDF               	movwf	indf2,c
 51709                           
 51710                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 51711  0163B2  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51712  0163B6  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51713  0163BA  0E00               	movlw	0
 51714  0163BC  8EDB               	bsf	plusw2,7,c
 51715                           
 51716                           ;usb_device.c: 1891: }
 51717  0163BE  0012               	return	
 51718  0163C0                     i2l12716:
 51719                           
 51720                           ;usb_device.c: 1892: else
 51721                           ;usb_device.c: 1893: {
 51722                           ;usb_device.c: 1894: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 51723  0163C0  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51724  0163C4  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51725  0163C8  0E08               	movlw	8
 51726  0163CA  6EDF               	movwf	indf2,c
 51727                           
 51728                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 51729  0163CC  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51730  0163D0  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51731  0163D4  0E00               	movlw	0
 51732  0163D6  8EDB               	bsf	plusw2,7,c
 51733                           
 51734                           ;usb_device.c: 1896: }
 51735                           ;usb_device.c: 1897: }
 51736  0163D8  0012               	return	
 51737  0163DA                     i2l12720:
 51738                           
 51739                           ;usb_device.c: 1898: else
 51740                           ;usb_device.c: 1899: {
 51741                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->CNT = 8;
 51742  0163DA  EE20 F001          	lfsr	2,1
 51743  0163DE  5018               	movf	_pBDTEntryEP0OutNext,w,c
 51744  0163E0  26D9               	addwf	fsr2l,f,c
 51745  0163E2  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 51746  0163E4  22DA               	addwfc	fsr2h,f,c
 51747  0163E6  0E08               	movlw	8
 51748  0163E8  6EDF               	movwf	indf2,c
 51749                           
 51750                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 51751  0163EA  EE20 F002          	lfsr	2,2
 51752  0163EE  5018               	movf	_pBDTEntryEP0OutNext,w,c
 51753  0163F0  26D9               	addwf	fsr2l,f,c
 51754  0163F2  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 51755  0163F4  22DA               	addwfc	fsr2h,f,c
 51756  0163F6  0E30               	movlw	48
 51757  0163F8  6EDE               	movwf	postinc2,c
 51758  0163FA  0E0D               	movlw	13
 51759  0163FC  6EDD               	movwf	postdec2,c
 51760                           
 51761                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 51762  0163FE  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51763  016402  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51764  016406  0E04               	movlw	4
 51765  016408  6EDF               	movwf	indf2,c
 51766                           
 51767                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 51768  01640A  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51769  01640E  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51770  016412  0E00               	movlw	0
 51771  016414  8EDB               	bsf	plusw2,7,c
 51772                           
 51773                           ;usb_device.c: 1928: }
 51774                           ;usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 51775                           
 51776                           ;usb_device.c: 1917: {
 51777                           ;usb_device.c: 1923: outPipes[0].pFunc();
 51778  016416  9E04               	bcf	_outPipes+3,7,c	;volatile
 51779                           
 51780                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 51781  016418  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 51782  01641A  A4D8               	btfss	status,2,c
 51783  01641C  0012               	return	
 51784                           
 51785                           ;usb_device.c: 1944: {
 51786                           ;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 51787  01641E  ECB3  F0BA         	call	_USBCtrlEPAllowStatusStage	;wreg free
 51788  016422  0012               	return	
 51789  016424                     __end_of_USBCtrlTrfRxService:
 51790                           	opt stack 0
 51791                           tosu	equ	0xFFF
 51792                           tosh	equ	0xFFE
 51793                           tosl	equ	0xFFD
 51794                           pclatu	equ	0xFFB
 51795                           pclath	equ	0xFFA
 51796                           tblptru	equ	0xFF8
 51797                           tblptrh	equ	0xFF7
 51798                           tblptrl	equ	0xFF6
 51799                           tablat	equ	0xFF5
 51800                           prodh	equ	0xFF4
 51801                           prodl	equ	0xFF3
 51802                           intcon	equ	0xFF2
 51803                           intcon2	equ	0xFF1
 51804                           intcon3	equ	0xFF0
 51805                           indf0	equ	0xFEF
 51806                           postinc0	equ	0xFEE
 51807                           fsr0h	equ	0xFEA
 51808                           fsr0l	equ	0xFE9
 51809                           wreg	equ	0xFE8
 51810                           indf1	equ	0xFE7
 51811                           postinc1	equ	0xFE6
 51812                           postdec1	equ	0xFE5
 51813                           plusw1	equ	0xFE3
 51814                           fsr1h	equ	0xFE2
 51815                           fsr1l	equ	0xFE1
 51816                           indf2	equ	0xFDF
 51817                           postinc2	equ	0xFDE
 51818                           postdec2	equ	0xFDD
 51819                           plusw2	equ	0xFDB
 51820                           fsr2h	equ	0xFDA
 51821                           fsr2l	equ	0xFD9
 51822                           status	equ	0xFD8
 51823                           
 51824 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 51825 ;; Defined at:
 51826 ;;		line 1418 in file "usb_device.c"
 51827 ;; Parameters:    Size  Location     Type
 51828 ;;		None
 51829 ;; Auto vars:     Size  Location     Type
 51830 ;;		None
 51831 ;; Return value:  Size  Location     Type
 51832 ;;                  1    wreg      void 
 51833 ;; Registers used:
 51834 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 51835 ;; Tracked objects:
 51836 ;;		On entry : 0/0
 51837 ;;		On exit  : 0/0
 51838 ;;		Unchanged: 0/0
 51839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51844 ;;Total ram usage:        0 bytes
 51845 ;; Hardware stack levels used:    1
 51846 ;; This function calls:
 51847 ;;		Nothing
 51848 ;; This function is called by:
 51849 ;;		_USBDeviceTasks
 51850 ;;		_USBCtrlEPServiceComplete
 51851 ;;		_USBCtrlTrfRxService
 51852 ;; This function uses a non-reentrant model
 51853 ;;
 51854                           
 51855                           	psect	text248
 51856  017566                     __ptext248:
 51857                           	opt stack 0
 51858  017566                     _USBCtrlEPAllowStatusStage:
 51859                           	opt stack 13
 51860                           
 51861                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 51862                           
 51863                           ;incstack = 0
 51864  017566  5022               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 51865  017568  A4D8               	btfss	status,2,c
 51866  01756A  0012               	return	
 51867                           
 51868                           ;usb_device.c: 1426: {
 51869                           ;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 51870  01756C  0E01               	movlw	1
 51871  01756E  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 51872                           
 51873                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 51874  017570  5021               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 51875  017572  A4D8               	btfss	status,2,c
 51876  017574  0012               	return	
 51877                           
 51878                           ;usb_device.c: 1429: {
 51879                           ;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 51880  017576  0E01               	movlw	1
 51881  017578  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 51882                           
 51883                           ;usb_device.c: 1434: if(controlTransferState == 2)
 51884  01757A  0E02               	movlw	2
 51885  01757C  1829               	xorwf	_controlTransferState,w,c	;volatile
 51886  01757E  A4D8               	btfss	status,2,c
 51887  017580  D015               	goto	i2l12036
 51888                           
 51889                           ;usb_device.c: 1435: {
 51890                           ;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 51891  017582  EE20 F001          	lfsr	2,1
 51892  017586  5010               	movf	_pBDTEntryIn,w,c
 51893  017588  26D9               	addwf	fsr2l,f,c
 51894  01758A  5011               	movf	_pBDTEntryIn+1,w,c
 51895  01758C  22DA               	addwfc	fsr2h,f,c
 51896  01758E  0E00               	movlw	0
 51897  017590  6EDF               	movwf	indf2,c
 51898                           
 51899                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 51900  017592  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 51901  017596  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51902  01759A  0E48               	movlw	72
 51903  01759C  6EDF               	movwf	indf2,c
 51904                           
 51905                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 51906  01759E  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 51907  0175A2  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51908  0175A6  0E00               	movlw	0
 51909  0175A8  8EDB               	bsf	plusw2,7,c
 51910                           
 51911                           ;usb_device.c: 1439: }
 51912  0175AA  0012               	return	
 51913  0175AC                     i2l12036:
 51914                           
 51915                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 51916  0175AC  0429               	decf	_controlTransferState,w,c	;volatile
 51917  0175AE  A4D8               	btfss	status,2,c
 51918  0175B0  0012               	return	
 51919                           
 51920                           ;usb_device.c: 1441: {
 51921                           ;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 51922  0175B2  0E00               	movlw	0
 51923  0175B4  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 51924                           
 51925                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 51926  0175B6  EE20 F001          	lfsr	2,1
 51927  0175BA  501A               	movf	_pBDTEntryEP0OutCurrent,w,c
 51928  0175BC  26D9               	addwf	fsr2l,f,c
 51929  0175BE  501B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 51930  0175C0  22DA               	addwfc	fsr2h,f,c
 51931  0175C2  0E08               	movlw	8
 51932  0175C4  6EDF               	movwf	indf2,c
 51933                           
 51934                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 51935  0175C6  EE20 F002          	lfsr	2,2
 51936  0175CA  501A               	movf	_pBDTEntryEP0OutCurrent,w,c
 51937  0175CC  26D9               	addwf	fsr2l,f,c
 51938  0175CE  501B               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 51939  0175D0  22DA               	addwfc	fsr2h,f,c
 51940  0175D2  0E30               	movlw	48
 51941  0175D4  6EDE               	movwf	postinc2,c
 51942  0175D6  0E0D               	movlw	13
 51943  0175D8  6EDD               	movwf	postdec2,c
 51944                           
 51945                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 51946  0175DA  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 51947  0175DE  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 51948  0175E2  0E04               	movlw	4
 51949  0175E4  6EDF               	movwf	indf2,c
 51950                           
 51951                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 51952  0175E6  C01A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 51953  0175EA  C01B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 51954  0175EE  0E00               	movlw	0
 51955  0175F0  8EDB               	bsf	plusw2,7,c
 51956                           
 51957                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 51958  0175F2  0E01               	movlw	1
 51959  0175F4  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 51960                           
 51961                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 51962  0175F6  EE20 F001          	lfsr	2,1
 51963  0175FA  5018               	movf	_pBDTEntryEP0OutNext,w,c
 51964  0175FC  26D9               	addwf	fsr2l,f,c
 51965  0175FE  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 51966  017600  22DA               	addwfc	fsr2h,f,c
 51967  017602  0E08               	movlw	8
 51968  017604  6EDF               	movwf	indf2,c
 51969                           
 51970                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 51971  017606  EE20 F002          	lfsr	2,2
 51972  01760A  5018               	movf	_pBDTEntryEP0OutNext,w,c
 51973  01760C  26D9               	addwf	fsr2l,f,c
 51974  01760E  5019               	movf	_pBDTEntryEP0OutNext+1,w,c
 51975  017610  22DA               	addwfc	fsr2h,f,c
 51976  017612  0E30               	movlw	48
 51977  017614  6EDE               	movwf	postinc2,c
 51978  017616  0E0D               	movlw	13
 51979  017618  6EDD               	movwf	postdec2,c
 51980                           
 51981                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 51982  01761A  C018  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51983  01761E  C019  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51984  017622  0E80               	movlw	128
 51985  017624  6EDF               	movwf	indf2,c
 51986  017626  0012               	return	
 51987  017628                     __end_of_USBCtrlEPAllowStatusStage:
 51988                           	opt stack 0
 51989                           tosu	equ	0xFFF
 51990                           tosh	equ	0xFFE
 51991                           tosl	equ	0xFFD
 51992                           pclatu	equ	0xFFB
 51993                           pclath	equ	0xFFA
 51994                           tblptru	equ	0xFF8
 51995                           tblptrh	equ	0xFF7
 51996                           tblptrl	equ	0xFF6
 51997                           tablat	equ	0xFF5
 51998                           prodh	equ	0xFF4
 51999                           prodl	equ	0xFF3
 52000                           intcon	equ	0xFF2
 52001                           intcon2	equ	0xFF1
 52002                           intcon3	equ	0xFF0
 52003                           indf0	equ	0xFEF
 52004                           postinc0	equ	0xFEE
 52005                           fsr0h	equ	0xFEA
 52006                           fsr0l	equ	0xFE9
 52007                           wreg	equ	0xFE8
 52008                           indf1	equ	0xFE7
 52009                           postinc1	equ	0xFE6
 52010                           postdec1	equ	0xFE5
 52011                           plusw1	equ	0xFE3
 52012                           fsr1h	equ	0xFE2
 52013                           fsr1l	equ	0xFE1
 52014                           indf2	equ	0xFDF
 52015                           postinc2	equ	0xFDE
 52016                           postdec2	equ	0xFDD
 52017                           plusw2	equ	0xFDB
 52018                           fsr2h	equ	0xFDA
 52019                           fsr2l	equ	0xFD9
 52020                           status	equ	0xFD8
 52021                           
 52022 ;; *************** function _USBCtrlTrfInHandler *****************
 52023 ;; Defined at:
 52024 ;;		line 2594 in file "usb_device.c"
 52025 ;; Parameters:    Size  Location     Type
 52026 ;;		None
 52027 ;; Auto vars:     Size  Location     Type
 52028 ;;  lastDTS         1    1[COMRAM] unsigned char 
 52029 ;; Return value:  Size  Location     Type
 52030 ;;                  1    wreg      void 
 52031 ;; Registers used:
 52032 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 52033 ;; Tracked objects:
 52034 ;;		On entry : 0/0
 52035 ;;		On exit  : 0/0
 52036 ;;		Unchanged: 0/0
 52037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52041 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52042 ;;Total ram usage:        1 bytes
 52043 ;; Hardware stack levels used:    1
 52044 ;; Hardware stack levels required when called:    1
 52045 ;; This function calls:
 52046 ;;		_USBCtrlTrfTxService
 52047 ;; This function is called by:
 52048 ;;		_USBCtrlEPService
 52049 ;; This function uses a non-reentrant model
 52050 ;;
 52051                           
 52052                           	psect	text249
 52053  0176E8                     __ptext249:
 52054                           	opt stack 0
 52055  0176E8                     _USBCtrlTrfInHandler:
 52056                           	opt stack 14
 52057                           
 52058                           ;usb_device.c: 2596: uint8_t lastDTS;
 52059                           ;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 52060                           
 52061                           ;incstack = 0
 52062  0176E8  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52063  0176EC  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52064  0176F0  0E00               	movlw	0
 52065  0176F2  BCDF               	btfsc	indf2,6,c
 52066  0176F4  0E01               	movlw	1
 52067  0176F6  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 52068                           
 52069                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 52070  0176F8  0E04               	movlw	4
 52071  0176FA  1810               	xorwf	_pBDTEntryIn,w,c
 52072  0176FC  6E10               	movwf	_pBDTEntryIn,c
 52073  0176FE  5011               	movf	_pBDTEntryIn+1,w,c
 52074  017700  6E11               	movwf	_pBDTEntryIn+1,c
 52075                           
 52076                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 52077  017702  0E08               	movlw	8
 52078  017704  182B               	xorwf	_USBDeviceState,w,c	;volatile
 52079  017706  A4D8               	btfss	status,2,c
 52080  017708  D00D               	goto	i2l13262
 52081                           
 52082                           ;usb_device.c: 2607: {
 52083                           ;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 52084  01770A  010D               	movlb	13	; () banked
 52085  01770C  5132               	movf	50,w,b	;volatile
 52086  01770E  0B7F               	andlw	127
 52087  017710  010F               	movlb	15	; () banked
 52088  017712  6F38               	movwf	56,b	;volatile
 52089                           
 52090                           ; BSR set to: 15
 52091                           ;usb_device.c: 2609: if(UADDR != 0u)
 52092  017714  010F               	movlb	15	; () banked
 52093  017716  5138               	movf	56,w,b	;volatile
 52094  017718  B4D8               	btfsc	status,2,c
 52095  01771A  D002               	goto	i2l13260
 52096                           
 52097                           ; BSR set to: 15
 52098                           ;usb_device.c: 2610: {
 52099                           ;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 52100  01771C  0E10               	movlw	16
 52101  01771E  D001               	goto	L67
 52102  017720                     i2l13260:
 52103                           
 52104                           ; BSR set to: 15
 52105                           ;usb_device.c: 2613: else
 52106                           ;usb_device.c: 2614: {
 52107                           ;usb_device.c: 2615: USBDeviceState=DEFAULT_STATE;
 52108  017720  0E04               	movlw	4
 52109  017722                     L67:
 52110  017722  6E2B               	movwf	_USBDeviceState,c	;volatile
 52111  017724                     i2l13262:
 52112                           
 52113                           ;usb_device.c: 2616: }
 52114                           ;usb_device.c: 2617: }
 52115                           ;usb_device.c: 2620: if(controlTransferState == 1)
 52116  017724  0429               	decf	_controlTransferState,w,c	;volatile
 52117  017726  A4D8               	btfss	status,2,c
 52118  017728  D03A               	goto	i2l344
 52119                           
 52120                           ;usb_device.c: 2621: {
 52121                           ;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 52122  01772A  EE20 F002          	lfsr	2,2
 52123  01772E  5010               	movf	_pBDTEntryIn,w,c
 52124  017730  26D9               	addwf	fsr2l,f,c
 52125  017732  5011               	movf	_pBDTEntryIn+1,w,c
 52126  017734  22DA               	addwfc	fsr2h,f,c
 52127  017736  0E38               	movlw	56
 52128  017738  6EDE               	movwf	postinc2,c
 52129  01773A  0E0D               	movlw	13
 52130  01773C  6EDD               	movwf	postdec2,c
 52131                           
 52132                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 52133  01773E  ECE7  F0B9         	call	_USBCtrlTrfTxService	;wreg free
 52134                           
 52135                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 52136  017742  0E02               	movlw	2
 52137  017744  182A               	xorwf	_shortPacketStatus,w,c	;volatile
 52138  017746  A4D8               	btfss	status,2,c
 52139  017748  D00D               	goto	i2l13274
 52140                           
 52141                           ;usb_device.c: 2630: {
 52142                           ;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 52143  01774A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52144  01774E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52145  017752  0E04               	movlw	4
 52146  017754  6EDF               	movwf	indf2,c
 52147                           
 52148                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 52149  017756  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52150  01775A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52151  01775E  0E00               	movlw	0
 52152  017760  8EDB               	bsf	plusw2,7,c
 52153                           
 52154                           ;usb_device.c: 2635: }
 52155  017762  0012               	return	
 52156  017764                     i2l13274:
 52157                           
 52158                           ;usb_device.c: 2636: else
 52159                           ;usb_device.c: 2637: {
 52160                           ;usb_device.c: 2638: if(lastDTS == 0)
 52161  017764  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 52162  017766  A4D8               	btfss	status,2,c
 52163  017768  D00D               	goto	i2l13280
 52164                           
 52165                           ;usb_device.c: 2639: {
 52166                           ;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 52167  01776A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52168  01776E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52169  017772  0E48               	movlw	72
 52170  017774  6EDF               	movwf	indf2,c
 52171                           
 52172                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 52173  017776  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52174  01777A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52175  01777E  0E00               	movlw	0
 52176  017780  8EDB               	bsf	plusw2,7,c
 52177                           
 52178                           ;usb_device.c: 2642: }
 52179  017782  0012               	return	
 52180  017784                     i2l13280:
 52181                           
 52182                           ;usb_device.c: 2643: else
 52183                           ;usb_device.c: 2644: {
 52184                           ;usb_device.c: 2645: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 52185  017784  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52186  017788  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52187  01778C  0E08               	movlw	8
 52188  01778E  6EDF               	movwf	indf2,c
 52189                           
 52190                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 52191  017790  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 52192  017794  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52193  017798  0E00               	movlw	0
 52194  01779A  8EDB               	bsf	plusw2,7,c
 52195                           
 52196                           ;usb_device.c: 2647: }
 52197                           ;usb_device.c: 2648: }
 52198                           ;usb_device.c: 2649: }
 52199  01779C  0012               	return	
 52200  01779E                     i2l344:
 52201                           
 52202                           ;usb_device.c: 2650: else
 52203                           ;usb_device.c: 2651: {
 52204                           ;usb_device.c: 2655: if(outPipes[0].info.bits.busy == 1)
 52205  01779E  BE04               	btfsc	_outPipes+3,7,c	;volatile
 52206                           
 52207                           ;usb_device.c: 2660: }
 52208                           ;usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 52209                           
 52210                           ;usb_device.c: 2658: {
 52211                           ;usb_device.c: 2659: outPipes[0].pFunc();
 52212  0177A0  9E04               	bcf	_outPipes+3,7,c	;volatile
 52213                           
 52214                           ;usb_device.c: 2662: }
 52215                           ;usb_device.c: 2664: controlTransferState = 0;
 52216  0177A2  0E00               	movlw	0
 52217  0177A4  6E29               	movwf	_controlTransferState,c	;volatile
 52218  0177A6  0012               	return	
 52219  0177A8                     __end_of_USBCtrlTrfInHandler:
 52220                           	opt stack 0
 52221                           tosu	equ	0xFFF
 52222                           tosh	equ	0xFFE
 52223                           tosl	equ	0xFFD
 52224                           pclatu	equ	0xFFB
 52225                           pclath	equ	0xFFA
 52226                           tblptru	equ	0xFF8
 52227                           tblptrh	equ	0xFF7
 52228                           tblptrl	equ	0xFF6
 52229                           tablat	equ	0xFF5
 52230                           prodh	equ	0xFF4
 52231                           prodl	equ	0xFF3
 52232                           intcon	equ	0xFF2
 52233                           intcon2	equ	0xFF1
 52234                           intcon3	equ	0xFF0
 52235                           indf0	equ	0xFEF
 52236                           postinc0	equ	0xFEE
 52237                           fsr0h	equ	0xFEA
 52238                           fsr0l	equ	0xFE9
 52239                           wreg	equ	0xFE8
 52240                           indf1	equ	0xFE7
 52241                           postinc1	equ	0xFE6
 52242                           postdec1	equ	0xFE5
 52243                           plusw1	equ	0xFE3
 52244                           fsr1h	equ	0xFE2
 52245                           fsr1l	equ	0xFE1
 52246                           indf2	equ	0xFDF
 52247                           postinc2	equ	0xFDE
 52248                           postdec2	equ	0xFDD
 52249                           plusw2	equ	0xFDB
 52250                           fsr2h	equ	0xFDA
 52251                           fsr2l	equ	0xFD9
 52252                           status	equ	0xFD8
 52253                           
 52254 ;; *************** function _USBCtrlTrfTxService *****************
 52255 ;; Defined at:
 52256 ;;		line 1773 in file "usb_device.c"
 52257 ;; Parameters:    Size  Location     Type
 52258 ;;		None
 52259 ;; Auto vars:     Size  Location     Type
 52260 ;;  byteToSend      1    0[COMRAM] unsigned char 
 52261 ;; Return value:  Size  Location     Type
 52262 ;;                  1    wreg      void 
 52263 ;; Registers used:
 52264 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 52265 ;; Tracked objects:
 52266 ;;		On entry : 0/0
 52267 ;;		On exit  : 0/0
 52268 ;;		Unchanged: 0/0
 52269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52271 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52273 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52274 ;;Total ram usage:        1 bytes
 52275 ;; Hardware stack levels used:    1
 52276 ;; This function calls:
 52277 ;;		Nothing
 52278 ;; This function is called by:
 52279 ;;		_USBCtrlEPAllowDataStage
 52280 ;;		_USBCtrlTrfInHandler
 52281 ;; This function uses a non-reentrant model
 52282 ;;
 52283                           
 52284                           	psect	text250
 52285  0173CE                     __ptext250:
 52286                           	opt stack 0
 52287  0173CE                     _USBCtrlTrfTxService:
 52288                           	opt stack 12
 52289                           
 52290                           ;usb_device.c: 1775: uint8_t byteToSend;
 52291                           ;usb_device.c: 1779: byteToSend = 8;
 52292                           
 52293                           ;incstack = 0
 52294  0173CE  0E08               	movlw	8
 52295  0173D0  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 52296                           
 52297                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 52298  0173D2  500F               	movf	_inPipes+5,w,c	;volatile
 52299  0173D4  E110               	bnz	i2l11686
 52300  0173D6  0E08               	movlw	8
 52301  0173D8  5C0E               	subwf	_inPipes+4,w,c	;volatile
 52302  0173DA  B0D8               	btfsc	status,0,c
 52303  0173DC  D00C               	goto	i2l11686
 52304                           
 52305                           ;usb_device.c: 1781: {
 52306                           ;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 52307  0173DE  C00E  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 52308                           
 52309                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 52310  0173E2  502A               	movf	_shortPacketStatus,w,c	;volatile
 52311  0173E4  A4D8               	btfss	status,2,c
 52312  0173E6  D002               	goto	i2l11682
 52313                           
 52314                           ;usb_device.c: 1790: {
 52315                           ;usb_device.c: 1791: shortPacketStatus = 1;
 52316  0173E8  0E01               	movlw	1
 52317  0173EA  D004               	goto	L68
 52318  0173EC                     i2l11682:
 52319                           
 52320                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 52321  0173EC  042A               	decf	_shortPacketStatus,w,c	;volatile
 52322  0173EE  A4D8               	btfss	status,2,c
 52323  0173F0  D002               	goto	i2l11686
 52324                           
 52325                           ;usb_device.c: 1794: {
 52326                           ;usb_device.c: 1795: shortPacketStatus = 2;
 52327  0173F2  0E02               	movlw	2
 52328  0173F4                     L68:
 52329  0173F4  6E2A               	movwf	_shortPacketStatus,c	;volatile
 52330  0173F6                     i2l11686:
 52331                           
 52332                           ;usb_device.c: 1796: }
 52333                           ;usb_device.c: 1797: }
 52334                           ;usb_device.c: 1801: inPipes[0].wCount.Val -= byteToSend;
 52335  0173F6  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 52336  0173F8  5E0E               	subwf	_inPipes+4,f,c	;volatile
 52337  0173FA  0E00               	movlw	0
 52338  0173FC  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 52339                           
 52340                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 52341  0173FE  EE20 F001          	lfsr	2,1
 52342  017402  5010               	movf	_pBDTEntryIn,w,c
 52343  017404  26D9               	addwf	fsr2l,f,c
 52344  017406  5011               	movf	_pBDTEntryIn+1,w,c
 52345  017408  22DA               	addwfc	fsr2h,f,c
 52346  01740A  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 52347                           
 52348                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 52349  01740E  0E38               	movlw	56
 52350  017410  0101               	movlb	1	; () banked
 52351  017412  6FED               	movwf	_pDst& (0+255),b
 52352  017414  0E0D               	movlw	13
 52353  017416  0101               	movlb	1	; () banked
 52354  017418  6FEE               	movwf	(_pDst+1)& (0+255),b
 52355                           
 52356                           ; BSR set to: 1
 52357                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 52358  01741A  A00D               	btfss	_inPipes+3,0,c	;volatile
 52359  01741C  D01D               	goto	i2l11704
 52360  01741E  D03C               	goto	i2l11714
 52361  017420                     i2l11696:
 52362                           
 52363                           ; BSR set to: 1
 52364                           ;usb_device.c: 1814: {
 52365                           ;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 52366  017420  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 52367  017424  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 52368  017428  0E00               	movlw	low (__mediumconst shr (0+16))
 52369  01742A  6EF8               	movwf	tblptru,c
 52370  01742C  C1ED  FFD9         	movff	_pDst,fsr2l
 52371  017430  C1EE  FFDA         	movff	_pDst+1,fsr2h
 52372  017434  0E0E               	movlw	(high __ramtop+-1)
 52373  017436  64F7               	cpfsgt	tblptrh,c
 52374  017438  D003               	bra	i2u891_47
 52375  01743A  0008               	tblrd		*
 52376  01743C  50F5               	movf	tablat,w,c
 52377  01743E  D005               	bra	i2u891_40
 52378  017440                     i2u891_47:
 52379  017440  CFF6 FFE9          	movff	tblptrl,fsr0l
 52380  017444  CFF7 FFEA          	movff	tblptrh,fsr0h
 52381  017448  50EF               	movf	indf0,w,c
 52382  01744A                     i2u891_40:
 52383  01744A  6EDF               	movwf	indf2,c
 52384  01744C  4A0A               	infsnz	_inPipes,f,c	;volatile
 52385  01744E  2A0B               	incf	_inPipes+1,f,c	;volatile
 52386  017450  0101               	movlb	1	; () banked
 52387  017452  4BED               	infsnz	_pDst& (0+255),f,b
 52388  017454  2BEE               	incf	(_pDst+1)& (0+255),f,b
 52389                           
 52390                           ; BSR set to: 1
 52391                           ;usb_device.c: 1816: byteToSend--;
 52392  017456  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 52393  017458                     i2l11704:
 52394                           
 52395                           ; BSR set to: 1
 52396  017458  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 52397  01745A  B4D8               	btfsc	status,2,c
 52398  01745C  0012               	return	
 52399  01745E  D7E0               	goto	i2l11696
 52400  017460                     i2l11706:
 52401                           
 52402                           ; BSR set to: 1
 52403                           ;usb_device.c: 1822: {
 52404                           ;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 52405  017460  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 52406  017464  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 52407  017468  0E00               	movlw	low (__mediumconst shr (0+16))
 52408  01746A  6EF8               	movwf	tblptru,c
 52409  01746C  C1ED  FFD9         	movff	_pDst,fsr2l
 52410  017470  C1EE  FFDA         	movff	_pDst+1,fsr2h
 52411  017474  0E0E               	movlw	(high __ramtop+-1)
 52412  017476  64F7               	cpfsgt	tblptrh,c
 52413  017478  D003               	bra	i2u893_47
 52414  01747A  0008               	tblrd		*
 52415  01747C  50F5               	movf	tablat,w,c
 52416  01747E  D005               	bra	i2u893_40
 52417  017480                     i2u893_47:
 52418  017480  CFF6 FFE9          	movff	tblptrl,fsr0l
 52419  017484  CFF7 FFEA          	movff	tblptrh,fsr0h
 52420  017488  50EF               	movf	indf0,w,c
 52421  01748A                     i2u893_40:
 52422  01748A  6EDF               	movwf	indf2,c
 52423  01748C  4A0A               	infsnz	_inPipes,f,c	;volatile
 52424  01748E  2A0B               	incf	_inPipes+1,f,c	;volatile
 52425  017490  0101               	movlb	1	; () banked
 52426  017492  4BED               	infsnz	_pDst& (0+255),f,b
 52427  017494  2BEE               	incf	(_pDst+1)& (0+255),f,b
 52428                           
 52429                           ; BSR set to: 1
 52430                           ;usb_device.c: 1824: byteToSend--;
 52431  017496  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 52432  017498                     i2l11714:
 52433                           
 52434                           ; BSR set to: 1
 52435  017498  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 52436  01749A  B4D8               	btfsc	status,2,c
 52437  01749C  0012               	return	
 52438  01749E  D7E0               	goto	i2l11706
 52439  0174A0                     __end_of_USBCtrlTrfTxService:
 52440                           	opt stack 0
 52441                           tosu	equ	0xFFF
 52442                           tosh	equ	0xFFE
 52443                           tosl	equ	0xFFD
 52444                           pclatu	equ	0xFFB
 52445                           pclath	equ	0xFFA
 52446                           tblptru	equ	0xFF8
 52447                           tblptrh	equ	0xFF7
 52448                           tblptrl	equ	0xFF6
 52449                           tablat	equ	0xFF5
 52450                           prodh	equ	0xFF4
 52451                           prodl	equ	0xFF3
 52452                           intcon	equ	0xFF2
 52453                           intcon2	equ	0xFF1
 52454                           intcon3	equ	0xFF0
 52455                           indf0	equ	0xFEF
 52456                           postinc0	equ	0xFEE
 52457                           fsr0h	equ	0xFEA
 52458                           fsr0l	equ	0xFE9
 52459                           wreg	equ	0xFE8
 52460                           indf1	equ	0xFE7
 52461                           postinc1	equ	0xFE6
 52462                           postdec1	equ	0xFE5
 52463                           plusw1	equ	0xFE3
 52464                           fsr1h	equ	0xFE2
 52465                           fsr1l	equ	0xFE1
 52466                           indf2	equ	0xFDF
 52467                           postinc2	equ	0xFDE
 52468                           postdec2	equ	0xFDD
 52469                           plusw2	equ	0xFDB
 52470                           fsr2h	equ	0xFDA
 52471                           fsr2l	equ	0xFD9
 52472                           status	equ	0xFD8
 52473                           tosu	equ	0xFFF
 52474                           tosh	equ	0xFFE
 52475                           tosl	equ	0xFFD
 52476                           pclatu	equ	0xFFB
 52477                           pclath	equ	0xFFA
 52478                           tblptru	equ	0xFF8
 52479                           tblptrh	equ	0xFF7
 52480                           tblptrl	equ	0xFF6
 52481                           tablat	equ	0xFF5
 52482                           prodh	equ	0xFF4
 52483                           prodl	equ	0xFF3
 52484                           intcon	equ	0xFF2
 52485                           intcon2	equ	0xFF1
 52486                           intcon3	equ	0xFF0
 52487                           indf0	equ	0xFEF
 52488                           postinc0	equ	0xFEE
 52489                           fsr0h	equ	0xFEA
 52490                           fsr0l	equ	0xFE9
 52491                           wreg	equ	0xFE8
 52492                           indf1	equ	0xFE7
 52493                           postinc1	equ	0xFE6
 52494                           postdec1	equ	0xFE5
 52495                           plusw1	equ	0xFE3
 52496                           fsr1h	equ	0xFE2
 52497                           fsr1l	equ	0xFE1
 52498                           indf2	equ	0xFDF
 52499                           postinc2	equ	0xFDE
 52500                           postdec2	equ	0xFDD
 52501                           plusw2	equ	0xFDB
 52502                           fsr2h	equ	0xFDA
 52503                           fsr2l	equ	0xFD9
 52504                           status	equ	0xFD8
 52505                           
 52506                           	psect	text251
 52507  000000                     __ptext251:
 52508                           	opt stack 0
 52509                           tosu	equ	0xFFF
 52510                           tosh	equ	0xFFE
 52511                           tosl	equ	0xFFD
 52512                           pclatu	equ	0xFFB
 52513                           pclath	equ	0xFFA
 52514                           tblptru	equ	0xFF8
 52515                           tblptrh	equ	0xFF7
 52516                           tblptrl	equ	0xFF6
 52517                           tablat	equ	0xFF5
 52518                           prodh	equ	0xFF4
 52519                           prodl	equ	0xFF3
 52520                           intcon	equ	0xFF2
 52521                           intcon2	equ	0xFF1
 52522                           intcon3	equ	0xFF0
 52523                           indf0	equ	0xFEF
 52524                           postinc0	equ	0xFEE
 52525                           fsr0h	equ	0xFEA
 52526                           fsr0l	equ	0xFE9
 52527                           wreg	equ	0xFE8
 52528                           indf1	equ	0xFE7
 52529                           postinc1	equ	0xFE6
 52530                           postdec1	equ	0xFE5
 52531                           plusw1	equ	0xFE3
 52532                           fsr1h	equ	0xFE2
 52533                           fsr1l	equ	0xFE1
 52534                           indf2	equ	0xFDF
 52535                           postinc2	equ	0xFDE
 52536                           postdec2	equ	0xFDD
 52537                           plusw2	equ	0xFDB
 52538                           fsr2h	equ	0xFDA
 52539                           fsr2l	equ	0xFD9
 52540                           status	equ	0xFD8
 52541                           
 52542                           	psect	rparam
 52543  0000                     tosu	equ	0xFFF
 52544                           tosh	equ	0xFFE
 52545                           tosl	equ	0xFFD
 52546                           pclatu	equ	0xFFB
 52547                           pclath	equ	0xFFA
 52548                           tblptru	equ	0xFF8
 52549                           tblptrh	equ	0xFF7
 52550                           tblptrl	equ	0xFF6
 52551                           tablat	equ	0xFF5
 52552                           prodh	equ	0xFF4
 52553                           prodl	equ	0xFF3
 52554                           intcon	equ	0xFF2
 52555                           intcon2	equ	0xFF1
 52556                           intcon3	equ	0xFF0
 52557                           indf0	equ	0xFEF
 52558                           postinc0	equ	0xFEE
 52559                           fsr0h	equ	0xFEA
 52560                           fsr0l	equ	0xFE9
 52561                           wreg	equ	0xFE8
 52562                           indf1	equ	0xFE7
 52563                           postinc1	equ	0xFE6
 52564                           postdec1	equ	0xFE5
 52565                           plusw1	equ	0xFE3
 52566                           fsr1h	equ	0xFE2
 52567                           fsr1l	equ	0xFE1
 52568                           indf2	equ	0xFDF
 52569                           postinc2	equ	0xFDE
 52570                           postdec2	equ	0xFDD
 52571                           plusw2	equ	0xFDB
 52572                           fsr2h	equ	0xFDA
 52573                           fsr2l	equ	0xFD9
 52574                           status	equ	0xFD8
 52575                           
 52576                           	psect	temp
 52577  00005B                     btemp:
 52578                           	opt stack 0
 52579  00005B                     	ds	1
 52580  0000                     int$flags	set	btemp
 52581                           tosu	equ	0xFFF
 52582                           tosh	equ	0xFFE
 52583                           tosl	equ	0xFFD
 52584                           pclatu	equ	0xFFB
 52585                           pclath	equ	0xFFA
 52586                           tblptru	equ	0xFF8
 52587                           tblptrh	equ	0xFF7
 52588                           tblptrl	equ	0xFF6
 52589                           tablat	equ	0xFF5
 52590                           prodh	equ	0xFF4
 52591                           prodl	equ	0xFF3
 52592                           intcon	equ	0xFF2
 52593                           intcon2	equ	0xFF1
 52594                           intcon3	equ	0xFF0
 52595                           indf0	equ	0xFEF
 52596                           postinc0	equ	0xFEE
 52597                           fsr0h	equ	0xFEA
 52598                           fsr0l	equ	0xFE9
 52599                           wreg	equ	0xFE8
 52600                           indf1	equ	0xFE7
 52601                           postinc1	equ	0xFE6
 52602                           postdec1	equ	0xFE5
 52603                           plusw1	equ	0xFE3
 52604                           fsr1h	equ	0xFE2
 52605                           fsr1l	equ	0xFE1
 52606                           indf2	equ	0xFDF
 52607                           postinc2	equ	0xFDE
 52608                           postdec2	equ	0xFDD
 52609                           plusw2	equ	0xFDB
 52610                           fsr2h	equ	0xFDA
 52611                           fsr2l	equ	0xFD9
 52612                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    939
    Data        192
    BSS         1114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160    119     136
    BANK1           256    211     256
    BANK2           256      0     248
    BANK3           256      0     255
    BANK4           256      0     184
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2272$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2272$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> fat_find_file@buffer(BANK0[11]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 9
		 -> extension(BANK2[4]), filename(BANK2[9]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> extension(BANK2[4]), filename(BANK2[9]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> calibrationParameters(BANK3[84]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> extension(BANK2[4]), filename(BANK2[9]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> calibrationParameters(BANK3[84]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    log_generate_entry@log_entry	PTR struct . size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), 

    _get_checksum@log_entry	PTR struct . size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), 

    _get_checksum@byte_array	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 4
		 -> extension(BANK2[4]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 9
		 -> filename(BANK2[9]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 4
		 -> extension(BANK2[4]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 9
		 -> filename(BANK2[9]), 

    _read_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 

    _update_modified_time@root	PTR struct . size(2) Largest target is 32
		 -> fat_append_to_file@root(BANK0[32]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 32
		 -> log_write_to_disk@log_entry(BANK1[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> fat_find_file@buffer(BANK0[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> fat_get_empty_clusters@value(BANK0[2]), _get_empty_cluster@value(BANK0[2]), _root_is_available@first_byte(BANK0[1]), msd_buffer(BIGRAMll[512]), 

    flash_page_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_page_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> log_write_to_disk@log_entry(BANK1[32]), buffer(BIGRAMll[512]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> fat_find_file@buffer(BANK0[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> fat_get_empty_clusters@value(BANK0[2]), _get_empty_cluster@value(BANK0[2]), _root_is_available@first_byte(BANK0[1]), _flash_get_status@status(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    _flash_spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> log_write_to_disk@log_entry(BANK1[32]), buffer(BIGRAMll[512]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(BANK0[2]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    _flash_spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK3[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    _write_calibration@ptr	PTR unsigned char  size(2) Largest target is 84
		 -> calibrationParameters(BANK3[84]), 

    _i2c_eeprom_load_default_calibration@buffer	PTR struct . size(2) Largest target is 84
		 -> calibrationParameters(BANK3[84]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 84
		 -> rtcc_read_eeprom@date(BANK0[6]), i2c_eeprom_read_calibration@buffer(BANK0[4]), calibrationParameters(BANK3[84]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 16
		 -> rtcc_write_eeprom@date(BANK0[6]), _write_calibration@buffer(BANK0[16]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK3[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 84
		 -> rtcc_read_eeprom@date(BANK0[6]), i2c_eeprom_read_calibration@buffer(BANK0[4]), i2c_eeprom_readByte@addr(COMRAM[1]), calibrationParameters(BANK3[84]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(BANK0[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_adc_start@configuration_byte(BANK0[1]), i2c_digipot_backlight@data_array(BANK0[2]), i2c_digipot_reset_off@data_array(BANK0[2]), i2c_digipot_reset_on@data_array(BANK0[2]), 
		 -> i2c_digipot_set_defaults@data_array(COMRAM[2]), _ic2_display_set_address@data_array(BANK0[2]), i2c_display_init@init_sequence(COMRAM[9]), i2c_display_send_init_sequence@init_sequence(BANK0[9]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2729	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2695	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2694	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2641	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2640	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2272$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2272$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2272$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2272$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2272$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2272$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2272$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2272$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S2272$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2272$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2272$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK4[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S142$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S132$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S132$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S108$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S108$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S108$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S108$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_display_prepare
    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    __ui_encoder->_rtcc_write_eeprom
    _system_output_toggle->_system_output_off
    _rtcc_increment_year->__rtcc_increment_bcd
    _rtcc_increment_seconds->__rtcc_increment_bcd
    _rtcc_increment_month->__rtcc_increment_bcd
    _rtcc_increment_minutes->__rtcc_increment_bcd
    _rtcc_increment_hours->__rtcc_increment_bcd
    _rtcc_increment_day->__rtcc_increment_bcd
    __rtcc_increment_bcd->__number_of_days
    _rtcc_decrement_year->__rtcc_decrement_bcd
    _rtcc_decrement_seconds->__rtcc_decrement_bcd
    _rtcc_decrement_month->__rtcc_decrement_bcd
    _rtcc_decrement_minutes->__rtcc_decrement_bcd
    _rtcc_decrement_hours->__rtcc_decrement_bcd
    _rtcc_decrement_day->__rtcc_decrement_bcd
    __rtcc_decrement_bcd->__number_of_days
    _rtcc_correct_day->__number_of_days
    _system_init->_i2c_eeprom_read_calibration
    _rtcc_init->_rtcc_read_eeprom
    _rtcc_read_eeprom->_i2c_eeprom_read
    _log_start_new->_rtcc_get_seconds_decimal
    _i2c_init->_i2c_set_frequency
    _i2c_eeprom_read_calibration->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    __flash_set_page_size->_flash_is_busy
    _system_calculate_output_voltage->___lmul
    _system_calculate_output_current->___lmul
    _system_calculate_input_voltage->___lmul
    _system_calculate_input_current->___lmul
    _log_write_to_disk->_fat_append_to_file
    _log_write_to_disk->_fat_create_file
    _log_generate_entry->__get_dateTime
    __get_temperature->___aldiv
    __get_dateTime->_rtcc_get_day_decimal
    __get_dateTime->_rtcc_get_hours_decimal
    __get_dateTime->_rtcc_get_minutes_decimal
    __get_dateTime->_rtcc_get_month_decimal
    __get_dateTime->_rtcc_get_seconds_decimal
    __get_dateTime->_rtcc_get_year_decimal
    _fat_create_file->_fat_find_file
    _fat_get_empty_clusters->_flash_partial_read
    _fat_find_file->_flash_partial_read
    __get_available_root_entry->__root_is_available
    _fat_append_to_file->__get_empty_cluster
    __write_root->_flash_partial_write
    __write_fat->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->_flash_is_busy
    __update_modified_time->__get_date
    __update_modified_time->__get_time
    __get_time->_rtcc_get_hours_decimal
    __get_time->_rtcc_get_minutes_decimal
    __get_time->_rtcc_get_seconds_decimal
    _rtcc_get_minutes_decimal->__rtcc_bdc_to_decimal
    _rtcc_get_hours_decimal->__rtcc_bdc_to_decimal
    __get_date->_rtcc_get_day_decimal
    __get_date->_rtcc_get_month_decimal
    __get_date->_rtcc_get_year_decimal
    _rtcc_get_year_decimal->__rtcc_bdc_to_decimal
    _rtcc_get_month_decimal->__rtcc_bdc_to_decimal
    _rtcc_get_day_decimal->__rtcc_bdc_to_decimal
    __root_is_available->_flash_partial_read
    __read_root->_flash_partial_read
    __read_fat->_flash_partial_read
    __get_empty_cluster->_flash_partial_read
    _log_collect_data->__get_input_power
    _rtcc_get_seconds_decimal->__rtcc_bdc_to_decimal
    __get_output_power->___lldiv
    __get_input_power->___aldiv
    _i2c_eeprom_tasks->__write_calibration
    __write_calibration->_i2c_eeprom_write
    _i2c_adc_start->__i2c_write
    _i2c_adc_read->__i2c_wait_idle
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_efficiency
    __display_temperature->__display_itoa
    __display_inout->__display_itoa
    __display_efficiency->__display_itoa
    ___altoft->___aldiv
    __display_charger->__display_itoa
    __display_itoa->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _buck_operate->__buck_operate_local
    __buck_operate_remote->__buck_start
    __buck_operate_local->__buck_start
    __buck_start->__buck_initial_dutycycle
    __buck_set_sync_async->__buck_set_dutycycle
    __buck_initial_dutycycle->___lldiv
    _adc_calculate_temperature->___lmul
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_page_write
    _flash_page_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->_flash_is_busy
    __flash_write_page_from_buffer->_flash_is_busy
    __flash_compare_page_to_buffer->_flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_page_read
    _flash_page_read->_flash_partial_read
    _flash_partial_read->_flash_is_busy
    _flash_is_busy->__flash_get_status
    __flash_wakeup->__flash_spi_tx
    __flash_get_status->__flash_spi_tx_rx
    _APP_DeviceCustomHIDTasks->__parse_command_short
    __parse_command_short->_rtcc_write_eeprom
    _rtcc_write_eeprom->_i2c_eeprom_write
    _i2c_eeprom_write->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->_buck_remote_change_dutycycle
    __parse_command_calibration->_schedule_eeprom_write_task
    __fill_buffer_get_status->_buck_remote_get_status
    __fill_buffer_get_display2->_display_get_character
    __fill_buffer_get_display1->_display_get_character
    __fill_buffer_get_calibration2->_memcpy
    __fill_buffer_get_calibration1->_memcpy

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _display_prepare->__display_time

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  564790
                                            117 BANK0      2     2      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
          _adc_calculate_temperature
                      _adc_calibrate
                           _adc_read
                      _buck_get_mode
                       _buck_operate
                    _display_prepare
                     _display_update
                       _i2c_adc_read
                      _i2c_adc_start
                   _i2c_eeprom_tasks
                   _log_collect_data
          _log_get_number_of_samples
                      _log_start_new
                  _log_write_to_disk
     _system_calculate_input_current
     _system_calculate_input_voltage
    _system_calculate_output_current
    _system_calculate_output_voltage
                        _system_init
                  _system_output_off
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   33097
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
             _system_encoder_disable
              _system_encoder_enable
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _system_encoder_disable                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    3026
                                             10 BANK0      9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    3063
                                             10 BANK0      2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    3063
                                             10 BANK0      2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    3094
                                             10 BANK0      3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   20851
                   _rtcc_correct_day
                 _rtcc_decrement_day
               _rtcc_decrement_hours
             _rtcc_decrement_minutes
               _rtcc_decrement_month
             _rtcc_decrement_seconds
                _rtcc_decrement_year
                 _rtcc_increment_day
               _rtcc_increment_hours
             _rtcc_increment_minutes
               _rtcc_increment_month
             _rtcc_increment_seconds
                _rtcc_increment_year
                  _rtcc_write_eeprom
                  _system_output_off
                   _system_output_on
               _system_output_toggle
 ---------------------------------------------------------------------------------
 (3) _system_output_toggle                                 1     1      0     248
                                              2 BANK0      1     1      0
                _system_output_is_on
                  _system_output_off
                   _system_output_on
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_year                                  1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                      _rtcc_get_year
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_seconds                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                   _rtcc_get_seconds
                   _rtcc_set_seconds
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_month                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                     _rtcc_get_month
                     _rtcc_set_month
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_minutes                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                   _rtcc_get_minutes
                   _rtcc_set_minutes
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_hours                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                     _rtcc_get_hours
                     _rtcc_set_hours
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_day                                   1     1      0    1543
                                              8 BANK0      1     1      0
                    __number_of_days
                __rtcc_increment_bcd
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __rtcc_increment_bcd                                  4     2      2    1181
                                              4 BANK0      4     2      2
                    __number_of_days (ARG)
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_year                                  1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                      _rtcc_get_year
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_seconds                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                   _rtcc_get_seconds
                   _rtcc_set_seconds
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_month                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                     _rtcc_get_month
                     _rtcc_set_month
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_minutes                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                   _rtcc_get_minutes
                   _rtcc_set_minutes
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_hours                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                     _rtcc_get_hours
                     _rtcc_set_hours
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_day                                   1     1      0    1543
                                              8 BANK0      1     1      0
                    __number_of_days
                __rtcc_decrement_bcd
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __rtcc_decrement_bcd                                  4     2      2    1181
                                              4 BANK0      4     2      2
                    __number_of_days (ARG)
 ---------------------------------------------------------------------------------
 (3) _rtcc_correct_day                                     2     2      0     393
                                              4 BANK0      2     2      0
                    __number_of_days
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __number_of_days                                      4     4      0     263
                                              0 BANK0      4     4      0
                     _rtcc_get_month
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (1) _system_init                                        181   181      0   21503
                                              0 BANK1    130   130      0
               __system_encoder_init
                __system_timer0_init
                           _adc_init
                          _buck_init
                         _flash_init
        _i2c_eeprom_read_calibration
                           _i2c_init
                      _log_start_new
                          _rtcc_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtcc_init                                            0     0      0    5257
                   _rtcc_read_eeprom
 ---------------------------------------------------------------------------------
 (3) _rtcc_read_eeprom                                     6     6      0    5257
                                             25 BANK0      6     6      0
                    _i2c_eeprom_read
                       _rtcc_set_day
                     _rtcc_set_hours
                   _rtcc_set_minutes
                     _rtcc_set_month
                   _rtcc_set_seconds
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (2) _log_start_new                                        0     0      0     164
           _rtcc_get_seconds_decimal
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      93
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_read_calibration                          9     9      0    7244
                                             25 BANK0      9     9      0
__i2c_eeprom_load_default_calibratio
                    _i2c_eeprom_read
         _schedule_eeprom_write_task
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_read                                      8     3      5    4827
                                             17 BANK0      8     3      5
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) __i2c_read                                           12     9      3     670
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) __i2c_eeprom_load_default_calibration                 3     0      3    1758
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    8730
               __flash_set_page_size
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    8730
                                             19 BANK0      5     5      0
                      __flash_spi_tx
                      _flash_is_busy
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _buck_init                                            0     0      0       0
                     __buck_pin_init
                  __buck_timer2_init
 ---------------------------------------------------------------------------------
 (3) __buck_timer2_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __buck_pin_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_calculate_output_voltage                      8     8      0    3296
                                             12 BANK0      8     8      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _system_calculate_output_current                      8     8      0    3299
                                             12 BANK0      8     8      0
                             ___lmul
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (1) _system_calculate_input_voltage                       8     8      0    3296
                                             12 BANK0      8     8      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _system_calculate_input_current                       8     8      0    3299
                                             12 BANK0      8     8      0
                             ___lmul
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (1) _log_write_to_disk                                   33    33      0  238101
                                              0 BANK1     33    33      0
                 _fat_append_to_file
                    _fat_create_file
                      _fat_find_file
                 _log_generate_entry
 ---------------------------------------------------------------------------------
 (2) _log_generate_entry                                   4     2      2    7583
                                             24 BANK0      4     2      2
                            ___aldiv
                            ___lldiv
                      __get_checksum
                      __get_dateTime
                   __get_temperature
 ---------------------------------------------------------------------------------
 (3) __get_temperature                                     2     0      2    1033
                                             14 BANK0      2     0      2
                            ___aldiv (ARG)
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     653
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) __get_dateTime                                       20    16      4    1237
                                              4 BANK0     20    16      4
               _rtcc_get_day_decimal
             _rtcc_get_hours_decimal
           _rtcc_get_minutes_decimal
             _rtcc_get_month_decimal
           _rtcc_get_seconds_decimal
              _rtcc_get_year_decimal
 ---------------------------------------------------------------------------------
 (3) __get_checksum                                        6     4      2     305
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _fat_create_file                                     53    45      8   99441
                                             59 BANK0     53    45      8
          __get_available_root_entry
                          __get_date
                 __get_empty_cluster
                          __get_time
                         __write_fat
                        __write_root
                      _fat_find_file
             _fat_get_empty_clusters
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _fat_get_empty_clusters                              12    10      2    9351
                                             39 BANK0     12    10      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) _fat_find_file                                       20    16      4   10541
                                             39 BANK0     20    16      4
                 _flash_partial_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6     816
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __get_available_root_entry                            1     1      0    9238
                                             46 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (2) _fat_append_to_file                                  63    59      4  120277
                                             49 BANK0     63    59      4
                 __get_empty_cluster
                          __read_fat
                         __read_root
                 __root_is_available
               __sector_from_cluster
              __update_modified_time
                         __write_fat
                        __write_root
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __write_root                                          8     6      2   26532
                                             40 BANK0      8     6      2
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __write_fat                                           8     4      4   27263
                                             40 BANK0      8     4      4
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (4) _flash_partial_write                                  9     1      8   26056
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) __flash_copy_page_to_buffer                          10     7      3    4884
                                             19 BANK0     10     7      3
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (3) __update_modified_time                                2     0      2    1434
                                             13 BANK0      2     0      2
                          __get_date
                          __get_time
 ---------------------------------------------------------------------------------
 (3) __get_time                                            9     7      2     634
                                              4 BANK0      9     7      2
             _rtcc_get_hours_decimal
           _rtcc_get_minutes_decimal
           _rtcc_get_seconds_decimal
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_minutes_decimal                             1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bdc_to_decimal
                   _rtcc_get_minutes
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_hours_decimal                               1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bdc_to_decimal
                     _rtcc_get_hours
 ---------------------------------------------------------------------------------
 (3) __get_date                                            9     7      2     634
                                              4 BANK0      9     7      2
               _rtcc_get_day_decimal
             _rtcc_get_month_decimal
              _rtcc_get_year_decimal
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_year_decimal                                1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bdc_to_decimal
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_month_decimal                               1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bdc_to_decimal
                     _rtcc_get_month
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_day_decimal                                 1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bdc_to_decimal
                       _rtcc_get_day
 ---------------------------------------------------------------------------------
 (3) __sector_from_cluster                                 2     0      2     239
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   7     7      0    9108
                                             39 BANK0      7     7      0
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __read_root                                           8     6      2    9327
                                             39 BANK0      8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __read_fat                                            8     6      2    9465
                                             39 BANK0      8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __get_empty_cluster                                  10     8      2    9491
                                             39 BANK0     10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (1) _log_get_number_of_samples                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _log_collect_data                                     6     6      0   11180
                                             20 BANK0      6     6      0
                   __get_input_power
                  __get_output_power
                      _buck_get_mode
           _rtcc_get_seconds_decimal
                _system_output_is_on
 ---------------------------------------------------------------------------------
 (4) _system_output_is_on                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _rtcc_get_seconds_decimal                             1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bdc_to_decimal
                   _rtcc_get_seconds
 ---------------------------------------------------------------------------------
 (4) __rtcc_bdc_to_decimal                                 3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __get_output_power                                    6     4      2    5605
                                             13 BANK0      6     4      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) __get_input_power                                     6     4      2    5185
                                             14 BANK0      6     4      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _i2c_eeprom_tasks                                     0     0      0    4460
                 __write_calibration
         _get_next_eeprom_write_task
 ---------------------------------------------------------------------------------
 (2) _get_next_eeprom_write_task                           1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __write_calibration                                  24    24      0    4426
                                             37 BANK0     24    24      0
                   _i2c_eeprom_write
 ---------------------------------------------------------------------------------
 (1) _i2c_adc_start                                        4     2      2    3960
                                             10 BANK0      4     2      2
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _i2c_adc_read                                         5     3      2     164
                                              5 BANK0      5     3      2
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_update                                       0     0      0    4794
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (2) _i2c_display_write_fixed                              4     1      3    1086
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_display_cursor                                   3     2      1    3708
                                             13 BANK0      3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __ic2_display_set_address                             3     3      0    3094
                                             10 BANK0      3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                      3     3      0   49554
                                            114 BANK0      3     3      0
                   __display_charger
                     __display_clear
                __display_efficiency
                     __display_inout
                   __display_outputs
               __display_temperature
                      __display_time
                       __display_usb
 ---------------------------------------------------------------------------------
 (2) __display_usb                                        70    70      0     677
                                              0 BANK0     70    70      0
 ---------------------------------------------------------------------------------
 (2) __display_time                                      211   211      0    2801
                                              0 BANK1    211   211      0
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (2) __display_temperature                                56    56      0    8825
                                             48 BANK0     56    56      0
                      __display_itoa
 ---------------------------------------------------------------------------------
 (2) __display_outputs                                    74    74      0     711
                                              0 BANK0     74    74      0
 ---------------------------------------------------------------------------------
 (2) __display_inout                                      54    54      0    8825
                                             48 BANK0     54    54      0
                      __display_itoa
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (2) __display_efficiency                                 66    66      0   18095
                                             48 BANK0     66    66      0
                            ___aldiv
                           ___altoft
                            ___fttol
                             ___lmul
                      __display_itoa
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     475
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    3483
                                             14 BANK0     10     6      4
                            ___aldiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3175
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8    1901
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     198
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) __display_charger                                   144   144      0    9329
                                             48 BANK0      1     1      0
                                              0 BANK1    143   143      0
                      __display_itoa
                 _buck_get_dutycycle
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    8145
                                             24 BANK0     24    19      5
                            ___fttol (ARG)
                 _buck_get_dutycycle (ARG)
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               6     4      2     234
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    2394
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1849
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     657
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _buck_operate                                         0     0      0   18856
                __buck_operate_local
               __buck_operate_remote
 ---------------------------------------------------------------------------------
 (2) __buck_operate_remote                                 1     1      0    7721
                                             22 BANK0      1     1      0
            __buck_initial_dutycycle
                      __buck_prepare
                __buck_set_dutycycle
               __buck_set_sync_async
                        __buck_start
                         __buck_stop
 ---------------------------------------------------------------------------------
 (3) __buck_prepare                                        1     1      0     130
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __buck_operate_local                                  8     8      0   11135
                                             22 BANK0      8     8      0
                             ___lmul
            __buck_initial_dutycycle
                __buck_set_dutycycle
               __buck_set_sync_async
                        __buck_start
                         __buck_stop
 ---------------------------------------------------------------------------------
 (3) __buck_stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __buck_start                                          4     3      1    4094
                                             18 BANK0      4     3      1
            __buck_initial_dutycycle
                __buck_set_dutycycle
               __buck_set_sync_async
 ---------------------------------------------------------------------------------
 (4) __buck_set_sync_async                                 2     1      1     808
                                              2 BANK0      2     1      1
                __buck_set_dutycycle
 ---------------------------------------------------------------------------------
 (5) __buck_set_dutycycle                                  2     2      0     195
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) __buck_initial_dutycycle                              5     5      0    2460
                                             13 BANK0      5     5      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    2321
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             5     3      2      71
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _adc_calibrate                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_calculate_temperature                           13    10      3    4044
                                             12 BANK0     13    10      3
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    3216
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      99
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  138850
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  138850
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  131246
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   66528
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   64480
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   28752
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     231
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   18274
                                             36 BANK0     11     2      9
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (7) _flash_page_write                                     5     1      4   17839
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4654
                                             19 BANK0     11     4      7
                   __flash_spi_tx_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx_tx                                    12     4      8     664
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    5092
                                             19 BANK0     10     7      3
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    6302
                                             19 BANK0     12     9      3
                  __flash_get_status
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   19726
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2847
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    2048
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1983
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    9479
                                             43 BANK0     10     2      8
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (7) _flash_page_read                                      4     0      4    9121
                                             39 BANK0      4     0      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _flash_partial_read                                  20    12      8    8851
                                             19 BANK0     20    12      8
                   __flash_spi_tx_rx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (4) _flash_is_busy                                        2     2      0    2824
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1614
                                              8 BANK0      1     1      0
                      __flash_spi_tx
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx                                        8     4      4    1580
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1176
                                             12 BANK0      5     3      2
                   __flash_spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx_rx                                    12     4      8    1080
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     509
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      77
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      77
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     119
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     119
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                            11    11      0   21280
                                             44 BANK0     11    11      0
               _USBTransferOnePacket
      __fill_buffer_get_calibration1
      __fill_buffer_get_calibration2
          __fill_buffer_get_display1
          __fill_buffer_get_display2
            __fill_buffer_get_status
         __parse_command_calibration
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0    4355
                                             43 BANK0      1     1      0
                  _rtcc_write_eeprom
                  _system_output_off
                   _system_output_on
 ---------------------------------------------------------------------------------
 (4) _system_output_on                                     1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _system_output_off                                    2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _rtcc_write_eeprom                                    6     6      0    4200
                                             37 BANK0      6     6      0
                   _i2c_eeprom_write
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_write                                    27    22      5    3978
                                             10 BANK0     27    22      5
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    2896
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  2     1      1     851
                                              3 BANK0      2     1      1
       _buck_remote_change_dutycycle
          _buck_remote_set_dutycycle
             _buck_remote_set_enable
                 _buck_remote_set_on
        _buck_remote_set_synchronous
                       _rtcc_set_day
                     _rtcc_set_hours
                   _rtcc_set_minutes
                     _rtcc_set_month
                   _rtcc_set_seconds
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_year                                        1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_seconds                                     1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_month                                       1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_minutes                                     1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_hours                                       1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_day                                         1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (5) __rtcc_write_enable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __rtcc_write_disable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_synchronous                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_on                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_enable                               1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_set_dutycycle                            1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_change_dutycycle                         3     3      0     127
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_calibration                           9     5      4     896
                                              3 BANK0      8     4      4
         _schedule_eeprom_write_task
 ---------------------------------------------------------------------------------
 (3) _schedule_eeprom_write_task                           3     3      0     161
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              4     4      0      43
                                              1 BANK0      4     4      0
                 _buck_get_dutycycle
                      _buck_get_mode
          _buck_remote_get_dutycycle
             _buck_remote_get_status
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (1) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_year                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_seconds                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_month                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_minutes                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_hours                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_day                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_get_status                               1     1      0      43
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _buck_remote_get_dutycycle                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buck_get_mode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_get_dutycycle                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display2                            4     4      0     505
                                              4 BANK0      4     4      0
              _display_get_character
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display1                            4     4      0     505
                                              4 BANK0      4     4      0
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     270
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_calibration2                        0     0      0    4159
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_calibration1                        0     0      0    4159
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    4159
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    5417
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   58167
                                             31 COMRAM    14    14      0
                     _USBDeviceTasks
                            _tmr_isr
 ---------------------------------------------------------------------------------
 (14) _tmr_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   58167
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7955
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7955
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   33624
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   33174
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   25127
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    8493
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    8633
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7955
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     __fill_buffer_get_calibration1
       _memcpy
     __fill_buffer_get_calibration2
       _memcpy
     __fill_buffer_get_display1
       _display_get_character
     __fill_buffer_get_display2
       _display_get_character
     __fill_buffer_get_status
       _buck_get_dutycycle
       _buck_get_mode
       _buck_remote_get_dutycycle
       _buck_remote_get_status
       _rtcc_get_day
       _rtcc_get_hours
       _rtcc_get_minutes
       _rtcc_get_month
       _rtcc_get_seconds
       _rtcc_get_year
       _ui_get_status
     __parse_command_calibration
       _schedule_eeprom_write_task
     __parse_command_long
       _buck_remote_change_dutycycle
       _buck_remote_set_dutycycle
       _buck_remote_set_enable
       _buck_remote_set_on
       _buck_remote_set_synchronous
       _rtcc_set_day
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_hours
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_minutes
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_month
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_seconds
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_year
         __rtcc_write_disable
         __rtcc_write_enable
     __parse_command_short
       _rtcc_write_eeprom
         _i2c_eeprom_write
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_get_day
         _rtcc_get_hours
         _rtcc_get_minutes
         _rtcc_get_month
         _rtcc_get_seconds
         _rtcc_get_year
       _system_output_off
       _system_output_on
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_page_read
                   _flash_partial_read
                     __flash_spi_tx_rx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_page_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_spi_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
                   __flash_write_page_from_buffer
                     __flash_spi_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
                   __flash_write_to_buffer
                     __flash_spi_tx_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_page_read
                 _flash_partial_read
                   __flash_spi_tx_rx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_page_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     __flash_spi_tx_rx
                   __flash_spi_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
                 __flash_write_page_from_buffer
                   __flash_spi_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
                 __flash_write_to_buffer
                   __flash_spi_tx_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_calculate_temperature
     ___lmul
   _adc_calibrate
   _adc_read
   _buck_get_mode
   _buck_operate
     __buck_operate_local
       ___lmul
       __buck_initial_dutycycle
         ___lldiv
       __buck_set_dutycycle
       __buck_set_sync_async
         __buck_set_dutycycle
       __buck_start
         __buck_initial_dutycycle
           ___lldiv
         __buck_set_dutycycle
         __buck_set_sync_async
           __buck_set_dutycycle
       __buck_stop
     __buck_operate_remote
       __buck_initial_dutycycle
         ___lldiv
       __buck_prepare
       __buck_set_dutycycle
       __buck_set_sync_async
         __buck_set_dutycycle
       __buck_start
         __buck_initial_dutycycle
           ___lldiv
         __buck_set_dutycycle
         __buck_set_sync_async
           __buck_set_dutycycle
       __buck_stop
   _display_prepare
     __display_charger
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
       _buck_get_dutycycle
       _buck_get_mode
     __display_clear
     __display_efficiency
       ___aldiv
       ___altoft
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___fttol
       ___lmul
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
     __display_inout
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
       _buck_get_mode
     __display_outputs
     __display_temperature
       __display_itoa
         ___fttol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
     __display_time
       _rtcc_get_day
       _rtcc_get_hours
       _rtcc_get_minutes
       _rtcc_get_month
       _rtcc_get_seconds
       _rtcc_get_year
     __display_usb
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _i2c_adc_read
     __i2c_acknowledge
     __i2c_get
     __i2c_not_acknowledge
     __i2c_send
     __i2c_start
     __i2c_stop
     __i2c_wait_idle
     _i2c_set_frequency
   _i2c_adc_start
     __i2c_write
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
     _i2c_set_frequency
   _i2c_eeprom_tasks
     __write_calibration
       _i2c_eeprom_write
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
     _get_next_eeprom_write_task
   _log_collect_data
     __get_input_power
       ___aldiv
       ___lmul
     __get_output_power
       ___lldiv
       ___lmul
     _buck_get_mode
     _rtcc_get_seconds_decimal
       __rtcc_bdc_to_decimal
       _rtcc_get_seconds
     _system_output_is_on
   _log_get_number_of_samples
   _log_start_new
     _rtcc_get_seconds_decimal
       __rtcc_bdc_to_decimal
       _rtcc_get_seconds
   _log_write_to_disk
     _fat_append_to_file
       __get_empty_cluster
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __read_fat
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __read_root
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __root_is_available
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __sector_from_cluster
       __update_modified_time
         __get_date
           _rtcc_get_day_decimal
             __rtcc_bdc_to_decimal
             _rtcc_get_day
           _rtcc_get_month_decimal
             __rtcc_bdc_to_decimal
             _rtcc_get_month
           _rtcc_get_year_decimal
             __rtcc_bdc_to_decimal
             _rtcc_get_year
         __get_time
           _rtcc_get_hours_decimal
             __rtcc_bdc_to_decimal
             _rtcc_get_hours
           _rtcc_get_minutes_decimal
             __rtcc_bdc_to_decimal
             _rtcc_get_minutes
           _rtcc_get_seconds_decimal
             __rtcc_bdc_to_decimal
             _rtcc_get_seconds
       __write_fat
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __write_root
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _flash_partial_write
         __flash_compare_page_to_buffer
           __flash_get_status
             __flash_spi_tx_rx
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_copy_page_to_buffer
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_write_page_from_buffer
           __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         __flash_write_to_buffer
           __flash_spi_tx_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
     _fat_create_file
       __get_available_root_entry
         __root_is_available
           _flash_partial_read
             __flash_spi_tx_rx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
       __get_date
         _rtcc_get_day_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_day
         _rtcc_get_month_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_month
         _rtcc_get_year_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_year
       __get_empty_cluster
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __get_time
         _rtcc_get_hours_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_hours
         _rtcc_get_minutes_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_minutes
         _rtcc_get_seconds_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_seconds
       __write_fat
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       __write_root
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_copy_page_to_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _fat_find_file
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         _strncmp
       _fat_get_empty_clusters
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _memcpy
     _fat_find_file
       _flash_partial_read
         __flash_spi_tx_rx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
       _strncmp
     _log_generate_entry
       ___aldiv
       ___lldiv
       __get_checksum
       __get_dateTime
         _rtcc_get_day_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_day
         _rtcc_get_hours_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_hours
         _rtcc_get_minutes_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_minutes
         _rtcc_get_month_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_month
         _rtcc_get_seconds_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_seconds
         _rtcc_get_year_decimal
           __rtcc_bdc_to_decimal
           _rtcc_get_year
       __get_temperature
         ___aldiv (ARG)
         ___awdiv (ARG)
   _system_calculate_input_current
     ___lmul
     _buck_get_mode
   _system_calculate_input_voltage
     ___lmul
   _system_calculate_output_current
     ___lmul
     _buck_get_mode
   _system_calculate_output_voltage
     ___lmul
   _system_init
     __system_encoder_init
     __system_timer0_init
     _adc_init
     _buck_init
       __buck_pin_init
       __buck_timer2_init
     _flash_init
       __flash_set_page_size
         __flash_spi_tx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
         _memcpy
     _i2c_eeprom_read_calibration
       __i2c_eeprom_load_default_calibration
       _i2c_eeprom_read
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _schedule_eeprom_write_task
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _log_start_new
       _rtcc_get_seconds_decimal
         __rtcc_bdc_to_decimal
         _rtcc_get_seconds
     _rtcc_init
       _rtcc_read_eeprom
         _i2c_eeprom_read
           __i2c_read
             __i2c_acknowledge
             __i2c_get
             __i2c_not_acknowledge
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
     _ui_init
   _system_output_off
   _ui_get_status
   _ui_run
     __ui_encoder
       _rtcc_correct_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_hours
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_hours
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_minutes
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_minutes
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_month
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_month
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_seconds
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_seconds
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_year
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_year
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_hours
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_hours
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_minutes
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_minutes
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_month
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_month
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_seconds
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_seconds
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_year
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_year
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_write_eeprom
         _i2c_eeprom_write
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_get_day
         _rtcc_get_hours
         _rtcc_get_minutes
         _rtcc_get_month
         _rtcc_get_seconds
         _rtcc_get_year
       _system_output_off
       _system_output_on
       _system_output_toggle
         _system_output_is_on
         _system_output_off
         _system_output_on
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_disable
     _system_encoder_enable

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _tmr_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      B8      13       71.9%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FF      11       99.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F8       9       96.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D3     100       7      100.0%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     77      88       5       85.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     491      31        0.0%
DATA                 0      0     691       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Tue May 08 00:46:51 2018

                rtcc_get_year_decimal@bcd_year 0063                                   ___altoft@exp 0076  
                                   _USB_SD_Ptr FEA1                       fat_create_file@extension 009D  
       __end_of_i2c_display_send_init_sequence A340        __size_of_i2c_display_send_init_sequence 0032  
               _i2c_display_send_init_sequence A30E                            __system_timer0_init 9F04  
                      rtcc_set_minutes@minutes 0060                                  ___altoft@sign 0077  
                                 ___awdiv@sign 0065                               ??__buck_pin_init 0060  
                                           _os 0200                                  _USBDeviceInit 4B9E  
                           _USBCheckHIDRequest 6F9C                       __display_time@setminutes 018E  
                     __display_time@setseconds 019A                             _rtcc_increment_day A484  
                                 __CFG_CP0$OFF 000000                 __root_is_available@root_sector 0088  
                          __end_of_system_init 6206                       ?_i2c_display_write_fixed 0065  
         USER_USB_CALLBACK_EVENT_HANDLER@event 003D           USER_USB_CALLBACK_EVENT_HANDLER@pdata 003F  
                  __display_efficiency@battery 00CD                                            l208 A122  
                                          l209 A120                                            l148 4C14  
                  __end_of_USBStdGetDscHandler 5C6A                                  ?_i2c_adc_read 0065  
                                          l712 2B42                                            l705 2A58  
                                          l641 103A                                            l716 2BDE  
                                          l590 387C                                            l664 132A  
                                          l648 11CC                                            l761 5A3E  
                                          l595 37A8                                            _BDT 000D00  
                                          l686 422E                  __size_of__sector_from_cluster 0016  
                     __display_time@presshours 014E                                            _LBA 01D9  
                    _buck_remote_get_dutycycle ABD2                                            _PR2 000FCB  
                     __display_time@pressmonth 013C                                            _LUN 02BB  
                                          _UIE 000F36                                            _UIR 000F62  
                         _i2c_digipot_reset_on A42C                  __size_of_rtcc_decrement_hours 002A  
           system_calculate_output_voltage@tmp 0070                     __end_of_buck_get_dutycycle ABDE  
                     ??_rtcc_increment_minutes 0068                  __size_of_rtcc_decrement_month 002A  
                     ??_rtcc_increment_seconds 0068                                            _idx 00E0  
                                   _USBSuspend A372                                            _now 029E  
                       __end_of_display_update 86E8                           USBStdSetCfgHandler@i 0045  
                       i2c_eeprom_read@address 0071                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                               _USBDeviceTasks 5504                            ?_USBCheckHIDRequest 002E  
                                 __CFG_IESO$ON 000000                            ?_rtcc_increment_day 002E  
                               _USBDeviceState 002B                               _rtcc_read_eeprom 9BC2  
                                 ?__write_root 0088                            _rtcc_increment_year A534  
                      rtcc_set_seconds@seconds 0060                          ??_USBCtrlTrfRxService 002E  
                         __read_fat@fat_sector 0089                       __size_ofi2_USBDeviceInit 0150  
                     USBEnableEndpoint@options 0036                        __buck_initial_dutycycle 714E  
                            ??_MSDErrorHandler 0068                           ?__system_timer0_init 002E  
                     fat_create_file@root_slot 00AB                    __flash_write_to_buffer@data 0075  
                                         l1070 185C                                           l1233 AB1E  
                                         l1410 9D20                                           l1411 9D26  
                                         l1420 9A82                                           l1412 9D2C  
                                         l1421 9A86                                           l1422 9A8A  
                                         l1407 9D14                                           l1503 AB90  
                                         l1417 9A7A                                           l1409 9D1A  
                                         l1521 AB88                                           l2315 AA9E  
                                         l1419 9A7E                                           l1515 AB9C  
                                         l2333 AA8A                                           l1509 ABB8  
                                         l1390 61D6                                           l2351 AA76  
                                         l1535 9120                                           l1375 9F34  
                                         l2512 A4E6                                           l2506 8FB0  
                                         l1802 0E38                                           l2531 080A  
                                         l1660 9AF2                                           l2620 A726  
                                         l2460 7220                                           l1820 0EFE  
                   USBConfigureEndpoint@handle 0034                                           l1494 ABC0  
                                         l1814 0EBC                                           l2279 AA3A  
                                         l1823 0F28                                           l3280 2DAA  
                                         l1808 0E7A                                           l2297 AA62  
                                         l2369 AA4E                                           l2545 0A1C  
                                         l1833 0F84                                           l1753 0C12  
                                         l1770 0CCA                                           l2627 96C4  
                                         l1755 0C20                                           l1747 0BE4  
                                         l3524 0162                                           l1828 0F56  
                                         l1780 0D36                                           l2733 92D0  
                                         l2742 7CBC                                           l2806 949E  
                                         l2486 7120                                           l2751 7B50  
                                         l1919 34F4                                           l1775 0D00  
                                         l1847 622A                                           l2496 8F68  
                                         l2673 85A6                                           l2497 8F74  
                                         l3289 304C                                           l2658 AB66  
                                         l1794 0DE8                                           l2771 981E  
                                         l2739 7C74                                           l2675 85A8  
                                         l2748 7B00                                           l3716 8DF4  
                                         l1796 0DF6                                           l1788 0D9A  
                                         l2669 8566                                           l2589 97CE  
                                         l3637 78F6                                           l3726 965E  
                                         l3663 7A8A                                           l2951 7C06  
                        ??i2_SYSTEM_Initialize 002E                                           STR_1 FFF2  
               __fill_buffer_get_display1@cntr 0065                                           STR_9 FFDD  
               __fill_buffer_get_display1@line 0066                 __fill_buffer_get_display2@cntr 0065  
               __fill_buffer_get_display2@line 0066                                  _i2c_frequency 01F4  
                        ??_USBCtrlTrfTxService 002E                                           _UCFG 000F39  
                                         u9340 8EF8                                           _UEP0 000F26  
                                         _UEP1 000F27                                           u9350 8F08  
                             ?_fat_create_file 009B                                           u9360 8F18  
                                         u9370 8F28                                           _UEIE 000F37  
                                         u9380 8F38                                           u9348 8EFC  
                                         u9390 8F44                                           u9358 8F0C  
                                         u9368 8F1C                                           u9378 8F2C  
                                         u9396 8F46                                           u9388 8F3C  
                                         _UEIR 000F63                                           _UCON 000F65  
                                         _TMR2 000FCC                                 ?_i2c_adc_start 006A  
                  __size_ofi2_USBStallEndpoint 0106                          _i2c_digipot_reset_off A458  
           __fill_buffer_get_display1@position 0067                           _system_output_toggle A77C  
                       __size_of_adc_calibrate 000C                                 ??_buck_operate 007E  
                               _ResetSenseData 887E         USBStdFeatureReqHandler@current_ep_data 0048  
                       ?__update_modified_time 006D                                           _pDst 01ED  
                                         _main 23B0                                           _last 02A2  
                                 ___ftpack@arg 0060                                           _itoa 9E30  
                     ??i2_USBTransferOnePacket 0032                     __end_of_fat_append_to_file 3314  
                                 ___ftpack@exp 0063                    __size_of_APP_DeviceMSDTasks 0012  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                      __end_of_display_prepare 87F8                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                              _USBDeviceAttach A0F4                                           btemp 005B  
                                         _utoa 7866             __fill_buffer_get_display2@position 0067  
                   ??_ExternalFlash_SectorRead 0093                                ??_rtcc_get_year 0060  
                         __size_of__buck_start 00D8             __size_of_buck_remote_set_dutycycle 002A  
                 __display_charger@charger_off 0182                        ?_rtcc_get_hours_decimal 002E  
                 ?i2_ExternalFlash_MediaDetect 002E                      _ExternalFlash_MediaDetect ABA2  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 0086                __end_of_APP_DeviceMSDInitialize AB48  
                        _display_get_character A07C                           ??_USBCheckHIDRequest 002E  
                             ?_MSDWriteHandler 002E                           ??_rtcc_increment_day 0068  
                         _rtcc_increment_hours A5DC                 ??_MSDProcessCommandMediaAbsent 00A7  
                   __end_of_USBCheckStdRequest 6F9C                         ??_USBCtrlTrfOutHandler 0030  
                         ?_rtcc_increment_year 002E                           _rtcc_increment_month A588  
                 ??__flash_copy_page_to_buffer 0076                 ?__flash_write_page_from_buffer 0073  
                                 ___param_bank 000000                      __size_of_flash_page_write 0058  
                    ??_USBStdFeatureReqHandler 0045                                   _USBOutHandle 01E9  
                     __end_of__display_charger 2A56                     __size_of_system_output_off 0058  
                              ??_buck_get_mode 0060                __size_of__flash_write_to_buffer 0066  
                     ??_USBStdGetStatusHandler 002E                                   ___fttol@exp1 006E  
                     ??_buck_remote_get_status 0060                                   ___fttol@lval 006A  
                               ?_USBDeviceInit 002E                              __flash_get_status 9F44  
      __end_of_system_calculate_output_current 4FC6       __size_of_system_calculate_output_current 015A  
             ?_system_calculate_output_current 002E              ??_system_calculate_output_current 006C  
              _system_calculate_output_current 4E6C                           __buck_set_sync_async 8F62  
              __flash_spi_tx_tx@command_length 0062                     __end_of_rtcc_decrement_day A4DC  
                     _system_ui_inactive_count 01E7                             _buck_remote_enable 01F1  
                   __buck_initial_dutycycle@dc 006E                                  __CFG_PLLDIV$2 000000  
                              ??_rtcc_set_year 0060                  i2c_display_write_fixed@length 0067  
                                        l20004 A2E4                                          l20102 3702  
                                        l20112 372A                                          l20008 A2F6  
                                        l21000 02FA                                          l20122 3770  
                                        l20106 370C                                          l20116 3736  
                                        l21020 03C0                                          l21012 0372  
                                        l21004 0326                                          l20310 6D18  
                                        l20134 37AC                                          l20126 377C  
                                        l20118 3750                                          l20062 35D8  
                                        l21030 0426                                          l21014 038C  
                                        l20240 973E                                          l20400 54A6  
                                        l20320 6D40                                          l20312 6D20  
                                        l20152 3816                                          l20072 3602  
                                        l20160 385E                                          l21200 3FD6  
                                        l21040 047A                                          l21032 042E  
                                        l21024 03E0                                          l21016 0394  
                                        l21008 0346                                          l21120 4ABA  
                                        l21112 4A60                                          l20250 9758  
                                        l20402 54AE                                          l20330 6D68  
                                        l20322 6D48                                          l20314 6D28  
                                        l20306 6D08                                          l20154 383C  
                                        l20146 37D6                                          l20066 35F2  
                                        l21202 3FE4                                          l21122 4AC2  
                                        l20244 9748                                          l20404 54B6  
                                        l20332 6D6E                                          l20324 6D50  
                                        l20316 6D30                                          l20308 6D10  
                                        l20340 6D80                                          l20156 3844  
                                        l20068 35F8                                          l21212 281A  
                                        l21060 0540                                          l21052 04F4  
                                        l21044 04A6                                          l21036 045A  
                                        l21028 040C                                          l21140 4B58  
                                        l21116 4A8C                         ?_i2c_digipot_backlight 002E  
                                        l20246 974E                                          l20270 96EC  
                                        l20350 6C3A                                          l20334 6D74  
                                        l20326 6D58                                          l20318 6D38  
                                        l20078 3630                                          l21222 2866  
                                        l21206 3FF2                                          l21150 3E34  
                                        l21062 055A                                          l21046 04C0  
                                        l21134 4B12                                          l21126 4AEE  
                                        l20264 96DC                                          l20408 54BE  
                                        l20360 6C68                                          l20352 6C44  
                                        l20344 6C1C                                          l20336 6D7A  
                                        l20328 6D60                                          l21240 2924  
                                        l21216 2846                                          l21304 22FC  
                                        l21160 3E94                                          l21320 44E4  
                                        l21072 05AE                                          l21064 0562  
                                        l21056 0514                                          l21048 04C8  
                                        l21080 05F4                                          l21144 4B84  
                                        l21128 4B06                                          l20520 5366  
                                        l20512 532E                                          l22120 62DE  
                                        l22104 62A0                                          l20258 9788  
                                        l20282 9726                                          l20274 96F6  
                                        l20370 6C90                                          l20362 6C70  
                                        l20354 6C4E                                          l20346 6C26  
                                        l22210 198E                                          l22202 1950  
                                        l22130 854C                                          l21402 0874  
                                        l21242 293E                                          l21234 28F0  
                                        l21226 2892                                          l21154 3E60  
                                        l21082 0622                                          l21138 4B3E  
                                        l22050 9048                                          l20522 536E  
                                        l20514 534E                                          l20530 5386  
                                        l20268 96E6                                          l20372 6C98  
                                        l20364 6C78                                          l20356 6C58  
                                        l20348 6C30                                          l22220 19D0  
                                        l22140 8586                                          l22132 8554  
                                        l21412 08C8                                          l21252 29B0  
                                        l21236 28F8                                          l21228 28AC  
                                        l21308 2328                                          l21180 3F58  
                                        l21172 3F0C                                          l21164 3EC0  
                                        l21324 4504                                          l21316 44B8  
                                        l21076 05DA                                          l21068 058E  
                                        l20612 952E                                          l22060 9070  
                                        l22052 9050                                          l20452 9F12  
                                        l20524 5376                                          l20516 5356  
                                        l20532 53B4                                          l20390 545E  
                                        l20366 6C80                                          l20358 6C60  
                                        l22230 1A04                                          l22214 19B2  
                                        l22206 1974                                          l22142 858E  
                                        l22134 855C                                          l21406 087E  
                                        l21502 66B4                                          l21254 29CA  
                                        l21246 296A                                          l21262 2A10  
                                        l21166 3ED8                                          l21334 456E  
                                        l20606 950A                                          l22062 9078  
                                        l22054 9058                                          l20454 9F1A  
                                        l20526 537E                                          l20518 535E  
                                        l20702 0C7A                                          l22070 6208  
                                        l22126 62EE                                          l20392 5486  
                                        l20384 53D4                                          l20368 6C88  
                                        l20376 6CA2                                          l22216 19B6  
                                        l21408 08BA                                          l21512 66E0  
                                        l21248 2984                                          l21264 2A2C  
                                        l21192 3FA6                                          l21184 3F82  
                                        l21176 3F2C                                          l21168 3EE0  
                                        l21344 45D8                                          l21328 4530  
                                        l22320 8790                                          l20624 795A  
                                        l22056 9060                                          l20720 0CB4  
                                        l20712 0C94                                          l20394 548E  
                                        l20386 5404                                          l22250 1ABC  
                                        l22234 1A1E                                          l22226 19DE  
                                        l22146 8596                                          l22138 856E  
                                        l21442 0A50                                          l21434 0A12  
                                        l21418 08F4                                          l21362 074E  
                                        l21354 06DA                                          l21522 6714  
                                        l21506 66CA                                          l21258 29F6  
                                        l21290 2254                                          l21338 459A  
                                        l22322 879A                                          l22314 877A  
                                        l22330 87B2                                          l22058 9068  
                                        l22066 9080                                          l22410 302C  
                                        l22402 300C                                          l21610 30B2  
                                        l20458 9F24                                          l20810 0E46  
                                        l20802 0E1E                                          l20706 0C82  
                                        l20396 5496                                          l21444 0A66  
                                        l21380 07BA                                          l21372 0792  
                                        l21524 671A                                          l21196 3FBA  
                                        l21188 3F94                                          l21348 4604  
                                        l22324 87A0                                          l22316 8780  
                                        l20636 798E                                          l20628 7964  
                                        l21620 3182                                          l21540 466E  
                                        l21532 465A                                          l20492 5276  
                                        l20820 0E6C                                          l20740 0D0E  
                                        l20732 0CEA                                          l20724 0CBC  
                                        l20716 0CA2                                          l20660 0BC8  
                                        l22084 6254                                          l20398 549E  
                                        l22262 1BE8                                          l22254 1ADA  
                                        l22190 18D4                                          l22182 1896  
                                        l22246 1A84                                          l21366 0758  
                                        l21518 66FE                                          l21294 2274  
                                        l21286 2228                                          l21198 3FC8  
                                        l22326 87A6                                          l22318 878A  
                                        l22414 303C                                          l22406 301C  
                                        l21614 30D8                                          l20830 0EA2  
                                        l20806 0E2A                                          l20670 0BF6  
                                        l22094 6280                                          l22078 623E  
                                        l11944 8EEC                                          l22264 1BF0  
                                        l22192 18F8                                          l22248 1AB8  
                                        l21464 0B9A                                          l21448 0A7C  
                                        l21376 07B0                                          l21472 6632  
                                        l20904 959E                                          l20920 40B6  
                                        l22328 87AC                                          l20648 A40A  
                                        l22352 4E80                                          l20496 5280  
                                        l20824 0E88                                          l20816 0E60  
                                        l20760 0D5E                                          l20752 0D44  
                                        l20744 0D20                                          l20736 0CF2  
                                        l20728 0CD8                                          l20680 0C2E  
                                        l20664 0BD8                                          l22600 268A  
                                        l22258 1B20                                          l22266 1C2E  
                                        l22186 18BA                                          l22178 187C  
                                        l21466 0BA4                                          l21386 07F0  
                                        l21298 22A0                                          l21642 3296  
                                        l22434 4FDA                                          l22354 4E8C  
                                        l20834 0EAE                                          l20770 0D7E  
                                        l20674 0C06                                          l22602 268C  
                                        l22610 26A6                                          l22522 23E4  
                                        l22196 1912                                          l21900 9346  
                                        l21740 4C20                                          l21724 4BEA  
                                        l21468 0BAA                                          l21492 668A  
                                        l20932 4122                                          l20924 40D6  
                                        l20916 408A                                          l21636 3236  
                                        l21628 31E0                                          l21548 46CC  
                                        l22428 863E                                          l22436 4FE6  
                                        l12940 9FFA                                          l12924 9F9A  
                                        l20852 0F0C                                          l20844 0EE4  
                                        l20756 0D56                                          l20748 0D28  
                                        l20684 0C40                                          l22604 2696  
                                        l22612 270E                                          l22532 2462  
                                        l22524 23EA                                          l22516 23C2  
                                        l22198 1936                                          l21398 083E  
                                        l21478 664C                                          l22454 979E  
                                        l22462 97BA                                          l20942 41AA  
                                        l22390 2FDE                                          l21582 47D6  
                                        l20862 0F3A                                          l20838 0ECA  
                                        l20790 0DDC                                          l20782 0DBE  
                                        l20774 0D8E                                          l20766 0D70  
                                        l20694 0C5A                                          l22542 24CA  
                                        l22534 2476                                          l21904 9352  
                                        l21912 9390                                          l21752 4C52  
                                        l21728 4BF4                                          l21496 6698  
                                        l21488 6678                                          l22472 97E6  
                                        l22456 97A2                                          l20936 414E  
                                        l20928 4102                                          l12936 9FD8  
                                        l12928 9FBC                                          l20872 0F68  
                                        l20856 0F1C                                          l20848 0EF0  
                                        l20688 0C48                                          l22560 2538  
                                        l22536 247C                                          l22528 2416  
                                        l21906 936A                                          l21762 4CC2  
                                        l22458 97AC                                          l22466 97D6  
                                        l20946 41D6                                          l22394 2FEC  
                                        l21586 4812                                          l21578 47AA  
                                        l20882 0F96                                          l20866 0F4A  
                                        l20786 0DCC                                          l20698 0C68  
                                        l22546 24DE                      __buck_set_sync_async@mode 0063  
                                        l21908 9378                                          l21756 4C5C  
                                        l22468 97DC                                          l20892 9550  
                                        l20980 023E                                          l20972 01F2  
                                        l21588 4818                                          l20876 0F78  
                                        l20796 0E04                                          l20884 0F9E  
                                        l22580 25E6                                          l22556 2532  
                                        l22548 24E4                                          l18014 2B0E  
                                        l20894 9556                                          l20982 0258  
                                        l20966 01BE                                          l22398 2FFC  
                                        l21598 3064                                          l22582 25EC  
                                        l22566 2586                                          l18040 2BE2  
                                        l18032 2B70                                          l18016 2B14  
                                        l20888 9546                                          l20992 02AC  
                                        l20984 0260                                          l20976 0212  
                                        l20968 01C6                                          l20898 9560  
                                        l22578 25AA                                          l18052 2C8A  
                                        l18036 2B98                                          l20996 02D8  
                                        l20988 028C                                 ??_i2c_adc_read 0067  
                                        l17510 A80E                                          l18070 2D3A  
                                        l18062 2D04                                          l18046 2BFC  
                                        l20998 02F2                                          l22598 2676  
                                        l17600 8DFE                                          l18064 2D20  
                                        l18080 2D74                                          l19104 0188  
                                        l18090 7354                                          l17610 8E26  
                                        l18074 2D4C                                          l19202 4E5C  
                                        l18170 8DB0                                          l19050 82F6  
                                        l19130 7804                                          l19122 77DA  
                                        l17524 57F2                                          l18412 1278  
                                        l18332 102C                                          l18324 100C  
                                        l19204 4E62                                          l18180 8DE6  
                                        l18172 8DB6                                          l19044 82F2  
                                        l19036 8274                                          l19060 81F6  
                                        l19140 783A                                          l19132 780A  
                                        l19116 77C4                                          l19230 A35E  
                                        l18094 7370                                          l17702 5ABA  
                                        l17550 809A                                          l17606 8E18  
                                        l18078 2D52                                          l18422 12AE  
                                        l19206 4E66                                          l18190 9626  
                                        l19302 A798                                          l18512 99DC  
                                        l17456 97EE                                          l17472 9838  
                                        l17720 5B0E                                          l17560 80C2  
                                        l18432 12E2                                          l18408 1244  
                                        l18328 101C                                          l18168 8DA4  
                                        l18192 962C                                          l19080 00B8  
                                        l19064 8236                                          l19056 81D0  
                                        l19128 77F8                                          l19144 7848  
                                        l19234 A36C                                          l19226 A352  
                                        l17618 7E1A                                          l17802 5D36  
                                        l18450 1374                                          l18370 1160  
                                        l18346 1096                                          l19090 0146  
                                        l19082 00C6                                          l19066 8242  
                                        l19260 A866                                          l17716 5B00  
                                        l17812 5D52                                          l17804 5D3A  
                                        l17556 80B4                                          l18460 13B0  
                                        l18444 1340                                          l18436 12FC  
                                        l18428 12CA                                          l18380 118C  
                                        l18620 8C66                                          l18612 8C48  
                                        l18604 8C2A                                          l18196 9650  
                                        l18188 961A                                          l19092 0154  
                                        l19084 00F6                                          l19076 00A4  
                                        l19148 785C                                          l19324 1442  
                                        l18540 7672                                          l17742 5924  
                                        l17734 58F0                                          l19254 A884  
                                        l18550 A9E0                                          l18518 9A00  
                                        l17814 5D5A                                          l17566 8110  
                                        l17590 9490                                          l18454 138A  
                                        l18390 11C4                                          l18374 116E  
                                        l18470 13F6                                          l19182 4D4E  
                                        l18534 764E                                          l19272 96A6  
                                        l19280 A716                                          l18480 90C8  
                                        l17680 5A24                                          l17832 5D84  
                                        l17824 5D70                                          l17584 9476  
                                        l18456 13A0                                          l18448 136C  
                                        l18384 1196                                          l18616 8C58  
                                        l18608 8C3A                                          l19600 9132  
                                        l19520 338E                                          l19088 0116  
                                        l18632 8D0E                                          l19408 1796  
                                        l19352 155E                                          l19424 1824  
                                        l17754 59B6                                          l19274 96BC  
                                        l19266 A848                                          l18562 AA02  
                                        l18554 A9EC                                          l18490 90EC  
                                        l18474 90BC                                          l17690 5A76  
                                        l17834 5D88                                          l17826 5D74  
                                        l17818 5D5E                                          l17578 8130  
                                        l18466 13EE                                          l18458 13A4  
                                        l19186 4D98                                          l19602 9150  
                                        l18650 786E                                          l19522 3402  
                                        l19514 3374                                          l19530 3438  
                                        l19098 016C                                          l18642 8D36  
                                        l19338 14D0                                          l17908 93BA  
                                        l17916 93F8                                          l18476 90C0  
                                        l18484 90CC                                          l17692 5A84  
                                        l17836 5D8C                                          l17764 5C82  
                                        l17940 42C4                                          l18396 120C  
                                        l18740 9412                                          l18660 78B0  
                                        l19540 3478                                          l19524 342A  
                                        l19380 167A                                          l19286 9ACC  
                                        l18558 A9F6                                          l18486 90E4  
                                        l18494 90F2                                          l18478 90C4  
                                        l17790 5CEA                                          l17774 5C9C  
                                        l17934 42AA                                          l17926 4290  
                                        l18750 9432                                          l19614 7094  
                                        l19606 915A                                          l19542 34D0  
                                        l19534 345E                                          l18638 8D28  
                                        l19366 15EC                                          l18902 8BD6  
                                        l18488 90E8                                          l17696 5A98  
                                        l17688 5A6E                                          l17784 5CDC  
                                        l17960 4374                                          l17872 A14C  
                                        l19624 70E0                                          l19560 356A  
                                        l19552 3512                                          l19544 34E6  
                                        l19528 3430                                          l19704 842C  
                                        l18498 910A                                          l18850 7D40  
                                        l18770 9AB0                                          l17858 A184  
                                        l17698 5AA6                                          l17794 5D12  
                                        l17954 4342                                          l18754 943E  
                                        l18762 9452                                          l19634 70FC  
                                        l19618 709E                                          l19562 356E  
                                        l19722 84A2                                          l19394 1708  
                                        l18922 8C14                                          l17972 43AC  
                                        l17964 438C                                          l17948 4318  
                                        l18756 9444                                          l18684 7A0E  
                                        l18932 7172                                          l19564 357C  
                                        l19548 34EC                                          l18836 A8F8  
                                        l19812 69AA                                          l19732 7B6C  
                                        l18846 7CFE                                          l17982 43FC  
                                        l17966 4392                                          l17990 4416  
                                        l18758 944A                                          l18686 7A1E  
                                        l18942 71F6                                          l19910 6016  
                                        l19726 84AA                                          l19830 6A26  
                                        l18918 8C10                                          l18768 9A8E  
                                        l17992 443A                                          l18696 7A78  
                                        l18688 7A24                                          l18960 8F96  
                                        l19656 7142                                          l19664 A502  
                                        l18880 9DA8                                          l19568 35BE  
                                        l19920 605A                                          l19904 5FF8  
                                        l19824 6A16                                          l18778 9D30  
                                        l17986 440E                                          l18954 8F86  
                                        l18874 9E5A                                          l18882 9DAE  
                                        l19834 6A2E                                          l19754 7BFE  
                                        l19674 8726                                __end_of___aldiv 60EE  
                                        l18964 8FA0                                          l19916 6044  
                                        l19932 60C0                                          l19684 A3D6  
                                        l19668 86EC                                          l18982 8FC4  
                                        l19918 6054                                          l19950 7F9A  
                                        l19694 A3F4                                          l19678 8754  
                           ?__flash_get_status 006C                                          l19936 60DC  
                                        l19928 60AE                                          l19688 A3E0  
                                        l19792 694E                                          l19962 5684  
                                        l18986 8FD6                                          l19698 A3FA  
                                        l19874 9EB8                                          l18898 8BD2  
                                        l19892 8EAE                                          l19948 7F8A  
                                        l19980 5716                                          l19868 9E96  
                                        l19990 5746                                          l19798 6968  
                                        l19888 8E88                                          l19992 5756  
                                        l19984 572A                                          l19994 5760  
                                        l19998 577C                                          ?_main 002E  
                rtcc_increment_minutes@minutes 0068                                          ?_itoa 0070  
                              __end_of___awdiv 7866                                          STR_10 FFE9  
                                        STR_11 FFFB                                          STR_12 FFD0  
                        ?_i2c_digipot_reset_on 002E                               ??__display_clear 0060  
            __size_of_USBCtrlEPServiceComplete 00F2                             _buck_remote_set_on A850  
                        rtcc_decrement_day@day 0068                                __end_of___lldiv 7A9C  
                                        ?_utoa 0067               MSDCheckForErrorCases@DeviceBytes 006A  
                                        u21000 44A6                                          u20300 00DA  
                              ___awdiv@divisor 0062                                          u20150 4022  
                                        u20310 00F6                                          u20230 0016  
                                        u20160 403E                                          u20320 0112  
                                        u20240 0032                         __end_of_USBDeviceTasks 564A  
                                        u20170 4078                                          u20330 012E  
                                        u20250 004E                                          u21140 0854  
                                        u20340 014A                                          u20260 006A  
                                        u22100 6500                                __end_of___fttol 578E  
                                        u20350 0166                                          u20270 0086  
                                        u20510 49FA                                          u22110 6606  
                                        u20360 0182                                          u20280 00A2  
                                        u20520 4A16                                          u22105 64F4  
                                        u20610 3DCE                                          u20290 00BE  
                                        u20530 4A32                                          u22115 65FA  
                                        u20620 3DEA                                          u20540 4A4E  
                                        u22140 4F9C                                          u22310 5FAA  
                                        u20630 3E06                                          u21350 468E  
                                        u20800 27D0                                          u20640 3E22  
                                        u21360 46C8                                          u22145 4F90  
                                        u20810 27EC                                          u22315 5F9E  
                                        u21355 4682                                          u20820 2808  
                                        u20740 2728                                          u20750 2744  
                                        u20910 2042                                          u22270 50F6  
                                        u20760 2760                                          u20920 205E  
                                        u16105 80D0                                          u21801 613C  
                                        u20770 277C                                          u20930 207A  
                    ?_USBCtrlEPServiceComplete 002E                                          u22275 50EA  
                                        u20780 2798                                          u20790 27B4  
                                        u16215 7E36                                          u20970 4452  
                                        u21850 626A                                          u20980 446E  
                                        u21781 60F8                                          u20990 448A  
                                        u21791 611A                                          u16195 8E34  
                                        u22907 8590                                          u22917 9810  
                                        u16605 4260                                          u22927 9822  
                                        u16560 A180                                          u18224 4D6C  
                                        u22937 982C                                          u18225 4D64  
                                        u16570 A148                                          u17450 1314  
                                        u17338 10A6                                          u18234 4DB6  
                                        u16715 2A8A                                          u17339 10BA  
                                        u18235 4DAE                                          u19051 5660  
                                        u16580 93DC                                          u18340 969E  
                                        u17348 10DA                                          u17349 10EE  
                                        u19070 56AA                                          u16840 2CCE  
                                        u19241 3666                                          u22897 8588  
                                        u16658 42F0                                          u16850 2CD0  
                                        u16738 2AC4                                          u18274 4E24  
                                        u18258 4DE4                                          u16587 93D2  
                                        u16659 4304                                          u16739 2AD8  
                                        u18275 4E1C                                          u18259 4DFA  
                              __end_of___lwdiv 8DFE                                          u19075 56A0  
                                        u17388 11E8                                          u17389 11FC  
                                        u17645 8D44                                          u18198 4D1C  
                                        u18199 4D30                                          u17745 7CD2  
                 __flash_write_to_buffer@start 0073                                          u16868 2CDC  
                                        u17860 71E4                                          u16869 2CF0  
                                        u17765 95B8                                          u19541 A318  
                                        u16798 2BA8                                          u16799 2BBC  
                                        u17945 881E                                          u18905 48FA  
                                        u17955 8840                                          u18915 4942  
                                        u17965 8B40                                          u18925 4980  
                                        u17975 8B62                                          u18785 91CE  
                                        u18795 923A                                          u17995 82AA  
                                        u18885 487A                                          u18895 48B2  
                              __end_of___lwmod 9668                                          i2l300 7D8C  
                                        i2l301 7D90                                          i2l233 6B9C  
                                        i2l170 5646                                          i2l171 55E0  
                                        i2l148 5186                                          i2l309 9F00  
                                        i2l159 5534                                          i2l344 779E  
                                        i2l169 55CE                                          i2l373 3B44  
                                        i2l358 6ED2                                          i2l367 6F20  
                                        i2l392 3D24                                          i2l296 7D7E  
                                        i2l299 7E06                          rtcc_write_eeprom@date 0085  
                             ??__display_inout 0090                                          _UADDR 000F38  
                                        i2l787 9B6C                                ___awdiv@counter 0064  
                                        _TMR0H 000FD7                                          _TMR1H 000FCF  
                                        _TMR0L 000FD6                                          _TMR1L 000FCE  
      __end_of_system_calculate_output_voltage 652A       __size_of_system_calculate_output_voltage 0106  
             ?_system_calculate_output_voltage 002E              ??_system_calculate_output_voltage 006C  
              _system_calculate_output_voltage 6424                                          _RPOR5 000EC5  
                                        _RPOR6 000EC6                                          _USTAT 000F64  
                             __i2c_read@length 0067                    ?_ExternalFlash_CapacityRead 0060  
                              ?_display_update 002E                         ??__rtcc_bdc_to_decimal 0060  
           __size_of_USBCtrlEPAllowStatusStage 00C2                                _i2c_eeprom_read 95A4  
                          ___lmul@multiplicand 0064                       __end_of__display_outputs 4010  
                              ??_flash_is_busy 0071                               __end_of_MSDTasks 3880  
                                   i2memcpy@d1 002E                                 __CFG_FCMEN$OFF 000000  
                              __read_fat@value 008D                             _USBCheckMSDRequest 7226  
                                   i2memcpy@s1 0030                         ??__buck_operate_remote 0076  
              __end_of_USBCtrlEPAllowDataStage 81CE                          __get_dateTime@minutes 0072  
                                        _sd000 FFCC                                          _sd001 FEF5  
                                        _sd002 FF29                                          _sd003 FF98  
                        __get_dateTime@seconds 0073                 ?_USBIncrement1msInternalTimers 002E  
                  log_generate_entry@log_entry 0078                 __size_of_MSDTransferTerminated 0056  
                          ??__flash_get_status 006E                          _rtcc_get_year_decimal AACE  
                __end_of_MSDTransferTerminated 9B6E            i2c_display_send_init_sequence@F8354 03ED  
                                 _gblCBWLength 01F7                            ?_buck_remote_set_on 002E  
                                   i2memset@p1 002E                         ?_MSDCheckForErrorCases 006A  
                        ??__system_timer0_init 0060                          __buck_start@dutycycle 0072  
            __size_of_rtcc_get_minutes_decimal 0012                              ?__flash_spi_tx_rx 0060  
                            ?__flash_spi_tx_tx 0060                      ?_rtcc_get_minutes_decimal 002E  
                        i2USBStallEndpoint@dir 002E                         __end_of_ResetSenseData 8904  
                                ___ftpack@sign 0064                       __get_empty_cluster@value 008D  
                  rtcc_get_day_decimal@bcd_day 0063                     __end_of__display_usb@F8712 FCB5  
                   __end_of__display_usb@F8714 FDD5                     __end_of__display_usb@F8716 FDC5  
                   __end_of__display_usb@F8718 FD95                     ?_log_get_number_of_samples 0060  
                     __parse_command_long@data 0063                               ??_rtcc_get_hours 0060  
                        ?_system_output_toggle 002E                  rtcc_increment_seconds@seconds 0068  
                             ??_rtcc_get_month 0060              system_calculate_input_current@tmp 0070  
                                        pclath 000FFA                             ??__flash_spi_tx_rx 0068  
                           ??__flash_spi_tx_tx 0068                                __end_of_ui_init AA1E  
                                        tablat 000FF5                      __size_of_USBStallEndpoint 0144  
                          ?_USBCheckMSDRequest 002E                                _MSDCommandState 00E6  
             __display_charger@charger_startup 0172                    ??_ExternalFlash_SectorWrite 008D  
                                        plusw1 000FE3                                          plusw2 000FDB  
                __display_charger@charger_sync 0139                 __end_of_rtcc_get_hours_decimal AACE  
                              __end_of_tmr_isr 809A                                    ?_USBMSDInit 002E  
     ExternalFlash_WriteProtectStateGet@config 0060                  __size_of__system_encoder_init 0048  
                                        utoa@c 006F                                __number_of_days 8B9A  
                                        utoa@v 006D                                          status 000FD8  
                  ?__flash_copy_page_to_buffer 0073                              __CFG_DSWDTPS$8192 000000  
                     __end_ofi2_ResetSenseData 8A10                                __end_of_strncmp 8264  
              ??__fill_buffer_get_calibration1 006B                ??__fill_buffer_get_calibration2 006B  
                             __end_ofi2_memcpy 9902                    __end_of__display_efficiency 23B0  
                             __end_ofi2_memset A534                 __display_temperature@external1 00A4  
               __display_temperature@external2 00B0                 ??_MSDComputeDeviceInAndResidue 0062  
                     __ic2_display_set_address A2A6                              __buck_timer2_init A9B0  
                               _MSDReadHandler 422C                          ?_rtcc_increment_hours 002E  
                        ??_rtcc_increment_year 0068                          ?_rtcc_increment_month 002E  
                        __size_of__display_usb 01B6              __end_of_buck_remote_set_dutycycle A72C  
            __size_of_rtcc_get_seconds_decimal 0012                        __CFG_DSWDTOSC$INTOSCREF 000000  
                 __size_of_USBStdSetCfgHandler 00DC              fat_create_file@number_of_clusters 00AC  
                         flash_page_write@data 0081                  ??i2_ExternalFlash_MediaDetect 0030  
              __size_of_fat_get_empty_clusters 00B8                      ?_rtcc_get_seconds_decimal 002E  
                         flash_page_write@page 007F                       __end_of_log_collect_data 3056  
                              __initialization 74A0                    __display_temperature@header 0090  
                         ??_buck_remote_set_on 0060                             ?__buck_timer2_init 002E  
                    __end_of__flash_get_status 9F84        __end_ofi2_ExternalFlash_MediaInitialize A8AA  
     __size_ofi2_ExternalFlash_MediaInitialize 001E          __end_of_ExternalFlash_MediaInitialize A77C  
       __size_of_ExternalFlash_MediaInitialize 0028              ??i2_ExternalFlash_MediaInitialize 0030  
             ?i2_ExternalFlash_MediaInitialize 002E                i2_ExternalFlash_MediaInitialize A88C  
                _ExternalFlash_MediaInitialize A754                                    _system_init 60EE  
               __size_of_system_encoder_enable 0010                                   __end_of_main 2716  
                                 __end_of_itoa 9E78                  __end_of_system_encoder_enable AB38  
                             _rtcc_set_minutes A94A                   __size_of__rtcc_increment_bcd 003E  
                             _rtcc_set_seconds A916                __end_of_i2c_display_write_fixed 9540  
                                 __end_of_utoa 7924                    ??__fill_buffer_get_display1 0064  
                  ??__fill_buffer_get_display2 0064                       __parse_command_short@cmd 008B  
                        ?__buck_set_sync_async 0062                               __end_of_i2c_init AB62  
                  __end_of__rtcc_decrement_bcd A000                       __end_of__i2c_acknowledge ABA2  
                                ??__i2c_open_1 0060                     __end_of__get_empty_cluster 84B6  
                                _adc_calibrate AB62                           ??_USBCheckMSDRequest 0039  
                               __CFG_OSC$HSPLL 000000         MSDComputeDeviceInAndResidue@DiExpected 0060  
                      _USBCheckMSDRequest$2640 0039                        _USBCheckMSDRequest$2641 003B  
                        system_init@appendtext 0100                      __size_of_USBCtrlEPService 0096  
                          ??__buck_timer2_init 0060                                         ??_main 00D5  
                                ___fttol@sign1 0069                               __end_of__i2c_get AB98  
                                       ??_itoa 0076                             USBStallEndpoint@ep 0065  
                         __size_of__ui_encoder 0444                                         ??_utoa 006D  
                                __activetblptr 000003                                ?_USBDeviceTasks 002E  
                           __write_root@offset 008D     __end_of_ExternalFlash_WriteProtectStateGet 019A  
  __size_of_ExternalFlash_WriteProtectStateGet 0004           ??_ExternalFlash_WriteProtectStateGet 0062  
          ?_ExternalFlash_WriteProtectStateGet 0060             _ExternalFlash_WriteProtectStateGet 0196  
                                  ?_USBSuspend 002E    __i2c_eeprom_load_default_calibration@buffer 0060  
                  __end_of_rtcc_decrement_year A630                __size_of_rtcc_increment_minutes 002A  
              __size_of_rtcc_increment_seconds 002A                      ??__buck_initial_dutycycle 006D  
                             ??_rtcc_set_hours 0060                               ??_rtcc_set_month 0060  
                     ??_buck_remote_set_enable 0060                 __display_efficiency@efficiency 00C6  
                     __end_of_rtcc_get_minutes AA82                       __end_of_rtcc_get_seconds AA5A  
                  __size_of__write_calibration 00BC                  __flash_write_to_buffer@buffer 0079  
                      __end_of_USBDeviceAttach A12C                         __flash_write_to_buffer 9476  
              i2c_digipot_reset_off@data_array 006A                                ??_i2c_adc_start 006C  
                             __end_of___altoft 7FFC                         __get_dateTime@datetime 0074  
                                       _ADRESH 000FC4                                         _ADRESL 000FC3  
                                       _CCPR1L 000FBB                                         _EECON2 000FA7  
                                       _DMABCH 000F66                                         _DMABCL 000F67  
                             ___awdiv@dividend 0060                         ?_i2c_digipot_reset_off 002E  
                              ?_ResetSenseData 002E                    ??__get_available_root_entry 008E  
                             __end_of___ftpack 0196                                     __i2c_start ABBE  
                       SYSTEM_Initialize@state 0060                                     __i2c_write 99B8  
                                 __display_usb 49E8                               __end_of_adc_init A8C6  
                             __end_of_adc_read 85D4                                         i2l1322 8072  
                                       i2l1331 8044                                         i2l1333 804A  
                                       i2l1325 800A                                         i2l1329 8070  
                               __CFG_WDTEN$OFF 000000           __flash_write_page_from_buffer@buffer 0075  
              ??_APP_DeviceCustomHIDInitialize 003A                       ?__fill_buffer_get_status 002E  
                                       _OSCCON 000FD3                   ??_get_next_eeprom_write_task 0060  
                                       _RTCCAL 000F3E                                         _RPINR1 000EE1  
                                       _RPOR21 000ED5                                         _RPINR2 000EE2  
                                       _RPOR22 000ED6                                         _RPINR3 000EE3  
                    __end_of__buck_timer2_init A9C8                                 __CFG_WPCFG$OFF 000000  
                        __display_itoa@missing 008E                         __end_of_MSDReadHandler 4440  
                              __read_root@data 0087                        __display_charger@fan_on 0108  
                      __display_charger@header 010F                        i2c_eeprom_write@address 006A  
                     i2USBTransferOnePacket@ep 0036                               ??__i2c_wait_idle 0060  
                            ??i2_USBDeviceInit 0036                         ?_display_get_character 0060  
                             ?_display_prepare 002E                __size_ofi2_USBTransferOnePacket 0102  
                              __read_root@slot 008E                              ?__get_input_power 006E  
                      __write_calibration@addr 0097                    fat_append_to_file@file_size 009F  
                      __write_calibration@cntr 009C                                 __CFG_WPDIS$OFF 000000  
                             __read_fat@offset 008B                               _i2c_eeprom_tasks 9046  
                            _shortPacketStatus 002A              fat_append_to_file@number_of_bytes 0091  
                   __get_empty_cluster@cluster 008F                                 __CFG_XINST$OFF 000000  
                             _i2c_eeprom_write 7CC4                             ??__get_input_power 0070  
                              rtcc_set_day@day 0060                   ??__parse_command_calibration 0067  
                              USBDeviceTasks@i 004C                                    i2memcpy@tmp 0038  
                                 _CCPTMRS0bits 000F52                    USBStdFeatureReqHandler@pUEP 0046  
                     USBTransferOnePacket@data 0061                     USBCtrlTrfInHandler@lastDTS 002F  
                 __end_of__flash_set_page_size 8770                                ??_USBDeviceInit 0068  
           __flash_copy_page_to_buffer@command 0079                       __end_of_rtcc_correct_day A7C8  
                     flash_partial_read@length 0077                                         ___lmul 8E76  
                                       _gblCBW 0241                                      ??___aldiv 0068  
                           __size_of__i2c_read 00C0                             __size_of__i2c_send 000A  
                       __size_of__get_dateTime 01B6                                      ??___awdiv 0064  
                               __CFG_STVREN$ON 000000                             __size_of__i2c_stop 0008  
                       __size_of__get_checksum 0046                                      ??___lldiv 0068  
                                    ??___fttol 0064    i2SYSTEM_Initialize@pll_startup_counter_3284 0030  
    SYSTEM_Initialize@pll_startup_counter_3284 0063                                      ??___lwdiv 0064  
                 __size_of_flash_partial_write 0070                                 ?_adc_calibrate 002E  
                                   _SoftDetach 01F6                                      ??___lwmod 0064  
                                       _buffer 0800                              _USBEnableEndpoint A0B8  
              __size_of_USBStdGetStatusHandler 00AA                __size_of_buck_remote_get_status 0032  
                      system_output_off@output 0061                                __get_date@month 0069  
                                       _memcpy 93A8                     ?_adc_calculate_temperature 006C  
                                       _memset A2DA                        __end_of_i2c_eeprom_read 9606  
                                       clear_0 7508                                         clear_1 751A  
                                       clear_2 7526                                         clear_3 7532  
                                       clear_4 753E                                         clear_5 754A  
                    _ExternalFlash_SectorWrite A12C                                         clear_6 7556  
                              __CFG_CLKOEC$OFF 000000                               __end_of_inq_resp FF7B  
                             ___awdiv@quotient 0066                         ??_i2c_digipot_reset_on 006A  
                                       _ui_run 6206                        ?_system_encoder_disable 002E  
                           ?_USBEnableEndpoint 0036                   __size_of__buck_operate_local 04EE  
                         __end_of_buck_operate 97EC                             _flash_partial_read 7E1A  
                                       _status 01F0                          i2c_display_init@F8357 03E4  
                                       _strlen 9D9E                        ?_rtcc_decrement_minutes 002E  
                      ?_rtcc_decrement_seconds 002E                         __size_of__buck_prepare 006E  
                       __display_outputs@F8722 FE03                         __display_outputs@F8724 FDA5  
                       __display_outputs@F8726 FC64                         __display_outputs@F8728 FC4F  
                __size_of_USBTransferOnePacket 0134                            __size_of_USBMSDInit 011E  
                  i2c_display_write_fixed@data 0065                     __end_of_log_generate_entry 2030  
  i2c_display_send_init_sequence@init_sequence 006A                         __size_of__flash_wakeup 005E  
                      __write_root@root_sector 008B                                         itoa@cp 0076  
                       __size_of__flash_spi_tx 006C                              _i2c_set_frequency 90B6  
                        system_init@extension2 017E                          __end_of_fat_find_file 6A32  
       buck_remote_set_synchronous@synchronous 0060                    fat_get_empty_clusters@value 008D  
                       _fat_get_empty_clusters 7B58                  __size_of__parse_command_short 00E4  
                       ?_rtcc_get_year_decimal 002E                 __display_charger@charger_async 0124  
          __size_of_get_next_eeprom_write_task 002E                                   __mediumconst FC24  
                          __end_of__i2c_open_1 A9B0                 i2c_digipot_reset_on@data_array 006A  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                      __rtcc_decrement_bcd@value 0067  
                                    ??_ui_init 0060                    __end_of__display_time@F8701 FDE5  
             __size_of_APP_DeviceMSDInitialize 0010                    __end_of__display_time@F8681 FEA1  
                  __end_of__display_time@F8683 FE7E                    __end_of__display_time@F8675 FE1F  
                  __end_of__display_time@F8691 FD60                    __end_of__display_time@F8677 FE91  
                  __end_of__display_time@F8685 FE69                    __end_of__display_time@F8693 FDF5  
                  __end_of__display_time@F8679 FE88                    __end_of__display_time@F8687 FE5D  
                  __end_of__display_time@F8695 FD4E                    __end_of__display_time@F8689 FCF1  
                  __end_of__display_time@F8697 FCDD                    __end_of__display_time@F8699 FCC9  
              ??__flash_compare_page_to_buffer 0076                            ??_USBEnableEndpoint 0037  
                           ?_i2c_set_frequency 002E              __end_of__display_efficiency@F8753 FD17  
            __end_of__display_efficiency@F8755 FD04              __end_of__display_efficiency@F8757 FE03  
                          ?_flash_partial_read 0073                        __end_of__number_of_days 8C18  
                     __size_of_flash_page_read 002A                      __fill_buffer_get_display1 972C  
                    __fill_buffer_get_display2 96CA                                      ??_tmr_isr 002E  
                   __end_of__root_is_available 82FA                         ??_system_output_toggle 0062  
                    __size_of_system_output_on 004E                                    _CtrlTrfData 000D38  
         __end_of_buck_remote_change_dutycycle 96CA          __size_of_buck_remote_change_dutycycle 0062  
                 _buck_remote_change_dutycycle 9668                                      ??_strncmp 0066  
                         __size_of__write_root 006C             buck_remote_change_dutycycle@change 0060  
                        __end_of_ui_get_status ABD2             __size_of_buck_remote_get_dutycycle 0006  
                       __display_outputs@line3 0060                         __display_outputs@line4 0075  
            i2ExternalFlash_MediaDetect@config 002E                ExternalFlash_MediaDetect@config 0060  
                         _controlTransferState 0029                     ??_APP_DeviceCustomHIDTasks 008C  
                        __flash_spi_tx_rx@data 0064                           __CFG_LS48MHZ$SYS48X8 000000  
                      ?_rtcc_get_month_decimal 002E                              _SYSTEM_Initialize 9340  
                __size_of__display_temperature 01FC                          __flash_spi_tx_tx@data 0064  
                          ??_i2c_set_frequency 0060                                     __accesstop 0060  
                      __end_of__initialization 755C                                     ___altoft@c 006E  
            MSDCheckForErrorCases@MSDErrorCase 0070                     log_write_to_disk@log_entry 0101  
                  ?__parse_command_calibration 0063                                ?_MSDReadHandler 002E  
                 __size_of__buck_set_dutycycle 007C                           __end_of_i2c_adc_read 98A6  
                       ??_rtcc_increment_hours 0068                             ?_SYSTEM_Initialize 002E  
                       ??_rtcc_increment_month 0068                         __size_of__display_itoa 02B8  
                                ___rparam_used 000001                         __size_of__display_time 06D8  
                       _rtcc_increment_minutes A5B2                         _rtcc_increment_seconds A55E  
                     __size_of_USBStallHandler 0046                   __end_of__i2c_not_acknowledge AB8E  
              ExternalFlash_SectorWrite@config 0084                ExternalFlash_SectorWrite@buffer 008A  
              __end_of__buck_initial_dutycycle 7226                    __end_of__parse_command_long 6D02  
                __size_of_rtcc_get_day_decimal 0012                             __size_of__get_date 0082  
                          __size_of_USBSuspend 0030                             __size_of__get_time 0086  
                        __write_fat@fat_sector 008C                          flash_page_write@match 0083  
                     __end_of_rtcc_read_eeprom 9C14                           ??_flash_partial_read 007B  
                                   ___fttol@f1 0060                               _flash_page_write 9A12  
                            ?__get_temperature 006E                                 __pcstackCOMRAM 002E  
                   __size_of__flash_get_status 0040                      __end_of_USBEnableEndpoint A0F4  
                            _log_write_to_disk 85D4                         ??__buck_set_sync_async 0063  
          __size_of_ExternalFlash_CapacityRead 0014                             __rtcc_write_enable A9DE  
                      _battery_voltage_maximum 02E9          __end_of__fill_buffer_get_calibration1 7F5E  
       __size_of__fill_buffer_get_calibration1 00A0                  __fill_buffer_get_calibration1 7EBE  
        __end_of__fill_buffer_get_calibration2 8D0E         __size_of__fill_buffer_get_calibration2 007A  
                __fill_buffer_get_calibration2 8C94                                  __end_of_sd000 FFD0  
                                __end_of_sd001 FF29                                  __end_of_sd002 FF57  
                                __end_of_sd003 FFB2                           buck_remote_set_on@on 0060  
                                    ?_MSDTasks 002E                                   __pidataBANK2 A03E  
                                 __pidataBANK3 A8C6                                   __pidataBANK4 92D8  
                          ??_SYSTEM_Initialize 0060                      __get_available_root_entry A3D0  
         ExternalFlash_SectorWrite@sector_addr 0086               __size_of_USBCtrlEPAllowDataStage 009A  
                           __buck_prepare@cntr 0060           __size_of_i2c_eeprom_read_calibration 014A  
                           ??__get_temperature 0070                      rtcc_decrement_hours@hours 0068  
                           __size_of__read_fat 005A                                _active_protocol 01FE  
                          i2USBStallEndpoint@p 0034                             ?_log_write_to_disk 002E  
               __end_of_system_encoder_disable ABCC                  __size_of_USBConfigureEndpoint 0094  
           __size_of_ExternalFlash_MediaDetect 000A                    __end_of_USBCtrlTrfInHandler 77A8  
                 ?_buck_remote_set_synchronous 002E                            _userInterfaceStatus 01F3  
               __end_of_rtcc_decrement_minutes A6AE                 __end_of_rtcc_decrement_seconds A65A  
                          display_prepare@mode 00D4                                   _gblSenseData 0260  
                              _MSDErrorHandler 5A06                 ?_ExternalFlash_MediaInitialize 0060  
                    __end_of_i2c_set_frequency 9126                            ?__rtcc_write_enable 002E  
                       i2_USBTransferOnePacket 683C                            system_init@filename 0168  
                 __size_of_system_output_is_on 001A                                     __buck_stop A4DC  
                          ??_log_write_to_disk 00D0               fat_get_empty_clusters@fat_sector 0089  
                 buck_remote_set_enable@remote 0060                                      ?i2_memcpy 002E  
                                    ?i2_memset 002E          __end_of_MSDProcessCommandMediaPresent 1440  
       __size_of_MSDProcessCommandMediaPresent 0436                  _MSDProcessCommandMediaPresent 100A  
                       flash_partial_read@data 0079                             __size_of_buck_init 000E  
                       flash_partial_read@page 0073                                  __get_date@day 006A  
              __size_of_buck_remote_set_enable 001E                       ??_USBCtrlTrfSetupHandler 004B  
                      _USBTicksSinceSuspendEnd 01FA                                  __get_dateTime 4832  
                                __get_checksum 9E78              __flash_copy_page_to_buffer@buffer 0075  
                             ?_USBDeviceAttach 002E                      __end_of_SYSTEM_Initialize 93A8  
                      ??__update_modified_time 006F                              __end_of__i2c_read 76E8  
                 __size_of__rtcc_write_disable 0016                              __end_of__i2c_send ABB6  
                       _USBStdGetStatusHandler 7D70                 __end_of_rtcc_get_month_decimal AAF2  
                          USBStallEndpoint@dir 0060                              __end_of__i2c_stop ABBE  
                       _buck_remote_get_status A340                                    ?__i2c_start 002E  
                                  ?__i2c_write 0065                                     __pbssBANK0 00D7  
                                   __pbssBANK1 01D3                                     __pbssBANK2 0200  
                                   __pbssBANK3 0300                                     __pbssBANK4 0468  
                       __read_root@root_sector 008A                  fat_append_to_file@fat_cluster 00A5  
             __size_of_i2c_display_write_fixed 0064                               _USBStallEndpoint 578E  
                                   _gblNumBLKS 02AA                  ?_buck_remote_change_dutycycle 002E  
                                    ?_i2c_init 002E                             _buck_get_dutycycle ABD8  
            __end_of_buck_remote_get_dutycycle ABD8                   __end_of__sector_from_cluster A9DE  
                         ??__rtcc_write_enable 0060                   ??_schedule_eeprom_write_task 0060  
                                   __read_root 9200                     __size_of__buck_timer2_init 0018  
                             _mediaInformation 02B6                   __end_of_rtcc_decrement_hours A6D8  
                 __end_of_rtcc_decrement_month A684                                  __buck_prepare 9126  
                                __flash_wakeup 97EC                      rtcc_decrement_month@month 0068  
                                __flash_spi_tx 926C                                      ?__i2c_get 002E  
                  __size_of_USBWakeFromSuspend 0036                                    _pBDTEntryIn 0010  
                    __end_of_log_write_to_disk 865E                    __size_of_i2c_display_cursor 0034  
                   __update_modified_time@root 006D               __end_of_USBCtrlEPServiceComplete 6C16  
        __end_of_APP_DeviceCustomHIDInitialize A23E         __size_of_APP_DeviceCustomHIDInitialize 0036  
                _APP_DeviceCustomHIDInitialize A208                           log_collect_data@temp 0078  
                  MSDTransferTerminated@handle 0039                            ?_buck_get_dutycycle 002E  
           ExternalFlash_SectorSizeRead@config 0060                           USBCtrlTrfRxService@i 002E  
                              ??_adc_calibrate 0060                         __size_of_log_start_new 00F2  
                                      ?___lmul 0060                                     ??_MSDTasks 00AC  
                       __display_itoa@decimals 007A                        ??_i2c_digipot_backlight 006A  
                      __get_checksum@log_entry 0060                              ?__display_charger 002E  
               __flash_write_to_buffer@command 007A                  rtcc_decrement_minutes@minutes 0068  
                                    MSDTasks@i 00B1                                        _CCP1CON 000FBA  
                         i2c_adc_start@channel 006C                                      ?___altoft 006E  
                                      ?_memcpy 0060                             _fat_append_to_file 3056  
                                      ?_memset 0060                                 ___lmul@product 0068  
                                   _device_dsc FFB2                               ??_display_update 0070  
                             ?_i2c_eeprom_read 0071                                    __i2c_open_1 A998  
                                    ?___ftpack 0060                             ??__display_charger 0090  
                             _USBCtrlEPService 82FA              system_calculate_input_voltage@tmp 0070  
                                      ?_ui_run 002E                                     _ep_data_in 01E4  
                           __display_clear@col 0063                                      ?_adc_init 002E  
                                    ?_adc_read 0060                             __display_clear@row 0062  
                                      ?_strlen 0060                  fat_append_to_file@file_number 00A9  
               __parse_command_calibration@cmd 002E                  ??_buck_remote_set_synchronous 0060  
                  APP_DeviceCustomHIDTasks@idx 0096               __sector_from_cluster@fat_cluster 0060  
                  __end_of_USBCtrlTrfRxService 6424                                  __display_itoa 3314  
                                __display_time 0000                             _USBCheckStdRequest 6EC2  
                    __write_calibration@buffer 0087                              _configDescriptor1 FEB5  
                                      i2l11200 68FA                                        i2l12020 A522  
                                      i2l20020 A1FC                                        i2l11048 83F2  
                                      i2l11400 6FBC                                        i2l12120 5B48  
                                      i2l12016 A512                                        i2l11234 A0C8  
                                      i2l20018 A1FA                                        i2l12036 75AC  
                                      i2l11180 6852                                        i2l12140 5C46  
                                      i2l12132 5BE8                                        i2l12124 5B5A  
                                      i2l20052 837A                                        i2l11238 A0D6  
                                      i2l11422 700C                                        i2l11406 6FD2  
                                      i2l12142 5C4C                                        i2l12134 5BEE  
                                      i2l12070 819C                                        i2l20054 8380  
                                      i2l11432 702C                                        i2l11408 6FD8  
                                      i2l11416 6FEA                                        i2l11346 6794  
                                      i2l11418 6FFC                                        i2l12146 5C52  
                                      i2l12066 8184                                        i2l11188 687C  
                                      i2l11428 7022                                        i2l11444 704C  
                                      i2l11438 7042                                        i2l11454 723C  
                                      i2l11630 9B72                                        i2l12158 7DAE  
                                      i2l11704 7458                                        i2l12168 7DEE  
                                      i2l11706 7460                                        i2l11714 7498  
                                      i2l11474 7292                                        i2l11634 9B7C  
                                      i2l11642 9BAC                                        i2l14114 98B8  
                                      i2l14122 98F0                                        i2l13260 7720  
                                      i2l11476 72B0                                        i2l11492 72EA  
                                      i2l11636 9B8E                                        i2l13262 7724  
                                      i2l13246 9958                                        i2l13238 9910  
                                      i2l11582 9B36                                        i2l11478 72B6  
                                      i2l11638 9B9A                                        i2l13280 7784  
                                      i2l12720 63DA                                        i2l12704 6366  
                                      i2l11682 73EC                                        i2l13274 7764  
                                      i2l23114 8950                                        i2l12650 6B46  
                                      i2l12716 63C0                                        i2l23116 8984  
                                      i2l11686 73F6                                        i2l12670 6BC2  
                                      i2l11696 7420                                        i2l21800 552C  
                                      i2l14178 9EFC                                        i2l21820 5556  
                                      i2l21814 554A                                        i2l12698 6344  
                                      i2l21826 557C                                        i2l21852 55C4  
                                      i2l21844 559C                                        i2l21838 5590  
                                      i2l21880 5642                                        i2l21872 5606  
                                      i2l21792 551C                                        i2l21858 55D8  
                                      i2l18300 3CFE                                        i2l18212 6E2E  
                                      i2l15900 51CA                                        i2l18310 3D40  
                                      i2l18302 3D0A                                        i2l21878 5626  
                                      i2l18208 6E26                                        i2l16720 8018  
                                      i2l18234 6EA0                                        i2l18218 6E5A  
                                      i2l15906 5226                                        i2l18316 3D86  
                                      i2l16724 8022                                        i2l18318 3D92  
                                      i2l18262 3BB8                                        i2l16750 8088  
                                      i2l16734 8050                                        i2l16718 8010  
                                      i2l16726 8038                                        i2l18248 3B40  
                                      i2l15872 516A                                        i2l16752 808A  
                                      i2l16744 807C                        ??_MSDCheckForErrorCases 006E  
                                      i2l18290 3CB2                                        i2l18274 3C2A  
                                      i2l16738 805A                                        i2l18284 3C7C  
                                      i2l18268 3C04                                        i2l15884 5192  
                                      i2l15868 5162                                        i2l17670 5EA6  
                                      i2l17662 5E16                                        i2l18286 3C98  
                                      i2l18710 6EE6                                        i2l16758 8096  
                                      i2l18720 6EFE                                        i2l15896 51C2  
                                      i2l17674 5EAE                                        i2l18722 6F04  
                                      i2l18706 6EDA                                        i2l18732 6F3A  
                                      i2l18708 6EE0                                        i2l18718 6EF8  
                                      i2l17880 8906                                        i2l18736 6F58  
                                      i2l17882 890E                                        i2l17892 892A  
                                      i2l17884 8916                                        i2l17888 8920  
                                      i2l17896 8938                             __size_of_rtcc_init 0020  
                          ?_fat_append_to_file 0091                    __end_ofi2_SYSTEM_Initialize 9BC2  
                                   ??i2_memcpy 0034                         fat_append_to_file@data 0093  
                                   ??i2_memset 0034                                     _flash_init 9CB8  
                   system_output_toggle@output 0062                    __end_of_USBCtrlTrfTxService 74A0  
                            __end_of__get_date 8B9A                            _USBStdSetCfgHandler 6DE6  
          __size_of_schedule_eeprom_write_task 0056                           ??_buck_get_dutycycle 0060  
                       fat_append_to_file@root 00B0                                __get_time@hours 0068  
                __buck_set_dutycycle@dutyCycle 0061                              __end_of__get_time 887E  
                            ?__display_outputs 002E                                 ?__get_dateTime 0064  
                rtcc_decrement_seconds@seconds 0068                                 ?__get_checksum 0060  
                                      _RPINR21 000EFC                                        _RPINR22 000EFD  
                                      _SSP1ADD 000FC8                                        _SSP1BUF 000FC9  
                                      _RXADDRH 000F68                                        _RXADDRL 000F69  
                                      _RTCVALH 000F3B                                        _RTCVALL 000F3A  
                             ?__number_of_days 002E                     __end_ofi2_USBStallEndpoint 683C  
                           _rtcc_decrement_day A4B0                            __rtcc_increment_bcd 9F84  
                        __display_time@minutes 01D0                          __display_time@seconds 01D1  
                                      _TXADDRH 000F6A                                        _TXADDRL 000F6B  
                     __end_of_rtcc_set_minutes A964                       __end_of_rtcc_set_seconds A930  
                          ?_USBCheckStdRequest 002E                     ??__ic2_display_set_address 006A  
                 __size_of_USBStdGetDscHandler 0132                       __display_charger@fan_off 0100  
                         __flash_set_page_size 86E8                                        _UIEbits 000F36  
                           ??__display_outputs 0060                          __display_time@setyear 01BA  
                   __display_charger@supply_on 0160             __end_of_get_next_eeprom_write_task A42C  
                   _get_next_eeprom_write_task A3FE                            i2c_eeprom_read@addr 0077  
                   __end_of_APP_DeviceMSDTasks AB28                                        _UIRbits 000F62  
                            __end_of__read_fat 99B8                                  ??__buck_start 0073  
                          i2c_eeprom_read@data 0073                    ??_log_get_number_of_samples 0062  
  MSDCheckForErrorCases@HostMoreDataThanDevice 006E                          rtcc_increment_day@day 0068  
        __end_of__flash_compare_page_to_buffer 8134         __size_of__flash_compare_page_to_buffer 009A  
                __flash_compare_page_to_buffer 809A                                     __write_fat 9C14  
                                   ??_i2c_init 0061                               __CFG_CFGPLLEN$ON 000000  
                     __i2c_write@slave_address 0068            __ic2_display_set_address@data_array 006B  
                               ?__buck_prepare 002E                                   ??_USBMSDInit 0039  
                     __write_calibration@index 009B                              __read_fat@cluster 0087  
                               ?__flash_wakeup 002E                             i2c_adc_read@result 0068  
                            ??_flash_page_read 008B                            ?_rtcc_decrement_day 002E  
                               ?__flash_spi_tx 0060                         fat_find_file@extension 0089  
                            ?i2_ResetSenseData 002E                                 _outputPowerSum 0286  
                                   ??__i2c_get 0060                              _MSDProcessCommand 4D0C  
                         ??_fat_append_to_file 0095           adc_calculate_temperature@calibration 006E  
                                __i2c_send@dat 0060                      __flash_get_status@command 006E  
                           __flash_spi_tx@data 0060                                        __Hparam 0000  
              rtcc_get_hours_decimal@bcd_hours 0063                ??_USBIncrement1msInternalTimers 002E  
                                   _lastSecond 01EF                           ?_USBStdSetCfgHandler 002E  
                        __end_of_rtcc_get_year AA46                    __size_of_USBCheckHIDRequest 00DA  
                                      __Lparam 0000                    __size_of_rtcc_increment_day 002C  
                           ??i2_ResetSenseData 002E                             __display_itoa@text 007B  
                     __size_of_fat_create_file 01F6                              __end_of_hid_rpt01 FF98  
                       _buck_remote_set_enable A86E                             ?_MSDProcessCommand 002E  
                    __rtcc_increment_bcd@value 0067                        __end_of_MSDErrorHandler 5B38  
                            __end_of_buck_init AB56                     _MSDTransferTerminated$2729 003B  
                   __size_of_USBEnableEndpoint 003C                      __size_of__flash_spi_tx_rx 00BC  
                    __size_of__flash_spi_tx_tx 00B4           APP_DeviceCustomHIDTasks@return_value 0094  
                                 ?_system_init 002E                rtcc_get_month_decimal@bcd_month 0063  
                            ?_log_collect_data 002E                             __display_usb@F8712 FCA1  
                           __display_usb@F8714 FDC5                             __display_usb@F8716 FDB5  
                           __display_usb@F8718 FD84                           ?__rtcc_increment_bcd 0064  
                        __size_of_buck_operate 005E                           ??_USBCheckStdRequest 004B  
                                      ___aldiv 5FD4                  __size_of_USBCtrlTrfOutHandler 005C  
        i2ExternalFlash_MediaInitialize@config 002E            ExternalFlash_MediaInitialize@config 0060  
                                      ___awdiv 77A8                               _ToSendDataBuffer 03A4  
                              __size_of___lmul 0076                                        ___lldiv 79E0  
                             ??_USBDeviceTasks 004C                                        ___fttol 564A  
                                      ___lwdiv 8D86                              ??_USBStallHandler 002E  
                                      ___lwmod 9606                             ??_log_collect_data 0074  
                                   ??___altoft 0072                              ?__i2c_acknowledge 002E  
                        __end_of_buck_get_mode ABE2                            __size_of__i2c_start 0008  
                 __end_of__system_encoder_init 9E30                                        __pcinit 74A0  
                              __size_of_memcpy 0068                            __size_of__i2c_write 005A  
                                   ??___ftpack 0065                                __size_of_memset 0034  
                     __size_of_MSDWriteHandler 0322                      __end_of_configDescriptor1 FEF5  
                          ??_MSDProcessCommand 00A7                                        __ramtop 0F00  
                 ExternalFlash_SectorRead@page 0093                 ?__fill_buffer_get_calibration1 002E  
               ?__fill_buffer_get_calibration2 002E                     __size_of_i2c_set_frequency 0070  
                                   ??_adc_init 0060                                     ??_adc_read 0062  
                                      __ptext0 23B0                                        __ptext1 6206  
                                      __ptext2 AB28                                        __ptext3 ABC6  
                                      __ptext4 A30E                                        __ptext5 A42C  
                                      __ptext6 A458                                        __ptext7 A23E  
                                      __ptext8 0BC6                                        __ptext9 A77C  
                               ?__display_itoa 0078                                        _inPipes 000A  
                         ??_rtcc_decrement_day 0068                                __size_of_ui_run 0112  
                               ?__display_time 002E                          _task_list_write_index 001D  
                           __display_time@cntr 01D2              __size_of_ExternalFlash_SectorRead 0038  
                 __end_of__display_inout@F8671 FE2D                    _USBDeferOUTDataStagePackets 01FB  
                 __end_of__display_inout@F8665 FD84                             __display_time@mode 01CB  
                 __end_of__display_inout@F8667 FD72                   __end_of__display_inout@F8669 FEB3  
                           ??__i2c_acknowledge 0060                                      _T0CONbits 000FD5  
                           __display_time@year 01CC                          __end_of_rtcc_set_year A916  
                    ?_ExternalFlash_SectorRead 008B                                __size_of_strlen 004A  
                  __end_of__system_timer0_init 9F44                                      _T1CONbits 000FCD  
                                  ?__buck_stop 002E                                   ??_USBSuspend 0045  
                                    _T2CONbits 000FCA                             __end_of_USBMSDInit 5EB8  
                             ??_ResetSenseData 0060                        ?__flash_write_to_buffer 0073  
                      _APP_DeviceMSDInitialize AB38                                        _msd_cbw 000D40  
                     __end_of_i2c_eeprom_tasks 90B6                               ___aldiv@dividend 0060  
                                      _msd_csw 000D80                        ??_i2c_digipot_reset_off 006A  
                         __i2c_not_acknowledge AB84                       __end_of_i2c_eeprom_write 7D70  
                              i2_USBDeviceInit 5120                                        _ui_init AA0A  
                             i2USBDeviceInit@i 0036                                  _log_start_new 6A32  
           __size_of_ExternalFlash_SectorWrite 0038                        __size_of__buck_pin_init 0036  
                __size_of__rtcc_bdc_to_decimal 0028                          ?__flash_set_page_size 002E  
                                      _tmr_isr 7FFC                          __end_of_flash_is_busy A812  
                           __end_of_USB_CD_Ptr FEB5                                     _msd_buffer 000600  
                           __get_empty_cluster 8424                              ?_rtcc_get_minutes 002E  
                            ?_rtcc_get_seconds 002E                     __size_of_SYSTEM_Initialize 0068  
                             _system_output_on 9D06                __size_of_USBCtrlTrfSetupHandler 0090  
                        __size_of_i2c_adc_read 005C                  __size_of__buck_operate_remote 0106  
                                      _strncmp 81CE                            _flash_partial_write 8FD6  
                         end_of_initialization 755C                        rtcc_decrement_year@year 0068  
                      ??_display_get_character 0061                          _MSDTransferTerminated 9B18  
        __flash_compare_page_to_buffer@command 007B                 ?_MSDProcessCommandMediaPresent 002E  
                           __end_of_USB_SD_Ptr FEA9                    __end_of_rtcc_increment_year A55E  
                           ??_rtcc_get_minutes 0060                             ??_rtcc_get_seconds 0060  
                          i2c_eeprom_write@dat 0072                                        memcpy@d 0067  
         __size_of_buck_remote_set_synchronous 001E                                        memcpy@n 0064  
                                      memcpy@s 0069                               __write_fat@value 008A  
                 __get_temperature@temperature 006E                            _pBDTEntryEP0OutNext 0018  
                    __end_of_MSDProcessCommand 4E6C                                        itoa@buf 0070  
                                  ?__read_root 0087                                        memset@c 0062  
                                      itoa@val 0072                                        memset@n 0064  
                                      memset@p 0066                            __buck_operate_local 06D8  
                              _USB1msTickCount 01DD                       __buck_operate_local$8729 007B  
                                 _buck_operate 978E                            ?__get_empty_cluster 0087  
                 fat_get_empty_clusters@offset 008B                       ?_USBStdFeatureReqHandler 002E  
                i2c_eeprom_write@slave_address 0083                                      i2u1622_48 5E3C  
                                    i2u1199_40 98DA                                      i2u1622_49 5E50  
                                    i2u1199_47 98D0                                      i2u1624_48 5E62  
                                    i2u1624_49 5E78             __size_of__fill_buffer_get_display1 0062  
           __size_of__fill_buffer_get_display2 0062                                      i2u1626_44 5E96  
                     fat_append_to_file@length 00AA                                      i2u1626_45 5E90  
                             _inputCapacitySum 0282                       fat_append_to_file@offset 00A7  
                        ??_USBStdSetCfgHandler 0045                                ___lldiv@divisor 0064  
                   __size_of_log_write_to_disk 008A            rtcc_get_minutes_decimal@bcd_minutes 0063  
                     fat_append_to_file@sector 009D                              __end_of_rtcc_init A832  
               ??_buck_remote_change_dutycycle 0060                                ___lldiv@counter 006C  
                          __end_of__buck_start 714E                                  ?_rtcc_get_day 002E  
          rtcc_get_seconds_decimal@bcd_seconds 0063                                   _averageCount 0016  
                        ??__rtcc_increment_bcd 0066                             __end_of_USBSuspend A3A2  
                            __get_time@minutes 0069                              __get_time@seconds 006A  
                      _USBCtrlEPAllowDataStage 8134                     ?_buck_remote_set_dutycycle 002E  
                             ___aldiv@quotient 006A                    __size_of_buck_remote_set_on 001E  
                                      postdec1 000FE5                                        postdec2 000FDD  
         __end_of_ExternalFlash_SectorSizeRead AB7A          __size_of_ExternalFlash_SectorSizeRead 000C  
                 _ExternalFlash_SectorSizeRead AB6E                                        postinc0 000FEE  
                                      postinc1 000FE6                                        postinc2 000FDE  
                          rtcc_set_hours@hours 0060                              ?_rtcc_correct_day 002E  
                     __buck_operate_local@cntr 007D                           ?_flash_partial_write 007F  
                 __size_of__display_efficiency 0380               __size_of__fill_buffer_get_status 029C  
                                ??__ui_encoder 008B                                  ?_rtcc_set_day 002E  
                                      utoa@buf 0067                      _log_get_number_of_samples AB7A  
      MSDProcessCommandMediaPresent@sectorSize 009E                       _USBCtrlEPServiceComplete 6B24  
                                      utoa@val 0069                   log_write_to_disk@file_number 0100  
                                    _MSD_State 00E7                                  _inputPowerSum 028A  
                        _system_encoder_enable AB28                                        strlen@s 0060  
                  ??_adc_calculate_temperature 006F                             ??_rtcc_correct_day 0064  
                  __size_of_USBCheckMSDRequest 00D6                     _USBStatusStageEnabledFlag1 0022  
                   _USBStatusStageEnabledFlag2 0021                       flash_partial_write@match 0087  
                         ?__buck_operate_local 002E                             USBEnableEndpoint@p 0037  
                      ?_fat_get_empty_clusters 0087                        ??_rtcc_get_year_decimal 0063  
                                    _PORTAbits 000F80                                      _PORTBbits 000F81  
                      __display_outputs@header 009A                               _outputCurrentSum 028E  
                     flash_partial_write@start 0081                      __size_of__get_input_power 0084  
                         ??__get_empty_cluster 0089                 __end_of__flash_write_to_buffer 94DC  
                          __buck_set_dutycycle 8C18                               __CFG_DSBOREN$OFF 000000  
                    __display_temperature@cntr 00C7                           __sector_from_cluster A9C8  
                                 _i2c_adc_read 984A                           _rtcc_decrement_hours A6AE  
                         _rtcc_decrement_month A65A             __size_of__get_available_root_entry 002E  
                              ??__get_dateTime 0068                     __end_of__write_calibration 79E0  
                        ?__i2c_not_acknowledge 002E                  fat_append_to_file@new_cluster 00A3  
                     _rtcc_get_minutes_decimal AAAA                                ??__get_checksum 0062  
                       fat_create_file@cluster 00AE                            flash_page_read@data 0089  
                 __size_of__rtcc_decrement_bcd 003E                              adc_read@adc_value 0063  
                                  ?_flash_init 002E                            flash_page_read@page 0087  
                             __CFG_CPUDIV$OSC1 000000                  fat_get_empty_clusters@cluster 0091  
                                    _TRISAbits 000F92                                 ?_log_start_new 002E  
                                    _TRISBbits 000F93                                      _TRISCbits 000F94  
                                    _TRISDbits 000F95                                      _TRISEbits 000F96  
                           _ReceivedDataBuffer 0478                             _BothEP0OutUOWNsSet 0025  
                fat_get_empty_clusters@maximum 0087                       __end_of_flash_page_write 9A6A  
                                __pbssBIGRAMll 0800                               ??_MSDReadHandler 0095  
                    USBConfigureEndpoint@EPNum 0033                        _i2c_display_write_fixed 94DC  
                            __CFG_SOSCSEL$HIGH 000000                     ?_USBCtrlEPAllowStatusStage 002E  
                              ??__buck_prepare 0060                     __display_efficiency@header 0092  
                      __display_time@presssave 0170            USER_USB_CALLBACK_EVENT_HANDLER@size 0041  
                      __size_of__display_clear 0064                                      _USTATcopy 002C  
                              ??__flash_wakeup 0068                   __size_of_rtcc_decrement_year 002A  
                        __end_of_i2c_adc_start 9D9E             __end_of_schedule_eeprom_write_task 9B18  
                   _schedule_eeprom_write_task 9AC2  MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
                      ?_rtcc_increment_minutes 002E                        ?_rtcc_increment_seconds 002E  
                              ??__flash_spi_tx 0064                                    ?__write_fat 0088  
                   __display_efficiency@footer 00B8                        __size_of__display_inout 021C  
                 ?_i2c_eeprom_read_calibration 002E                             _log_generate_entry 1C5E  
              i2c_eeprom_read_calibration@addr 007F                   __end_of_USBTransferOnePacket 5A06  
                         ?__buck_set_dutycycle 002E                i2c_eeprom_read_calibration@cntr 0081  
                                  _CCP1CONbits 000FBA                       _rtcc_get_seconds_decimal AB04  
                          _system_output_is_on A8E2            __end_ofi2_ExternalFlash_MediaDetect ABE6  
                        i2c_eeprom_read@length 0075                    i2_ExternalFlash_MediaDetect ABE2  
                          rtcc_set_month@month 0060                     __display_efficiency@source 00A5  
                       i2c_display_cursor@line 006E                               __CFG_IOL1WAY$OFF 000000  
                          __get_dateTime@hours 0071                   __end_of__parse_command_short 6DE6  
                          __get_dateTime@month 006F                                 ??_rtcc_get_day 0060  
                          __size_of__buck_stop 002C                 ?__flash_compare_page_to_buffer 0073  
                           __root_is_available 8264                              __CFG_WPEND$PAGE_0 000000  
            __end_of__fill_buffer_get_display1 978E              __end_of__fill_buffer_get_display2 972C  
                          ?_log_generate_entry 0078             __flash_compare_page_to_buffer@page 0073  
                          __CFG_MSSP7B_EN$MSK7 000000                      __rtcc_bdc_to_decimal@ones 0061  
                    __rtcc_bdc_to_decimal@tens 0060                              ?_rtcc_read_eeprom 002E  
                __get_empty_cluster@fat_sector 0089                               ?_MSDErrorHandler 002E  
                      __size_of_rtcc_get_hours 0014                        __size_of_rtcc_get_month 0014  
                             __write_root@data 0088                         _USBCtrlTrfSetupHandler 84B6  
               __end_of__display_outputs@F8722 FE11                 __end_of__display_outputs@F8724 FDB5  
               __end_of__display_outputs@F8726 FC79                 __end_of__display_outputs@F8728 FC64  
       __end_of_system_calculate_input_current 5120        __size_of_system_calculate_input_current 015A  
               _system_calculate_input_current 4FC6                          ??_flash_partial_write 0087  
                    system_output_is_on@output 0060                                 ??_rtcc_set_day 0060  
                             __write_root@slot 008F                            __rtcc_write_disable A9F4  
             ExternalFlash_CapacityRead@config 0060                        ?i2_USBTransferOnePacket 002E  
                     __size_of_display_prepare 0088                          __end_of_USBDeviceInit 4D0C  
                           ??_rtcc_read_eeprom 0079          __end_of_USBIncrement1msInternalTimers A7EE  
       __size_of_USBIncrement1msInternalTimers 0026                  _USBIncrement1msInternalTimers A7C8  
                 __end_of__display_temperature 463C                                 __end_of___lmul 8EEC  
               __end_of_fat_get_empty_clusters 7C10                                ??__display_itoa 007D  
                ?_ExternalFlash_SectorSizeRead 0060                                ??__display_time 0060  
           __end_of__display_temperature@F8773 FC8D                     __display_temperature@F8773 FC79  
           __end_of__display_temperature@F8775 FE74                     __display_temperature@F8775 FE69  
           __end_of__display_temperature@F8777 FE45                     __display_temperature@F8777 FE39  
           __end_of__display_temperature@F8779 FE39                     __display_temperature@F8779 FE2D  
                          ?__root_is_available 002E                              __size_of_MSDTasks 02B4  
                        ??__buck_operate_local 0076                       __end_of_USBStallEndpoint 58D2  
                                    i2memcpy@d 0034                       ?__buck_initial_dutycycle 002E  
                                    i2memcpy@n 0032                              ??_fat_create_file 00A3  
                      __end_ofi2_USBDeviceInit 5270                                      i2memcpy@s 0036  
                    ??_APP_DeviceMSDInitialize 003C                                      i2memset@c 0030  
                                    i2memset@n 0032                                      i2memset@p 0034  
                        ?__sector_from_cluster 0060                           ?_system_output_is_on 002E  
                               __end_of_memcpy 9410                                _MSDRetryAttempt 01F8  
                         i2USBStallEndpoint@ep 0033         __end_of_system_calculate_input_voltage 6630  
      __size_of_system_calculate_input_voltage 0106                 _system_calculate_input_voltage 652A  
                               __end_of_memset A30E                          __get_output_power@pwr 006F  
                        ?_rtcc_decrement_hours 002E                               __CFG_DSWDTEN$OFF 000000  
                      __parse_command_long@cmd 0064                          ?_rtcc_decrement_month 002E  
                          __size_of__read_root 006C                  __size_of_i2c_digipot_reset_on 002C  
                            _USBBusIsSuspended 0027                      flash_partial_write@length 0083  
                               __end_of_ui_run 6318                   __end_of_rtcc_get_day_decimal AB04  
        __get_available_root_entry@file_number 008E                                 __end_of_strlen 9DE8  
                __display_temperature@internal 00BC                            __end_of__ui_encoder 100A  
                    __flash_set_page_size@size 0077                                  _chargerOnTime 02B0  
                          start_initialization 74A0                        ?_USBStdGetStatusHandler 002E  
                                ??__write_root 008A                      __size_of__get_temperature 002E  
                      ?_buck_remote_get_status 002E                           ??_log_generate_entry 007A  
                     i2SYSTEM_Initialize@state 0032                  ExternalFlash_SectorWrite@page 008D  
                USBCtrlTrfRxService@byteToRead 002F                         ??__flash_set_page_size 0073  
                            ??_MSDWriteHandler 008F              __end_of__get_available_root_entry A3FE  
                     ??_rtcc_get_hours_decimal 0063                 get_next_eeprom_write_task@task 0060  
                            __size_ofi2_memcpy 005C                     i2c_display_cursor@position 006D  
                         ?__rtcc_write_disable 002E                         ?_MSDTransferTerminated 0039  
                            __size_ofi2_memset 002C                         __display_charger@F8740 FE91  
                       __display_charger@F8732 FC3A                         __display_charger@F8742 FE45  
                       __display_charger@F8734 FD2A                         __display_charger@F8744 FD95  
                       __display_charger@F8736 FD17                         __display_charger@F8738 FEA9  
                       __display_charger@F8746 FC25                         __display_charger@F8748 FC8D  
                              _USBMSDOutHandle 00DD               __ic2_display_set_address@address 006A  
               __end_of_rtcc_increment_minutes A5DC                   __end_of_USBConfigureEndpoint 8424  
               __end_of_rtcc_increment_seconds A588                           system_init@filename2 0171  
                                 ??__i2c_start 0060                                   ??__i2c_write 0068  
              __end_of_USBStdFeatureReqHandler 3DB8                              USBStallEndpoint@p 0066  
                                _MSDHostNoData 00E5                           _task_list_read_index 001E  
                    _adc_calculate_temperature 5EB8                           ??__root_is_available 0087  
               __size_of__update_modified_time 003E              __end_of_USBCtrlEPAllowStatusStage 7628  
                __size_of_system_output_toggle 0026                                    __buck_start 7076  
                __end_of__update_modified_time A03E           fat_get_empty_clusters@empty_clusters 008F  
                        ??__buck_set_dutycycle 0060                       __end_of_USBCtrlEPService 8390  
                   __size_of_MSDProcessCommand 0160                           __system_encoder_init 9DE8  
                                    __i2c_read 7628                        __size_of_rtcc_set_hours 001A  
                         rtcc_read_eeprom@date 0079                                      __i2c_send ABAC  
                      __size_of_rtcc_set_month 001A                                      __i2c_stop ABB6  
                         __flash_spi_tx@length 0062        _ExternalFlash_MediaInitialize$intlevel0 A75A  
                ??_i2c_eeprom_read_calibration 0079                              __size_of_i2c_init 000C  
                         __display_inout@F8671 FE1F                           __display_inout@F8665 FD72  
                         __display_inout@F8667 FD60                           __display_inout@F8669 FEB0  
                            _rtcc_write_eeprom 9C66                      ??_USBCtrlEPAllowDataStage 002F  
                             __buck_start@cntr 0075                                 USBDeviceInit@i 0068  
                             __buck_start@mode 0073                         __write_calibration@ptr 0099  
                __size_of_rtcc_increment_hours 002A                  __size_of_rtcc_increment_month 002A  
                __root_is_available@first_byte 008D                         _pBDTEntryEP0OutCurrent 001A  
                       __size_of_fat_find_file 00F4                             ?_rtcc_write_eeprom 002E  
                                  _DMACON1bits 000F88                         i2c_eeprom_write@length 006E  
                                  _DMACON2bits 000F86                            __size_of_flash_init 004E  
                      USBTransferOnePacket@dir 0060                               __flash_spi_tx_rx 7A9C  
                             __flash_spi_tx_tx 7C10                        USBTransferOnePacket@len 0063  
                            __size_of__i2c_get 000A                    MSDErrorHandler@OldMSD_State 0069  
                                _MSDTasks$2694 00AD                                  _MSDTasks$2695 00AF  
               __end_ofi2_USBTransferOnePacket 693E                    __size_of_flash_partial_read 00A4  
                               __get_date@date 006B                                       ??___lmul 0068  
                             _outputVoltageSum 0292                        flash_partial_read@start 0075  
                               __get_date@year 0068                            _USBStdGetDscHandler 5B38  
                       ?_system_encoder_enable 002E                         system_output_on@output 0060  
                            __CFG_ADCSEL$BIT10 000000              __size_of_APP_DeviceCustomHIDTasks 040A  
                                  __pdataBANK2 02BB                                    __pdataBANK3 03E4  
                                  __pdataBANK4 0400                  __size_of__buck_set_sync_async 0074  
                    ?_APP_DeviceCustomHIDTasks 002E                        rtcc_increment_year@year 0068  
                         __size_of_system_init 0118                 __size_of_i2c_digipot_backlight 0034  
                                     ??_memcpy 0066                        __size_of__i2c_wait_idle 0076  
                                     ??_memset 0066                           __display_inout@line1 0090  
                         system_init@extension 017A                           __display_inout@line2 00A2  
                 __size_of__parse_command_long 00EC                           __display_inout@line3 00C2  
                         __display_inout@line4 00B4                  __end_of_i2c_digipot_backlight A272  
                                 ?__i2c_open_1 002E                         __size_of_ui_get_status 0006  
                          ??_rtcc_write_eeprom 0085                          ??_system_output_is_on 0060  
                                     ??_ui_run 008B                             __end_of__i2c_start ABC6  
                        __number_of_days@month 0063                             __end_of__i2c_write 9A12  
                    __root_is_available@offset 008A                            __size_of__write_fat 0052  
                                     ??_strlen 0062                          __display_outputs@cntr 00A9  
                            __size_of___altoft 009E                         ??__i2c_not_acknowledge 0060  
                        __display_outputs@mode 00A8                         _USBActiveConfiguration 002D  
               __end_of_USBStdGetStatusHandler 7E1A                       _buck_dutycycle_last_step 01F2  
                              ??_log_start_new 0064                 __end_of_buck_remote_get_status A372  
                    __buck_operate_remote$8730 0076                              __size_of___ftpack 010C  
                            __size_of_adc_init 001C                              __size_of_adc_read 008E  
                                  __pbssCOMRAM 0001                                adc_read@channel 0062  
                   fat_append_to_file@position 00AC                    fat_create_file@next_cluster 00A7  
                              _flash_page_read A6D8                      ??_i2c_display_write_fixed 0068  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                 __size_of_USBCtrlTrfInHandler 00C0                   ??_ExternalFlash_CapacityRead 0064  
               __size_of_MSDCheckForErrorCases 0130                                 __buck_pin_init A19C  
                __end_of_MSDCheckForErrorCases 5D9A                          ??__rtcc_write_disable 0060  
                                    _gblBLKLen 02A6                      __size_of__display_charger 0340  
           __end_of_flash_command_pagesize_512 FFCC                     _flash_command_pagesize_512 FFC8  
           __end_of_flash_command_pagesize_528 FFC8                     _flash_command_pagesize_528 FFC4  
                         ?_USBStdGetDscHandler 002E                     i2c_set_frequency@frequency 0060  
                            ?_rtcc_set_minutes 002E                              ?_rtcc_set_seconds 002E  
                                    __get_date 8B18                         __get_checksum@checksum 0064  
                                    __get_time 87F8                    ?_get_next_eeprom_write_task 002E  
                          __end_of__write_root 9200                          ?__system_encoder_init 002E  
                   __end_of_USBWakeFromSuspend A208                             ??_rtcc_set_minutes 0060  
                           ??_rtcc_set_seconds 0060                      __end_of_rtcc_write_eeprom 9CB8  
                   __end_of_i2c_display_cursor A2A6                                     ?__i2c_read 0065  
                  __size_of__rtcc_write_enable 0016                                     ?__i2c_send 002E  
                              _USBStallHandler 9EBE                                   _pBDTEntryOut 01D3  
                                   ?__i2c_stop 002E                        ?_buck_remote_set_enable 002E  
                   ?_buck_remote_get_dutycycle 002E                                      __read_fat 995E  
                   __rtcc_bdc_to_decimal@input 0062                 schedule_eeprom_write_task@task 0061  
                     __size_of_USBDeviceAttach 0038                        __rtcc_decrement_bcd@max 0065  
                      __rtcc_decrement_bcd@min 0064               __end_of_ExternalFlash_SectorRead A19C  
                     __get_checksum@byte_array 0062                             i2_USBStallEndpoint 6736  
                    __size_of__display_outputs 0258                               ___lwdiv@dividend 0060  
                          flash_is_busy@status 0071                   buck_remote_get_status@retval 0060  
                            fat_find_file@name 0087                 MSDProcessCommandMediaPresent@i 00A6  
                          fat_find_file@buffer 008B                              fat_find_file@slot 0096  
                                    __pintcode 0008                      fat_create_file@root_entry 00B0  
                      __fill_buffer_get_status 3880                             _APP_DeviceMSDTasks AB16  
                                __pmediumconst FC24                                       ?___aldiv 0060  
                          fat_find_file@offset 0099                                       ?___awdiv 0060  
                                    __ptext100 4440                                      __ptext101 3DB8  
                                    __ptext110 3314                                      __ptext102 4010  
                                    __ptext111 9D9E                                      __ptext103 2030  
                                    __ptext200 AA96                                      __ptext120 A4DC  
                                    __ptext112 9E30                                      __ptext104 564A  
                                    __ptext201 A340                                      __ptext121 7076  
                                    __ptext113 7866                                      __ptext105 7F5E  
                                    __ptext210 93A8                                      __ptext202 ABD2  
                                    __ptext130 4B9E                                      __ptext122 8F62  
                                    __ptext114 9606                                      __ptext106 008A  
                                    __ptext211 58D2                                      __ptext203 ABDE  
                                    __ptext131 A2DA                                      __ptext123 8C18  
                                    __ptext115 8D86                                      __ptext107 5FD4  
                                    __ptext220 82FA                                      __ptext204 ABD8  
                                    __ptext140 0196                                      __ptext132 A0F4  
                                    __ptext124 714E                                      __ptext116 978E  
                                    __ptext108 9540                                      __ptext221 98A6  
                                    __ptext213 7FFC                                      __ptext205 96CA  
                                    __ptext141 A12C                                      __ptext133 9340  
                                    __ptext125 79E0                                      __ptext117 6630  
                                    __ptext109 2716                                      __ptext230 3B1C  
                                    __ptext222 84B6                                      __ptext214 5504  
                                    __ptext206 972C                                      __ptext150 578E  
                                    __ptext142 9A12                                      __ptext134 AB16  
                                    __ptext126 8546                                      __ptext118 9126  
                                    __ptext231 8904                                      __ptext223 6B24  
                                    __ptext215 5120                                      __ptext207 A07C  
                                    __ptext151 887E                                      __ptext143 9476  
                                    __ptext135 35CC                                      __ptext127 AB62  
                                    __ptext119 06D8                                      __ptext240 A88C  
                                    __ptext232 9B6E                                      __ptext224 8134  
                                    __ptext216 A1D2                                      __ptext208 8C94  
                                    __ptext160 72FC                                      __ptext152 A164  
                                    __ptext144 7C10                                      __ptext136 4D0C  
                                    __ptext128 5EB8                                      __ptext241 ABE2  
                                    __ptext233 7226                                      __ptext225 6EC2  
                                    __ptext217 A372                                      __ptext209 7EBE  
                                    __ptext161 AB6E                                      __ptext153 A6D8  
                                    __ptext145 8DFE                                      __ptext137 9410  
                                    __ptext129 8E76                                      __ptext250 73CE  
                                    __ptext242 A208                                      __ptext234 6F9C  
                                    __ptext226 6DE6                                      __ptext218 9EBE  
                                    __ptext170 7CC4                                      __ptext162 AA1E  
                                    __ptext154 7E1A                                      __ptext146 809A  
                                    __ptext138 100A                                      __ptext251 0000  
                                    __ptext243 683C                                      __ptext235 9B18  
                                    __ptext227 A508                                      __ptext219 A7C8  
                                    __ptext171 90B6                                      __ptext163 A754  
                                    __ptext155 A7EE                                      __ptext147 422C  
                                    __ptext139 2A56                                      __ptext244 A0B8  
                                    __ptext236 6736                                      __ptext228 7D70  
                                    __ptext180 A930                                      __ptext172 99B8  
                                    __ptext164 ABA2                                      __ptext156 97EC  
                                    __ptext148 5C6A                                      __ptext245 8390  
                                    __ptext237 AB38                                      __ptext229 5B38  
                                    __ptext181 A94A                                      __ptext173 8EEC  
                                    __ptext165 1854                                      __ptext157 926C  
                                    __ptext149 5A06                                      __ptext246 9902  
                                    __ptext238 5D9A                                      __ptext190 9668  
                                    __ptext182 A964                                      __ptext174 ABB6  
                                    __ptext166 6D02                                      __ptext158 9F44  
                                    __ptext247 6318                                      __ptext239 898A  
                                    __ptext191 53BA                                      __ptext183 A97E  
                                    __ptext175 ABBE                                      __ptext167 9D06  
                                    __ptext159 7A9C                                      __ptext248 7566  
                                    __ptext192 9AC2                                      __ptext184 A9DE  
                                    __ptext176 ABAC                                      __ptext168 9A6A  
                                    __ptext249 76E8                                      __ptext193 3880  
                                    __ptext185 A9F4                                      __ptext177 6C16  
                                    __ptext169 9C66                                      __ptext194 ABCC  
                                    __ptext186 A832                                      __ptext178 A8FC  
                                    __ptext195 AA32                                      __ptext187 A850  
                                    __ptext179 A916                                      __ptext196 AA46  
                                    __ptext188 A86E                                      __ptext197 AA5A  
                                    __ptext189 A702                                      __ptext198 AA6E  
                                    __ptext199 AA82                       __end_of_system_output_on 9D54  
                          fat_find_file@sector 0097                                       ?___lldiv 0060  
                                     ?___fttol 0060                          __end_of_adc_calibrate AB6E  
                                     ?___lwdiv 0060                                       ?___lwmod 0060  
                                    _hid_rpt01 FF7B                                    __ui_encoder 0BC6  
                          ?i2_USBStallEndpoint 002E                         ??__sector_from_cluster 0062  
                                    _buck_init AB48                                      _idle_rate 01FF  
                       ??_rtcc_decrement_hours 0068                         ??_rtcc_decrement_month 0068  
                               __get_time@time 006B                               ?i2_USBDeviceInit 002E  
                        _buck_remote_dutycycle 00E1                       __display_efficiency@cntr 00D1  
                              __i2c_write@data 0065                               __get_input_power 8A94  
                              __i2c_write@cntr 0069                            fat_create_file@name 009B  
                          ?_APP_DeviceMSDTasks 002E                      __size_ofi2_ResetSenseData 0086  
                         __display_time@setday 01C3             __flash_write_to_buffer@data_length 0077  
                          fat_create_file@size 009F                                   ??__buck_stop 0060  
                         _USBTransferOnePacket 58D2                   __flash_spi_tx_rx@data_length 0066  
                   ?_ExternalFlash_MediaDetect 0060                         __end_of__buck_pin_init A1D2  
               ??_ExternalFlash_SectorSizeRead 0062                              ??_display_prepare 00D2  
                         __CFG_RTCOSC$T1OSCREF 000000                           __parse_command_short 6D02  
                         __end_of_rtcc_get_day AAAA             __size_of_log_get_number_of_samples 000A  
                                _fat_find_file 693E                              __display_itoa@len 008D  
                            __display_itoa@pos 008F                              __display_itoa@tmp 0083  
                            ?_i2c_eeprom_tasks 002E                      __size_of_log_collect_data 02DE  
                                     ?_ui_init 002E                    __size_of_buck_get_dutycycle 0006  
                            ?_i2c_eeprom_write 006A                   __end_of_USBCtrlTrfOutHandler 995E  
                     __size_of_i2c_eeprom_read 0062                          ??_USBStdGetDscHandler 002E  
               __size_of_i2c_digipot_reset_off 002C            __size_of__flash_copy_page_to_buffer 0078  
                                  _ep_data_out 01E1                               ___lwdiv@quotient 0065  
                                     ?_tmr_isr 002E                __size_of_rtcc_get_hours_decimal 0012  
                __end_of_i2c_digipot_reset_off A484                             ??_i2c_eeprom_tasks 009D  
                                _MSDWriteState 001F                   __size_of_USBCtrlTrfRxService 010C  
              __parse_command_calibration@dat1 0064                __parse_command_calibration@dat2 0065  
              __parse_command_calibration@dat3 0066                  USBConfigureEndpoint@direction 002E  
                                     ?_strncmp 0060                            __display_efficiency 2030  
                               __display_clear 9540                              __display_time@day 01CE  
                         __end_of_rtcc_set_day A998                             ??_i2c_eeprom_write 006F  
                    __size_of__i2c_acknowledge 000A                                  ?__display_usb 002E  
              __parse_command_calibration@item 0063                              __display_time@tad 0180  
                                   ?__get_date 0064                              __display_time@pts 0100  
                         ??i2_USBStallEndpoint 002F                ?_i2c_display_send_init_sequence 002E  
             ??_i2c_display_send_init_sequence 006A                              __display_usb@cntr 00A5  
                               __display_inout 4010                                     ?__get_time 0064  
                                _ui_get_status ABCC                   __size_ofi2_SYSTEM_Initialize 0054  
               __end_of_buck_remote_set_enable A88C                           __display_temperature 4440  
                              ___aldiv@divisor 0064                   __size_of_USBCtrlTrfTxService 00D2  
                                 ??__read_root 0089                           __display_usb@usb_off 0074  
               __size_of_display_get_character 003C                                ___aldiv@counter 0068  
                         ??_APP_DeviceMSDTasks 00B2                  __end_of_display_get_character A0B8  
                                    _extension 02F4                                       _LATAbits 000F89  
                                     _LATBbits 000F8A                                       _LATCbits 000F8B  
                                     _LATDbits 000F8C                                       _LATEbits 000F8D  
                   __end_of_USBCheckHIDRequest 7076                 __root_is_available@file_number 008C  
                            __get_output_power 8A10                     __end_of_rtcc_increment_day A4B0  
         __flash_compare_page_to_buffer@buffer 0075                     ??_USBCtrlEPServiceComplete 002F  
                                   ?__read_fat 0087                       __size_of__number_of_days 007E  
                      __i2c_read@slave_address 006F                                       _IPR2bits 000FA2  
                                     _PIE2bits 000FA0                       ??_system_encoder_disable 0060  
                          __rtcc_decrement_bcd 9FC2                           _rtcc_get_day_decimal AAF2  
                  __size_of_fat_append_to_file 02BE                             ?__get_output_power 006D  
                                  _buck_status 001C                             __end_of__buck_stop A508  
         __flash_compare_page_to_buffer@status 0079                                       _PIR1bits 000F9E  
                                    _task_list 0468                                       _PIR2bits 000FA1  
                     ??_rtcc_decrement_minutes 0068                       ??_rtcc_decrement_seconds 0068  
                 __end_of__rtcc_bdc_to_decimal A754                                 _rtcc_get_hours AA82  
                               _rtcc_get_month AA5A                                       i2u891_40 744A  
                                     i2u891_47 7440                                       i2u964_40 5BB4  
                                     i2u964_47 5BAA                                       i2u893_40 748A  
                                     i2u965_40 5BE4                                       i2u893_47 7480  
                                     i2u965_47 5BDA                                       i2u967_40 5C3C  
                                     _RCONbits 000FD0                                       i2u967_47 5C32  
                    __size_of_rtcc_get_minutes 0014                      __size_of_rtcc_get_seconds 0014  
                             __CFG_WDTPS$32768 000000                   __end_of__buck_operate_remote 6736  
                                     _UEP0bits 000F26              __size_of__ic2_display_set_address 0034  
                  ??_buck_remote_set_dutycycle 0060                                       _MSDTasks 35CC  
                   _USBDeferINDataStagePackets 0020                      ?__ic2_display_set_address 002E  
                      flash_partial_write@data 0085                    __size_of_USBCheckStdRequest 00DA  
              ??_MSDProcessCommandMediaPresent 0099                           ?__display_efficiency 002E  
                   ??_rtcc_get_minutes_decimal 0063                        flash_partial_write@page 007F  
                                    _rtcc_init A812                                       _UCONbits 000F65  
          __end_of_buck_remote_set_synchronous A850                          _temperatureOnboardSum 027A  
                  _buck_remote_set_synchronous A832                           _USBConfigureEndpoint 8390  
                          ??__get_output_power 006F                            _rtcc_decrement_year A606  
                                   ?_buck_init 002E                              __i2c_write@length 0067  
                      __end_of_flash_page_read A702             __flash_write_page_from_buffer@page 0073  
             __size_of_USBStdFeatureReqHandler 029C                                 _USBMSDInHandle 00DB  
                                   _ADCON0bits 000FC2                                     _ADCON1bits 000FC1  
                       __display_time@sethours 01B0                          ?_USBTransferOnePacket 0060  
                       __display_time@setmonth 01A6                              __read_root@offset 008C  
                       __display_time@pressday 0160                    __display_charger@supply_off 014D  
                  __size_of_rtcc_decrement_day 002C                              _outputCapacitySum 027E  
               __size_of_rtcc_get_year_decimal 0012            _ExternalFlash_MediaDetect$intlevel0 ABA8  
                            _SYS_InterruptHigh 0008                       ??_rtcc_get_month_decimal 0063  
                __end_of_rtcc_get_year_decimal AAE0                             __end_of__read_root 926C  
                        ?__parse_command_short 002E                                ?__buck_pin_init 002E  
                         ?__rtcc_decrement_bcd 0064                      i2c_display_cursor@address 006F  
                             __CFG_WPFP$PAGE_1 000000                                 ?_fat_find_file 0087  
                 i2c_eeprom_read@slave_address 0078                                   ??_flash_init 0078  
                                 _RemoteWakeup 0028              __end_of_ExternalFlash_MediaDetect ABAC  
                           __get_dateTime@year 006E                                       i2_memcpy 98A6  
                                     i2_memset A508                               __get_temperature A3A2  
            MSDCheckForErrorCases@DeviceNoData 006F                     ??_rtcc_get_seconds_decimal 0063  
                                  __write_root 9194                             ?_SYS_InterruptHigh 002E  
                       __end_of__display_clear 95A4                         __size_of_rtcc_get_year 0014  
                    __size_of_rtcc_correct_day 0026                        __end_of_USBStallHandler 9F04  
                       __end_of__display_inout 422C                              ?_flash_page_write 007F  
            __end_of_log_get_number_of_samples AB84                                 __i2c_read@data 0065  
              ??__flash_write_page_from_buffer 0076                        __size_of_display_update 008A  
                               ??__display_usb 0060                                 __i2c_read@cntr 0070  
                            ___lmul@multiplier 0060                                    _INTCON2bits 000FF1  
                                  _INTCON3bits 000FF0                                      copy_data0 74B4  
                                    copy_data1 74D4                                      copy_data2 74F4  
                 __size_of__system_timer0_init 0040                                 ?_ui_get_status 002E  
                       ??__system_encoder_init 0060                    ??_USBCtrlEPAllowStatusStage 002E  
                         ?_rtcc_decrement_year 002E                   fat_create_file@cluster_count 00A9  
                  __end_of_USBStdSetCfgHandler 6EC2                          ?__display_temperature 002E  
                           ??_flash_page_write 0083                                   ??__write_fat 008C  
                    __end_of__get_output_power 8A94                    ?_schedule_eeprom_write_task 002E  
                                     _i2c_init AB56                                   _lowPowerTime 02AE  
                          ??_SYS_InterruptHigh 004D                     __size_of_rtcc_write_eeprom 0052  
                               _rtcc_set_hours A964                                 _rtcc_set_month A930  
   __i2c_eeprom_load_default_calibration@index 0062                         __size_of_buck_get_mode 0004  
                                  ??__i2c_read 0068                    __end_of__rtcc_increment_bcd 9FC2  
           system_calculate_output_current@tmp 0070                                    ??__i2c_send 0060  
                                 _MSDReadState 01F9                             __write_calibration 7924  
                                  ??__i2c_stop 0060             buck_remote_set_dutycycle@dutycycle 0060  
                           __write_fat@cluster 0088                             __end_of_device_dsc FFC4  
           adc_calculate_temperature@adc_value 006C                             __get_checksum@cntr 0065  
                       __end_of_rtcc_get_hours AA96                       MSDErrorHandler@ErrorCase 0068  
                       __end_of_rtcc_get_month AA6E                          ?_rtcc_get_day_decimal 002E  
                                     __i2c_get AB8E                              i2c_adc_start@gain 006B  
                      ?_USBCtrlTrfSetupHandler 002E                                _fat_create_file 463C  
                       __size_of_rtcc_set_year 001A                      ??__fill_buffer_get_status 0061  
                                   _ANCON0bits 000F48                     __end_of_buck_remote_set_on A86E  
                                   _ANCON1bits 000F49                        USBStdGetStatusHandler@p 002F  
                                     __Hrparam 0000                            __display_itoa@value 0078  
                        __display_charger@cntr 018E                   __size_of_rtcc_increment_year 002A  
                                    memcpy@tmp 0066                                       __Lrparam 0000  
           __size_of_adc_calculate_temperature 011C                         USBTransferOnePacket@ep 0068  
                       _rtcc_get_hours_decimal AABC                                 _buck_dutycycle 00E4  
                          ?__write_calibration 002E                            rtcc_correct_day@day 0064  
                                     _SetupPkt 000D30                            rtcc_correct_day@max 0065  
                           __end_of_flash_init 9D06                          ??__display_efficiency 0090  
                               _TransferLength 00D9                      __get_empty_cluster@offset 008B  
                   __end_of_USBCheckMSDRequest 72FC                            __display_inout@cntr 00C5  
                                   ?_rtcc_init 002E                          ?_USBConfigureEndpoint 002E  
                         __number_of_days@year 0061                               __size_of___aldiv 011A  
                     _ExternalFlash_SectorRead A164                      display_get_character@line 0063  
                       __size_of_flash_is_busy 0024                              ??_USBDeviceAttach 0060  
                               __i2c_wait_idle 8EEC                                _MSDWriteHandler 2A56  
                             __size_of___awdiv 00BE                           __display_outputs@low 008A  
                             __size_of___lldiv 00BC                                       ___altoft 7F5E  
                             __size_of___fttol 0144                               __size_of___lwdiv 0078  
                             __size_of___lwmod 0062      ExternalFlash_SectorWrite@allowWriteToZero 008C  
                                     ___ftpack 008A           __size_ofi2_ExternalFlash_MediaDetect 0004  
                                  _MSDCBWValid 01F5                      __end_of_SYS_InterruptHigh 0086  
                               _buck_remote_on 00E3                              ?_USBStallEndpoint 0060  
                   i2c_display_write_fixed@pos 0068                i2c_adc_start@configuration_byte 006D  
                                     _adc_init A8AA                                       _adc_read 8546  
                          __display_time@F8701 FDD5                            __display_time@F8681 FE99  
                          __display_time@F8683 FE74                            __display_time@F8675 FE11  
                          __display_time@F8691 FD4E                            __display_time@F8677 FE88  
                          __display_time@F8685 FE5D                            __display_time@F8693 FDE5  
                          __display_time@F8679 FE7E                            __display_time@F8687 FE51  
                          __display_time@F8695 FD3C                            __display_time@F8689 FCDD  
                          __display_time@F8697 FCC9                            __display_time@F8699 FCB5  
                  __size_of__get_empty_cluster 0092                             __end_of__write_fat 9C66  
                         __size_of__i2c_open_1 0018                          ??__rtcc_decrement_bcd 0066  
                           ??_USBStallEndpoint 0061                __flash_copy_page_to_buffer@page 0073  
           __end_of_ExternalFlash_CapacityRead AA32                     _ExternalFlash_CapacityRead AA1E  
                      ??_MSDTransferTerminated 003B                  schedule_eeprom_write_task@idx 0062  
                    __size_of_rtcc_read_eeprom 0052                        __size_of_USBDeviceTasks 0146  
                              ___lwdiv@divisor 0062                ?_system_calculate_input_current 002E  
             ??_system_calculate_input_current 006C                          __end_of__get_dateTime 49E8  
                         ??__write_calibration 0085                          __end_of__get_checksum 9EBE  
                    _buck_remote_set_dutycycle A702                                ?__display_clear 002E  
                     __end_of__flash_spi_tx_rx 7B58                                ___lwdiv@counter 0064  
                     __end_of__flash_spi_tx_tx 7CC4              __buck_operate_local@tmp_dutycycle 007C  
                                     __ptext10 A534                                       __ptext11 A55E  
                                     __ptext20 A684                                       __ptext12 A588  
                                     __ptext21 A6AE                                       __ptext13 A5B2  
                                     __ptext30 6A32                                       __ptext22 A4B0  
                                     __ptext14 A5DC                                       __ptext31 AB56  
                                     __ptext23 9FC2                                       __ptext15 A484  
                                     __ptext40 A9B0                                       __ptext32 A998  
                                     __ptext24 A7A2                                       __ptext16 9F84  
                                     __ptext41 A19C                                       __ptext33 5270  
                                     __ptext25 8B9A                                       __ptext17 A606  
                                     __ptext50 1C5E                                       __ptext42 A8AA  
                                     __ptext34 95A4                                       __ptext26 60EE  
                                     __ptext18 A630                                _inputCurrentSum 0296  
                                     __ptext51 A3A2                                       __ptext43 9F04  
                                     __ptext35 7628                                       __ptext27 AA0A  
                                     __ptext19 A65A                                       __ptext60 3056  
                                     __ptext52 77A8                                       __ptext44 9DE8  
                                     __ptext36 1440                                       __ptext28 A812  
                                     __ptext61 9194                                       __ptext53 4832  
                                     __ptext45 6424                                       __ptext37 9CB8  
                                     __ptext29 9BC2                                       __ptext70 AACE  
                                     __ptext62 9C14                                       __ptext54 9E78  
                                     __ptext46 4E6C                                       __ptext38 86E8  
                                     __ptext71 AAE0                                       __ptext63 8FD6  
                                     __ptext55 463C                                       __ptext47 652A  
                                     __ptext39 AB48                                       __ptext80 A8E2  
                                     __ptext72 AAF2                                       __ptext64 8D0E  
                                     __ptext56 7B58                                       __ptext48 4FC6  
                                     __ptext81 AB04                                       __ptext73 A9C8  
                                     __ptext65 A000                                       __ptext57 693E  
                                     __ptext49 85D4                                       __ptext90 AB84  
                                     __ptext82 A72C                                       __ptext74 8264  
                                     __ptext66 87F8                                       __ptext58 81CE  
                                     __ptext91 AB8E                                       __ptext83 8A10  
                                     __ptext75 9200                                       __ptext67 AAAA  
                                     __ptext59 A3D0                                       __ptext92 AB98  
                                     __ptext84 8A94                                       __ptext76 995E  
                                     __ptext68 AABC                                       __ptext93 865E  
                                     __ptext85 9046                                       __ptext77 8424  
                                     __ptext69 8B18                                       __ptext94 94DC  
                                     __ptext86 A3FE                                       __ptext78 AB7A  
                                     __ptext95 A272                                       __ptext87 7924  
                                     __ptext79 2D78                                       __ptext96 A2A6  
                                     __ptext88 9D54                                       __ptext97 8770  
                                     __ptext89 984A                                       __ptext98 49E8  
                                     __ptext99 0000                               __display_charger 2716  
          __size_of__parse_command_calibration 014A                               __size_of_ui_init 0014  
                                 _SSP1CON1bits 000FC6                                ?__display_inout 002E  
                                 _SSP1CON2bits 000FC5                                       _filename 02EB  
                __buck_start@startup_dutycycle 0074                   __flash_set_page_size@command 0073  
                        ??_rtcc_decrement_year 0068                            __display_time@hours 01CF  
                       __end_of_rtcc_set_hours A97E                                   _SSP2CON1bits 000F72  
                             __size_of_tmr_isr 009E           __end_of_MSDProcessCommandMediaAbsent 9476  
        __size_of_MSDProcessCommandMediaAbsent 0066                   _MSDProcessCommandMediaAbsent 9410  
                                  ??__get_date 0066                          __flash_wakeup@command 0068  
                          __display_time@month 01CD                         __end_of_rtcc_set_month A94A  
             __size_of__buck_initial_dutycycle 00D8                                    ??__get_time 0066  
    buck_remote_change_dutycycle@new_dutycycle 0061                               __size_of_strncmp 0096  
                                 ?__buck_start 0072                            __parse_command_long 6C16  
                          __display_usb@header 0060                     ?_ExternalFlash_SectorWrite 0084  
              ?_system_calculate_input_voltage 002E               ??_system_calculate_input_voltage 006C  
               ExternalFlash_SectorRead@config 008B                 ExternalFlash_SectorRead@buffer 0091  
            i2c_eeprom_read_calibration@buffer 007B                          __end_of__buck_prepare 9194  
           __end_of__flash_copy_page_to_buffer 8D86                     __flash_copy_page_to_buffer 8D0E  
                      __size_of_ResetSenseData 0086               __end_of_APP_DeviceCustomHIDTasks 1C5E  
                 __end_of_i2c_digipot_reset_on A458                              ??_i2c_eeprom_read 0076  
                        __end_of__flash_wakeup 984A                 __end_of_USBCtrlTrfSetupHandler 8546  
                                __size_of_main 0366                              ?_USBCtrlEPService 002E  
                                __size_of_itoa 0048                          __end_of__flash_spi_tx 92D8  
                                     _inq_resp FF57                                  __size_of_utoa 00BE  
                             __display_usb@low 0085                                    ??__read_fat 0089  
                  __end_of_flash_partial_write 9046                                     strncmp@len 0064  
                          __display_usb@usb_on 0095                                ?_rtcc_get_hours 002E  
           __buck_set_sync_async@new_dutycycle 0062                                ?_rtcc_get_month 002E  
                   __display_time@pressminutes 0114                     __display_time@pressseconds 0128  
                           ??_USBCtrlEPService 004B                               __display_outputs 3DB8  
                      ??_system_encoder_enable 0060                __size_of_system_encoder_disable 0006  
                          _USBCtrlTrfInHandler 76E8             _MSDProcessCommandMediaPresent$2712 009B  
             __get_empty_cluster@first_cluster 0087                    __end_of__buck_operate_local 0BC6  
         __parse_command_calibration@parameter 0069                                  _rtcc_get_year AA32  
                        _calibrationParameters 0300                __size_of_rtcc_decrement_minutes 002A  
              __size_of_rtcc_decrement_seconds 002A                         __end_of__i2c_wait_idle 8F62  
                                     _outPipes 0001                     ?__fill_buffer_get_display1 002E  
                   ?__fill_buffer_get_display2 002E                           _USBCtrlTrfOutHandler 9902  
                                     int$flags 005B              __end_of_adc_calculate_temperature 5FD4  
                            ??__number_of_days 0060                      _USBCtrlEPAllowStatusStage 7566  
                 __end_of_system_output_toggle A7A2                           ?__parse_command_long 0063  
                            _system_output_off 9A6A                                   _SSP1STATbits 000FC7  
                                  ??_buck_init 0060                              __get_dateTime@day 0070  
                       ??_USBTransferOnePacket 0064                     i2c_digipot_backlight@level 006A  
                        __size_of_rtcc_get_day 0014                               ?_flash_page_read 0087  
                                 _SSP2STATbits 000F73                                  _buck_get_mode ABDE  
                       __size_of_i2c_adc_start 004A                          __end_of__display_itoa 35CC  
                        __end_of__display_time 06D8                               i2_ResetSenseData 898A  
               ?_APP_DeviceCustomHIDInitialize 002E                                ??_fat_find_file 008B  
                           ?_system_output_off 002E                         ??__parse_command_short 008B  
               __end_of__display_charger@F8740 FE99                 __end_of__display_charger@F8732 FC4F  
               __end_of__display_charger@F8742 FE51                 __end_of__display_charger@F8734 FD3C  
               __end_of__display_charger@F8744 FDA5                 __end_of__display_charger@F8736 FD2A  
               __end_of__display_charger@F8738 FEB0                 __end_of__display_charger@F8746 FC3A  
               __end_of__display_charger@F8748 FCA1          MSDProcessCommandMediaPresent@capacity 00A2  
                display_get_character@position 0060                       __size_of_MSDErrorHandler 0132  
                             system_init@F8581 0400                               system_init@F8573 02D8  
                             system_init@F8575 02E5                               system_init@F8577 03F6  
                             system_init@F8579 02E1                              rtcc_set_year@year 0060  
                    _USBDeferStatusStagePacket 0023                __end_of__fill_buffer_get_status 3B1C  
                                _rtcc_set_year A8FC                   __end_of_rtcc_increment_hours A606  
                 __end_of_rtcc_increment_month A5B2                                    _OSCTUNEbits 000F9B  
                                   _INTCONbits 000FF2                __size_of_rtcc_get_month_decimal 0012  
                        __size_of_rtcc_set_day 001A                              __write_fat@offset 008E  
                         ?_USBCtrlTrfInHandler 002E                                       memcpy@d1 0060  
                                     memcpy@s1 0062                           i2c_eeprom_write@data 006C  
                             _log_collect_data 2D78                           i2c_eeprom_write@cntr 0084  
                USBCtrlTrfTxService@byteToSend 002E                    __size_of_log_generate_entry 03D2  
              i2c_digipot_backlight@data_array 006B                       __number_of_days@bcd_year 0062  
                                     itoa@base 0074                    __end_of__buck_set_dutycycle 8C94  
                              ??_ui_get_status 0060                                       memset@p1 0060  
                          ??_system_output_off 0060                           __rtcc_bdc_to_decimal A72C  
         __end_of_MSDComputeDeviceInAndResidue 73CE          __size_of_MSDComputeDeviceInAndResidue 00D2  
                 _MSDComputeDeviceInAndResidue 72FC                               ?_USBStallHandler 002E  
                     USBStdFeatureReqHandler@p 0049                     ?__get_available_root_entry 002E  
                 __end_of__buck_set_sync_async 8FD6                  __size_of__flash_set_page_size 0088  
                       ??__display_temperature 0090                           __buck_operate_remote 6630  
                                _flash_is_busy A7EE                               __i2c_acknowledge AB98  
                              ?_rtcc_set_hours 002E                        __end_of_fat_create_file 4832  
                              ?_rtcc_set_month 002E                                       intlevel2 0000  
                     __flash_get_status@status 006F                __flash_spi_tx_rx@command_length 0062  
                 adc_calculate_temperature@tmp 0075                     __size_of__get_output_power 0084  
                  __size_of__root_is_available 0096                         __size_of_USBDeviceInit 016E  
                ?_MSDProcessCommandMediaAbsent 002E        __end_of_USER_USB_CALLBACK_EVENT_HANDLER 898A  
     __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086              ??_USER_USB_CALLBACK_EVENT_HANDLER 0043  
             ?_USER_USB_CALLBACK_EVENT_HANDLER 003D                _USER_USB_CALLBACK_EVENT_HANDLER 8904  
                             ___lwmod@dividend 0060                   i2USBTransferOnePacket@handle 0037  
                      i2c_adc_start@resolution 006A              __end_of_ExternalFlash_SectorWrite A164  
                             ___lldiv@dividend 0060          __end_of__flash_write_page_from_buffer 8E76  
       __size_of__flash_write_page_from_buffer 0078                  __flash_write_page_from_buffer 8DFE  
                     __end_of__get_input_power 8B18                         ??_rtcc_get_day_decimal 0063  
       i2SYSTEM_Initialize@pll_startup_counter 002E           SYSTEM_Initialize@pll_startup_counter 0061  
                        __update_modified_time A000                                _display_content 0354  
                  ??_buck_remote_get_dutycycle 0060                     __end_of_flash_partial_read 7EBE  
                      __end_of_MSDWriteHandler 2D78                                      strncmp@s1 0060  
                                    strncmp@s2 0062                                 ?_rtcc_get_year 002E  
                      __size_of_MSDReadHandler 0214                                   _rtcc_get_day AA96  
                   i2USBTransferOnePacket@data 002F                                  ??_system_init 0082  
                             _rtcc_get_minutes AA6E                               _rtcc_get_seconds AA46  
                  __end_of_system_output_is_on A8FC                         ??_USBConfigureEndpoint 002F  
                              ?__i2c_wait_idle 002E                          ?_USBCtrlTrfOutHandler 002E  
                              _display_prepare 8770               __end_of_rtcc_get_minutes_decimal AABC  
                     ??__flash_write_to_buffer 007A                      __end_of_system_output_off 9AC2  
                    __size_of_rtcc_set_minutes 001A                       ?_APP_DeviceMSDInitialize 002E  
                    __size_of_rtcc_set_seconds 001A                      __display_efficiency@F8753 FD04  
                    __display_efficiency@F8755 FCF1                      __display_efficiency@F8757 FDF5  
                          _USBCtrlTrfRxService 6318                                    ??_rtcc_init 007F  
                           _USBWakeFromSuspend A1D2                          ??__parse_command_long 0064  
                         __end_of__display_usb 4B9E                              ?_system_output_on 002E  
                                 ?__ui_encoder 002E                                   _rtcc_set_day A97E  
                           _i2c_display_cursor A272                        _USBStdFeatureReqHandler 3B1C  
                      _temperatureExternal1Sum 0276                        _temperatureExternal2Sum 0272  
                    rtcc_increment_hours@hours 0068                                 ?_buck_get_mode 002E  
                          i2_SYSTEM_Initialize 9B6E                            _USBCtrlTrfTxService 73CE  
                   __size_of_SYS_InterruptHigh 007E          __flash_write_page_from_buffer@command 0079  
                      __rtcc_increment_bcd@max 0065                             ??_system_output_on 0060  
                      __rtcc_increment_bcd@min 0064                                       utoa@base 006B  
                                   _RTCCFGbits 000F3F                                _gblMediaPresent 02B2  
                  __end_of__rtcc_write_disable AA0A                                 ?_rtcc_set_year 002E  
                              _inputVoltageSum 029A                          _i2c_digipot_backlight A23E  
          ExternalFlash_SectorRead@sector_addr 008D                            ?_USBWakeFromSuspend 002E  
                                   _PPSCONbits 000EBF                               ___lldiv@quotient 0068  
                              ___lwmod@divisor 0062                    ??_ExternalFlash_MediaDetect 0062  
                          ?_i2c_display_cursor 006D                          ??_USBCtrlTrfInHandler 002F  
                                     strlen@cp 0064                         _system_encoder_disable ABC6  
 __end_of__i2c_eeprom_load_default_calibration 1854  __size_of__i2c_eeprom_load_default_calibration 0414  
       ??__i2c_eeprom_load_default_calibration 0063          ?__i2c_eeprom_load_default_calibration 0060  
         __i2c_eeprom_load_default_calibration 1440                   __flash_spi_tx_tx@data_length 0066  
                        _USBAlternateInterface 01FC                                ___lwmod@counter 0064  
                    __display_efficiency@panel 00C9               __end_of_rtcc_get_seconds_decimal AB16  
                __size_of__i2c_not_acknowledge 000A                        _buck_remote_synchronous 00E2  
                                  _ptrNextData 01EB                          __end_of_log_start_new 6B24  
                                 ___aldiv@sign 0069                         _rtcc_decrement_minutes A684  
                       _rtcc_decrement_seconds A630                      i2USBTransferOnePacket@dir 002E  
                    i2USBTransferOnePacket@len 0031                          ?__rtcc_bdc_to_decimal 002E  
                          USBEnableEndpoint@ep 0039                                _endpoint_number 0026  
                             _rtcc_correct_day A7A2                                 _display_update 865E  
                        ?__buck_operate_remote 002E                                 ?_flash_is_busy 002E  
                         ?_USBCtrlTrfRxService 002E                          _MSDCheckForErrorCases 5C6A  
                         __get_input_power@pwr 0070                     __end_of__rtcc_write_enable A9F4  
                ?_MSDComputeDeviceInAndResidue 0060               __end_of__ic2_display_set_address A2DA  
          __end_of_i2c_eeprom_read_calibration 53BA                    _i2c_eeprom_read_calibration 5270  
                         ?i2_SYSTEM_Initialize 002E                       ?_USBCtrlEPAllowDataStage 002E  
                               _MSBBufferIndex 02B4                       __flash_spi_tx_rx@command 0060  
                         ?_USBCtrlTrfTxService 002E                                  _i2c_adc_start 9D54  
                    flash_partial_read@address 0083             __end_of__parse_command_calibration 5504  
                   __parse_command_calibration 53BA                                     _USBMSDInit 5D9A  
                                ?_buck_operate 002E                   _USBStatusStageTimeoutCounter 0024  
              ??_ExternalFlash_MediaInitialize 0062                           ??_USBWakeFromSuspend 0045  
                   USBTransferOnePacket@handle 0069                         _rtcc_get_month_decimal AAE0  
                         ??_i2c_display_cursor 006E                      flash_partial_read@command 007F  
                    rtcc_increment_month@month 0068                       ??_fat_get_empty_clusters 0089  
                    __size_of_i2c_eeprom_tasks 0070                                     _USB_CD_Ptr FEB3  
                     __end_of__get_temperature A3D0                       __flash_spi_tx_tx@command 0060  
                    __size_of_i2c_eeprom_write 00AC                                    _power_state 00DF  
                                  _USBInHandle 00D7                       _APP_DeviceCustomHIDTasks 1854  
