

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Oct 07 13:39:02 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=2
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=2,class=CODE,delta=1
   220                           	psect	text197,global,reloc=2,class=CODE,delta=1
   221                           	psect	text198,global,reloc=2,class=CODE,delta=1
   222                           	psect	text199,global,reloc=2,class=CODE,delta=1
   223                           	psect	text200,global,reloc=2,class=CODE,delta=1
   224                           	psect	text201,global,reloc=2,class=CODE,delta=1
   225                           	psect	text202,global,reloc=2,class=CODE,delta=1
   226                           	psect	text203,global,reloc=2,class=CODE,delta=1,group=2
   227                           	psect	text204,global,reloc=2,class=CODE,delta=1
   228                           	psect	text205,global,reloc=2,class=CODE,delta=1,group=2
   229                           	psect	text206,global,reloc=2,class=CODE,delta=1
   230                           	psect	text207,global,reloc=2,class=CODE,delta=1
   231                           	psect	text208,global,reloc=2,class=CODE,delta=1
   232                           	psect	text209,global,reloc=2,class=CODE,delta=1
   233                           	psect	text210,global,reloc=2,class=CODE,delta=1
   234                           	psect	text211,global,reloc=2,class=CODE,delta=1
   235                           	psect	text212,global,reloc=2,class=CODE,delta=1
   236                           	psect	text213,global,reloc=2,class=CODE,delta=1
   237                           	psect	text214,global,reloc=2,class=CODE,delta=1
   238                           	psect	text215,global,reloc=2,class=CODE,delta=1
   239                           	psect	text216,global,reloc=2,class=CODE,delta=1
   240                           	psect	text217,global,reloc=2,class=CODE,delta=1
   241                           	psect	text218,global,reloc=2,class=CODE,delta=1
   242                           	psect	text219,global,reloc=2,class=CODE,delta=1
   243                           	psect	text220,global,reloc=2,class=CODE,delta=1
   244                           	psect	text221,global,reloc=2,class=CODE,delta=1
   245                           	psect	text222,global,reloc=2,class=CODE,delta=1
   246                           	psect	text223,global,reloc=2,class=CODE,delta=1
   247                           	psect	text224,global,reloc=2,class=CODE,delta=1
   248                           	psect	text225,global,reloc=2,class=CODE,delta=1
   249                           	psect	text226,global,reloc=2,class=CODE,delta=1
   250                           	psect	text227,global,reloc=2,class=CODE,delta=1
   251                           	psect	text228,global,reloc=2,class=CODE,delta=1
   252                           	psect	text229,global,reloc=2,class=CODE,delta=1
   253                           	psect	text230,global,reloc=2,class=CODE,delta=1
   254                           	psect	text231,global,reloc=2,class=CODE,delta=1
   255                           	psect	text232,global,reloc=2,class=CODE,delta=1
   256                           	psect	text233,global,reloc=2,class=CODE,delta=1
   257                           	psect	text234,global,reloc=2,class=CODE,delta=1
   258                           	psect	text235,global,reloc=2,class=CODE,delta=1
   259                           	psect	text236,global,reloc=2,class=CODE,delta=1
   260                           	psect	text237,global,reloc=2,class=CODE,delta=1
   261                           	psect	text238,global,reloc=2,class=CODE,delta=1
   262                           	psect	text239,global,reloc=2,class=CODE,delta=1
   263                           	psect	text240,global,reloc=2,class=CODE,delta=1
   264                           	psect	text241,global,reloc=2,class=CODE,delta=1
   265                           	psect	text242,global,reloc=2,class=CODE,delta=1
   266                           	psect	text243,global,reloc=2,class=CODE,delta=1
   267                           	psect	text244,global,reloc=2,class=CODE,delta=1
   268                           	psect	text245,global,reloc=2,class=CODE,delta=1
   269                           	psect	text246,global,reloc=2,class=CODE,delta=1
   270                           	psect	text247,global,reloc=2,class=CODE,delta=1
   271                           	psect	text248,global,reloc=2,class=CODE,delta=1
   272                           	psect	text249,global,reloc=2,class=CODE,delta=1
   273                           	psect	text250,global,reloc=2,class=CODE,delta=1
   274                           	psect	text251,global,reloc=2,class=CODE,delta=1
   275                           	psect	text252,global,reloc=2,class=CODE,delta=1
   276                           	psect	text253,global,reloc=2,class=CODE,delta=1
   277                           	psect	text254,global,reloc=2,class=CODE,delta=1
   278                           	psect	text255,global,reloc=2,class=CODE,delta=1
   279                           	psect	text256,global,reloc=2,class=CODE,delta=1
   280                           	psect	text257,global,reloc=2,class=CODE,delta=1
   281                           	psect	text258,global,reloc=2,class=CODE,delta=1
   282                           	psect	text259,global,reloc=2,class=CODE,delta=1
   283                           	psect	text260,global,reloc=2,class=CODE,delta=1
   284                           	psect	text261,global,reloc=2,class=CODE,delta=1
   285                           	psect	text262,global,reloc=2,class=CODE,delta=1
   286                           	psect	text263,global,reloc=2,class=CODE,delta=1
   287                           	psect	text264,global,reloc=2,class=CODE,delta=1
   288                           	psect	text265,global,reloc=2,class=CODE,delta=1
   289                           	psect	text266,global,reloc=2,class=CODE,delta=1
   290                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   291                           	psect	text268,global,reloc=2,class=CODE,delta=1
   292                           	psect	text269,global,reloc=2,class=CODE,delta=1
   293                           	psect	text270,global,reloc=2,class=CODE,delta=1
   294                           	psect	text271,global,reloc=2,class=CODE,delta=1
   295                           	psect	text272,global,reloc=2,class=CODE,delta=1
   296                           	psect	text273,global,reloc=2,class=CODE,delta=1
   297                           	psect	text274,global,reloc=2,class=CODE,delta=1
   298                           	psect	text275,global,reloc=2,class=CODE,delta=1
   299                           	psect	text276,global,reloc=2,class=CODE,delta=1
   300                           	psect	text277,global,reloc=2,class=CODE,delta=1
   301                           	psect	text278,global,reloc=2,class=CODE,delta=1
   302                           	psect	text279,global,reloc=2,class=CODE,delta=1
   303                           	psect	text280,global,reloc=2,class=CODE,delta=1
   304                           	psect	text281,global,reloc=2,class=CODE,delta=1
   305                           	psect	text282,global,reloc=2,class=CODE,delta=1
   306                           	psect	text283,global,reloc=2,class=CODE,delta=1
   307                           	psect	text284,global,reloc=2,class=CODE,delta=1
   308                           	psect	text285,global,reloc=2,class=CODE,delta=1
   309                           	psect	text286,global,reloc=2,class=CODE,delta=1
   310                           	psect	text287,global,reloc=2,class=CODE,delta=1
   311                           	psect	text288,global,reloc=2,class=CODE,delta=1
   312                           	psect	text289,global,reloc=2,class=CODE,delta=1
   313                           	psect	text290,global,reloc=2,class=CODE,delta=1
   314                           	psect	text291,global,reloc=2,class=CODE,delta=1
   315                           	psect	text292,global,reloc=2,class=CODE,delta=1
   316                           	psect	text293,global,reloc=2,class=CODE,delta=1
   317                           	psect	text294,global,reloc=2,class=CODE,delta=1
   318                           	psect	text295,global,reloc=2,class=CODE,delta=1
   319                           	psect	text296,global,reloc=2,class=CODE,delta=1
   320                           	psect	text297,global,reloc=2,class=CODE,delta=1
   321                           	psect	text298,global,reloc=2,class=CODE,delta=1
   322                           	psect	text299,global,reloc=2,class=CODE,delta=1
   323                           	psect	text300,global,reloc=2,class=CODE,delta=1
   324                           	psect	text301,global,reloc=2,class=CODE,delta=1
   325                           	psect	text302,global,reloc=2,class=CODE,delta=1
   326                           	psect	text303,global,reloc=2,class=CODE,delta=1
   327                           	psect	text304,global,reloc=2,class=CODE,delta=1
   328                           	psect	text305,global,reloc=2,class=CODE,delta=1
   329                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   330                           	psect	text306,global,reloc=2,class=CODE,delta=1
   331                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   332                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   333                           	dabs	1,0x600,512,_msd_buffer
   334                           	dabs	1,0xD00,48,_BDT
   335                           	dabs	1,0xD40,31,_msd_cbw
   336                           	dabs	1,0xD80,13,_msd_csw
   337                           	dabs	1,0xD38,8,_CtrlTrfData
   338                           	dabs	1,0xD30,8,_SetupPkt
   339  0000                     
   340                           ; Version 2.00
   341                           ; Generated 27/05/2018 GMT
   342                           ; 
   343                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   344                           ; All rights reserved.
   345                           ; 
   346                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   347                           ; 
   348                           ; Redistribution and use in source and binary forms, with or without modification, are
   349                           ; permitted provided that the following conditions are met:
   350                           ; 
   351                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   352                           ;        conditions and the following disclaimer.
   353                           ; 
   354                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   355                           ;        of conditions and the following disclaimer in the documentation and/or other
   356                           ;        materials provided with the distribution.
   357                           ; 
   358                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   359                           ;        software without specific prior written permission.
   360                           ; 
   361                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   362                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   363                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   364                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   365                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   366                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   367                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   368                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   369                           ; 
   370                           ; 
   371                           ; Code-generator required, PIC18F47J53 Definitions
   372                           ; 
   373                           ; SFR Addresses
   374  0000                     
   375                           	psect	idataBANK2
   376  01894A                     __pidataBANK2:
   377                           	opt stack 0
   378                           
   379                           ;initializer for _LUN
   380  01894A  7C                 	db	low _ExternalFlash_MediaInitialize
   381  01894B  8C                 	db	high _ExternalFlash_MediaInitialize
   382  01894C  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   383  01894D  80                 	db	low _ExternalFlash_CapacityRead
   384  01894E  8F                 	db	high _ExternalFlash_CapacityRead
   385  01894F  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   386  018950  B0                 	db	low _ExternalFlash_SectorSizeRead
   387  018951  90                 	db	high _ExternalFlash_SectorSizeRead
   388  018952  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   389  018953  DA                 	db	low _ExternalFlash_MediaDetect
   390  018954  90                 	db	high _ExternalFlash_MediaDetect
   391  018955  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   392  018956  D8                 	db	low _ExternalFlash_SectorRead
   393  018957  84                 	db	high _ExternalFlash_SectorRead
   394  018958  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   395  018959  10                 	db	low _ExternalFlash_WriteProtectStateGet
   396  01895A  91                 	db	high _ExternalFlash_WriteProtectStateGet
   397  01895B  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   398  01895C  A4                 	db	low _ExternalFlash_SectorWrite
   399  01895D  84                 	db	high _ExternalFlash_SectorWrite
   400  01895E  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   401  01895F  00                 	db	0
   402  018960  00                 	db	0
   403  018961  00                 	db	0
   404  018962  00                 	db	0
   405  018963  00                 	db	0
   406  018964  00                 	db	0
   407  018965  00                 	db	0
   408  018966  00                 	db	0
   409                           
   410                           ;initializer for system_init@F7205
   411  018967  54                 	db	84
   412  018968  58                 	db	88
   413  018969  54                 	db	84
   414  01896A  00                 	db	0
   415                           
   416                           ;initializer for system_init@F7201
   417  01896B  54                 	db	84
   418  01896C  58                 	db	88
   419  01896D  54                 	db	84
   420  01896E  00                 	db	0
   421                           
   422                           ;initializer for _battery_voltage_maximum
   423  01896F  34BC               	dw	13500
   424                           
   425                           ;initializer for _extension
   426  018971  54                 	db	84
   427  018972  58                 	db	88
   428  018973  54                 	db	84
   429  018974  00                 	db	0
   430                           
   431                           	psect	idataBANK3
   432  018842                     __pidataBANK3:
   433                           	opt stack 0
   434                           
   435                           ;initializer for i2c_display_send_init_sequence@F6931
   436  018842  3A                 	db	58
   437  018843  1E                 	db	30
   438  018844  39                 	db	57
   439  018845  0C                 	db	12
   440  018846  74                 	db	116
   441  018847  5C                 	db	92
   442  018848  6D                 	db	109
   443  018849  0C                 	db	12
   444  01884A  01                 	db	1
   445                           
   446                           ;initializer for system_init@F7203
   447  01884B  4E                 	db	78
   448  01884C  45                 	db	69
   449  01884D  57                 	db	87
   450  01884E  46                 	db	70
   451  01884F  49                 	db	73
   452  018850  4C                 	db	76
   453  018851  45                 	db	69
   454  018852  20                 	db	32
   455  018853  00                 	db	0
   456                           
   457                           ;initializer for system_init@F7199
   458  018854  54                 	db	84
   459  018855  45                 	db	69
   460  018856  53                 	db	83
   461  018857  54                 	db	84
   462  018858  20                 	db	32
   463  018859  20                 	db	32
   464  01885A  20                 	db	32
   465  01885B  20                 	db	32
   466  01885C  00                 	db	0
   467                           
   468                           ;initializer for _tx_buf
   469  01885D  01                 	db	1
   470  01885E  02                 	db	2
   471  01885F  03                 	db	3
   472  018860  04                 	db	4
   473  018861  05                 	db	5
   474  018862  06                 	db	6
   475  018863  07                 	db	7
   476  018864  08                 	db	8
   477                           
   478                           ;initializer for _filename
   479  018865  4C                 	db	76
   480  018866  4F                 	db	79
   481  018867  47                 	db	71
   482  018868  20                 	db	32
   483  018869  20                 	db	32
   484  01886A  20                 	db	32
   485  01886B  20                 	db	32
   486  01886C  20                 	db	32
   487  01886D  00                 	db	0
   488                           
   489                           	psect	idataBANK5
   490  01726A                     __pidataBANK5:
   491                           	opt stack 0
   492                           
   493                           ;initializer for system_init@F7207
   494  01726A  4A                 	db	74
   495  01726B  75                 	db	117
   496  01726C  73                 	db	115
   497  01726D  74                 	db	116
   498  01726E  20                 	db	32
   499  01726F  61                 	db	97
   500  017270  70                 	db	112
   501  017271  70                 	db	112
   502  017272  65                 	db	101
   503  017273  6E                 	db	110
   504  017274  64                 	db	100
   505  017275  65                 	db	101
   506  017276  64                 	db	100
   507  017277  20                 	db	32
   508  017278  74                 	db	116
   509  017279  68                 	db	104
   510  01727A  69                 	db	105
   511  01727B  73                 	db	115
   512  01727C  20                 	db	32
   513  01727D  74                 	db	116
   514  01727E  65                 	db	101
   515  01727F  78                 	db	120
   516  017280  74                 	db	116
   517  017281  21                 	db	33
   518  017282  20                 	db	32
   519  017283  4E                 	db	78
   520  017284  6F                 	db	111
   521  017285  77                 	db	119
   522  017286  20                 	db	32
   523  017287  74                 	db	116
   524  017288  68                 	db	104
   525  017289  69                 	db	105
   526  01728A  73                 	db	115
   527  01728B  20                 	db	32
   528  01728C  69                 	db	105
   529  01728D  73                 	db	115
   530  01728E  20                 	db	32
   531  01728F  73                 	db	115
   532  017290  75                 	db	117
   533  017291  70                 	db	112
   534  017292  65                 	db	101
   535  017293  72                 	db	114
   536  017294  2D                 	db	45
   537  017295  6C                 	db	108
   538  017296  6F                 	db	111
   539  017297  6E                 	db	110
   540  017298  67                 	db	103
   541  017299  2E                 	db	46
   542  01729A  20                 	db	32
   543  01729B  69                 	db	105
   544  01729C  74                 	db	116
   545  01729D  20                 	db	32
   546  01729E  67                 	db	103
   547  01729F  6F                 	db	111
   548  0172A0  65                 	db	101
   549  0172A1  73                 	db	115
   550  0172A2  20                 	db	32
   551  0172A3  6F                 	db	111
   552  0172A4  6E                 	db	110
   553  0172A5  20                 	db	32
   554  0172A6  61                 	db	97
   555  0172A7  6E                 	db	110
   556  0172A8  64                 	db	100
   557  0172A9  20                 	db	32
   558  0172AA  6F                 	db	111
   559  0172AB  6E                 	db	110
   560  0172AC  20                 	db	32
   561  0172AD  61                 	db	97
   562  0172AE  6E                 	db	110
   563  0172AF  64                 	db	100
   564  0172B0  20                 	db	32
   565  0172B1  6F                 	db	111
   566  0172B2  6E                 	db	110
   567  0172B3  20                 	db	32
   568  0172B4  2E                 	db	46
   569  0172B5  2E                 	db	46
   570  0172B6  2E                 	db	46
   571  0172B7  20                 	db	32
   572  0172B8  62                 	db	98
   573  0172B9  75                 	db	117
   574  0172BA  74                 	db	116
   575  0172BB  20                 	db	32
   576  0172BC  66                 	db	102
   577  0172BD  69                 	db	105
   578  0172BE  6E                 	db	110
   579  0172BF  61                 	db	97
   580  0172C0  6C                 	db	108
   581  0172C1  6C                 	db	108
   582  0172C2  79                 	db	121
   583  0172C3  20                 	db	32
   584  0172C4  69                 	db	105
   585  0172C5  74                 	db	116
   586  0172C6  20                 	db	32
   587  0172C7  65                 	db	101
   588  0172C8  6E                 	db	110
   589  0172C9  64                 	db	100
   590  0172CA  73                 	db	115
   591  0172CB  20                 	db	32
   592  0172CC  48                 	db	72
   593  0172CD  45                 	db	69
   594  0172CE  52                 	db	82
   595  0172CF  45                 	db	69
   596  0172D0  2E                 	db	46
   597  0172D1  00                 	db	0
   598                           
   599                           	psect	mediumconst
   600  00C08A                     __pmediumconst:
   601                           	opt stack 0
   602  00C08A  00                 	db	0
   603  00C08B                     __display_charger@F7335:
   604                           	opt stack 0
   605  00C08B  43                 	db	67
   606  00C08C  68                 	db	104
   607  00C08D  61                 	db	97
   608  00C08E  72                 	db	114
   609  00C08F  67                 	db	103
   610  00C090  65                 	db	101
   611  00C091  72                 	db	114
   612  00C092  20                 	db	32
   613  00C093  41                 	db	65
   614  00C094  73                 	db	115
   615  00C095  79                 	db	121
   616  00C096  6E                 	db	110
   617  00C097  63                 	db	99
   618  00C098  68                 	db	104
   619  00C099  72                 	db	114
   620  00C09A  6F                 	db	111
   621  00C09B  6E                 	db	110
   622  00C09C  6F                 	db	111
   623  00C09D  75                 	db	117
   624  00C09E  73                 	db	115
   625  00C09F  00                 	db	0
   626  00C0A0                     __end_of__display_charger@F7335:
   627                           	opt stack 0
   628  00C0A0                     __display_charger@F7321:
   629                           	opt stack 0
   630  00C0A0  4D                 	db	77
   631  00C0A1  50                 	db	80
   632  00C0A2  50                 	db	80
   633  00C0A3  54                 	db	84
   634  00C0A4  20                 	db	32
   635  00C0A5  43                 	db	67
   636  00C0A6  68                 	db	104
   637  00C0A7  61                 	db	97
   638  00C0A8  72                 	db	114
   639  00C0A9  67                 	db	103
   640  00C0AA  65                 	db	101
   641  00C0AB  72                 	db	114
   642  00C0AC  20                 	db	32
   643  00C0AD  44                 	db	68
   644  00C0AE  65                 	db	101
   645  00C0AF  74                 	db	116
   646  00C0B0  61                 	db	97
   647  00C0B1  69                 	db	105
   648  00C0B2  6C                 	db	108
   649  00C0B3  73                 	db	115
   650  00C0B4  00                 	db	0
   651  00C0B5                     __end_of__display_charger@F7321:
   652                           	opt stack 0
   653  00C0B5                     __display_outputs@F7317:
   654                           	opt stack 0
   655  00C0B5  20                 	db	32
   656  00C0B6  20                 	db	32
   657  00C0B7  4F                 	db	79
   658  00C0B8  75                 	db	117
   659  00C0B9  74                 	db	116
   660  00C0BA  33                 	db	51
   661  00C0BB  20                 	db	32
   662  00C0BC  6F                 	db	111
   663  00C0BD  66                 	db	102
   664  00C0BE  66                 	db	102
   665  00C0BF  20                 	db	32
   666  00C0C0  20                 	db	32
   667  00C0C1  4F                 	db	79
   668  00C0C2  75                 	db	117
   669  00C0C3  74                 	db	116
   670  00C0C4  34                 	db	52
   671  00C0C5  20                 	db	32
   672  00C0C6  6F                 	db	111
   673  00C0C7  66                 	db	102
   674  00C0C8  66                 	db	102
   675  00C0C9  00                 	db	0
   676  00C0CA                     __end_of__display_outputs@F7317:
   677                           	opt stack 0
   678  00C0CA                     __display_outputs@F7315:
   679                           	opt stack 0
   680  00C0CA  20                 	db	32
   681  00C0CB  20                 	db	32
   682  00C0CC  4F                 	db	79
   683  00C0CD  75                 	db	117
   684  00C0CE  74                 	db	116
   685  00C0CF  31                 	db	49
   686  00C0D0  20                 	db	32
   687  00C0D1  6F                 	db	111
   688  00C0D2  66                 	db	102
   689  00C0D3  66                 	db	102
   690  00C0D4  20                 	db	32
   691  00C0D5  20                 	db	32
   692  00C0D6  4F                 	db	79
   693  00C0D7  75                 	db	117
   694  00C0D8  74                 	db	116
   695  00C0D9  32                 	db	50
   696  00C0DA  20                 	db	32
   697  00C0DB  6F                 	db	111
   698  00C0DC  66                 	db	102
   699  00C0DD  66                 	db	102
   700  00C0DE  00                 	db	0
   701  00C0DF                     __end_of__display_outputs@F7315:
   702                           	opt stack 0
   703  00C0DF                     __display_temperature@F7362:
   704                           	opt stack 0
   705  00C0DF  54                 	db	84
   706  00C0E0  65                 	db	101
   707  00C0E1  6D                 	db	109
   708  00C0E2  70                 	db	112
   709  00C0E3  65                 	db	101
   710  00C0E4  72                 	db	114
   711  00C0E5  61                 	db	97
   712  00C0E6  74                 	db	116
   713  00C0E7  75                 	db	117
   714  00C0E8  72                 	db	114
   715  00C0E9  65                 	db	101
   716  00C0EA  20                 	db	32
   717  00C0EB  4D                 	db	77
   718  00C0EC  6F                 	db	111
   719  00C0ED  6E                 	db	110
   720  00C0EE  69                 	db	105
   721  00C0EF  74                 	db	116
   722  00C0F0  6F                 	db	111
   723  00C0F1  72                 	db	114
   724  00C0F2  00                 	db	0
   725  00C0F3                     __end_of__display_temperature@F7362:
   726                           	opt stack 0
   727  00C0F3                     __display_charger@F7337:
   728                           	opt stack 0
   729  00C0F3  43                 	db	67
   730  00C0F4  68                 	db	104
   731  00C0F5  61                 	db	97
   732  00C0F6  72                 	db	114
   733  00C0F7  67                 	db	103
   734  00C0F8  65                 	db	101
   735  00C0F9  72                 	db	114
   736  00C0FA  20                 	db	32
   737  00C0FB  53                 	db	83
   738  00C0FC  79                 	db	121
   739  00C0FD  6E                 	db	110
   740  00C0FE  63                 	db	99
   741  00C0FF  68                 	db	104
   742  00C100  72                 	db	114
   743  00C101  6F                 	db	111
   744  00C102  6E                 	db	110
   745  00C103  6F                 	db	111
   746  00C104  75                 	db	117
   747  00C105  73                 	db	115
   748  00C106  00                 	db	0
   749  00C107                     __end_of__display_charger@F7337:
   750                           	opt stack 0
   751  00C107                     __display_usb@F7301:
   752                           	opt stack 0
   753  00C107  55                 	db	85
   754  00C108  53                 	db	83
   755  00C109  42                 	db	66
   756  00C10A  20                 	db	32
   757  00C10B  43                 	db	67
   758  00C10C  68                 	db	104
   759  00C10D  61                 	db	97
   760  00C10E  72                 	db	114
   761  00C10F  67                 	db	103
   762  00C110  65                 	db	101
   763  00C111  72                 	db	114
   764  00C112  20                 	db	32
   765  00C113  4F                 	db	79
   766  00C114  75                 	db	117
   767  00C115  74                 	db	116
   768  00C116  70                 	db	112
   769  00C117  75                 	db	117
   770  00C118  74                 	db	116
   771  00C119  73                 	db	115
   772  00C11A  00                 	db	0
   773  00C11B                     __end_of__display_usb@F7301:
   774                           	opt stack 0
   775  00C11B                     __display_time@F7288:
   776                           	opt stack 0
   777  00C11B  2D                 	db	45
   778  00C11C  3E                 	db	62
   779  00C11D  50                 	db	80
   780  00C11E  72                 	db	114
   781  00C11F  65                 	db	101
   782  00C120  73                 	db	115
   783  00C121  73                 	db	115
   784  00C122  20                 	db	32
   785  00C123  66                 	db	102
   786  00C124  6F                 	db	111
   787  00C125  72                 	db	114
   788  00C126  20                 	db	32
   789  00C127  73                 	db	115
   790  00C128  65                 	db	101
   791  00C129  63                 	db	99
   792  00C12A  6F                 	db	111
   793  00C12B  6E                 	db	110
   794  00C12C  64                 	db	100
   795  00C12D  73                 	db	115
   796  00C12E  00                 	db	0
   797  00C12F                     __end_of__display_time@F7288:
   798                           	opt stack 0
   799  00C12F                     __display_time@F7286:
   800                           	opt stack 0
   801  00C12F  2D                 	db	45
   802  00C130  3E                 	db	62
   803  00C131  50                 	db	80
   804  00C132  72                 	db	114
   805  00C133  65                 	db	101
   806  00C134  73                 	db	115
   807  00C135  73                 	db	115
   808  00C136  20                 	db	32
   809  00C137  66                 	db	102
   810  00C138  6F                 	db	111
   811  00C139  72                 	db	114
   812  00C13A  20                 	db	32
   813  00C13B  6D                 	db	109
   814  00C13C  69                 	db	105
   815  00C13D  6E                 	db	110
   816  00C13E  75                 	db	117
   817  00C13F  74                 	db	116
   818  00C140  65                 	db	101
   819  00C141  73                 	db	115
   820  00C142  00                 	db	0
   821  00C143                     __end_of__display_time@F7286:
   822                           	opt stack 0
   823  00C143                     __display_time@F7278:
   824                           	opt stack 0
   825  00C143  2D                 	db	45
   826  00C144  3E                 	db	62
   827  00C145  50                 	db	80
   828  00C146  72                 	db	114
   829  00C147  65                 	db	101
   830  00C148  73                 	db	115
   831  00C149  73                 	db	115
   832  00C14A  20                 	db	32
   833  00C14B  74                 	db	116
   834  00C14C  6F                 	db	111
   835  00C14D  20                 	db	32
   836  00C14E  73                 	db	115
   837  00C14F  65                 	db	101
   838  00C150  74                 	db	116
   839  00C151  20                 	db	32
   840  00C152  74                 	db	116
   841  00C153  69                 	db	105
   842  00C154  6D                 	db	109
   843  00C155  65                 	db	101
   844  00C156  00                 	db	0
   845  00C157                     __end_of__display_time@F7278:
   846                           	opt stack 0
   847  00C157                     __display_efficiency@F7344:
   848                           	opt stack 0
   849  00C157  50                 	db	80
   850  00C158  61                 	db	97
   851  00C159  6E                 	db	110
   852  00C15A  65                 	db	101
   853  00C15B  6C                 	db	108
   854  00C15C  3A                 	db	58
   855  00C15D  20                 	db	32
   856  00C15E  20                 	db	32
   857  00C15F  20                 	db	32
   858  00C160  20                 	db	32
   859  00C161  42                 	db	66
   860  00C162  61                 	db	97
   861  00C163  74                 	db	116
   862  00C164  74                 	db	116
   863  00C165  65                 	db	101
   864  00C166  72                 	db	114
   865  00C167  79                 	db	121
   866  00C168  3A                 	db	58
   867  00C169  00                 	db	0
   868  00C16A                     __end_of__display_efficiency@F7344:
   869                           	opt stack 0
   870  00C16A                     __display_efficiency@F7342:
   871                           	opt stack 0
   872  00C16A  43                 	db	67
   873  00C16B  68                 	db	104
   874  00C16C  61                 	db	97
   875  00C16D  72                 	db	114
   876  00C16E  67                 	db	103
   877  00C16F  65                 	db	101
   878  00C170  72                 	db	114
   879  00C171  20                 	db	32
   880  00C172  45                 	db	69
   881  00C173  66                 	db	102
   882  00C174  66                 	db	102
   883  00C175  69                 	db	105
   884  00C176  63                 	db	99
   885  00C177  69                 	db	105
   886  00C178  65                 	db	101
   887  00C179  6E                 	db	110
   888  00C17A  63                 	db	99
   889  00C17B  79                 	db	121
   890  00C17C  00                 	db	0
   891  00C17D                     __end_of__display_efficiency@F7342:
   892                           	opt stack 0
   893  00C17D                     __display_charger@F7325:
   894                           	opt stack 0
   895  00C17D  43                 	db	67
   896  00C17E  68                 	db	104
   897  00C17F  61                 	db	97
   898  00C180  72                 	db	114
   899  00C181  67                 	db	103
   900  00C182  65                 	db	101
   901  00C183  72                 	db	114
   902  00C184  20                 	db	32
   903  00C185  73                 	db	115
   904  00C186  75                 	db	117
   905  00C187  70                 	db	112
   906  00C188  70                 	db	112
   907  00C189  6C                 	db	108
   908  00C18A  79                 	db	121
   909  00C18B  20                 	db	32
   910  00C18C  6F                 	db	111
   911  00C18D  66                 	db	102
   912  00C18E  66                 	db	102
   913  00C18F  00                 	db	0
   914  00C190                     __end_of__display_charger@F7325:
   915                           	opt stack 0
   916  00C190                     __display_startup@F7244:
   917                           	opt stack 0
   918  00C190  4D                 	db	77
   919  00C191  50                 	db	80
   920  00C192  50                 	db	80
   921  00C193  54                 	db	84
   922  00C194  20                 	db	32
   923  00C195  53                 	db	83
   924  00C196  6F                 	db	111
   925  00C197  6C                 	db	108
   926  00C198  61                 	db	97
   927  00C199  72                 	db	114
   928  00C19A  20                 	db	32
   929  00C19B  43                 	db	67
   930  00C19C  68                 	db	104
   931  00C19D  61                 	db	97
   932  00C19E  72                 	db	114
   933  00C19F  67                 	db	103
   934  00C1A0  65                 	db	101
   935  00C1A1  72                 	db	114
   936  00C1A2  00                 	db	0
   937  00C1A3                     __end_of__display_startup@F7244:
   938                           	opt stack 0
   939  00C1A3                     __display_charger@F7323:
   940                           	opt stack 0
   941  00C1A3  43                 	db	67
   942  00C1A4  68                 	db	104
   943  00C1A5  61                 	db	97
   944  00C1A6  72                 	db	114
   945  00C1A7  67                 	db	103
   946  00C1A8  65                 	db	101
   947  00C1A9  72                 	db	114
   948  00C1AA  20                 	db	32
   949  00C1AB  73                 	db	115
   950  00C1AC  75                 	db	117
   951  00C1AD  70                 	db	112
   952  00C1AE  70                 	db	112
   953  00C1AF  6C                 	db	108
   954  00C1B0  79                 	db	121
   955  00C1B1  20                 	db	32
   956  00C1B2  6F                 	db	111
   957  00C1B3  6E                 	db	110
   958  00C1B4  00                 	db	0
   959  00C1B5                     __end_of__display_charger@F7323:
   960                           	opt stack 0
   961  00C1B5                     __display_time@F7284:
   962                           	opt stack 0
   963  00C1B5  2D                 	db	45
   964  00C1B6  3E                 	db	62
   965  00C1B7  50                 	db	80
   966  00C1B8  72                 	db	114
   967  00C1B9  65                 	db	101
   968  00C1BA  73                 	db	115
   969  00C1BB  73                 	db	115
   970  00C1BC  20                 	db	32
   971  00C1BD  66                 	db	102
   972  00C1BE  6F                 	db	111
   973  00C1BF  72                 	db	114
   974  00C1C0  20                 	db	32
   975  00C1C1  68                 	db	104
   976  00C1C2  6F                 	db	111
   977  00C1C3  75                 	db	117
   978  00C1C4  72                 	db	114
   979  00C1C5  73                 	db	115
   980  00C1C6  00                 	db	0
   981  00C1C7                     __end_of__display_time@F7284:
   982                           	opt stack 0
   983  00C1C7                     __display_time@F7280:
   984                           	opt stack 0
   985  00C1C7  2D                 	db	45
   986  00C1C8  3E                 	db	62
   987  00C1C9  50                 	db	80
   988  00C1CA  72                 	db	114
   989  00C1CB  65                 	db	101
   990  00C1CC  73                 	db	115
   991  00C1CD  73                 	db	115
   992  00C1CE  20                 	db	32
   993  00C1CF  66                 	db	102
   994  00C1D0  6F                 	db	111
   995  00C1D1  72                 	db	114
   996  00C1D2  20                 	db	32
   997  00C1D3  6D                 	db	109
   998  00C1D4  6F                 	db	111
   999  00C1D5  6E                 	db	110
  1000  00C1D6  74                 	db	116
  1001  00C1D7  68                 	db	104
  1002  00C1D8  00                 	db	0
  1003  00C1D9                     __end_of__display_time@F7280:
  1004                           	opt stack 0
  1005  00C1D9                     __display_inout@F7256:
  1006                           	opt stack 0
  1007  00C1D9  20                 	db	32
  1008  00C1DA  20                 	db	32
  1009  00C1DB  20                 	db	32
  1010  00C1DC  49                 	db	73
  1011  00C1DD  6E                 	db	110
  1012  00C1DE  70                 	db	112
  1013  00C1DF  75                 	db	117
  1014  00C1E0  74                 	db	116
  1015  00C1E1  20                 	db	32
  1016  00C1E2  20                 	db	32
  1017  00C1E3  20                 	db	32
  1018  00C1E4  4F                 	db	79
  1019  00C1E5  75                 	db	117
  1020  00C1E6  74                 	db	116
  1021  00C1E7  70                 	db	112
  1022  00C1E8  75                 	db	117
  1023  00C1E9  74                 	db	116
  1024  00C1EA  00                 	db	0
  1025  00C1EB                     __end_of__display_inout@F7256:
  1026                           	opt stack 0
  1027  00C1EB                     __display_inout@F7254:
  1028                           	opt stack 0
  1029  00C1EB  56                 	db	86
  1030  00C1EC  6F                 	db	111
  1031  00C1ED  6C                 	db	108
  1032  00C1EE  74                 	db	116
  1033  00C1EF  61                 	db	97
  1034  00C1F0  67                 	db	103
  1035  00C1F1  65                 	db	101
  1036  00C1F2  20                 	db	32
  1037  00C1F3  26                 	db	38
  1038  00C1F4  20                 	db	32
  1039  00C1F5  43                 	db	67
  1040  00C1F6  75                 	db	117
  1041  00C1F7  72                 	db	114
  1042  00C1F8  72                 	db	114
  1043  00C1F9  65                 	db	101
  1044  00C1FA  6E                 	db	110
  1045  00C1FB  74                 	db	116
  1046  00C1FC  00                 	db	0
  1047  00C1FD                     __end_of__display_inout@F7254:
  1048                           	opt stack 0
  1049  00C1FD                     __display_usb@F7307:
  1050                           	opt stack 0
  1051  00C1FD  55                 	db	85
  1052  00C1FE  53                 	db	83
  1053  00C1FF  42                 	db	66
  1054  00C200  20                 	db	32
  1055  00C201  63                 	db	99
  1056  00C202  68                 	db	104
  1057  00C203  61                 	db	97
  1058  00C204  72                 	db	114
  1059  00C205  67                 	db	103
  1060  00C206  69                 	db	105
  1061  00C207  6E                 	db	110
  1062  00C208  67                 	db	103
  1063  00C209  20                 	db	32
  1064  00C20A  6F                 	db	111
  1065  00C20B  66                 	db	102
  1066  00C20C  66                 	db	102
  1067  00C20D  00                 	db	0
  1068  00C20E                     __end_of__display_usb@F7307:
  1069                           	opt stack 0
  1070  00C20E                     __display_charger@F7333:
  1071                           	opt stack 0
  1072  00C20E  43                 	db	67
  1073  00C20F  68                 	db	104
  1074  00C210  61                 	db	97
  1075  00C211  72                 	db	114
  1076  00C212  67                 	db	103
  1077  00C213  65                 	db	101
  1078  00C214  72                 	db	114
  1079  00C215  20                 	db	32
  1080  00C216  53                 	db	83
  1081  00C217  74                 	db	116
  1082  00C218  61                 	db	97
  1083  00C219  72                 	db	114
  1084  00C21A  74                 	db	116
  1085  00C21B  75                 	db	117
  1086  00C21C  70                 	db	112
  1087  00C21D  00                 	db	0
  1088  00C21E                     __end_of__display_charger@F7333:
  1089                           	opt stack 0
  1090  00C21E                     __display_outputs@F7313:
  1091                           	opt stack 0
  1092  00C21E  42                 	db	66
  1093  00C21F  61                 	db	97
  1094  00C220  74                 	db	116
  1095  00C221  74                 	db	116
  1096  00C222  65                 	db	101
  1097  00C223  72                 	db	114
  1098  00C224  79                 	db	121
  1099  00C225  20                 	db	32
  1100  00C226  74                 	db	116
  1101  00C227  6F                 	db	111
  1102  00C228  6F                 	db	111
  1103  00C229  20                 	db	32
  1104  00C22A  6C                 	db	108
  1105  00C22B  6F                 	db	111
  1106  00C22C  77                 	db	119
  1107  00C22D  00                 	db	0
  1108  00C22E                     __end_of__display_outputs@F7313:
  1109                           	opt stack 0
  1110  00C22E                     __display_usb@F7305:
  1111                           	opt stack 0
  1112  00C22E  55                 	db	85
  1113  00C22F  53                 	db	83
  1114  00C230  42                 	db	66
  1115  00C231  20                 	db	32
  1116  00C232  63                 	db	99
  1117  00C233  68                 	db	104
  1118  00C234  61                 	db	97
  1119  00C235  72                 	db	114
  1120  00C236  67                 	db	103
  1121  00C237  69                 	db	105
  1122  00C238  6E                 	db	110
  1123  00C239  67                 	db	103
  1124  00C23A  20                 	db	32
  1125  00C23B  6F                 	db	111
  1126  00C23C  6E                 	db	110
  1127  00C23D  00                 	db	0
  1128  00C23E                     __end_of__display_usb@F7305:
  1129                           	opt stack 0
  1130  00C23E                     __display_usb@F7303:
  1131                           	opt stack 0
  1132  00C23E  42                 	db	66
  1133  00C23F  61                 	db	97
  1134  00C240  74                 	db	116
  1135  00C241  74                 	db	116
  1136  00C242  65                 	db	101
  1137  00C243  72                 	db	114
  1138  00C244  79                 	db	121
  1139  00C245  20                 	db	32
  1140  00C246  74                 	db	116
  1141  00C247  6F                 	db	111
  1142  00C248  6F                 	db	111
  1143  00C249  20                 	db	32
  1144  00C24A  6C                 	db	108
  1145  00C24B  6F                 	db	111
  1146  00C24C  77                 	db	119
  1147  00C24D  00                 	db	0
  1148  00C24E                     __end_of__display_usb@F7303:
  1149                           	opt stack 0
  1150  00C24E                     __display_time@F7290:
  1151                           	opt stack 0
  1152  00C24E  2D                 	db	45
  1153  00C24F  3E                 	db	62
  1154  00C250  50                 	db	80
  1155  00C251  72                 	db	114
  1156  00C252  65                 	db	101
  1157  00C253  73                 	db	115
  1158  00C254  73                 	db	115
  1159  00C255  20                 	db	32
  1160  00C256  74                 	db	116
  1161  00C257  6F                 	db	111
  1162  00C258  20                 	db	32
  1163  00C259  73                 	db	115
  1164  00C25A  61                 	db	97
  1165  00C25B  76                 	db	118
  1166  00C25C  65                 	db	101
  1167  00C25D  00                 	db	0
  1168  00C25E                     __end_of__display_time@F7290:
  1169                           	opt stack 0
  1170  00C25E                     __display_time@F7282:
  1171                           	opt stack 0
  1172  00C25E  2D                 	db	45
  1173  00C25F  3E                 	db	62
  1174  00C260  50                 	db	80
  1175  00C261  72                 	db	114
  1176  00C262  65                 	db	101
  1177  00C263  73                 	db	115
  1178  00C264  73                 	db	115
  1179  00C265  20                 	db	32
  1180  00C266  66                 	db	102
  1181  00C267  6F                 	db	111
  1182  00C268  72                 	db	114
  1183  00C269  20                 	db	32
  1184  00C26A  64                 	db	100
  1185  00C26B  61                 	db	97
  1186  00C26C  79                 	db	121
  1187  00C26D  00                 	db	0
  1188  00C26E                     __end_of__display_time@F7282:
  1189                           	opt stack 0
  1190  00C26E                     __display_startup@F7250:
  1191                           	opt stack 0
  1192  00C26E  73                 	db	115
  1193  00C26F  6F                 	db	111
  1194  00C270  6C                 	db	108
  1195  00C271  64                 	db	100
  1196  00C272  65                 	db	101
  1197  00C273  72                 	db	114
  1198  00C274  6E                 	db	110
  1199  00C275  65                 	db	101
  1200  00C276  72                 	db	114
  1201  00C277  64                 	db	100
  1202  00C278  2E                 	db	46
  1203  00C279  63                 	db	99
  1204  00C27A  6F                 	db	111
  1205  00C27B  6D                 	db	109
  1206  00C27C  00                 	db	0
  1207  00C27D                     __end_of__display_startup@F7250:
  1208                           	opt stack 0
  1209  00C27D                     __display_efficiency@F7346:
  1210                           	opt stack 0
  1211  00C27D  45                 	db	69
  1212  00C27E  3A                 	db	58
  1213  00C27F  20                 	db	32
  1214  00C280  20                 	db	32
  1215  00C281  20                 	db	32
  1216  00C282  20                 	db	32
  1217  00C283  20                 	db	32
  1218  00C284  20                 	db	32
  1219  00C285  20                 	db	32
  1220  00C286  20                 	db	32
  1221  00C287  20                 	db	32
  1222  00C288  4C                 	db	76
  1223  00C289  3A                 	db	58
  1224  00C28A  00                 	db	0
  1225  00C28B                     __end_of__display_efficiency@F7346:
  1226                           	opt stack 0
  1227  00C28B                     __display_outputs@F7311:
  1228                           	opt stack 0
  1229  00C28B  50                 	db	80
  1230  00C28C  6F                 	db	111
  1231  00C28D  77                 	db	119
  1232  00C28E  65                 	db	101
  1233  00C28F  72                 	db	114
  1234  00C290  20                 	db	32
  1235  00C291  4F                 	db	79
  1236  00C292  75                 	db	117
  1237  00C293  74                 	db	116
  1238  00C294  70                 	db	112
  1239  00C295  75                 	db	117
  1240  00C296  74                 	db	116
  1241  00C297  73                 	db	115
  1242  00C298  00                 	db	0
  1243  00C299                     __end_of__display_outputs@F7311:
  1244                           	opt stack 0
  1245  00C299                     __display_time@F7264:
  1246                           	opt stack 0
  1247  00C299  54                 	db	84
  1248  00C29A  69                 	db	105
  1249  00C29B  6D                 	db	109
  1250  00C29C  65                 	db	101
  1251  00C29D  20                 	db	32
  1252  00C29E  61                 	db	97
  1253  00C29F  6E                 	db	110
  1254  00C2A0  64                 	db	100
  1255  00C2A1  20                 	db	32
  1256  00C2A2  44                 	db	68
  1257  00C2A3  61                 	db	97
  1258  00C2A4  74                 	db	116
  1259  00C2A5  65                 	db	101
  1260  00C2A6  00                 	db	0
  1261  00C2A7                     __end_of__display_time@F7264:
  1262                           	opt stack 0
  1263  00C2A7                     __display_inout@F7260:
  1264                           	opt stack 0
  1265  00C2A7  41                 	db	65
  1266  00C2A8  3A                 	db	58
  1267  00C2A9  20                 	db	32
  1268  00C2AA  2D                 	db	45
  1269  00C2AB  2D                 	db	45
  1270  00C2AC  20                 	db	32
  1271  00C2AD  20                 	db	32
  1272  00C2AE  20                 	db	32
  1273  00C2AF  20                 	db	32
  1274  00C2B0  20                 	db	32
  1275  00C2B1  20                 	db	32
  1276  00C2B2  2D                 	db	45
  1277  00C2B3  2D                 	db	45
  1278  00C2B4  00                 	db	0
  1279  00C2B5                     __end_of__display_inout@F7260:
  1280                           	opt stack 0
  1281  00C2B5                     __display_temperature@F7368:
  1282                           	opt stack 0
  1283  00C2B5  45                 	db	69
  1284  00C2B6  78                 	db	120
  1285  00C2B7  74                 	db	116
  1286  00C2B8  65                 	db	101
  1287  00C2B9  72                 	db	114
  1288  00C2BA  6E                 	db	110
  1289  00C2BB  61                 	db	97
  1290  00C2BC  6C                 	db	108
  1291  00C2BD  20                 	db	32
  1292  00C2BE  32                 	db	50
  1293  00C2BF  3A                 	db	58
  1294  00C2C0  00                 	db	0
  1295  00C2C1                     __end_of__display_temperature@F7368:
  1296                           	opt stack 0
  1297  00C2C1                     __display_temperature@F7366:
  1298                           	opt stack 0
  1299  00C2C1  45                 	db	69
  1300  00C2C2  78                 	db	120
  1301  00C2C3  74                 	db	116
  1302  00C2C4  65                 	db	101
  1303  00C2C5  72                 	db	114
  1304  00C2C6  6E                 	db	110
  1305  00C2C7  61                 	db	97
  1306  00C2C8  6C                 	db	108
  1307  00C2C9  20                 	db	32
  1308  00C2CA  31                 	db	49
  1309  00C2CB  3A                 	db	58
  1310  00C2CC  00                 	db	0
  1311  00C2CD                     __end_of__display_temperature@F7366:
  1312                           	opt stack 0
  1313  00C2CD                     __display_charger@F7331:
  1314                           	opt stack 0
  1315  00C2CD  43                 	db	67
  1316  00C2CE  68                 	db	104
  1317  00C2CF  61                 	db	97
  1318  00C2D0  72                 	db	114
  1319  00C2D1  67                 	db	103
  1320  00C2D2  65                 	db	101
  1321  00C2D3  72                 	db	114
  1322  00C2D4  20                 	db	32
  1323  00C2D5  6F                 	db	111
  1324  00C2D6  66                 	db	102
  1325  00C2D7  66                 	db	102
  1326  00C2D8  00                 	db	0
  1327  00C2D9                     __end_of__display_charger@F7331:
  1328                           	opt stack 0
  1329  00C2D9                     __display_time@F7276:
  1330                           	opt stack 0
  1331  00C2D9  53                 	db	83
  1332  00C2DA  65                 	db	101
  1333  00C2DB  74                 	db	116
  1334  00C2DC  20                 	db	32
  1335  00C2DD  73                 	db	115
  1336  00C2DE  65                 	db	101
  1337  00C2DF  63                 	db	99
  1338  00C2E0  6F                 	db	111
  1339  00C2E1  6E                 	db	110
  1340  00C2E2  64                 	db	100
  1341  00C2E3  73                 	db	115
  1342  00C2E4  00                 	db	0
  1343  00C2E5                     __end_of__display_time@F7276:
  1344                           	opt stack 0
  1345  00C2E5                     __display_time@F7274:
  1346                           	opt stack 0
  1347  00C2E5  53                 	db	83
  1348  00C2E6  65                 	db	101
  1349  00C2E7  74                 	db	116
  1350  00C2E8  20                 	db	32
  1351  00C2E9  6D                 	db	109
  1352  00C2EA  69                 	db	105
  1353  00C2EB  6E                 	db	110
  1354  00C2EC  75                 	db	117
  1355  00C2ED  74                 	db	116
  1356  00C2EE  65                 	db	101
  1357  00C2EF  73                 	db	115
  1358  00C2F0  00                 	db	0
  1359  00C2F1                     __end_of__display_time@F7274:
  1360                           	opt stack 0
  1361  00C2F1                     __display_temperature@F7364:
  1362                           	opt stack 0
  1363  00C2F1  4F                 	db	79
  1364  00C2F2  6E                 	db	110
  1365  00C2F3  2D                 	db	45
  1366  00C2F4  62                 	db	98
  1367  00C2F5  6F                 	db	111
  1368  00C2F6  61                 	db	97
  1369  00C2F7  72                 	db	114
  1370  00C2F8  64                 	db	100
  1371  00C2F9  3A                 	db	58
  1372  00C2FA  20                 	db	32
  1373  00C2FB  00                 	db	0
  1374  00C2FC                     __end_of__display_temperature@F7364:
  1375                           	opt stack 0
  1376  00C2FC                     __display_time@F7272:
  1377                           	opt stack 0
  1378  00C2FC  53                 	db	83
  1379  00C2FD  65                 	db	101
  1380  00C2FE  74                 	db	116
  1381  00C2FF  20                 	db	32
  1382  00C300  68                 	db	104
  1383  00C301  6F                 	db	111
  1384  00C302  75                 	db	117
  1385  00C303  72                 	db	114
  1386  00C304  73                 	db	115
  1387  00C305  00                 	db	0
  1388  00C306                     __end_of__display_time@F7272:
  1389                           	opt stack 0
  1390  00C306                     __display_time@F7268:
  1391                           	opt stack 0
  1392  00C306  53                 	db	83
  1393  00C307  65                 	db	101
  1394  00C308  74                 	db	116
  1395  00C309  20                 	db	32
  1396  00C30A  6D                 	db	109
  1397  00C30B  6F                 	db	111
  1398  00C30C  6E                 	db	110
  1399  00C30D  74                 	db	116
  1400  00C30E  68                 	db	104
  1401  00C30F  00                 	db	0
  1402  00C310                     __end_of__display_time@F7268:
  1403                           	opt stack 0
  1404  00C310                     __display_time@F7266:
  1405                           	opt stack 0
  1406  00C310  53                 	db	83
  1407  00C311  65                 	db	101
  1408  00C312  74                 	db	116
  1409  00C313  20                 	db	32
  1410  00C314  79                 	db	121
  1411  00C315  65                 	db	101
  1412  00C316  61                 	db	97
  1413  00C317  72                 	db	114
  1414  00C318  00                 	db	0
  1415  00C319                     __end_of__display_time@F7266:
  1416                           	opt stack 0
  1417  00C319                     __display_startup@F7246:
  1418                           	opt stack 0
  1419  00C319  56                 	db	86
  1420  00C31A  65                 	db	101
  1421  00C31B  72                 	db	114
  1422  00C31C  73                 	db	115
  1423  00C31D  69                 	db	105
  1424  00C31E  6F                 	db	111
  1425  00C31F  6E                 	db	110
  1426  00C320  20                 	db	32
  1427  00C321  00                 	db	0
  1428  00C322                     __end_of__display_startup@F7246:
  1429                           	opt stack 0
  1430  00C322                     __display_charger@F7329:
  1431                           	opt stack 0
  1432  00C322  46                 	db	70
  1433  00C323  61                 	db	97
  1434  00C324  6E                 	db	110
  1435  00C325  20                 	db	32
  1436  00C326  6F                 	db	111
  1437  00C327  66                 	db	102
  1438  00C328  66                 	db	102
  1439  00C329  00                 	db	0
  1440  00C32A                     __end_of__display_charger@F7329:
  1441                           	opt stack 0
  1442  00C32A                     __display_time@F7270:
  1443                           	opt stack 0
  1444  00C32A  53                 	db	83
  1445  00C32B  65                 	db	101
  1446  00C32C  74                 	db	116
  1447  00C32D  20                 	db	32
  1448  00C32E  64                 	db	100
  1449  00C32F  61                 	db	97
  1450  00C330  79                 	db	121
  1451  00C331  00                 	db	0
  1452  00C332                     __end_of__display_time@F7270:
  1453                           	opt stack 0
  1454  00C332                     _USB_SD_Ptr:
  1455                           	opt stack 0
  1456  00C332  5E                 	db	low _sd000
  1457  00C333  C4                 	db	high _sd000
  1458  00C334  87                 	db	low _sd001
  1459  00C335  C3                 	db	high _sd001
  1460  00C336  BB                 	db	low _sd002
  1461  00C337  C3                 	db	high _sd002
  1462  00C338  2A                 	db	low _sd003
  1463  00C339  C4                 	db	high _sd003
  1464  00C33A                     __end_of_USB_SD_Ptr:
  1465                           	opt stack 0
  1466  00C33A                     __display_charger@F7327:
  1467                           	opt stack 0
  1468  00C33A  46                 	db	70
  1469  00C33B  61                 	db	97
  1470  00C33C  6E                 	db	110
  1471  00C33D  20                 	db	32
  1472  00C33E  6F                 	db	111
  1473  00C33F  6E                 	db	110
  1474  00C340  00                 	db	0
  1475  00C341                     __end_of__display_charger@F7327:
  1476                           	opt stack 0
  1477  00C341                     __display_inout@F7258:
  1478                           	opt stack 0
  1479  00C341  56                 	db	86
  1480  00C342  3A                 	db	58
  1481  00C343  00                 	db	0
  1482  00C344                     __end_of__display_inout@F7258:
  1483                           	opt stack 0
  1484  00C344                     _USB_CD_Ptr:
  1485                           	opt stack 0
  1486  00C344  47                 	db	low _configDescriptor1
  1487  00C345  C3                 	db	high _configDescriptor1
  1488  00C346                     __end_of_USB_CD_Ptr:
  1489                           	opt stack 0
  1490  00C346                     __display_startup@F7248:
  1491                           	opt stack 0
  1492  00C346  00                 	db	0
  1493  00C347                     __end_of__display_startup@F7248:
  1494                           	opt stack 0
  1495  00C347                     _configDescriptor1:
  1496                           	opt stack 0
  1497  00C347  09                 	db	9
  1498  00C348  02                 	db	2
  1499  00C349  40                 	db	64
  1500  00C34A  00                 	db	0
  1501  00C34B  02                 	db	2
  1502  00C34C  01                 	db	1
  1503  00C34D  00                 	db	0
  1504  00C34E  C0                 	db	192
  1505  00C34F  32                 	db	50
  1506  00C350  09                 	db	9
  1507  00C351  04                 	db	4
  1508  00C352  00                 	db	0
  1509  00C353  00                 	db	0
  1510  00C354  02                 	db	2
  1511  00C355  03                 	db	3
  1512  00C356  00                 	db	0
  1513  00C357  00                 	db	0
  1514  00C358  00                 	db	0
  1515  00C359  09                 	db	9
  1516  00C35A  21                 	db	33
  1517  00C35B  11                 	db	17
  1518  00C35C  01                 	db	1
  1519  00C35D  00                 	db	0
  1520  00C35E  01                 	db	1
  1521  00C35F  22                 	db	34
  1522  00C360  1D                 	db	29
  1523  00C361  00                 	db	0
  1524  00C362  07                 	db	7
  1525  00C363  05                 	db	5
  1526  00C364  81                 	db	129
  1527  00C365  03                 	db	3
  1528  00C366  40                 	db	64
  1529  00C367  00                 	db	0
  1530  00C368  01                 	db	1
  1531  00C369  07                 	db	7
  1532  00C36A  05                 	db	5
  1533  00C36B  01                 	db	1
  1534  00C36C  03                 	db	3
  1535  00C36D  40                 	db	64
  1536  00C36E  00                 	db	0
  1537  00C36F  01                 	db	1
  1538  00C370  09                 	db	9
  1539  00C371  04                 	db	4
  1540  00C372  01                 	db	1
  1541  00C373  00                 	db	0
  1542  00C374  02                 	db	2
  1543  00C375  08                 	db	8
  1544  00C376  06                 	db	6
  1545  00C377  50                 	db	80
  1546  00C378  00                 	db	0
  1547  00C379  07                 	db	7
  1548  00C37A  05                 	db	5
  1549  00C37B  82                 	db	130
  1550  00C37C  02                 	db	2
  1551  00C37D  40                 	db	64
  1552  00C37E  00                 	db	0
  1553  00C37F  01                 	db	1
  1554  00C380  07                 	db	7
  1555  00C381  05                 	db	5
  1556  00C382  02                 	db	2
  1557  00C383  02                 	db	2
  1558  00C384  40                 	db	64
  1559  00C385  00                 	db	0
  1560  00C386  01                 	db	1
  1561  00C387                     __end_of_configDescriptor1:
  1562                           	opt stack 0
  1563  00C387                     _sd001:
  1564                           	opt stack 0
  1565  00C387  34                 	db	52
  1566  00C388  03                 	db	3
  1567  00C389  0053               	dw	83
  1568  00C38B  006F               	dw	111
  1569  00C38D  006C               	dw	108
  1570  00C38F  0064               	dw	100
  1571  00C391  0065               	dw	101
  1572  00C393  0072               	dw	114
  1573  00C395  006E               	dw	110
  1574  00C397  0065               	dw	101
  1575  00C399  0072               	dw	114
  1576  00C39B  0064               	dw	100
  1577  00C39D  002E               	dw	46
  1578  00C39F  0063               	dw	99
  1579  00C3A1  006F               	dw	111
  1580  00C3A3  006D               	dw	109
  1581  00C3A5  0020               	dw	32
  1582  00C3A7  0020               	dw	32
  1583  00C3A9  0020               	dw	32
  1584  00C3AB  0020               	dw	32
  1585  00C3AD  0020               	dw	32
  1586  00C3AF  0020               	dw	32
  1587  00C3B1  0020               	dw	32
  1588  00C3B3  0020               	dw	32
  1589  00C3B5  0020               	dw	32
  1590  00C3B7  0020               	dw	32
  1591  00C3B9  0020               	dw	32
  1592  00C3BB                     __end_of_sd001:
  1593                           	opt stack 0
  1594  00C3BB                     _sd002:
  1595                           	opt stack 0
  1596  00C3BB  2E                 	db	46
  1597  00C3BC  03                 	db	3
  1598  00C3BD  004D               	dw	77
  1599  00C3BF  0050               	dw	80
  1600  00C3C1  0050               	dw	80
  1601  00C3C3  0054               	dw	84
  1602  00C3C5  0053               	dw	83
  1603  00C3C7  006F               	dw	111
  1604  00C3C9  006C               	dw	108
  1605  00C3CB  0061               	dw	97
  1606  00C3CD  0072               	dw	114
  1607  00C3CF  0020               	dw	32
  1608  00C3D1  0043               	dw	67
  1609  00C3D3  0068               	dw	104
  1610  00C3D5  0061               	dw	97
  1611  00C3D7  0072               	dw	114
  1612  00C3D9  0067               	dw	103
  1613  00C3DB  0065               	dw	101
  1614  00C3DD  0072               	dw	114
  1615  00C3DF  0020               	dw	32
  1616  00C3E1  0052               	dw	82
  1617  00C3E3  0065               	dw	101
  1618  00C3E5  0076               	dw	118
  1619  00C3E7  0045               	dw	69
  1620  00C3E9                     __end_of_sd002:
  1621                           	opt stack 0
  1622  00C3E9                     _inq_resp:
  1623                           	opt stack 0
  1624  00C3E9  00                 	db	0
  1625  00C3EA  80                 	db	128
  1626  00C3EB  04                 	db	4
  1627  00C3EC  02                 	db	2
  1628  00C3ED  20                 	db	32
  1629  00C3EE  00                 	db	0
  1630  00C3EF  00                 	db	0
  1631  00C3F0  00                 	db	0
  1632  00C3F1  4D                 	db	77
  1633  00C3F2  69                 	db	105
  1634  00C3F3  63                 	db	99
  1635  00C3F4  72                 	db	114
  1636  00C3F5  6F                 	db	111
  1637  00C3F6  63                 	db	99
  1638  00C3F7  68                 	db	104
  1639  00C3F8  70                 	db	112
  1640  00C3F9  4D                 	db	77
  1641  00C3FA  61                 	db	97
  1642  00C3FB  73                 	db	115
  1643  00C3FC  73                 	db	115
  1644  00C3FD  20                 	db	32
  1645  00C3FE  53                 	db	83
  1646  00C3FF  74                 	db	116
  1647  00C400  6F                 	db	111
  1648  00C401  72                 	db	114
  1649  00C402  61                 	db	97
  1650  00C403  67                 	db	103
  1651  00C404  65                 	db	101
  1652  00C405  20                 	db	32
  1653  00C406  20                 	db	32
  1654  00C407  20                 	db	32
  1655  00C408  20                 	db	32
  1656  00C409  30                 	db	48
  1657  00C40A  30                 	db	48
  1658  00C40B  30                 	db	48
  1659  00C40C  31                 	db	49
  1660  00C40D                     __end_of_inq_resp:
  1661                           	opt stack 0
  1662  00C40D                     _hid_rpt01:
  1663                           	opt stack 0
  1664  00C40D  06                 	db	6
  1665  00C40E  00                 	db	0
  1666  00C40F  FF                 	db	255
  1667  00C410  09                 	db	9
  1668  00C411  01                 	db	1
  1669  00C412  A1                 	db	161
  1670  00C413  01                 	db	1
  1671  00C414  19                 	db	25
  1672  00C415  01                 	db	1
  1673  00C416  29                 	db	41
  1674  00C417  40                 	db	64
  1675  00C418  15                 	db	21
  1676  00C419  00                 	db	0
  1677  00C41A  26                 	db	38
  1678  00C41B  FF                 	db	255
  1679  00C41C  00                 	db	0
  1680  00C41D  75                 	db	117
  1681  00C41E  08                 	db	8
  1682  00C41F  95                 	db	149
  1683  00C420  40                 	db	64
  1684  00C421  81                 	db	129
  1685  00C422  00                 	db	0
  1686  00C423  19                 	db	25
  1687  00C424  01                 	db	1
  1688  00C425  29                 	db	41
  1689  00C426  40                 	db	64
  1690  00C427  91                 	db	145
  1691  00C428  00                 	db	0
  1692  00C429  C0                 	db	192
  1693  00C42A                     __end_of_hid_rpt01:
  1694                           	opt stack 0
  1695  00C42A                     _sd003:
  1696                           	opt stack 0
  1697  00C42A  1A                 	db	26
  1698  00C42B  03                 	db	3
  1699  00C42C  0031               	dw	49
  1700  00C42E  0032               	dw	50
  1701  00C430  0033               	dw	51
  1702  00C432  0034               	dw	52
  1703  00C434  0035               	dw	53
  1704  00C436  0036               	dw	54
  1705  00C438  0037               	dw	55
  1706  00C43A  0038               	dw	56
  1707  00C43C  0039               	dw	57
  1708  00C43E  0030               	dw	48
  1709  00C440  0039               	dw	57
  1710  00C442  0039               	dw	57
  1711  00C444                     __end_of_sd003:
  1712                           	opt stack 0
  1713  00C444                     _device_dsc:
  1714                           	opt stack 0
  1715  00C444  12                 	db	18
  1716  00C445  01                 	db	1
  1717  00C446  0200               	dw	512
  1718  00C448  00                 	db	0
  1719  00C449  00                 	db	0
  1720  00C44A  00                 	db	0
  1721  00C44B  08                 	db	8
  1722  00C44C  04D8               	dw	1240
  1723  00C44E  F08E               	dw	61582
  1724  00C450  0100               	dw	256
  1725  00C452  01                 	db	1
  1726  00C453  02                 	db	2
  1727  00C454  00                 	db	0
  1728  00C455  01                 	db	1
  1729  00C456                     __end_of_device_dsc:
  1730                           	opt stack 0
  1731  00C456                     _flash_command_pagesize_528:
  1732                           	opt stack 0
  1733  00C456  3D                 	db	61
  1734  00C457  2A                 	db	42
  1735  00C458  80                 	db	128
  1736  00C459  A7                 	db	167
  1737  00C45A                     __end_of_flash_command_pagesize_528:
  1738                           	opt stack 0
  1739  00C45A                     _flash_command_pagesize_512:
  1740                           	opt stack 0
  1741  00C45A  3D                 	db	61
  1742  00C45B  2A                 	db	42
  1743  00C45C  80                 	db	128
  1744  00C45D  A6                 	db	166
  1745  00C45E                     __end_of_flash_command_pagesize_512:
  1746                           	opt stack 0
  1747  00C45E                     _sd000:
  1748                           	opt stack 0
  1749  00C45E  04                 	db	4
  1750  00C45F  03                 	db	3
  1751  00C460  0409               	dw	1033
  1752  00C462                     __end_of_sd000:
  1753                           	opt stack 0
  1754  0000                     _RPINR23	set	3838
  1755  0000                     _RPOR23	set	3799
  1756  0000                     _RPINR22	set	3837
  1757  0000                     _RPOR22	set	3798
  1758  0000                     _RPOR21	set	3797
  1759  0000                     _RPINR21	set	3836
  1760  0000                     _RPOR5	set	3781
  1761  0000                     _RPOR6	set	3782
  1762  0000                     _RPINR2	set	3810
  1763  0000                     _RPINR3	set	3811
  1764  0000                     _RPINR1	set	3809
  1765  0000                     _PPSCONbits	set	3775
  1766  0000                     _ODCON3bits	set	3904
  1767  0000                     _CCPTMRS0bits	set	3922
  1768  0000                     _RTCVALH	set	3899
  1769  0000                     _RTCVALL	set	3898
  1770  0000                     _RTCCAL	set	3902
  1771  0000                     _RTCCFGbits	set	3903
  1772  0000                     _ANCON1bits	set	3913
  1773  0000                     _ANCON0bits	set	3912
  1774  0000                     _UEP0bits	set	3878
  1775  0000                     _UIEbits	set	3894
  1776  0000                     _UADDR	set	3896
  1777  0000                     _UIE	set	3894
  1778  0000                     _UEIE	set	3895
  1779  0000                     _UCFG	set	3897
  1780  0000                     _UEP1	set	3879
  1781  0000                     _UEP0	set	3878
  1782  0000                     _RXADDRL	set	3945
  1783  0000                     _RXADDRH	set	3944
  1784  0000                     _TXADDRL	set	3947
  1785  0000                     _TXADDRH	set	3946
  1786  0000                     _DMABCL	set	3943
  1787  0000                     _DMABCH	set	3942
  1788  0000                     _DMACON2bits	set	3974
  1789  0000                     _PIR3bits	set	4004
  1790  0000                     _DMACON1bits	set	3976
  1791  0000                     _PORTDbits	set	3971
  1792  0000                     _SSP2CON1bits	set	3954
  1793  0000                     _SSP2STATbits	set	3955
  1794  0000                     _ADRESL	set	4035
  1795  0000                     _ADRESH	set	4036
  1796  0000                     _ADCON1bits	set	4033
  1797  0000                     _ADCON0bits	set	4034
  1798  0000                     _CCP1CON	set	4026
  1799  0000                     _TMR2	set	4044
  1800  0000                     _PR2	set	4043
  1801  0000                     _CCPR1L	set	4027
  1802  0000                     _CCP1CONbits	set	4026
  1803  0000                     _T2CONbits	set	4042
  1804  0000                     _SSP1CON1	set	4038
  1805  0000                     _SSP1BUF	set	4041
  1806  0000                     _SSP1CON2bits	set	4037
  1807  0000                     _SSP1CON1bits	set	4038
  1808  0000                     _SSP1ADD	set	4040
  1809  0000                     _SSP1STATbits	set	4039
  1810  0000                     _T1CONbits	set	4045
  1811  0000                     _TMR1L	set	4046
  1812  0000                     _TMR1H	set	4047
  1813  0000                     _PIR1bits	set	3998
  1814  0000                     _LATAbits	set	3977
  1815  0000                     _TRISEbits	set	3990
  1816  0000                     _LATEbits	set	3981
  1817  0000                     _LATCbits	set	3979
  1818  0000                     _TRISAbits	set	3986
  1819  0000                     _TRISBbits	set	3987
  1820  0000                     _LATBbits	set	3978
  1821  0000                     _TRISDbits	set	3989
  1822  0000                     _TRISCbits	set	3988
  1823  0000                     _T0CONbits	set	4053
  1824  0000                     _INTCON2bits	set	4081
  1825  0000                     _EECON2	set	4007
  1826  0000                     _PORTBbits	set	3969
  1827  0000                     _INTCON3bits	set	4080
  1828  0000                     _TMR0L	set	4054
  1829  0000                     _TMR0H	set	4055
  1830  0000                     _OSCCON	set	4051
  1831  0000                     _OSCTUNEbits	set	3995
  1832  0000                     _LATDbits	set	3980
  1833  0000                     _INTCONbits	set	4082
  1834  0000                     _IPR2bits	set	4002
  1835  0000                     _RCONbits	set	4048
  1836  0000                     _UCON	set	3941
  1837  0000                     _USTAT	set	3940
  1838  0000                     _PIR2bits	set	4001
  1839  0000                     _UIRbits	set	3938
  1840  0000                     _UCONbits	set	3941
  1841  0000                     _UIR	set	3938
  1842  0000                     _UEIR	set	3939
  1843  0000                     _PIE2bits	set	4000
  1844  00C462                     STR_12:
  1845                           
  1846                           ; BSR set to: 2
  1847  00C462  68                 	db	104	;'h'
  1848  00C463  65                 	db	101	;'e'
  1849  00C464  6C                 	db	108	;'l'
  1850  00C465  6C                 	db	108	;'l'
  1851  00C466  6F                 	db	111	;'o'
  1852  00C467  20                 	db	32
  1853  00C468  77                 	db	119	;'w'
  1854  00C469  6F                 	db	111	;'o'
  1855  00C46A  72                 	db	114	;'r'
  1856  00C46B  6C                 	db	108	;'l'
  1857  00C46C  64                 	db	100	;'d'
  1858  00C46D  21                 	db	33
  1859  00C46E  00                 	db	0
  1860  00C46F                     STR_9:
  1861                           
  1862                           ; BSR set to: 2
  1863  00C46F  53                 	db	83	;'S'
  1864  00C470  6F                 	db	111	;'o'
  1865  00C471  6C                 	db	108	;'l'
  1866  00C472  61                 	db	97	;'a'
  1867  00C473  72                 	db	114	;'r'
  1868  00C474  43                 	db	67	;'C'
  1869  00C475  68                 	db	104	;'h'
  1870  00C476  61                 	db	97	;'a'
  1871  00C477  72                 	db	114	;'r'
  1872  00C478  67                 	db	103	;'g'
  1873  00C479  72                 	db	114	;'r'
  1874  00C47A  00                 	db	0
  1875  00C47B                     STR_10:
  1876                           
  1877                           ; BSR set to: 2
  1878  00C47B  46                 	db	70	;'F'
  1879  00C47C  49                 	db	73	;'I'
  1880  00C47D  4C                 	db	76	;'L'
  1881  00C47E  45                 	db	69	;'E'
  1882  00C47F  20                 	db	32
  1883  00C480  20                 	db	32
  1884  00C481  20                 	db	32
  1885  00C482  20                 	db	32
  1886  00C483  00                 	db	0
  1887  00C484                     STR_1:
  1888                           
  1889                           ; BSR set to: 2
  1890  00C484  4D                 	db	77	;'M'
  1891  00C485  53                 	db	83	;'S'
  1892  00C486  44                 	db	68	;'D'
  1893  00C487  4F                 	db	79	;'O'
  1894  00C488  53                 	db	83	;'S'
  1895  00C489  35                 	db	53	;'5'
  1896  00C48A  2E                 	db	46
  1897  00C48B  30                 	db	48	;'0'
  1898  00C48C  00                 	db	0
  1899  00C48D                     STR_11:
  1900                           
  1901                           ; BSR set to: 2
  1902  00C48D  54                 	db	84	;'T'
  1903  00C48E  58                 	db	88	;'X'
  1904  00C48F  54                 	db	84	;'T'
  1905  00C490  00                 	db	0
  1906  0000                     
  1907                           ; #config settings
  1908  00C491  00                 	db	0	; dummy byte at the end
  1909  0000                     
  1910                           	psect	cinit
  1911  0155B0                     __pcinit:
  1912                           	opt stack 0
  1913  0155B0                     start_initialization:
  1914                           	opt stack 0
  1915  0155B0                     __initialization:
  1916                           	opt stack 0
  1917                           
  1918                           ; Initialize objects allocated to BANK5 (104 bytes)
  1919                           ; load TBLPTR registers with __pidataBANK5
  1920  0155B0  0E6A               	movlw	low __pidataBANK5
  1921  0155B2  6EF6               	movwf	tblptrl,c
  1922  0155B4  0E72               	movlw	high __pidataBANK5
  1923  0155B6  6EF7               	movwf	tblptrh,c
  1924  0155B8  0E01               	movlw	low (__pidataBANK5 shr (0+16))
  1925  0155BA  6EF8               	movwf	tblptru,c
  1926  0155BC  EE05  F000         	lfsr	0,__pdataBANK5
  1927  0155C0  EE10 F068          	lfsr	1,104
  1928  0155C4                     copy_data0:
  1929  0155C4  0009               	tblrd		*+
  1930  0155C6  CFF5 FFEE          	movff	tablat,postinc0
  1931  0155CA  50E5               	movf	postdec1,w,c
  1932  0155CC  50E1               	movf	fsr1l,w,c
  1933  0155CE  E1FA               	bnz	copy_data0
  1934                           
  1935                           ; Initialize objects allocated to BANK3 (44 bytes)
  1936                           ; load TBLPTR registers with __pidataBANK3
  1937  0155D0  0E42               	movlw	low __pidataBANK3
  1938  0155D2  6EF6               	movwf	tblptrl,c
  1939  0155D4  0E88               	movlw	high __pidataBANK3
  1940  0155D6  6EF7               	movwf	tblptrh,c
  1941  0155D8  0E01               	movlw	low (__pidataBANK3 shr (0+16))
  1942  0155DA  6EF8               	movwf	tblptru,c
  1943  0155DC  EE03  F0BC         	lfsr	0,__pdataBANK3
  1944  0155E0  EE10 F02C          	lfsr	1,44
  1945  0155E4                     copy_data1:
  1946  0155E4  0009               	tblrd		*+
  1947  0155E6  CFF5 FFEE          	movff	tablat,postinc0
  1948  0155EA  50E5               	movf	postdec1,w,c
  1949  0155EC  50E1               	movf	fsr1l,w,c
  1950  0155EE  E1FA               	bnz	copy_data1
  1951                           
  1952                           ; Initialize objects allocated to BANK2 (43 bytes)
  1953                           ; load TBLPTR registers with __pidataBANK2
  1954  0155F0  0E4A               	movlw	low __pidataBANK2
  1955  0155F2  6EF6               	movwf	tblptrl,c
  1956  0155F4  0E89               	movlw	high __pidataBANK2
  1957  0155F6  6EF7               	movwf	tblptrh,c
  1958  0155F8  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1959  0155FA  6EF8               	movwf	tblptru,c
  1960  0155FC  EE02  F0D4         	lfsr	0,__pdataBANK2
  1961  015600  EE10 F02B          	lfsr	1,43
  1962  015604                     copy_data2:
  1963  015604  0009               	tblrd		*+
  1964  015606  CFF5 FFEE          	movff	tablat,postinc0
  1965  01560A  50E5               	movf	postdec1,w,c
  1966  01560C  50E1               	movf	fsr1l,w,c
  1967  01560E  E1FA               	bnz	copy_data2
  1968                           
  1969                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1970  015610  EE08  F000         	lfsr	0,__pbssBIGRAMll
  1971  015614  EE12 F000          	lfsr	1,512
  1972  015618                     clear_0:
  1973  015618  6AEE               	clrf	postinc0,c
  1974  01561A  50E5               	movf	postdec1,w,c
  1975  01561C  50E1               	movf	fsr1l,w,c
  1976  01561E  E1FC               	bnz	clear_0
  1977  015620  50E2               	movf	fsr1h,w,c
  1978  015622  E1FA               	bnz	clear_0
  1979                           
  1980                           ; Clear objects allocated to BANK4 (256 bytes)
  1981  015624  EE04  F000         	lfsr	0,__pbssBANK4
  1982  015628  EE11 F000          	lfsr	1,256
  1983  01562C                     clear_1:
  1984  01562C  6AEE               	clrf	postinc0,c
  1985  01562E  50E5               	movf	postdec1,w,c
  1986  015630  50E1               	movf	fsr1l,w,c
  1987  015632  E1FC               	bnz	clear_1
  1988  015634  50E2               	movf	fsr1h,w,c
  1989  015636  E1FA               	bnz	clear_1
  1990                           
  1991                           ; Clear objects allocated to BANK3 (188 bytes)
  1992  015638  EE03  F000         	lfsr	0,__pbssBANK3
  1993  01563C  0EBC               	movlw	188
  1994  01563E                     clear_2:
  1995  01563E  6AEE               	clrf	postinc0,c
  1996  015640  06E8               	decf	wreg,f,c
  1997  015642  E1FD               	bnz	clear_2
  1998                           
  1999                           ; Clear objects allocated to BANK2 (212 bytes)
  2000  015644  EE02  F000         	lfsr	0,__pbssBANK2
  2001  015648  0ED4               	movlw	212
  2002  01564A                     clear_3:
  2003  01564A  6AEE               	clrf	postinc0,c
  2004  01564C  06E8               	decf	wreg,f,c
  2005  01564E  E1FD               	bnz	clear_3
  2006                           
  2007                           ; Clear objects allocated to BANK1 (43 bytes)
  2008  015650  EE01  F0D5         	lfsr	0,__pbssBANK1
  2009  015654  0E2B               	movlw	43
  2010  015656                     clear_4:
  2011  015656  6AEE               	clrf	postinc0,c
  2012  015658  06E8               	decf	wreg,f,c
  2013  01565A  E1FD               	bnz	clear_4
  2014                           
  2015                           ; Clear objects allocated to BANK0 (1 bytes)
  2016  01565C  0100               	movlb	0
  2017  01565E  6BFF               	clrf	__pbssBANK0& (0+255),b
  2018                           
  2019                           ; Clear objects allocated to COMRAM (45 bytes)
  2020  015660  EE00  F001         	lfsr	0,__pbssCOMRAM
  2021  015664  0E2D               	movlw	45
  2022  015666                     clear_5:
  2023  015666  6AEE               	clrf	postinc0,c
  2024  015668  06E8               	decf	wreg,f,c
  2025  01566A  E1FD               	bnz	clear_5
  2026  01566C                     end_of_initialization:
  2027                           	opt stack 0
  2028  01566C                     __end_of__initialization:
  2029                           	opt stack 0
  2030  01566C  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2031  01566E  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2032  015670  0100               	movlb	0
  2033  015672  EFF1  F072         	goto	_main	;jump to C main() function
  2034                           tblptru	equ	0xFF8
  2035                           tblptrh	equ	0xFF7
  2036                           tblptrl	equ	0xFF6
  2037                           tablat	equ	0xFF5
  2038                           postinc0	equ	0xFEE
  2039                           wreg	equ	0xFE8
  2040                           postdec1	equ	0xFE5
  2041                           fsr1h	equ	0xFE2
  2042                           fsr1l	equ	0xFE1
  2043                           
  2044                           	psect	bssCOMRAM
  2045  000001                     __pbssCOMRAM:
  2046                           	opt stack 0
  2047  000001                     _inPipes:
  2048                           	opt stack 0
  2049  000001                     	ds	6
  2050  000007                     _pBDTEntryIn:
  2051                           	opt stack 0
  2052  000007                     	ds	6
  2053  00000D                     _averageCount:
  2054                           	opt stack 0
  2055  00000D                     	ds	2
  2056  00000F                     _TransferLength:
  2057                           	opt stack 0
  2058  00000F                     	ds	2
  2059  000011                     _USBMSDInHandle:
  2060                           	opt stack 0
  2061  000011                     	ds	2
  2062  000013                     _USBMSDOutHandle:
  2063                           	opt stack 0
  2064  000013                     	ds	2
  2065  000015                     _pBDTEntryEP0OutNext:
  2066                           	opt stack 0
  2067  000015                     	ds	2
  2068  000017                     _pBDTEntryEP0OutCurrent:
  2069                           	opt stack 0
  2070  000017                     	ds	2
  2071  000019                     _power_state:
  2072                           	opt stack 0
  2073  000019                     	ds	1
  2074  00001A                     _idx:
  2075                           	opt stack 0
  2076  00001A                     	ds	1
  2077  00001B                     _buck_remote_dutycycle:
  2078                           	opt stack 0
  2079  00001B                     	ds	1
  2080  00001C                     _buck_remote_synchronous:
  2081                           	opt stack 0
  2082  00001C                     	ds	1
  2083  00001D                     _buck_remote_on:
  2084                           	opt stack 0
  2085  00001D                     	ds	1
  2086  00001E                     _buck_status:
  2087                           	opt stack 0
  2088  00001E                     	ds	1
  2089  00001F                     _task_list_write_index:
  2090                           	opt stack 0
  2091  00001F                     	ds	1
  2092  000020                     _task_list_read_index:
  2093                           	opt stack 0
  2094  000020                     	ds	1
  2095  000021                     _MSDHostNoData:
  2096                           	opt stack 0
  2097  000021                     	ds	1
  2098  000022                     _MSDWriteState:
  2099                           	opt stack 0
  2100  000022                     	ds	1
  2101  000023                     _MSDCommandState:
  2102                           	opt stack 0
  2103  000023                     	ds	1
  2104  000024                     _MSD_State:
  2105                           	opt stack 0
  2106  000024                     	ds	1
  2107  000025                     _USBDeferStatusStagePacket:
  2108                           	opt stack 0
  2109  000025                     	ds	1
  2110  000026                     _USBStatusStageTimeoutCounter:
  2111                           	opt stack 0
  2112  000026                     	ds	1
  2113  000027                     _endpoint_number:
  2114                           	opt stack 0
  2115  000027                     	ds	1
  2116  000028                     _RemoteWakeup:
  2117                           	opt stack 0
  2118  000028                     	ds	1
  2119  000029                     _controlTransferState:
  2120                           	opt stack 0
  2121  000029                     	ds	1
  2122  00002A                     _shortPacketStatus:
  2123                           	opt stack 0
  2124  00002A                     	ds	1
  2125  00002B                     _USBDeviceState:
  2126                           	opt stack 0
  2127  00002B                     	ds	1
  2128  00002C                     _USTATcopy:
  2129                           	opt stack 0
  2130  00002C                     	ds	1
  2131  00002D                     _USBActiveConfiguration:
  2132                           	opt stack 0
  2133  00002D                     	ds	1
  2134                           tblptru	equ	0xFF8
  2135                           tblptrh	equ	0xFF7
  2136                           tblptrl	equ	0xFF6
  2137                           tablat	equ	0xFF5
  2138                           postinc0	equ	0xFEE
  2139                           wreg	equ	0xFE8
  2140                           postdec1	equ	0xFE5
  2141                           fsr1h	equ	0xFE2
  2142                           fsr1l	equ	0xFE1
  2143                           
  2144                           	psect	bssBANK0
  2145  0000FF                     __pbssBANK0:
  2146                           	opt stack 0
  2147  0000FF                     _buck_dutycycle:
  2148                           	opt stack 0
  2149  0000FF                     	ds	1
  2150                           tblptru	equ	0xFF8
  2151                           tblptrh	equ	0xFF7
  2152                           tblptrl	equ	0xFF6
  2153                           tablat	equ	0xFF5
  2154                           postinc0	equ	0xFEE
  2155                           wreg	equ	0xFE8
  2156                           postdec1	equ	0xFE5
  2157                           fsr1h	equ	0xFE2
  2158                           fsr1l	equ	0xFE1
  2159                           
  2160                           	psect	bssBANK1
  2161  0001D5                     __pbssBANK1:
  2162                           	opt stack 0
  2163  0001D5                     _outPipes:
  2164                           	opt stack 0
  2165  0001D5                     	ds	9
  2166  0001DE                     _pBDTEntryOut:
  2167                           	opt stack 0
  2168  0001DE                     	ds	6
  2169  0001E4                     _LBA:
  2170                           	opt stack 0
  2171  0001E4                     	ds	4
  2172  0001E8                     _ep_data_out:
  2173                           	opt stack 0
  2174  0001E8                     	ds	3
  2175  0001EB                     _ep_data_in:
  2176                           	opt stack 0
  2177  0001EB                     	ds	3
  2178  0001EE                     _lastSecond:
  2179                           	opt stack 0
  2180  0001EE                     	ds	1
  2181  0001EF                     _status:
  2182                           	opt stack 0
  2183  0001EF                     	ds	1
  2184  0001F0                     _buck_remote_enable:
  2185                           	opt stack 0
  2186  0001F0                     	ds	1
  2187  0001F1                     _startup_timer:
  2188                           	opt stack 0
  2189  0001F1                     	ds	1
  2190  0001F2                     _userInterfaceStatus:
  2191                           	opt stack 0
  2192  0001F2                     	ds	1
  2193  0001F3                     _MSDCBWValid:
  2194                           	opt stack 0
  2195  0001F3                     	ds	1
  2196  0001F4                     _SoftDetach:
  2197                           	opt stack 0
  2198  0001F4                     	ds	1
  2199  0001F5                     _MSDRetryAttempt:
  2200                           	opt stack 0
  2201  0001F5                     	ds	1
  2202  0001F6                     _MSDReadState:
  2203                           	opt stack 0
  2204  0001F6                     	ds	1
  2205  0001F7                     _USBTicksSinceSuspendEnd:
  2206                           	opt stack 0
  2207  0001F7                     	ds	1
  2208  0001F8                     _USBDeferOUTDataStagePackets:
  2209                           	opt stack 0
  2210  0001F8                     	ds	1
  2211  0001F9                     _USBDeferINDataStagePackets:
  2212                           	opt stack 0
  2213  0001F9                     	ds	1
  2214  0001FA                     _USBStatusStageEnabledFlag2:
  2215                           	opt stack 0
  2216  0001FA                     	ds	1
  2217  0001FB                     _USBStatusStageEnabledFlag1:
  2218                           	opt stack 0
  2219  0001FB                     	ds	1
  2220  0001FC                     _BothEP0OutUOWNsSet:
  2221                           	opt stack 0
  2222  0001FC                     	ds	1
  2223  0001FD                     _USBBusIsSuspended:
  2224                           	opt stack 0
  2225  0001FD                     	ds	1
  2226  0001FE                     _active_protocol:
  2227                           	opt stack 0
  2228  0001FE                     	ds	1
  2229  0001FF                     _idle_rate:
  2230                           	opt stack 0
  2231  0001FF                     	ds	1
  2232                           tblptru	equ	0xFF8
  2233                           tblptrh	equ	0xFF7
  2234                           tblptrl	equ	0xFF6
  2235                           tablat	equ	0xFF5
  2236                           postinc0	equ	0xFEE
  2237                           wreg	equ	0xFE8
  2238                           postdec1	equ	0xFE5
  2239                           fsr1h	equ	0xFE2
  2240                           fsr1l	equ	0xFE1
  2241                           
  2242                           	psect	bssBANK2
  2243  000200                     __pbssBANK2:
  2244                           	opt stack 0
  2245  000200                     _os:
  2246                           	opt stack 0
  2247  000200                     	ds	72
  2248  000248                     _gblCBW:
  2249                           	opt stack 0
  2250  000248                     	ds	31
  2251  000267                     _gblSenseData:
  2252                           	opt stack 0
  2253  000267                     	ds	18
  2254  000279                     _temperatureExternal2Sum:
  2255                           	opt stack 0
  2256  000279                     	ds	4
  2257  00027D                     _temperatureExternal1Sum:
  2258                           	opt stack 0
  2259  00027D                     	ds	4
  2260  000281                     _temperatureOnboardSum:
  2261                           	opt stack 0
  2262  000281                     	ds	4
  2263  000285                     _outputCapacitySum:
  2264                           	opt stack 0
  2265  000285                     	ds	4
  2266  000289                     _inputCapacitySum:
  2267                           	opt stack 0
  2268  000289                     	ds	4
  2269  00028D                     _outputPowerSum:
  2270                           	opt stack 0
  2271  00028D                     	ds	4
  2272  000291                     _inputPowerSum:
  2273                           	opt stack 0
  2274  000291                     	ds	4
  2275  000295                     _outputCurrentSum:
  2276                           	opt stack 0
  2277  000295                     	ds	4
  2278  000299                     _outputVoltageSum:
  2279                           	opt stack 0
  2280  000299                     	ds	4
  2281  00029D                     _inputCurrentSum:
  2282                           	opt stack 0
  2283  00029D                     	ds	4
  2284  0002A1                     _inputVoltageSum:
  2285                           	opt stack 0
  2286  0002A1                     	ds	4
  2287  0002A5                     _now:
  2288                           	opt stack 0
  2289  0002A5                     	ds	4
  2290  0002A9                     _last:
  2291                           	opt stack 0
  2292  0002A9                     	ds	4
  2293  0002AD                     _USB1msTickCount:
  2294                           	opt stack 0
  2295  0002AD                     	ds	4
  2296  0002B1                     _config_external:
  2297                           	opt stack 0
  2298  0002B1                     	ds	3
  2299  0002B4                     _config_internal:
  2300                           	opt stack 0
  2301  0002B4                     	ds	3
  2302  0002B7                     _lowPowerTime:
  2303                           	opt stack 0
  2304  0002B7                     	ds	2
  2305  0002B9                     _chargerOnTime:
  2306                           	opt stack 0
  2307  0002B9                     	ds	2
  2308  0002BB                     _system_ui_inactive_count:
  2309                           	opt stack 0
  2310  0002BB                     	ds	2
  2311  0002BD                     _USBInHandle:
  2312                           	opt stack 0
  2313  0002BD                     	ds	2
  2314  0002BF                     _USBOutHandle:
  2315                           	opt stack 0
  2316  0002BF                     	ds	2
  2317  0002C1                     _gblMediaPresent:
  2318                           	opt stack 0
  2319  0002C1                     	ds	2
  2320  0002C3                     _MSBBufferIndex:
  2321                           	opt stack 0
  2322  0002C3                     	ds	2
  2323  0002C5                     _ptrNextData:
  2324                           	opt stack 0
  2325  0002C5                     	ds	2
  2326  0002C7                     _pDst:
  2327                           	opt stack 0
  2328  0002C7                     	ds	2
  2329  0002C9                     _active_configuration:
  2330                           	opt stack 0
  2331  0002C9                     	ds	1
  2332  0002CA                     _buck_dutycycle_last_step:
  2333                           	opt stack 0
  2334  0002CA                     	ds	1
  2335  0002CB                     _i2c_frequency:
  2336                           	opt stack 0
  2337  0002CB                     	ds	1
  2338  0002CC                     _gblCBWLength:
  2339                           	opt stack 0
  2340  0002CC                     	ds	1
  2341  0002CD                     _mediaInformation:
  2342                           	opt stack 0
  2343  0002CD                     	ds	5
  2344  0002D2                     _USBAlternateInterface:
  2345                           	opt stack 0
  2346  0002D2                     	ds	2
  2347                           tblptru	equ	0xFF8
  2348                           tblptrh	equ	0xFF7
  2349                           tblptrl	equ	0xFF6
  2350                           tablat	equ	0xFF5
  2351                           postinc0	equ	0xFEE
  2352                           wreg	equ	0xFE8
  2353                           postdec1	equ	0xFE5
  2354                           fsr1h	equ	0xFE2
  2355                           fsr1l	equ	0xFE1
  2356                           
  2357                           	psect	dataBANK2
  2358  0002D4                     __pdataBANK2:
  2359                           	opt stack 0
  2360  0002D4                     _LUN:
  2361                           	opt stack 0
  2362  0002D4                     	ds	29
  2363  0002F1                     system_init@F7205:
  2364                           	opt stack 0
  2365  0002F1                     	ds	4
  2366  0002F5                     system_init@F7201:
  2367                           	opt stack 0
  2368  0002F5                     	ds	4
  2369  0002F9                     _battery_voltage_maximum:
  2370                           	opt stack 0
  2371  0002F9                     	ds	2
  2372  0002FB                     _extension:
  2373                           	opt stack 0
  2374  0002FB                     	ds	4
  2375                           tblptru	equ	0xFF8
  2376                           tblptrh	equ	0xFF7
  2377                           tblptrl	equ	0xFF6
  2378                           tablat	equ	0xFF5
  2379                           postinc0	equ	0xFEE
  2380                           wreg	equ	0xFE8
  2381                           postdec1	equ	0xFE5
  2382                           fsr1h	equ	0xFE2
  2383                           fsr1l	equ	0xFE1
  2384                           
  2385                           	psect	bssBANK3
  2386  000300                     __pbssBANK3:
  2387                           	opt stack 0
  2388  000300                     _task_list:
  2389                           	opt stack 0
  2390  000300                     	ds	16
  2391  000310                     _gblBLKLen:
  2392                           	opt stack 0
  2393  000310                     	ds	4
  2394  000314                     _gblNumBLKS:
  2395                           	opt stack 0
  2396  000314                     	ds	4
  2397  000318                     _calibrationParameters:
  2398                           	opt stack 0
  2399  000318                     	ds	84
  2400  00036C                     _display_content:
  2401                           	opt stack 0
  2402  00036C                     	ds	80
  2403                           tblptru	equ	0xFF8
  2404                           tblptrh	equ	0xFF7
  2405                           tblptrl	equ	0xFF6
  2406                           tablat	equ	0xFF5
  2407                           postinc0	equ	0xFEE
  2408                           wreg	equ	0xFE8
  2409                           postdec1	equ	0xFE5
  2410                           fsr1h	equ	0xFE2
  2411                           fsr1l	equ	0xFE1
  2412                           
  2413                           	psect	dataBANK3
  2414  0003BC                     __pdataBANK3:
  2415                           	opt stack 0
  2416  0003BC                     i2c_display_send_init_sequence@F6931:
  2417                           	opt stack 0
  2418  0003BC                     	ds	9
  2419  0003C5                     system_init@F7203:
  2420                           	opt stack 0
  2421  0003C5                     	ds	9
  2422  0003CE                     system_init@F7199:
  2423                           	opt stack 0
  2424  0003CE                     	ds	9
  2425  0003D7                     	ds	8
  2426  0003DF                     _filename:
  2427                           	opt stack 0
  2428  0003DF                     	ds	9
  2429                           tblptru	equ	0xFF8
  2430                           tblptrh	equ	0xFF7
  2431                           tblptrl	equ	0xFF6
  2432                           tablat	equ	0xFF5
  2433                           postinc0	equ	0xFEE
  2434                           wreg	equ	0xFE8
  2435                           postdec1	equ	0xFE5
  2436                           fsr1h	equ	0xFE2
  2437                           fsr1l	equ	0xFE1
  2438                           
  2439                           	psect	bssBANK4
  2440  000400                     __pbssBANK4:
  2441                           	opt stack 0
  2442  000400                     __spi_external_rx_buffer:
  2443                           	opt stack 0
  2444  000400                     	ds	64
  2445  000440                     __spi_external_tx_buffer:
  2446                           	opt stack 0
  2447  000440                     	ds	64
  2448  000480                     _ToSendDataBuffer:
  2449                           	opt stack 0
  2450  000480                     	ds	64
  2451  0004C0                     _ReceivedDataBuffer:
  2452                           	opt stack 0
  2453  0004C0                     	ds	64
  2454                           tblptru	equ	0xFF8
  2455                           tblptrh	equ	0xFF7
  2456                           tblptrl	equ	0xFF6
  2457                           tablat	equ	0xFF5
  2458                           postinc0	equ	0xFEE
  2459                           wreg	equ	0xFE8
  2460                           postdec1	equ	0xFE5
  2461                           fsr1h	equ	0xFE2
  2462                           fsr1l	equ	0xFE1
  2463                           
  2464                           	psect	dataBANK5
  2465  000500                     __pdataBANK5:
  2466                           	opt stack 0
  2467  000500                     system_init@F7207:
  2468                           	opt stack 0
  2469  000500                     	ds	104
  2470                           tblptru	equ	0xFF8
  2471                           tblptrh	equ	0xFF7
  2472                           tblptrl	equ	0xFF6
  2473                           tablat	equ	0xFF5
  2474                           postinc0	equ	0xFEE
  2475                           wreg	equ	0xFE8
  2476                           postdec1	equ	0xFE5
  2477                           fsr1h	equ	0xFE2
  2478                           fsr1l	equ	0xFE1
  2479                           
  2480                           	psect	bssBIGRAMll
  2481  000800                     __pbssBIGRAMll:
  2482                           	opt stack 0
  2483  000800                     _buffer:
  2484                           	opt stack 0
  2485  000800                     	ds	512
  2486                           tblptru	equ	0xFF8
  2487                           tblptrh	equ	0xFF7
  2488                           tblptrl	equ	0xFF6
  2489                           tablat	equ	0xFF5
  2490                           postinc0	equ	0xFEE
  2491                           wreg	equ	0xFE8
  2492                           postdec1	equ	0xFE5
  2493                           fsr1h	equ	0xFE2
  2494                           fsr1l	equ	0xFE1
  2495                           
  2496                           	psect	cstackBANK1
  2497  000100                     __pcstackBANK1:
  2498                           	opt stack 0
  2499  000100                     __fill_buffer_read_file@inBuffer:
  2500                           	opt stack 0
  2501  000100                     __parse_command_long@data:
  2502                           	opt stack 0
  2503  000100                     __display_charger@fan_off:
  2504                           	opt stack 0
  2505  000100                     __display_time@pts:
  2506                           	opt stack 0
  2507  000100                     system_init@appendtext:
  2508                           	opt stack 0
  2509                           
  2510                           ; 104 bytes @ 0x0
  2511  000100                     	ds	2
  2512  000102                     __fill_buffer_read_file@outBuffer:
  2513                           	opt stack 0
  2514  000102                     __parse_command_long@out_buffer:
  2515                           	opt stack 0
  2516                           
  2517                           ; 2 bytes @ 0x2
  2518  000102                     	ds	2
  2519  000104                     ??__fill_buffer_read_file:
  2520  000104                     __parse_command_long@out_idx_ptr:
  2521                           	opt stack 0
  2522                           
  2523                           ; 2 bytes @ 0x4
  2524  000104                     	ds	2
  2525  000106                     api_parse@inBuffer:
  2526                           	opt stack 0
  2527                           
  2528                           ; 2 bytes @ 0x6
  2529  000106                     	ds	2
  2530  000108                     api_parse@receivedDataLength:
  2531                           	opt stack 0
  2532  000108                     __fill_buffer_read_file@file_size:
  2533                           	opt stack 0
  2534  000108                     __display_charger@fan_on:
  2535                           	opt stack 0
  2536                           
  2537                           ; 7 bytes @ 0x8
  2538  000108                     	ds	1
  2539  000109                     api_parse@outBuffer:
  2540                           	opt stack 0
  2541                           
  2542                           ; 2 bytes @ 0x9
  2543  000109                     	ds	2
  2544  00010B                     api_parse@out_idx_ptr:
  2545                           	opt stack 0
  2546                           
  2547                           ; 2 bytes @ 0xB
  2548  00010B                     	ds	1
  2549  00010C                     __fill_buffer_read_file@data_length:
  2550                           	opt stack 0
  2551                           
  2552                           ; 4 bytes @ 0xC
  2553  00010C                     	ds	1
  2554  00010D                     api_parse@in_idx:
  2555                           	opt stack 0
  2556                           
  2557                           ; 1 bytes @ 0xD
  2558  00010D                     	ds	1
  2559  00010E                     api_parse@out_idx:
  2560                           	opt stack 0
  2561                           
  2562                           ; 1 bytes @ 0xE
  2563  00010E                     	ds	1
  2564  00010F                     __display_charger@header:
  2565                           	opt stack 0
  2566                           
  2567                           ; 21 bytes @ 0xF
  2568  00010F                     	ds	1
  2569  000110                     __fill_buffer_read_file@start:
  2570                           	opt stack 0
  2571                           
  2572                           ; 4 bytes @ 0x10
  2573  000110                     	ds	4
  2574  000114                     api_prepare@inBuffer:
  2575                           	opt stack 0
  2576  000114                     __display_time@pressminutes:
  2577                           	opt stack 0
  2578                           
  2579                           ; 20 bytes @ 0x14
  2580  000114                     	ds	2
  2581  000116                     api_prepare@outBuffer:
  2582                           	opt stack 0
  2583                           
  2584                           ; 2 bytes @ 0x16
  2585  000116                     	ds	14
  2586  000124                     __display_charger@charger_async:
  2587                           	opt stack 0
  2588                           
  2589                           ; 21 bytes @ 0x24
  2590  000124                     	ds	4
  2591  000128                     __display_time@pressseconds:
  2592                           	opt stack 0
  2593                           
  2594                           ; 20 bytes @ 0x28
  2595  000128                     	ds	17
  2596  000139                     __display_charger@charger_sync:
  2597                           	opt stack 0
  2598                           
  2599                           ; 20 bytes @ 0x39
  2600  000139                     	ds	3
  2601  00013C                     __display_time@pressmonth:
  2602                           	opt stack 0
  2603                           
  2604                           ; 18 bytes @ 0x3C
  2605  00013C                     	ds	17
  2606  00014D                     __display_charger@supply_off:
  2607                           	opt stack 0
  2608                           
  2609                           ; 19 bytes @ 0x4D
  2610  00014D                     	ds	1
  2611  00014E                     __display_time@presshours:
  2612                           	opt stack 0
  2613                           
  2614                           ; 18 bytes @ 0x4E
  2615  00014E                     	ds	18
  2616  000160                     __display_time@pressday:
  2617                           	opt stack 0
  2618  000160                     __display_charger@supply_on:
  2619                           	opt stack 0
  2620                           
  2621                           ; 18 bytes @ 0x60
  2622  000160                     	ds	8
  2623  000168                     system_init@filename:
  2624                           	opt stack 0
  2625                           
  2626                           ; 9 bytes @ 0x68
  2627  000168                     	ds	8
  2628  000170                     __display_time@presssave:
  2629                           	opt stack 0
  2630                           
  2631                           ; 16 bytes @ 0x70
  2632  000170                     	ds	1
  2633  000171                     system_init@filename2:
  2634                           	opt stack 0
  2635                           
  2636                           ; 9 bytes @ 0x71
  2637  000171                     	ds	1
  2638  000172                     __display_charger@charger_startup:
  2639                           	opt stack 0
  2640                           
  2641                           ; 16 bytes @ 0x72
  2642  000172                     	ds	8
  2643  00017A                     system_init@extension:
  2644                           	opt stack 0
  2645                           
  2646                           ; 4 bytes @ 0x7A
  2647  00017A                     	ds	4
  2648  00017E                     system_init@extension2:
  2649                           	opt stack 0
  2650                           
  2651                           ; 4 bytes @ 0x7E
  2652  00017E                     	ds	2
  2653  000180                     __display_time@tad:
  2654                           	opt stack 0
  2655                           
  2656                           ; 14 bytes @ 0x80
  2657  000180                     	ds	2
  2658  000182                     __display_charger@charger_off:
  2659                           	opt stack 0
  2660                           
  2661                           ; 12 bytes @ 0x82
  2662  000182                     	ds	12
  2663  00018E                     __display_charger@cntr:
  2664                           	opt stack 0
  2665  00018E                     __display_time@setminutes:
  2666                           	opt stack 0
  2667                           
  2668                           ; 12 bytes @ 0x8E
  2669  00018E                     	ds	12
  2670  00019A                     __display_time@setseconds:
  2671                           	opt stack 0
  2672                           
  2673                           ; 12 bytes @ 0x9A
  2674  00019A                     	ds	12
  2675  0001A6                     __display_time@setmonth:
  2676                           	opt stack 0
  2677                           
  2678                           ; 10 bytes @ 0xA6
  2679  0001A6                     	ds	10
  2680  0001B0                     __display_time@sethours:
  2681                           	opt stack 0
  2682                           
  2683                           ; 10 bytes @ 0xB0
  2684  0001B0                     	ds	10
  2685  0001BA                     __display_time@setyear:
  2686                           	opt stack 0
  2687                           
  2688                           ; 9 bytes @ 0xBA
  2689  0001BA                     	ds	9
  2690  0001C3                     __display_time@setday:
  2691                           	opt stack 0
  2692                           
  2693                           ; 8 bytes @ 0xC3
  2694  0001C3                     	ds	8
  2695  0001CB                     __display_time@mode:
  2696                           	opt stack 0
  2697                           
  2698                           ; 1 bytes @ 0xCB
  2699  0001CB                     	ds	1
  2700  0001CC                     __display_time@year:
  2701                           	opt stack 0
  2702                           
  2703                           ; 1 bytes @ 0xCC
  2704  0001CC                     	ds	1
  2705  0001CD                     __display_time@month:
  2706                           	opt stack 0
  2707                           
  2708                           ; 1 bytes @ 0xCD
  2709  0001CD                     	ds	1
  2710  0001CE                     __display_time@day:
  2711                           	opt stack 0
  2712                           
  2713                           ; 1 bytes @ 0xCE
  2714  0001CE                     	ds	1
  2715  0001CF                     __display_time@hours:
  2716                           	opt stack 0
  2717                           
  2718                           ; 1 bytes @ 0xCF
  2719  0001CF                     	ds	1
  2720  0001D0                     __display_time@minutes:
  2721                           	opt stack 0
  2722                           
  2723                           ; 1 bytes @ 0xD0
  2724  0001D0                     	ds	1
  2725  0001D1                     __display_time@seconds:
  2726                           	opt stack 0
  2727                           
  2728                           ; 1 bytes @ 0xD1
  2729  0001D1                     	ds	1
  2730  0001D2                     __display_time@cntr:
  2731                           	opt stack 0
  2732                           
  2733                           ; 1 bytes @ 0xD2
  2734  0001D2                     	ds	1
  2735  0001D3                     ??_main:
  2736                           
  2737                           ; 1 bytes @ 0xD3
  2738  0001D3                     	ds	2
  2739                           tblptru	equ	0xFF8
  2740                           tblptrh	equ	0xFF7
  2741                           tblptrl	equ	0xFF6
  2742                           tablat	equ	0xFF5
  2743                           postinc0	equ	0xFEE
  2744                           wreg	equ	0xFE8
  2745                           postdec1	equ	0xFE5
  2746                           fsr1h	equ	0xFE2
  2747                           fsr1l	equ	0xFE1
  2748                           
  2749                           	psect	cstackBANK0
  2750  000060                     __pcstackBANK0:
  2751                           	opt stack 0
  2752  000060                     ??_system_output_off:
  2753  000060                     ??__i2c_wait_idle:
  2754  000060                     ??__display_clear:
  2755  000060                     ??__number_of_days:
  2756  000060                     ??__buck_set_dutycycle:
  2757  000060                     ?_USBTransferOnePacket:
  2758                           	opt stack 0
  2759  000060                     ?_adc_read:
  2760                           	opt stack 0
  2761  000060                     ?_ExternalFlash_MediaInitialize:
  2762                           	opt stack 0
  2763  000060                     ?_ExternalFlash_SectorSizeRead:
  2764                           	opt stack 0
  2765  000060                     ?_strlen:
  2766                           	opt stack 0
  2767  000060                     ?_strncmp:
  2768                           	opt stack 0
  2769  000060                     ?__sector_from_file_number:
  2770                           	opt stack 0
  2771  000060                     ?__offset_from_file_number:
  2772                           	opt stack 0
  2773  000060                     ?__data_sector_from_cluster:
  2774                           	opt stack 0
  2775  000060                     ?__fat_sector_from_cluster:
  2776                           	opt stack 0
  2777  000060                     ?__fat_offset_from_cluster:
  2778                           	opt stack 0
  2779  000060                     ?__cluster_from_sector_and_offset:
  2780                           	opt stack 0
  2781  000060                     ?__get_available_offset_from_buffer:
  2782                           	opt stack 0
  2783  000060                     ?__read_value_from_offset:
  2784                           	opt stack 0
  2785  000060                     ?___lwdiv:
  2786                           	opt stack 0
  2787  000060                     ?___lwmod:
  2788                           	opt stack 0
  2789  000060                     ?_ExternalFlash_CapacityRead:
  2790                           	opt stack 0
  2791  000060                     ?___lmul:
  2792                           	opt stack 0
  2793  000060                     ?___lldiv:
  2794                           	opt stack 0
  2795  000060                     ?___aldiv:
  2796                           	opt stack 0
  2797  000060                     ?___fltol:
  2798                           	opt stack 0
  2799  000060                     USBTransferOnePacket@dir:
  2800                           	opt stack 0
  2801  000060                     USBStallEndpoint@dir:
  2802                           	opt stack 0
  2803  000060                     SYSTEM_Initialize@state:
  2804                           	opt stack 0
  2805  000060                     system_output_is_on@output:
  2806                           	opt stack 0
  2807  000060                     system_output_on@output:
  2808                           	opt stack 0
  2809  000060                     __i2c_send@dat:
  2810                           	opt stack 0
  2811  000060                     i2c_set_frequency@frequency:
  2812                           	opt stack 0
  2813  000060                     get_next_eeprom_write_task@task:
  2814                           	opt stack 0
  2815  000060                     display_get_character@position:
  2816                           	opt stack 0
  2817  000060                     __rtcc_bcd_to_decimal@tens:
  2818                           	opt stack 0
  2819  000060                     __rtcc_verify_bcd@min:
  2820                           	opt stack 0
  2821  000060                     rtcc_set_year@year:
  2822                           	opt stack 0
  2823  000060                     rtcc_set_month@month:
  2824                           	opt stack 0
  2825  000060                     rtcc_set_day@day:
  2826                           	opt stack 0
  2827  000060                     rtcc_set_hours@hours:
  2828                           	opt stack 0
  2829  000060                     rtcc_set_minutes@minutes:
  2830                           	opt stack 0
  2831  000060                     rtcc_set_seconds@seconds:
  2832                           	opt stack 0
  2833  000060                     __buck_prepare@cntr:
  2834                           	opt stack 0
  2835  000060                     buck_remote_set_enable@remote:
  2836                           	opt stack 0
  2837  000060                     buck_remote_set_on@on:
  2838                           	opt stack 0
  2839  000060                     buck_remote_set_synchronous@synchronous:
  2840                           	opt stack 0
  2841  000060                     buck_remote_set_dutycycle@dutycycle:
  2842                           	opt stack 0
  2843  000060                     buck_remote_change_dutycycle@change:
  2844                           	opt stack 0
  2845  000060                     buck_remote_get_status@retval:
  2846                           	opt stack 0
  2847  000060                     spi_set_configuration@configuration:
  2848                           	opt stack 0
  2849  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  2850                           	opt stack 0
  2851  000060                     __i2c_eeprom_load_default_calibration@buffer:
  2852                           	opt stack 0
  2853  000060                     ExternalFlash_MediaInitialize@config:
  2854                           	opt stack 0
  2855  000060                     ExternalFlash_SectorSizeRead@config:
  2856                           	opt stack 0
  2857  000060                     ExternalFlash_CapacityRead@config:
  2858                           	opt stack 0
  2859  000060                     ExternalFlash_MediaDetect@config:
  2860                           	opt stack 0
  2861  000060                     ExternalFlash_WriteProtectStateGet@config:
  2862                           	opt stack 0
  2863  000060                     __data_sector_from_cluster@fat_cluster:
  2864                           	opt stack 0
  2865  000060                     __fat_sector_from_cluster@cluster:
  2866                           	opt stack 0
  2867  000060                     __fat_offset_from_cluster@cluster:
  2868                           	opt stack 0
  2869  000060                     __cluster_from_sector_and_offset@sector:
  2870                           	opt stack 0
  2871  000060                     __get_available_offset_from_buffer@minimum_offset:
  2872                           	opt stack 0
  2873  000060                     __read_value_from_offset@offset:
  2874                           	opt stack 0
  2875  000060                     __write_value_to_offset@offset:
  2876                           	opt stack 0
  2877  000060                     __get_mbr@idx:
  2878                           	opt stack 0
  2879  000060                     __get_fbr@idx:
  2880                           	opt stack 0
  2881  000060                     __get_fat@idx:
  2882                           	opt stack 0
  2883  000060                     __get_root@idx:
  2884                           	opt stack 0
  2885  000060                     __get_data@idx:
  2886                           	opt stack 0
  2887  000060                     spi_tx@data:
  2888                           	opt stack 0
  2889  000060                     spi_tx_tx@command:
  2890                           	opt stack 0
  2891  000060                     spi_tx_rx@command:
  2892                           	opt stack 0
  2893  000060                     __parse_settings_spi_mode@data:
  2894                           	opt stack 0
  2895  000060                     __parse_settings_spi_frequency@data:
  2896                           	opt stack 0
  2897  000060                     __parse_settings_spi_polarity@data:
  2898                           	opt stack 0
  2899  000060                     __parse_settings_i2c_mode@data:
  2900                           	opt stack 0
  2901  000060                     __parse_settings_i2c_frequency@data:
  2902                           	opt stack 0
  2903  000060                     __parse_settings_i2c_slaveModeSlaveAddress@data:
  2904                           	opt stack 0
  2905  000060                     __parse_settings_i2c_masterModeSlaveAddress@data:
  2906                           	opt stack 0
  2907  000060                     ___lwdiv@dividend:
  2908                           	opt stack 0
  2909  000060                     ___lwmod@dividend:
  2910                           	opt stack 0
  2911  000060                     memcpy@d1:
  2912                           	opt stack 0
  2913  000060                     memset@p1:
  2914                           	opt stack 0
  2915  000060                     strlen@s:
  2916                           	opt stack 0
  2917  000060                     strncmp@s1:
  2918                           	opt stack 0
  2919  000060                     __spi_init@details:
  2920                           	opt stack 0
  2921  000060                     ___lmul@multiplier:
  2922                           	opt stack 0
  2923  000060                     ___lldiv@dividend:
  2924                           	opt stack 0
  2925  000060                     ___aldiv@dividend:
  2926                           	opt stack 0
  2927  000060                     ___fltol@f1:
  2928                           	opt stack 0
  2929  000060                     __display_usb@header:
  2930                           	opt stack 0
  2931  000060                     __display_outputs@line3:
  2932                           	opt stack 0
  2933                           
  2934                           ; 21 bytes @ 0x0
  2935  000060                     	ds	1
  2936  000061                     ??_USBStallEndpoint:
  2937  000061                     ??_display_get_character:
  2938  000061                     system_output_off@output:
  2939                           	opt stack 0
  2940  000061                     schedule_eeprom_write_task@task:
  2941                           	opt stack 0
  2942  000061                     __rtcc_bcd_to_decimal@ones:
  2943                           	opt stack 0
  2944  000061                     __number_of_days@year:
  2945                           	opt stack 0
  2946  000061                     __rtcc_verify_bcd@max:
  2947                           	opt stack 0
  2948  000061                     __buck_set_dutycycle@dutyCycle:
  2949                           	opt stack 0
  2950  000061                     USBTransferOnePacket@data:
  2951                           	opt stack 0
  2952  000061                     SYSTEM_Initialize@pll_startup_counter:
  2953                           	opt stack 0
  2954  000061                     buck_remote_change_dutycycle@new_dutycycle:
  2955                           	opt stack 0
  2956  000061                     __fill_buffer_get_status@outBuffer:
  2957                           	opt stack 0
  2958                           
  2959                           ; 2 bytes @ 0x1
  2960  000061                     	ds	1
  2961  000062                     ??_MSDComputeDeviceInAndResidue:
  2962  000062                     ??_strlen:
  2963  000062                     ??__rtcc_verify_bcd:
  2964  000062                     ??__get_mbr:
  2965  000062                     ??__get_fbr:
  2966  000062                     ??__get_fat:
  2967  000062                     ??__get_root:
  2968  000062                     system_output_toggle@output:
  2969                           	opt stack 0
  2970  000062                     __i2c_eeprom_load_default_calibration@index:
  2971                           	opt stack 0
  2972  000062                     schedule_eeprom_write_task@idx:
  2973                           	opt stack 0
  2974  000062                     __display_clear@row:
  2975                           	opt stack 0
  2976  000062                     __rtcc_bcd_to_decimal@input:
  2977                           	opt stack 0
  2978  000062                     __number_of_days@bcd_year:
  2979                           	opt stack 0
  2980  000062                     __buck_set_sync_async@new_dutycycle:
  2981                           	opt stack 0
  2982  000062                     adc_read@channel:
  2983                           	opt stack 0
  2984  000062                     __sector_from_file_number@file_number:
  2985                           	opt stack 0
  2986  000062                     __offset_from_file_number@file_number:
  2987                           	opt stack 0
  2988  000062                     __cluster_from_sector_and_offset@offset:
  2989                           	opt stack 0
  2990  000062                     __get_available_offset_from_buffer@buffer:
  2991                           	opt stack 0
  2992  000062                     __read_value_from_offset@buffer:
  2993                           	opt stack 0
  2994  000062                     __write_value_to_offset@buffer:
  2995                           	opt stack 0
  2996  000062                     spi_tx@length:
  2997                           	opt stack 0
  2998  000062                     spi_tx_tx@command_length:
  2999                           	opt stack 0
  3000  000062                     spi_tx_rx@command_length:
  3001                           	opt stack 0
  3002  000062                     __parse_settings_spi_mode@out_buffer:
  3003                           	opt stack 0
  3004  000062                     __parse_settings_spi_frequency@out_buffer:
  3005                           	opt stack 0
  3006  000062                     __parse_settings_spi_polarity@out_buffer:
  3007                           	opt stack 0
  3008  000062                     __parse_settings_i2c_mode@out_buffer:
  3009                           	opt stack 0
  3010  000062                     __parse_settings_i2c_frequency@out_buffer:
  3011                           	opt stack 0
  3012  000062                     __parse_settings_i2c_slaveModeSlaveAddress@out_buffer:
  3013                           	opt stack 0
  3014  000062                     __parse_settings_i2c_masterModeSlaveAddress@out_buffer:
  3015                           	opt stack 0
  3016  000062                     ___lwdiv@divisor:
  3017                           	opt stack 0
  3018  000062                     ___lwmod@divisor:
  3019                           	opt stack 0
  3020  000062                     memcpy@s1:
  3021                           	opt stack 0
  3022  000062                     memset@c:
  3023                           	opt stack 0
  3024  000062                     strncmp@s2:
  3025                           	opt stack 0
  3026                           
  3027                           ; 2 bytes @ 0x2
  3028  000062                     	ds	1
  3029  000063                     ??__fill_buffer_get_status:
  3030  000063                     USBTransferOnePacket@len:
  3031                           	opt stack 0
  3032  000063                     display_get_character@line:
  3033                           	opt stack 0
  3034  000063                     __display_clear@col:
  3035                           	opt stack 0
  3036  000063                     __number_of_days@month:
  3037                           	opt stack 0
  3038  000063                     __rtcc_verify_bcd@value:
  3039                           	opt stack 0
  3040  000063                     rtcc_get_year_decimal@bcd_year:
  3041                           	opt stack 0
  3042  000063                     rtcc_get_month_decimal@bcd_month:
  3043                           	opt stack 0
  3044  000063                     rtcc_get_day_decimal@bcd_day:
  3045                           	opt stack 0
  3046  000063                     rtcc_get_hours_decimal@bcd_hours:
  3047                           	opt stack 0
  3048  000063                     rtcc_get_minutes_decimal@bcd_minutes:
  3049                           	opt stack 0
  3050  000063                     rtcc_get_seconds_decimal@bcd_seconds:
  3051                           	opt stack 0
  3052  000063                     __buck_set_sync_async@mode:
  3053                           	opt stack 0
  3054  000063                     spi_init@configuration:
  3055                           	opt stack 0
  3056  000063                     SYSTEM_Initialize@pll_startup_counter_3409:
  3057                           	opt stack 0
  3058  000063                     adc_read@adc_value:
  3059                           	opt stack 0
  3060  000063                     __sector_from_file_number@sector:
  3061                           	opt stack 0
  3062  000063                     __offset_from_file_number@offset:
  3063                           	opt stack 0
  3064  000063                     __parse_calibration@data:
  3065                           	opt stack 0
  3066                           
  3067                           ; 2 bytes @ 0x3
  3068  000063                     	ds	1
  3069  000064                     ??_USBTransferOnePacket:
  3070  000064                     ??_spi_tx:
  3071  000064                     ??__get_available_offset_from_buffer:
  3072  000064                     ??__read_value_from_offset:
  3073  000064                     ??___fltol:
  3074  000064                     ?__get_time:
  3075                           	opt stack 0
  3076  000064                     ?__get_date:
  3077                           	opt stack 0
  3078  000064                     __rtcc_increment_bcd@min:
  3079                           	opt stack 0
  3080  000064                     __rtcc_decrement_bcd@min:
  3081                           	opt stack 0
  3082  000064                     rtcc_correct_day@day:
  3083                           	opt stack 0
  3084  000064                     ___lwdiv@counter:
  3085                           	opt stack 0
  3086  000064                     ___lwmod@counter:
  3087                           	opt stack 0
  3088  000064                     __write_value_to_offset@value:
  3089                           	opt stack 0
  3090  000064                     spi_tx_tx@data:
  3091                           	opt stack 0
  3092  000064                     spi_tx_rx@data:
  3093                           	opt stack 0
  3094  000064                     __fill_buffer_get_display@outBuffer:
  3095                           	opt stack 0
  3096  000064                     __fill_buffer_get_display1@outBuffer:
  3097                           	opt stack 0
  3098  000064                     __parse_settings_spi_mode@out_idx_ptr:
  3099                           	opt stack 0
  3100  000064                     __parse_settings_spi_frequency@out_idx_ptr:
  3101                           	opt stack 0
  3102  000064                     __parse_settings_spi_polarity@out_idx_ptr:
  3103                           	opt stack 0
  3104  000064                     __parse_settings_i2c_mode@out_idx_ptr:
  3105                           	opt stack 0
  3106  000064                     __parse_settings_i2c_frequency@out_idx_ptr:
  3107                           	opt stack 0
  3108  000064                     __parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr:
  3109                           	opt stack 0
  3110  000064                     __parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr:
  3111                           	opt stack 0
  3112  000064                     memcpy@n:
  3113                           	opt stack 0
  3114  000064                     memset@n:
  3115                           	opt stack 0
  3116  000064                     strlen@cp:
  3117                           	opt stack 0
  3118  000064                     strncmp@len:
  3119                           	opt stack 0
  3120  000064                     ___lmul@multiplicand:
  3121                           	opt stack 0
  3122  000064                     ___lldiv@divisor:
  3123                           	opt stack 0
  3124  000064                     ___aldiv@divisor:
  3125                           	opt stack 0
  3126                           
  3127                           ; 4 bytes @ 0x4
  3128  000064                     	ds	1
  3129  000065                     ?_i2c_adc_read:
  3130                           	opt stack 0
  3131  000065                     USBStallEndpoint@ep:
  3132                           	opt stack 0
  3133  000065                     __rtcc_increment_bcd@max:
  3134                           	opt stack 0
  3135  000065                     __rtcc_decrement_bcd@max:
  3136                           	opt stack 0
  3137  000065                     rtcc_correct_day@max:
  3138                           	opt stack 0
  3139  000065                     __i2c_write@data:
  3140                           	opt stack 0
  3141  000065                     __i2c_read@data:
  3142                           	opt stack 0
  3143  000065                     i2c_display_write_fixed@data:
  3144                           	opt stack 0
  3145  000065                     __parse_calibration@out_buffer:
  3146                           	opt stack 0
  3147  000065                     ___lwdiv@quotient:
  3148                           	opt stack 0
  3149                           
  3150                           ; 2 bytes @ 0x5
  3151  000065                     	ds	1
  3152  000066                     ??_strncmp:
  3153  000066                     ??__fill_buffer_get_display1:
  3154  000066                     ??__parse_settings_spi_mode:
  3155  000066                     ??__parse_settings_spi_frequency:
  3156  000066                     ??__parse_settings_spi_polarity:
  3157  000066                     ??__parse_settings_i2c_mode:
  3158  000066                     ??__parse_settings_i2c_frequency:
  3159  000066                     ??__parse_settings_i2c_slaveModeSlaveAddress:
  3160  000066                     ??__parse_settings_i2c_masterModeSlaveAddress:
  3161  000066                     ??__rtcc_increment_bcd:
  3162  000066                     ??__rtcc_decrement_bcd:
  3163  000066                     ??__write_value_to_offset:
  3164  000066                     ??__get_time:
  3165  000066                     ??__get_date:
  3166  000066                     __fill_buffer_get_display@secondHalf:
  3167                           	opt stack 0
  3168  000066                     memcpy@tmp:
  3169                           	opt stack 0
  3170  000066                     USBStallEndpoint@p:
  3171                           	opt stack 0
  3172  000066                     __get_available_offset_from_buffer@offset:
  3173                           	opt stack 0
  3174  000066                     spi_tx_tx@data_length:
  3175                           	opt stack 0
  3176  000066                     spi_tx_rx@data_length:
  3177                           	opt stack 0
  3178  000066                     memset@p:
  3179                           	opt stack 0
  3180                           
  3181                           ; 2 bytes @ 0x6
  3182  000066                     	ds	1
  3183  000067                     ??_i2c_adc_read:
  3184  000067                     ??__fill_buffer_get_display:
  3185  000067                     __i2c_write@length:
  3186                           	opt stack 0
  3187  000067                     __i2c_read@length:
  3188                           	opt stack 0
  3189  000067                     i2c_display_write_fixed@length:
  3190                           	opt stack 0
  3191  000067                     __rtcc_increment_bcd@value:
  3192                           	opt stack 0
  3193  000067                     __rtcc_decrement_bcd@value:
  3194                           	opt stack 0
  3195  000067                     __fill_buffer_get_display1@cntr:
  3196                           	opt stack 0
  3197  000067                     __read_value_from_offset@value:
  3198                           	opt stack 0
  3199  000067                     __parse_calibration@out_idx_ptr:
  3200                           	opt stack 0
  3201  000067                     utoa@buf:
  3202                           	opt stack 0
  3203  000067                     memcpy@d:
  3204                           	opt stack 0
  3205                           
  3206                           ; 2 bytes @ 0x7
  3207  000067                     	ds	1
  3208  000068                     ??_spi_tx_rx:
  3209  000068                     ??_spi_tx_tx:
  3210  000068                     ??__i2c_read:
  3211  000068                     USBDeviceInit@i:
  3212                           	opt stack 0
  3213  000068                     USBTransferOnePacket@ep:
  3214                           	opt stack 0
  3215  000068                     MSDErrorHandler@ErrorCase:
  3216                           	opt stack 0
  3217  000068                     __i2c_write@slave_address:
  3218                           	opt stack 0
  3219  000068                     i2c_display_write_fixed@pos:
  3220                           	opt stack 0
  3221  000068                     rtcc_increment_year@year:
  3222                           	opt stack 0
  3223  000068                     rtcc_decrement_year@year:
  3224                           	opt stack 0
  3225  000068                     rtcc_increment_month@month:
  3226                           	opt stack 0
  3227  000068                     rtcc_decrement_month@month:
  3228                           	opt stack 0
  3229  000068                     rtcc_increment_day@day:
  3230                           	opt stack 0
  3231  000068                     rtcc_decrement_day@day:
  3232                           	opt stack 0
  3233  000068                     rtcc_increment_hours@hours:
  3234                           	opt stack 0
  3235  000068                     rtcc_decrement_hours@hours:
  3236                           	opt stack 0
  3237  000068                     rtcc_increment_minutes@minutes:
  3238                           	opt stack 0
  3239  000068                     rtcc_decrement_minutes@minutes:
  3240                           	opt stack 0
  3241  000068                     rtcc_increment_seconds@seconds:
  3242                           	opt stack 0
  3243  000068                     rtcc_decrement_seconds@seconds:
  3244                           	opt stack 0
  3245  000068                     __flash_wakeup@command:
  3246                           	opt stack 0
  3247  000068                     __get_time@hours:
  3248                           	opt stack 0
  3249  000068                     __get_date@year:
  3250                           	opt stack 0
  3251  000068                     __fill_buffer_get_display1@line:
  3252                           	opt stack 0
  3253  000068                     ___aldiv@counter:
  3254                           	opt stack 0
  3255  000068                     ___fltol@sign1:
  3256                           	opt stack 0
  3257  000068                     i2c_adc_read@result:
  3258                           	opt stack 0
  3259  000068                     ___lmul@product:
  3260                           	opt stack 0
  3261  000068                     ___lldiv@quotient:
  3262                           	opt stack 0
  3263                           
  3264                           ; 4 bytes @ 0x8
  3265  000068                     	ds	1
  3266  000069                     ??__parse_calibration:
  3267  000069                     MSDErrorHandler@OldMSD_State:
  3268                           	opt stack 0
  3269  000069                     __i2c_write@cntr:
  3270                           	opt stack 0
  3271  000069                     __get_time@minutes:
  3272                           	opt stack 0
  3273  000069                     __get_date@month:
  3274                           	opt stack 0
  3275  000069                     __fill_buffer_get_display1@position:
  3276                           	opt stack 0
  3277  000069                     ___aldiv@sign:
  3278                           	opt stack 0
  3279  000069                     ___fltol@exp1:
  3280                           	opt stack 0
  3281  000069                     USBTransferOnePacket@handle:
  3282                           	opt stack 0
  3283  000069                     utoa@val:
  3284                           	opt stack 0
  3285  000069                     memcpy@s:
  3286                           	opt stack 0
  3287                           
  3288                           ; 2 bytes @ 0x9
  3289  000069                     	ds	1
  3290  00006A                     __ic2_display_set_address@address:
  3291                           	opt stack 0
  3292  00006A                     i2c_digipot_backlight@level:
  3293                           	opt stack 0
  3294  00006A                     i2c_adc_start@resolution:
  3295                           	opt stack 0
  3296  00006A                     __get_time@seconds:
  3297                           	opt stack 0
  3298  00006A                     __get_date@day:
  3299                           	opt stack 0
  3300  00006A                     __parse_calibration@shift:
  3301                           	opt stack 0
  3302  00006A                     i2c_digipot_reset_on@data_array:
  3303                           	opt stack 0
  3304  00006A                     i2c_digipot_reset_off@data_array:
  3305                           	opt stack 0
  3306  00006A                     i2c_eeprom_write@address:
  3307                           	opt stack 0
  3308  00006A                     MSDCheckForErrorCases@DeviceBytes:
  3309                           	opt stack 0
  3310  00006A                     ___aldiv@quotient:
  3311                           	opt stack 0
  3312  00006A                     i2c_display_send_init_sequence@init_sequence:
  3313                           	opt stack 0
  3314                           
  3315                           ; 9 bytes @ 0xA
  3316  00006A                     	ds	1
  3317  00006B                     i2c_adc_start@gain:
  3318                           	opt stack 0
  3319  00006B                     __parse_calibration@slope_or_offset:
  3320                           	opt stack 0
  3321  00006B                     __ic2_display_set_address@data_array:
  3322                           	opt stack 0
  3323  00006B                     i2c_digipot_backlight@data_array:
  3324                           	opt stack 0
  3325  00006B                     __get_time@time:
  3326                           	opt stack 0
  3327  00006B                     __get_date@date:
  3328                           	opt stack 0
  3329  00006B                     __fill_buffer_get_calibration1@outBuffer:
  3330                           	opt stack 0
  3331  00006B                     __fill_buffer_get_calibration2@outBuffer:
  3332                           	opt stack 0
  3333  00006B                     utoa@base:
  3334                           	opt stack 0
  3335                           
  3336                           ; 2 bytes @ 0xB
  3337  00006B                     	ds	1
  3338  00006C                     ??_system_calculate_output_voltage:
  3339  00006C                     ??_system_calculate_input_voltage:
  3340  00006C                     ??_system_calculate_output_current:
  3341  00006C                     ??_system_calculate_input_current:
  3342  00006C                     ?_adc_calculate_temperature:
  3343                           	opt stack 0
  3344  00006C                     ?__flash_get_status:
  3345                           	opt stack 0
  3346  00006C                     i2c_adc_start@channel:
  3347                           	opt stack 0
  3348  00006C                     __fill_buffer_get_display@cntr:
  3349                           	opt stack 0
  3350  00006C                     ___lldiv@counter:
  3351                           	opt stack 0
  3352  00006C                     i2c_eeprom_write@data:
  3353                           	opt stack 0
  3354  00006C                     adc_calculate_temperature@adc_value:
  3355                           	opt stack 0
  3356  00006C                     __parse_calibration@parameter:
  3357                           	opt stack 0
  3358                           
  3359                           ; 2 bytes @ 0xC
  3360  00006C                     	ds	1
  3361  00006D                     ??__buck_initial_dutycycle:
  3362  00006D                     ?__get_output_power:
  3363                           	opt stack 0
  3364  00006D                     i2c_display_cursor@position:
  3365                           	opt stack 0
  3366  00006D                     i2c_adc_start@configuration_byte:
  3367                           	opt stack 0
  3368  00006D                     __fill_buffer_get_display@line:
  3369                           	opt stack 0
  3370  00006D                     utoa@v:
  3371                           	opt stack 0
  3372                           
  3373                           ; 2 bytes @ 0xD
  3374  00006D                     	ds	1
  3375  00006E                     ?__get_input_power:
  3376                           	opt stack 0
  3377  00006E                     ?___xxtofl:
  3378                           	opt stack 0
  3379  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  3380                           	opt stack 0
  3381  00006E                     i2c_display_cursor@line:
  3382                           	opt stack 0
  3383  00006E                     i2c_eeprom_write@length:
  3384                           	opt stack 0
  3385  00006E                     adc_calculate_temperature@calibration:
  3386                           	opt stack 0
  3387  00006E                     __flash_get_status@command:
  3388                           	opt stack 0
  3389  00006E                     __fill_buffer_get_display@start_line:
  3390                           	opt stack 0
  3391  00006E                     __parse_calibration@item:
  3392                           	opt stack 0
  3393  00006E                     __buck_initial_dutycycle@dc:
  3394                           	opt stack 0
  3395  00006E                     ___xxtofl@val:
  3396                           	opt stack 0
  3397                           
  3398                           ; 4 bytes @ 0xE
  3399  00006E                     	ds	1
  3400  00006F                     ??_adc_calculate_temperature:
  3401  00006F                     ??_i2c_eeprom_write:
  3402  00006F                     MSDCheckForErrorCases@DeviceNoData:
  3403                           	opt stack 0
  3404  00006F                     __i2c_read@slave_address:
  3405                           	opt stack 0
  3406  00006F                     i2c_display_cursor@address:
  3407                           	opt stack 0
  3408  00006F                     __fill_buffer_get_display@position:
  3409                           	opt stack 0
  3410  00006F                     utoa@c:
  3411                           	opt stack 0
  3412  00006F                     __flash_get_status@status:
  3413                           	opt stack 0
  3414  00006F                     __get_output_power@pwr:
  3415                           	opt stack 0
  3416                           
  3417                           ; 4 bytes @ 0xF
  3418  00006F                     	ds	1
  3419  000070                     MSDCheckForErrorCases@MSDErrorCase:
  3420                           	opt stack 0
  3421  000070                     __i2c_read@cntr:
  3422                           	opt stack 0
  3423  000070                     itoa@buf:
  3424                           	opt stack 0
  3425  000070                     system_calculate_input_voltage@tmp:
  3426                           	opt stack 0
  3427  000070                     system_calculate_output_voltage@tmp:
  3428                           	opt stack 0
  3429  000070                     system_calculate_input_current@tmp:
  3430                           	opt stack 0
  3431  000070                     system_calculate_output_current@tmp:
  3432                           	opt stack 0
  3433  000070                     __get_input_power@pwr:
  3434                           	opt stack 0
  3435                           
  3436                           ; 4 bytes @ 0x10
  3437  000070                     	ds	1
  3438  000071                     i2c_eeprom_read@address:
  3439                           	opt stack 0
  3440  000071                     __flash_is_busy@status:
  3441                           	opt stack 0
  3442                           
  3443                           ; 2 bytes @ 0x11
  3444  000071                     	ds	1
  3445  000072                     ??___xxtofl:
  3446  000072                     __buck_start@dutycycle:
  3447                           	opt stack 0
  3448  000072                     itoa@val:
  3449                           	opt stack 0
  3450  000072                     i2c_eeprom_write@dat:
  3451                           	opt stack 0
  3452                           
  3453                           ; 17 bytes @ 0x12
  3454  000072                     	ds	1
  3455  000073                     __buck_start@mode:
  3456                           	opt stack 0
  3457  000073                     i2c_eeprom_read@data:
  3458                           	opt stack 0
  3459  000073                     __flash_copy_page_to_buffer@page:
  3460                           	opt stack 0
  3461  000073                     __flash_compare_page_to_buffer@page:
  3462                           	opt stack 0
  3463  000073                     __flash_write_to_buffer@start:
  3464                           	opt stack 0
  3465  000073                     __flash_write_page_from_buffer@page:
  3466                           	opt stack 0
  3467  000073                     __flash_partial_read@page:
  3468                           	opt stack 0
  3469  000073                     __flash_buffer_read@start:
  3470                           	opt stack 0
  3471  000073                     __flash_set_page_size@command:
  3472                           	opt stack 0
  3473                           
  3474                           ; 4 bytes @ 0x13
  3475  000073                     	ds	1
  3476  000074                     ??_log_collect_data:
  3477  000074                     __buck_start@startup_dutycycle:
  3478                           	opt stack 0
  3479  000074                     itoa@base:
  3480                           	opt stack 0
  3481  000074                     __display_usb@usb_off:
  3482                           	opt stack 0
  3483                           
  3484                           ; 17 bytes @ 0x14
  3485  000074                     	ds	1
  3486  000075                     i2c_eeprom_read@length:
  3487                           	opt stack 0
  3488  000075                     __buck_start@cntr:
  3489                           	opt stack 0
  3490  000075                     __flash_copy_page_to_buffer@buffer:
  3491                           	opt stack 0
  3492  000075                     __flash_compare_page_to_buffer@buffer:
  3493                           	opt stack 0
  3494  000075                     __flash_write_page_from_buffer@buffer:
  3495                           	opt stack 0
  3496  000075                     __flash_write_to_buffer@data:
  3497                           	opt stack 0
  3498  000075                     __flash_partial_read@start:
  3499                           	opt stack 0
  3500  000075                     __flash_buffer_read@length:
  3501                           	opt stack 0
  3502  000075                     adc_calculate_temperature@tmp:
  3503                           	opt stack 0
  3504  000075                     __display_outputs@line4:
  3505                           	opt stack 0
  3506                           
  3507                           ; 21 bytes @ 0x15
  3508  000075                     	ds	1
  3509  000076                     ??_i2c_eeprom_read:
  3510  000076                     ??__buck_operate_local:
  3511  000076                     ??__flash_copy_page_to_buffer:
  3512  000076                     ??__flash_compare_page_to_buffer:
  3513  000076                     ??__flash_write_page_from_buffer:
  3514  000076                     ___xxtofl@sign:
  3515                           	opt stack 0
  3516  000076                     __buck_operate_remote$10020:
  3517                           	opt stack 0
  3518  000076                     itoa@cp:
  3519                           	opt stack 0
  3520                           
  3521                           ; 2 bytes @ 0x16
  3522  000076                     	ds	1
  3523  000077                     i2c_eeprom_read@addr:
  3524                           	opt stack 0
  3525  000077                     __flash_set_page_size@size:
  3526                           	opt stack 0
  3527  000077                     ___xxtofl@exp:
  3528                           	opt stack 0
  3529  000077                     __flash_write_to_buffer@data_length:
  3530                           	opt stack 0
  3531  000077                     __flash_partial_read@length:
  3532                           	opt stack 0
  3533  000077                     __flash_buffer_read@data:
  3534                           	opt stack 0
  3535                           
  3536                           ; 2 bytes @ 0x17
  3537  000077                     	ds	1
  3538  000078                     i2c_eeprom_read@slave_address:
  3539                           	opt stack 0
  3540  000078                     __display_itoa@value:
  3541                           	opt stack 0
  3542  000078                     __display_itoa_u16@value:
  3543                           	opt stack 0
  3544  000078                     log_collect_data@temp:
  3545                           	opt stack 0
  3546  000078                     ___xxtofl@arg:
  3547                           	opt stack 0
  3548                           
  3549                           ; 4 bytes @ 0x18
  3550  000078                     	ds	1
  3551  000079                     ??_i2c_eeprom_read_calibration:
  3552  000079                     __flash_write_to_buffer@buffer:
  3553                           	opt stack 0
  3554  000079                     __flash_buffer_read@buffer:
  3555                           	opt stack 0
  3556  000079                     __flash_compare_page_to_buffer@status:
  3557                           	opt stack 0
  3558  000079                     __flash_partial_read@data:
  3559                           	opt stack 0
  3560  000079                     __flash_copy_page_to_buffer@command:
  3561                           	opt stack 0
  3562  000079                     __flash_write_page_from_buffer@command:
  3563                           	opt stack 0
  3564                           
  3565                           ; 4 bytes @ 0x19
  3566  000079                     	ds	1
  3567  00007A                     __display_itoa@decimals:
  3568                           	opt stack 0
  3569  00007A                     __display_itoa_u16@text:
  3570                           	opt stack 0
  3571  00007A                     __flash_write_to_buffer@command:
  3572                           	opt stack 0
  3573  00007A                     __flash_buffer_read@command:
  3574                           	opt stack 0
  3575                           
  3576                           ; 4 bytes @ 0x1A
  3577  00007A                     	ds	1
  3578  00007B                     ??__flash_partial_read:
  3579  00007B                     __buck_operate_local$10019:
  3580                           	opt stack 0
  3581  00007B                     __display_itoa@text:
  3582                           	opt stack 0
  3583  00007B                     i2c_eeprom_read_calibration@buffer:
  3584                           	opt stack 0
  3585  00007B                     __flash_compare_page_to_buffer@command:
  3586                           	opt stack 0
  3587                           
  3588                           ; 4 bytes @ 0x1B
  3589  00007B                     	ds	1
  3590  00007C                     __buck_operate_local@tmp_dutycycle:
  3591                           	opt stack 0
  3592  00007C                     __display_startup@line1:
  3593                           	opt stack 0
  3594                           
  3595                           ; 19 bytes @ 0x1C
  3596  00007C                     	ds	1
  3597  00007D                     ??__display_itoa:
  3598  00007D                     __buck_operate_local@cntr:
  3599                           	opt stack 0
  3600  00007D                     flash_copy_page_to_buffer@page:
  3601                           	opt stack 0
  3602                           
  3603                           ; 2 bytes @ 0x1D
  3604  00007D                     	ds	1
  3605  00007E                     flash_read_from_buffer@start:
  3606                           	opt stack 0
  3607  00007E                     flash_write_to_buffer@start:
  3608                           	opt stack 0
  3609                           
  3610                           ; 2 bytes @ 0x1E
  3611  00007E                     	ds	1
  3612  00007F                     i2c_eeprom_read_calibration@addr:
  3613                           	opt stack 0
  3614  00007F                     flash_sector_write@page:
  3615                           	opt stack 0
  3616  00007F                     flash_partial_write@page:
  3617                           	opt stack 0
  3618  00007F                     __flash_partial_read@command:
  3619                           	opt stack 0
  3620                           
  3621                           ; 4 bytes @ 0x1F
  3622  00007F                     	ds	1
  3623  000080                     flash_read_from_buffer@length:
  3624                           	opt stack 0
  3625  000080                     flash_write_to_buffer@length:
  3626                           	opt stack 0
  3627                           
  3628                           ; 2 bytes @ 0x20
  3629  000080                     	ds	1
  3630  000081                     i2c_eeprom_read_calibration@cntr:
  3631                           	opt stack 0
  3632  000081                     flash_sector_write@data:
  3633                           	opt stack 0
  3634  000081                     flash_partial_write@start:
  3635                           	opt stack 0
  3636                           
  3637                           ; 2 bytes @ 0x21
  3638  000081                     	ds	1
  3639  000082                     flash_read_from_buffer@data:
  3640                           	opt stack 0
  3641  000082                     flash_write_to_buffer@data:
  3642                           	opt stack 0
  3643                           
  3644                           ; 2 bytes @ 0x22
  3645  000082                     	ds	1
  3646  000083                     i2c_eeprom_write@slave_address:
  3647                           	opt stack 0
  3648  000083                     flash_sector_write@match:
  3649                           	opt stack 0
  3650  000083                     flash_partial_write@length:
  3651                           	opt stack 0
  3652  000083                     __flash_partial_read@address:
  3653                           	opt stack 0
  3654  000083                     __display_itoa@tmp:
  3655                           	opt stack 0
  3656                           
  3657                           ; 10 bytes @ 0x23
  3658  000083                     	ds	1
  3659  000084                     i2c_eeprom_write@cntr:
  3660                           	opt stack 0
  3661  000084                     ExternalFlash_SectorWrite@config:
  3662                           	opt stack 0
  3663  000084                     fat_format@cntr:
  3664                           	opt stack 0
  3665  000084                     fat_read_from_buffer@start:
  3666                           	opt stack 0
  3667  000084                     fat_write_to_buffer@start:
  3668                           	opt stack 0
  3669                           
  3670                           ; 2 bytes @ 0x24
  3671  000084                     	ds	1
  3672  000085                     ??__write_calibration:
  3673  000085                     flash_partial_write@data:
  3674                           	opt stack 0
  3675  000085                     rtcc_write_eeprom@date:
  3676                           	opt stack 0
  3677  000085                     __display_usb@low:
  3678                           	opt stack 0
  3679                           
  3680                           ; 16 bytes @ 0x25
  3681  000085                     	ds	1
  3682  000086                     fat_read_from_buffer@length:
  3683                           	opt stack 0
  3684  000086                     fat_write_to_buffer@length:
  3685                           	opt stack 0
  3686  000086                     __parse_format_drive@data:
  3687                           	opt stack 0
  3688  000086                     ExternalFlash_SectorWrite@sector_addr:
  3689                           	opt stack 0
  3690                           
  3691                           ; 4 bytes @ 0x26
  3692  000086                     	ds	1
  3693  000087                     flash_partial_write@match:
  3694                           	opt stack 0
  3695  000087                     flash_sector_read@page:
  3696                           	opt stack 0
  3697  000087                     flash_partial_read@page:
  3698                           	opt stack 0
  3699  000087                     __write_calibration@buffer:
  3700                           	opt stack 0
  3701                           
  3702                           ; 16 bytes @ 0x27
  3703  000087                     	ds	1
  3704  000088                     __write_root@data:
  3705                           	opt stack 0
  3706  000088                     __delete_root@sector:
  3707                           	opt stack 0
  3708  000088                     fat_read_from_buffer@data:
  3709                           	opt stack 0
  3710  000088                     fat_write_to_buffer@data:
  3711                           	opt stack 0
  3712  000088                     __parse_format_drive@out_buffer:
  3713                           	opt stack 0
  3714                           
  3715                           ; 2 bytes @ 0x28
  3716  000088                     	ds	1
  3717  000089                     flash_sector_read@data:
  3718                           	opt stack 0
  3719  000089                     flash_partial_read@start:
  3720                           	opt stack 0
  3721                           
  3722                           ; 2 bytes @ 0x29
  3723  000089                     	ds	1
  3724  00008A                     ExternalFlash_SectorWrite@buffer:
  3725                           	opt stack 0
  3726  00008A                     __write_root@sector:
  3727                           	opt stack 0
  3728  00008A                     __delete_root@offset:
  3729                           	opt stack 0
  3730  00008A                     __fill_buffer_read_buffer@inBuffer:
  3731                           	opt stack 0
  3732  00008A                     __parse_format_drive@out_idx_ptr:
  3733                           	opt stack 0
  3734  00008A                     __parse_write_buffer@data:
  3735                           	opt stack 0
  3736  00008A                     __display_outputs@low:
  3737                           	opt stack 0
  3738                           
  3739                           ; 16 bytes @ 0x2A
  3740  00008A                     	ds	1
  3741  00008B                     ?__get_available_cluster:
  3742                           	opt stack 0
  3743  00008B                     rtcc_read_eeprom@error_found:
  3744                           	opt stack 0
  3745  00008B                     __parse_command_short@cmd:
  3746                           	opt stack 0
  3747  00008B                     flash_partial_read@length:
  3748                           	opt stack 0
  3749  00008B                     ExternalFlash_SectorRead@config:
  3750                           	opt stack 0
  3751  00008B                     __get_available_cluster@first_sector:
  3752                           	opt stack 0
  3753  00008B                     fat_find_file@name:
  3754                           	opt stack 0
  3755                           
  3756                           ; 2 bytes @ 0x2B
  3757  00008B                     	ds	1
  3758  00008C                     ??__parse_format_drive:
  3759  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  3760                           	opt stack 0
  3761  00008C                     __delete_root@deleted_value:
  3762                           	opt stack 0
  3763  00008C                     __write_root@offset:
  3764                           	opt stack 0
  3765  00008C                     __fill_buffer_read_buffer@outBuffer:
  3766                           	opt stack 0
  3767  00008C                     __parse_write_buffer@out_buffer:
  3768                           	opt stack 0
  3769  00008C                     rtcc_read_eeprom@date:
  3770                           	opt stack 0
  3771                           
  3772                           ; 6 bytes @ 0x2C
  3773  00008C                     	ds	1
  3774  00008D                     __display_itoa@len:
  3775                           	opt stack 0
  3776  00008D                     __delete_root@file_number:
  3777                           	opt stack 0
  3778  00008D                     __parse_format_drive@return_value:
  3779                           	opt stack 0
  3780  00008D                     flash_partial_read@data:
  3781                           	opt stack 0
  3782  00008D                     ExternalFlash_SectorWrite@page:
  3783                           	opt stack 0
  3784  00008D                     __get_available_cluster@skip_sector:
  3785                           	opt stack 0
  3786  00008D                     fat_find_file@extension:
  3787                           	opt stack 0
  3788  00008D                     ExternalFlash_SectorRead@sector_addr:
  3789                           	opt stack 0
  3790                           
  3791                           ; 4 bytes @ 0x2D
  3792  00008D                     	ds	1
  3793  00008E                     ??__fill_buffer_read_buffer:
  3794  00008E                     __display_itoa@missing:
  3795                           	opt stack 0
  3796  00008E                     __write_root@file_number:
  3797                           	opt stack 0
  3798  00008E                     __parse_write_buffer@out_idx_ptr:
  3799                           	opt stack 0
  3800                           
  3801                           ; 2 bytes @ 0x2E
  3802  00008E                     	ds	1
  3803  00008F                     ??_MSDWriteHandler:
  3804  00008F                     ??_fat_find_file:
  3805  00008F                     ?__read_fat:
  3806                           	opt stack 0
  3807  00008F                     ?__get_first_cluster:
  3808                           	opt stack 0
  3809  00008F                     __display_itoa@pos:
  3810                           	opt stack 0
  3811  00008F                     __get_available_cluster@cluster:
  3812                           	opt stack 0
  3813  00008F                     __root_is_available@root_sector:
  3814                           	opt stack 0
  3815  00008F                     __read_fat@cluster:
  3816                           	opt stack 0
  3817  00008F                     fat_get_file_information@data:
  3818                           	opt stack 0
  3819  00008F                     __display_startup@line4:
  3820                           	opt stack 0
  3821                           
  3822                           ; 15 bytes @ 0x2F
  3823  00008F                     	ds	1
  3824  000090                     ??__display_charger:
  3825  000090                     ??__display_efficiency:
  3826  000090                     ??__parse_write_buffer:
  3827  000090                     __fill_buffer_read_buffer@start:
  3828                           	opt stack 0
  3829  000090                     __display_inout@line1:
  3830                           	opt stack 0
  3831  000090                     __display_temperature@header:
  3832                           	opt stack 0
  3833                           
  3834                           ; 20 bytes @ 0x30
  3835  000090                     	ds	1
  3836  000091                     fat_find_file@file_number:
  3837                           	opt stack 0
  3838  000091                     ExternalFlash_SectorRead@buffer:
  3839                           	opt stack 0
  3840  000091                     __get_available_cluster@offset:
  3841                           	opt stack 0
  3842  000091                     __root_is_available@offset:
  3843                           	opt stack 0
  3844  000091                     __read_fat@sector:
  3845                           	opt stack 0
  3846  000091                     __get_first_cluster@sector:
  3847                           	opt stack 0
  3848  000091                     __parse_write_buffer@number_of_bytes:
  3849                           	opt stack 0
  3850                           
  3851                           ; 2 bytes @ 0x31
  3852  000091                     	ds	1
  3853  000092                     rtcc_read_eeprom@buffer:
  3854                           	opt stack 0
  3855  000092                     fat_find_file@sector:
  3856                           	opt stack 0
  3857  000092                     fat_get_file_information@root_sector:
  3858                           	opt stack 0
  3859  000092                     __fill_buffer_read_buffer@data_length:
  3860                           	opt stack 0
  3861  000092                     __display_efficiency@header:
  3862                           	opt stack 0
  3863                           
  3864                           ; 19 bytes @ 0x32
  3865  000092                     	ds	1
  3866  000093                     __root_is_available@file_number:
  3867                           	opt stack 0
  3868  000093                     ExternalFlash_SectorRead@page:
  3869                           	opt stack 0
  3870  000093                     __get_available_cluster@sector:
  3871                           	opt stack 0
  3872  000093                     __read_fat@offset:
  3873                           	opt stack 0
  3874  000093                     __get_first_cluster@offset:
  3875                           	opt stack 0
  3876  000093                     __parse_write_buffer@start_byte:
  3877                           	opt stack 0
  3878                           
  3879                           ; 2 bytes @ 0x33
  3880  000093                     	ds	1
  3881  000094                     __root_is_available@first_byte:
  3882                           	opt stack 0
  3883  000094                     fat_find_file@offset:
  3884                           	opt stack 0
  3885  000094                     fat_get_file_information@offset:
  3886                           	opt stack 0
  3887                           
  3888                           ; 2 bytes @ 0x34
  3889  000094                     	ds	1
  3890  000095                     ??_MSDReadHandler:
  3891  000095                     ?__make_cluster_chain:
  3892                           	opt stack 0
  3893  000095                     ?_fat_get_file_size:
  3894                           	opt stack 0
  3895  000095                     __get_available_root_entry@file_number:
  3896                           	opt stack 0
  3897  000095                     __make_cluster_chain@first_cluster:
  3898                           	opt stack 0
  3899  000095                     __read_fat@value:
  3900                           	opt stack 0
  3901  000095                     __get_first_cluster@first_cluster:
  3902                           	opt stack 0
  3903  000095                     __display_usb@usb_on:
  3904                           	opt stack 0
  3905                           
  3906                           ; 16 bytes @ 0x35
  3907  000095                     	ds	1
  3908  000096                     fat_get_file_information@file_number:
  3909                           	opt stack 0
  3910  000096                     __fill_buffer_find_file@inBuffer:
  3911                           	opt stack 0
  3912                           
  3913                           ; 2 bytes @ 0x36
  3914  000096                     	ds	1
  3915  000097                     ?__find_nth_cluster:
  3916                           	opt stack 0
  3917  000097                     __get_first_cluster@file_number:
  3918                           	opt stack 0
  3919  000097                     __write_calibration@addr:
  3920                           	opt stack 0
  3921  000097                     __find_nth_cluster@cluster:
  3922                           	opt stack 0
  3923  000097                     __make_cluster_chain@number_of_clusters:
  3924                           	opt stack 0
  3925  000097                     fat_rename_file@name:
  3926                           	opt stack 0
  3927  000097                     __fill_buffer_get_file_details@inBuffer:
  3928                           	opt stack 0
  3929                           
  3930                           ; 2 bytes @ 0x37
  3931  000097                     	ds	1
  3932  000098                     __fill_buffer_find_file@outBuffer:
  3933                           	opt stack 0
  3934                           
  3935                           ; 2 bytes @ 0x38
  3936  000098                     	ds	1
  3937  000099                     ??_MSDProcessCommandMediaPresent:
  3938  000099                     ??__make_cluster_chain:
  3939  000099                     __write_calibration@ptr:
  3940                           	opt stack 0
  3941  000099                     __find_nth_cluster@n:
  3942                           	opt stack 0
  3943  000099                     fat_get_file_size@sector:
  3944                           	opt stack 0
  3945  000099                     fat_rename_file@extension:
  3946                           	opt stack 0
  3947  000099                     __fill_buffer_get_file_details@outBuffer:
  3948                           	opt stack 0
  3949                           
  3950                           ; 2 bytes @ 0x39
  3951  000099                     	ds	1
  3952  00009A                     ??__fill_buffer_find_file:
  3953  00009A                     __display_outputs@header:
  3954                           	opt stack 0
  3955                           
  3956                           ; 14 bytes @ 0x3A
  3957  00009A                     	ds	1
  3958  00009B                     ??__fill_buffer_get_file_details:
  3959  00009B                     __write_calibration@index:
  3960                           	opt stack 0
  3961  00009B                     fat_rename_file@file_number:
  3962                           	opt stack 0
  3963  00009B                     _MSDProcessCommandMediaPresent$2765:
  3964                           	opt stack 0
  3965  00009B                     __find_nth_cluster@offset:
  3966                           	opt stack 0
  3967  00009B                     __make_cluster_chain@next_offset:
  3968                           	opt stack 0
  3969  00009B                     fat_get_file_size@offset:
  3970                           	opt stack 0
  3971                           
  3972                           ; 2 bytes @ 0x3B
  3973  00009B                     	ds	1
  3974  00009C                     __write_calibration@cntr:
  3975                           	opt stack 0
  3976  00009C                     fat_rename_file@return_code:
  3977                           	opt stack 0
  3978  00009C                     __fill_buffer_get_file_details@file_number:
  3979                           	opt stack 0
  3980                           
  3981                           ; 1 bytes @ 0x3C
  3982  00009C                     	ds	1
  3983  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3984                           	opt stack 0
  3985  00009D                     __find_nth_cluster@sector_in_buffer:
  3986                           	opt stack 0
  3987  00009D                     __make_cluster_chain@minimum_sector:
  3988                           	opt stack 0
  3989  00009D                     fat_get_file_size@file_size:
  3990                           	opt stack 0
  3991  00009D                     fat_rename_file@root:
  3992                           	opt stack 0
  3993                           
  3994                           ; 32 bytes @ 0x3D
  3995  00009D                     	ds	1
  3996  00009E                     __fill_buffer_find_file@cntr:
  3997                           	opt stack 0
  3998  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  3999                           	opt stack 0
  4000  00009E                     __display_startup@line2:
  4001                           	opt stack 0
  4002                           
  4003                           ; 9 bytes @ 0x3E
  4004  00009E                     	ds	1
  4005  00009F                     __find_nth_cluster@sector:
  4006                           	opt stack 0
  4007  00009F                     __make_cluster_chain@different_sector_cluster:
  4008                           	opt stack 0
  4009                           
  4010                           ; 2 bytes @ 0x3F
  4011  00009F                     	ds	2
  4012  0000A1                     __make_cluster_chain@data_changed:
  4013                           	opt stack 0
  4014  0000A1                     fat_get_file_size@file_number:
  4015                           	opt stack 0
  4016  0000A1                     fat_read_from_file_fast@start_byte:
  4017                           	opt stack 0
  4018  0000A1                     fat_modify_file@start_byte:
  4019                           	opt stack 0
  4020                           
  4021                           ; 4 bytes @ 0x41
  4022  0000A1                     	ds	1
  4023  0000A2                     __make_cluster_chain@remaining_clusters:
  4024                           	opt stack 0
  4025  0000A2                     fat_copy_sector_to_buffer@sector:
  4026                           	opt stack 0
  4027  0000A2                     fat_write_sector_from_buffer@sector:
  4028                           	opt stack 0
  4029  0000A2                     MSDProcessCommandMediaPresent@capacity:
  4030                           	opt stack 0
  4031  0000A2                     __display_inout@line2:
  4032                           	opt stack 0
  4033                           
  4034                           ; 18 bytes @ 0x42
  4035  0000A2                     	ds	2
  4036  0000A4                     ??_fat_copy_sector_to_buffer:
  4037  0000A4                     ??_fat_write_sector_from_buffer:
  4038  0000A4                     __make_cluster_chain@sector:
  4039                           	opt stack 0
  4040  0000A4                     __display_temperature@external1:
  4041                           	opt stack 0
  4042                           
  4043                           ; 12 bytes @ 0x44
  4044  0000A4                     	ds	1
  4045  0000A5                     __display_usb@cntr:
  4046                           	opt stack 0
  4047  0000A5                     fat_modify_file@length:
  4048                           	opt stack 0
  4049  0000A5                     fat_read_from_file_fast@length:
  4050                           	opt stack 0
  4051  0000A5                     __display_efficiency@source:
  4052                           	opt stack 0
  4053                           
  4054                           ; 19 bytes @ 0x45
  4055  0000A5                     	ds	1
  4056  0000A6                     MSDProcessCommandMediaPresent@i:
  4057                           	opt stack 0
  4058  0000A6                     __make_cluster_chain@sector_in_buffer:
  4059                           	opt stack 0
  4060                           
  4061                           ; 2 bytes @ 0x46
  4062  0000A6                     	ds	1
  4063  0000A7                     ??_MSDProcessCommand:
  4064  0000A7                     __display_startup@line3:
  4065                           	opt stack 0
  4066  0000A7                     fat_modify_file@data:
  4067                           	opt stack 0
  4068                           
  4069                           ; 2 bytes @ 0x47
  4070  0000A7                     	ds	1
  4071  0000A8                     __display_startup@cntr:
  4072                           	opt stack 0
  4073  0000A8                     __display_outputs@mode:
  4074                           	opt stack 0
  4075  0000A8                     __make_cluster_chain@offset:
  4076                           	opt stack 0
  4077  0000A8                     fat_write_sector_from_buffer@cluster:
  4078                           	opt stack 0
  4079  0000A8                     fat_copy_sector_to_buffer@file_size:
  4080                           	opt stack 0
  4081                           
  4082                           ; 4 bytes @ 0x48
  4083  0000A8                     	ds	1
  4084  0000A9                     ??_fat_modify_file:
  4085  0000A9                     __display_outputs@cntr:
  4086                           	opt stack 0
  4087  0000A9                     fat_read_from_file_fast@data:
  4088                           	opt stack 0
  4089                           
  4090                           ; 2 bytes @ 0x49
  4091  0000A9                     	ds	1
  4092  0000AA                     __make_cluster_chain@next_cluster:
  4093                           	opt stack 0
  4094  0000AA                     fat_write_sector_from_buffer@file_size:
  4095                           	opt stack 0
  4096                           
  4097                           ; 4 bytes @ 0x4A
  4098  0000AA                     	ds	1
  4099  0000AB                     fat_read_from_file_fast@cluster:
  4100                           	opt stack 0
  4101                           
  4102                           ; 2 bytes @ 0x4B
  4103  0000AB                     	ds	1
  4104  0000AC                     ??_MSDTasks:
  4105  0000AC                     fat_create_file@name:
  4106                           	opt stack 0
  4107  0000AC                     fat_delete_file@first_cluster:
  4108                           	opt stack 0
  4109  0000AC                     fat_copy_sector_to_buffer@number_of_clusters:
  4110                           	opt stack 0
  4111  0000AC                     fat_resize_file@new_file_size:
  4112                           	opt stack 0
  4113                           
  4114                           ; 4 bytes @ 0x4C
  4115  0000AC                     	ds	1
  4116  0000AD                     _MSDTasks$2747:
  4117                           	opt stack 0
  4118  0000AD                     fat_read_from_file_fast@cluster_number:
  4119                           	opt stack 0
  4120                           
  4121                           ; 2 bytes @ 0x4D
  4122  0000AD                     	ds	1
  4123  0000AE                     fat_delete_file@file_number:
  4124                           	opt stack 0
  4125  0000AE                     fat_create_file@extension:
  4126                           	opt stack 0
  4127  0000AE                     fat_copy_sector_to_buffer@physical_sector:
  4128                           	opt stack 0
  4129  0000AE                     fat_write_sector_from_buffer@number_of_clusters:
  4130                           	opt stack 0
  4131                           
  4132                           ; 2 bytes @ 0x4E
  4133  0000AE                     	ds	1
  4134  0000AF                     ??_fat_read_from_file_fast:
  4135  0000AF                     _MSDTasks$2748:
  4136                           	opt stack 0
  4137  0000AF                     __parse_file_delete@data:
  4138                           	opt stack 0
  4139                           
  4140                           ; 2 bytes @ 0x4F
  4141  0000AF                     	ds	1
  4142  0000B0                     ??_fat_resize_file:
  4143  0000B0                     fat_write_sector_from_buffer@file_number:
  4144                           	opt stack 0
  4145  0000B0                     fat_copy_sector_to_buffer@cluster:
  4146                           	opt stack 0
  4147  0000B0                     fat_create_file@size:
  4148                           	opt stack 0
  4149  0000B0                     __display_temperature@external2:
  4150                           	opt stack 0
  4151                           
  4152                           ; 12 bytes @ 0x50
  4153  0000B0                     	ds	1
  4154  0000B1                     MSDTasks@i:
  4155                           	opt stack 0
  4156  0000B1                     __parse_file_delete@out_buffer:
  4157                           	opt stack 0
  4158  0000B1                     __parse_buffer_to_sector@data:
  4159                           	opt stack 0
  4160                           
  4161                           ; 2 bytes @ 0x51
  4162  0000B1                     	ds	1
  4163  0000B2                     fat_copy_sector_to_buffer@file_number:
  4164                           	opt stack 0
  4165                           
  4166                           ; 1 bytes @ 0x52
  4167  0000B2                     	ds	1
  4168  0000B3                     __parse_file_delete@out_idx_ptr:
  4169                           	opt stack 0
  4170  0000B3                     __parse_sector_to_buffer@data:
  4171                           	opt stack 0
  4172  0000B3                     __parse_buffer_to_sector@out_buffer:
  4173                           	opt stack 0
  4174                           
  4175                           ; 2 bytes @ 0x53
  4176  0000B3                     	ds	1
  4177  0000B4                     ??_fat_create_file:
  4178  0000B4                     fat_resize_file@old_number_of_clusters:
  4179                           	opt stack 0
  4180  0000B4                     __display_inout@line4:
  4181                           	opt stack 0
  4182                           
  4183                           ; 14 bytes @ 0x54
  4184  0000B4                     	ds	1
  4185  0000B5                     ??__parse_file_delete:
  4186  0000B5                     fat_modify_file@file_number:
  4187                           	opt stack 0
  4188  0000B5                     __parse_sector_to_buffer@out_buffer:
  4189                           	opt stack 0
  4190  0000B5                     __parse_buffer_to_sector@out_idx_ptr:
  4191                           	opt stack 0
  4192                           
  4193                           ; 2 bytes @ 0x55
  4194  0000B5                     	ds	1
  4195  0000B6                     __parse_file_delete@return_value:
  4196                           	opt stack 0
  4197  0000B6                     fat_resize_file@new_number_of_clusters:
  4198                           	opt stack 0
  4199  0000B6                     fat_modify_file@sector:
  4200                           	opt stack 0
  4201                           
  4202                           ; 2 bytes @ 0x56
  4203  0000B6                     	ds	1
  4204  0000B7                     ??__parse_buffer_to_sector:
  4205  0000B7                     __parse_file_delete@file_number:
  4206                           	opt stack 0
  4207  0000B7                     __parse_sector_to_buffer@out_idx_ptr:
  4208                           	opt stack 0
  4209                           
  4210                           ; 2 bytes @ 0x57
  4211  0000B7                     	ds	1
  4212  0000B8                     fat_modify_file@return_code:
  4213                           	opt stack 0
  4214  0000B8                     __parse_buffer_to_sector@return_value:
  4215                           	opt stack 0
  4216  0000B8                     fat_create_file@number_of_clusters:
  4217                           	opt stack 0
  4218  0000B8                     fat_resize_file@first_cluster:
  4219                           	opt stack 0
  4220  0000B8                     __display_efficiency@footer:
  4221                           	opt stack 0
  4222                           
  4223                           ; 14 bytes @ 0x58
  4224  0000B8                     	ds	1
  4225  0000B9                     ??__parse_sector_to_buffer:
  4226  0000B9                     __parse_buffer_to_sector@file_number:
  4227                           	opt stack 0
  4228  0000B9                     fat_modify_file@cluster:
  4229                           	opt stack 0
  4230                           
  4231                           ; 2 bytes @ 0x59
  4232  0000B9                     	ds	1
  4233  0000BA                     fat_resize_file@file_number:
  4234                           	opt stack 0
  4235  0000BA                     __parse_sector_to_buffer@file_number:
  4236                           	opt stack 0
  4237  0000BA                     fat_create_file@first_cluster:
  4238                           	opt stack 0
  4239  0000BA                     __parse_buffer_to_sector@sector:
  4240                           	opt stack 0
  4241                           
  4242                           ; 2 bytes @ 0x5A
  4243  0000BA                     	ds	1
  4244  0000BB                     __parse_sector_to_buffer@return_value:
  4245                           	opt stack 0
  4246  0000BB                     fat_read_from_file_fast@sector:
  4247                           	opt stack 0
  4248  0000BB                     fat_modify_file@offset:
  4249                           	opt stack 0
  4250  0000BB                     fat_resize_file@root:
  4251                           	opt stack 0
  4252                           
  4253                           ; 32 bytes @ 0x5B
  4254  0000BB                     	ds	1
  4255  0000BC                     fat_create_file@file_number:
  4256                           	opt stack 0
  4257  0000BC                     __parse_sector_to_buffer@sector:
  4258                           	opt stack 0
  4259  0000BC                     __display_temperature@internal:
  4260                           	opt stack 0
  4261                           
  4262                           ; 11 bytes @ 0x5C
  4263  0000BC                     	ds	1
  4264  0000BD                     fat_rename_file@cntr:
  4265                           	opt stack 0
  4266  0000BD                     fat_read_from_file_fast@working_cluster:
  4267                           	opt stack 0
  4268  0000BD                     fat_modify_file@number_of_bytes:
  4269                           	opt stack 0
  4270  0000BD                     fat_create_file@root_entry:
  4271                           	opt stack 0
  4272                           
  4273                           ; 32 bytes @ 0x5D
  4274  0000BD                     	ds	1
  4275  0000BE                     __parse_file_rename@data:
  4276                           	opt stack 0
  4277                           
  4278                           ; 2 bytes @ 0x5E
  4279  0000BE                     	ds	1
  4280  0000BF                     fat_read_from_file_fast@offset:
  4281                           	opt stack 0
  4282  0000BF                     fat_modify_file@position:
  4283                           	opt stack 0
  4284                           
  4285                           ; 4 bytes @ 0x5F
  4286  0000BF                     	ds	1
  4287  0000C0                     __parse_file_rename@out_buffer:
  4288                           	opt stack 0
  4289                           
  4290                           ; 2 bytes @ 0x60
  4291  0000C0                     	ds	1
  4292  0000C1                     fat_read_from_file_fast@needed_cluster:
  4293                           	opt stack 0
  4294                           
  4295                           ; 2 bytes @ 0x61
  4296  0000C1                     	ds	1
  4297  0000C2                     __parse_file_rename@out_idx_ptr:
  4298                           	opt stack 0
  4299  0000C2                     __display_inout@line3:
  4300                           	opt stack 0
  4301                           
  4302                           ; 3 bytes @ 0x62
  4303  0000C2                     	ds	1
  4304  0000C3                     fat_read_from_file_fast@read_length:
  4305                           	opt stack 0
  4306  0000C3                     fat_modify_file@root:
  4307                           	opt stack 0
  4308                           
  4309                           ; 32 bytes @ 0x63
  4310  0000C3                     	ds	1
  4311  0000C4                     ??__parse_file_rename:
  4312                           
  4313                           ; 1 bytes @ 0x64
  4314  0000C4                     	ds	1
  4315  0000C5                     __display_inout@cntr:
  4316                           	opt stack 0
  4317  0000C5                     __parse_file_rename@return_value:
  4318                           	opt stack 0
  4319  0000C5                     fat_read_from_file_fast@position:
  4320                           	opt stack 0
  4321                           
  4322                           ; 4 bytes @ 0x65
  4323  0000C5                     	ds	1
  4324  0000C6                     __parse_file_rename@file_number:
  4325                           	opt stack 0
  4326  0000C6                     __display_efficiency@efficiency:
  4327                           	opt stack 0
  4328                           
  4329                           ; 4 bytes @ 0x66
  4330  0000C6                     	ds	1
  4331  0000C7                     __display_temperature@cntr:
  4332                           	opt stack 0
  4333                           
  4334                           ; 1 bytes @ 0x67
  4335  0000C7                     	ds	2
  4336  0000C9                     fat_read_from_file@start_byte:
  4337                           	opt stack 0
  4338                           
  4339                           ; 4 bytes @ 0x69
  4340  0000C9                     	ds	1
  4341  0000CA                     __display_efficiency@panel:
  4342                           	opt stack 0
  4343                           
  4344                           ; 4 bytes @ 0x6A
  4345  0000CA                     	ds	3
  4346  0000CD                     fat_read_from_file@length:
  4347                           	opt stack 0
  4348                           
  4349                           ; 4 bytes @ 0x6D
  4350  0000CD                     	ds	1
  4351  0000CE                     __display_efficiency@battery:
  4352                           	opt stack 0
  4353                           
  4354                           ; 4 bytes @ 0x6E
  4355  0000CE                     	ds	3
  4356  0000D1                     fat_read_from_file@data:
  4357                           	opt stack 0
  4358                           
  4359                           ; 2 bytes @ 0x71
  4360  0000D1                     	ds	1
  4361  0000D2                     __display_efficiency@cntr:
  4362                           	opt stack 0
  4363                           
  4364                           ; 1 bytes @ 0x72
  4365  0000D2                     	ds	1
  4366  0000D3                     ??_display_prepare:
  4367  0000D3                     ??_fat_read_from_file:
  4368                           
  4369                           ; 1 bytes @ 0x73
  4370  0000D3                     	ds	2
  4371  0000D5                     display_prepare@mode:
  4372                           	opt stack 0
  4373                           
  4374                           ; 1 bytes @ 0x75
  4375  0000D5                     	ds	2
  4376  0000D7                     fat_read_from_file@file_number:
  4377                           	opt stack 0
  4378                           
  4379                           ; 1 bytes @ 0x77
  4380  0000D7                     	ds	1
  4381  0000D8                     fat_read_from_file@cluster:
  4382                           	opt stack 0
  4383                           
  4384                           ; 2 bytes @ 0x78
  4385  0000D8                     	ds	2
  4386  0000DA                     fat_read_from_file@cluster_number:
  4387                           	opt stack 0
  4388                           
  4389                           ; 2 bytes @ 0x7A
  4390  0000DA                     	ds	1
  4391  0000DB                     __parse_file_resize@data:
  4392                           	opt stack 0
  4393                           
  4394                           ; 2 bytes @ 0x7B
  4395  0000DB                     	ds	1
  4396  0000DC                     fat_read_from_file@return_code:
  4397                           	opt stack 0
  4398                           
  4399                           ; 1 bytes @ 0x7C
  4400  0000DC                     	ds	1
  4401  0000DD                     fat_copy_file@name:
  4402                           	opt stack 0
  4403  0000DD                     __parse_file_resize@out_buffer:
  4404                           	opt stack 0
  4405  0000DD                     __parse_file_create@data:
  4406                           	opt stack 0
  4407  0000DD                     fat_read_from_file@root:
  4408                           	opt stack 0
  4409                           
  4410                           ; 32 bytes @ 0x7D
  4411  0000DD                     	ds	2
  4412  0000DF                     fat_copy_file@extension:
  4413                           	opt stack 0
  4414  0000DF                     __parse_file_resize@out_idx_ptr:
  4415                           	opt stack 0
  4416  0000DF                     __parse_file_create@out_buffer:
  4417                           	opt stack 0
  4418                           
  4419                           ; 2 bytes @ 0x7F
  4420  0000DF                     	ds	2
  4421  0000E1                     ??__parse_file_resize:
  4422  0000E1                     ??_fat_copy_file:
  4423  0000E1                     __parse_file_create@out_idx_ptr:
  4424                           	opt stack 0
  4425                           
  4426                           ; 2 bytes @ 0x81
  4427  0000E1                     	ds	1
  4428  0000E2                     __parse_file_resize@return_value:
  4429                           	opt stack 0
  4430                           
  4431                           ; 1 bytes @ 0x82
  4432  0000E2                     	ds	1
  4433  0000E3                     ??__parse_file_create:
  4434  0000E3                     __parse_file_resize@file_number:
  4435                           	opt stack 0
  4436  0000E3                     fat_append_to_file@number_of_bytes:
  4437                           	opt stack 0
  4438  0000E3                     __parse_file_modify@data:
  4439                           	opt stack 0
  4440                           
  4441                           ; 2 bytes @ 0x83
  4442  0000E3                     	ds	1
  4443  0000E4                     __parse_file_create@file_number:
  4444                           	opt stack 0
  4445  0000E4                     __parse_file_resize@file_size:
  4446                           	opt stack 0
  4447                           
  4448                           ; 4 bytes @ 0x84
  4449  0000E4                     	ds	1
  4450  0000E5                     fat_append_to_file@data:
  4451                           	opt stack 0
  4452  0000E5                     fat_copy_file@number_of_clusters:
  4453                           	opt stack 0
  4454  0000E5                     __parse_file_modify@out_buffer:
  4455                           	opt stack 0
  4456  0000E5                     __parse_file_create@file_size:
  4457                           	opt stack 0
  4458                           
  4459                           ; 4 bytes @ 0x85
  4460  0000E5                     	ds	2
  4461  0000E7                     __parse_file_modify@out_idx_ptr:
  4462                           	opt stack 0
  4463  0000E7                     fat_append_to_file@new_file_size:
  4464                           	opt stack 0
  4465  0000E7                     fat_copy_file@file_size:
  4466                           	opt stack 0
  4467                           
  4468                           ; 4 bytes @ 0x87
  4469  0000E7                     	ds	2
  4470  0000E9                     ??__parse_file_modify:
  4471                           
  4472                           ; 1 bytes @ 0x89
  4473  0000E9                     	ds	1
  4474  0000EA                     __parse_file_modify@return_value:
  4475                           	opt stack 0
  4476                           
  4477                           ; 1 bytes @ 0x8A
  4478  0000EA                     	ds	1
  4479  0000EB                     fat_copy_file@new_file_number:
  4480                           	opt stack 0
  4481  0000EB                     __parse_file_modify@file_number:
  4482                           	opt stack 0
  4483  0000EB                     fat_append_to_file@old_file_size:
  4484                           	opt stack 0
  4485                           
  4486                           ; 4 bytes @ 0x8B
  4487  0000EB                     	ds	1
  4488  0000EC                     fat_copy_file@return_value:
  4489                           	opt stack 0
  4490  0000EC                     __parse_file_modify@number_of_bytes:
  4491                           	opt stack 0
  4492                           
  4493                           ; 2 bytes @ 0x8C
  4494  0000EC                     	ds	1
  4495  0000ED                     fat_copy_file@sector:
  4496                           	opt stack 0
  4497                           
  4498                           ; 2 bytes @ 0x8D
  4499  0000ED                     	ds	1
  4500  0000EE                     __parse_file_modify@start_byte:
  4501                           	opt stack 0
  4502                           
  4503                           ; 4 bytes @ 0x8E
  4504  0000EE                     	ds	1
  4505  0000EF                     fat_append_to_file@return_code:
  4506                           	opt stack 0
  4507  0000EF                     fat_copy_file@file_number:
  4508                           	opt stack 0
  4509                           
  4510                           ; 1 bytes @ 0x8F
  4511  0000EF                     	ds	1
  4512  0000F0                     fat_append_to_file@file_number:
  4513                           	opt stack 0
  4514  0000F0                     __parse_file_copy@data:
  4515                           	opt stack 0
  4516                           
  4517                           ; 2 bytes @ 0x90
  4518  0000F0                     	ds	1
  4519  0000F1                     __parse_file_append@data:
  4520                           	opt stack 0
  4521                           
  4522                           ; 2 bytes @ 0x91
  4523  0000F1                     	ds	1
  4524  0000F2                     __parse_file_copy@out_buffer:
  4525                           	opt stack 0
  4526                           
  4527                           ; 2 bytes @ 0x92
  4528  0000F2                     	ds	1
  4529  0000F3                     __parse_file_append@out_buffer:
  4530                           	opt stack 0
  4531                           
  4532                           ; 2 bytes @ 0x93
  4533  0000F3                     	ds	1
  4534  0000F4                     __parse_file_copy@out_idx_ptr:
  4535                           	opt stack 0
  4536                           
  4537                           ; 2 bytes @ 0x94
  4538  0000F4                     	ds	1
  4539  0000F5                     __parse_file_append@out_idx_ptr:
  4540                           	opt stack 0
  4541                           
  4542                           ; 2 bytes @ 0x95
  4543  0000F5                     	ds	1
  4544  0000F6                     ??__parse_file_copy:
  4545                           
  4546                           ; 1 bytes @ 0x96
  4547  0000F6                     	ds	1
  4548  0000F7                     ??__parse_file_append:
  4549  0000F7                     __parse_file_copy@return_value:
  4550                           	opt stack 0
  4551                           
  4552                           ; 1 bytes @ 0x97
  4553  0000F7                     	ds	1
  4554  0000F8                     __parse_file_append@return_value:
  4555                           	opt stack 0
  4556  0000F8                     __parse_file_copy@file_number:
  4557                           	opt stack 0
  4558                           
  4559                           ; 1 bytes @ 0x98
  4560  0000F8                     	ds	1
  4561  0000F9                     __parse_file_append@file_number:
  4562                           	opt stack 0
  4563                           
  4564                           ; 1 bytes @ 0x99
  4565  0000F9                     	ds	1
  4566  0000FA                     __parse_file_append@number_of_bytes:
  4567                           	opt stack 0
  4568                           
  4569                           ; 2 bytes @ 0x9A
  4570  0000FA                     	ds	2
  4571  0000FC                     __parse_command_long@length:
  4572                           	opt stack 0
  4573                           
  4574                           ; 1 bytes @ 0x9C
  4575  0000FC                     	ds	1
  4576  0000FD                     ??_api_parse:
  4577  0000FD                     api_prepare@command:
  4578                           	opt stack 0
  4579                           
  4580                           ; 1 bytes @ 0x9D
  4581  0000FD                     	ds	2
  4582  0000FF                     tblptru	equ	0xFF8
  4583                           tblptrh	equ	0xFF7
  4584                           tblptrl	equ	0xFF6
  4585                           tablat	equ	0xFF5
  4586                           postinc0	equ	0xFEE
  4587                           wreg	equ	0xFE8
  4588                           postdec1	equ	0xFE5
  4589                           fsr1h	equ	0xFE2
  4590                           fsr1l	equ	0xFE1
  4591                           
  4592                           ; 1 bytes @ 0x9F
  4593                           
  4594                           	psect	cstackCOMRAM
  4595  00002E                     __pcstackCOMRAM:
  4596                           	opt stack 0
  4597  00002E                     ??_USBStdGetDscHandler:
  4598  00002E                     ??_USBStdGetStatusHandler:
  4599  00002E                     ?i2_USBTransferOnePacket:
  4600                           	opt stack 0
  4601  00002E                     ?i2_ExternalFlash_MediaInitialize:
  4602                           	opt stack 0
  4603  00002E                     USBConfigureEndpoint@direction:
  4604                           	opt stack 0
  4605  00002E                     USBCtrlTrfTxService@byteToSend:
  4606                           	opt stack 0
  4607  00002E                     USBCtrlTrfRxService@i:
  4608                           	opt stack 0
  4609  00002E                     i2USBTransferOnePacket@dir:
  4610                           	opt stack 0
  4611  00002E                     i2USBStallEndpoint@dir:
  4612                           	opt stack 0
  4613  00002E                     i2SYSTEM_Initialize@pll_startup_counter:
  4614                           	opt stack 0
  4615  00002E                     i2ExternalFlash_MediaInitialize@config:
  4616                           	opt stack 0
  4617  00002E                     i2ExternalFlash_MediaDetect@config:
  4618                           	opt stack 0
  4619  00002E                     i2memcpy@d1:
  4620                           	opt stack 0
  4621  00002E                     i2memset@p1:
  4622                           	opt stack 0
  4623                           
  4624                           ; 2 bytes @ 0x0
  4625  00002E                     	ds	1
  4626  00002F                     ??_USBConfigureEndpoint:
  4627  00002F                     ??i2_USBStallEndpoint:
  4628  00002F                     USBCtrlTrfRxService@byteToRead:
  4629                           	opt stack 0
  4630  00002F                     USBCtrlTrfInHandler@lastDTS:
  4631                           	opt stack 0
  4632  00002F                     USBStdGetStatusHandler@p:
  4633                           	opt stack 0
  4634  00002F                     i2USBTransferOnePacket@data:
  4635                           	opt stack 0
  4636                           
  4637                           ; 2 bytes @ 0x1
  4638  00002F                     	ds	1
  4639  000030                     i2SYSTEM_Initialize@pll_startup_counter_3409:
  4640                           	opt stack 0
  4641  000030                     i2memcpy@s1:
  4642                           	opt stack 0
  4643  000030                     i2memset@c:
  4644                           	opt stack 0
  4645                           
  4646                           ; 2 bytes @ 0x2
  4647  000030                     	ds	1
  4648  000031                     i2USBTransferOnePacket@len:
  4649                           	opt stack 0
  4650                           
  4651                           ; 1 bytes @ 0x3
  4652  000031                     	ds	1
  4653  000032                     ??i2_USBTransferOnePacket:
  4654  000032                     i2SYSTEM_Initialize@state:
  4655                           	opt stack 0
  4656  000032                     i2memcpy@n:
  4657                           	opt stack 0
  4658  000032                     i2memset@n:
  4659                           	opt stack 0
  4660                           
  4661                           ; 2 bytes @ 0x4
  4662  000032                     	ds	1
  4663  000033                     USBConfigureEndpoint@EPNum:
  4664                           	opt stack 0
  4665  000033                     i2USBStallEndpoint@ep:
  4666                           	opt stack 0
  4667                           
  4668                           ; 1 bytes @ 0x5
  4669  000033                     	ds	1
  4670  000034                     USBConfigureEndpoint@handle:
  4671                           	opt stack 0
  4672  000034                     i2USBStallEndpoint@p:
  4673                           	opt stack 0
  4674  000034                     i2memcpy@d:
  4675                           	opt stack 0
  4676  000034                     i2memset@p:
  4677                           	opt stack 0
  4678                           
  4679                           ; 2 bytes @ 0x6
  4680  000034                     	ds	2
  4681  000036                     USBEnableEndpoint@options:
  4682                           	opt stack 0
  4683  000036                     i2USBDeviceInit@i:
  4684                           	opt stack 0
  4685  000036                     i2USBTransferOnePacket@ep:
  4686                           	opt stack 0
  4687  000036                     i2memcpy@s:
  4688                           	opt stack 0
  4689                           
  4690                           ; 2 bytes @ 0x8
  4691  000036                     	ds	1
  4692  000037                     USBEnableEndpoint@p:
  4693                           	opt stack 0
  4694  000037                     i2USBTransferOnePacket@handle:
  4695                           	opt stack 0
  4696                           
  4697                           ; 2 bytes @ 0x9
  4698  000037                     	ds	1
  4699  000038                     i2memcpy@tmp:
  4700                           	opt stack 0
  4701                           
  4702                           ; 1 bytes @ 0xA
  4703  000038                     	ds	1
  4704  000039                     ??_USBMSDInit:
  4705  000039                     USBEnableEndpoint@ep:
  4706                           	opt stack 0
  4707  000039                     _USBCheckMSDRequest$2693:
  4708                           	opt stack 0
  4709  000039                     MSDTransferTerminated@handle:
  4710                           	opt stack 0
  4711                           
  4712                           ; 2 bytes @ 0xB
  4713  000039                     	ds	1
  4714  00003A                     
  4715                           ; 1 bytes @ 0xC
  4716  00003A                     	ds	1
  4717  00003B                     _USBCheckMSDRequest$2694:
  4718                           	opt stack 0
  4719  00003B                     _MSDTransferTerminated$2782:
  4720                           	opt stack 0
  4721                           
  4722                           ; 2 bytes @ 0xD
  4723  00003B                     	ds	1
  4724  00003C                     
  4725                           ; 1 bytes @ 0xE
  4726  00003C                     	ds	1
  4727  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  4728                           	opt stack 0
  4729                           
  4730                           ; 2 bytes @ 0xF
  4731  00003D                     	ds	2
  4732  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  4733                           	opt stack 0
  4734                           
  4735                           ; 2 bytes @ 0x11
  4736  00003F                     	ds	2
  4737  000041                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  4738                           	opt stack 0
  4739                           
  4740                           ; 2 bytes @ 0x13
  4741  000041                     	ds	2
  4742  000043                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  4743                           
  4744                           ; 1 bytes @ 0x15
  4745  000043                     	ds	2
  4746  000045                     ??_USBStdFeatureReqHandler:
  4747  000045                     USBStdSetCfgHandler@i:
  4748                           	opt stack 0
  4749                           
  4750                           ; 1 bytes @ 0x17
  4751  000045                     	ds	1
  4752  000046                     USBStdFeatureReqHandler@pUEP:
  4753                           	opt stack 0
  4754                           
  4755                           ; 2 bytes @ 0x18
  4756  000046                     	ds	2
  4757  000048                     USBStdFeatureReqHandler@current_ep_data:
  4758                           	opt stack 0
  4759                           
  4760                           ; 1 bytes @ 0x1A
  4761  000048                     	ds	1
  4762  000049                     USBStdFeatureReqHandler@p:
  4763                           	opt stack 0
  4764                           
  4765                           ; 2 bytes @ 0x1B
  4766  000049                     	ds	2
  4767  00004B                     ??_USBCtrlEPService:
  4768  00004B                     
  4769                           ; 1 bytes @ 0x1D
  4770  00004B                     	ds	1
  4771  00004C                     USBDeviceTasks@i:
  4772                           	opt stack 0
  4773                           
  4774                           ; 1 bytes @ 0x1E
  4775  00004C                     	ds	1
  4776  00004D                     ??_SYS_InterruptHigh:
  4777                           
  4778                           ; 1 bytes @ 0x1F
  4779  00004D                     	ds	14
  4780                           tblptru	equ	0xFF8
  4781                           tblptrh	equ	0xFF7
  4782                           tblptrl	equ	0xFF6
  4783                           tablat	equ	0xFF5
  4784                           postinc0	equ	0xFEE
  4785                           wreg	equ	0xFE8
  4786                           postdec1	equ	0xFE5
  4787                           fsr1h	equ	0xFE2
  4788                           fsr1l	equ	0xFE1
  4789                           
  4790 ;;
  4791 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4792 ;;
  4793 ;; *************** function _main *****************
  4794 ;; Defined at:
  4795 ;;		line 51 in file "main.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;		None
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;		None
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  1    wreg      void 
  4802 ;; Registers used:
  4803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4804 ;; Tracked objects:
  4805 ;;		On entry : 0/0
  4806 ;;		On exit  : 0/0
  4807 ;;		Unchanged: 0/0
  4808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4811 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4812 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4813 ;;Total ram usage:        2 bytes
  4814 ;; Hardware stack levels required when called:   23
  4815 ;; This function calls:
  4816 ;;		_APP_DeviceCustomHIDTasks
  4817 ;;		_APP_DeviceMSDTasks
  4818 ;;		_SYSTEM_Initialize
  4819 ;;		_USBDeviceAttach
  4820 ;;		_USBDeviceInit
  4821 ;;		_adc_calculate_temperature
  4822 ;;		_adc_calibrate
  4823 ;;		_adc_read
  4824 ;;		_buck_get_mode
  4825 ;;		_buck_operate
  4826 ;;		_display_prepare
  4827 ;;		_display_update
  4828 ;;		_i2c_adc_read
  4829 ;;		_i2c_adc_start
  4830 ;;		_i2c_eeprom_tasks
  4831 ;;		_log_collect_data
  4832 ;;		_system_calculate_input_current
  4833 ;;		_system_calculate_input_voltage
  4834 ;;		_system_calculate_output_current
  4835 ;;		_system_calculate_output_voltage
  4836 ;;		_system_init
  4837 ;;		_system_output_off
  4838 ;;		_ui_get_status
  4839 ;;		_ui_run
  4840 ;; This function is called by:
  4841 ;;		Startup code after reset
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           	psect	text0
  4846  00E5E2                     __ptext0:
  4847                           	opt stack 0
  4848  00E5E2                     _main:
  4849                           	opt stack 8
  4850                           
  4851                           ;main.c: 56: system_init();
  4852                           
  4853                           ;incstack = 0
  4854  00E5E2  ECDD  F09B         	call	_system_init	;wreg free
  4855                           
  4856                           ;main.c: 58: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  4857  00E5E6  0E00               	movlw	0
  4858  00E5E8  EC0B  F0BC         	call	_SYSTEM_Initialize
  4859                           
  4860                           ;main.c: 60: USBDeviceInit();
  4861  00E5EC  EC84  F091         	call	_USBDeviceInit	;wreg free
  4862                           
  4863                           ;main.c: 61: USBDeviceAttach();
  4864  00E5F0  ECD4  F0C2         	call	_USBDeviceAttach	;wreg free
  4865  00E5F4                     
  4866                           ;main.c: 64: {;main.c: 66: APP_DeviceMSDTasks();
  4867  00E5F4  ECCA  F0C7         	call	_APP_DeviceMSDTasks	;wreg free
  4868                           
  4869                           ;main.c: 68: if(!os.done)
  4870  00E5F8  0102               	movlb	2	; () banked
  4871  00E5FA  5109               	movf	(_os+9)& (0+255),w,b	;volatile
  4872  00E5FC  A4D8               	btfss	status,2,c
  4873  00E5FE  D7FA               	goto	l893
  4874                           
  4875                           ; BSR set to: 2
  4876  00E600  0004               	clrwdt		;# 
  4877                           
  4878                           ;main.c: 76: if(os.output_voltage<12000)
  4879  00E602  0102               	movlb	2	; () banked
  4880  00E604  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  4881  00E606  D006               	goto	u27690
  4882  00E608  0EE0               	movlw	224
  4883  00E60A  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
  4884  00E60C  0E2E               	movlw	46
  4885  00E60E  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  4886  00E610  B0D8               	btfsc	status,0,c
  4887  00E612  D003               	goto	l895
  4888  00E614                     u27690:
  4889                           
  4890                           ; BSR set to: 2
  4891                           ;main.c: 77: {;main.c: 78: system_output_off(OUTPUT_USB);
  4892  00E614  0E10               	movlw	16
  4893  00E616  ECC5  F0BD         	call	_system_output_off
  4894  00E61A                     l895:
  4895                           
  4896                           ;main.c: 79: };main.c: 80: if(os.output_voltage<-1)
  4897  00E61A  0102               	movlb	2	; () banked
  4898  00E61C  AF28               	btfss	(_os+40)& (0+255),7,b	;volatile
  4899  00E61E  D011               	goto	l896
  4900  00E620  2927               	incf	(_os+39)& (0+255),w,b	;volatile
  4901  00E622  0EFF               	movlw	255
  4902  00E624  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  4903  00E626  B0D8               	btfsc	status,0,c
  4904  00E628  D00C               	goto	l896
  4905                           
  4906                           ; BSR set to: 2
  4907                           ;main.c: 81: {;main.c: 82: system_output_off(OUTPUT_1);
  4908  00E62A  0E01               	movlw	1
  4909  00E62C  ECC5  F0BD         	call	_system_output_off
  4910                           
  4911                           ;main.c: 83: system_output_off(OUTPUT_2);
  4912  00E630  0E02               	movlw	2
  4913  00E632  ECC5  F0BD         	call	_system_output_off
  4914                           
  4915                           ;main.c: 84: system_output_off(OUTPUT_3);
  4916  00E636  0E04               	movlw	4
  4917  00E638  ECC5  F0BD         	call	_system_output_off
  4918                           
  4919                           ;main.c: 85: system_output_off(OUTPUT_4);
  4920  00E63C  0E08               	movlw	8
  4921  00E63E  ECC5  F0BD         	call	_system_output_off
  4922  00E642                     l896:
  4923                           
  4924                           ;main.c: 86: };main.c: 89: i2c_eeprom_tasks();
  4925  00E642  EC26  F0B8         	call	_i2c_eeprom_tasks	;wreg free
  4926                           
  4927                           ;main.c: 92: ui_run();
  4928  00E646  ECDA  F09E         	call	_ui_run	;wreg free
  4929                           
  4930                           ;main.c: 95: os.temperature_onboard_adc += adc_read(ADC_CHANNEL_TEMPERATURE_ONBOARD);
  4931  00E64A  0E00               	movlw	0
  4932  00E64C  ECF4  F0B3         	call	_adc_read
  4933  00E650  0100               	movlb	0	; () banked
  4934  00E652  5160               	movf	?_adc_read& (0+255),w,b
  4935  00E654  0102               	movlb	2	; () banked
  4936  00E656  2734               	addwf	(_os+52)& (0+255),f,b	;volatile
  4937  00E658  0100               	movlb	0	; () banked
  4938  00E65A  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4939  00E65C  0102               	movlb	2	; () banked
  4940  00E65E  2335               	addwfc	(_os+53)& (0+255),f,b	;volatile
  4941                           
  4942                           ;main.c: 96: os.temperature_external_1_adc += adc_read(ADC_CHANNEL_TEMPERATURE_EXTERNAL_
      +                          1);
  4943  00E660  0E01               	movlw	1
  4944  00E662  ECF4  F0B3         	call	_adc_read
  4945  00E666  0100               	movlb	0	; () banked
  4946  00E668  5160               	movf	?_adc_read& (0+255),w,b
  4947  00E66A  0102               	movlb	2	; () banked
  4948  00E66C  2738               	addwf	(_os+56)& (0+255),f,b	;volatile
  4949  00E66E  0100               	movlb	0	; () banked
  4950  00E670  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4951  00E672  0102               	movlb	2	; () banked
  4952  00E674  2339               	addwfc	(_os+57)& (0+255),f,b	;volatile
  4953                           
  4954                           ;main.c: 97: os.temperature_external_2_adc += adc_read(ADC_CHANNEL_TEMPERATURE_EXTERNAL_
      +                          2);
  4955  00E676  0E02               	movlw	2
  4956  00E678  ECF4  F0B3         	call	_adc_read
  4957  00E67C  0100               	movlb	0	; () banked
  4958  00E67E  5160               	movf	?_adc_read& (0+255),w,b
  4959  00E680  0102               	movlb	2	; () banked
  4960  00E682  273C               	addwf	(_os+60)& (0+255),f,b	;volatile
  4961  00E684  0100               	movlb	0	; () banked
  4962  00E686  5161               	movf	(?_adc_read+1)& (0+255),w,b
  4963  00E688  0102               	movlb	2	; () banked
  4964  00E68A  233D               	addwfc	(_os+61)& (0+255),f,b	;volatile
  4965                           
  4966                           ;main.c: 100: switch(os.timeSlot&0b00001111)
  4967  00E68C  D0FE               	goto	l897
  4968  00E68E                     
  4969                           ;main.c: 103: i2c_adc_start(I2C_ADC_OUTPUT_VOLTAGE, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GA
      +                          IN_1);
  4970                           
  4971                           ; BSR set to: 2
  4972  00E68E  0E01               	movlw	1
  4973  00E690  0100               	movlb	0	; () banked
  4974  00E692  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  4975  00E694  0E00               	movlw	0
  4976  00E696  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  4977  00E698  0E00               	movlw	0
  4978  00E69A  ECE2  F0C1         	call	_i2c_adc_start
  4979                           
  4980                           ;main.c: 104: break;
  4981  00E69E  D127               	goto	l899
  4982  00E6A0                     
  4983                           ;main.c: 107: APP_DeviceCustomHIDTasks();
  4984  00E6A0  ECDA  F0AE         	call	_APP_DeviceCustomHIDTasks	;wreg free
  4985                           
  4986                           ;main.c: 111: break;
  4987  00E6A4  D124               	goto	l899
  4988  00E6A6                     
  4989                           ;main.c: 115: os.output_voltage_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  4990  00E6A6  EC98  F0BE         	call	_i2c_adc_read	;wreg free
  4991  00E6AA  0102               	movlb	2	; () banked
  4992  00E6AC  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  4993  00E6AE  0B0F               	andlw	15
  4994  00E6B0  0B03               	andlw	3
  4995  00E6B2  0101               	movlb	1	; () banked
  4996  00E6B4  6FD3               	movwf	??_main& (0+255),b
  4997  00E6B6  6BD4               	clrf	(??_main+1)& (0+255),b
  4998  00E6B8  90D8               	bcf	status,0,c
  4999  00E6BA  37D3               	rlcf	??_main& (0+255),f,b
  5000  00E6BC  37D4               	rlcf	(??_main+1)& (0+255),f,b
  5001  00E6BE  0E1F               	movlw	low (_os+31)
  5002  00E6C0  25D3               	addwf	??_main& (0+255),w,b
  5003  00E6C2  6ED9               	movwf	fsr2l,c
  5004  00E6C4  0E02               	movlw	high (_os+31)
  5005  00E6C6  21D4               	addwfc	(??_main+1)& (0+255),w,b
  5006  00E6C8  6EDA               	movwf	fsr2h,c
  5007  00E6CA  0100               	movlb	0	; () banked
  5008  00E6CC  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  5009  00E6D0  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;main.c: 116: i2c_adc_start(I2C_ADC_INPUT_VOLTAGE, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GAI
      +                          N_1);
  5013  00E6D4  0E01               	movlw	1
  5014  00E6D6  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  5015  00E6D8  0E00               	movlw	0
  5016  00E6DA  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  5017  00E6DC  0E03               	movlw	3
  5018  00E6DE  ECE2  F0C1         	call	_i2c_adc_start
  5019                           
  5020                           ;main.c: 117: system_calculate_output_voltage();
  5021  00E6E2  EC12  F0A3         	call	_system_calculate_output_voltage	;wreg free
  5022                           
  5023                           ;main.c: 118: break;
  5024  00E6E6  D103               	goto	l899
  5025  00E6E8                     
  5026                           ;main.c: 121: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  5027  00E6E8  EC82  F0C8         	call	_ui_get_status	;wreg free
  5028  00E6EC  0A05               	xorlw	5
  5029  00E6EE  A4D8               	btfss	status,2,c
  5030  00E6F0  D0FE               	goto	l899
  5031                           
  5032                           ;main.c: 122: {;main.c: 123: display_prepare(os.display_mode);
  5033  00E6F2  0102               	movlb	2	; () banked
  5034  00E6F4  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  5035  00E6F6  EC24  F0B0         	call	_display_prepare
  5036                           
  5037                           ;main.c: 124: };main.c: 125: break;
  5038  00E6FA  D0F9               	goto	l899
  5039  00E6FC                     
  5040                           ;main.c: 128: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  5041  00E6FC  EC82  F0C8         	call	_ui_get_status	;wreg free
  5042  00E700  0A05               	xorlw	5
  5043  00E702  A4D8               	btfss	status,2,c
  5044  00E704  D0F4               	goto	l899
  5045                           
  5046                           ;main.c: 129: {;main.c: 130: display_update();
  5047  00E706  EC82  F0B6         	call	_display_update	;wreg free
  5048                           
  5049                           ;main.c: 131: };main.c: 132: break;
  5050  00E70A  D0F1               	goto	l899
  5051  00E70C                     
  5052                           ;main.c: 135: os.input_voltage_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc_read();
  5053  00E70C  EC98  F0BE         	call	_i2c_adc_read	;wreg free
  5054  00E710  0102               	movlb	2	; () banked
  5055  00E712  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  5056  00E714  0B0F               	andlw	15
  5057  00E716  0B03               	andlw	3
  5058  00E718  0101               	movlb	1	; () banked
  5059  00E71A  6FD3               	movwf	??_main& (0+255),b
  5060  00E71C  6BD4               	clrf	(??_main+1)& (0+255),b
  5061  00E71E  90D8               	bcf	status,0,c
  5062  00E720  37D3               	rlcf	??_main& (0+255),f,b
  5063  00E722  37D4               	rlcf	(??_main+1)& (0+255),f,b
  5064  00E724  0E0A               	movlw	low (_os+10)
  5065  00E726  25D3               	addwf	??_main& (0+255),w,b
  5066  00E728  6ED9               	movwf	fsr2l,c
  5067  00E72A  0E02               	movlw	high (_os+10)
  5068  00E72C  21D4               	addwfc	(??_main+1)& (0+255),w,b
  5069  00E72E  6EDA               	movwf	fsr2h,c
  5070  00E730  0100               	movlb	0	; () banked
  5071  00E732  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  5072  00E736  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  5073                           
  5074                           ;main.c: 137: {;main.c: 138: i2c_adc_start(I2C_ADC_OUTPUT_CURRENT, I2C_ADC_RESOLUTION_14
      +                          BIT, I2C_ADC_GAIN_1);
  5075                           
  5076                           ; BSR set to: 0
  5077                           
  5078                           ;main.c: 136: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
  5079  00E73A  0E01               	movlw	1
  5080  00E73C  0100               	movlb	0	; () banked
  5081  00E73E  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  5082  00E740  0E00               	movlw	0
  5083  00E742  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  5084  00E744  0E01               	movlw	1
  5085  00E746  ECE2  F0C1         	call	_i2c_adc_start
  5086                           
  5087                           ;main.c: 139: };main.c: 140: system_calculate_input_voltage();
  5088  00E74A  EC83  F0A3         	call	_system_calculate_input_voltage	;wreg free
  5089                           
  5090                           ;main.c: 141: break;
  5091  00E74E  D0CF               	goto	l899
  5092  00E750                     
  5093                           ;main.c: 144: APP_DeviceCustomHIDTasks();
  5094  00E750  ECDA  F0AE         	call	_APP_DeviceCustomHIDTasks	;wreg free
  5095                           
  5096                           ;main.c: 145: break;
  5097  00E754  D0CC               	goto	l899
  5098  00E756                     u27740:
  5099                           
  5100                           ;main.c: 149: {;main.c: 150: os.output_current_adc[(os.timeSlot&0b00110000)>>4] = i2c_ad
      +                          c_read();
  5101  00E756  EC98  F0BE         	call	_i2c_adc_read	;wreg free
  5102  00E75A  0102               	movlb	2	; () banked
  5103  00E75C  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  5104  00E75E  0B0F               	andlw	15
  5105  00E760  0B03               	andlw	3
  5106  00E762  0101               	movlb	1	; () banked
  5107  00E764  6FD3               	movwf	??_main& (0+255),b
  5108  00E766  6BD4               	clrf	(??_main+1)& (0+255),b
  5109  00E768  90D8               	bcf	status,0,c
  5110  00E76A  37D3               	rlcf	??_main& (0+255),f,b
  5111  00E76C  37D4               	rlcf	(??_main+1)& (0+255),f,b
  5112  00E76E  0E29               	movlw	low (_os+41)
  5113  00E770  25D3               	addwf	??_main& (0+255),w,b
  5114  00E772  6ED9               	movwf	fsr2l,c
  5115  00E774  0E02               	movlw	high (_os+41)
  5116  00E776  21D4               	addwfc	(??_main+1)& (0+255),w,b
  5117  00E778  6EDA               	movwf	fsr2h,c
  5118  00E77A  0100               	movlb	0	; () banked
  5119  00E77C  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  5120  00E780  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;main.c: 151: i2c_adc_start(I2C_ADC_INPUT_CURRENT, I2C_ADC_RESOLUTION_14BIT, I2C_ADC_GAI
      +                          N_1);
  5124  00E784  0E01               	movlw	1
  5125  00E786  6F6A               	movwf	i2c_adc_start@resolution& (0+255),b
  5126  00E788  0E00               	movlw	0
  5127  00E78A  6F6B               	movwf	i2c_adc_start@gain& (0+255),b
  5128  00E78C  0E02               	movlw	2
  5129  00E78E  ECE2  F0C1         	call	_i2c_adc_start
  5130                           
  5131                           ;main.c: 152: system_calculate_output_current();
  5132  00E792  EC7E  F096         	call	_system_calculate_output_current	;wreg free
  5133                           
  5134                           ;main.c: 153: };main.c: 154: break;
  5135  00E796  D0AB               	goto	l899
  5136  00E798                     
  5137                           ;main.c: 157: APP_DeviceCustomHIDTasks();
  5138  00E798  ECDA  F0AE         	call	_APP_DeviceCustomHIDTasks	;wreg free
  5139                           
  5140                           ;main.c: 158: log_collect_data();
  5141  00E79C  ECD5  F078         	call	_log_collect_data	;wreg free
  5142                           
  5143                           ;main.c: 164: break;
  5144  00E7A0  D0A6               	goto	l899
  5145  00E7A2                     u27750:
  5146                           
  5147                           ;main.c: 168: {;main.c: 169: os.input_current_adc[(os.timeSlot&0b00110000)>>4] = i2c_adc
      +                          _read();
  5148  00E7A2  EC98  F0BE         	call	_i2c_adc_read	;wreg free
  5149  00E7A6  0102               	movlb	2	; () banked
  5150  00E7A8  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
  5151  00E7AA  0B0F               	andlw	15
  5152  00E7AC  0B03               	andlw	3
  5153  00E7AE  0101               	movlb	1	; () banked
  5154  00E7B0  6FD3               	movwf	??_main& (0+255),b
  5155  00E7B2  6BD4               	clrf	(??_main+1)& (0+255),b
  5156  00E7B4  90D8               	bcf	status,0,c
  5157  00E7B6  37D3               	rlcf	??_main& (0+255),f,b
  5158  00E7B8  37D4               	rlcf	(??_main+1)& (0+255),f,b
  5159  00E7BA  0E14               	movlw	low (_os+20)
  5160  00E7BC  25D3               	addwf	??_main& (0+255),w,b
  5161  00E7BE  6ED9               	movwf	fsr2l,c
  5162  00E7C0  0E02               	movlw	high (_os+20)
  5163  00E7C2  21D4               	addwfc	(??_main+1)& (0+255),w,b
  5164  00E7C4  6EDA               	movwf	fsr2h,c
  5165  00E7C6  0100               	movlb	0	; () banked
  5166  00E7C8  C065  FFDE         	movff	?_i2c_adc_read,postinc2
  5167  00E7CC  C066  FFDD         	movff	?_i2c_adc_read+1,postdec2
  5168                           
  5169                           ;main.c: 170: system_calculate_input_current();
  5170  00E7D0  EC10  F097         	call	_system_calculate_input_current	;wreg free
  5171                           
  5172                           ;main.c: 171: };main.c: 172: break;
  5173  00E7D4  D08C               	goto	l899
  5174  00E7D6                     
  5175                           ;main.c: 175: buck_operate();
  5176  00E7D6  ECBF  F0BC         	call	_buck_operate	;wreg free
  5177                           
  5178                           ;main.c: 176: break;
  5179  00E7DA  D089               	goto	l899
  5180  00E7DC                     
  5181                           ;main.c: 180: os.temperature_onboard = adc_calculate_temperature(os.temperature_onboard_
      +                          adc, CALIBRATION_INDEX_ONBOARD_TEMPERATURE);
  5182  00E7DC  C234  F06C         	movff	_os+52,adc_calculate_temperature@adc_value	;volatile
  5183  00E7E0  C235  F06D         	movff	_os+53,adc_calculate_temperature@adc_value+1	;volatile
  5184  00E7E4  0E04               	movlw	4
  5185  00E7E6  0100               	movlb	0	; () banked
  5186  00E7E8  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  5187  00E7EA  ECD2  F09F         	call	_adc_calculate_temperature	;wreg free
  5188  00E7EE  C06C  F236         	movff	?_adc_calculate_temperature,_os+54	;volatile
  5189  00E7F2  C06D  F237         	movff	?_adc_calculate_temperature+1,_os+55	;volatile
  5190                           
  5191                           ;main.c: 181: os.temperature_onboard_adc = 0;
  5192  00E7F6  0E00               	movlw	0
  5193  00E7F8  0102               	movlb	2	; () banked
  5194  00E7FA  6F35               	movwf	(_os+53)& (0+255),b	;volatile
  5195  00E7FC  0E00               	movlw	0
  5196  00E7FE  6F34               	movwf	(_os+52)& (0+255),b	;volatile
  5197                           
  5198                           ; BSR set to: 2
  5199                           ;main.c: 182: os.temperature_external_1 = adc_calculate_temperature(os.temperature_exter
      +                          nal_1_adc, CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_1);
  5200  00E800  C238  F06C         	movff	_os+56,adc_calculate_temperature@adc_value	;volatile
  5201  00E804  C239  F06D         	movff	_os+57,adc_calculate_temperature@adc_value+1	;volatile
  5202  00E808  0E05               	movlw	5
  5203  00E80A  0100               	movlb	0	; () banked
  5204  00E80C  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  5205  00E80E  ECD2  F09F         	call	_adc_calculate_temperature	;wreg free
  5206  00E812  C06C  F23A         	movff	?_adc_calculate_temperature,_os+58	;volatile
  5207  00E816  C06D  F23B         	movff	?_adc_calculate_temperature+1,_os+59	;volatile
  5208                           
  5209                           ;main.c: 183: os.temperature_external_1_adc = 0;
  5210  00E81A  0E00               	movlw	0
  5211  00E81C  0102               	movlb	2	; () banked
  5212  00E81E  6F39               	movwf	(_os+57)& (0+255),b	;volatile
  5213  00E820  0E00               	movlw	0
  5214  00E822  6F38               	movwf	(_os+56)& (0+255),b	;volatile
  5215                           
  5216                           ; BSR set to: 2
  5217                           ;main.c: 184: os.temperature_external_2 = adc_calculate_temperature(os.temperature_exter
      +                          nal_2_adc, CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_2);
  5218  00E824  C23C  F06C         	movff	_os+60,adc_calculate_temperature@adc_value	;volatile
  5219  00E828  C23D  F06D         	movff	_os+61,adc_calculate_temperature@adc_value+1	;volatile
  5220  00E82C  0E06               	movlw	6
  5221  00E82E  0100               	movlb	0	; () banked
  5222  00E830  6F6E               	movwf	adc_calculate_temperature@calibration& (0+255),b
  5223  00E832  ECD2  F09F         	call	_adc_calculate_temperature	;wreg free
  5224  00E836  C06C  F23E         	movff	?_adc_calculate_temperature,_os+62	;volatile
  5225  00E83A  C06D  F23F         	movff	?_adc_calculate_temperature+1,_os+63	;volatile
  5226                           
  5227                           ;main.c: 185: os.temperature_external_2_adc = 0;
  5228  00E83E  0E00               	movlw	0
  5229  00E840  0102               	movlb	2	; () banked
  5230  00E842  6F3D               	movwf	(_os+61)& (0+255),b	;volatile
  5231  00E844  0E00               	movlw	0
  5232  00E846  6F3C               	movwf	(_os+60)& (0+255),b	;volatile
  5233                           
  5234                           ; BSR set to: 2
  5235                           ;main.c: 186: adc_calibrate();
  5236  00E848  EC52  F0C8         	call	_adc_calibrate	;wreg free
  5237                           
  5238                           ;main.c: 188: if(os.temperature_onboard>3000)
  5239  00E84C  0102               	movlb	2	; () banked
  5240  00E84E  BF37               	btfsc	(_os+55)& (0+255),7,b	;volatile
  5241  00E850  D008               	goto	l922
  5242  00E852  0EB9               	movlw	185
  5243  00E854  5D36               	subwf	(_os+54)& (0+255),w,b	;volatile
  5244  00E856  0E0B               	movlw	11
  5245  00E858  5937               	subwfb	(_os+55)& (0+255),w,b	;volatile
  5246  00E85A  A0D8               	btfss	status,0,c
  5247  00E85C  D002               	goto	l922
  5248                           
  5249                           ; BSR set to: 2
  5250                           ;main.c: 189: {;main.c: 190: LATDbits.LD1 = 1;
  5251  00E85E  828C               	bsf	3980,1,c	;volatile
  5252                           
  5253                           ;main.c: 191: }
  5254  00E860  D008               	goto	l924
  5255  00E862                     l922:
  5256                           
  5257                           ; BSR set to: 2
  5258                           ;main.c: 192: else if(os.temperature_onboard<2500)
  5259                           
  5260                           ; BSR set to: 2
  5261  00E862  BF37               	btfsc	(_os+55)& (0+255),7,b	;volatile
  5262  00E864  D005               	goto	u27770
  5263  00E866  0EC4               	movlw	196
  5264  00E868  5D36               	subwf	(_os+54)& (0+255),w,b	;volatile
  5265  00E86A  0E09               	movlw	9
  5266  00E86C  5937               	subwfb	(_os+55)& (0+255),w,b	;volatile
  5267  00E86E  A0D8               	btfss	status,0,c
  5268  00E870                     u27770:
  5269                           
  5270                           ; BSR set to: 2
  5271                           ;main.c: 193: {;main.c: 194: LATDbits.LD1 = 0;
  5272  00E870  928C               	bcf	3980,1,c	;volatile
  5273  00E872                     l924:
  5274                           
  5275                           ; BSR set to: 2
  5276                           ;main.c: 195: };main.c: 196: display_prepare(os.display_mode);
  5277                           
  5278                           ; BSR set to: 2
  5279                           
  5280                           ; BSR set to: 2
  5281  00E872  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  5282  00E874  EC24  F0B0         	call	_display_prepare
  5283                           
  5284                           ;main.c: 197: break;
  5285  00E878  D03A               	goto	l899
  5286  00E87A                     
  5287                           ;main.c: 200: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  5288  00E87A  EC82  F0C8         	call	_ui_get_status	;wreg free
  5289  00E87E  0A05               	xorlw	5
  5290  00E880  A4D8               	btfss	status,2,c
  5291  00E882  D035               	goto	l899
  5292                           
  5293                           ;main.c: 201: {;main.c: 202: display_update();
  5294  00E884  EC82  F0B6         	call	_display_update	;wreg free
  5295                           
  5296                           ;main.c: 205: }
  5297                           
  5298                           ;main.c: 203: };main.c: 204: break;
  5299  00E888  D032               	goto	l899
  5300  00E88A                     l897:
  5301  00E88A  0102               	movlb	2	; () banked
  5302  00E88C  5108               	movf	(_os+8)& (0+255),w,b	;volatile
  5303  00E88E  0B0F               	andlw	15
  5304  00E890  0101               	movlb	1	; () banked
  5305  00E892  6FD3               	movwf	??_main& (0+255),b
  5306  00E894  6BD4               	clrf	(??_main+1)& (0+255),b
  5307                           
  5308                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5309                           ; Switch size 1, requested type "space"
  5310                           ; Number of cases is 1, Range of values is 0 to 0
  5311                           ; switch strategies available:
  5312                           ; Name         Instructions Cycles
  5313                           ; simple_byte            4     3 (average)
  5314                           ;	Chosen strategy is simple_byte
  5315  00E896  51D4               	movf	(??_main+1)& (0+255),w,b
  5316  00E898  0A00               	xorlw	0	; case 0
  5317  00E89A  A4D8               	btfss	status,2,c
  5318  00E89C  D028               	goto	l899
  5319                           
  5320                           ; BSR set to: 1
  5321                           ; Switch size 1, requested type "space"
  5322                           ; Number of cases is 13, Range of values is 0 to 15
  5323                           ; switch strategies available:
  5324                           ; Name         Instructions Cycles
  5325                           ; simple_byte           40    21 (average)
  5326                           ;	Chosen strategy is simple_byte
  5327  00E89E  51D3               	movf	??_main& (0+255),w,b
  5328  00E8A0  0A00               	xorlw	0	; case 0
  5329  00E8A2  B4D8               	btfsc	status,2,c
  5330  00E8A4  D6F4               	goto	l898
  5331  00E8A6  0A01               	xorlw	1	; case 1
  5332  00E8A8  B4D8               	btfsc	status,2,c
  5333  00E8AA  D6FA               	goto	l900
  5334  00E8AC  0A02               	xorlw	2	; case 3
  5335  00E8AE  B4D8               	btfsc	status,2,c
  5336  00E8B0  D6FA               	goto	l901
  5337  00E8B2  0A07               	xorlw	7	; case 4
  5338  00E8B4  B4D8               	btfsc	status,2,c
  5339  00E8B6  D718               	goto	l902
  5340  00E8B8  0A01               	xorlw	1	; case 5
  5341  00E8BA  B4D8               	btfsc	status,2,c
  5342  00E8BC  D71F               	goto	l904
  5343  00E8BE  0A03               	xorlw	3	; case 6
  5344  00E8C0  B4D8               	btfsc	status,2,c
  5345  00E8C2  D724               	goto	l906
  5346  00E8C4  0A0E               	xorlw	14	; case 8
  5347  00E8C6  B4D8               	btfsc	status,2,c
  5348  00E8C8  D743               	goto	l910
  5349  00E8CA  0A01               	xorlw	1	; case 9
  5350  00E8CC  B4D8               	btfsc	status,2,c
  5351  00E8CE  D743               	goto	u27740
  5352  00E8D0  0A02               	xorlw	2	; case 11
  5353  00E8D2  B4D8               	btfsc	status,2,c
  5354  00E8D4  D761               	goto	l915
  5355  00E8D6  0A07               	xorlw	7	; case 12
  5356  00E8D8  B4D8               	btfsc	status,2,c
  5357  00E8DA  D763               	goto	u27750
  5358  00E8DC  0A01               	xorlw	1	; case 13
  5359  00E8DE  B4D8               	btfsc	status,2,c
  5360  00E8E0  D77A               	goto	l920
  5361  00E8E2  0A03               	xorlw	3	; case 14
  5362  00E8E4  B4D8               	btfsc	status,2,c
  5363  00E8E6  D77A               	goto	l921
  5364  00E8E8  0A01               	xorlw	1	; case 15
  5365  00E8EA  B4D8               	btfsc	status,2,c
  5366  00E8EC  D7C6               	goto	l925
  5367  00E8EE                     l899:
  5368                           
  5369                           ;main.c: 206: os.done = 1;
  5370                           
  5371                           ; BSR set to: 1
  5372  00E8EE  0E01               	movlw	1
  5373  00E8F0  0102               	movlb	2	; () banked
  5374  00E8F2  6F09               	movwf	(_os+9)& (0+255),b	;volatile
  5375                           
  5376                           ; BSR set to: 2
  5377                           
  5378                           ; BSR set to: 2
  5379  00E8F4  D67F               	goto	l893
  5380  00E8F6                     __end_of_main:
  5381                           	opt stack 0
  5382                           tblptru	equ	0xFF8
  5383                           tblptrh	equ	0xFF7
  5384                           tblptrl	equ	0xFF6
  5385                           tablat	equ	0xFF5
  5386                           postinc0	equ	0xFEE
  5387                           wreg	equ	0xFE8
  5388                           postdec1	equ	0xFE5
  5389                           fsr1h	equ	0xFE2
  5390                           fsr1l	equ	0xFE1
  5391                           postinc2	equ	0xFDE
  5392                           postdec2	equ	0xFDD
  5393                           fsr2h	equ	0xFDA
  5394                           fsr2l	equ	0xFD9
  5395                           status	equ	0xFD8
  5396                           
  5397 ;; *************** function _ui_run *****************
  5398 ;; Defined at:
  5399 ;;		line 335 in file "ui.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;		None
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;		None
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  1    wreg      void 
  5406 ;; Registers used:
  5407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5417 ;;Total ram usage:        0 bytes
  5418 ;; Hardware stack levels used:    1
  5419 ;; Hardware stack levels required when called:   15
  5420 ;; This function calls:
  5421 ;;		__ui_encoder
  5422 ;;		_i2c_digipot_backlight
  5423 ;;		_i2c_digipot_reset_off
  5424 ;;		_i2c_digipot_reset_on
  5425 ;;		_i2c_display_send_init_sequence
  5426 ;;		_system_encoder_disable
  5427 ;;		_system_encoder_enable
  5428 ;;		_ui_init
  5429 ;; This function is called by:
  5430 ;;		_main
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           	psect	text1
  5435  013DB4                     __ptext1:
  5436                           	opt stack 0
  5437  013DB4                     _ui_run:
  5438                           	opt stack 15
  5439                           
  5440                           ;ui.c: 337: switch(userInterfaceStatus)
  5441                           
  5442                           ; BSR set to: 2
  5443                           ;incstack = 0
  5444  013DB4  D066               	goto	l1631
  5445  013DB6                     
  5446                           ;ui.c: 340: if (os.buttonCount!=0)
  5447  013DB6  0102               	movlb	2	; () banked
  5448  013DB8  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5449  013DBA  B4D8               	btfsc	status,2,c
  5450  013DBC  0012               	return	
  5451                           
  5452                           ; BSR set to: 2
  5453                           ;ui.c: 341: {;ui.c: 342: ui_init();
  5454  013DBE  ECB6  F0C7         	call	_ui_init	;wreg free
  5455                           
  5456                           ;ui.c: 343: os.buttonCount = 0;
  5457  013DC2  0E00               	movlw	0
  5458  013DC4  0102               	movlb	2	; () banked
  5459  013DC6  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  5460                           
  5461                           ; BSR set to: 2
  5462                           ;ui.c: 344: };ui.c: 345: break;
  5463  013DC8  0012               	return	
  5464  013DCA                     l1635:
  5465                           
  5466                           ; BSR set to: 1
  5467                           ;ui.c: 354: LATDbits.LD0 = 0;
  5468  013DCA  908C               	bcf	3980,0,c	;volatile
  5469                           
  5470                           ; BSR set to: 1
  5471                           ;ui.c: 356: system_ui_inactive_count = 0;
  5472  013DCC  0E00               	movlw	0
  5473  013DCE  0102               	movlb	2	; () banked
  5474  013DD0  6FBC               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  5475  013DD2  0E00               	movlw	0
  5476  013DD4  6FBB               	movwf	_system_ui_inactive_count& (0+255),b
  5477                           
  5478                           ;ui.c: 357: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  5479  013DD6  0E02               	movlw	2
  5480  013DD8  0101               	movlb	1	; () banked
  5481  013DDA  6FF2               	movwf	_userInterfaceStatus& (0+255),b
  5482                           
  5483                           ;ui.c: 358: break;
  5484  013DDC  0012               	return	
  5485  013DDE                     
  5486                           ; BSR set to: 1
  5487                           ;ui.c: 362: i2c_digipot_reset_on();
  5488                           
  5489                           ; BSR set to: 1
  5490  013DDE  EC23  F0C5         	call	_i2c_digipot_reset_on	;wreg free
  5491                           
  5492                           ;ui.c: 364: system_ui_inactive_count = 0;
  5493  013DE2  0E00               	movlw	0
  5494  013DE4  0102               	movlb	2	; () banked
  5495  013DE6  6FBC               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  5496  013DE8  0E00               	movlw	0
  5497  013DEA  6FBB               	movwf	_system_ui_inactive_count& (0+255),b
  5498                           
  5499                           ; BSR set to: 2
  5500                           ;ui.c: 365: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  5501  013DEC  0E03               	movlw	3
  5502  013DEE  0101               	movlb	1	; () banked
  5503  013DF0  6FF2               	movwf	_userInterfaceStatus& (0+255),b
  5504                           
  5505                           ;ui.c: 366: break;
  5506  013DF2  0012               	return	
  5507  013DF4                     
  5508                           ; BSR set to: 1
  5509                           ;ui.c: 369: ++system_ui_inactive_count;
  5510                           
  5511                           ; BSR set to: 1
  5512  013DF4  0102               	movlb	2	; () banked
  5513  013DF6  4BBB               	infsnz	_system_ui_inactive_count& (0+255),f,b
  5514  013DF8  2BBC               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  5515                           
  5516                           ; BSR set to: 2
  5517                           ;ui.c: 371: if (system_ui_inactive_count>3)
  5518  013DFA  51BC               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  5519  013DFC  E104               	bnz	u27280
  5520  013DFE  0E04               	movlw	4
  5521  013E00  5DBB               	subwf	_system_ui_inactive_count& (0+255),w,b
  5522  013E02  A0D8               	btfss	status,0,c
  5523  013E04  0012               	return	
  5524  013E06                     u27280:
  5525                           
  5526                           ; BSR set to: 2
  5527                           ;ui.c: 372: {;ui.c: 373: i2c_digipot_reset_off();
  5528  013E06  EC36  F0C5         	call	_i2c_digipot_reset_off	;wreg free
  5529                           
  5530                           ;ui.c: 374: system_ui_inactive_count = 0;
  5531  013E0A  0E00               	movlw	0
  5532  013E0C  0102               	movlb	2	; () banked
  5533  013E0E  6FBC               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  5534  013E10  0E00               	movlw	0
  5535  013E12  6FBB               	movwf	_system_ui_inactive_count& (0+255),b
  5536                           
  5537                           ; BSR set to: 2
  5538                           ;ui.c: 375: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  5539  013E14  0E04               	movlw	4
  5540  013E16  0101               	movlb	1	; () banked
  5541  013E18  6FF2               	movwf	_userInterfaceStatus& (0+255),b
  5542                           
  5543                           ; BSR set to: 1
  5544                           ;ui.c: 376: };ui.c: 377: break;
  5545  013E1A  0012               	return	
  5546  013E1C                     
  5547                           ; BSR set to: 1
  5548                           ;ui.c: 381: i2c_display_send_init_sequence();
  5549                           
  5550                           ; BSR set to: 1
  5551  013E1C  ECAE  F0C3         	call	_i2c_display_send_init_sequence	;wreg free
  5552                           
  5553                           ;ui.c: 383: i2c_digipot_backlight(150);
  5554  013E20  0E96               	movlw	150
  5555  013E22  EC37  F0C4         	call	_i2c_digipot_backlight
  5556                           
  5557                           ;ui.c: 385: system_encoder_enable();
  5558  013E26  ECD3  F0C7         	call	_system_encoder_enable	;wreg free
  5559                           
  5560                           ;ui.c: 387: system_ui_inactive_count = 0;
  5561  013E2A  0E00               	movlw	0
  5562  013E2C  0102               	movlb	2	; () banked
  5563  013E2E  6FBC               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  5564  013E30  0E00               	movlw	0
  5565  013E32  6FBB               	movwf	_system_ui_inactive_count& (0+255),b
  5566                           
  5567                           ; BSR set to: 2
  5568                           ;ui.c: 388: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  5569  013E34  0E05               	movlw	5
  5570  013E36  0101               	movlb	1	; () banked
  5571  013E38  6FF2               	movwf	_userInterfaceStatus& (0+255),b
  5572                           
  5573                           ;ui.c: 389: break;
  5574  013E3A  0012               	return	
  5575  013E3C                     
  5576                           ; BSR set to: 1
  5577                           ;ui.c: 392: if (os.encoderCount==0 && os.buttonCount==0)
  5578                           
  5579                           ; BSR set to: 1
  5580  013E3C  0102               	movlb	2	; () banked
  5581  013E3E  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  5582  013E40  A4D8               	btfss	status,2,c
  5583  013E42  D017               	goto	l1641
  5584                           
  5585                           ; BSR set to: 2
  5586  013E44  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  5587  013E46  A4D8               	btfss	status,2,c
  5588  013E48  D014               	goto	l1641
  5589                           
  5590                           ; BSR set to: 2
  5591                           ;ui.c: 393: {;ui.c: 394: ++system_ui_inactive_count;
  5592  013E4A  4BBB               	infsnz	_system_ui_inactive_count& (0+255),f,b
  5593  013E4C  2BBC               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  5594                           
  5595                           ; BSR set to: 2
  5596                           ;ui.c: 395: if(system_ui_inactive_count > 2000)
  5597  013E4E  0ED1               	movlw	209
  5598  013E50  5DBB               	subwf	_system_ui_inactive_count& (0+255),w,b
  5599  013E52  0E07               	movlw	7
  5600  013E54  59BC               	subwfb	(_system_ui_inactive_count+1)& (0+255),w,b
  5601  013E56  A0D8               	btfss	status,0,c
  5602  013E58  0012               	return	
  5603                           
  5604                           ; BSR set to: 2
  5605                           ;ui.c: 396: {;ui.c: 398: system_encoder_disable();
  5606  013E5A  EC7F  F0C8         	call	_system_encoder_disable	;wreg free
  5607                           
  5608                           ;ui.c: 400: LATDbits.LD0 = 1;
  5609  013E5E  808C               	bsf	3980,0,c	;volatile
  5610                           
  5611                           ;ui.c: 403: system_ui_inactive_count = 0;
  5612  013E60  0E00               	movlw	0
  5613  013E62  0102               	movlb	2	; () banked
  5614  013E64  6FBC               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  5615  013E66  0E00               	movlw	0
  5616  013E68  6FBB               	movwf	_system_ui_inactive_count& (0+255),b
  5617                           
  5618                           ; BSR set to: 2
  5619                           ;ui.c: 404: userInterfaceStatus = USER_INTERFACE_STATUS_OFF;
  5620  013E6A  0E00               	movlw	0
  5621  013E6C  0101               	movlb	1	; () banked
  5622  013E6E  6FF2               	movwf	_userInterfaceStatus& (0+255),b
  5623                           
  5624                           ; BSR set to: 1
  5625                           ;ui.c: 405: };ui.c: 406: }
  5626  013E70  0012               	return	
  5627  013E72                     l1641:
  5628                           
  5629                           ;ui.c: 407: else;ui.c: 408: {;ui.c: 409: system_ui_inactive_count = 0;
  5630                           
  5631                           ; BSR set to: 1
  5632  013E72  0E00               	movlw	0
  5633  013E74  0102               	movlb	2	; () banked
  5634  013E76  6FBC               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  5635  013E78  0E00               	movlw	0
  5636  013E7A  6FBB               	movwf	_system_ui_inactive_count& (0+255),b
  5637                           
  5638                           ; BSR set to: 2
  5639                           ;ui.c: 410: _ui_encoder();
  5640  013E7C  EC82  F06F         	call	__ui_encoder	;wreg free
  5641                           
  5642                           ;ui.c: 413: }
  5643                           
  5644                           ;ui.c: 411: };ui.c: 412: break;
  5645  013E80  0012               	return	
  5646  013E82                     l1631:
  5647  013E82  0101               	movlb	1	; () banked
  5648  013E84  51F2               	movf	_userInterfaceStatus& (0+255),w,b
  5649                           
  5650                           ; Switch size 1, requested type "space"
  5651                           ; Number of cases is 6, Range of values is 0 to 5
  5652                           ; switch strategies available:
  5653                           ; Name         Instructions Cycles
  5654                           ; simple_byte           19    10 (average)
  5655                           ;	Chosen strategy is simple_byte
  5656  013E86  0A00               	xorlw	0	; case 0
  5657  013E88  B4D8               	btfsc	status,2,c
  5658  013E8A  D795               	goto	l1632
  5659  013E8C  0A01               	xorlw	1	; case 1
  5660  013E8E  B4D8               	btfsc	status,2,c
  5661  013E90  D79C               	goto	l1635
  5662  013E92  0A03               	xorlw	3	; case 2
  5663  013E94  B4D8               	btfsc	status,2,c
  5664  013E96  D7A3               	goto	l1636
  5665  013E98  0A01               	xorlw	1	; case 3
  5666  013E9A  B4D8               	btfsc	status,2,c
  5667  013E9C  D7AB               	goto	l1637
  5668  013E9E  0A07               	xorlw	7	; case 4
  5669  013EA0  B4D8               	btfsc	status,2,c
  5670  013EA2  D7BC               	goto	l1639
  5671  013EA4  0A01               	xorlw	1	; case 5
  5672  013EA6  A4D8               	btfss	status,2,c
  5673  013EA8  0012               	return	
  5674  013EAA  D7C8               	goto	l1640
  5675  013EAC                     __end_of_ui_run:
  5676                           	opt stack 0
  5677                           tblptru	equ	0xFF8
  5678                           tblptrh	equ	0xFF7
  5679                           tblptrl	equ	0xFF6
  5680                           tablat	equ	0xFF5
  5681                           postinc0	equ	0xFEE
  5682                           wreg	equ	0xFE8
  5683                           postdec1	equ	0xFE5
  5684                           fsr1h	equ	0xFE2
  5685                           fsr1l	equ	0xFE1
  5686                           postinc2	equ	0xFDE
  5687                           postdec2	equ	0xFDD
  5688                           fsr2h	equ	0xFDA
  5689                           fsr2l	equ	0xFD9
  5690                           status	equ	0xFD8
  5691                           
  5692 ;; *************** function _system_encoder_enable *****************
  5693 ;; Defined at:
  5694 ;;		line 199 in file "os.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;		None
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;		None
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  1    wreg      void 
  5701 ;; Registers used:
  5702 ;;		wreg, status,2
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5712 ;;Total ram usage:        0 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:   10
  5715 ;; This function calls:
  5716 ;;		Nothing
  5717 ;; This function is called by:
  5718 ;;		_ui_run
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           	psect	text2
  5723  018FA6                     __ptext2:
  5724                           	opt stack 0
  5725  018FA6                     _system_encoder_enable:
  5726                           	opt stack 19
  5727                           
  5728                           ;os.c: 202: INTCON3bits.INT2IF = 0;
  5729                           
  5730                           ;incstack = 0
  5731  018FA6  92F0               	bcf	intcon3,1,c	;volatile
  5732                           
  5733                           ;os.c: 203: INTCON3bits.INT3IF = 0;
  5734  018FA8  94F0               	bcf	intcon3,2,c	;volatile
  5735                           
  5736                           ;os.c: 206: os.encoderCount = 0;
  5737  018FAA  0E00               	movlw	0
  5738  018FAC  0102               	movlb	2	; () banked
  5739  018FAE  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  5740                           
  5741                           ; BSR set to: 2
  5742                           ;os.c: 209: INTCON3bits.INT2IE = 1;
  5743  018FB0  88F0               	bsf	intcon3,4,c	;volatile
  5744                           
  5745                           ; BSR set to: 2
  5746                           ;os.c: 210: INTCON3bits.INT3IE = 1;
  5747  018FB2  8AF0               	bsf	intcon3,5,c	;volatile
  5748                           
  5749                           ; BSR set to: 2
  5750  018FB4  0012               	return		;funcret
  5751  018FB6                     __end_of_system_encoder_enable:
  5752                           	opt stack 0
  5753                           tblptru	equ	0xFF8
  5754                           tblptrh	equ	0xFF7
  5755                           tblptrl	equ	0xFF6
  5756                           tablat	equ	0xFF5
  5757                           intcon3	equ	0xFF0
  5758                           postinc0	equ	0xFEE
  5759                           wreg	equ	0xFE8
  5760                           postdec1	equ	0xFE5
  5761                           fsr1h	equ	0xFE2
  5762                           fsr1l	equ	0xFE1
  5763                           postinc2	equ	0xFDE
  5764                           postdec2	equ	0xFDD
  5765                           fsr2h	equ	0xFDA
  5766                           fsr2l	equ	0xFD9
  5767                           status	equ	0xFD8
  5768                           
  5769 ;; *************** function _system_encoder_disable *****************
  5770 ;; Defined at:
  5771 ;;		line 192 in file "os.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;		None
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;		None
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  1    wreg      void 
  5778 ;; Registers used:
  5779 ;;		None
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5789 ;;Total ram usage:        0 bytes
  5790 ;; Hardware stack levels used:    1
  5791 ;; Hardware stack levels required when called:   10
  5792 ;; This function calls:
  5793 ;;		Nothing
  5794 ;; This function is called by:
  5795 ;;		_ui_run
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           
  5799                           	psect	text3
  5800  0190FE                     __ptext3:
  5801                           	opt stack 0
  5802  0190FE                     _system_encoder_disable:
  5803                           	opt stack 19
  5804                           
  5805                           ;os.c: 195: INTCON3bits.INT2IE = 0;
  5806                           
  5807                           ; BSR set to: 2
  5808                           ;incstack = 0
  5809  0190FE  98F0               	bcf	intcon3,4,c	;volatile
  5810                           
  5811                           ;os.c: 196: INTCON3bits.INT3IE = 0;
  5812  019100  9AF0               	bcf	intcon3,5,c	;volatile
  5813  019102  0012               	return		;funcret
  5814  019104                     __end_of_system_encoder_disable:
  5815                           	opt stack 0
  5816                           tblptru	equ	0xFF8
  5817                           tblptrh	equ	0xFF7
  5818                           tblptrl	equ	0xFF6
  5819                           tablat	equ	0xFF5
  5820                           intcon3	equ	0xFF0
  5821                           postinc0	equ	0xFEE
  5822                           wreg	equ	0xFE8
  5823                           postdec1	equ	0xFE5
  5824                           fsr1h	equ	0xFE2
  5825                           fsr1l	equ	0xFE1
  5826                           postinc2	equ	0xFDE
  5827                           postdec2	equ	0xFDD
  5828                           fsr2h	equ	0xFDA
  5829                           fsr2l	equ	0xFD9
  5830                           status	equ	0xFD8
  5831                           
  5832 ;; *************** function _i2c_display_send_init_sequence *****************
  5833 ;; Defined at:
  5834 ;;		line 215 in file "i2c.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;		None
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  init_sequenc    9   10[BANK0 ] unsigned char [9]
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  1    wreg      void 
  5841 ;; Registers used:
  5842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5849 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5851 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5852 ;;Total ram usage:        9 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:   12
  5855 ;; This function calls:
  5856 ;;		__i2c_write
  5857 ;;		_i2c_set_frequency
  5858 ;; This function is called by:
  5859 ;;		_ui_run
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text4
  5864  01875C                     __ptext4:
  5865                           	opt stack 0
  5866  01875C                     _i2c_display_send_init_sequence:
  5867                           	opt stack 17
  5868                           
  5869                           ;i2c.c: 217: uint8_t init_sequence[9] = {;i2c.c: 218: 0x3A,;i2c.c: 220: 0b00011110,;i2c.
      +                          c: 221: 0x39,;i2c.c: 223: 0b00001100,;i2c.c: 224: 0x74,;i2c.c: 225: 0b1011100,;i2c.c: 22
      +                          6: 0x6d,;i2c.c: 227: 0x0c,;i2c.c: 228: 0x01;i2c.c: 229: };
  5870                           
  5871                           ;incstack = 0
  5872  01875C  EE23  F0BC         	lfsr	2,i2c_display_send_init_sequence@F6931
  5873  018760  EE10  F06A         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  5874  018764  0E08               	movlw	8
  5875  018766                     u24971:
  5876  018766  CFDB FFE3          	movff	plusw2,plusw1
  5877  01876A  06E8               	decf	wreg,f,c
  5878  01876C  E2FC               	bc	u24971
  5879                           
  5880                           ;i2c.c: 232: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  5881  01876E  0E00               	movlw	0
  5882  018770  EC4E  F0C3         	call	_i2c_set_frequency
  5883                           
  5884                           ;i2c.c: 235: _i2c_write(0b01111000, &init_sequence[0], 9);
  5885  018774  0E6A               	movlw	low i2c_display_send_init_sequence@init_sequence
  5886  018776  0100               	movlb	0	; () banked
  5887  018778  6F65               	movwf	__i2c_write@data& (0+255),b
  5888  01877A  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  5889  01877C  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5890  01877E  0E09               	movlw	9
  5891  018780  6F67               	movwf	__i2c_write@length& (0+255),b
  5892  018782  0E78               	movlw	120
  5893  018784  EC65  F0BF         	call	__i2c_write
  5894  018788  0012               	return		;funcret
  5895  01878A                     __end_of_i2c_display_send_init_sequence:
  5896                           	opt stack 0
  5897                           tblptru	equ	0xFF8
  5898                           tblptrh	equ	0xFF7
  5899                           tblptrl	equ	0xFF6
  5900                           tablat	equ	0xFF5
  5901                           intcon3	equ	0xFF0
  5902                           postinc0	equ	0xFEE
  5903                           wreg	equ	0xFE8
  5904                           postdec1	equ	0xFE5
  5905                           plusw1	equ	0xFE3
  5906                           fsr1h	equ	0xFE2
  5907                           fsr1l	equ	0xFE1
  5908                           postinc2	equ	0xFDE
  5909                           postdec2	equ	0xFDD
  5910                           plusw2	equ	0xFDB
  5911                           fsr2h	equ	0xFDA
  5912                           fsr2l	equ	0xFD9
  5913                           status	equ	0xFD8
  5914                           
  5915 ;; *************** function _i2c_digipot_reset_on *****************
  5916 ;; Defined at:
  5917 ;;		line 318 in file "i2c.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;		None
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;  data_array      2   10[BANK0 ] unsigned char [2]
  5922 ;; Return value:  Size  Location     Type
  5923 ;;                  1    wreg      void 
  5924 ;; Registers used:
  5925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5926 ;; Tracked objects:
  5927 ;;		On entry : 0/0
  5928 ;;		On exit  : 0/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5932 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5934 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5935 ;;Total ram usage:        2 bytes
  5936 ;; Hardware stack levels used:    1
  5937 ;; Hardware stack levels required when called:   12
  5938 ;; This function calls:
  5939 ;;		__i2c_write
  5940 ;;		_i2c_set_frequency
  5941 ;; This function is called by:
  5942 ;;		_ui_run
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           	psect	text5
  5947  018A46                     __ptext5:
  5948                           	opt stack 0
  5949  018A46                     _i2c_digipot_reset_on:
  5950                           	opt stack 17
  5951                           
  5952                           ;i2c.c: 320: uint8_t data_array[2];;i2c.c: 321: data_array[0] = 0x10 | 0x00;
  5953                           
  5954                           ;incstack = 0
  5955  018A46  0E10               	movlw	16
  5956  018A48  0100               	movlb	0	; () banked
  5957  018A4A  6F6A               	movwf	i2c_digipot_reset_on@data_array& (0+255),b
  5958                           
  5959                           ;i2c.c: 323: data_array[1] = 0x00;
  5960  018A4C  0E00               	movlw	0
  5961  018A4E  6F6B               	movwf	(i2c_digipot_reset_on@data_array+1)& (0+255),b
  5962                           
  5963                           ; BSR set to: 0
  5964                           ;i2c.c: 326: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5965  018A50  0E02               	movlw	2
  5966  018A52  EC4E  F0C3         	call	_i2c_set_frequency
  5967                           
  5968                           ;i2c.c: 328: _i2c_write(0b01011100, &data_array[0], 2);
  5969  018A56  0E6A               	movlw	low i2c_digipot_reset_on@data_array
  5970  018A58  0100               	movlb	0	; () banked
  5971  018A5A  6F65               	movwf	__i2c_write@data& (0+255),b
  5972  018A5C  0E00               	movlw	high i2c_digipot_reset_on@data_array
  5973  018A5E  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  5974  018A60  0E02               	movlw	2
  5975  018A62  6F67               	movwf	__i2c_write@length& (0+255),b
  5976  018A64  0E5C               	movlw	92
  5977  018A66  EC65  F0BF         	call	__i2c_write
  5978  018A6A  0012               	return		;funcret
  5979  018A6C                     __end_of_i2c_digipot_reset_on:
  5980                           	opt stack 0
  5981                           tblptru	equ	0xFF8
  5982                           tblptrh	equ	0xFF7
  5983                           tblptrl	equ	0xFF6
  5984                           tablat	equ	0xFF5
  5985                           intcon3	equ	0xFF0
  5986                           postinc0	equ	0xFEE
  5987                           wreg	equ	0xFE8
  5988                           postdec1	equ	0xFE5
  5989                           plusw1	equ	0xFE3
  5990                           fsr1h	equ	0xFE2
  5991                           fsr1l	equ	0xFE1
  5992                           postinc2	equ	0xFDE
  5993                           postdec2	equ	0xFDD
  5994                           plusw2	equ	0xFDB
  5995                           fsr2h	equ	0xFDA
  5996                           fsr2l	equ	0xFD9
  5997                           status	equ	0xFD8
  5998                           
  5999 ;; *************** function _i2c_digipot_reset_off *****************
  6000 ;; Defined at:
  6001 ;;		line 331 in file "i2c.c"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;		None
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;  data_array      2   10[BANK0 ] unsigned char [2]
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  1    wreg      void 
  6008 ;; Registers used:
  6009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6016 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6018 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6019 ;;Total ram usage:        2 bytes
  6020 ;; Hardware stack levels used:    1
  6021 ;; Hardware stack levels required when called:   12
  6022 ;; This function calls:
  6023 ;;		__i2c_write
  6024 ;;		_i2c_set_frequency
  6025 ;; This function is called by:
  6026 ;;		_ui_run
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           	psect	text6
  6031  018A6C                     __ptext6:
  6032                           	opt stack 0
  6033  018A6C                     _i2c_digipot_reset_off:
  6034                           	opt stack 17
  6035                           
  6036                           ;i2c.c: 333: uint8_t data_array[2];;i2c.c: 334: data_array[0] = 0x10 | 0x00;
  6037                           
  6038                           ;incstack = 0
  6039  018A6C  0E10               	movlw	16
  6040  018A6E  0100               	movlb	0	; () banked
  6041  018A70  6F6A               	movwf	i2c_digipot_reset_off@data_array& (0+255),b
  6042                           
  6043                           ;i2c.c: 335: data_array[1] = 0x80;
  6044  018A72  0E80               	movlw	128
  6045  018A74  6F6B               	movwf	(i2c_digipot_reset_off@data_array+1)& (0+255),b
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;i2c.c: 338: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  6049  018A76  0E02               	movlw	2
  6050  018A78  EC4E  F0C3         	call	_i2c_set_frequency
  6051                           
  6052                           ;i2c.c: 340: _i2c_write(0b01011100, &data_array[0], 2);
  6053  018A7C  0E6A               	movlw	low i2c_digipot_reset_off@data_array
  6054  018A7E  0100               	movlb	0	; () banked
  6055  018A80  6F65               	movwf	__i2c_write@data& (0+255),b
  6056  018A82  0E00               	movlw	high i2c_digipot_reset_off@data_array
  6057  018A84  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  6058  018A86  0E02               	movlw	2
  6059  018A88  6F67               	movwf	__i2c_write@length& (0+255),b
  6060  018A8A  0E5C               	movlw	92
  6061  018A8C  EC65  F0BF         	call	__i2c_write
  6062  018A90  0012               	return		;funcret
  6063  018A92                     __end_of_i2c_digipot_reset_off:
  6064                           	opt stack 0
  6065                           tblptru	equ	0xFF8
  6066                           tblptrh	equ	0xFF7
  6067                           tblptrl	equ	0xFF6
  6068                           tablat	equ	0xFF5
  6069                           intcon3	equ	0xFF0
  6070                           postinc0	equ	0xFEE
  6071                           wreg	equ	0xFE8
  6072                           postdec1	equ	0xFE5
  6073                           plusw1	equ	0xFE3
  6074                           fsr1h	equ	0xFE2
  6075                           fsr1l	equ	0xFE1
  6076                           postinc2	equ	0xFDE
  6077                           postdec2	equ	0xFDD
  6078                           plusw2	equ	0xFDB
  6079                           fsr2h	equ	0xFDA
  6080                           fsr2l	equ	0xFD9
  6081                           status	equ	0xFD8
  6082                           
  6083 ;; *************** function _i2c_digipot_backlight *****************
  6084 ;; Defined at:
  6085 ;;		line 343 in file "i2c.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  level           1    wreg     unsigned char 
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;  level           1   10[BANK0 ] unsigned char 
  6090 ;;  data_array      2   11[BANK0 ] unsigned char [2]
  6091 ;; Return value:  Size  Location     Type
  6092 ;;                  1    wreg      void 
  6093 ;; Registers used:
  6094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6101 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6103 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6104 ;;Total ram usage:        3 bytes
  6105 ;; Hardware stack levels used:    1
  6106 ;; Hardware stack levels required when called:   12
  6107 ;; This function calls:
  6108 ;;		__i2c_write
  6109 ;;		_i2c_set_frequency
  6110 ;; This function is called by:
  6111 ;;		_ui_run
  6112 ;; This function uses a non-reentrant model
  6113 ;;
  6114                           
  6115                           	psect	text7
  6116  01886E                     __ptext7:
  6117                           	opt stack 0
  6118  01886E                     _i2c_digipot_backlight:
  6119                           	opt stack 17
  6120                           
  6121                           ;incstack = 0
  6122                           ;i2c_digipot_backlight@level stored from wreg
  6123  01886E  0100               	movlb	0	; () banked
  6124  018870  6F6A               	movwf	i2c_digipot_backlight@level& (0+255),b
  6125                           
  6126                           ;i2c.c: 345: uint8_t data_array[2];;i2c.c: 346: data_array[0] = 0x00 | 0x00;
  6127  018872  0E00               	movlw	0
  6128  018874  0100               	movlb	0	; () banked
  6129  018876  6F6B               	movwf	i2c_digipot_backlight@data_array& (0+255),b
  6130                           
  6131                           ; BSR set to: 0
  6132                           ;i2c.c: 347: data_array[1] = level>>1;
  6133  018878  90D8               	bcf	status,0,c
  6134  01887A  316A               	rrcf	i2c_digipot_backlight@level& (0+255),w,b
  6135  01887C  6F6C               	movwf	(i2c_digipot_backlight@data_array+1)& (0+255),b
  6136                           
  6137                           ; BSR set to: 0
  6138                           ;i2c.c: 350: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  6139  01887E  0E02               	movlw	2
  6140  018880  EC4E  F0C3         	call	_i2c_set_frequency
  6141                           
  6142                           ;i2c.c: 352: _i2c_write(0b01011100, &data_array[0], 2);
  6143  018884  0E6B               	movlw	low i2c_digipot_backlight@data_array
  6144  018886  0100               	movlb	0	; () banked
  6145  018888  6F65               	movwf	__i2c_write@data& (0+255),b
  6146  01888A  0E00               	movlw	high i2c_digipot_backlight@data_array
  6147  01888C  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  6148  01888E  0E02               	movlw	2
  6149  018890  6F67               	movwf	__i2c_write@length& (0+255),b
  6150  018892  0E5C               	movlw	92
  6151  018894  EC65  F0BF         	call	__i2c_write
  6152  018898  0012               	return		;funcret
  6153  01889A                     __end_of_i2c_digipot_backlight:
  6154                           	opt stack 0
  6155                           tblptru	equ	0xFF8
  6156                           tblptrh	equ	0xFF7
  6157                           tblptrl	equ	0xFF6
  6158                           tablat	equ	0xFF5
  6159                           intcon3	equ	0xFF0
  6160                           postinc0	equ	0xFEE
  6161                           wreg	equ	0xFE8
  6162                           postdec1	equ	0xFE5
  6163                           plusw1	equ	0xFE3
  6164                           fsr1h	equ	0xFE2
  6165                           fsr1l	equ	0xFE1
  6166                           postinc2	equ	0xFDE
  6167                           postdec2	equ	0xFDD
  6168                           plusw2	equ	0xFDB
  6169                           fsr2h	equ	0xFDA
  6170                           fsr2l	equ	0xFD9
  6171                           status	equ	0xFD8
  6172                           
  6173 ;; *************** function __ui_encoder *****************
  6174 ;; Defined at:
  6175 ;;		line 18 in file "ui.c"
  6176 ;; Parameters:    Size  Location     Type
  6177 ;;		None
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;		None
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  1    wreg      void 
  6182 ;; Registers used:
  6183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6193 ;;Total ram usage:        0 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; Hardware stack levels required when called:   14
  6196 ;; This function calls:
  6197 ;;		_rtcc_correct_day
  6198 ;;		_rtcc_decrement_day
  6199 ;;		_rtcc_decrement_hours
  6200 ;;		_rtcc_decrement_minutes
  6201 ;;		_rtcc_decrement_month
  6202 ;;		_rtcc_decrement_seconds
  6203 ;;		_rtcc_decrement_year
  6204 ;;		_rtcc_increment_day
  6205 ;;		_rtcc_increment_hours
  6206 ;;		_rtcc_increment_minutes
  6207 ;;		_rtcc_increment_month
  6208 ;;		_rtcc_increment_seconds
  6209 ;;		_rtcc_increment_year
  6210 ;;		_rtcc_write_eeprom
  6211 ;;		_system_output_off
  6212 ;;		_system_output_on
  6213 ;;		_system_output_toggle
  6214 ;; This function is called by:
  6215 ;;		_ui_run
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           	psect	text8
  6220  00DF04                     __ptext8:
  6221                           	opt stack 0
  6222  00DF04                     __ui_encoder:
  6223                           	opt stack 15
  6224                           
  6225                           ;ui.c: 20: switch(os.display_mode)
  6226                           
  6227                           ;incstack = 0
  6228  00DF04  D193               	goto	l1532
  6229  00DF06                     
  6230                           ;ui.c: 23: if(os.encoderCount>0)
  6231  00DF06  0102               	movlb	2	; () banked
  6232  00DF08  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6233  00DF0A  0A80               	xorlw	128
  6234  00DF0C  0F7F               	addlw	-129
  6235  00DF0E  A0D8               	btfss	status,0,c
  6236  00DF10  D002               	goto	l1534
  6237                           
  6238                           ; BSR set to: 2
  6239                           ;ui.c: 24: {;ui.c: 25: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  6240  00DF12  0E10               	movlw	16
  6241  00DF14  D003               	goto	L1
  6242  00DF16                     l1534:
  6243                           
  6244                           ; BSR set to: 2
  6245                           ;ui.c: 27: else if(os.encoderCount<0)
  6246                           
  6247                           ; BSR set to: 2
  6248  00DF16  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6249  00DF18  D002               	goto	l1536
  6250                           
  6251                           ; BSR set to: 2
  6252                           ;ui.c: 28: {;ui.c: 29: os.display_mode = DISPLAY_MODE_TEMPERATURE;
  6253  00DF1A  0E60               	movlw	96
  6254  00DF1C                     L1:
  6255  00DF1C  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6256  00DF1E                     l1536:
  6257                           
  6258                           ; BSR set to: 2
  6259                           ;ui.c: 30: };ui.c: 31: if(os.buttonCount)
  6260                           
  6261                           ; BSR set to: 2
  6262  00DF1E  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6263                           
  6264                           ; BSR set to: 2
  6265                           ;ui.c: 34: };ui.c: 35: os.encoderCount = 0;
  6266                           
  6267                           ; BSR set to: 2
  6268                           
  6269                           ;ui.c: 32: {;ui.c: 33: ;
  6270  00DF20  0E00               	movlw	0
  6271  00DF22  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6272                           
  6273                           ;ui.c: 36: os.buttonCount = 0;
  6274  00DF24  0E00               	movlw	0
  6275  00DF26  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6276                           
  6277                           ;ui.c: 37: break;
  6278  00DF28  0012               	return	
  6279  00DF2A                     
  6280                           ; BSR set to: 2
  6281                           ;ui.c: 40: if(os.encoderCount>0)
  6282                           
  6283                           ; BSR set to: 2
  6284  00DF2A  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6285  00DF2C  0A80               	xorlw	128
  6286  00DF2E  0F7F               	addlw	-129
  6287  00DF30  A0D8               	btfss	status,0,c
  6288  00DF32  D002               	goto	l1540
  6289                           
  6290                           ; BSR set to: 2
  6291                           ;ui.c: 41: {;ui.c: 42: os.display_mode = DISPLAY_MODE_USB_CHARGER;
  6292  00DF34  0E20               	movlw	32
  6293  00DF36  D003               	goto	L2
  6294  00DF38                     l1540:
  6295                           
  6296                           ; BSR set to: 2
  6297                           ;ui.c: 44: else if(os.encoderCount<0)
  6298                           
  6299                           ; BSR set to: 2
  6300  00DF38  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6301  00DF3A  D002               	goto	l1542
  6302                           
  6303                           ; BSR set to: 2
  6304                           ;ui.c: 45: {;ui.c: 46: os.display_mode = DISPLAY_MODE_OVERVIEW;
  6305  00DF3C  0E00               	movlw	0
  6306  00DF3E                     L2:
  6307  00DF3E  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6308  00DF40                     l1542:
  6309                           
  6310                           ; BSR set to: 2
  6311                           ;ui.c: 47: };ui.c: 48: if(os.buttonCount)
  6312                           
  6313                           ; BSR set to: 2
  6314  00DF40  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6315  00DF42  B4D8               	btfsc	status,2,c
  6316  00DF44  D002               	goto	l1543
  6317                           
  6318                           ; BSR set to: 2
  6319                           ;ui.c: 49: {;ui.c: 50: os.display_mode = DISPLAY_MODE_DATETIME_YEAR;
  6320  00DF46  0E11               	movlw	17
  6321  00DF48  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6322  00DF4A                     l1543:
  6323                           
  6324                           ; BSR set to: 2
  6325                           ;ui.c: 51: };ui.c: 52: os.encoderCount = 0;
  6326  00DF4A  0E00               	movlw	0
  6327  00DF4C  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6328                           
  6329                           ;ui.c: 53: os.buttonCount = 0;
  6330  00DF4E  0E00               	movlw	0
  6331  00DF50  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6332                           
  6333                           ;ui.c: 54: break;
  6334  00DF52  0012               	return	
  6335  00DF54                     
  6336                           ; BSR set to: 2
  6337                           ;ui.c: 57: if(os.encoderCount>0)
  6338                           
  6339                           ; BSR set to: 2
  6340  00DF54  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6341  00DF56  0A80               	xorlw	128
  6342  00DF58  0F7F               	addlw	-129
  6343  00DF5A  A0D8               	btfss	status,0,c
  6344  00DF5C  D003               	goto	l1545
  6345                           
  6346                           ; BSR set to: 2
  6347                           ;ui.c: 58: {;ui.c: 59: rtcc_increment_year();
  6348  00DF5E  EC94  F0C5         	call	_rtcc_increment_year	;wreg free
  6349                           
  6350                           ;ui.c: 60: }
  6351  00DF62  D004               	goto	l1547
  6352  00DF64                     l1545:
  6353                           
  6354                           ;ui.c: 61: else if(os.encoderCount<0)
  6355  00DF64  0102               	movlb	2	; () banked
  6356  00DF66  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  6357                           
  6358                           ; BSR set to: 2
  6359                           ;ui.c: 62: {;ui.c: 63: rtcc_decrement_year();
  6360  00DF68  ECE9  F0C5         	call	_rtcc_decrement_year	;wreg free
  6361  00DF6C                     l1547:
  6362                           
  6363                           ;ui.c: 64: };ui.c: 65: if(os.buttonCount)
  6364  00DF6C  0102               	movlb	2	; () banked
  6365  00DF6E  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6366  00DF70  B4D8               	btfsc	status,2,c
  6367  00DF72  D005               	goto	l1548
  6368                           
  6369                           ; BSR set to: 2
  6370                           ;ui.c: 66: {;ui.c: 67: rtcc_correct_day();
  6371  00DF74  EC71  F0C6         	call	_rtcc_correct_day	;wreg free
  6372                           
  6373                           ;ui.c: 68: os.display_mode = DISPLAY_MODE_DATETIME_MONTH;
  6374  00DF78  0E12               	movlw	18
  6375  00DF7A  0102               	movlb	2	; () banked
  6376  00DF7C  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6377  00DF7E                     l1548:
  6378                           
  6379                           ; BSR set to: 2
  6380                           ;ui.c: 69: };ui.c: 70: os.encoderCount = 0;
  6381                           
  6382                           ; BSR set to: 2
  6383  00DF7E  0E00               	movlw	0
  6384  00DF80  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6385                           
  6386                           ; BSR set to: 2
  6387                           ;ui.c: 71: os.buttonCount = 0;
  6388  00DF82  0E00               	movlw	0
  6389  00DF84  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6390                           
  6391                           ;ui.c: 72: break;
  6392  00DF86  0012               	return	
  6393  00DF88                     
  6394                           ; BSR set to: 2
  6395                           ;ui.c: 75: if(os.encoderCount>0)
  6396                           
  6397                           ; BSR set to: 2
  6398  00DF88  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6399  00DF8A  0A80               	xorlw	128
  6400  00DF8C  0F7F               	addlw	-129
  6401  00DF8E  A0D8               	btfss	status,0,c
  6402  00DF90  D003               	goto	l1550
  6403                           
  6404                           ; BSR set to: 2
  6405                           ;ui.c: 76: {;ui.c: 77: rtcc_increment_month();
  6406  00DF92  ECB6  F0C5         	call	_rtcc_increment_month	;wreg free
  6407                           
  6408                           ;ui.c: 78: }
  6409  00DF96  D004               	goto	l1552
  6410  00DF98                     l1550:
  6411                           
  6412                           ;ui.c: 79: else if(os.encoderCount<0)
  6413  00DF98  0102               	movlb	2	; () banked
  6414  00DF9A  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  6415                           
  6416                           ; BSR set to: 2
  6417                           ;ui.c: 80: {;ui.c: 81: rtcc_decrement_month();
  6418  00DF9C  EC0B  F0C6         	call	_rtcc_decrement_month	;wreg free
  6419  00DFA0                     l1552:
  6420                           
  6421                           ;ui.c: 82: };ui.c: 83: if(os.buttonCount)
  6422  00DFA0  0102               	movlb	2	; () banked
  6423  00DFA2  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6424  00DFA4  B4D8               	btfsc	status,2,c
  6425  00DFA6  D005               	goto	l1553
  6426                           
  6427                           ; BSR set to: 2
  6428                           ;ui.c: 84: {;ui.c: 85: rtcc_correct_day();
  6429  00DFA8  EC71  F0C6         	call	_rtcc_correct_day	;wreg free
  6430                           
  6431                           ;ui.c: 86: os.display_mode = DISPLAY_MODE_DATETIME_DAY;
  6432  00DFAC  0E13               	movlw	19
  6433  00DFAE  0102               	movlb	2	; () banked
  6434  00DFB0  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6435  00DFB2                     l1553:
  6436                           
  6437                           ; BSR set to: 2
  6438                           ;ui.c: 87: };ui.c: 88: os.encoderCount = 0;
  6439                           
  6440                           ; BSR set to: 2
  6441  00DFB2  0E00               	movlw	0
  6442  00DFB4  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6443                           
  6444                           ; BSR set to: 2
  6445                           ;ui.c: 89: os.buttonCount = 0;
  6446  00DFB6  0E00               	movlw	0
  6447  00DFB8  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6448                           
  6449                           ;ui.c: 90: break;
  6450  00DFBA  0012               	return	
  6451  00DFBC                     
  6452                           ; BSR set to: 2
  6453                           ;ui.c: 93: if(os.encoderCount>0)
  6454                           
  6455                           ; BSR set to: 2
  6456  00DFBC  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6457  00DFBE  0A80               	xorlw	128
  6458  00DFC0  0F7F               	addlw	-129
  6459  00DFC2  A0D8               	btfss	status,0,c
  6460  00DFC4  D003               	goto	l1555
  6461                           
  6462                           ; BSR set to: 2
  6463                           ;ui.c: 94: {;ui.c: 95: rtcc_increment_day();
  6464  00DFC6  EC5C  F0C5         	call	_rtcc_increment_day	;wreg free
  6465                           
  6466                           ;ui.c: 96: }
  6467  00DFCA  D004               	goto	l1557
  6468  00DFCC                     l1555:
  6469                           
  6470                           ;ui.c: 97: else if(os.encoderCount<0)
  6471  00DFCC  0102               	movlb	2	; () banked
  6472  00DFCE  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  6473                           
  6474                           ; BSR set to: 2
  6475                           ;ui.c: 98: {;ui.c: 99: rtcc_decrement_day();
  6476  00DFD0  EC6F  F0C5         	call	_rtcc_decrement_day	;wreg free
  6477  00DFD4                     l1557:
  6478                           
  6479                           ;ui.c: 100: };ui.c: 101: if(os.buttonCount)
  6480  00DFD4  0102               	movlb	2	; () banked
  6481  00DFD6  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6482  00DFD8  B4D8               	btfsc	status,2,c
  6483  00DFDA  D002               	goto	l1558
  6484                           
  6485                           ; BSR set to: 2
  6486                           ;ui.c: 102: {;ui.c: 103: os.display_mode = DISPLAY_MODE_DATETIME_HOURS;
  6487  00DFDC  0E14               	movlw	20
  6488  00DFDE  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6489  00DFE0                     l1558:
  6490                           
  6491                           ; BSR set to: 2
  6492                           ;ui.c: 104: };ui.c: 105: os.encoderCount = 0;
  6493  00DFE0  0E00               	movlw	0
  6494  00DFE2  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6495                           
  6496                           ;ui.c: 106: os.buttonCount = 0;
  6497  00DFE4  0E00               	movlw	0
  6498  00DFE6  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6499                           
  6500                           ;ui.c: 107: break;
  6501  00DFE8  0012               	return	
  6502  00DFEA                     
  6503                           ; BSR set to: 2
  6504                           ;ui.c: 110: if(os.encoderCount>0)
  6505                           
  6506                           ; BSR set to: 2
  6507  00DFEA  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6508  00DFEC  0A80               	xorlw	128
  6509  00DFEE  0F7F               	addlw	-129
  6510  00DFF0  A0D8               	btfss	status,0,c
  6511  00DFF2  D003               	goto	l1560
  6512                           
  6513                           ; BSR set to: 2
  6514                           ;ui.c: 111: {;ui.c: 112: rtcc_increment_hours();
  6515  00DFF4  ECD8  F0C5         	call	_rtcc_increment_hours	;wreg free
  6516                           
  6517                           ;ui.c: 113: }
  6518  00DFF8  D004               	goto	l1562
  6519  00DFFA                     l1560:
  6520                           
  6521                           ;ui.c: 114: else if(os.encoderCount<0)
  6522  00DFFA  0102               	movlb	2	; () banked
  6523  00DFFC  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  6524                           
  6525                           ; BSR set to: 2
  6526                           ;ui.c: 115: {;ui.c: 116: rtcc_decrement_hours();
  6527  00DFFE  EC2D  F0C6         	call	_rtcc_decrement_hours	;wreg free
  6528  00E002                     l1562:
  6529                           
  6530                           ;ui.c: 117: };ui.c: 118: if(os.buttonCount)
  6531  00E002  0102               	movlb	2	; () banked
  6532  00E004  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6533  00E006  B4D8               	btfsc	status,2,c
  6534  00E008  D002               	goto	l1563
  6535                           
  6536                           ; BSR set to: 2
  6537                           ;ui.c: 119: {;ui.c: 120: os.display_mode = DISPLAY_MODE_DATETIME_MINUTES;
  6538  00E00A  0E15               	movlw	21
  6539  00E00C  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6540  00E00E                     l1563:
  6541                           
  6542                           ; BSR set to: 2
  6543                           ;ui.c: 121: };ui.c: 122: os.encoderCount = 0;
  6544  00E00E  0E00               	movlw	0
  6545  00E010  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6546                           
  6547                           ;ui.c: 123: os.buttonCount = 0;
  6548  00E012  0E00               	movlw	0
  6549  00E014  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6550                           
  6551                           ;ui.c: 124: break;
  6552  00E016  0012               	return	
  6553  00E018                     
  6554                           ; BSR set to: 2
  6555                           ;ui.c: 127: if(os.encoderCount>0)
  6556                           
  6557                           ; BSR set to: 2
  6558  00E018  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6559  00E01A  0A80               	xorlw	128
  6560  00E01C  0F7F               	addlw	-129
  6561  00E01E  A0D8               	btfss	status,0,c
  6562  00E020  D003               	goto	l1565
  6563                           
  6564                           ; BSR set to: 2
  6565                           ;ui.c: 128: {;ui.c: 129: rtcc_increment_minutes();
  6566  00E022  ECC7  F0C5         	call	_rtcc_increment_minutes	;wreg free
  6567                           
  6568                           ;ui.c: 130: }
  6569  00E026  D004               	goto	l1567
  6570  00E028                     l1565:
  6571                           
  6572                           ;ui.c: 131: else if(os.encoderCount<0)
  6573  00E028  0102               	movlb	2	; () banked
  6574  00E02A  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  6575                           
  6576                           ; BSR set to: 2
  6577                           ;ui.c: 132: {;ui.c: 133: rtcc_decrement_minutes();
  6578  00E02C  EC1C  F0C6         	call	_rtcc_decrement_minutes	;wreg free
  6579  00E030                     l1567:
  6580                           
  6581                           ;ui.c: 134: };ui.c: 135: if(os.buttonCount)
  6582  00E030  0102               	movlb	2	; () banked
  6583  00E032  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6584  00E034  B4D8               	btfsc	status,2,c
  6585  00E036  D002               	goto	l1568
  6586                           
  6587                           ; BSR set to: 2
  6588                           ;ui.c: 136: {;ui.c: 137: os.display_mode = DISPLAY_MODE_DATETIME_SECONDS;
  6589  00E038  0E16               	movlw	22
  6590  00E03A  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6591  00E03C                     l1568:
  6592                           
  6593                           ; BSR set to: 2
  6594                           ;ui.c: 138: };ui.c: 139: os.encoderCount = 0;
  6595  00E03C  0E00               	movlw	0
  6596  00E03E  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6597                           
  6598                           ;ui.c: 140: os.buttonCount = 0;
  6599  00E040  0E00               	movlw	0
  6600  00E042  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6601                           
  6602                           ;ui.c: 141: break;
  6603  00E044  0012               	return	
  6604  00E046                     
  6605                           ; BSR set to: 2
  6606                           ;ui.c: 144: if(os.encoderCount>0)
  6607                           
  6608                           ; BSR set to: 2
  6609  00E046  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6610  00E048  0A80               	xorlw	128
  6611  00E04A  0F7F               	addlw	-129
  6612  00E04C  A0D8               	btfss	status,0,c
  6613  00E04E  D003               	goto	l1570
  6614                           
  6615                           ; BSR set to: 2
  6616                           ;ui.c: 145: {;ui.c: 146: rtcc_increment_seconds();
  6617  00E050  ECA5  F0C5         	call	_rtcc_increment_seconds	;wreg free
  6618                           
  6619                           ;ui.c: 147: }
  6620  00E054  D004               	goto	l1572
  6621  00E056                     l1570:
  6622                           
  6623                           ;ui.c: 148: else if(os.encoderCount<0)
  6624  00E056  0102               	movlb	2	; () banked
  6625  00E058  BF06               	btfsc	(_os+6)& (0+255),7,b	;volatile
  6626                           
  6627                           ; BSR set to: 2
  6628                           ;ui.c: 149: {;ui.c: 150: rtcc_decrement_seconds();
  6629  00E05A  ECFA  F0C5         	call	_rtcc_decrement_seconds	;wreg free
  6630  00E05E                     l1572:
  6631                           
  6632                           ;ui.c: 151: };ui.c: 152: if(os.buttonCount)
  6633  00E05E  0102               	movlb	2	; () banked
  6634  00E060  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6635  00E062  B4D8               	btfsc	status,2,c
  6636  00E064  D004               	goto	l1573
  6637                           
  6638                           ; BSR set to: 2
  6639                           ;ui.c: 153: {;ui.c: 154: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  6640  00E066  0E10               	movlw	16
  6641  00E068  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6642                           
  6643                           ; BSR set to: 2
  6644                           ;ui.c: 155: rtcc_write_eeprom();
  6645  00E06A  EC4F  F0C0         	call	_rtcc_write_eeprom	;wreg free
  6646  00E06E                     l1573:
  6647                           
  6648                           ;ui.c: 156: };ui.c: 157: os.encoderCount = 0;
  6649  00E06E  0E00               	movlw	0
  6650  00E070  0102               	movlb	2	; () banked
  6651  00E072  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6652                           
  6653                           ; BSR set to: 2
  6654                           ;ui.c: 158: os.buttonCount = 0;
  6655  00E074  0E00               	movlw	0
  6656  00E076  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6657                           
  6658                           ;ui.c: 159: break;
  6659  00E078  0012               	return	
  6660  00E07A                     
  6661                           ; BSR set to: 2
  6662                           ;ui.c: 162: if(os.encoderCount>0)
  6663                           
  6664                           ; BSR set to: 2
  6665  00E07A  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6666  00E07C  0A80               	xorlw	128
  6667  00E07E  0F7F               	addlw	-129
  6668  00E080  A0D8               	btfss	status,0,c
  6669  00E082  D002               	goto	l1575
  6670                           
  6671                           ; BSR set to: 2
  6672                           ;ui.c: 163: {;ui.c: 164: os.display_mode = DISPLAY_MODE_OUTPUTS;
  6673  00E084  0E30               	movlw	48
  6674  00E086  D003               	goto	L3
  6675  00E088                     l1575:
  6676                           
  6677                           ; BSR set to: 2
  6678                           ;ui.c: 166: else if(os.encoderCount<0)
  6679                           
  6680                           ; BSR set to: 2
  6681  00E088  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6682  00E08A  D002               	goto	l1577
  6683                           
  6684                           ; BSR set to: 2
  6685                           ;ui.c: 167: {;ui.c: 168: os.display_mode = DISPLAY_MODE_DATETIME_OVERVIEW;
  6686  00E08C  0E10               	movlw	16
  6687  00E08E                     L3:
  6688  00E08E  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6689  00E090                     l1577:
  6690                           
  6691                           ; BSR set to: 2
  6692                           ;ui.c: 169: };ui.c: 170: if(os.buttonCount)
  6693                           
  6694                           ; BSR set to: 2
  6695  00E090  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6696  00E092  A4D8               	btfss	status,2,c
  6697                           
  6698                           ; BSR set to: 2
  6699                           ;ui.c: 171: {;ui.c: 172: if(os.output_voltage>12000)
  6700  00E094  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6701  00E096  D009               	goto	l1579
  6702  00E098  0EE1               	movlw	225
  6703  00E09A  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
  6704  00E09C  0E2E               	movlw	46
  6705  00E09E  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
  6706  00E0A0  A0D8               	btfss	status,0,c
  6707  00E0A2  D003               	goto	l1579
  6708                           
  6709                           ; BSR set to: 2
  6710                           ;ui.c: 173: {;ui.c: 174: system_output_toggle(OUTPUT_USB);
  6711  00E0A4  0E10               	movlw	16
  6712  00E0A6  EC49  F0C5         	call	_system_output_toggle
  6713  00E0AA                     l1579:
  6714                           
  6715                           ;ui.c: 175: };ui.c: 176: };ui.c: 177: os.encoderCount = 0;
  6716  00E0AA  0E00               	movlw	0
  6717  00E0AC  0102               	movlb	2	; () banked
  6718  00E0AE  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6719                           
  6720                           ; BSR set to: 2
  6721                           ;ui.c: 178: os.buttonCount = 0;
  6722  00E0B0  0E00               	movlw	0
  6723  00E0B2  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6724                           
  6725                           ;ui.c: 179: break;
  6726  00E0B4  0012               	return	
  6727  00E0B6                     
  6728                           ; BSR set to: 2
  6729                           ;ui.c: 182: if(os.encoderCount>0)
  6730                           
  6731                           ; BSR set to: 2
  6732  00E0B6  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6733  00E0B8  0A80               	xorlw	128
  6734  00E0BA  0F7F               	addlw	-129
  6735  00E0BC  A0D8               	btfss	status,0,c
  6736  00E0BE  D002               	goto	l1581
  6737                           
  6738                           ; BSR set to: 2
  6739                           ;ui.c: 183: {;ui.c: 184: os.display_mode = DISPLAY_MODE_CHARGER_DETAILS;
  6740  00E0C0  0E40               	movlw	64
  6741  00E0C2  D003               	goto	L4
  6742  00E0C4                     l1581:
  6743                           
  6744                           ; BSR set to: 2
  6745                           ;ui.c: 186: else if(os.encoderCount<0)
  6746                           
  6747                           ; BSR set to: 2
  6748  00E0C4  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6749  00E0C6  D002               	goto	l1583
  6750                           
  6751                           ; BSR set to: 2
  6752                           ;ui.c: 187: {;ui.c: 188: os.display_mode = DISPLAY_MODE_USB_CHARGER;
  6753  00E0C8  0E20               	movlw	32
  6754  00E0CA                     L4:
  6755  00E0CA  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6756  00E0CC                     l1583:
  6757                           
  6758                           ; BSR set to: 2
  6759                           ;ui.c: 189: };ui.c: 190: if(os.buttonCount)
  6760                           
  6761                           ; BSR set to: 2
  6762  00E0CC  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6763  00E0CE  B4D8               	btfsc	status,2,c
  6764  00E0D0  D002               	goto	l1584
  6765                           
  6766                           ; BSR set to: 2
  6767                           ;ui.c: 191: {;ui.c: 192: os.display_mode = DISPLAY_MODE_OUTPUTS_1;
  6768  00E0D2  0E31               	movlw	49
  6769  00E0D4  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6770  00E0D6                     l1584:
  6771                           
  6772                           ; BSR set to: 2
  6773                           ;ui.c: 193: };ui.c: 194: os.encoderCount = 0;
  6774  00E0D6  0E00               	movlw	0
  6775  00E0D8  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6776                           
  6777                           ;ui.c: 195: os.buttonCount = 0;
  6778  00E0DA  0E00               	movlw	0
  6779  00E0DC  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6780                           
  6781                           ;ui.c: 196: break;
  6782  00E0DE  0012               	return	
  6783  00E0E0                     
  6784                           ; BSR set to: 2
  6785                           ;ui.c: 199: if(os.encoderCount>0)
  6786                           
  6787                           ; BSR set to: 2
  6788  00E0E0  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6789  00E0E2  0A80               	xorlw	128
  6790  00E0E4  0F7F               	addlw	-129
  6791  00E0E6  A0D8               	btfss	status,0,c
  6792  00E0E8  D006               	goto	l1586
  6793                           
  6794                           ; BSR set to: 2
  6795                           ;ui.c: 200: {;ui.c: 201: if(os.output_voltage>-1)
  6796  00E0EA  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6797  00E0EC  D00A               	goto	l1589
  6798                           
  6799                           ; BSR set to: 2
  6800                           ;ui.c: 202: system_output_on(OUTPUT_1);
  6801  00E0EE  0E01               	movlw	1
  6802  00E0F0  ECDD  F0BF         	call	_system_output_on
  6803                           
  6804                           ;ui.c: 203: }
  6805  00E0F4  D006               	goto	l1589
  6806  00E0F6                     l1586:
  6807                           
  6808                           ;ui.c: 204: else if(os.encoderCount<0)
  6809  00E0F6  0102               	movlb	2	; () banked
  6810  00E0F8  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6811  00E0FA  D003               	goto	l1589
  6812                           
  6813                           ; BSR set to: 2
  6814                           ;ui.c: 205: {;ui.c: 206: system_output_off(OUTPUT_1);
  6815  00E0FC  0E01               	movlw	1
  6816  00E0FE  ECC5  F0BD         	call	_system_output_off
  6817  00E102                     l1589:
  6818                           
  6819                           ;ui.c: 207: };ui.c: 208: if(os.buttonCount)
  6820  00E102  0102               	movlb	2	; () banked
  6821  00E104  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6822  00E106  B4D8               	btfsc	status,2,c
  6823  00E108  D002               	goto	l1590
  6824                           
  6825                           ; BSR set to: 2
  6826                           ;ui.c: 209: {;ui.c: 210: os.display_mode = DISPLAY_MODE_OUTPUTS_2;
  6827  00E10A  0E32               	movlw	50
  6828  00E10C  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6829  00E10E                     l1590:
  6830                           
  6831                           ; BSR set to: 2
  6832                           ;ui.c: 211: };ui.c: 212: os.encoderCount = 0;
  6833  00E10E  0E00               	movlw	0
  6834  00E110  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6835                           
  6836                           ;ui.c: 213: os.buttonCount = 0;
  6837  00E112  0E00               	movlw	0
  6838  00E114  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6839                           
  6840                           ;ui.c: 214: break;
  6841  00E116  0012               	return	
  6842  00E118                     
  6843                           ; BSR set to: 2
  6844                           ;ui.c: 217: if(os.encoderCount>0)
  6845                           
  6846                           ; BSR set to: 2
  6847  00E118  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6848  00E11A  0A80               	xorlw	128
  6849  00E11C  0F7F               	addlw	-129
  6850  00E11E  A0D8               	btfss	status,0,c
  6851  00E120  D006               	goto	l1592
  6852                           
  6853                           ; BSR set to: 2
  6854                           ;ui.c: 218: {;ui.c: 219: if(os.output_voltage>-1)
  6855  00E122  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6856  00E124  D00A               	goto	l1595
  6857                           
  6858                           ; BSR set to: 2
  6859                           ;ui.c: 220: system_output_on(OUTPUT_2);
  6860  00E126  0E02               	movlw	2
  6861  00E128  ECDD  F0BF         	call	_system_output_on
  6862                           
  6863                           ;ui.c: 221: }
  6864  00E12C  D006               	goto	l1595
  6865  00E12E                     l1592:
  6866                           
  6867                           ;ui.c: 222: else if(os.encoderCount<0)
  6868  00E12E  0102               	movlb	2	; () banked
  6869  00E130  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6870  00E132  D003               	goto	l1595
  6871                           
  6872                           ; BSR set to: 2
  6873                           ;ui.c: 223: {;ui.c: 224: system_output_off(OUTPUT_2);
  6874  00E134  0E02               	movlw	2
  6875  00E136  ECC5  F0BD         	call	_system_output_off
  6876  00E13A                     l1595:
  6877                           
  6878                           ;ui.c: 225: };ui.c: 226: if(os.buttonCount)
  6879  00E13A  0102               	movlb	2	; () banked
  6880  00E13C  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6881  00E13E  B4D8               	btfsc	status,2,c
  6882  00E140  D002               	goto	l1596
  6883                           
  6884                           ; BSR set to: 2
  6885                           ;ui.c: 227: {;ui.c: 228: os.display_mode = DISPLAY_MODE_OUTPUTS_3;
  6886  00E142  0E33               	movlw	51
  6887  00E144  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6888  00E146                     l1596:
  6889                           
  6890                           ; BSR set to: 2
  6891                           ;ui.c: 229: };ui.c: 230: os.encoderCount = 0;
  6892  00E146  0E00               	movlw	0
  6893  00E148  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6894                           
  6895                           ;ui.c: 231: os.buttonCount = 0;
  6896  00E14A  0E00               	movlw	0
  6897  00E14C  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6898                           
  6899                           ;ui.c: 232: break;
  6900  00E14E  0012               	return	
  6901  00E150                     
  6902                           ; BSR set to: 2
  6903                           ;ui.c: 235: if(os.encoderCount>0)
  6904                           
  6905                           ; BSR set to: 2
  6906  00E150  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6907  00E152  0A80               	xorlw	128
  6908  00E154  0F7F               	addlw	-129
  6909  00E156  A0D8               	btfss	status,0,c
  6910  00E158  D006               	goto	l1598
  6911                           
  6912                           ; BSR set to: 2
  6913                           ;ui.c: 236: {;ui.c: 237: if(os.output_voltage>-1)
  6914  00E15A  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6915  00E15C  D00A               	goto	l1601
  6916                           
  6917                           ; BSR set to: 2
  6918                           ;ui.c: 238: system_output_on(OUTPUT_3);
  6919  00E15E  0E04               	movlw	4
  6920  00E160  ECDD  F0BF         	call	_system_output_on
  6921                           
  6922                           ;ui.c: 239: }
  6923  00E164  D006               	goto	l1601
  6924  00E166                     l1598:
  6925                           
  6926                           ;ui.c: 240: else if(os.encoderCount<0)
  6927  00E166  0102               	movlb	2	; () banked
  6928  00E168  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6929  00E16A  D003               	goto	l1601
  6930                           
  6931                           ; BSR set to: 2
  6932                           ;ui.c: 241: {;ui.c: 242: system_output_off(OUTPUT_3);
  6933  00E16C  0E04               	movlw	4
  6934  00E16E  ECC5  F0BD         	call	_system_output_off
  6935  00E172                     l1601:
  6936                           
  6937                           ;ui.c: 243: };ui.c: 244: if(os.buttonCount)
  6938  00E172  0102               	movlb	2	; () banked
  6939  00E174  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6940  00E176  B4D8               	btfsc	status,2,c
  6941  00E178  D002               	goto	l1602
  6942                           
  6943                           ; BSR set to: 2
  6944                           ;ui.c: 245: {;ui.c: 246: os.display_mode = DISPLAY_MODE_OUTPUTS_4;
  6945  00E17A  0E34               	movlw	52
  6946  00E17C  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  6947  00E17E                     l1602:
  6948                           
  6949                           ; BSR set to: 2
  6950                           ;ui.c: 247: };ui.c: 248: os.encoderCount = 0;
  6951  00E17E  0E00               	movlw	0
  6952  00E180  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  6953                           
  6954                           ;ui.c: 249: os.buttonCount = 0;
  6955  00E182  0E00               	movlw	0
  6956  00E184  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  6957                           
  6958                           ;ui.c: 250: break;
  6959  00E186  0012               	return	
  6960  00E188                     
  6961                           ; BSR set to: 2
  6962                           ;ui.c: 253: if(os.encoderCount>0)
  6963                           
  6964                           ; BSR set to: 2
  6965  00E188  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  6966  00E18A  0A80               	xorlw	128
  6967  00E18C  0F7F               	addlw	-129
  6968  00E18E  A0D8               	btfss	status,0,c
  6969  00E190  D006               	goto	l1604
  6970                           
  6971                           ; BSR set to: 2
  6972                           ;ui.c: 254: {;ui.c: 255: if(os.output_voltage>-1)
  6973  00E192  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
  6974  00E194  D00A               	goto	l1607
  6975                           
  6976                           ; BSR set to: 2
  6977                           ;ui.c: 256: system_output_on(OUTPUT_4);
  6978  00E196  0E08               	movlw	8
  6979  00E198  ECDD  F0BF         	call	_system_output_on
  6980                           
  6981                           ;ui.c: 257: }
  6982  00E19C  D006               	goto	l1607
  6983  00E19E                     l1604:
  6984                           
  6985                           ;ui.c: 258: else if(os.encoderCount<0)
  6986  00E19E  0102               	movlb	2	; () banked
  6987  00E1A0  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  6988  00E1A2  D003               	goto	l1607
  6989                           
  6990                           ; BSR set to: 2
  6991                           ;ui.c: 259: {;ui.c: 260: system_output_off(OUTPUT_4);
  6992  00E1A4  0E08               	movlw	8
  6993  00E1A6  ECC5  F0BD         	call	_system_output_off
  6994  00E1AA                     l1607:
  6995                           
  6996                           ;ui.c: 261: };ui.c: 262: if(os.buttonCount)
  6997  00E1AA  0102               	movlb	2	; () banked
  6998  00E1AC  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  6999  00E1AE  B4D8               	btfsc	status,2,c
  7000  00E1B0  D002               	goto	l1608
  7001                           
  7002                           ; BSR set to: 2
  7003                           ;ui.c: 263: {;ui.c: 264: os.display_mode = DISPLAY_MODE_OUTPUTS;
  7004  00E1B2  0E30               	movlw	48
  7005  00E1B4  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  7006  00E1B6                     l1608:
  7007                           
  7008                           ; BSR set to: 2
  7009                           ;ui.c: 265: };ui.c: 266: os.encoderCount = 0;
  7010  00E1B6  0E00               	movlw	0
  7011  00E1B8  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  7012                           
  7013                           ;ui.c: 267: os.buttonCount = 0;
  7014  00E1BA  0E00               	movlw	0
  7015  00E1BC  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  7016                           
  7017                           ;ui.c: 268: break;
  7018  00E1BE  0012               	return	
  7019  00E1C0                     
  7020                           ; BSR set to: 2
  7021                           ;ui.c: 271: if(os.encoderCount>0)
  7022                           
  7023                           ; BSR set to: 2
  7024  00E1C0  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  7025  00E1C2  0A80               	xorlw	128
  7026  00E1C4  0F7F               	addlw	-129
  7027  00E1C6  A0D8               	btfss	status,0,c
  7028  00E1C8  D002               	goto	l1610
  7029                           
  7030                           ; BSR set to: 2
  7031                           ;ui.c: 272: {;ui.c: 273: os.display_mode = DISPLAY_MODE_EFFICIENCY;
  7032  00E1CA  0E50               	movlw	80
  7033  00E1CC  D003               	goto	L5
  7034  00E1CE                     l1610:
  7035                           
  7036                           ; BSR set to: 2
  7037                           ;ui.c: 275: else if(os.encoderCount<0)
  7038                           
  7039                           ; BSR set to: 2
  7040  00E1CE  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  7041  00E1D0  D002               	goto	l1612
  7042                           
  7043                           ; BSR set to: 2
  7044                           ;ui.c: 276: {;ui.c: 277: os.display_mode = DISPLAY_MODE_OUTPUTS;
  7045  00E1D2  0E30               	movlw	48
  7046  00E1D4                     L5:
  7047  00E1D4  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  7048  00E1D6                     l1612:
  7049                           
  7050                           ; BSR set to: 2
  7051                           ;ui.c: 278: };ui.c: 279: if(os.buttonCount)
  7052                           
  7053                           ; BSR set to: 2
  7054  00E1D6  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  7055                           
  7056                           ; BSR set to: 2
  7057                           ;ui.c: 282: };ui.c: 283: os.encoderCount = 0;
  7058                           
  7059                           ; BSR set to: 2
  7060                           
  7061                           ;ui.c: 280: {;ui.c: 281: ;
  7062  00E1D8  0E00               	movlw	0
  7063  00E1DA  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  7064                           
  7065                           ;ui.c: 284: os.buttonCount = 0;
  7066  00E1DC  0E00               	movlw	0
  7067  00E1DE  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  7068                           
  7069                           ;ui.c: 285: break;
  7070  00E1E0  0012               	return	
  7071  00E1E2                     
  7072                           ; BSR set to: 2
  7073                           ;ui.c: 288: if(os.encoderCount>0)
  7074                           
  7075                           ; BSR set to: 2
  7076  00E1E2  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  7077  00E1E4  0A80               	xorlw	128
  7078  00E1E6  0F7F               	addlw	-129
  7079  00E1E8  A0D8               	btfss	status,0,c
  7080  00E1EA  D002               	goto	l1615
  7081                           
  7082                           ; BSR set to: 2
  7083                           ;ui.c: 289: {;ui.c: 290: os.display_mode = DISPLAY_MODE_TEMPERATURE;
  7084  00E1EC  0E60               	movlw	96
  7085  00E1EE  D003               	goto	L6
  7086  00E1F0                     l1615:
  7087                           
  7088                           ; BSR set to: 2
  7089                           ;ui.c: 292: else if(os.encoderCount<0)
  7090                           
  7091                           ; BSR set to: 2
  7092  00E1F0  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  7093  00E1F2  D002               	goto	l1617
  7094                           
  7095                           ; BSR set to: 2
  7096                           ;ui.c: 293: {;ui.c: 294: os.display_mode = DISPLAY_MODE_CHARGER_DETAILS;
  7097  00E1F4  0E40               	movlw	64
  7098  00E1F6                     L6:
  7099  00E1F6  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  7100  00E1F8                     l1617:
  7101                           
  7102                           ; BSR set to: 2
  7103                           ;ui.c: 295: };ui.c: 296: if(os.buttonCount)
  7104                           
  7105                           ; BSR set to: 2
  7106  00E1F8  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  7107                           
  7108                           ; BSR set to: 2
  7109                           ;ui.c: 299: };ui.c: 300: os.encoderCount = 0;
  7110                           
  7111                           ; BSR set to: 2
  7112                           
  7113                           ;ui.c: 297: {;ui.c: 298: ;
  7114  00E1FA  0E00               	movlw	0
  7115  00E1FC  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  7116                           
  7117                           ;ui.c: 301: os.buttonCount = 0;
  7118  00E1FE  0E00               	movlw	0
  7119  00E200  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  7120                           
  7121                           ;ui.c: 302: break;
  7122  00E202  0012               	return	
  7123  00E204                     
  7124                           ; BSR set to: 2
  7125                           ;ui.c: 305: if(os.encoderCount>0)
  7126                           
  7127                           ; BSR set to: 2
  7128  00E204  5106               	movf	(_os+6)& (0+255),w,b	;volatile
  7129  00E206  0A80               	xorlw	128
  7130  00E208  0F7F               	addlw	-129
  7131  00E20A  A0D8               	btfss	status,0,c
  7132  00E20C  D002               	goto	l1620
  7133                           
  7134                           ; BSR set to: 2
  7135                           ;ui.c: 306: {;ui.c: 307: os.display_mode = DISPLAY_MODE_OVERVIEW;
  7136  00E20E  0E00               	movlw	0
  7137  00E210  D003               	goto	L7
  7138  00E212                     l1620:
  7139                           
  7140                           ; BSR set to: 2
  7141                           ;ui.c: 309: else if(os.encoderCount<0)
  7142                           
  7143                           ; BSR set to: 2
  7144  00E212  AF06               	btfss	(_os+6)& (0+255),7,b	;volatile
  7145  00E214  D002               	goto	l1622
  7146                           
  7147                           ; BSR set to: 2
  7148                           ;ui.c: 310: {;ui.c: 311: os.display_mode = DISPLAY_MODE_EFFICIENCY;
  7149  00E216  0E50               	movlw	80
  7150  00E218                     L7:
  7151  00E218  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  7152  00E21A                     l1622:
  7153                           
  7154                           ; BSR set to: 2
  7155                           ;ui.c: 312: };ui.c: 313: if(os.buttonCount)
  7156                           
  7157                           ; BSR set to: 2
  7158  00E21A  5107               	movf	(_os+7)& (0+255),w,b	;volatile
  7159                           
  7160                           ; BSR set to: 2
  7161                           ;ui.c: 316: };ui.c: 317: os.encoderCount = 0;
  7162                           
  7163                           ; BSR set to: 2
  7164                           
  7165                           ;ui.c: 314: {;ui.c: 315: ;
  7166  00E21C  0E00               	movlw	0
  7167  00E21E  6F06               	movwf	(_os+6)& (0+255),b	;volatile
  7168                           
  7169                           ;ui.c: 318: os.buttonCount = 0;
  7170  00E220  0E00               	movlw	0
  7171  00E222  6F07               	movwf	(_os+7)& (0+255),b	;volatile
  7172                           
  7173                           ;ui.c: 319: break;
  7174  00E224  0012               	return	
  7175  00E226                     
  7176                           ; BSR set to: 2
  7177                           ;ui.c: 322: os.display_mode = DISPLAY_MODE_OVERVIEW;
  7178                           
  7179                           ; BSR set to: 2
  7180  00E226  0E00               	movlw	0
  7181  00E228  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  7182                           
  7183                           ;ui.c: 323: }
  7184  00E22A  0012               	return	
  7185  00E22C                     l1532:
  7186                           
  7187                           ; BSR set to: 2
  7188  00E22C  0102               	movlb	2	; () banked
  7189  00E22E  5140               	movf	(_os+64)& (0+255),w,b	;volatile
  7190                           
  7191                           ; Switch size 1, requested type "space"
  7192                           ; Number of cases is 17, Range of values is 0 to 96
  7193                           ; switch strategies available:
  7194                           ; Name         Instructions Cycles
  7195                           ; simple_byte           52    27 (average)
  7196                           ;	Chosen strategy is simple_byte
  7197  00E230  0A00               	xorlw	0	; case 0
  7198  00E232  B4D8               	btfsc	status,2,c
  7199  00E234  D668               	goto	l1533
  7200  00E236  0A10               	xorlw	16	; case 16
  7201  00E238  B4D8               	btfsc	status,2,c
  7202  00E23A  D677               	goto	l1539
  7203  00E23C  0A01               	xorlw	1	; case 17
  7204  00E23E  B4D8               	btfsc	status,2,c
  7205  00E240  D689               	goto	l1544
  7206  00E242  0A03               	xorlw	3	; case 18
  7207  00E244  B4D8               	btfsc	status,2,c
  7208  00E246  D6A0               	goto	l1549
  7209  00E248  0A01               	xorlw	1	; case 19
  7210  00E24A  B4D8               	btfsc	status,2,c
  7211  00E24C  D6B7               	goto	l1554
  7212  00E24E  0A07               	xorlw	7	; case 20
  7213  00E250  B4D8               	btfsc	status,2,c
  7214  00E252  D6CB               	goto	l1559
  7215  00E254  0A01               	xorlw	1	; case 21
  7216  00E256  B4D8               	btfsc	status,2,c
  7217  00E258  D6DF               	goto	l1564
  7218  00E25A  0A03               	xorlw	3	; case 22
  7219  00E25C  B4D8               	btfsc	status,2,c
  7220  00E25E  D6F3               	goto	l1569
  7221  00E260  0A36               	xorlw	54	; case 32
  7222  00E262  B4D8               	btfsc	status,2,c
  7223  00E264  D70A               	goto	l1574
  7224  00E266  0A10               	xorlw	16	; case 48
  7225  00E268  B4D8               	btfsc	status,2,c
  7226  00E26A  D725               	goto	l1580
  7227  00E26C  0A01               	xorlw	1	; case 49
  7228  00E26E  B4D8               	btfsc	status,2,c
  7229  00E270  D737               	goto	l1585
  7230  00E272  0A03               	xorlw	3	; case 50
  7231  00E274  B4D8               	btfsc	status,2,c
  7232  00E276  D750               	goto	l1591
  7233  00E278  0A01               	xorlw	1	; case 51
  7234  00E27A  B4D8               	btfsc	status,2,c
  7235  00E27C  D769               	goto	l1597
  7236  00E27E  0A07               	xorlw	7	; case 52
  7237  00E280  B4D8               	btfsc	status,2,c
  7238  00E282  D782               	goto	l1603
  7239  00E284  0A74               	xorlw	116	; case 64
  7240  00E286  B4D8               	btfsc	status,2,c
  7241  00E288  D79B               	goto	l1609
  7242  00E28A  0A10               	xorlw	16	; case 80
  7243  00E28C  B4D8               	btfsc	status,2,c
  7244  00E28E  D7A9               	goto	l1614
  7245  00E290  0A30               	xorlw	48	; case 96
  7246  00E292  B4D8               	btfsc	status,2,c
  7247  00E294  D7B7               	goto	l1619
  7248  00E296  D7C7               	goto	l1624
  7249  00E298                     __end_of__ui_encoder:
  7250                           	opt stack 0
  7251                           tblptru	equ	0xFF8
  7252                           tblptrh	equ	0xFF7
  7253                           tblptrl	equ	0xFF6
  7254                           tablat	equ	0xFF5
  7255                           intcon3	equ	0xFF0
  7256                           postinc0	equ	0xFEE
  7257                           wreg	equ	0xFE8
  7258                           postdec1	equ	0xFE5
  7259                           plusw1	equ	0xFE3
  7260                           fsr1h	equ	0xFE2
  7261                           fsr1l	equ	0xFE1
  7262                           postinc2	equ	0xFDE
  7263                           postdec2	equ	0xFDD
  7264                           plusw2	equ	0xFDB
  7265                           fsr2h	equ	0xFDA
  7266                           fsr2l	equ	0xFD9
  7267                           status	equ	0xFD8
  7268                           
  7269 ;; *************** function _system_output_toggle *****************
  7270 ;; Defined at:
  7271 ;;		line 500 in file "os.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;  output          1    wreg     enum E6793
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;  output          1    2[BANK0 ] enum E6793
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  1    wreg      void 
  7278 ;; Registers used:
  7279 ;;		wreg, status,2, status,0, cstack
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7288 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7289 ;;Total ram usage:        1 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; Hardware stack levels required when called:   11
  7292 ;; This function calls:
  7293 ;;		_system_output_is_on
  7294 ;;		_system_output_off
  7295 ;;		_system_output_on
  7296 ;; This function is called by:
  7297 ;;		__ui_encoder
  7298 ;; This function uses a non-reentrant model
  7299 ;;
  7300                           
  7301                           	psect	text9
  7302  018A92                     __ptext9:
  7303                           	opt stack 0
  7304  018A92                     _system_output_toggle:
  7305                           	opt stack 17
  7306                           
  7307                           ; BSR set to: 2
  7308                           ;incstack = 0
  7309                           ;system_output_toggle@output stored from wreg
  7310  018A92  0100               	movlb	0	; () banked
  7311  018A94  6F62               	movwf	system_output_toggle@output& (0+255),b
  7312                           
  7313                           ;os.c: 502: if(system_output_is_on(output))
  7314  018A96  0100               	movlb	0	; () banked
  7315  018A98  5162               	movf	system_output_toggle@output& (0+255),w,b
  7316  018A9A  ECF4  F0C6         	call	_system_output_is_on
  7317  018A9E  0900               	iorlw	0
  7318  018AA0  B4D8               	btfsc	status,2,c
  7319  018AA2  D005               	goto	l1201
  7320                           
  7321                           ;os.c: 503: system_output_off(output);
  7322  018AA4  0100               	movlb	0	; () banked
  7323  018AA6  5162               	movf	system_output_toggle@output& (0+255),w,b
  7324  018AA8  ECC5  F0BD         	call	_system_output_off
  7325  018AAC  0012               	return	
  7326  018AAE                     l1201:
  7327                           
  7328                           ;os.c: 504: else;os.c: 505: system_output_on(output);
  7329  018AAE  0100               	movlb	0	; () banked
  7330  018AB0  5162               	movf	system_output_toggle@output& (0+255),w,b
  7331  018AB2  ECDD  F0BF         	call	_system_output_on
  7332  018AB6  0012               	return	
  7333  018AB8                     __end_of_system_output_toggle:
  7334                           	opt stack 0
  7335                           tblptru	equ	0xFF8
  7336                           tblptrh	equ	0xFF7
  7337                           tblptrl	equ	0xFF6
  7338                           tablat	equ	0xFF5
  7339                           intcon3	equ	0xFF0
  7340                           postinc0	equ	0xFEE
  7341                           wreg	equ	0xFE8
  7342                           postdec1	equ	0xFE5
  7343                           plusw1	equ	0xFE3
  7344                           fsr1h	equ	0xFE2
  7345                           fsr1l	equ	0xFE1
  7346                           postinc2	equ	0xFDE
  7347                           postdec2	equ	0xFDD
  7348                           plusw2	equ	0xFDB
  7349                           fsr2h	equ	0xFDA
  7350                           fsr2l	equ	0xFD9
  7351                           status	equ	0xFD8
  7352                           
  7353 ;; *************** function _rtcc_increment_year *****************
  7354 ;; Defined at:
  7355 ;;		line 150 in file "rtcc.c"
  7356 ;; Parameters:    Size  Location     Type
  7357 ;;		None
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;  year            1    8[BANK0 ] unsigned char 
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  1    wreg      void 
  7362 ;; Registers used:
  7363 ;;		wreg, status,2, status,0, cstack
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7370 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7372 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7373 ;;Total ram usage:        1 bytes
  7374 ;; Hardware stack levels used:    1
  7375 ;; Hardware stack levels required when called:   12
  7376 ;; This function calls:
  7377 ;;		__rtcc_increment_bcd
  7378 ;;		_rtcc_get_year
  7379 ;;		_rtcc_set_year
  7380 ;; This function is called by:
  7381 ;;		__ui_encoder
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           	psect	text10
  7386  018B28                     __ptext10:
  7387                           	opt stack 0
  7388  018B28                     _rtcc_increment_year:
  7389                           	opt stack 16
  7390                           
  7391                           ;rtcc.c: 152: uint8_t year = rtcc_get_year();
  7392                           
  7393                           ;incstack = 0
  7394  018B28  EC37  F0C8         	call	_rtcc_get_year	;wreg free
  7395  018B2C  0100               	movlb	0	; () banked
  7396  018B2E  6F68               	movwf	rtcc_increment_year@year& (0+255),b
  7397                           
  7398                           ; BSR set to: 0
  7399                           ;rtcc.c: 153: year = _rtcc_increment_bcd(year, 0x00, 0x99);
  7400  018B30  0E00               	movlw	0
  7401  018B32  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7402  018B34  0E99               	movlw	153
  7403  018B36  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7404  018B38  5168               	movf	rtcc_increment_year@year& (0+255),w,b
  7405  018B3A  ECC5  F0C3         	call	__rtcc_increment_bcd
  7406  018B3E  0100               	movlb	0	; () banked
  7407  018B40  6F68               	movwf	rtcc_increment_year@year& (0+255),b
  7408                           
  7409                           ; BSR set to: 0
  7410                           ;rtcc.c: 154: rtcc_set_year(year);
  7411  018B42  5168               	movf	rtcc_increment_year@year& (0+255),w,b
  7412  018B44  EC40  F0C7         	call	_rtcc_set_year
  7413  018B48  0012               	return		;funcret
  7414  018B4A                     __end_of_rtcc_increment_year:
  7415                           	opt stack 0
  7416                           tblptru	equ	0xFF8
  7417                           tblptrh	equ	0xFF7
  7418                           tblptrl	equ	0xFF6
  7419                           tablat	equ	0xFF5
  7420                           intcon3	equ	0xFF0
  7421                           postinc0	equ	0xFEE
  7422                           wreg	equ	0xFE8
  7423                           postdec1	equ	0xFE5
  7424                           plusw1	equ	0xFE3
  7425                           fsr1h	equ	0xFE2
  7426                           fsr1l	equ	0xFE1
  7427                           postinc2	equ	0xFDE
  7428                           postdec2	equ	0xFDD
  7429                           plusw2	equ	0xFDB
  7430                           fsr2h	equ	0xFDA
  7431                           fsr2l	equ	0xFD9
  7432                           status	equ	0xFD8
  7433                           
  7434 ;; *************** function _rtcc_increment_seconds *****************
  7435 ;; Defined at:
  7436 ;;		line 340 in file "rtcc.c"
  7437 ;; Parameters:    Size  Location     Type
  7438 ;;		None
  7439 ;; Auto vars:     Size  Location     Type
  7440 ;;  seconds         1    8[BANK0 ] unsigned char 
  7441 ;; Return value:  Size  Location     Type
  7442 ;;                  1    wreg      void 
  7443 ;; Registers used:
  7444 ;;		wreg, status,2, status,0, cstack
  7445 ;; Tracked objects:
  7446 ;;		On entry : 0/0
  7447 ;;		On exit  : 0/0
  7448 ;;		Unchanged: 0/0
  7449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7451 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7453 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7454 ;;Total ram usage:        1 bytes
  7455 ;; Hardware stack levels used:    1
  7456 ;; Hardware stack levels required when called:   12
  7457 ;; This function calls:
  7458 ;;		__rtcc_increment_bcd
  7459 ;;		_rtcc_get_seconds
  7460 ;;		_rtcc_set_seconds
  7461 ;; This function is called by:
  7462 ;;		__ui_encoder
  7463 ;; This function uses a non-reentrant model
  7464 ;;
  7465                           
  7466                           	psect	text11
  7467  018B4A                     __ptext11:
  7468                           	opt stack 0
  7469  018B4A                     _rtcc_increment_seconds:
  7470                           	opt stack 16
  7471                           
  7472                           ;rtcc.c: 342: uint8_t seconds = rtcc_get_seconds();
  7473                           
  7474                           ;incstack = 0
  7475  018B4A  EC22  F0C8         	call	_rtcc_get_seconds	;wreg free
  7476  018B4E  0100               	movlb	0	; () banked
  7477  018B50  6F68               	movwf	rtcc_increment_seconds@seconds& (0+255),b
  7478                           
  7479                           ; BSR set to: 0
  7480                           ;rtcc.c: 343: seconds = _rtcc_increment_bcd(seconds, 0x00, 0x59);
  7481  018B52  0E00               	movlw	0
  7482  018B54  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7483  018B56  0E59               	movlw	89
  7484  018B58  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7485  018B5A  5168               	movf	rtcc_increment_seconds@seconds& (0+255),w,b
  7486  018B5C  ECC5  F0C3         	call	__rtcc_increment_bcd
  7487  018B60  0100               	movlb	0	; () banked
  7488  018B62  6F68               	movwf	rtcc_increment_seconds@seconds& (0+255),b
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;rtcc.c: 344: rtcc_set_seconds(seconds);
  7492  018B64  5168               	movf	rtcc_increment_seconds@seconds& (0+255),w,b
  7493  018B66  EC4C  F0C7         	call	_rtcc_set_seconds
  7494  018B6A  0012               	return		;funcret
  7495  018B6C                     __end_of_rtcc_increment_seconds:
  7496                           	opt stack 0
  7497                           tblptru	equ	0xFF8
  7498                           tblptrh	equ	0xFF7
  7499                           tblptrl	equ	0xFF6
  7500                           tablat	equ	0xFF5
  7501                           intcon3	equ	0xFF0
  7502                           postinc0	equ	0xFEE
  7503                           wreg	equ	0xFE8
  7504                           postdec1	equ	0xFE5
  7505                           plusw1	equ	0xFE3
  7506                           fsr1h	equ	0xFE2
  7507                           fsr1l	equ	0xFE1
  7508                           postinc2	equ	0xFDE
  7509                           postdec2	equ	0xFDD
  7510                           plusw2	equ	0xFDB
  7511                           fsr2h	equ	0xFDA
  7512                           fsr2l	equ	0xFD9
  7513                           status	equ	0xFD8
  7514                           
  7515 ;; *************** function _rtcc_increment_month *****************
  7516 ;; Defined at:
  7517 ;;		line 188 in file "rtcc.c"
  7518 ;; Parameters:    Size  Location     Type
  7519 ;;		None
  7520 ;; Auto vars:     Size  Location     Type
  7521 ;;  month           1    8[BANK0 ] unsigned char 
  7522 ;; Return value:  Size  Location     Type
  7523 ;;                  1    wreg      void 
  7524 ;; Registers used:
  7525 ;;		wreg, status,2, status,0, cstack
  7526 ;; Tracked objects:
  7527 ;;		On entry : 0/0
  7528 ;;		On exit  : 0/0
  7529 ;;		Unchanged: 0/0
  7530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7532 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7534 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7535 ;;Total ram usage:        1 bytes
  7536 ;; Hardware stack levels used:    1
  7537 ;; Hardware stack levels required when called:   12
  7538 ;; This function calls:
  7539 ;;		__rtcc_increment_bcd
  7540 ;;		_rtcc_get_month
  7541 ;;		_rtcc_set_month
  7542 ;; This function is called by:
  7543 ;;		__ui_encoder
  7544 ;; This function uses a non-reentrant model
  7545 ;;
  7546                           
  7547                           	psect	text12
  7548  018B6C                     __ptext12:
  7549                           	opt stack 0
  7550  018B6C                     _rtcc_increment_month:
  7551                           	opt stack 16
  7552                           
  7553                           ;rtcc.c: 190: uint8_t month = rtcc_get_month();
  7554                           
  7555                           ;incstack = 0
  7556  018B6C  EC3E  F0C8         	call	_rtcc_get_month	;wreg free
  7557  018B70  0100               	movlb	0	; () banked
  7558  018B72  6F68               	movwf	rtcc_increment_month@month& (0+255),b
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;rtcc.c: 191: month = _rtcc_increment_bcd(month, 0x01, 0x12);
  7562  018B74  0E01               	movlw	1
  7563  018B76  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7564  018B78  0E12               	movlw	18
  7565  018B7A  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7566  018B7C  5168               	movf	rtcc_increment_month@month& (0+255),w,b
  7567  018B7E  ECC5  F0C3         	call	__rtcc_increment_bcd
  7568  018B82  0100               	movlb	0	; () banked
  7569  018B84  6F68               	movwf	rtcc_increment_month@month& (0+255),b
  7570                           
  7571                           ; BSR set to: 0
  7572                           ;rtcc.c: 192: rtcc_set_month(month);
  7573  018B86  5168               	movf	rtcc_increment_month@month& (0+255),w,b
  7574  018B88  EC58  F0C7         	call	_rtcc_set_month
  7575  018B8C  0012               	return		;funcret
  7576  018B8E                     __end_of_rtcc_increment_month:
  7577                           	opt stack 0
  7578                           tblptru	equ	0xFF8
  7579                           tblptrh	equ	0xFF7
  7580                           tblptrl	equ	0xFF6
  7581                           tablat	equ	0xFF5
  7582                           intcon3	equ	0xFF0
  7583                           postinc0	equ	0xFEE
  7584                           wreg	equ	0xFE8
  7585                           postdec1	equ	0xFE5
  7586                           plusw1	equ	0xFE3
  7587                           fsr1h	equ	0xFE2
  7588                           fsr1l	equ	0xFE1
  7589                           postinc2	equ	0xFDE
  7590                           postdec2	equ	0xFDD
  7591                           plusw2	equ	0xFDB
  7592                           fsr2h	equ	0xFDA
  7593                           fsr2l	equ	0xFD9
  7594                           status	equ	0xFD8
  7595                           
  7596 ;; *************** function _rtcc_increment_minutes *****************
  7597 ;; Defined at:
  7598 ;;		line 302 in file "rtcc.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;		None
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;  minutes         1    8[BANK0 ] unsigned char 
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  1    wreg      void 
  7605 ;; Registers used:
  7606 ;;		wreg, status,2, status,0, cstack
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/0
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7613 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7615 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7616 ;;Total ram usage:        1 bytes
  7617 ;; Hardware stack levels used:    1
  7618 ;; Hardware stack levels required when called:   12
  7619 ;; This function calls:
  7620 ;;		__rtcc_increment_bcd
  7621 ;;		_rtcc_get_minutes
  7622 ;;		_rtcc_set_minutes
  7623 ;; This function is called by:
  7624 ;;		__ui_encoder
  7625 ;; This function uses a non-reentrant model
  7626 ;;
  7627                           
  7628                           	psect	text13
  7629  018B8E                     __ptext13:
  7630                           	opt stack 0
  7631  018B8E                     _rtcc_increment_minutes:
  7632                           	opt stack 16
  7633                           
  7634                           ;rtcc.c: 304: uint8_t minutes = rtcc_get_minutes();
  7635                           
  7636                           ;incstack = 0
  7637  018B8E  EC29  F0C8         	call	_rtcc_get_minutes	;wreg free
  7638  018B92  0100               	movlb	0	; () banked
  7639  018B94  6F68               	movwf	rtcc_increment_minutes@minutes& (0+255),b
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;rtcc.c: 305: minutes = _rtcc_increment_bcd(minutes, 0x00, 0x59);
  7643  018B96  0E00               	movlw	0
  7644  018B98  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7645  018B9A  0E59               	movlw	89
  7646  018B9C  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7647  018B9E  5168               	movf	rtcc_increment_minutes@minutes& (0+255),w,b
  7648  018BA0  ECC5  F0C3         	call	__rtcc_increment_bcd
  7649  018BA4  0100               	movlb	0	; () banked
  7650  018BA6  6F68               	movwf	rtcc_increment_minutes@minutes& (0+255),b
  7651                           
  7652                           ; BSR set to: 0
  7653                           ;rtcc.c: 306: rtcc_set_minutes(minutes);
  7654  018BA8  5168               	movf	rtcc_increment_minutes@minutes& (0+255),w,b
  7655  018BAA  EC64  F0C7         	call	_rtcc_set_minutes
  7656  018BAE  0012               	return		;funcret
  7657  018BB0                     __end_of_rtcc_increment_minutes:
  7658                           	opt stack 0
  7659                           tblptru	equ	0xFF8
  7660                           tblptrh	equ	0xFF7
  7661                           tblptrl	equ	0xFF6
  7662                           tablat	equ	0xFF5
  7663                           intcon3	equ	0xFF0
  7664                           postinc0	equ	0xFEE
  7665                           wreg	equ	0xFE8
  7666                           postdec1	equ	0xFE5
  7667                           plusw1	equ	0xFE3
  7668                           fsr1h	equ	0xFE2
  7669                           fsr1l	equ	0xFE1
  7670                           postinc2	equ	0xFDE
  7671                           postdec2	equ	0xFDD
  7672                           plusw2	equ	0xFDB
  7673                           fsr2h	equ	0xFDA
  7674                           fsr2l	equ	0xFD9
  7675                           status	equ	0xFD8
  7676                           
  7677 ;; *************** function _rtcc_increment_hours *****************
  7678 ;; Defined at:
  7679 ;;		line 264 in file "rtcc.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;		None
  7682 ;; Auto vars:     Size  Location     Type
  7683 ;;  hours           1    8[BANK0 ] unsigned char 
  7684 ;; Return value:  Size  Location     Type
  7685 ;;                  1    wreg      void 
  7686 ;; Registers used:
  7687 ;;		wreg, status,2, status,0, cstack
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/0
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7694 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7696 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7697 ;;Total ram usage:        1 bytes
  7698 ;; Hardware stack levels used:    1
  7699 ;; Hardware stack levels required when called:   12
  7700 ;; This function calls:
  7701 ;;		__rtcc_increment_bcd
  7702 ;;		_rtcc_get_hours
  7703 ;;		_rtcc_set_hours
  7704 ;; This function is called by:
  7705 ;;		__ui_encoder
  7706 ;; This function uses a non-reentrant model
  7707 ;;
  7708                           
  7709                           	psect	text14
  7710  018BB0                     __ptext14:
  7711                           	opt stack 0
  7712  018BB0                     _rtcc_increment_hours:
  7713                           	opt stack 16
  7714                           
  7715                           ;rtcc.c: 266: uint8_t hours = rtcc_get_hours();
  7716                           
  7717                           ;incstack = 0
  7718  018BB0  EC30  F0C8         	call	_rtcc_get_hours	;wreg free
  7719  018BB4  0100               	movlb	0	; () banked
  7720  018BB6  6F68               	movwf	rtcc_increment_hours@hours& (0+255),b
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;rtcc.c: 267: hours = _rtcc_increment_bcd(hours, 0x00, 0x23);
  7724  018BB8  0E00               	movlw	0
  7725  018BBA  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7726  018BBC  0E23               	movlw	35
  7727  018BBE  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7728  018BC0  5168               	movf	rtcc_increment_hours@hours& (0+255),w,b
  7729  018BC2  ECC5  F0C3         	call	__rtcc_increment_bcd
  7730  018BC6  0100               	movlb	0	; () banked
  7731  018BC8  6F68               	movwf	rtcc_increment_hours@hours& (0+255),b
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;rtcc.c: 268: rtcc_set_hours(hours);
  7735  018BCA  5168               	movf	rtcc_increment_hours@hours& (0+255),w,b
  7736  018BCC  EC70  F0C7         	call	_rtcc_set_hours
  7737  018BD0  0012               	return		;funcret
  7738  018BD2                     __end_of_rtcc_increment_hours:
  7739                           	opt stack 0
  7740                           tblptru	equ	0xFF8
  7741                           tblptrh	equ	0xFF7
  7742                           tblptrl	equ	0xFF6
  7743                           tablat	equ	0xFF5
  7744                           intcon3	equ	0xFF0
  7745                           postinc0	equ	0xFEE
  7746                           wreg	equ	0xFE8
  7747                           postdec1	equ	0xFE5
  7748                           plusw1	equ	0xFE3
  7749                           fsr1h	equ	0xFE2
  7750                           fsr1l	equ	0xFE1
  7751                           postinc2	equ	0xFDE
  7752                           postdec2	equ	0xFDD
  7753                           plusw2	equ	0xFDB
  7754                           fsr2h	equ	0xFDA
  7755                           fsr2l	equ	0xFD9
  7756                           status	equ	0xFD8
  7757                           
  7758 ;; *************** function _rtcc_increment_day *****************
  7759 ;; Defined at:
  7760 ;;		line 226 in file "rtcc.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;		None
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;  day             1    8[BANK0 ] unsigned char 
  7765 ;; Return value:  Size  Location     Type
  7766 ;;                  1    wreg      void 
  7767 ;; Registers used:
  7768 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7769 ;; Tracked objects:
  7770 ;;		On entry : 0/0
  7771 ;;		On exit  : 0/0
  7772 ;;		Unchanged: 0/0
  7773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7775 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7777 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7778 ;;Total ram usage:        1 bytes
  7779 ;; Hardware stack levels used:    1
  7780 ;; Hardware stack levels required when called:   12
  7781 ;; This function calls:
  7782 ;;		__number_of_days
  7783 ;;		__rtcc_increment_bcd
  7784 ;;		_rtcc_get_day
  7785 ;;		_rtcc_set_day
  7786 ;; This function is called by:
  7787 ;;		__ui_encoder
  7788 ;; This function uses a non-reentrant model
  7789 ;;
  7790                           
  7791                           	psect	text15
  7792  018AB8                     __ptext15:
  7793                           	opt stack 0
  7794  018AB8                     _rtcc_increment_day:
  7795                           	opt stack 16
  7796                           
  7797                           ;rtcc.c: 228: uint8_t day = rtcc_get_day();
  7798                           
  7799                           ;incstack = 0
  7800  018AB8  EC45  F0C8         	call	_rtcc_get_day	;wreg free
  7801  018ABC  0100               	movlb	0	; () banked
  7802  018ABE  6F68               	movwf	rtcc_increment_day@day& (0+255),b
  7803                           
  7804                           ; BSR set to: 0
  7805                           ;rtcc.c: 229: day = _rtcc_increment_bcd(day, 0x01, _number_of_days());
  7806  018AC0  0E01               	movlw	1
  7807  018AC2  6F64               	movwf	__rtcc_increment_bcd@min& (0+255),b
  7808  018AC4  EC69  F0B9         	call	__number_of_days	;wreg free
  7809  018AC8  0100               	movlb	0	; () banked
  7810  018ACA  6F65               	movwf	__rtcc_increment_bcd@max& (0+255),b
  7811  018ACC  5168               	movf	rtcc_increment_day@day& (0+255),w,b
  7812  018ACE  ECC5  F0C3         	call	__rtcc_increment_bcd
  7813  018AD2  0100               	movlb	0	; () banked
  7814  018AD4  6F68               	movwf	rtcc_increment_day@day& (0+255),b
  7815                           
  7816                           ; BSR set to: 0
  7817                           ;rtcc.c: 230: rtcc_set_day(day);
  7818  018AD6  5168               	movf	rtcc_increment_day@day& (0+255),w,b
  7819  018AD8  EC7C  F0C7         	call	_rtcc_set_day
  7820  018ADC  0012               	return		;funcret
  7821  018ADE                     __end_of_rtcc_increment_day:
  7822                           	opt stack 0
  7823                           tblptru	equ	0xFF8
  7824                           tblptrh	equ	0xFF7
  7825                           tblptrl	equ	0xFF6
  7826                           tablat	equ	0xFF5
  7827                           intcon3	equ	0xFF0
  7828                           postinc0	equ	0xFEE
  7829                           wreg	equ	0xFE8
  7830                           postdec1	equ	0xFE5
  7831                           plusw1	equ	0xFE3
  7832                           fsr1h	equ	0xFE2
  7833                           fsr1l	equ	0xFE1
  7834                           postinc2	equ	0xFDE
  7835                           postdec2	equ	0xFDD
  7836                           plusw2	equ	0xFDB
  7837                           fsr2h	equ	0xFDA
  7838                           fsr2l	equ	0xFD9
  7839                           status	equ	0xFD8
  7840                           
  7841 ;; *************** function __rtcc_increment_bcd *****************
  7842 ;; Defined at:
  7843 ;;		line 34 in file "rtcc.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;  value           1    wreg     unsigned char 
  7846 ;;  min             1    4[BANK0 ] unsigned char 
  7847 ;;  max             1    5[BANK0 ] unsigned char 
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;  value           1    7[BANK0 ] unsigned char 
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  1    wreg      unsigned char 
  7852 ;; Registers used:
  7853 ;;		wreg, status,2, status,0
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7859 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7860 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7861 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7862 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7863 ;;Total ram usage:        4 bytes
  7864 ;; Hardware stack levels used:    1
  7865 ;; Hardware stack levels required when called:   10
  7866 ;; This function calls:
  7867 ;;		Nothing
  7868 ;; This function is called by:
  7869 ;;		_rtcc_increment_year
  7870 ;;		_rtcc_increment_month
  7871 ;;		_rtcc_increment_day
  7872 ;;		_rtcc_increment_hours
  7873 ;;		_rtcc_increment_minutes
  7874 ;;		_rtcc_increment_seconds
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           	psect	text16
  7879  01878A                     __ptext16:
  7880                           	opt stack 0
  7881  01878A                     __rtcc_increment_bcd:
  7882                           	opt stack 17
  7883                           
  7884                           ;incstack = 0
  7885                           ;__rtcc_increment_bcd@value stored from wreg
  7886  01878A  0100               	movlb	0	; () banked
  7887  01878C  6F67               	movwf	__rtcc_increment_bcd@value& (0+255),b
  7888                           
  7889                           ;rtcc.c: 36: if(value==max)
  7890  01878E  0100               	movlb	0	; () banked
  7891  018790  5165               	movf	__rtcc_increment_bcd@max& (0+255),w,b
  7892  018792  1967               	xorwf	__rtcc_increment_bcd@value& (0+255),w,b
  7893  018794  A4D8               	btfss	status,2,c
  7894  018796  D002               	goto	l2083
  7895                           
  7896                           ; BSR set to: 0
  7897                           ;rtcc.c: 37: return min;
  7898  018798  5164               	movf	__rtcc_increment_bcd@min& (0+255),w,b
  7899  01879A  0012               	return	
  7900  01879C                     l2083:
  7901                           
  7902                           ; BSR set to: 0
  7903                           ;rtcc.c: 38: ++value;
  7904                           
  7905                           ; BSR set to: 0
  7906  01879C  2B67               	incf	__rtcc_increment_bcd@value& (0+255),f,b
  7907                           
  7908                           ;rtcc.c: 39: if((value&0x0F)>0x09)
  7909  01879E  C067  F066         	movff	__rtcc_increment_bcd@value,??__rtcc_increment_bcd
  7910  0187A2  0E0F               	movlw	15
  7911  0187A4  1766               	andwf	??__rtcc_increment_bcd& (0+255),f,b
  7912  0187A6  0E09               	movlw	9
  7913  0187A8  6566               	cpfsgt	??__rtcc_increment_bcd& (0+255),b
  7914  0187AA  D004               	goto	l2085
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;rtcc.c: 40: {;rtcc.c: 41: value += 0x10;
  7918  0187AC  0E10               	movlw	16
  7919  0187AE  2767               	addwf	__rtcc_increment_bcd@value& (0+255),f,b
  7920                           
  7921                           ;rtcc.c: 42: value &= 0xF0;
  7922  0187B0  0EF0               	movlw	240
  7923  0187B2  1767               	andwf	__rtcc_increment_bcd@value& (0+255),f,b
  7924  0187B4                     l2085:
  7925                           
  7926                           ; BSR set to: 0
  7927                           ;rtcc.c: 43: };rtcc.c: 44: return value;
  7928                           
  7929                           ; BSR set to: 0
  7930  0187B4  5167               	movf	__rtcc_increment_bcd@value& (0+255),w,b
  7931  0187B6  0012               	return	
  7932  0187B8                     __end_of__rtcc_increment_bcd:
  7933                           	opt stack 0
  7934                           tblptru	equ	0xFF8
  7935                           tblptrh	equ	0xFF7
  7936                           tblptrl	equ	0xFF6
  7937                           tablat	equ	0xFF5
  7938                           intcon3	equ	0xFF0
  7939                           postinc0	equ	0xFEE
  7940                           wreg	equ	0xFE8
  7941                           postdec1	equ	0xFE5
  7942                           plusw1	equ	0xFE3
  7943                           fsr1h	equ	0xFE2
  7944                           fsr1l	equ	0xFE1
  7945                           postinc2	equ	0xFDE
  7946                           postdec2	equ	0xFDD
  7947                           plusw2	equ	0xFDB
  7948                           fsr2h	equ	0xFDA
  7949                           fsr2l	equ	0xFD9
  7950                           status	equ	0xFD8
  7951                           
  7952 ;; *************** function _rtcc_decrement_year *****************
  7953 ;; Defined at:
  7954 ;;		line 157 in file "rtcc.c"
  7955 ;; Parameters:    Size  Location     Type
  7956 ;;		None
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;  year            1    8[BANK0 ] unsigned char 
  7959 ;; Return value:  Size  Location     Type
  7960 ;;                  1    wreg      void 
  7961 ;; Registers used:
  7962 ;;		wreg, status,2, status,0, cstack
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7969 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7971 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7972 ;;Total ram usage:        1 bytes
  7973 ;; Hardware stack levels used:    1
  7974 ;; Hardware stack levels required when called:   12
  7975 ;; This function calls:
  7976 ;;		__rtcc_decrement_bcd
  7977 ;;		_rtcc_get_year
  7978 ;;		_rtcc_set_year
  7979 ;; This function is called by:
  7980 ;;		__ui_encoder
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984                           	psect	text17
  7985  018BD2                     __ptext17:
  7986                           	opt stack 0
  7987  018BD2                     _rtcc_decrement_year:
  7988                           	opt stack 16
  7989                           
  7990                           ;rtcc.c: 159: uint8_t year = rtcc_get_year();
  7991                           
  7992                           ; BSR set to: 0
  7993                           ;incstack = 0
  7994  018BD2  EC37  F0C8         	call	_rtcc_get_year	;wreg free
  7995  018BD6  0100               	movlb	0	; () banked
  7996  018BD8  6F68               	movwf	rtcc_decrement_year@year& (0+255),b
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;rtcc.c: 160: year = _rtcc_decrement_bcd(year, 0x00, 0x99);
  8000  018BDA  0E00               	movlw	0
  8001  018BDC  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  8002  018BDE  0E99               	movlw	153
  8003  018BE0  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  8004  018BE2  5168               	movf	rtcc_decrement_year@year& (0+255),w,b
  8005  018BE4  ECDC  F0C3         	call	__rtcc_decrement_bcd
  8006  018BE8  0100               	movlb	0	; () banked
  8007  018BEA  6F68               	movwf	rtcc_decrement_year@year& (0+255),b
  8008                           
  8009                           ; BSR set to: 0
  8010                           ;rtcc.c: 161: rtcc_set_year(year);
  8011  018BEC  5168               	movf	rtcc_decrement_year@year& (0+255),w,b
  8012  018BEE  EC40  F0C7         	call	_rtcc_set_year
  8013  018BF2  0012               	return		;funcret
  8014  018BF4                     __end_of_rtcc_decrement_year:
  8015                           	opt stack 0
  8016                           tblptru	equ	0xFF8
  8017                           tblptrh	equ	0xFF7
  8018                           tblptrl	equ	0xFF6
  8019                           tablat	equ	0xFF5
  8020                           intcon3	equ	0xFF0
  8021                           postinc0	equ	0xFEE
  8022                           wreg	equ	0xFE8
  8023                           postdec1	equ	0xFE5
  8024                           plusw1	equ	0xFE3
  8025                           fsr1h	equ	0xFE2
  8026                           fsr1l	equ	0xFE1
  8027                           postinc2	equ	0xFDE
  8028                           postdec2	equ	0xFDD
  8029                           plusw2	equ	0xFDB
  8030                           fsr2h	equ	0xFDA
  8031                           fsr2l	equ	0xFD9
  8032                           status	equ	0xFD8
  8033                           
  8034 ;; *************** function _rtcc_decrement_seconds *****************
  8035 ;; Defined at:
  8036 ;;		line 347 in file "rtcc.c"
  8037 ;; Parameters:    Size  Location     Type
  8038 ;;		None
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;  seconds         1    8[BANK0 ] unsigned char 
  8041 ;; Return value:  Size  Location     Type
  8042 ;;                  1    wreg      void 
  8043 ;; Registers used:
  8044 ;;		wreg, status,2, status,0, cstack
  8045 ;; Tracked objects:
  8046 ;;		On entry : 0/0
  8047 ;;		On exit  : 0/0
  8048 ;;		Unchanged: 0/0
  8049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8051 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8053 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8054 ;;Total ram usage:        1 bytes
  8055 ;; Hardware stack levels used:    1
  8056 ;; Hardware stack levels required when called:   12
  8057 ;; This function calls:
  8058 ;;		__rtcc_decrement_bcd
  8059 ;;		_rtcc_get_seconds
  8060 ;;		_rtcc_set_seconds
  8061 ;; This function is called by:
  8062 ;;		__ui_encoder
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066                           	psect	text18
  8067  018BF4                     __ptext18:
  8068                           	opt stack 0
  8069  018BF4                     _rtcc_decrement_seconds:
  8070                           	opt stack 16
  8071                           
  8072                           ;rtcc.c: 349: uint8_t seconds = rtcc_get_seconds();
  8073                           
  8074                           ;incstack = 0
  8075  018BF4  EC22  F0C8         	call	_rtcc_get_seconds	;wreg free
  8076  018BF8  0100               	movlb	0	; () banked
  8077  018BFA  6F68               	movwf	rtcc_decrement_seconds@seconds& (0+255),b
  8078                           
  8079                           ; BSR set to: 0
  8080                           ;rtcc.c: 350: seconds = _rtcc_decrement_bcd(seconds, 0x00, 0x59);
  8081  018BFC  0E00               	movlw	0
  8082  018BFE  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  8083  018C00  0E59               	movlw	89
  8084  018C02  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  8085  018C04  5168               	movf	rtcc_decrement_seconds@seconds& (0+255),w,b
  8086  018C06  ECDC  F0C3         	call	__rtcc_decrement_bcd
  8087  018C0A  0100               	movlb	0	; () banked
  8088  018C0C  6F68               	movwf	rtcc_decrement_seconds@seconds& (0+255),b
  8089                           
  8090                           ; BSR set to: 0
  8091                           ;rtcc.c: 351: rtcc_set_seconds(seconds);
  8092  018C0E  5168               	movf	rtcc_decrement_seconds@seconds& (0+255),w,b
  8093  018C10  EC4C  F0C7         	call	_rtcc_set_seconds
  8094  018C14  0012               	return		;funcret
  8095  018C16                     __end_of_rtcc_decrement_seconds:
  8096                           	opt stack 0
  8097                           tblptru	equ	0xFF8
  8098                           tblptrh	equ	0xFF7
  8099                           tblptrl	equ	0xFF6
  8100                           tablat	equ	0xFF5
  8101                           intcon3	equ	0xFF0
  8102                           postinc0	equ	0xFEE
  8103                           wreg	equ	0xFE8
  8104                           postdec1	equ	0xFE5
  8105                           plusw1	equ	0xFE3
  8106                           fsr1h	equ	0xFE2
  8107                           fsr1l	equ	0xFE1
  8108                           postinc2	equ	0xFDE
  8109                           postdec2	equ	0xFDD
  8110                           plusw2	equ	0xFDB
  8111                           fsr2h	equ	0xFDA
  8112                           fsr2l	equ	0xFD9
  8113                           status	equ	0xFD8
  8114                           
  8115 ;; *************** function _rtcc_decrement_month *****************
  8116 ;; Defined at:
  8117 ;;		line 195 in file "rtcc.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;		None
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;  month           1    8[BANK0 ] unsigned char 
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  1    wreg      void 
  8124 ;; Registers used:
  8125 ;;		wreg, status,2, status,0, cstack
  8126 ;; Tracked objects:
  8127 ;;		On entry : 0/0
  8128 ;;		On exit  : 0/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8132 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8134 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8135 ;;Total ram usage:        1 bytes
  8136 ;; Hardware stack levels used:    1
  8137 ;; Hardware stack levels required when called:   12
  8138 ;; This function calls:
  8139 ;;		__rtcc_decrement_bcd
  8140 ;;		_rtcc_get_month
  8141 ;;		_rtcc_set_month
  8142 ;; This function is called by:
  8143 ;;		__ui_encoder
  8144 ;; This function uses a non-reentrant model
  8145 ;;
  8146                           
  8147                           	psect	text19
  8148  018C16                     __ptext19:
  8149                           	opt stack 0
  8150  018C16                     _rtcc_decrement_month:
  8151                           	opt stack 16
  8152                           
  8153                           ;rtcc.c: 197: uint8_t month = rtcc_get_month();
  8154                           
  8155                           ;incstack = 0
  8156  018C16  EC3E  F0C8         	call	_rtcc_get_month	;wreg free
  8157  018C1A  0100               	movlb	0	; () banked
  8158  018C1C  6F68               	movwf	rtcc_decrement_month@month& (0+255),b
  8159                           
  8160                           ; BSR set to: 0
  8161                           ;rtcc.c: 198: month = _rtcc_decrement_bcd(month, 0x01, 0x12);
  8162  018C1E  0E01               	movlw	1
  8163  018C20  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  8164  018C22  0E12               	movlw	18
  8165  018C24  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  8166  018C26  5168               	movf	rtcc_decrement_month@month& (0+255),w,b
  8167  018C28  ECDC  F0C3         	call	__rtcc_decrement_bcd
  8168  018C2C  0100               	movlb	0	; () banked
  8169  018C2E  6F68               	movwf	rtcc_decrement_month@month& (0+255),b
  8170                           
  8171                           ; BSR set to: 0
  8172                           ;rtcc.c: 199: rtcc_set_month(month);
  8173  018C30  5168               	movf	rtcc_decrement_month@month& (0+255),w,b
  8174  018C32  EC58  F0C7         	call	_rtcc_set_month
  8175  018C36  0012               	return		;funcret
  8176  018C38                     __end_of_rtcc_decrement_month:
  8177                           	opt stack 0
  8178                           tblptru	equ	0xFF8
  8179                           tblptrh	equ	0xFF7
  8180                           tblptrl	equ	0xFF6
  8181                           tablat	equ	0xFF5
  8182                           intcon3	equ	0xFF0
  8183                           postinc0	equ	0xFEE
  8184                           wreg	equ	0xFE8
  8185                           postdec1	equ	0xFE5
  8186                           plusw1	equ	0xFE3
  8187                           fsr1h	equ	0xFE2
  8188                           fsr1l	equ	0xFE1
  8189                           postinc2	equ	0xFDE
  8190                           postdec2	equ	0xFDD
  8191                           plusw2	equ	0xFDB
  8192                           fsr2h	equ	0xFDA
  8193                           fsr2l	equ	0xFD9
  8194                           status	equ	0xFD8
  8195                           
  8196 ;; *************** function _rtcc_decrement_minutes *****************
  8197 ;; Defined at:
  8198 ;;		line 309 in file "rtcc.c"
  8199 ;; Parameters:    Size  Location     Type
  8200 ;;		None
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;  minutes         1    8[BANK0 ] unsigned char 
  8203 ;; Return value:  Size  Location     Type
  8204 ;;                  1    wreg      void 
  8205 ;; Registers used:
  8206 ;;		wreg, status,2, status,0, cstack
  8207 ;; Tracked objects:
  8208 ;;		On entry : 0/0
  8209 ;;		On exit  : 0/0
  8210 ;;		Unchanged: 0/0
  8211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8213 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8215 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8216 ;;Total ram usage:        1 bytes
  8217 ;; Hardware stack levels used:    1
  8218 ;; Hardware stack levels required when called:   12
  8219 ;; This function calls:
  8220 ;;		__rtcc_decrement_bcd
  8221 ;;		_rtcc_get_minutes
  8222 ;;		_rtcc_set_minutes
  8223 ;; This function is called by:
  8224 ;;		__ui_encoder
  8225 ;; This function uses a non-reentrant model
  8226 ;;
  8227                           
  8228                           	psect	text20
  8229  018C38                     __ptext20:
  8230                           	opt stack 0
  8231  018C38                     _rtcc_decrement_minutes:
  8232                           	opt stack 16
  8233                           
  8234                           ;rtcc.c: 311: uint8_t minutes = rtcc_get_minutes();
  8235                           
  8236                           ;incstack = 0
  8237  018C38  EC29  F0C8         	call	_rtcc_get_minutes	;wreg free
  8238  018C3C  0100               	movlb	0	; () banked
  8239  018C3E  6F68               	movwf	rtcc_decrement_minutes@minutes& (0+255),b
  8240                           
  8241                           ; BSR set to: 0
  8242                           ;rtcc.c: 312: minutes = _rtcc_decrement_bcd(minutes, 0x00, 0x59);
  8243  018C40  0E00               	movlw	0
  8244  018C42  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  8245  018C44  0E59               	movlw	89
  8246  018C46  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  8247  018C48  5168               	movf	rtcc_decrement_minutes@minutes& (0+255),w,b
  8248  018C4A  ECDC  F0C3         	call	__rtcc_decrement_bcd
  8249  018C4E  0100               	movlb	0	; () banked
  8250  018C50  6F68               	movwf	rtcc_decrement_minutes@minutes& (0+255),b
  8251                           
  8252                           ; BSR set to: 0
  8253                           ;rtcc.c: 313: rtcc_set_minutes(minutes);
  8254  018C52  5168               	movf	rtcc_decrement_minutes@minutes& (0+255),w,b
  8255  018C54  EC64  F0C7         	call	_rtcc_set_minutes
  8256  018C58  0012               	return		;funcret
  8257  018C5A                     __end_of_rtcc_decrement_minutes:
  8258                           	opt stack 0
  8259                           tblptru	equ	0xFF8
  8260                           tblptrh	equ	0xFF7
  8261                           tblptrl	equ	0xFF6
  8262                           tablat	equ	0xFF5
  8263                           intcon3	equ	0xFF0
  8264                           postinc0	equ	0xFEE
  8265                           wreg	equ	0xFE8
  8266                           postdec1	equ	0xFE5
  8267                           plusw1	equ	0xFE3
  8268                           fsr1h	equ	0xFE2
  8269                           fsr1l	equ	0xFE1
  8270                           postinc2	equ	0xFDE
  8271                           postdec2	equ	0xFDD
  8272                           plusw2	equ	0xFDB
  8273                           fsr2h	equ	0xFDA
  8274                           fsr2l	equ	0xFD9
  8275                           status	equ	0xFD8
  8276                           
  8277 ;; *************** function _rtcc_decrement_hours *****************
  8278 ;; Defined at:
  8279 ;;		line 271 in file "rtcc.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;		None
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;  hours           1    8[BANK0 ] unsigned char 
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  1    wreg      void 
  8286 ;; Registers used:
  8287 ;;		wreg, status,2, status,0, cstack
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8296 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8297 ;;Total ram usage:        1 bytes
  8298 ;; Hardware stack levels used:    1
  8299 ;; Hardware stack levels required when called:   12
  8300 ;; This function calls:
  8301 ;;		__rtcc_decrement_bcd
  8302 ;;		_rtcc_get_hours
  8303 ;;		_rtcc_set_hours
  8304 ;; This function is called by:
  8305 ;;		__ui_encoder
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           	psect	text21
  8310  018C5A                     __ptext21:
  8311                           	opt stack 0
  8312  018C5A                     _rtcc_decrement_hours:
  8313                           	opt stack 16
  8314                           
  8315                           ;rtcc.c: 273: uint8_t hours = rtcc_get_hours();
  8316                           
  8317                           ;incstack = 0
  8318  018C5A  EC30  F0C8         	call	_rtcc_get_hours	;wreg free
  8319  018C5E  0100               	movlb	0	; () banked
  8320  018C60  6F68               	movwf	rtcc_decrement_hours@hours& (0+255),b
  8321                           
  8322                           ; BSR set to: 0
  8323                           ;rtcc.c: 274: hours = _rtcc_decrement_bcd(hours, 0x00, 0x23);
  8324  018C62  0E00               	movlw	0
  8325  018C64  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  8326  018C66  0E23               	movlw	35
  8327  018C68  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  8328  018C6A  5168               	movf	rtcc_decrement_hours@hours& (0+255),w,b
  8329  018C6C  ECDC  F0C3         	call	__rtcc_decrement_bcd
  8330  018C70  0100               	movlb	0	; () banked
  8331  018C72  6F68               	movwf	rtcc_decrement_hours@hours& (0+255),b
  8332                           
  8333                           ; BSR set to: 0
  8334                           ;rtcc.c: 275: rtcc_set_hours(hours);
  8335  018C74  5168               	movf	rtcc_decrement_hours@hours& (0+255),w,b
  8336  018C76  EC70  F0C7         	call	_rtcc_set_hours
  8337  018C7A  0012               	return		;funcret
  8338  018C7C                     __end_of_rtcc_decrement_hours:
  8339                           	opt stack 0
  8340                           tblptru	equ	0xFF8
  8341                           tblptrh	equ	0xFF7
  8342                           tblptrl	equ	0xFF6
  8343                           tablat	equ	0xFF5
  8344                           intcon3	equ	0xFF0
  8345                           postinc0	equ	0xFEE
  8346                           wreg	equ	0xFE8
  8347                           postdec1	equ	0xFE5
  8348                           plusw1	equ	0xFE3
  8349                           fsr1h	equ	0xFE2
  8350                           fsr1l	equ	0xFE1
  8351                           postinc2	equ	0xFDE
  8352                           postdec2	equ	0xFDD
  8353                           plusw2	equ	0xFDB
  8354                           fsr2h	equ	0xFDA
  8355                           fsr2l	equ	0xFD9
  8356                           status	equ	0xFD8
  8357                           
  8358 ;; *************** function _rtcc_decrement_day *****************
  8359 ;; Defined at:
  8360 ;;		line 233 in file "rtcc.c"
  8361 ;; Parameters:    Size  Location     Type
  8362 ;;		None
  8363 ;; Auto vars:     Size  Location     Type
  8364 ;;  day             1    8[BANK0 ] unsigned char 
  8365 ;; Return value:  Size  Location     Type
  8366 ;;                  1    wreg      void 
  8367 ;; Registers used:
  8368 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8369 ;; Tracked objects:
  8370 ;;		On entry : 0/0
  8371 ;;		On exit  : 0/0
  8372 ;;		Unchanged: 0/0
  8373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8377 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8378 ;;Total ram usage:        1 bytes
  8379 ;; Hardware stack levels used:    1
  8380 ;; Hardware stack levels required when called:   12
  8381 ;; This function calls:
  8382 ;;		__number_of_days
  8383 ;;		__rtcc_decrement_bcd
  8384 ;;		_rtcc_get_day
  8385 ;;		_rtcc_set_day
  8386 ;; This function is called by:
  8387 ;;		__ui_encoder
  8388 ;; This function uses a non-reentrant model
  8389 ;;
  8390                           
  8391                           	psect	text22
  8392  018ADE                     __ptext22:
  8393                           	opt stack 0
  8394  018ADE                     _rtcc_decrement_day:
  8395                           	opt stack 16
  8396                           
  8397                           ;rtcc.c: 235: uint8_t day = rtcc_get_day();
  8398                           
  8399                           ;incstack = 0
  8400  018ADE  EC45  F0C8         	call	_rtcc_get_day	;wreg free
  8401  018AE2  0100               	movlb	0	; () banked
  8402  018AE4  6F68               	movwf	rtcc_decrement_day@day& (0+255),b
  8403                           
  8404                           ; BSR set to: 0
  8405                           ;rtcc.c: 236: day = _rtcc_decrement_bcd(day, 0x01, _number_of_days());
  8406  018AE6  0E01               	movlw	1
  8407  018AE8  6F64               	movwf	__rtcc_decrement_bcd@min& (0+255),b
  8408  018AEA  EC69  F0B9         	call	__number_of_days	;wreg free
  8409  018AEE  0100               	movlb	0	; () banked
  8410  018AF0  6F65               	movwf	__rtcc_decrement_bcd@max& (0+255),b
  8411  018AF2  5168               	movf	rtcc_decrement_day@day& (0+255),w,b
  8412  018AF4  ECDC  F0C3         	call	__rtcc_decrement_bcd
  8413  018AF8  0100               	movlb	0	; () banked
  8414  018AFA  6F68               	movwf	rtcc_decrement_day@day& (0+255),b
  8415                           
  8416                           ; BSR set to: 0
  8417                           ;rtcc.c: 237: rtcc_set_day(day);
  8418  018AFC  5168               	movf	rtcc_decrement_day@day& (0+255),w,b
  8419  018AFE  EC7C  F0C7         	call	_rtcc_set_day
  8420  018B02  0012               	return		;funcret
  8421  018B04                     __end_of_rtcc_decrement_day:
  8422                           	opt stack 0
  8423                           tblptru	equ	0xFF8
  8424                           tblptrh	equ	0xFF7
  8425                           tblptrl	equ	0xFF6
  8426                           tablat	equ	0xFF5
  8427                           intcon3	equ	0xFF0
  8428                           postinc0	equ	0xFEE
  8429                           wreg	equ	0xFE8
  8430                           postdec1	equ	0xFE5
  8431                           plusw1	equ	0xFE3
  8432                           fsr1h	equ	0xFE2
  8433                           fsr1l	equ	0xFE1
  8434                           postinc2	equ	0xFDE
  8435                           postdec2	equ	0xFDD
  8436                           plusw2	equ	0xFDB
  8437                           fsr2h	equ	0xFDA
  8438                           fsr2l	equ	0xFD9
  8439                           status	equ	0xFD8
  8440                           
  8441 ;; *************** function __rtcc_decrement_bcd *****************
  8442 ;; Defined at:
  8443 ;;		line 47 in file "rtcc.c"
  8444 ;; Parameters:    Size  Location     Type
  8445 ;;  value           1    wreg     unsigned char 
  8446 ;;  min             1    4[BANK0 ] unsigned char 
  8447 ;;  max             1    5[BANK0 ] unsigned char 
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;  value           1    7[BANK0 ] unsigned char 
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  1    wreg      unsigned char 
  8452 ;; Registers used:
  8453 ;;		wreg, status,2, status,0
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8459 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8460 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8461 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8462 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8463 ;;Total ram usage:        4 bytes
  8464 ;; Hardware stack levels used:    1
  8465 ;; Hardware stack levels required when called:   10
  8466 ;; This function calls:
  8467 ;;		Nothing
  8468 ;; This function is called by:
  8469 ;;		_rtcc_decrement_year
  8470 ;;		_rtcc_decrement_month
  8471 ;;		_rtcc_decrement_day
  8472 ;;		_rtcc_decrement_hours
  8473 ;;		_rtcc_decrement_minutes
  8474 ;;		_rtcc_decrement_seconds
  8475 ;; This function uses a non-reentrant model
  8476 ;;
  8477                           
  8478                           	psect	text23
  8479  0187B8                     __ptext23:
  8480                           	opt stack 0
  8481  0187B8                     __rtcc_decrement_bcd:
  8482                           	opt stack 17
  8483                           
  8484                           ;incstack = 0
  8485                           ;__rtcc_decrement_bcd@value stored from wreg
  8486  0187B8  0100               	movlb	0	; () banked
  8487  0187BA  6F67               	movwf	__rtcc_decrement_bcd@value& (0+255),b
  8488                           
  8489                           ;rtcc.c: 49: if(value==min)
  8490  0187BC  0100               	movlb	0	; () banked
  8491  0187BE  5164               	movf	__rtcc_decrement_bcd@min& (0+255),w,b
  8492  0187C0  1967               	xorwf	__rtcc_decrement_bcd@value& (0+255),w,b
  8493  0187C2  A4D8               	btfss	status,2,c
  8494  0187C4  D002               	goto	l2088
  8495                           
  8496                           ; BSR set to: 0
  8497                           ;rtcc.c: 50: return max;
  8498  0187C6  5165               	movf	__rtcc_decrement_bcd@max& (0+255),w,b
  8499  0187C8  0012               	return	
  8500  0187CA                     l2088:
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;rtcc.c: 51: --value;
  8504                           
  8505                           ; BSR set to: 0
  8506  0187CA  0767               	decf	__rtcc_decrement_bcd@value& (0+255),f,b
  8507                           
  8508                           ;rtcc.c: 52: if((value&0x0F)>0x09)
  8509  0187CC  C067  F066         	movff	__rtcc_decrement_bcd@value,??__rtcc_decrement_bcd
  8510  0187D0  0E0F               	movlw	15
  8511  0187D2  1766               	andwf	??__rtcc_decrement_bcd& (0+255),f,b
  8512  0187D4  0E09               	movlw	9
  8513  0187D6  6566               	cpfsgt	??__rtcc_decrement_bcd& (0+255),b
  8514  0187D8  D004               	goto	l2090
  8515                           
  8516                           ; BSR set to: 0
  8517                           ;rtcc.c: 53: {;rtcc.c: 54: value &= 0xF0;
  8518  0187DA  0EF0               	movlw	240
  8519  0187DC  1767               	andwf	__rtcc_decrement_bcd@value& (0+255),f,b
  8520                           
  8521                           ;rtcc.c: 55: value |= 0x09;
  8522  0187DE  0E09               	movlw	9
  8523  0187E0  1367               	iorwf	__rtcc_decrement_bcd@value& (0+255),f,b
  8524  0187E2                     l2090:
  8525                           
  8526                           ; BSR set to: 0
  8527                           ;rtcc.c: 56: };rtcc.c: 57: return value;
  8528                           
  8529                           ; BSR set to: 0
  8530  0187E2  5167               	movf	__rtcc_decrement_bcd@value& (0+255),w,b
  8531  0187E4  0012               	return	
  8532  0187E6                     __end_of__rtcc_decrement_bcd:
  8533                           	opt stack 0
  8534                           tblptru	equ	0xFF8
  8535                           tblptrh	equ	0xFF7
  8536                           tblptrl	equ	0xFF6
  8537                           tablat	equ	0xFF5
  8538                           intcon3	equ	0xFF0
  8539                           postinc0	equ	0xFEE
  8540                           wreg	equ	0xFE8
  8541                           postdec1	equ	0xFE5
  8542                           plusw1	equ	0xFE3
  8543                           fsr1h	equ	0xFE2
  8544                           fsr1l	equ	0xFE1
  8545                           postinc2	equ	0xFDE
  8546                           postdec2	equ	0xFDD
  8547                           plusw2	equ	0xFDB
  8548                           fsr2h	equ	0xFDA
  8549                           fsr2l	equ	0xFD9
  8550                           status	equ	0xFD8
  8551                           
  8552 ;; *************** function _system_init *****************
  8553 ;; Defined at:
  8554 ;;		line 251 in file "os.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;		None
  8557 ;; Auto vars:     Size  Location     Type
  8558 ;;  appendtext    104    0[BANK1 ] unsigned char [104]
  8559 ;;  temp           50    0        unsigned char [50]
  8560 ;;  filename2       9  113[BANK1 ] unsigned char [9]
  8561 ;;  filename        9  104[BANK1 ] unsigned char [9]
  8562 ;;  extension2      4  126[BANK1 ] unsigned char [4]
  8563 ;;  extension       4  122[BANK1 ] unsigned char [4]
  8564 ;;  file_number     1    0        unsigned char 
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  1    wreg      void 
  8567 ;; Registers used:
  8568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8569 ;; Tracked objects:
  8570 ;;		On entry : 0/0
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8575 ;;      Locals:         0       0     130       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8577 ;;      Totals:         0       0     130       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8578 ;;Total ram usage:      130 bytes
  8579 ;; Hardware stack levels used:    1
  8580 ;; Hardware stack levels required when called:   16
  8581 ;; This function calls:
  8582 ;;		__system_encoder_init
  8583 ;;		__system_timer0_init
  8584 ;;		_adc_init
  8585 ;;		_buck_init
  8586 ;;		_flash_init
  8587 ;;		_i2c_eeprom_read_calibration
  8588 ;;		_i2c_init
  8589 ;;		_log_start_new
  8590 ;;		_rtcc_init
  8591 ;;		_ui_init
  8592 ;; This function is called by:
  8593 ;;		_main
  8594 ;; This function uses a non-reentrant model
  8595 ;;
  8596                           
  8597                           	psect	text24
  8598  0137BA                     __ptext24:
  8599                           	opt stack 0
  8600  0137BA                     _system_init:
  8601                           	opt stack 14
  8602                           
  8603                           ;os.c: 253: char filename[9] = "TEST    ";
  8604                           
  8605                           ; BSR set to: 0
  8606                           ;incstack = 0
  8607  0137BA  EE23  F0CE         	lfsr	2,system_init@F7199
  8608  0137BE  EE11  F068         	lfsr	1,system_init@filename
  8609  0137C2  0E08               	movlw	8
  8610  0137C4                     u27211:
  8611  0137C4  CFDB FFE3          	movff	plusw2,plusw1
  8612  0137C8  06E8               	decf	wreg,f,c
  8613  0137CA  E2FC               	bc	u27211
  8614                           
  8615                           ;os.c: 254: char extension[4] = "TXT";
  8616  0137CC  C2F5  F17A         	movff	system_init@F7201,system_init@extension
  8617  0137D0  C2F6  F17B         	movff	system_init@F7201+1,system_init@extension+1
  8618  0137D4  C2F7  F17C         	movff	system_init@F7201+2,system_init@extension+2
  8619  0137D8  C2F8  F17D         	movff	system_init@F7201+3,system_init@extension+3
  8620                           
  8621                           ;os.c: 255: char filename2[9] = "NEWFILE ";
  8622  0137DC  EE23  F0C5         	lfsr	2,system_init@F7203
  8623  0137E0  EE11  F071         	lfsr	1,system_init@filename2
  8624  0137E4  0E08               	movlw	8
  8625  0137E6                     u27221:
  8626  0137E6  CFDB FFE3          	movff	plusw2,plusw1
  8627  0137EA  06E8               	decf	wreg,f,c
  8628  0137EC  E2FC               	bc	u27221
  8629                           
  8630                           ;os.c: 256: char extension2[4] = "TXT";
  8631  0137EE  C2F1  F17E         	movff	system_init@F7205,system_init@extension2
  8632  0137F2  C2F2  F17F         	movff	system_init@F7205+1,system_init@extension2+1
  8633  0137F6  C2F3  F180         	movff	system_init@F7205+2,system_init@extension2+2
  8634  0137FA  C2F4  F181         	movff	system_init@F7205+3,system_init@extension2+3
  8635                           
  8636                           ;os.c: 257: char appendtext[104] = "Just appended this text! Now this is super-long. it 
      +                          goes on and on and on ... but finally it ends HERE.";
  8637  0137FE  EE25  F000         	lfsr	2,system_init@F7207
  8638  013802  EE11  F000         	lfsr	1,system_init@appendtext
  8639  013806  0E67               	movlw	103
  8640  013808                     u27231:
  8641  013808  CFDB FFE3          	movff	plusw2,plusw1
  8642  01380C  06E8               	decf	wreg,f,c
  8643  01380E  E2FC               	bc	u27231
  8644                           
  8645                           ;os.c: 258: uint8_t file_number;;os.c: 259: uint8_t temp[50];;os.c: 262: TRISCbits.TRISC
      +                          2 = 0;
  8646  013810  9494               	bcf	3988,2,c	;volatile
  8647                           
  8648                           ;os.c: 263: TRISDbits.TRISD0 = 0;
  8649  013812  9095               	bcf	3989,0,c	;volatile
  8650                           
  8651                           ;os.c: 265: TRISDbits.TRISD3 = 0;
  8652  013814  9695               	bcf	3989,3,c	;volatile
  8653                           
  8654                           ;os.c: 266: LATDbits.LD3 = 0;
  8655  013816  968C               	bcf	3980,3,c	;volatile
  8656                           
  8657                           ;os.c: 269: LATDbits.LD1 = 0;
  8658  013818  928C               	bcf	3980,1,c	;volatile
  8659                           
  8660                           ;os.c: 270: TRISDbits.TRISD1 = 0;
  8661  01381A  9295               	bcf	3989,1,c	;volatile
  8662                           
  8663                           ;os.c: 273: LATBbits.LB1 = 0;
  8664  01381C  928A               	bcf	3978,1,c	;volatile
  8665                           
  8666                           ;os.c: 274: TRISBbits.TRISB1 = 0;
  8667  01381E  9293               	bcf	3987,1,c	;volatile
  8668                           
  8669                           ;os.c: 275: LATBbits.LB2 = 0;
  8670  013820  948A               	bcf	3978,2,c	;volatile
  8671                           
  8672                           ;os.c: 276: TRISBbits.TRISB2 = 0;
  8673  013822  9493               	bcf	3987,2,c	;volatile
  8674                           
  8675                           ;os.c: 277: LATBbits.LB3 = 0;
  8676  013824  968A               	bcf	3978,3,c	;volatile
  8677                           
  8678                           ;os.c: 278: TRISBbits.TRISB3 = 0;
  8679  013826  9693               	bcf	3987,3,c	;volatile
  8680                           
  8681                           ;os.c: 282: TRISDbits.TRISD6 = 1;
  8682  013828  8C95               	bsf	3989,6,c	;volatile
  8683                           
  8684                           ;os.c: 283: TRISDbits.TRISD4 = 0;
  8685  01382A  9895               	bcf	3989,4,c	;volatile
  8686                           
  8687                           ;os.c: 284: TRISDbits.TRISD5 = 0;
  8688  01382C  9A95               	bcf	3989,5,c	;volatile
  8689                           
  8690                           ;os.c: 285: TRISDbits.TRISD7 = 0;
  8691  01382E  9E95               	bcf	3989,7,c	;volatile
  8692                           
  8693                           ;os.c: 286: LATDbits.LD7 = 1;
  8694  013830  8E8C               	bsf	3980,7,c	;volatile
  8695                           
  8696                           ;os.c: 289: TRISAbits.TRISA3 = 1;
  8697  013832  8692               	bsf	3986,3,c	;volatile
  8698                           
  8699                           ;os.c: 290: ANCON0bits.PCFG3 = 0;
  8700  013834  010F               	movlb	15	; () banked
  8701  013836  9748               	bcf	72,3,b	;volatile
  8702                           
  8703                           ; BSR set to: 15
  8704                           ;os.c: 291: TRISBbits.TRISB0 = 1;
  8705  013838  8093               	bsf	3987,0,c	;volatile
  8706                           
  8707                           ; BSR set to: 15
  8708                           ;os.c: 292: ANCON1bits.PCFG12 = 0;
  8709  01383A  9949               	bcf	73,4,b	;volatile
  8710                           
  8711                           ; BSR set to: 15
  8712                           ;os.c: 293: TRISAbits.TRISA1 = 1;
  8713  01383C  8292               	bsf	3986,1,c	;volatile
  8714                           
  8715                           ; BSR set to: 15
  8716                           ;os.c: 294: ANCON0bits.PCFG1 = 0;
  8717  01383E  9348               	bcf	72,1,b	;volatile
  8718                           
  8719                           ; BSR set to: 15
  8720                           ;os.c: 295: TRISAbits.TRISA2 = 1;
  8721  013840  8492               	bsf	3986,2,c	;volatile
  8722                           
  8723                           ; BSR set to: 15
  8724                           ;os.c: 296: ANCON0bits.PCFG2 = 0;
  8725  013842  9548               	bcf	72,2,b	;volatile
  8726                           
  8727                           ; BSR set to: 15
  8728                           ;os.c: 299: LATCbits.LC7 = 0;
  8729  013844  9E8B               	bcf	3979,7,c	;volatile
  8730                           
  8731                           ; BSR set to: 15
  8732                           ;os.c: 300: TRISCbits.TRISC7 = 0;
  8733  013846  9E94               	bcf	3988,7,c	;volatile
  8734                           
  8735                           ; BSR set to: 15
  8736                           ;os.c: 301: LATEbits.LE2 = 1;
  8737  013848  848D               	bsf	3981,2,c	;volatile
  8738                           
  8739                           ; BSR set to: 15
  8740                           ;os.c: 302: TRISEbits.TRISE2 = 0;
  8741  01384A  9496               	bcf	3990,2,c	;volatile
  8742                           
  8743                           ; BSR set to: 15
  8744                           ;os.c: 303: LATEbits.LE1 = 1;
  8745  01384C  828D               	bsf	3981,1,c	;volatile
  8746                           
  8747                           ; BSR set to: 15
  8748                           ;os.c: 304: TRISEbits.TRISE1 = 0;
  8749  01384E  9296               	bcf	3990,1,c	;volatile
  8750                           
  8751                           ; BSR set to: 15
  8752                           ;os.c: 305: LATEbits.LE0 = 1;
  8753  013850  808D               	bsf	3981,0,c	;volatile
  8754                           
  8755                           ; BSR set to: 15
  8756                           ;os.c: 306: TRISEbits.TRISE0 = 0;
  8757  013852  9096               	bcf	3990,0,c	;volatile
  8758                           
  8759                           ; BSR set to: 15
  8760                           ;os.c: 307: LATAbits.LA5 = 1;
  8761  013854  8A89               	bsf	3977,5,c	;volatile
  8762                           
  8763                           ; BSR set to: 15
  8764                           ;os.c: 308: TRISAbits.TRISA5 = 0;
  8765  013856  9A92               	bcf	3986,5,c	;volatile
  8766                           
  8767                           ; BSR set to: 15
  8768                           ;os.c: 310: TRISAbits.TRISA0 = 1;
  8769  013858  8092               	bsf	3986,0,c	;volatile
  8770                           
  8771                           ; BSR set to: 15
  8772                           ;os.c: 311: ANCON0bits.PCFG0 = 1;
  8773  01385A  8148               	bsf	72,0,b	;volatile
  8774                           
  8775                           ; BSR set to: 15
  8776                           ;os.c: 312: TRISBbits.TRISB6 = 1;
  8777  01385C  8C93               	bsf	3987,6,c	;volatile
  8778                           
  8779                           ; BSR set to: 15
  8780                           ;os.c: 313: TRISBbits.TRISB7 = 1;
  8781  01385E  8E93               	bsf	3987,7,c	;volatile
  8782                           
  8783                           ; BSR set to: 15
  8784                           ;os.c: 334: os.clockFrequency = CPU_FREQUENCY_48MHz;
  8785  013860  0E02               	movlw	2
  8786  013862  0102               	movlb	2	; () banked
  8787  013864  6F00               	movwf	_os& (0+255),b	;volatile
  8788                           
  8789                           ; BSR set to: 2
  8790                           ;os.c: 335: os.boardVoltage = BOARD_VOLTAGE_HIGH;
  8791  013866  0E01               	movlw	1
  8792  013868  6F01               	movwf	(_os+1)& (0+255),b	;volatile
  8793                           
  8794                           ; BSR set to: 2
  8795                           ;os.c: 336: os.buckFrequency = BUCK_OFF;
  8796  01386A  0E00               	movlw	0
  8797  01386C  6F02               	movwf	(_os+2)& (0+255),b	;volatile
  8798                           
  8799                           ; BSR set to: 2
  8800                           ;os.c: 337: os.buckDutyCycle = 0;
  8801  01386E  0E00               	movlw	0
  8802  013870  6F03               	movwf	(_os+3)& (0+255),b	;volatile
  8803                           
  8804                           ; BSR set to: 2
  8805                           ;os.c: 338: os.buckLastStep = -1;
  8806  013872  6904               	setf	(_os+4)& (0+255),b	;volatile
  8807                           
  8808                           ; BSR set to: 2
  8809                           ;os.c: 339: os.display_mode = DISPLAY_MODE_STARTUP;
  8810  013874  0E70               	movlw	112
  8811  013876  6F40               	movwf	(_os+64)& (0+255),b	;volatile
  8812                           
  8813                           ; BSR set to: 2
  8814                           ;os.c: 342: os.output_voltage = 13000;
  8815  013878  0E32               	movlw	50
  8816  01387A  6F28               	movwf	(_os+40)& (0+255),b	;volatile
  8817  01387C  0EC8               	movlw	200
  8818  01387E  6F27               	movwf	(_os+39)& (0+255),b	;volatile
  8819                           
  8820                           ; BSR set to: 2
  8821                           ;os.c: 346: PIR1bits.TMR1IF = 0;
  8822  013880  909E               	bcf	3998,0,c	;volatile
  8823                           
  8824                           ; BSR set to: 2
  8825                           ;os.c: 348: TMR1H = 0xFC;
  8826  013882  0EFC               	movlw	252
  8827  013884  6ECF               	movwf	4047,c	;volatile
  8828                           
  8829                           ; BSR set to: 2
  8830                           ;os.c: 349: TMR1L = 0x00;
  8831  013886  0E00               	movlw	0
  8832  013888  6ECE               	movwf	4046,c	;volatile
  8833                           
  8834                           ; BSR set to: 2
  8835                           ;os.c: 351: T1CONbits.TMR1ON = 1;
  8836  01388A  80CD               	bsf	4045,0,c	;volatile
  8837                           
  8838                           ; BSR set to: 2
  8839                           ;os.c: 353: T1CONbits.T1OSCEN = 1;
  8840  01388C  86CD               	bsf	4045,3,c	;volatile
  8841  01388E                     
  8842                           ; BSR set to: 2
  8843  01388E  A09E               	btfss	3998,0,c	;volatile
  8844  013890  D7FE               	goto	l1191
  8845                           
  8846                           ;os.c: 357: T1CONbits.TMR1ON = 0;
  8847  013892  90CD               	bcf	4045,0,c	;volatile
  8848                           
  8849                           ;os.c: 360: i2c_init();
  8850  013894  EC4C  F0C8         	call	_i2c_init	;wreg free
  8851                           
  8852                           ;os.c: 362: ui_init();
  8853  013898  ECB6  F0C7         	call	_ui_init	;wreg free
  8854                           
  8855                           ;os.c: 365: adc_init();
  8856  01389C  ECBE  F0C6         	call	_adc_init	;wreg free
  8857                           
  8858                           ;os.c: 368: rtcc_init();
  8859  0138A0  ECDA  F0C6         	call	_rtcc_init	;wreg free
  8860                           
  8861                           ;os.c: 371: i2c_eeprom_read_calibration();
  8862  0138A4  ECA2  F097         	call	_i2c_eeprom_read_calibration	;wreg free
  8863                           
  8864                           ;os.c: 386: _system_timer0_init();
  8865  0138A8  EC66  F0C1         	call	__system_timer0_init	;wreg free
  8866                           
  8867                           ;os.c: 395: _system_encoder_init();
  8868  0138AC  EC86  F0C1         	call	__system_encoder_init	;wreg free
  8869                           
  8870                           ;os.c: 397: flash_init();
  8871  0138B0  ECE7  F0C6         	call	_flash_init	;wreg free
  8872                           
  8873                           ;os.c: 431: buck_init();
  8874  0138B4  EC1B  F0C8         	call	_buck_init	;wreg free
  8875                           
  8876                           ;os.c: 434: log_start_new();
  8877  0138B8  ECD1  F0A4         	call	_log_start_new	;wreg free
  8878  0138BC  0012               	return		;funcret
  8879  0138BE                     __end_of_system_init:
  8880                           	opt stack 0
  8881                           tblptru	equ	0xFF8
  8882                           tblptrh	equ	0xFF7
  8883                           tblptrl	equ	0xFF6
  8884                           tablat	equ	0xFF5
  8885                           intcon3	equ	0xFF0
  8886                           postinc0	equ	0xFEE
  8887                           wreg	equ	0xFE8
  8888                           postdec1	equ	0xFE5
  8889                           plusw1	equ	0xFE3
  8890                           fsr1h	equ	0xFE2
  8891                           fsr1l	equ	0xFE1
  8892                           postinc2	equ	0xFDE
  8893                           postdec2	equ	0xFDD
  8894                           plusw2	equ	0xFDB
  8895                           fsr2h	equ	0xFDA
  8896                           fsr2l	equ	0xFD9
  8897                           status	equ	0xFD8
  8898                           
  8899 ;; *************** function _ui_init *****************
  8900 ;; Defined at:
  8901 ;;		line 326 in file "ui.c"
  8902 ;; Parameters:    Size  Location     Type
  8903 ;;		None
  8904 ;; Auto vars:     Size  Location     Type
  8905 ;;		None
  8906 ;; Return value:  Size  Location     Type
  8907 ;;                  1    wreg      void 
  8908 ;; Registers used:
  8909 ;;		wreg, status,2
  8910 ;; Tracked objects:
  8911 ;;		On entry : 0/0
  8912 ;;		On exit  : 0/0
  8913 ;;		Unchanged: 0/0
  8914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8919 ;;Total ram usage:        0 bytes
  8920 ;; Hardware stack levels used:    1
  8921 ;; Hardware stack levels required when called:   10
  8922 ;; This function calls:
  8923 ;;		Nothing
  8924 ;; This function is called by:
  8925 ;;		_system_init
  8926 ;;		_ui_run
  8927 ;; This function uses a non-reentrant model
  8928 ;;
  8929                           
  8930                           	psect	text25
  8931  018F6C                     __ptext25:
  8932                           	opt stack 0
  8933  018F6C                     _ui_init:
  8934                           	opt stack 19
  8935                           
  8936                           ;ui.c: 328: system_ui_inactive_count = 0;
  8937                           
  8938                           ;incstack = 0
  8939  018F6C  0E00               	movlw	0
  8940  018F6E  0102               	movlb	2	; () banked
  8941  018F70  6FBC               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  8942  018F72  0E00               	movlw	0
  8943  018F74  6FBB               	movwf	_system_ui_inactive_count& (0+255),b
  8944                           
  8945                           ; BSR set to: 2
  8946                           ;ui.c: 330: LATCbits.LC2 = 1;
  8947  018F76  848B               	bsf	3979,2,c	;volatile
  8948                           
  8949                           ;ui.c: 331: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  8950  018F78  0E01               	movlw	1
  8951  018F7A  0101               	movlb	1	; () banked
  8952  018F7C  6FF2               	movwf	_userInterfaceStatus& (0+255),b
  8953                           
  8954                           ; BSR set to: 1
  8955  018F7E  0012               	return		;funcret
  8956  018F80                     __end_of_ui_init:
  8957                           	opt stack 0
  8958                           tblptru	equ	0xFF8
  8959                           tblptrh	equ	0xFF7
  8960                           tblptrl	equ	0xFF6
  8961                           tablat	equ	0xFF5
  8962                           intcon3	equ	0xFF0
  8963                           postinc0	equ	0xFEE
  8964                           wreg	equ	0xFE8
  8965                           postdec1	equ	0xFE5
  8966                           plusw1	equ	0xFE3
  8967                           fsr1h	equ	0xFE2
  8968                           fsr1l	equ	0xFE1
  8969                           postinc2	equ	0xFDE
  8970                           postdec2	equ	0xFDD
  8971                           plusw2	equ	0xFDB
  8972                           fsr2h	equ	0xFDA
  8973                           fsr2l	equ	0xFD9
  8974                           status	equ	0xFD8
  8975                           
  8976 ;; *************** function _rtcc_init *****************
  8977 ;; Defined at:
  8978 ;;		line 105 in file "rtcc.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;		None
  8981 ;; Auto vars:     Size  Location     Type
  8982 ;;		None
  8983 ;; Return value:  Size  Location     Type
  8984 ;;                  1    wreg      void 
  8985 ;; Registers used:
  8986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8987 ;; Tracked objects:
  8988 ;;		On entry : 0/0
  8989 ;;		On exit  : 0/0
  8990 ;;		Unchanged: 0/0
  8991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8996 ;;Total ram usage:        0 bytes
  8997 ;; Hardware stack levels used:    1
  8998 ;; Hardware stack levels required when called:   15
  8999 ;; This function calls:
  9000 ;;		_rtcc_read_eeprom
  9001 ;; This function is called by:
  9002 ;;		_system_init
  9003 ;; This function uses a non-reentrant model
  9004 ;;
  9005                           
  9006                           	psect	text26
  9007  018DB4                     __ptext26:
  9008                           	opt stack 0
  9009  018DB4                     _rtcc_init:
  9010                           	opt stack 14
  9011                           
  9012                           ;rtcc.c: 107: EECON2 = 0x55;
  9013                           
  9014                           ; BSR set to: 1
  9015                           ;incstack = 0
  9016  018DB4  0E55               	movlw	85
  9017  018DB6  6EA7               	movwf	4007,c	;volsfr
  9018                           
  9019                           ;rtcc.c: 108: EECON2 = 0xAA;
  9020  018DB8  0EAA               	movlw	170
  9021  018DBA  6EA7               	movwf	4007,c	;volsfr
  9022                           
  9023                           ;rtcc.c: 109: RTCCFGbits.RTCWREN = 1;
  9024  018DBC  010F               	movlb	15	; () banked
  9025  018DBE  8B3F               	bsf	63,5,b	;volatile
  9026                           
  9027                           ; BSR set to: 15
  9028                           ;rtcc.c: 110: RTCCFGbits.RTCEN = 1;
  9029  018DC0  8F3F               	bsf	63,7,b	;volatile
  9030                           
  9031                           ; BSR set to: 15
  9032                           ;rtcc.c: 111: RTCCFGbits.RTCOE = 0;
  9033  018DC2  953F               	bcf	63,2,b	;volatile
  9034                           
  9035                           ;rtcc.c: 112: RTCCAL = 0x00;
  9036  018DC4  0E00               	movlw	0
  9037  018DC6  6F3E               	movwf	62,b	;volatile
  9038                           
  9039                           ; BSR set to: 15
  9040                           ;rtcc.c: 115: rtcc_read_eeprom();
  9041  018DC8  EC11  F094         	call	_rtcc_read_eeprom	;wreg free
  9042  018DCC  0012               	return		;funcret
  9043  018DCE                     __end_of_rtcc_init:
  9044                           	opt stack 0
  9045                           tblptru	equ	0xFF8
  9046                           tblptrh	equ	0xFF7
  9047                           tblptrl	equ	0xFF6
  9048                           tablat	equ	0xFF5
  9049                           intcon3	equ	0xFF0
  9050                           postinc0	equ	0xFEE
  9051                           wreg	equ	0xFE8
  9052                           postdec1	equ	0xFE5
  9053                           plusw1	equ	0xFE3
  9054                           fsr1h	equ	0xFE2
  9055                           fsr1l	equ	0xFE1
  9056                           postinc2	equ	0xFDE
  9057                           postdec2	equ	0xFDD
  9058                           plusw2	equ	0xFDB
  9059                           fsr2h	equ	0xFDA
  9060                           fsr2l	equ	0xFD9
  9061                           status	equ	0xFD8
  9062                           
  9063 ;; *************** function _rtcc_read_eeprom *****************
  9064 ;; Defined at:
  9065 ;;		line 354 in file "rtcc.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;		None
  9068 ;; Auto vars:     Size  Location     Type
  9069 ;;  date            6   44[BANK0 ] unsigned char [6]
  9070 ;;  buffer          1   50[BANK0 ] unsigned char 
  9071 ;;  error_found     1   43[BANK0 ] unsigned char 
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  1    wreg      void 
  9074 ;; Registers used:
  9075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9082 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9084 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9085 ;;Total ram usage:        8 bytes
  9086 ;; Hardware stack levels used:    1
  9087 ;; Hardware stack levels required when called:   14
  9088 ;; This function calls:
  9089 ;;		__rtcc_verify_bcd
  9090 ;;		_i2c_eeprom_read
  9091 ;;		_rtcc_correct_day
  9092 ;;		_rtcc_get_day
  9093 ;;		_rtcc_set_day
  9094 ;;		_rtcc_set_hours
  9095 ;;		_rtcc_set_minutes
  9096 ;;		_rtcc_set_month
  9097 ;;		_rtcc_set_seconds
  9098 ;;		_rtcc_set_year
  9099 ;;		_rtcc_write_eeprom
  9100 ;; This function is called by:
  9101 ;;		_rtcc_init
  9102 ;; This function uses a non-reentrant model
  9103 ;;
  9104                           
  9105                           	psect	text27
  9106  012822                     __ptext27:
  9107                           	opt stack 0
  9108  012822                     _rtcc_read_eeprom:
  9109                           	opt stack 14
  9110                           
  9111                           ;rtcc.c: 356: uint8_t date[6];;rtcc.c: 357: uint8_t buffer;;rtcc.c: 358: uint8_t error_f
      +                          ound = 0;
  9112                           
  9113                           ;incstack = 0
  9114  012822  0E00               	movlw	0
  9115  012824  0100               	movlb	0	; () banked
  9116  012826  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  9117                           
  9118                           ; BSR set to: 0
  9119                           ;rtcc.c: 361: i2c_eeprom_read(0x040, &date[0], 6);
  9120  012828  0E00               	movlw	0
  9121  01282A  6F72               	movwf	(i2c_eeprom_read@address+1)& (0+255),b
  9122  01282C  0E40               	movlw	64
  9123  01282E  6F71               	movwf	i2c_eeprom_read@address& (0+255),b
  9124  012830  0E8C               	movlw	low rtcc_read_eeprom@date
  9125  012832  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  9126  012834  0E00               	movlw	high rtcc_read_eeprom@date
  9127  012836  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  9128  012838  0E06               	movlw	6
  9129  01283A  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  9130  01283C  EC6F  F0BE         	call	_i2c_eeprom_read	;wreg free
  9131                           
  9132                           ;rtcc.c: 367: buffer = _rtcc_verify_bcd(date[0], 0x00, 0x99);
  9133  012840  0E00               	movlw	0
  9134  012842  0100               	movlb	0	; () banked
  9135  012844  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  9136  012846  0E99               	movlw	153
  9137  012848  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  9138  01284A  518C               	movf	rtcc_read_eeprom@date& (0+255),w,b
  9139  01284C  ECBD  F0C0         	call	__rtcc_verify_bcd
  9140  012850  0100               	movlb	0	; () banked
  9141  012852  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  9142                           
  9143                           ; BSR set to: 0
  9144                           ;rtcc.c: 368: if(buffer != date[0])
  9145  012854  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  9146  012856  198C               	xorwf	rtcc_read_eeprom@date& (0+255),w,b
  9147  012858  B4D8               	btfsc	status,2,c
  9148  01285A  D004               	goto	l2224
  9149                           
  9150                           ; BSR set to: 0
  9151                           ;rtcc.c: 369: {;rtcc.c: 370: date[0] = buffer;
  9152  01285C  C092  F08C         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date
  9153                           
  9154                           ; BSR set to: 0
  9155                           ;rtcc.c: 371: error_found = 1;
  9156  012860  0E01               	movlw	1
  9157  012862  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  9158  012864                     l2224:
  9159                           
  9160                           ; BSR set to: 0
  9161                           ;rtcc.c: 372: };rtcc.c: 373: rtcc_set_year(date[0]);
  9162                           
  9163                           ; BSR set to: 0
  9164  012864  518C               	movf	rtcc_read_eeprom@date& (0+255),w,b
  9165  012866  EC40  F0C7         	call	_rtcc_set_year
  9166                           
  9167                           ;rtcc.c: 376: buffer = _rtcc_verify_bcd(date[1], 0x01, 0x12);
  9168  01286A  0E01               	movlw	1
  9169  01286C  0100               	movlb	0	; () banked
  9170  01286E  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  9171  012870  0E12               	movlw	18
  9172  012872  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  9173  012874  518D               	movf	(rtcc_read_eeprom@date+1)& (0+255),w,b
  9174  012876  ECBD  F0C0         	call	__rtcc_verify_bcd
  9175  01287A  0100               	movlb	0	; () banked
  9176  01287C  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  9177                           
  9178                           ;rtcc.c: 377: if(buffer != date[1])
  9179  01287E  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  9180  012880  198D               	xorwf	(rtcc_read_eeprom@date+1)& (0+255),w,b
  9181  012882  B4D8               	btfsc	status,2,c
  9182  012884  D004               	goto	l2225
  9183                           
  9184                           ; BSR set to: 0
  9185                           ;rtcc.c: 378: {;rtcc.c: 379: date[1] = buffer;
  9186  012886  C092  F08D         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+1
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;rtcc.c: 380: error_found = 1;
  9190  01288A  0E01               	movlw	1
  9191  01288C  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  9192  01288E                     l2225:
  9193                           
  9194                           ; BSR set to: 0
  9195                           ;rtcc.c: 381: };rtcc.c: 382: rtcc_set_month(date[1]);
  9196                           
  9197                           ; BSR set to: 0
  9198  01288E  518D               	movf	(rtcc_read_eeprom@date+1)& (0+255),w,b
  9199  012890  EC58  F0C7         	call	_rtcc_set_month
  9200                           
  9201                           ;rtcc.c: 385: buffer = _rtcc_verify_bcd(date[2], 0x01, 0x31);
  9202  012894  0E01               	movlw	1
  9203  012896  0100               	movlb	0	; () banked
  9204  012898  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  9205  01289A  0E31               	movlw	49
  9206  01289C  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  9207  01289E  518E               	movf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  9208  0128A0  ECBD  F0C0         	call	__rtcc_verify_bcd
  9209  0128A4  0100               	movlb	0	; () banked
  9210  0128A6  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  9211                           
  9212                           ;rtcc.c: 386: if(buffer != date[2])
  9213  0128A8  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  9214  0128AA  198E               	xorwf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  9215  0128AC  B4D8               	btfsc	status,2,c
  9216  0128AE  D004               	goto	l2226
  9217                           
  9218                           ; BSR set to: 0
  9219                           ;rtcc.c: 387: {;rtcc.c: 388: date[2] = buffer;
  9220  0128B0  C092  F08E         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+2
  9221                           
  9222                           ; BSR set to: 0
  9223                           ;rtcc.c: 389: error_found = 1;
  9224  0128B4  0E01               	movlw	1
  9225  0128B6  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  9226  0128B8                     l2226:
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;rtcc.c: 390: };rtcc.c: 391: rtcc_set_day(date[2]);
  9230                           
  9231                           ; BSR set to: 0
  9232  0128B8  518E               	movf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  9233  0128BA  EC7C  F0C7         	call	_rtcc_set_day
  9234                           
  9235                           ;rtcc.c: 394: rtcc_correct_day();
  9236  0128BE  EC71  F0C6         	call	_rtcc_correct_day	;wreg free
  9237                           
  9238                           ;rtcc.c: 395: buffer = rtcc_get_day();
  9239  0128C2  EC45  F0C8         	call	_rtcc_get_day	;wreg free
  9240  0128C6  0100               	movlb	0	; () banked
  9241  0128C8  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;rtcc.c: 396: if(buffer != date[2])
  9245  0128CA  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  9246  0128CC  198E               	xorwf	(rtcc_read_eeprom@date+2)& (0+255),w,b
  9247  0128CE  B4D8               	btfsc	status,2,c
  9248  0128D0  D004               	goto	l2227
  9249                           
  9250                           ; BSR set to: 0
  9251                           ;rtcc.c: 397: {;rtcc.c: 398: date[2] = buffer;
  9252  0128D2  C092  F08E         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+2
  9253                           
  9254                           ; BSR set to: 0
  9255                           ;rtcc.c: 399: error_found = 1;
  9256  0128D6  0E01               	movlw	1
  9257  0128D8  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  9258  0128DA                     l2227:
  9259                           
  9260                           ; BSR set to: 0
  9261                           ;rtcc.c: 400: };rtcc.c: 403: buffer = _rtcc_verify_bcd(date[3], 0x00, 0x23);
  9262                           
  9263                           ; BSR set to: 0
  9264  0128DA  0E00               	movlw	0
  9265  0128DC  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  9266  0128DE  0E23               	movlw	35
  9267  0128E0  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  9268  0128E2  518F               	movf	(rtcc_read_eeprom@date+3)& (0+255),w,b
  9269  0128E4  ECBD  F0C0         	call	__rtcc_verify_bcd
  9270  0128E8  0100               	movlb	0	; () banked
  9271  0128EA  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  9272                           
  9273                           ; BSR set to: 0
  9274                           ;rtcc.c: 404: if(buffer != date[3])
  9275  0128EC  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  9276  0128EE  198F               	xorwf	(rtcc_read_eeprom@date+3)& (0+255),w,b
  9277  0128F0  B4D8               	btfsc	status,2,c
  9278  0128F2  D004               	goto	l2228
  9279                           
  9280                           ; BSR set to: 0
  9281                           ;rtcc.c: 405: {;rtcc.c: 406: date[3] = buffer;
  9282  0128F4  C092  F08F         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+3
  9283                           
  9284                           ; BSR set to: 0
  9285                           ;rtcc.c: 407: error_found = 1;
  9286  0128F8  0E01               	movlw	1
  9287  0128FA  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  9288  0128FC                     l2228:
  9289                           
  9290                           ; BSR set to: 0
  9291                           ;rtcc.c: 408: };rtcc.c: 409: rtcc_set_hours(date[3]);
  9292                           
  9293                           ; BSR set to: 0
  9294  0128FC  518F               	movf	(rtcc_read_eeprom@date+3)& (0+255),w,b
  9295  0128FE  EC70  F0C7         	call	_rtcc_set_hours
  9296                           
  9297                           ;rtcc.c: 412: buffer = _rtcc_verify_bcd(date[4], 0x00, 0x59);
  9298  012902  0E00               	movlw	0
  9299  012904  0100               	movlb	0	; () banked
  9300  012906  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  9301  012908  0E59               	movlw	89
  9302  01290A  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  9303  01290C  5190               	movf	(rtcc_read_eeprom@date+4)& (0+255),w,b
  9304  01290E  ECBD  F0C0         	call	__rtcc_verify_bcd
  9305  012912  0100               	movlb	0	; () banked
  9306  012914  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  9307                           
  9308                           ;rtcc.c: 413: if(buffer != date[4])
  9309  012916  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  9310  012918  1990               	xorwf	(rtcc_read_eeprom@date+4)& (0+255),w,b
  9311  01291A  B4D8               	btfsc	status,2,c
  9312  01291C  D004               	goto	l2229
  9313                           
  9314                           ; BSR set to: 0
  9315                           ;rtcc.c: 414: {;rtcc.c: 415: date[4] = buffer;
  9316  01291E  C092  F090         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+4
  9317                           
  9318                           ; BSR set to: 0
  9319                           ;rtcc.c: 416: error_found = 1;
  9320  012922  0E01               	movlw	1
  9321  012924  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  9322  012926                     l2229:
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;rtcc.c: 417: };rtcc.c: 418: rtcc_set_minutes(date[4]);
  9326                           
  9327                           ; BSR set to: 0
  9328  012926  5190               	movf	(rtcc_read_eeprom@date+4)& (0+255),w,b
  9329  012928  EC64  F0C7         	call	_rtcc_set_minutes
  9330                           
  9331                           ;rtcc.c: 421: buffer = _rtcc_verify_bcd(date[5], 0x00, 0x59);
  9332  01292C  0E00               	movlw	0
  9333  01292E  0100               	movlb	0	; () banked
  9334  012930  6F60               	movwf	__rtcc_verify_bcd@min& (0+255),b
  9335  012932  0E59               	movlw	89
  9336  012934  6F61               	movwf	__rtcc_verify_bcd@max& (0+255),b
  9337  012936  5191               	movf	(rtcc_read_eeprom@date+5)& (0+255),w,b
  9338  012938  ECBD  F0C0         	call	__rtcc_verify_bcd
  9339  01293C  0100               	movlb	0	; () banked
  9340  01293E  6F92               	movwf	rtcc_read_eeprom@buffer& (0+255),b
  9341                           
  9342                           ;rtcc.c: 422: if(buffer != date[5])
  9343  012940  5192               	movf	rtcc_read_eeprom@buffer& (0+255),w,b
  9344  012942  1991               	xorwf	(rtcc_read_eeprom@date+5)& (0+255),w,b
  9345  012944  B4D8               	btfsc	status,2,c
  9346  012946  D004               	goto	l2230
  9347                           
  9348                           ; BSR set to: 0
  9349                           ;rtcc.c: 423: {;rtcc.c: 424: date[5] = buffer;
  9350  012948  C092  F091         	movff	rtcc_read_eeprom@buffer,rtcc_read_eeprom@date+5
  9351                           
  9352                           ; BSR set to: 0
  9353                           ;rtcc.c: 425: error_found = 1;
  9354  01294C  0E01               	movlw	1
  9355  01294E  6F8B               	movwf	rtcc_read_eeprom@error_found& (0+255),b
  9356  012950                     l2230:
  9357                           
  9358                           ; BSR set to: 0
  9359                           ;rtcc.c: 426: };rtcc.c: 427: rtcc_set_seconds(date[5]);
  9360                           
  9361                           ; BSR set to: 0
  9362  012950  5191               	movf	(rtcc_read_eeprom@date+5)& (0+255),w,b
  9363  012952  EC4C  F0C7         	call	_rtcc_set_seconds
  9364                           
  9365                           ;rtcc.c: 430: if(error_found)
  9366  012956  0100               	movlb	0	; () banked
  9367  012958  518B               	movf	rtcc_read_eeprom@error_found& (0+255),w,b
  9368  01295A  B4D8               	btfsc	status,2,c
  9369  01295C  0012               	return	
  9370                           
  9371                           ; BSR set to: 0
  9372                           ;rtcc.c: 431: {;rtcc.c: 432: rtcc_write_eeprom();
  9373  01295E  EC4F  F0C0         	call	_rtcc_write_eeprom	;wreg free
  9374  012962  0012               	return	
  9375  012964                     __end_of_rtcc_read_eeprom:
  9376                           	opt stack 0
  9377                           tblptru	equ	0xFF8
  9378                           tblptrh	equ	0xFF7
  9379                           tblptrl	equ	0xFF6
  9380                           tablat	equ	0xFF5
  9381                           intcon3	equ	0xFF0
  9382                           postinc0	equ	0xFEE
  9383                           wreg	equ	0xFE8
  9384                           postdec1	equ	0xFE5
  9385                           plusw1	equ	0xFE3
  9386                           fsr1h	equ	0xFE2
  9387                           fsr1l	equ	0xFE1
  9388                           postinc2	equ	0xFDE
  9389                           postdec2	equ	0xFDD
  9390                           plusw2	equ	0xFDB
  9391                           fsr2h	equ	0xFDA
  9392                           fsr2l	equ	0xFD9
  9393                           status	equ	0xFD8
  9394                           
  9395 ;; *************** function _rtcc_correct_day *****************
  9396 ;; Defined at:
  9397 ;;		line 118 in file "rtcc.c"
  9398 ;; Parameters:    Size  Location     Type
  9399 ;;		None
  9400 ;; Auto vars:     Size  Location     Type
  9401 ;;  max             1    5[BANK0 ] unsigned char 
  9402 ;;  day             1    4[BANK0 ] unsigned char 
  9403 ;; Return value:  Size  Location     Type
  9404 ;;                  1    wreg      void 
  9405 ;; Registers used:
  9406 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9407 ;; Tracked objects:
  9408 ;;		On entry : 0/0
  9409 ;;		On exit  : 0/0
  9410 ;;		Unchanged: 0/0
  9411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9413 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9415 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9416 ;;Total ram usage:        2 bytes
  9417 ;; Hardware stack levels used:    1
  9418 ;; Hardware stack levels required when called:   12
  9419 ;; This function calls:
  9420 ;;		__number_of_days
  9421 ;;		_rtcc_get_day
  9422 ;;		_rtcc_set_day
  9423 ;; This function is called by:
  9424 ;;		__ui_encoder
  9425 ;;		_rtcc_read_eeprom
  9426 ;; This function uses a non-reentrant model
  9427 ;;
  9428                           
  9429                           	psect	text28
  9430  018CE2                     __ptext28:
  9431                           	opt stack 0
  9432  018CE2                     _rtcc_correct_day:
  9433                           	opt stack 16
  9434                           
  9435                           ;rtcc.c: 120: uint8_t day = rtcc_get_day();
  9436                           
  9437                           ;incstack = 0
  9438  018CE2  EC45  F0C8         	call	_rtcc_get_day	;wreg free
  9439  018CE6  0100               	movlb	0	; () banked
  9440  018CE8  6F64               	movwf	rtcc_correct_day@day& (0+255),b
  9441                           
  9442                           ; BSR set to: 0
  9443                           ;rtcc.c: 121: uint8_t max = _number_of_days();
  9444  018CEA  EC69  F0B9         	call	__number_of_days	;wreg free
  9445  018CEE  0100               	movlb	0	; () banked
  9446  018CF0  6F65               	movwf	rtcc_correct_day@max& (0+255),b
  9447                           
  9448                           ; BSR set to: 0
  9449                           ;rtcc.c: 122: if(day>max)
  9450  018CF2  5164               	movf	rtcc_correct_day@day& (0+255),w,b
  9451  018CF4  5D65               	subwf	rtcc_correct_day@max& (0+255),w,b
  9452  018CF6  B0D8               	btfsc	status,0,c
  9453  018CF8  0012               	return	
  9454                           
  9455                           ; BSR set to: 0
  9456                           ;rtcc.c: 123: rtcc_set_day(max);
  9457  018CFA  5165               	movf	rtcc_correct_day@max& (0+255),w,b
  9458  018CFC  EC7C  F0C7         	call	_rtcc_set_day
  9459  018D00  0012               	return	
  9460  018D02                     __end_of_rtcc_correct_day:
  9461                           	opt stack 0
  9462                           tblptru	equ	0xFF8
  9463                           tblptrh	equ	0xFF7
  9464                           tblptrl	equ	0xFF6
  9465                           tablat	equ	0xFF5
  9466                           intcon3	equ	0xFF0
  9467                           postinc0	equ	0xFEE
  9468                           wreg	equ	0xFE8
  9469                           postdec1	equ	0xFE5
  9470                           plusw1	equ	0xFE3
  9471                           fsr1h	equ	0xFE2
  9472                           fsr1l	equ	0xFE1
  9473                           postinc2	equ	0xFDE
  9474                           postdec2	equ	0xFDD
  9475                           plusw2	equ	0xFDB
  9476                           fsr2h	equ	0xFDA
  9477                           fsr2l	equ	0xFD9
  9478                           status	equ	0xFD8
  9479                           
  9480 ;; *************** function __number_of_days *****************
  9481 ;; Defined at:
  9482 ;;		line 60 in file "rtcc.c"
  9483 ;; Parameters:    Size  Location     Type
  9484 ;;		None
  9485 ;; Auto vars:     Size  Location     Type
  9486 ;;  month           1    3[BANK0 ] unsigned char 
  9487 ;;  bcd_year        1    2[BANK0 ] unsigned char 
  9488 ;;  year            1    1[BANK0 ] unsigned char 
  9489 ;; Return value:  Size  Location     Type
  9490 ;;                  1    wreg      unsigned char 
  9491 ;; Registers used:
  9492 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9493 ;; Tracked objects:
  9494 ;;		On entry : 0/0
  9495 ;;		On exit  : 0/0
  9496 ;;		Unchanged: 0/0
  9497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9499 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9500 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9501 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9502 ;;Total ram usage:        4 bytes
  9503 ;; Hardware stack levels used:    1
  9504 ;; Hardware stack levels required when called:   11
  9505 ;; This function calls:
  9506 ;;		_rtcc_get_month
  9507 ;;		_rtcc_get_year
  9508 ;; This function is called by:
  9509 ;;		_rtcc_correct_day
  9510 ;;		_rtcc_increment_day
  9511 ;;		_rtcc_decrement_day
  9512 ;; This function uses a non-reentrant model
  9513 ;;
  9514                           
  9515                           	psect	text29
  9516  0172D2                     __ptext29:
  9517                           	opt stack 0
  9518  0172D2                     __number_of_days:
  9519                           	opt stack 16
  9520                           
  9521                           ;rtcc.c: 62: uint8_t month = rtcc_get_month();
  9522                           
  9523                           ;incstack = 0
  9524  0172D2  EC3E  F0C8         	call	_rtcc_get_month	;wreg free
  9525  0172D6  0100               	movlb	0	; () banked
  9526  0172D8  6F63               	movwf	__number_of_days@month& (0+255),b
  9527                           
  9528                           ;rtcc.c: 63: uint8_t bcd_year = rtcc_get_year();
  9529  0172DA  EC37  F0C8         	call	_rtcc_get_year	;wreg free
  9530  0172DE  0100               	movlb	0	; () banked
  9531  0172E0  6F62               	movwf	__number_of_days@bcd_year& (0+255),b
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;rtcc.c: 64: uint8_t year;;rtcc.c: 65: if(month==0x04 || month==0x06 || month==0x09 || m
      +                          onth==0x11)
  9535  0172E2  0E04               	movlw	4
  9536  0172E4  1963               	xorwf	__number_of_days@month& (0+255),w,b
  9537  0172E6  B4D8               	btfsc	status,2,c
  9538  0172E8  D00C               	goto	u21920
  9539                           
  9540                           ; BSR set to: 0
  9541  0172EA  0E06               	movlw	6
  9542  0172EC  1963               	xorwf	__number_of_days@month& (0+255),w,b
  9543  0172EE  B4D8               	btfsc	status,2,c
  9544  0172F0  D008               	goto	u21920
  9545                           
  9546                           ; BSR set to: 0
  9547  0172F2  0E09               	movlw	9
  9548  0172F4  1963               	xorwf	__number_of_days@month& (0+255),w,b
  9549  0172F6  B4D8               	btfsc	status,2,c
  9550  0172F8  D004               	goto	u21920
  9551                           
  9552                           ; BSR set to: 0
  9553  0172FA  0E11               	movlw	17
  9554  0172FC  1963               	xorwf	__number_of_days@month& (0+255),w,b
  9555  0172FE  A4D8               	btfss	status,2,c
  9556  017300  D002               	goto	l2093
  9557  017302                     u21920:
  9558                           
  9559                           ; BSR set to: 0
  9560                           ;rtcc.c: 66: return 0x30;
  9561                           
  9562                           ; BSR set to: 0
  9563  017302  0E30               	movlw	48
  9564                           
  9565                           ; BSR set to: 0
  9566  017304  0012               	return	
  9567  017306                     l2093:
  9568                           
  9569                           ; BSR set to: 0
  9570                           ;rtcc.c: 67: if(month==0x02)
  9571                           
  9572                           ; BSR set to: 0
  9573  017306  0E02               	movlw	2
  9574  017308  1963               	xorwf	__number_of_days@month& (0+255),w,b
  9575  01730A  A4D8               	btfss	status,2,c
  9576  01730C  D014               	goto	l2099
  9577                           
  9578                           ; BSR set to: 0
  9579                           ;rtcc.c: 68: {;rtcc.c: 69: year = bcd_year>>4;
  9580  01730E  3962               	swapf	__number_of_days@bcd_year& (0+255),w,b
  9581  017310  0B0F               	andlw	15
  9582  017312  6F61               	movwf	__number_of_days@year& (0+255),b
  9583                           
  9584                           ; BSR set to: 0
  9585                           ;rtcc.c: 70: year *= 10;
  9586  017314  0E0A               	movlw	10
  9587  017316  0361               	mulwf	__number_of_days@year& (0+255),b
  9588  017318  50F3               	movf	prodl,w,c
  9589  01731A  6F61               	movwf	__number_of_days@year& (0+255),b
  9590                           
  9591                           ; BSR set to: 0
  9592                           ;rtcc.c: 71: year += bcd_year & 0x0F;
  9593  01731C  5162               	movf	__number_of_days@bcd_year& (0+255),w,b
  9594  01731E  0B0F               	andlw	15
  9595  017320  2761               	addwf	__number_of_days@year& (0+255),f,b
  9596                           
  9597                           ; BSR set to: 0
  9598                           ;rtcc.c: 72: if(year&0b11)
  9599  017322  C061  F060         	movff	__number_of_days@year,??__number_of_days
  9600  017326  0E03               	movlw	3
  9601  017328  1760               	andwf	??__number_of_days& (0+255),f,b
  9602  01732A  B4D8               	btfsc	status,2,c
  9603  01732C  D002               	goto	l2098
  9604                           
  9605                           ; BSR set to: 0
  9606                           ;rtcc.c: 73: return 0x28;
  9607  01732E  0E28               	movlw	40
  9608                           
  9609                           ; BSR set to: 0
  9610  017330  0012               	return	
  9611  017332                     l2098:
  9612                           
  9613                           ; BSR set to: 0
  9614                           ;rtcc.c: 74: else;rtcc.c: 75: return 0x29;
  9615                           
  9616                           ; BSR set to: 0
  9617  017332  0E29               	movlw	41
  9618                           
  9619                           ; BSR set to: 0
  9620  017334  0012               	return	
  9621  017336                     l2099:
  9622                           
  9623                           ; BSR set to: 0
  9624                           ;rtcc.c: 76: };rtcc.c: 77: return 0x31;
  9625                           
  9626                           ; BSR set to: 0
  9627                           
  9628                           ; BSR set to: 0
  9629  017336  0E31               	movlw	49
  9630  017338  0012               	return	
  9631  01733A                     __end_of__number_of_days:
  9632                           	opt stack 0
  9633                           tblptru	equ	0xFF8
  9634                           tblptrh	equ	0xFF7
  9635                           tblptrl	equ	0xFF6
  9636                           tablat	equ	0xFF5
  9637                           prodl	equ	0xFF3
  9638                           intcon3	equ	0xFF0
  9639                           postinc0	equ	0xFEE
  9640                           wreg	equ	0xFE8
  9641                           postdec1	equ	0xFE5
  9642                           plusw1	equ	0xFE3
  9643                           fsr1h	equ	0xFE2
  9644                           fsr1l	equ	0xFE1
  9645                           postinc2	equ	0xFDE
  9646                           postdec2	equ	0xFDD
  9647                           plusw2	equ	0xFDB
  9648                           fsr2h	equ	0xFDA
  9649                           fsr2l	equ	0xFD9
  9650                           status	equ	0xFD8
  9651                           
  9652 ;; *************** function __rtcc_verify_bcd *****************
  9653 ;; Defined at:
  9654 ;;		line 80 in file "rtcc.c"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;  value           1    wreg     unsigned char 
  9657 ;;  min             1    0[BANK0 ] unsigned char 
  9658 ;;  max             1    1[BANK0 ] unsigned char 
  9659 ;; Auto vars:     Size  Location     Type
  9660 ;;  value           1    3[BANK0 ] unsigned char 
  9661 ;; Return value:  Size  Location     Type
  9662 ;;                  1    wreg      unsigned char 
  9663 ;; Registers used:
  9664 ;;		wreg, status,2, status,0
  9665 ;; Tracked objects:
  9666 ;;		On entry : 0/0
  9667 ;;		On exit  : 0/0
  9668 ;;		Unchanged: 0/0
  9669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9670 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9671 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9672 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9673 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9674 ;;Total ram usage:        4 bytes
  9675 ;; Hardware stack levels used:    1
  9676 ;; Hardware stack levels required when called:   10
  9677 ;; This function calls:
  9678 ;;		Nothing
  9679 ;; This function is called by:
  9680 ;;		_rtcc_read_eeprom
  9681 ;; This function uses a non-reentrant model
  9682 ;;
  9683                           
  9684                           	psect	text30
  9685  01817A                     __ptext30:
  9686                           	opt stack 0
  9687  01817A                     __rtcc_verify_bcd:
  9688                           	opt stack 17
  9689                           
  9690                           ; BSR set to: 0
  9691                           ;incstack = 0
  9692                           ;__rtcc_verify_bcd@value stored from wreg
  9693  01817A  0100               	movlb	0	; () banked
  9694  01817C  6F63               	movwf	__rtcc_verify_bcd@value& (0+255),b
  9695                           
  9696                           ;rtcc.c: 83: if((value&0x0F)>0x09)
  9697  01817E  C063  F062         	movff	__rtcc_verify_bcd@value,??__rtcc_verify_bcd
  9698  018182  0E0F               	movlw	15
  9699  018184  0100               	movlb	0	; () banked
  9700  018186  1762               	andwf	??__rtcc_verify_bcd& (0+255),f,b
  9701  018188  0E09               	movlw	9
  9702  01818A  6562               	cpfsgt	??__rtcc_verify_bcd& (0+255),b
  9703  01818C  D002               	goto	l2102
  9704                           
  9705                           ; BSR set to: 0
  9706                           ;rtcc.c: 84: {;rtcc.c: 85: return min;
  9707  01818E  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  9708                           
  9709                           ; BSR set to: 0
  9710  018190  0012               	return	
  9711  018192                     l2102:
  9712                           
  9713                           ; BSR set to: 0
  9714                           ;rtcc.c: 86: };rtcc.c: 87: if((value&0xF0)>0x90)
  9715                           
  9716                           ; BSR set to: 0
  9717  018192  C063  F062         	movff	__rtcc_verify_bcd@value,??__rtcc_verify_bcd
  9718  018196  0EF0               	movlw	240
  9719  018198  1762               	andwf	??__rtcc_verify_bcd& (0+255),f,b
  9720  01819A  0E90               	movlw	144
  9721  01819C  6562               	cpfsgt	??__rtcc_verify_bcd& (0+255),b
  9722  01819E  D002               	goto	l2104
  9723                           
  9724                           ; BSR set to: 0
  9725                           ;rtcc.c: 88: {;rtcc.c: 89: return min;
  9726  0181A0  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  9727                           
  9728                           ; BSR set to: 0
  9729  0181A2  0012               	return	
  9730  0181A4                     l2104:
  9731                           
  9732                           ; BSR set to: 0
  9733                           ;rtcc.c: 90: };rtcc.c: 92: if(value<min)
  9734                           
  9735                           ; BSR set to: 0
  9736  0181A4  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  9737  0181A6  5D63               	subwf	__rtcc_verify_bcd@value& (0+255),w,b
  9738  0181A8  B0D8               	btfsc	status,0,c
  9739  0181AA  D002               	goto	l2105
  9740                           
  9741                           ; BSR set to: 0
  9742                           ;rtcc.c: 93: {;rtcc.c: 94: return min;
  9743  0181AC  5160               	movf	__rtcc_verify_bcd@min& (0+255),w,b
  9744                           
  9745                           ; BSR set to: 0
  9746  0181AE  0012               	return	
  9747  0181B0                     l2105:
  9748                           
  9749                           ; BSR set to: 0
  9750                           ;rtcc.c: 95: };rtcc.c: 96: if(value>max)
  9751                           
  9752                           ; BSR set to: 0
  9753  0181B0  5163               	movf	__rtcc_verify_bcd@value& (0+255),w,b
  9754  0181B2  5D61               	subwf	__rtcc_verify_bcd@max& (0+255),w,b
  9755  0181B4  B0D8               	btfsc	status,0,c
  9756  0181B6  D002               	goto	l2106
  9757                           
  9758                           ; BSR set to: 0
  9759                           ;rtcc.c: 97: {;rtcc.c: 98: return max;
  9760  0181B8  5161               	movf	__rtcc_verify_bcd@max& (0+255),w,b
  9761                           
  9762                           ; BSR set to: 0
  9763  0181BA  0012               	return	
  9764  0181BC                     l2106:
  9765                           
  9766                           ; BSR set to: 0
  9767                           ;rtcc.c: 99: };rtcc.c: 101: return value;
  9768                           
  9769                           ; BSR set to: 0
  9770  0181BC  5163               	movf	__rtcc_verify_bcd@value& (0+255),w,b
  9771  0181BE  0012               	return	
  9772  0181C0                     __end_of__rtcc_verify_bcd:
  9773                           	opt stack 0
  9774                           tblptru	equ	0xFF8
  9775                           tblptrh	equ	0xFF7
  9776                           tblptrl	equ	0xFF6
  9777                           tablat	equ	0xFF5
  9778                           prodl	equ	0xFF3
  9779                           intcon3	equ	0xFF0
  9780                           postinc0	equ	0xFEE
  9781                           wreg	equ	0xFE8
  9782                           postdec1	equ	0xFE5
  9783                           plusw1	equ	0xFE3
  9784                           fsr1h	equ	0xFE2
  9785                           fsr1l	equ	0xFE1
  9786                           postinc2	equ	0xFDE
  9787                           postdec2	equ	0xFDD
  9788                           plusw2	equ	0xFDB
  9789                           fsr2h	equ	0xFDA
  9790                           fsr2l	equ	0xFD9
  9791                           status	equ	0xFD8
  9792                           
  9793 ;; *************** function _log_start_new *****************
  9794 ;; Defined at:
  9795 ;;		line 71 in file "log.c"
  9796 ;; Parameters:    Size  Location     Type
  9797 ;;		None
  9798 ;; Auto vars:     Size  Location     Type
  9799 ;;		None
  9800 ;; Return value:  Size  Location     Type
  9801 ;;                  1    wreg      void 
  9802 ;; Registers used:
  9803 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9804 ;; Tracked objects:
  9805 ;;		On entry : 0/0
  9806 ;;		On exit  : 0/0
  9807 ;;		Unchanged: 0/0
  9808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9813 ;;Total ram usage:        0 bytes
  9814 ;; Hardware stack levels used:    1
  9815 ;; Hardware stack levels required when called:   12
  9816 ;; This function calls:
  9817 ;;		_rtcc_get_seconds_decimal
  9818 ;; This function is called by:
  9819 ;;		_system_init
  9820 ;; This function uses a non-reentrant model
  9821 ;;
  9822                           
  9823                           	psect	text31
  9824  0149A2                     __ptext31:
  9825                           	opt stack 0
  9826  0149A2                     _log_start_new:
  9827                           	opt stack 17
  9828                           
  9829                           ;log.c: 73: inputVoltageSum = 0;
  9830                           
  9831                           ; BSR set to: 0
  9832                           ;incstack = 0
  9833  0149A2  0E00               	movlw	0
  9834  0149A4  0102               	movlb	2	; () banked
  9835  0149A6  6FA1               	movwf	_inputVoltageSum& (0+255),b
  9836  0149A8  0E00               	movlw	0
  9837  0149AA  6FA2               	movwf	(_inputVoltageSum+1)& (0+255),b
  9838  0149AC  0E00               	movlw	0
  9839  0149AE  6FA3               	movwf	(_inputVoltageSum+2)& (0+255),b
  9840  0149B0  0E00               	movlw	0
  9841  0149B2  6FA4               	movwf	(_inputVoltageSum+3)& (0+255),b
  9842                           
  9843                           ;log.c: 74: inputCurrentSum = 0;
  9844  0149B4  0E00               	movlw	0
  9845  0149B6  6F9D               	movwf	_inputCurrentSum& (0+255),b
  9846  0149B8  0E00               	movlw	0
  9847  0149BA  6F9E               	movwf	(_inputCurrentSum+1)& (0+255),b
  9848  0149BC  0E00               	movlw	0
  9849  0149BE  6F9F               	movwf	(_inputCurrentSum+2)& (0+255),b
  9850  0149C0  0E00               	movlw	0
  9851  0149C2  6FA0               	movwf	(_inputCurrentSum+3)& (0+255),b
  9852                           
  9853                           ;log.c: 75: outputVoltageSum = 0;
  9854  0149C4  0E00               	movlw	0
  9855  0149C6  6F99               	movwf	_outputVoltageSum& (0+255),b
  9856  0149C8  0E00               	movlw	0
  9857  0149CA  6F9A               	movwf	(_outputVoltageSum+1)& (0+255),b
  9858  0149CC  0E00               	movlw	0
  9859  0149CE  6F9B               	movwf	(_outputVoltageSum+2)& (0+255),b
  9860  0149D0  0E00               	movlw	0
  9861  0149D2  6F9C               	movwf	(_outputVoltageSum+3)& (0+255),b
  9862                           
  9863                           ;log.c: 76: outputCurrentSum = 0;
  9864  0149D4  0E00               	movlw	0
  9865  0149D6  6F95               	movwf	_outputCurrentSum& (0+255),b
  9866  0149D8  0E00               	movlw	0
  9867  0149DA  6F96               	movwf	(_outputCurrentSum+1)& (0+255),b
  9868  0149DC  0E00               	movlw	0
  9869  0149DE  6F97               	movwf	(_outputCurrentSum+2)& (0+255),b
  9870  0149E0  0E00               	movlw	0
  9871  0149E2  6F98               	movwf	(_outputCurrentSum+3)& (0+255),b
  9872                           
  9873                           ;log.c: 77: inputPowerSum = 0;
  9874  0149E4  0E00               	movlw	0
  9875  0149E6  6F91               	movwf	_inputPowerSum& (0+255),b
  9876  0149E8  0E00               	movlw	0
  9877  0149EA  6F92               	movwf	(_inputPowerSum+1)& (0+255),b
  9878  0149EC  0E00               	movlw	0
  9879  0149EE  6F93               	movwf	(_inputPowerSum+2)& (0+255),b
  9880  0149F0  0E00               	movlw	0
  9881  0149F2  6F94               	movwf	(_inputPowerSum+3)& (0+255),b
  9882                           
  9883                           ;log.c: 78: outputPowerSum = 0;
  9884  0149F4  0E00               	movlw	0
  9885  0149F6  6F8D               	movwf	_outputPowerSum& (0+255),b
  9886  0149F8  0E00               	movlw	0
  9887  0149FA  6F8E               	movwf	(_outputPowerSum+1)& (0+255),b
  9888  0149FC  0E00               	movlw	0
  9889  0149FE  6F8F               	movwf	(_outputPowerSum+2)& (0+255),b
  9890  014A00  0E00               	movlw	0
  9891  014A02  6F90               	movwf	(_outputPowerSum+3)& (0+255),b
  9892                           
  9893                           ;log.c: 79: inputCapacitySum = 0;
  9894  014A04  0E00               	movlw	0
  9895  014A06  6F89               	movwf	_inputCapacitySum& (0+255),b
  9896  014A08  0E00               	movlw	0
  9897  014A0A  6F8A               	movwf	(_inputCapacitySum+1)& (0+255),b
  9898  014A0C  0E00               	movlw	0
  9899  014A0E  6F8B               	movwf	(_inputCapacitySum+2)& (0+255),b
  9900  014A10  0E00               	movlw	0
  9901  014A12  6F8C               	movwf	(_inputCapacitySum+3)& (0+255),b
  9902                           
  9903                           ;log.c: 80: outputCapacitySum = 0;
  9904  014A14  0E00               	movlw	0
  9905  014A16  6F85               	movwf	_outputCapacitySum& (0+255),b
  9906  014A18  0E00               	movlw	0
  9907  014A1A  6F86               	movwf	(_outputCapacitySum+1)& (0+255),b
  9908  014A1C  0E00               	movlw	0
  9909  014A1E  6F87               	movwf	(_outputCapacitySum+2)& (0+255),b
  9910  014A20  0E00               	movlw	0
  9911  014A22  6F88               	movwf	(_outputCapacitySum+3)& (0+255),b
  9912                           
  9913                           ;log.c: 81: temperatureOnboardSum = 0;
  9914  014A24  0E00               	movlw	0
  9915  014A26  6F81               	movwf	_temperatureOnboardSum& (0+255),b
  9916  014A28  0E00               	movlw	0
  9917  014A2A  6F82               	movwf	(_temperatureOnboardSum+1)& (0+255),b
  9918  014A2C  0E00               	movlw	0
  9919  014A2E  6F83               	movwf	(_temperatureOnboardSum+2)& (0+255),b
  9920  014A30  0E00               	movlw	0
  9921  014A32  6F84               	movwf	(_temperatureOnboardSum+3)& (0+255),b
  9922                           
  9923                           ;log.c: 82: temperatureExternal1Sum = 0;
  9924  014A34  0E00               	movlw	0
  9925  014A36  6F7D               	movwf	_temperatureExternal1Sum& (0+255),b
  9926  014A38  0E00               	movlw	0
  9927  014A3A  6F7E               	movwf	(_temperatureExternal1Sum+1)& (0+255),b
  9928  014A3C  0E00               	movlw	0
  9929  014A3E  6F7F               	movwf	(_temperatureExternal1Sum+2)& (0+255),b
  9930  014A40  0E00               	movlw	0
  9931  014A42  6F80               	movwf	(_temperatureExternal1Sum+3)& (0+255),b
  9932                           
  9933                           ;log.c: 83: temperatureExternal2Sum = 0;
  9934  014A44  0E00               	movlw	0
  9935  014A46  6F79               	movwf	_temperatureExternal2Sum& (0+255),b
  9936  014A48  0E00               	movlw	0
  9937  014A4A  6F7A               	movwf	(_temperatureExternal2Sum+1)& (0+255),b
  9938  014A4C  0E00               	movlw	0
  9939  014A4E  6F7B               	movwf	(_temperatureExternal2Sum+2)& (0+255),b
  9940  014A50  0E00               	movlw	0
  9941  014A52  6F7C               	movwf	(_temperatureExternal2Sum+3)& (0+255),b
  9942                           
  9943                           ;log.c: 84: chargerOnTime = 0;
  9944  014A54  0E00               	movlw	0
  9945  014A56  6FBA               	movwf	(_chargerOnTime+1)& (0+255),b
  9946  014A58  0E00               	movlw	0
  9947  014A5A  6FB9               	movwf	_chargerOnTime& (0+255),b
  9948                           
  9949                           ;log.c: 85: lowPowerTime = 0;
  9950  014A5C  0E00               	movlw	0
  9951  014A5E  6FB8               	movwf	(_lowPowerTime+1)& (0+255),b
  9952  014A60  0E00               	movlw	0
  9953  014A62  6FB7               	movwf	_lowPowerTime& (0+255),b
  9954                           
  9955                           ;log.c: 86: status = 0;
  9956  014A64  0E00               	movlw	0
  9957  014A66  0101               	movlb	1	; () banked
  9958  014A68  6FEF               	movwf	_status& (0+255),b
  9959                           
  9960                           ;log.c: 87: averageCount = 0;
  9961  014A6A  0E00               	movlw	0
  9962  014A6C  6E0E               	movwf	_averageCount+1,c
  9963  014A6E  0E00               	movlw	0
  9964  014A70  6E0D               	movwf	_averageCount,c
  9965                           
  9966                           ; BSR set to: 1
  9967                           ;log.c: 88: lastSecond = rtcc_get_seconds_decimal();
  9968  014A72  ECDB  F0C7         	call	_rtcc_get_seconds_decimal	;wreg free
  9969  014A76  0101               	movlb	1	; () banked
  9970  014A78  6FEE               	movwf	_lastSecond& (0+255),b
  9971                           
  9972                           ; BSR set to: 1
  9973  014A7A  0012               	return		;funcret
  9974  014A7C                     __end_of_log_start_new:
  9975                           	opt stack 0
  9976                           tblptru	equ	0xFF8
  9977                           tblptrh	equ	0xFF7
  9978                           tblptrl	equ	0xFF6
  9979                           tablat	equ	0xFF5
  9980                           prodl	equ	0xFF3
  9981                           intcon3	equ	0xFF0
  9982                           postinc0	equ	0xFEE
  9983                           wreg	equ	0xFE8
  9984                           postdec1	equ	0xFE5
  9985                           plusw1	equ	0xFE3
  9986                           fsr1h	equ	0xFE2
  9987                           fsr1l	equ	0xFE1
  9988                           postinc2	equ	0xFDE
  9989                           postdec2	equ	0xFDD
  9990                           plusw2	equ	0xFDB
  9991                           fsr2h	equ	0xFDA
  9992                           fsr2l	equ	0xFD9
  9993                           status	equ	0xFD8
  9994                           
  9995 ;; *************** function _i2c_init *****************
  9996 ;; Defined at:
  9997 ;;		line 110 in file "i2c.c"
  9998 ;; Parameters:    Size  Location     Type
  9999 ;;		None
 10000 ;; Auto vars:     Size  Location     Type
 10001 ;;		None
 10002 ;; Return value:  Size  Location     Type
 10003 ;;                  1    wreg      void 
 10004 ;; Registers used:
 10005 ;;		wreg, status,2, status,0, cstack
 10006 ;; Tracked objects:
 10007 ;;		On entry : 0/0
 10008 ;;		On exit  : 0/0
 10009 ;;		Unchanged: 0/0
 10010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10015 ;;Total ram usage:        0 bytes
 10016 ;; Hardware stack levels used:    1
 10017 ;; Hardware stack levels required when called:   11
 10018 ;; This function calls:
 10019 ;;		__i2c_open_1
 10020 ;;		_i2c_set_frequency
 10021 ;; This function is called by:
 10022 ;;		_system_init
 10023 ;; This function uses a non-reentrant model
 10024 ;;
 10025                           
 10026                           	psect	text32
 10027  019098                     __ptext32:
 10028                           	opt stack 0
 10029  019098                     _i2c_init:
 10030                           	opt stack 18
 10031                           
 10032                           ;i2c.c: 113: _i2c_open_1();
 10033                           
 10034                           ; BSR set to: 1
 10035                           ;incstack = 0
 10036  019098  EC28  F0C7         	call	__i2c_open_1	;wreg free
 10037                           
 10038                           ;i2c.c: 115: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 10039  01909C  0E00               	movlw	0
 10040  01909E  EC4E  F0C3         	call	_i2c_set_frequency
 10041  0190A2  0012               	return		;funcret
 10042  0190A4                     __end_of_i2c_init:
 10043                           	opt stack 0
 10044                           tblptru	equ	0xFF8
 10045                           tblptrh	equ	0xFF7
 10046                           tblptrl	equ	0xFF6
 10047                           tablat	equ	0xFF5
 10048                           prodl	equ	0xFF3
 10049                           intcon3	equ	0xFF0
 10050                           postinc0	equ	0xFEE
 10051                           wreg	equ	0xFE8
 10052                           postdec1	equ	0xFE5
 10053                           plusw1	equ	0xFE3
 10054                           fsr1h	equ	0xFE2
 10055                           fsr1l	equ	0xFE1
 10056                           postinc2	equ	0xFDE
 10057                           postdec2	equ	0xFDD
 10058                           plusw2	equ	0xFDB
 10059                           fsr2h	equ	0xFDA
 10060                           fsr2l	equ	0xFD9
 10061                           status	equ	0xFD8
 10062                           
 10063 ;; *************** function __i2c_open_1 *****************
 10064 ;; Defined at:
 10065 ;;		line 44 in file "i2c.c"
 10066 ;; Parameters:    Size  Location     Type
 10067 ;;		None
 10068 ;; Auto vars:     Size  Location     Type
 10069 ;;		None
 10070 ;; Return value:  Size  Location     Type
 10071 ;;                  1    wreg      void 
 10072 ;; Registers used:
 10073 ;;		wreg, status,2
 10074 ;; Tracked objects:
 10075 ;;		On entry : 0/0
 10076 ;;		On exit  : 0/0
 10077 ;;		Unchanged: 0/0
 10078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10083 ;;Total ram usage:        0 bytes
 10084 ;; Hardware stack levels used:    1
 10085 ;; Hardware stack levels required when called:   10
 10086 ;; This function calls:
 10087 ;;		Nothing
 10088 ;; This function is called by:
 10089 ;;		_i2c_init
 10090 ;; This function uses a non-reentrant model
 10091 ;;
 10092                           
 10093                           	psect	text33
 10094  018E50                     __ptext33:
 10095                           	opt stack 0
 10096  018E50                     __i2c_open_1:
 10097                           	opt stack 18
 10098                           
 10099                           ;i2c.c: 46: SSP1STATbits.SMP = 0;
 10100                           
 10101                           ;incstack = 0
 10102  018E50  9EC7               	bcf	4039,7,c	;volatile
 10103                           
 10104                           ;i2c.c: 47: SSP1STATbits.CKE = 0;
 10105  018E52  9CC7               	bcf	4039,6,c	;volatile
 10106                           
 10107                           ;i2c.c: 48: SSP1ADD = 29;
 10108  018E54  0E1D               	movlw	29
 10109  018E56  6EC8               	movwf	4040,c	;volatile
 10110                           
 10111                           ;i2c.c: 49: SSP1CON1bits.WCOL = 0;
 10112  018E58  9EC6               	bcf	4038,7,c	;volatile
 10113                           
 10114                           ;i2c.c: 50: SSP1CON1bits.SSPOV = 0;
 10115  018E5A  9CC6               	bcf	4038,6,c	;volatile
 10116                           
 10117                           ;i2c.c: 51: SSP1CON1bits.SSPM = 0b1000;
 10118  018E5C  50C6               	movf	4038,w,c	;volatile
 10119  018E5E  0BF0               	andlw	-16
 10120  018E60  0908               	iorlw	8
 10121  018E62  6EC6               	movwf	4038,c	;volatile
 10122                           
 10123                           ;i2c.c: 52: SSP1CON1bits.SSPEN = 1;
 10124  018E64  8AC6               	bsf	4038,5,c	;volatile
 10125  018E66  0012               	return		;funcret
 10126  018E68                     __end_of__i2c_open_1:
 10127                           	opt stack 0
 10128                           tblptru	equ	0xFF8
 10129                           tblptrh	equ	0xFF7
 10130                           tblptrl	equ	0xFF6
 10131                           tablat	equ	0xFF5
 10132                           prodl	equ	0xFF3
 10133                           intcon3	equ	0xFF0
 10134                           postinc0	equ	0xFEE
 10135                           wreg	equ	0xFE8
 10136                           postdec1	equ	0xFE5
 10137                           plusw1	equ	0xFE3
 10138                           fsr1h	equ	0xFE2
 10139                           fsr1l	equ	0xFE1
 10140                           postinc2	equ	0xFDE
 10141                           postdec2	equ	0xFDD
 10142                           plusw2	equ	0xFDB
 10143                           fsr2h	equ	0xFDA
 10144                           fsr2l	equ	0xFD9
 10145                           status	equ	0xFD8
 10146                           
 10147 ;; *************** function _i2c_eeprom_read_calibration *****************
 10148 ;; Defined at:
 10149 ;;		line 497 in file "i2c.c"
 10150 ;; Parameters:    Size  Location     Type
 10151 ;;		None
 10152 ;; Auto vars:     Size  Location     Type
 10153 ;;  buffer          4   27[BANK0 ] unsigned char [4]
 10154 ;;  addr            2   31[BANK0 ] unsigned int 
 10155 ;;  cntr            1   33[BANK0 ] unsigned char 
 10156 ;; Return value:  Size  Location     Type
 10157 ;;                  1    wreg      void 
 10158 ;; Registers used:
 10159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10160 ;; Tracked objects:
 10161 ;;		On entry : 0/0
 10162 ;;		On exit  : 0/0
 10163 ;;		Unchanged: 0/0
 10164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10166 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10167 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10168 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10169 ;;Total ram usage:        9 bytes
 10170 ;; Hardware stack levels used:    1
 10171 ;; Hardware stack levels required when called:   13
 10172 ;; This function calls:
 10173 ;;		__i2c_eeprom_load_default_calibration
 10174 ;;		_i2c_eeprom_read
 10175 ;;		_schedule_eeprom_write_task
 10176 ;; This function is called by:
 10177 ;;		_system_init
 10178 ;; This function uses a non-reentrant model
 10179 ;;
 10180                           
 10181                           	psect	text34
 10182  012F44                     __ptext34:
 10183                           	opt stack 0
 10184  012F44                     _i2c_eeprom_read_calibration:
 10185                           	opt stack 16
 10186                           
 10187                           ;i2c.c: 499: uint8_t buffer[4];;i2c.c: 500: uint8_t cntr;;i2c.c: 501: uint16_t addr;;i2c
      +                          .c: 503: for(cntr=0; cntr<CALIBRATION_INDEX_COUNT; ++cntr)
 10188                           
 10189                           ;incstack = 0
 10190  012F44  0E00               	movlw	0
 10191  012F46  0100               	movlb	0	; () banked
 10192  012F48  6F81               	movwf	i2c_eeprom_read_calibration@cntr& (0+255),b
 10193  012F4A                     l26493:
 10194                           
 10195                           ; BSR set to: 0
 10196  012F4A  0E06               	movlw	6
 10197  012F4C  6581               	cpfsgt	i2c_eeprom_read_calibration@cntr& (0+255),b
 10198  012F4E  D001               	goto	l1412
 10199  012F50  0012               	return	
 10200  012F52                     l1412:
 10201                           
 10202                           ; BSR set to: 0
 10203                           ;i2c.c: 504: {;i2c.c: 506: addr = 0x0200 + (cntr<<4);
 10204                           
 10205                           ; BSR set to: 0
 10206  012F52  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
 10207  012F54  6F79               	movwf	??_i2c_eeprom_read_calibration& (0+255),b
 10208  012F56  6B7A               	clrf	(??_i2c_eeprom_read_calibration+1)& (0+255),b
 10209  012F58  3B79               	swapf	??_i2c_eeprom_read_calibration& (0+255),f,b
 10210  012F5A  3B7A               	swapf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
 10211  012F5C  0EF0               	movlw	240
 10212  012F5E  177A               	andwf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
 10213  012F60  5179               	movf	??_i2c_eeprom_read_calibration& (0+255),w,b
 10214  012F62  0B0F               	andlw	15
 10215  012F64  137A               	iorwf	(??_i2c_eeprom_read_calibration+1)& (0+255),f,b
 10216  012F66  0EF0               	movlw	240
 10217  012F68  1779               	andwf	??_i2c_eeprom_read_calibration& (0+255),f,b
 10218  012F6A  0E00               	movlw	0
 10219  012F6C  2579               	addwf	??_i2c_eeprom_read_calibration& (0+255),w,b
 10220  012F6E  6F7F               	movwf	i2c_eeprom_read_calibration@addr& (0+255),b
 10221  012F70  0E02               	movlw	2
 10222  012F72  217A               	addwfc	(??_i2c_eeprom_read_calibration+1)& (0+255),w,b
 10223  012F74  6F80               	movwf	(i2c_eeprom_read_calibration@addr+1)& (0+255),b
 10224                           
 10225                           ; BSR set to: 0
 10226                           ;i2c.c: 507: i2c_eeprom_read(addr, &buffer[0], 4);
 10227  012F76  C07F  F071         	movff	i2c_eeprom_read_calibration@addr,i2c_eeprom_read@address
 10228  012F7A  C080  F072         	movff	i2c_eeprom_read_calibration@addr+1,i2c_eeprom_read@address+1
 10229  012F7E  0E7B               	movlw	low i2c_eeprom_read_calibration@buffer
 10230  012F80  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
 10231  012F82  0E00               	movlw	high i2c_eeprom_read_calibration@buffer
 10232  012F84  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
 10233  012F86  0E04               	movlw	4
 10234  012F88  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
 10235  012F8A  EC6F  F0BE         	call	_i2c_eeprom_read	;wreg free
 10236                           
 10237                           ;i2c.c: 509: if((buffer[0]==0x77) && (buffer[1]==0x55) && (buffer[2]==0x33) && (buffer[3
      +                          ]==cntr))
 10238  012F8E  0E77               	movlw	119
 10239  012F90  0100               	movlb	0	; () banked
 10240  012F92  197B               	xorwf	i2c_eeprom_read_calibration@buffer& (0+255),w,b
 10241  012F94  A4D8               	btfss	status,2,c
 10242  012F96  D021               	goto	l1414
 10243                           
 10244                           ; BSR set to: 0
 10245  012F98  0E55               	movlw	85
 10246  012F9A  197C               	xorwf	(i2c_eeprom_read_calibration@buffer+1)& (0+255),w,b
 10247  012F9C  A4D8               	btfss	status,2,c
 10248  012F9E  D01D               	goto	l1414
 10249                           
 10250                           ; BSR set to: 0
 10251  012FA0  0E33               	movlw	51
 10252  012FA2  197D               	xorwf	(i2c_eeprom_read_calibration@buffer+2)& (0+255),w,b
 10253  012FA4  A4D8               	btfss	status,2,c
 10254  012FA6  D019               	goto	l1414
 10255                           
 10256                           ; BSR set to: 0
 10257  012FA8  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
 10258  012FAA  197E               	xorwf	(i2c_eeprom_read_calibration@buffer+3)& (0+255),w,b
 10259  012FAC  A4D8               	btfss	status,2,c
 10260  012FAE  D015               	goto	l1414
 10261                           
 10262                           ; BSR set to: 0
 10263                           ;i2c.c: 510: {;i2c.c: 512: addr += 4;
 10264  012FB0  0E04               	movlw	4
 10265  012FB2  277F               	addwf	i2c_eeprom_read_calibration@addr& (0+255),f,b
 10266  012FB4  0E00               	movlw	0
 10267  012FB6  2380               	addwfc	(i2c_eeprom_read_calibration@addr+1)& (0+255),f,b
 10268                           
 10269                           ; BSR set to: 0
 10270                           ;i2c.c: 513: i2c_eeprom_read(addr, (uint8_t*) &calibrationParameters[cntr], 12);
 10271  012FB8  C07F  F071         	movff	i2c_eeprom_read_calibration@addr,i2c_eeprom_read@address
 10272  012FBC  C080  F072         	movff	i2c_eeprom_read_calibration@addr+1,i2c_eeprom_read@address+1
 10273  012FC0  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
 10274  012FC2  0D0C               	mullw	12
 10275  012FC4  0E18               	movlw	low _calibrationParameters
 10276  012FC6  24F3               	addwf	prodl,w,c
 10277  012FC8  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
 10278  012FCA  0E03               	movlw	high _calibrationParameters
 10279  012FCC  20F4               	addwfc	prodh,w,c
 10280  012FCE  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
 10281  012FD0  0E0C               	movlw	12
 10282  012FD2  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
 10283  012FD4  EC6F  F0BE         	call	_i2c_eeprom_read	;wreg free
 10284                           
 10285                           ;i2c.c: 514: }
 10286  012FD8  D041               	goto	l1418
 10287  012FDA                     l1414:
 10288                           
 10289                           ;i2c.c: 515: else;i2c.c: 516: {;i2c.c: 518: _i2c_eeprom_load_default_calibration(&calibr
      +                          ationParameters[cntr], cntr);
 10290  012FDA  0100               	movlb	0	; () banked
 10291  012FDC  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
 10292  012FDE  0D0C               	mullw	12
 10293  012FE0  0E18               	movlw	low _calibrationParameters
 10294  012FE2  24F3               	addwf	prodl,w,c
 10295  012FE4  6F60               	movwf	__i2c_eeprom_load_default_calibration@buffer& (0+255),b
 10296  012FE6  0E03               	movlw	high _calibrationParameters
 10297  012FE8  20F4               	addwfc	prodh,w,c
 10298  012FEA  6F61               	movwf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),b
 10299  012FEC  C081  F062         	movff	i2c_eeprom_read_calibration@cntr,__i2c_eeprom_load_default_calibration@index
 10300  012FF0  ECC4  F06B         	call	__i2c_eeprom_load_default_calibration	;wreg free
 10301                           
 10302                           ;i2c.c: 520: switch((calibrationIndex_t) cntr)
 10303  012FF4  D01C               	goto	l1416
 10304  012FF6                     
 10305                           ;i2c.c: 523: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_VOLTAGE);
 10306  012FF6  0E02               	movlw	2
 10307  012FF8  ECB5  F0BF         	call	_schedule_eeprom_write_task
 10308                           
 10309                           ;i2c.c: 524: break;
 10310  012FFC  D02F               	goto	l1418
 10311  012FFE                     
 10312                           ;i2c.c: 526: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_VOLTAGE);
 10313  012FFE  0E03               	movlw	3
 10314  013000  ECB5  F0BF         	call	_schedule_eeprom_write_task
 10315                           
 10316                           ;i2c.c: 527: break;
 10317  013004  D02B               	goto	l1418
 10318  013006                     
 10319                           ;i2c.c: 529: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_CURRENT);
 10320  013006  0E04               	movlw	4
 10321  013008  ECB5  F0BF         	call	_schedule_eeprom_write_task
 10322                           
 10323                           ;i2c.c: 530: break;
 10324  01300C  D027               	goto	l1418
 10325  01300E                     
 10326                           ;i2c.c: 532: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_CURRENT);
 10327  01300E  0E05               	movlw	5
 10328  013010  ECB5  F0BF         	call	_schedule_eeprom_write_task
 10329                           
 10330                           ;i2c.c: 533: break;
 10331  013014  D023               	goto	l1418
 10332  013016                     
 10333                           ;i2c.c: 535: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_ONBOARD_TEMPERATUR
      +                          E);
 10334  013016  0E06               	movlw	6
 10335  013018  ECB5  F0BF         	call	_schedule_eeprom_write_task
 10336                           
 10337                           ;i2c.c: 536: break;
 10338  01301C  D01F               	goto	l1418
 10339  01301E                     
 10340                           ;i2c.c: 538: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERATU
      +                          RE_1);
 10341  01301E  0E07               	movlw	7
 10342  013020  ECB5  F0BF         	call	_schedule_eeprom_write_task
 10343                           
 10344                           ;i2c.c: 539: break;
 10345  013024  D01B               	goto	l1418
 10346  013026                     
 10347                           ;i2c.c: 541: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERATU
      +                          RE_2);
 10348  013026  0E08               	movlw	8
 10349  013028  ECB5  F0BF         	call	_schedule_eeprom_write_task
 10350                           
 10351                           ;i2c.c: 543: }
 10352                           
 10353                           ;i2c.c: 542: break;
 10354  01302C  D017               	goto	l1418
 10355  01302E                     l1416:
 10356  01302E  0100               	movlb	0	; () banked
 10357  013030  5181               	movf	i2c_eeprom_read_calibration@cntr& (0+255),w,b
 10358                           
 10359                           ; Switch size 1, requested type "space"
 10360                           ; Number of cases is 7, Range of values is 0 to 6
 10361                           ; switch strategies available:
 10362                           ; Name         Instructions Cycles
 10363                           ; simple_byte           22    12 (average)
 10364                           ;	Chosen strategy is simple_byte
 10365  013032  0A00               	xorlw	0	; case 0
 10366  013034  B4D8               	btfsc	status,2,c
 10367  013036  D7DF               	goto	l1417
 10368  013038  0A01               	xorlw	1	; case 1
 10369  01303A  B4D8               	btfsc	status,2,c
 10370  01303C  D7E0               	goto	l1419
 10371  01303E  0A03               	xorlw	3	; case 2
 10372  013040  B4D8               	btfsc	status,2,c
 10373  013042  D7E1               	goto	l1420
 10374  013044  0A01               	xorlw	1	; case 3
 10375  013046  B4D8               	btfsc	status,2,c
 10376  013048  D7E2               	goto	l1421
 10377  01304A  0A07               	xorlw	7	; case 4
 10378  01304C  B4D8               	btfsc	status,2,c
 10379  01304E  D7E3               	goto	l1422
 10380  013050  0A01               	xorlw	1	; case 5
 10381  013052  B4D8               	btfsc	status,2,c
 10382  013054  D7E4               	goto	l1423
 10383  013056  0A03               	xorlw	3	; case 6
 10384  013058  B4D8               	btfsc	status,2,c
 10385  01305A  D7E5               	goto	l1424
 10386  01305C                     l1418:
 10387                           
 10388                           ; BSR set to: 0
 10389                           
 10390                           ; BSR set to: 0
 10391  01305C  0100               	movlb	0	; () banked
 10392  01305E  2B81               	incf	i2c_eeprom_read_calibration@cntr& (0+255),f,b
 10393  013060  D774               	goto	l26493
 10394  013062                     __end_of_i2c_eeprom_read_calibration:
 10395                           	opt stack 0
 10396                           tblptru	equ	0xFF8
 10397                           tblptrh	equ	0xFF7
 10398                           tblptrl	equ	0xFF6
 10399                           tablat	equ	0xFF5
 10400                           prodh	equ	0xFF4
 10401                           prodl	equ	0xFF3
 10402                           intcon3	equ	0xFF0
 10403                           postinc0	equ	0xFEE
 10404                           wreg	equ	0xFE8
 10405                           postdec1	equ	0xFE5
 10406                           plusw1	equ	0xFE3
 10407                           fsr1h	equ	0xFE2
 10408                           fsr1l	equ	0xFE1
 10409                           postinc2	equ	0xFDE
 10410                           postdec2	equ	0xFDD
 10411                           plusw2	equ	0xFDB
 10412                           fsr2h	equ	0xFDA
 10413                           fsr2l	equ	0xFD9
 10414                           status	equ	0xFD8
 10415                           
 10416 ;; *************** function _i2c_eeprom_read *****************
 10417 ;; Defined at:
 10418 ;;		line 431 in file "i2c.c"
 10419 ;; Parameters:    Size  Location     Type
 10420 ;;  address         2   17[BANK0 ] unsigned int 
 10421 ;;  data            2   19[BANK0 ] PTR unsigned char 
 10422 ;;		 -> rtcc_read_eeprom@date(6), i2c_eeprom_read_calibration@buffer(4), calibrationParameters(84), 
 10423 ;;  length          1   21[BANK0 ] unsigned char 
 10424 ;; Auto vars:     Size  Location     Type
 10425 ;;  slave_addres    1   24[BANK0 ] unsigned char 
 10426 ;;  addr            1   23[BANK0 ] unsigned char 
 10427 ;; Return value:  Size  Location     Type
 10428 ;;                  1    wreg      void 
 10429 ;; Registers used:
 10430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10431 ;; Tracked objects:
 10432 ;;		On entry : 0/0
 10433 ;;		On exit  : 0/0
 10434 ;;		Unchanged: 0/0
 10435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10436 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10437 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10438 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10439 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10440 ;;Total ram usage:        8 bytes
 10441 ;; Hardware stack levels used:    1
 10442 ;; Hardware stack levels required when called:   12
 10443 ;; This function calls:
 10444 ;;		__i2c_read
 10445 ;;		__i2c_write
 10446 ;;		_i2c_set_frequency
 10447 ;; This function is called by:
 10448 ;;		_i2c_eeprom_read_calibration
 10449 ;;		_rtcc_read_eeprom
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           	psect	text35
 10454  017CDE                     __ptext35:
 10455                           	opt stack 0
 10456  017CDE                     _i2c_eeprom_read:
 10457                           	opt stack 15
 10458                           
 10459                           ;i2c.c: 433: uint8_t slave_address;;i2c.c: 434: uint8_t addr;;i2c.c: 435: addr = address
      +                           & 0xFF;
 10460                           
 10461                           ; BSR set to: 0
 10462                           ;incstack = 0
 10463  017CDE  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
 10464                           
 10465                           ;i2c.c: 436: address &= 0b0000011100000000;
 10466  017CE2  0100               	movlb	0	; () banked
 10467  017CE4  0E00               	movlw	0
 10468  017CE6  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
 10469  017CE8  0E07               	movlw	7
 10470  017CEA  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
 10471                           
 10472                           ;i2c.c: 437: address >>= 7;
 10473  017CEC  0E07               	movlw	7
 10474  017CEE  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
 10475  017CF0                     u22525:
 10476  017CF0  90D8               	bcf	status,0,c
 10477  017CF2  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
 10478  017CF4  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
 10479  017CF6  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
 10480  017CF8  D7FB               	goto	u22525
 10481                           
 10482                           ;i2c.c: 438: slave_address = 0b10100000 | address;
 10483  017CFA  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
 10484  017CFC  09A0               	iorlw	160
 10485  017CFE  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
 10486                           
 10487                           ; BSR set to: 0
 10488                           ;i2c.c: 441: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 10489  017D00  0E02               	movlw	2
 10490  017D02  EC4E  F0C3         	call	_i2c_set_frequency
 10491                           
 10492                           ;i2c.c: 443: _i2c_write(slave_address, &addr, 1);
 10493  017D06  0E77               	movlw	low i2c_eeprom_read@addr
 10494  017D08  0100               	movlb	0	; () banked
 10495  017D0A  6F65               	movwf	__i2c_write@data& (0+255),b
 10496  017D0C  0E00               	movlw	high i2c_eeprom_read@addr
 10497  017D0E  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10498  017D10  0E01               	movlw	1
 10499  017D12  6F67               	movwf	__i2c_write@length& (0+255),b
 10500  017D14  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
 10501  017D16  EC65  F0BF         	call	__i2c_write
 10502                           
 10503                           ;i2c.c: 444: _i2c_read(slave_address, &data[0], length);
 10504  017D1A  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
 10505  017D1E  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
 10506  017D22  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
 10507  017D26  0100               	movlb	0	; () banked
 10508  017D28  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
 10509  017D2A  EC86  F0B2         	call	__i2c_read
 10510  017D2E  0012               	return		;funcret
 10511  017D30                     __end_of_i2c_eeprom_read:
 10512                           	opt stack 0
 10513                           tblptru	equ	0xFF8
 10514                           tblptrh	equ	0xFF7
 10515                           tblptrl	equ	0xFF6
 10516                           tablat	equ	0xFF5
 10517                           prodh	equ	0xFF4
 10518                           prodl	equ	0xFF3
 10519                           intcon3	equ	0xFF0
 10520                           postinc0	equ	0xFEE
 10521                           wreg	equ	0xFE8
 10522                           postdec1	equ	0xFE5
 10523                           plusw1	equ	0xFE3
 10524                           fsr1h	equ	0xFE2
 10525                           fsr1l	equ	0xFE1
 10526                           postinc2	equ	0xFDE
 10527                           postdec2	equ	0xFDD
 10528                           plusw2	equ	0xFDB
 10529                           fsr2h	equ	0xFDA
 10530                           fsr2l	equ	0xFD9
 10531                           status	equ	0xFD8
 10532                           
 10533 ;; *************** function __i2c_read *****************
 10534 ;; Defined at:
 10535 ;;		line 169 in file "i2c.c"
 10536 ;; Parameters:    Size  Location     Type
 10537 ;;  slave_addres    1    wreg     unsigned char 
 10538 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10539 ;;		 -> rtcc_read_eeprom@date(6), i2c_eeprom_read_calibration@buffer(4), i2c_eeprom_readByte@addr(1), calibrationParamet
      +ers(84), 
 10540 ;;  length          1    7[BANK0 ] unsigned char 
 10541 ;; Auto vars:     Size  Location     Type
 10542 ;;  slave_addres    1   15[BANK0 ] unsigned char 
 10543 ;;  cntr            1   16[BANK0 ] unsigned char 
 10544 ;; Return value:  Size  Location     Type
 10545 ;;                  1    wreg      void 
 10546 ;; Registers used:
 10547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10548 ;; Tracked objects:
 10549 ;;		On entry : 0/0
 10550 ;;		On exit  : 0/0
 10551 ;;		Unchanged: 0/0
 10552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10553 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10554 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10555 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10556 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10557 ;;Total ram usage:       12 bytes
 10558 ;; Hardware stack levels used:    1
 10559 ;; Hardware stack levels required when called:   11
 10560 ;; This function calls:
 10561 ;;		__i2c_acknowledge
 10562 ;;		__i2c_get
 10563 ;;		__i2c_not_acknowledge
 10564 ;;		__i2c_send
 10565 ;;		__i2c_start
 10566 ;;		__i2c_stop
 10567 ;;		__i2c_wait_idle
 10568 ;; This function is called by:
 10569 ;;		_i2c_eeprom_read
 10570 ;;		_i2c_eeprom_readByte
 10571 ;; This function uses a non-reentrant model
 10572 ;;
 10573                           
 10574                           	psect	text36
 10575  01650C                     __ptext36:
 10576                           	opt stack 0
 10577  01650C                     __i2c_read:
 10578                           	opt stack 15
 10579                           
 10580                           ;incstack = 0
 10581                           ;__i2c_read@slave_address stored from wreg
 10582  01650C  0100               	movlb	0	; () banked
 10583  01650E  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
 10584                           
 10585                           ;i2c.c: 171: uint8_t cntr;;i2c.c: 173: _i2c_wait_idle();
 10586  016510  EC03  F0BA         	call	__i2c_wait_idle	;wreg free
 10587                           
 10588                           ;i2c.c: 174: _i2c_start();
 10589  016514  EC7B  F0C8         	call	__i2c_start	;wreg free
 10590                           
 10591                           ;i2c.c: 175: _i2c_wait_idle();
 10592  016518  EC03  F0BA         	call	__i2c_wait_idle	;wreg free
 10593                           
 10594                           ;i2c.c: 176: _i2c_send(slave_address | 0x01);
 10595  01651C  0100               	movlb	0	; () banked
 10596  01651E  516F               	movf	__i2c_read@slave_address& (0+255),w,b
 10597  016520  0901               	iorlw	1
 10598  016522  EC72  F0C8         	call	__i2c_send
 10599                           
 10600                           ;i2c.c: 177: _i2c_wait_idle();
 10601  016526  EC03  F0BA         	call	__i2c_wait_idle	;wreg free
 10602                           
 10603                           ;i2c.c: 179: for(cntr=0; cntr<length-1; ++cntr)
 10604  01652A  0E00               	movlw	0
 10605  01652C  0100               	movlb	0	; () banked
 10606  01652E  6F70               	movwf	__i2c_read@cntr& (0+255),b
 10607  016530  D00F               	goto	l1350
 10608  016532                     
 10609                           ; BSR set to: 0
 10610                           ;i2c.c: 180: {;i2c.c: 181: data[cntr] = _i2c_get();
 10611                           
 10612                           ; BSR set to: 0
 10613  016532  5170               	movf	__i2c_read@cntr& (0+255),w,b
 10614  016534  0D01               	mullw	1
 10615  016536  50F3               	movf	prodl,w,c
 10616  016538  2565               	addwf	__i2c_read@data& (0+255),w,b
 10617  01653A  6ED9               	movwf	fsr2l,c
 10618  01653C  50F4               	movf	prodh,w,c
 10619  01653E  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
 10620  016540  6EDA               	movwf	fsr2h,c
 10621  016542  EC63  F0C8         	call	__i2c_get	;wreg free
 10622  016546  6EDF               	movwf	indf2,c
 10623                           
 10624                           ;i2c.c: 182: _i2c_acknowledge();
 10625  016548  EC68  F0C8         	call	__i2c_acknowledge	;wreg free
 10626  01654C  0100               	movlb	0	; () banked
 10627  01654E  2B70               	incf	__i2c_read@cntr& (0+255),f,b
 10628  016550                     l1350:
 10629                           
 10630                           ; BSR set to: 0
 10631                           
 10632                           ; BSR set to: 0
 10633  016550  0EFF               	movlw	255
 10634  016552  6F68               	movwf	??__i2c_read& (0+255),b
 10635  016554  0EFF               	movlw	255
 10636  016556  6F69               	movwf	(??__i2c_read+1)& (0+255),b
 10637  016558  5167               	movf	__i2c_read@length& (0+255),w,b
 10638  01655A  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
 10639  01655C  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
 10640  01655E  5168               	movf	??__i2c_read& (0+255),w,b
 10641  016560  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
 10642  016562  5169               	movf	(??__i2c_read+1)& (0+255),w,b
 10643  016564  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
 10644  016566  5170               	movf	__i2c_read@cntr& (0+255),w,b
 10645  016568  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
 10646  01656A  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
 10647  01656C  516A               	movf	(??__i2c_read+2)& (0+255),w,b
 10648  01656E  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
 10649  016570  516D               	movf	(??__i2c_read+5)& (0+255),w,b
 10650  016572  0A80               	xorlw	128
 10651  016574  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
 10652  016576  516B               	movf	(??__i2c_read+3)& (0+255),w,b
 10653  016578  0A80               	xorlw	128
 10654  01657A  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
 10655  01657C  A0D8               	btfss	status,0,c
 10656  01657E  D7D9               	goto	l1351
 10657                           
 10658                           ; BSR set to: 0
 10659                           ;i2c.c: 183: };i2c.c: 184: data[cntr] = _i2c_get();
 10660                           
 10661                           ; BSR set to: 0
 10662  016580  5170               	movf	__i2c_read@cntr& (0+255),w,b
 10663  016582  0D01               	mullw	1
 10664  016584  50F3               	movf	prodl,w,c
 10665  016586  2565               	addwf	__i2c_read@data& (0+255),w,b
 10666  016588  6ED9               	movwf	fsr2l,c
 10667  01658A  50F4               	movf	prodh,w,c
 10668  01658C  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
 10669  01658E  6EDA               	movwf	fsr2h,c
 10670  016590  EC63  F0C8         	call	__i2c_get	;wreg free
 10671  016594  6EDF               	movwf	indf2,c
 10672                           
 10673                           ;i2c.c: 185: _i2c_not_acknowledge();
 10674  016596  EC5E  F0C8         	call	__i2c_not_acknowledge	;wreg free
 10675                           
 10676                           ;i2c.c: 187: _i2c_stop();
 10677  01659A  EC77  F0C8         	call	__i2c_stop	;wreg free
 10678  01659E  0012               	return		;funcret
 10679  0165A0                     __end_of__i2c_read:
 10680                           	opt stack 0
 10681                           tblptru	equ	0xFF8
 10682                           tblptrh	equ	0xFF7
 10683                           tblptrl	equ	0xFF6
 10684                           tablat	equ	0xFF5
 10685                           prodh	equ	0xFF4
 10686                           prodl	equ	0xFF3
 10687                           intcon3	equ	0xFF0
 10688                           postinc0	equ	0xFEE
 10689                           wreg	equ	0xFE8
 10690                           postdec1	equ	0xFE5
 10691                           plusw1	equ	0xFE3
 10692                           fsr1h	equ	0xFE2
 10693                           fsr1l	equ	0xFE1
 10694                           indf2	equ	0xFDF
 10695                           postinc2	equ	0xFDE
 10696                           postdec2	equ	0xFDD
 10697                           plusw2	equ	0xFDB
 10698                           fsr2h	equ	0xFDA
 10699                           fsr2l	equ	0xFD9
 10700                           status	equ	0xFD8
 10701                           
 10702 ;; *************** function __i2c_eeprom_load_default_calibration *****************
 10703 ;; Defined at:
 10704 ;;		line 548 in file "i2c.c"
 10705 ;; Parameters:    Size  Location     Type
 10706 ;;  buffer          2    0[BANK0 ] PTR struct .
 10707 ;;		 -> calibrationParameters(84), 
 10708 ;;  index           1    2[BANK0 ] enum E6806
 10709 ;; Auto vars:     Size  Location     Type
 10710 ;;		None
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  1    wreg      void 
 10713 ;; Registers used:
 10714 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10720 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10723 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10724 ;;Total ram usage:        3 bytes
 10725 ;; Hardware stack levels used:    1
 10726 ;; Hardware stack levels required when called:   10
 10727 ;; This function calls:
 10728 ;;		Nothing
 10729 ;; This function is called by:
 10730 ;;		_i2c_eeprom_read_calibration
 10731 ;; This function uses a non-reentrant model
 10732 ;;
 10733                           
 10734                           	psect	text37
 10735  00D788                     __ptext37:
 10736                           	opt stack 0
 10737  00D788                     __i2c_eeprom_load_default_calibration:
 10738                           	opt stack 18
 10739                           
 10740                           ;i2c.c: 550: switch(index)
 10741                           
 10742                           ;incstack = 0
 10743  00D788  D1C8               	goto	l1428
 10744  00D78A                     
 10745                           ;i2c.c: 553: (*buffer).NeutralOffset = 0;
 10746  00D78A  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10747  00D78E  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10748  00D792  0E00               	movlw	0
 10749  00D794  6EDE               	movwf	postinc2,c
 10750  00D796  0E00               	movlw	0
 10751  00D798  6EDD               	movwf	postdec2,c
 10752                           
 10753                           ;i2c.c: 554: (*buffer).NeutralMultiplier = 11;
 10754  00D79A  0100               	movlb	0	; () banked
 10755  00D79C  EE20 F002          	lfsr	2,2
 10756  00D7A0  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10757  00D7A2  26D9               	addwf	fsr2l,f,c
 10758  00D7A4  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10759  00D7A6  22DA               	addwfc	fsr2h,f,c
 10760  00D7A8  0E0B               	movlw	11
 10761  00D7AA  6EDE               	movwf	postinc2,c
 10762  00D7AC  0E00               	movlw	0
 10763  00D7AE  6EDD               	movwf	postdec2,c
 10764                           
 10765                           ; BSR set to: 0
 10766                           ;i2c.c: 555: (*buffer).NeutralShift = 4;
 10767  00D7B0  EE20 F004          	lfsr	2,4
 10768  00D7B4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10769  00D7B6  26D9               	addwf	fsr2l,f,c
 10770  00D7B8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10771  00D7BA  22DA               	addwfc	fsr2h,f,c
 10772  00D7BC  0E04               	movlw	4
 10773  00D7BE  6EDF               	movwf	indf2,c
 10774                           
 10775                           ; BSR set to: 0
 10776                           ;i2c.c: 556: (*buffer).Offset = 0;
 10777  00D7C0  EE20 F005          	lfsr	2,5
 10778  00D7C4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10779  00D7C6  26D9               	addwf	fsr2l,f,c
 10780  00D7C8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10781  00D7CA  22DA               	addwfc	fsr2h,f,c
 10782  00D7CC  0E00               	movlw	0
 10783  00D7CE  6EDE               	movwf	postinc2,c
 10784  00D7D0  0E00               	movlw	0
 10785  00D7D2  6EDD               	movwf	postdec2,c
 10786                           
 10787                           ; BSR set to: 0
 10788                           ;i2c.c: 557: (*buffer).Multiplier = 11;
 10789  00D7D4  EE20 F007          	lfsr	2,7
 10790  00D7D8  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10791  00D7DA  26D9               	addwf	fsr2l,f,c
 10792  00D7DC  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10793  00D7DE  22DA               	addwfc	fsr2h,f,c
 10794  00D7E0  0E0B               	movlw	11
 10795  00D7E2  6EDE               	movwf	postinc2,c
 10796  00D7E4  0E00               	movlw	0
 10797  00D7E6  6EDD               	movwf	postdec2,c
 10798                           
 10799                           ; BSR set to: 0
 10800                           ;i2c.c: 558: (*buffer).Shift = 4;
 10801  00D7E8  EE20 F009          	lfsr	2,9
 10802  00D7EC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10803  00D7EE  26D9               	addwf	fsr2l,f,c
 10804  00D7F0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10805  00D7F2  22DA               	addwfc	fsr2h,f,c
 10806  00D7F4  0E04               	movlw	4
 10807  00D7F6  6EDF               	movwf	indf2,c
 10808                           
 10809                           ; BSR set to: 0
 10810                           ;i2c.c: 559: (*buffer).AutoCalibration = 0;
 10811  00D7F8  EE20 F00A          	lfsr	2,10
 10812  00D7FC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10813  00D7FE  26D9               	addwf	fsr2l,f,c
 10814  00D800  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10815  00D802  22DA               	addwfc	fsr2h,f,c
 10816  00D804  0E00               	movlw	0
 10817  00D806  6EDE               	movwf	postinc2,c
 10818  00D808  0E00               	movlw	0
 10819  00D80A  6EDD               	movwf	postdec2,c
 10820                           
 10821                           ;i2c.c: 560: break;
 10822  00D80C  0012               	return	
 10823  00D80E                     
 10824                           ; BSR set to: 0
 10825                           ;i2c.c: 562: (*buffer).NeutralOffset = 0;
 10826                           
 10827                           ; BSR set to: 0
 10828  00D80E  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10829  00D812  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10830  00D816  0E00               	movlw	0
 10831  00D818  6EDE               	movwf	postinc2,c
 10832  00D81A  0E00               	movlw	0
 10833  00D81C  6EDD               	movwf	postdec2,c
 10834                           
 10835                           ; BSR set to: 0
 10836                           ;i2c.c: 563: (*buffer).NeutralMultiplier = 17;
 10837  00D81E  EE20 F002          	lfsr	2,2
 10838  00D822  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10839  00D824  26D9               	addwf	fsr2l,f,c
 10840  00D826  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10841  00D828  22DA               	addwfc	fsr2h,f,c
 10842  00D82A  0E11               	movlw	17
 10843  00D82C  6EDE               	movwf	postinc2,c
 10844  00D82E  0E00               	movlw	0
 10845  00D830  6EDD               	movwf	postdec2,c
 10846                           
 10847                           ; BSR set to: 0
 10848                           ;i2c.c: 564: (*buffer).NeutralShift = 5;
 10849  00D832  EE20 F004          	lfsr	2,4
 10850  00D836  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10851  00D838  26D9               	addwf	fsr2l,f,c
 10852  00D83A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10853  00D83C  22DA               	addwfc	fsr2h,f,c
 10854  00D83E  0E05               	movlw	5
 10855  00D840  6EDF               	movwf	indf2,c
 10856                           
 10857                           ; BSR set to: 0
 10858                           ;i2c.c: 565: (*buffer).Offset = 0;
 10859  00D842  EE20 F005          	lfsr	2,5
 10860  00D846  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10861  00D848  26D9               	addwf	fsr2l,f,c
 10862  00D84A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10863  00D84C  22DA               	addwfc	fsr2h,f,c
 10864  00D84E  0E00               	movlw	0
 10865  00D850  6EDE               	movwf	postinc2,c
 10866  00D852  0E00               	movlw	0
 10867  00D854  6EDD               	movwf	postdec2,c
 10868                           
 10869                           ; BSR set to: 0
 10870                           ;i2c.c: 566: (*buffer).Multiplier = 17;
 10871  00D856  EE20 F007          	lfsr	2,7
 10872  00D85A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10873  00D85C  26D9               	addwf	fsr2l,f,c
 10874  00D85E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10875  00D860  22DA               	addwfc	fsr2h,f,c
 10876  00D862  0E11               	movlw	17
 10877  00D864  6EDE               	movwf	postinc2,c
 10878  00D866  0E00               	movlw	0
 10879  00D868  6EDD               	movwf	postdec2,c
 10880                           
 10881                           ; BSR set to: 0
 10882                           ;i2c.c: 567: (*buffer).Shift = 5;
 10883  00D86A  EE20 F009          	lfsr	2,9
 10884  00D86E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10885  00D870  26D9               	addwf	fsr2l,f,c
 10886  00D872  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10887  00D874  22DA               	addwfc	fsr2h,f,c
 10888  00D876  0E05               	movlw	5
 10889  00D878  6EDF               	movwf	indf2,c
 10890                           
 10891                           ; BSR set to: 0
 10892                           ;i2c.c: 568: (*buffer).AutoCalibration = 0;
 10893  00D87A  EE20 F00A          	lfsr	2,10
 10894  00D87E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10895  00D880  26D9               	addwf	fsr2l,f,c
 10896  00D882  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10897  00D884  22DA               	addwfc	fsr2h,f,c
 10898  00D886  0E00               	movlw	0
 10899  00D888  6EDE               	movwf	postinc2,c
 10900  00D88A  0E00               	movlw	0
 10901  00D88C  6EDD               	movwf	postdec2,c
 10902                           
 10903                           ;i2c.c: 569: break;
 10904  00D88E  0012               	return	
 10905  00D890                     
 10906                           ; BSR set to: 0
 10907                           ;i2c.c: 571: (*buffer).NeutralOffset = 0;
 10908                           
 10909                           ; BSR set to: 0
 10910  00D890  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10911  00D894  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10912  00D898  0E00               	movlw	0
 10913  00D89A  6EDE               	movwf	postinc2,c
 10914  00D89C  0E00               	movlw	0
 10915  00D89E  6EDD               	movwf	postdec2,c
 10916                           
 10917                           ; BSR set to: 0
 10918                           ;i2c.c: 572: (*buffer).NeutralMultiplier = 5851;
 10919  00D8A0  EE20 F002          	lfsr	2,2
 10920  00D8A4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10921  00D8A6  26D9               	addwf	fsr2l,f,c
 10922  00D8A8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10923  00D8AA  22DA               	addwfc	fsr2h,f,c
 10924  00D8AC  0EDB               	movlw	219
 10925  00D8AE  6EDE               	movwf	postinc2,c
 10926  00D8B0  0E16               	movlw	22
 10927  00D8B2  6EDD               	movwf	postdec2,c
 10928                           
 10929                           ; BSR set to: 0
 10930                           ;i2c.c: 573: (*buffer).NeutralShift = 15;
 10931  00D8B4  EE20 F004          	lfsr	2,4
 10932  00D8B8  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10933  00D8BA  26D9               	addwf	fsr2l,f,c
 10934  00D8BC  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10935  00D8BE  22DA               	addwfc	fsr2h,f,c
 10936  00D8C0  0E0F               	movlw	15
 10937  00D8C2  6EDF               	movwf	indf2,c
 10938                           
 10939                           ; BSR set to: 0
 10940                           ;i2c.c: 574: (*buffer).Offset = 0;
 10941  00D8C4  EE20 F005          	lfsr	2,5
 10942  00D8C8  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10943  00D8CA  26D9               	addwf	fsr2l,f,c
 10944  00D8CC  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10945  00D8CE  22DA               	addwfc	fsr2h,f,c
 10946  00D8D0  0E00               	movlw	0
 10947  00D8D2  6EDE               	movwf	postinc2,c
 10948  00D8D4  0E00               	movlw	0
 10949  00D8D6  6EDD               	movwf	postdec2,c
 10950                           
 10951                           ; BSR set to: 0
 10952                           ;i2c.c: 575: (*buffer).Multiplier = 5851;
 10953  00D8D8  EE20 F007          	lfsr	2,7
 10954  00D8DC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10955  00D8DE  26D9               	addwf	fsr2l,f,c
 10956  00D8E0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10957  00D8E2  22DA               	addwfc	fsr2h,f,c
 10958  00D8E4  0EDB               	movlw	219
 10959  00D8E6  6EDE               	movwf	postinc2,c
 10960  00D8E8  0E16               	movlw	22
 10961  00D8EA  6EDD               	movwf	postdec2,c
 10962                           
 10963                           ; BSR set to: 0
 10964                           ;i2c.c: 576: (*buffer).Shift = 15;
 10965  00D8EC  EE20 F009          	lfsr	2,9
 10966  00D8F0  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10967  00D8F2  26D9               	addwf	fsr2l,f,c
 10968  00D8F4  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10969  00D8F6  22DA               	addwfc	fsr2h,f,c
 10970  00D8F8  0E0F               	movlw	15
 10971  00D8FA  6EDF               	movwf	indf2,c
 10972                           
 10973                           ; BSR set to: 0
 10974                           ;i2c.c: 577: (*buffer).AutoCalibration = 0;
 10975  00D8FC  EE20 F00A          	lfsr	2,10
 10976  00D900  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 10977  00D902  26D9               	addwf	fsr2l,f,c
 10978  00D904  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 10979  00D906  22DA               	addwfc	fsr2h,f,c
 10980  00D908  0E00               	movlw	0
 10981  00D90A  6EDE               	movwf	postinc2,c
 10982  00D90C  0E00               	movlw	0
 10983  00D90E  6EDD               	movwf	postdec2,c
 10984                           
 10985                           ;i2c.c: 578: break;
 10986  00D910  0012               	return	
 10987  00D912                     
 10988                           ; BSR set to: 0
 10989                           ;i2c.c: 580: (*buffer).NeutralOffset = 0;
 10990                           
 10991                           ; BSR set to: 0
 10992  00D912  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 10993  00D916  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 10994  00D91A  0E00               	movlw	0
 10995  00D91C  6EDE               	movwf	postinc2,c
 10996  00D91E  0E00               	movlw	0
 10997  00D920  6EDD               	movwf	postdec2,c
 10998                           
 10999                           ; BSR set to: 0
 11000                           ;i2c.c: 581: (*buffer).NeutralMultiplier = 5851;
 11001  00D922  EE20 F002          	lfsr	2,2
 11002  00D926  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11003  00D928  26D9               	addwf	fsr2l,f,c
 11004  00D92A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11005  00D92C  22DA               	addwfc	fsr2h,f,c
 11006  00D92E  0EDB               	movlw	219
 11007  00D930  6EDE               	movwf	postinc2,c
 11008  00D932  0E16               	movlw	22
 11009  00D934  6EDD               	movwf	postdec2,c
 11010                           
 11011                           ; BSR set to: 0
 11012                           ;i2c.c: 582: (*buffer).NeutralShift = 15;
 11013  00D936  EE20 F004          	lfsr	2,4
 11014  00D93A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11015  00D93C  26D9               	addwf	fsr2l,f,c
 11016  00D93E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11017  00D940  22DA               	addwfc	fsr2h,f,c
 11018  00D942  0E0F               	movlw	15
 11019  00D944  6EDF               	movwf	indf2,c
 11020                           
 11021                           ; BSR set to: 0
 11022                           ;i2c.c: 583: (*buffer).Offset = 0;
 11023  00D946  EE20 F005          	lfsr	2,5
 11024  00D94A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11025  00D94C  26D9               	addwf	fsr2l,f,c
 11026  00D94E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11027  00D950  22DA               	addwfc	fsr2h,f,c
 11028  00D952  0E00               	movlw	0
 11029  00D954  6EDE               	movwf	postinc2,c
 11030  00D956  0E00               	movlw	0
 11031  00D958  6EDD               	movwf	postdec2,c
 11032                           
 11033                           ; BSR set to: 0
 11034                           ;i2c.c: 584: (*buffer).Multiplier = 5851;
 11035  00D95A  EE20 F007          	lfsr	2,7
 11036  00D95E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11037  00D960  26D9               	addwf	fsr2l,f,c
 11038  00D962  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11039  00D964  22DA               	addwfc	fsr2h,f,c
 11040  00D966  0EDB               	movlw	219
 11041  00D968  6EDE               	movwf	postinc2,c
 11042  00D96A  0E16               	movlw	22
 11043  00D96C  6EDD               	movwf	postdec2,c
 11044                           
 11045                           ; BSR set to: 0
 11046                           ;i2c.c: 585: (*buffer).Shift = 15;
 11047  00D96E  EE20 F009          	lfsr	2,9
 11048  00D972  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11049  00D974  26D9               	addwf	fsr2l,f,c
 11050  00D976  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11051  00D978  22DA               	addwfc	fsr2h,f,c
 11052  00D97A  0E0F               	movlw	15
 11053  00D97C  6EDF               	movwf	indf2,c
 11054                           
 11055                           ; BSR set to: 0
 11056                           ;i2c.c: 586: (*buffer).AutoCalibration = 0;
 11057  00D97E  EE20 F00A          	lfsr	2,10
 11058  00D982  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11059  00D984  26D9               	addwf	fsr2l,f,c
 11060  00D986  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11061  00D988  22DA               	addwfc	fsr2h,f,c
 11062  00D98A  0E00               	movlw	0
 11063  00D98C  6EDE               	movwf	postinc2,c
 11064  00D98E  0E00               	movlw	0
 11065  00D990  6EDD               	movwf	postdec2,c
 11066                           
 11067                           ;i2c.c: 587: break;
 11068  00D992  0012               	return	
 11069  00D994                     
 11070                           ; BSR set to: 0
 11071                           ;i2c.c: 589: (*buffer).NeutralOffset = -13769;
 11072                           
 11073                           ; BSR set to: 0
 11074  00D994  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 11075  00D998  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 11076  00D99C  0E37               	movlw	55
 11077  00D99E  6EDE               	movwf	postinc2,c
 11078  00D9A0  0ECA               	movlw	202
 11079  00D9A2  6EDD               	movwf	postdec2,c
 11080                           
 11081                           ; BSR set to: 0
 11082                           ;i2c.c: 590: (*buffer).NeutralMultiplier = -11479;
 11083  00D9A4  EE20 F002          	lfsr	2,2
 11084  00D9A8  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11085  00D9AA  26D9               	addwf	fsr2l,f,c
 11086  00D9AC  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11087  00D9AE  22DA               	addwfc	fsr2h,f,c
 11088  00D9B0  0E29               	movlw	41
 11089  00D9B2  6EDE               	movwf	postinc2,c
 11090  00D9B4  0ED3               	movlw	211
 11091  00D9B6  6EDD               	movwf	postdec2,c
 11092                           
 11093                           ; BSR set to: 0
 11094                           ;i2c.c: 591: (*buffer).NeutralShift = 13;
 11095  00D9B8  EE20 F004          	lfsr	2,4
 11096  00D9BC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11097  00D9BE  26D9               	addwf	fsr2l,f,c
 11098  00D9C0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11099  00D9C2  22DA               	addwfc	fsr2h,f,c
 11100  00D9C4  0E0D               	movlw	13
 11101  00D9C6  6EDF               	movwf	indf2,c
 11102                           
 11103                           ; BSR set to: 0
 11104                           ;i2c.c: 592: (*buffer).Offset = -13769;
 11105  00D9C8  EE20 F005          	lfsr	2,5
 11106  00D9CC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11107  00D9CE  26D9               	addwf	fsr2l,f,c
 11108  00D9D0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11109  00D9D2  22DA               	addwfc	fsr2h,f,c
 11110  00D9D4  0E37               	movlw	55
 11111  00D9D6  6EDE               	movwf	postinc2,c
 11112  00D9D8  0ECA               	movlw	202
 11113  00D9DA  6EDD               	movwf	postdec2,c
 11114                           
 11115                           ; BSR set to: 0
 11116                           ;i2c.c: 593: (*buffer).Multiplier = -11479;
 11117  00D9DC  EE20 F007          	lfsr	2,7
 11118  00D9E0  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11119  00D9E2  26D9               	addwf	fsr2l,f,c
 11120  00D9E4  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11121  00D9E6  22DA               	addwfc	fsr2h,f,c
 11122  00D9E8  0E29               	movlw	41
 11123  00D9EA  6EDE               	movwf	postinc2,c
 11124  00D9EC  0ED3               	movlw	211
 11125  00D9EE  6EDD               	movwf	postdec2,c
 11126                           
 11127                           ; BSR set to: 0
 11128                           ;i2c.c: 594: (*buffer).Shift = 13;
 11129  00D9F0  EE20 F009          	lfsr	2,9
 11130  00D9F4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11131  00D9F6  26D9               	addwf	fsr2l,f,c
 11132  00D9F8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11133  00D9FA  22DA               	addwfc	fsr2h,f,c
 11134  00D9FC  0E0D               	movlw	13
 11135  00D9FE  6EDF               	movwf	indf2,c
 11136                           
 11137                           ; BSR set to: 0
 11138                           ;i2c.c: 595: (*buffer).AutoCalibration = 0;
 11139  00DA00  EE20 F00A          	lfsr	2,10
 11140  00DA04  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11141  00DA06  26D9               	addwf	fsr2l,f,c
 11142  00DA08  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11143  00DA0A  22DA               	addwfc	fsr2h,f,c
 11144  00DA0C  0E00               	movlw	0
 11145  00DA0E  6EDE               	movwf	postinc2,c
 11146  00DA10  0E00               	movlw	0
 11147  00DA12  6EDD               	movwf	postdec2,c
 11148                           
 11149                           ;i2c.c: 596: break;
 11150  00DA14  0012               	return	
 11151  00DA16                     
 11152                           ; BSR set to: 0
 11153                           ;i2c.c: 598: (*buffer).NeutralOffset = -13769;
 11154                           
 11155                           ; BSR set to: 0
 11156  00DA16  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 11157  00DA1A  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 11158  00DA1E  0E37               	movlw	55
 11159  00DA20  6EDE               	movwf	postinc2,c
 11160  00DA22  0ECA               	movlw	202
 11161  00DA24  6EDD               	movwf	postdec2,c
 11162                           
 11163                           ; BSR set to: 0
 11164                           ;i2c.c: 599: (*buffer).NeutralMultiplier = -11479;
 11165  00DA26  EE20 F002          	lfsr	2,2
 11166  00DA2A  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11167  00DA2C  26D9               	addwf	fsr2l,f,c
 11168  00DA2E  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11169  00DA30  22DA               	addwfc	fsr2h,f,c
 11170  00DA32  0E29               	movlw	41
 11171  00DA34  6EDE               	movwf	postinc2,c
 11172  00DA36  0ED3               	movlw	211
 11173  00DA38  6EDD               	movwf	postdec2,c
 11174                           
 11175                           ; BSR set to: 0
 11176                           ;i2c.c: 600: (*buffer).NeutralShift = 13;
 11177  00DA3A  EE20 F004          	lfsr	2,4
 11178  00DA3E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11179  00DA40  26D9               	addwf	fsr2l,f,c
 11180  00DA42  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11181  00DA44  22DA               	addwfc	fsr2h,f,c
 11182  00DA46  0E0D               	movlw	13
 11183  00DA48  6EDF               	movwf	indf2,c
 11184                           
 11185                           ; BSR set to: 0
 11186                           ;i2c.c: 601: (*buffer).Offset = -13769;
 11187  00DA4A  EE20 F005          	lfsr	2,5
 11188  00DA4E  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11189  00DA50  26D9               	addwf	fsr2l,f,c
 11190  00DA52  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11191  00DA54  22DA               	addwfc	fsr2h,f,c
 11192  00DA56  0E37               	movlw	55
 11193  00DA58  6EDE               	movwf	postinc2,c
 11194  00DA5A  0ECA               	movlw	202
 11195  00DA5C  6EDD               	movwf	postdec2,c
 11196                           
 11197                           ; BSR set to: 0
 11198                           ;i2c.c: 602: (*buffer).Multiplier = -11479;
 11199  00DA5E  EE20 F007          	lfsr	2,7
 11200  00DA62  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11201  00DA64  26D9               	addwf	fsr2l,f,c
 11202  00DA66  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11203  00DA68  22DA               	addwfc	fsr2h,f,c
 11204  00DA6A  0E29               	movlw	41
 11205  00DA6C  6EDE               	movwf	postinc2,c
 11206  00DA6E  0ED3               	movlw	211
 11207  00DA70  6EDD               	movwf	postdec2,c
 11208                           
 11209                           ; BSR set to: 0
 11210                           ;i2c.c: 603: (*buffer).Shift = 13;
 11211  00DA72  EE20 F009          	lfsr	2,9
 11212  00DA76  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11213  00DA78  26D9               	addwf	fsr2l,f,c
 11214  00DA7A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11215  00DA7C  22DA               	addwfc	fsr2h,f,c
 11216  00DA7E  0E0D               	movlw	13
 11217  00DA80  6EDF               	movwf	indf2,c
 11218                           
 11219                           ; BSR set to: 0
 11220                           ;i2c.c: 604: (*buffer).AutoCalibration = 0;
 11221  00DA82  EE20 F00A          	lfsr	2,10
 11222  00DA86  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11223  00DA88  26D9               	addwf	fsr2l,f,c
 11224  00DA8A  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11225  00DA8C  22DA               	addwfc	fsr2h,f,c
 11226  00DA8E  0E00               	movlw	0
 11227  00DA90  6EDE               	movwf	postinc2,c
 11228  00DA92  0E00               	movlw	0
 11229  00DA94  6EDD               	movwf	postdec2,c
 11230                           
 11231                           ;i2c.c: 605: break;
 11232  00DA96  0012               	return	
 11233  00DA98                     
 11234                           ; BSR set to: 0
 11235                           ;i2c.c: 607: (*buffer).NeutralOffset = -13769;
 11236                           
 11237                           ; BSR set to: 0
 11238  00DA98  C060  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
 11239  00DA9C  C061  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
 11240  00DAA0  0E37               	movlw	55
 11241  00DAA2  6EDE               	movwf	postinc2,c
 11242  00DAA4  0ECA               	movlw	202
 11243  00DAA6  6EDD               	movwf	postdec2,c
 11244                           
 11245                           ; BSR set to: 0
 11246                           ;i2c.c: 608: (*buffer).NeutralMultiplier = -11479;
 11247  00DAA8  EE20 F002          	lfsr	2,2
 11248  00DAAC  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11249  00DAAE  26D9               	addwf	fsr2l,f,c
 11250  00DAB0  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11251  00DAB2  22DA               	addwfc	fsr2h,f,c
 11252  00DAB4  0E29               	movlw	41
 11253  00DAB6  6EDE               	movwf	postinc2,c
 11254  00DAB8  0ED3               	movlw	211
 11255  00DABA  6EDD               	movwf	postdec2,c
 11256                           
 11257                           ; BSR set to: 0
 11258                           ;i2c.c: 609: (*buffer).NeutralShift = 13;
 11259  00DABC  EE20 F004          	lfsr	2,4
 11260  00DAC0  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11261  00DAC2  26D9               	addwf	fsr2l,f,c
 11262  00DAC4  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11263  00DAC6  22DA               	addwfc	fsr2h,f,c
 11264  00DAC8  0E0D               	movlw	13
 11265  00DACA  6EDF               	movwf	indf2,c
 11266                           
 11267                           ; BSR set to: 0
 11268                           ;i2c.c: 610: (*buffer).Offset = -13769;
 11269  00DACC  EE20 F005          	lfsr	2,5
 11270  00DAD0  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11271  00DAD2  26D9               	addwf	fsr2l,f,c
 11272  00DAD4  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11273  00DAD6  22DA               	addwfc	fsr2h,f,c
 11274  00DAD8  0E37               	movlw	55
 11275  00DADA  6EDE               	movwf	postinc2,c
 11276  00DADC  0ECA               	movlw	202
 11277  00DADE  6EDD               	movwf	postdec2,c
 11278                           
 11279                           ; BSR set to: 0
 11280                           ;i2c.c: 611: (*buffer).Multiplier = -11479;
 11281  00DAE0  EE20 F007          	lfsr	2,7
 11282  00DAE4  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11283  00DAE6  26D9               	addwf	fsr2l,f,c
 11284  00DAE8  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11285  00DAEA  22DA               	addwfc	fsr2h,f,c
 11286  00DAEC  0E29               	movlw	41
 11287  00DAEE  6EDE               	movwf	postinc2,c
 11288  00DAF0  0ED3               	movlw	211
 11289  00DAF2  6EDD               	movwf	postdec2,c
 11290                           
 11291                           ; BSR set to: 0
 11292                           ;i2c.c: 612: (*buffer).Shift = 13;
 11293  00DAF4  EE20 F009          	lfsr	2,9
 11294  00DAF8  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11295  00DAFA  26D9               	addwf	fsr2l,f,c
 11296  00DAFC  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11297  00DAFE  22DA               	addwfc	fsr2h,f,c
 11298  00DB00  0E0D               	movlw	13
 11299  00DB02  6EDF               	movwf	indf2,c
 11300                           
 11301                           ; BSR set to: 0
 11302                           ;i2c.c: 613: (*buffer).AutoCalibration = 0;
 11303  00DB04  EE20 F00A          	lfsr	2,10
 11304  00DB08  5160               	movf	__i2c_eeprom_load_default_calibration@buffer& (0+255),w,b
 11305  00DB0A  26D9               	addwf	fsr2l,f,c
 11306  00DB0C  5161               	movf	(__i2c_eeprom_load_default_calibration@buffer+1)& (0+255),w,b
 11307  00DB0E  22DA               	addwfc	fsr2h,f,c
 11308  00DB10  0E00               	movlw	0
 11309  00DB12  6EDE               	movwf	postinc2,c
 11310  00DB14  0E00               	movlw	0
 11311  00DB16  6EDD               	movwf	postdec2,c
 11312                           
 11313                           ; BSR set to: 0
 11314                           ;i2c.c: 615: }
 11315                           
 11316                           ;i2c.c: 614: break;
 11317  00DB18  0012               	return	
 11318  00DB1A                     l1428:
 11319                           
 11320                           ; BSR set to: 0
 11321  00DB1A  0100               	movlb	0	; () banked
 11322  00DB1C  5162               	movf	__i2c_eeprom_load_default_calibration@index& (0+255),w,b
 11323                           
 11324                           ; Switch size 1, requested type "space"
 11325                           ; Number of cases is 7, Range of values is 0 to 6
 11326                           ; switch strategies available:
 11327                           ; Name         Instructions Cycles
 11328                           ; simple_byte           22    12 (average)
 11329                           ;	Chosen strategy is simple_byte
 11330  00DB1E  0A00               	xorlw	0	; case 0
 11331  00DB20  B4D8               	btfsc	status,2,c
 11332  00DB22  D633               	goto	l1429
 11333  00DB24  0A01               	xorlw	1	; case 1
 11334  00DB26  B4D8               	btfsc	status,2,c
 11335  00DB28  D672               	goto	l1431
 11336  00DB2A  0A03               	xorlw	3	; case 2
 11337  00DB2C  B4D8               	btfsc	status,2,c
 11338  00DB2E  D6B0               	goto	l1432
 11339  00DB30  0A01               	xorlw	1	; case 3
 11340  00DB32  B4D8               	btfsc	status,2,c
 11341  00DB34  D6EE               	goto	l1433
 11342  00DB36  0A07               	xorlw	7	; case 4
 11343  00DB38  B4D8               	btfsc	status,2,c
 11344  00DB3A  D72C               	goto	l1434
 11345  00DB3C  0A01               	xorlw	1	; case 5
 11346  00DB3E  B4D8               	btfsc	status,2,c
 11347  00DB40  D76A               	goto	l1435
 11348  00DB42  0A03               	xorlw	3	; case 6
 11349  00DB44  A4D8               	btfss	status,2,c
 11350  00DB46  0012               	return	
 11351  00DB48  D7A7               	goto	l1436
 11352  00DB4A                     __end_of__i2c_eeprom_load_default_calibration:
 11353                           	opt stack 0
 11354                           tblptru	equ	0xFF8
 11355                           tblptrh	equ	0xFF7
 11356                           tblptrl	equ	0xFF6
 11357                           tablat	equ	0xFF5
 11358                           prodh	equ	0xFF4
 11359                           prodl	equ	0xFF3
 11360                           intcon3	equ	0xFF0
 11361                           postinc0	equ	0xFEE
 11362                           wreg	equ	0xFE8
 11363                           postdec1	equ	0xFE5
 11364                           plusw1	equ	0xFE3
 11365                           fsr1h	equ	0xFE2
 11366                           fsr1l	equ	0xFE1
 11367                           indf2	equ	0xFDF
 11368                           postinc2	equ	0xFDE
 11369                           postdec2	equ	0xFDD
 11370                           plusw2	equ	0xFDB
 11371                           fsr2h	equ	0xFDA
 11372                           fsr2l	equ	0xFD9
 11373                           status	equ	0xFD8
 11374                           
 11375 ;; *************** function _flash_init *****************
 11376 ;; Defined at:
 11377 ;;		line 361 in file "flash.c"
 11378 ;; Parameters:    Size  Location     Type
 11379 ;;		None
 11380 ;; Auto vars:     Size  Location     Type
 11381 ;;		None
 11382 ;; Return value:  Size  Location     Type
 11383 ;;                  1    wreg      void 
 11384 ;; Registers used:
 11385 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11386 ;; Tracked objects:
 11387 ;;		On entry : 0/0
 11388 ;;		On exit  : 0/0
 11389 ;;		Unchanged: 0/0
 11390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11395 ;;Total ram usage:        0 bytes
 11396 ;; Hardware stack levels used:    1
 11397 ;; Hardware stack levels required when called:   14
 11398 ;; This function calls:
 11399 ;;		__flash_set_page_size
 11400 ;;		_spi_init
 11401 ;;		_spi_set_configuration
 11402 ;; This function is called by:
 11403 ;;		_system_init
 11404 ;; This function uses a non-reentrant model
 11405 ;;
 11406                           
 11407                           	psect	text38
 11408  018DCE                     __ptext38:
 11409                           	opt stack 0
 11410  018DCE                     _flash_init:
 11411                           	opt stack 15
 11412                           
 11413                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
 11414                           
 11415                           ; BSR set to: 0
 11416                           ;incstack = 0
 11417  018DCE  0E00               	movlw	0
 11418  018DD0  EC46  F0C1         	call	_spi_init
 11419                           
 11420                           ;flash.c: 365: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 11421  018DD4  0E00               	movlw	0
 11422  018DD6  ECBD  F098         	call	_spi_set_configuration
 11423                           
 11424                           ;flash.c: 368: _flash_set_page_size(FLASH_PAGE_SIZE_512);
 11425  018DDA  0E00               	movlw	0
 11426  018DDC  EC5E  F0B8         	call	__flash_set_page_size
 11427                           
 11428                           ;flash.c: 371: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 11429  018DE0  0E01               	movlw	1
 11430  018DE2  ECBD  F098         	call	_spi_set_configuration
 11431  018DE6  0012               	return		;funcret
 11432  018DE8                     __end_of_flash_init:
 11433                           	opt stack 0
 11434                           tblptru	equ	0xFF8
 11435                           tblptrh	equ	0xFF7
 11436                           tblptrl	equ	0xFF6
 11437                           tablat	equ	0xFF5
 11438                           prodh	equ	0xFF4
 11439                           prodl	equ	0xFF3
 11440                           intcon3	equ	0xFF0
 11441                           postinc0	equ	0xFEE
 11442                           wreg	equ	0xFE8
 11443                           postdec1	equ	0xFE5
 11444                           plusw1	equ	0xFE3
 11445                           fsr1h	equ	0xFE2
 11446                           fsr1l	equ	0xFE1
 11447                           indf2	equ	0xFDF
 11448                           postinc2	equ	0xFDE
 11449                           postdec2	equ	0xFDD
 11450                           plusw2	equ	0xFDB
 11451                           fsr2h	equ	0xFDA
 11452                           fsr2l	equ	0xFD9
 11453                           status	equ	0xFD8
 11454                           
 11455 ;; *************** function _spi_init *****************
 11456 ;; Defined at:
 11457 ;;		line 123 in file "spi.c"
 11458 ;; Parameters:    Size  Location     Type
 11459 ;;  configuratio    1    wreg     enum E6796
 11460 ;; Auto vars:     Size  Location     Type
 11461 ;;  configuratio    1    3[BANK0 ] enum E6796
 11462 ;; Return value:  Size  Location     Type
 11463 ;;                  1    wreg      void 
 11464 ;; Registers used:
 11465 ;;		wreg, status,2, status,0, cstack
 11466 ;; Tracked objects:
 11467 ;;		On entry : 0/0
 11468 ;;		On exit  : 0/0
 11469 ;;		Unchanged: 0/0
 11470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11472 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11474 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11475 ;;Total ram usage:        1 bytes
 11476 ;; Hardware stack levels used:    1
 11477 ;; Hardware stack levels required when called:   11
 11478 ;; This function calls:
 11479 ;;		__spi_init
 11480 ;; This function is called by:
 11481 ;;		_flash_init
 11482 ;; This function uses a non-reentrant model
 11483 ;;
 11484                           
 11485                           	psect	text39
 11486  01828C                     __ptext39:
 11487                           	opt stack 0
 11488  01828C                     _spi_init:
 11489                           	opt stack 17
 11490                           
 11491                           ;incstack = 0
 11492                           ;spi_init@configuration stored from wreg
 11493  01828C  0100               	movlb	0	; () banked
 11494  01828E  6F63               	movwf	spi_init@configuration& (0+255),b
 11495                           
 11496                           ;spi.c: 125: switch(configuration)
 11497  018290  D012               	goto	l3329
 11498  018292                     
 11499                           ;spi.c: 128: _spi_init(config_internal);
 11500  018292  C2B4  F060         	movff	_config_internal,__spi_init@details
 11501  018296  C2B5  F061         	movff	_config_internal+1,__spi_init@details+1
 11502  01829A  C2B6  F062         	movff	_config_internal+2,__spi_init@details+2
 11503  01829E  ECFF  F0C1         	call	__spi_init	;wreg free
 11504                           
 11505                           ;spi.c: 129: break;
 11506  0182A2  D011               	goto	l3331
 11507  0182A4                     
 11508                           ;spi.c: 132: _spi_init(config_external);
 11509  0182A4  C2B1  F060         	movff	_config_external,__spi_init@details
 11510  0182A8  C2B2  F061         	movff	_config_external+1,__spi_init@details+1
 11511  0182AC  C2B3  F062         	movff	_config_external+2,__spi_init@details+2
 11512  0182B0  ECFF  F0C1         	call	__spi_init	;wreg free
 11513                           
 11514                           ;spi.c: 134: }
 11515                           
 11516                           ;spi.c: 133: break;
 11517  0182B4  D008               	goto	l3331
 11518  0182B6                     l3329:
 11519  0182B6  0100               	movlb	0	; () banked
 11520  0182B8  5163               	movf	spi_init@configuration& (0+255),w,b
 11521                           
 11522                           ; Switch size 1, requested type "space"
 11523                           ; Number of cases is 2, Range of values is 0 to 1
 11524                           ; switch strategies available:
 11525                           ; Name         Instructions Cycles
 11526                           ; simple_byte            7     4 (average)
 11527                           ;	Chosen strategy is simple_byte
 11528  0182BA  0A00               	xorlw	0	; case 0
 11529  0182BC  B4D8               	btfsc	status,2,c
 11530  0182BE  D7E9               	goto	l3330
 11531  0182C0  0A01               	xorlw	1	; case 1
 11532  0182C2  B4D8               	btfsc	status,2,c
 11533  0182C4  D7EF               	goto	l3332
 11534  0182C6                     l3331:
 11535                           
 11536                           ;spi.c: 136: active_configuration = configuration;
 11537  0182C6  C063  F2C9         	movff	spi_init@configuration,_active_configuration
 11538  0182CA  0012               	return		;funcret
 11539  0182CC                     __end_of_spi_init:
 11540                           	opt stack 0
 11541                           tblptru	equ	0xFF8
 11542                           tblptrh	equ	0xFF7
 11543                           tblptrl	equ	0xFF6
 11544                           tablat	equ	0xFF5
 11545                           prodh	equ	0xFF4
 11546                           prodl	equ	0xFF3
 11547                           intcon3	equ	0xFF0
 11548                           postinc0	equ	0xFEE
 11549                           wreg	equ	0xFE8
 11550                           postdec1	equ	0xFE5
 11551                           plusw1	equ	0xFE3
 11552                           fsr1h	equ	0xFE2
 11553                           fsr1l	equ	0xFE1
 11554                           indf2	equ	0xFDF
 11555                           postinc2	equ	0xFDE
 11556                           postdec2	equ	0xFDD
 11557                           plusw2	equ	0xFDB
 11558                           fsr2h	equ	0xFDA
 11559                           fsr2l	equ	0xFD9
 11560                           status	equ	0xFD8
 11561                           
 11562 ;; *************** function __spi_init *****************
 11563 ;; Defined at:
 11564 ;;		line 26 in file "spi.c"
 11565 ;; Parameters:    Size  Location     Type
 11566 ;;  details         3    0[BANK0 ] struct .
 11567 ;; Auto vars:     Size  Location     Type
 11568 ;;		None
 11569 ;; Return value:  Size  Location     Type
 11570 ;;                  1    wreg      void 
 11571 ;; Registers used:
 11572 ;;		wreg, status,2
 11573 ;; Tracked objects:
 11574 ;;		On entry : 0/0
 11575 ;;		On exit  : 0/0
 11576 ;;		Unchanged: 0/0
 11577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11578 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11581 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11582 ;;Total ram usage:        3 bytes
 11583 ;; Hardware stack levels used:    1
 11584 ;; Hardware stack levels required when called:   10
 11585 ;; This function calls:
 11586 ;;		Nothing
 11587 ;; This function is called by:
 11588 ;;		_spi_init
 11589 ;; This function uses a non-reentrant model
 11590 ;;
 11591                           
 11592                           	psect	text40
 11593  0183FE                     __ptext40:
 11594                           	opt stack 0
 11595  0183FE                     __spi_init:
 11596                           	opt stack 17
 11597                           
 11598                           ;spi.c: 32: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11599                           
 11600                           ;incstack = 0
 11601  0183FE  0E55               	movlw	85
 11602  018400  6EA7               	movwf	4007,c	;volsfr
 11603  018402  0EAA               	movlw	170
 11604  018404  6EA7               	movwf	4007,c	;volsfr
 11605  018406  010E               	movlb	14	; () banked
 11606  018408  91BF               	bcf	191,0,b	;volatile
 11607                           
 11608                           ;spi.c: 33: RPINR21 = 23;
 11609  01840A  0E17               	movlw	23
 11610  01840C  6FFC               	movwf	252,b	;volatile
 11611                           
 11612                           ;spi.c: 34: RPOR21 = 10;
 11613  01840E  0E0A               	movlw	10
 11614  018410  6FD5               	movwf	213,b	;volatile
 11615                           
 11616                           ;spi.c: 36: RPOR22 = 11;
 11617  018412  0E0B               	movlw	11
 11618  018414  6FD6               	movwf	214,b	;volatile
 11619                           
 11620                           ;spi.c: 37: RPINR22 = 22;
 11621  018416  0E16               	movlw	22
 11622  018418  6FFD               	movwf	253,b	;volatile
 11623                           
 11624                           ;spi.c: 38: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 11625  01841A  0E55               	movlw	85
 11626  01841C  6EA7               	movwf	4007,c	;volsfr
 11627  01841E  0EAA               	movlw	170
 11628  018420  6EA7               	movwf	4007,c	;volsfr
 11629                           
 11630                           ; BSR set to: 14
 11631  018422  81BF               	bsf	191,0,b	;volatile
 11632                           
 11633                           ; BSR set to: 14
 11634                           ;spi.c: 41: SSP2STATbits.SMP = 1;
 11635  018424  8E73               	bsf	3955,7,c	;volatile
 11636                           
 11637                           ; BSR set to: 14
 11638                           ;spi.c: 42: SSP2STATbits.CKE = 1;
 11639  018426  8C73               	bsf	3955,6,c	;volatile
 11640                           
 11641                           ; BSR set to: 14
 11642                           ;spi.c: 43: SSP2CON1bits.CKP = 0;
 11643  018428  9872               	bcf	3954,4,c	;volatile
 11644                           
 11645                           ; BSR set to: 14
 11646                           ;spi.c: 44: SSP2CON1bits.SSPM =0b0000;
 11647  01842A  9072               	bcf	3954,0,c	;volatile
 11648  01842C  9272               	bcf	3954,1,c	;volatile
 11649  01842E  9472               	bcf	3954,2,c	;volatile
 11650  018430  9672               	bcf	3954,3,c	;volatile
 11651                           
 11652                           ; BSR set to: 14
 11653                           ;spi.c: 45: SSP2CON1bits.SSPEN = 1;
 11654  018432  8A72               	bsf	3954,5,c	;volatile
 11655                           
 11656                           ; BSR set to: 14
 11657  018434  0012               	return		;funcret
 11658  018436                     __end_of__spi_init:
 11659                           	opt stack 0
 11660                           tblptru	equ	0xFF8
 11661                           tblptrh	equ	0xFF7
 11662                           tblptrl	equ	0xFF6
 11663                           tablat	equ	0xFF5
 11664                           prodh	equ	0xFF4
 11665                           prodl	equ	0xFF3
 11666                           intcon3	equ	0xFF0
 11667                           postinc0	equ	0xFEE
 11668                           wreg	equ	0xFE8
 11669                           postdec1	equ	0xFE5
 11670                           plusw1	equ	0xFE3
 11671                           fsr1h	equ	0xFE2
 11672                           fsr1l	equ	0xFE1
 11673                           indf2	equ	0xFDF
 11674                           postinc2	equ	0xFDE
 11675                           postdec2	equ	0xFDD
 11676                           plusw2	equ	0xFDB
 11677                           fsr2h	equ	0xFDA
 11678                           fsr2l	equ	0xFD9
 11679                           status	equ	0xFD8
 11680                           
 11681 ;; *************** function __flash_set_page_size *****************
 11682 ;; Defined at:
 11683 ;;		line 99 in file "flash.c"
 11684 ;; Parameters:    Size  Location     Type
 11685 ;;  size            1    wreg     enum E7017
 11686 ;; Auto vars:     Size  Location     Type
 11687 ;;  size            1   23[BANK0 ] enum E7017
 11688 ;;  command         4   19[BANK0 ] unsigned char [4]
 11689 ;; Return value:  Size  Location     Type
 11690 ;;                  1    wreg      void 
 11691 ;; Registers used:
 11692 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11693 ;; Tracked objects:
 11694 ;;		On entry : 0/0
 11695 ;;		On exit  : 0/0
 11696 ;;		Unchanged: 0/0
 11697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11699 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11701 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11702 ;;Total ram usage:        5 bytes
 11703 ;; Hardware stack levels used:    1
 11704 ;; Hardware stack levels required when called:   13
 11705 ;; This function calls:
 11706 ;;		__flash_is_busy
 11707 ;;		_memcpy
 11708 ;;		_spi_tx
 11709 ;; This function is called by:
 11710 ;;		_flash_init
 11711 ;; This function uses a non-reentrant model
 11712 ;;
 11713                           
 11714                           	psect	text41
 11715  0170BC                     __ptext41:
 11716                           	opt stack 0
 11717  0170BC                     __flash_set_page_size:
 11718                           	opt stack 15
 11719                           
 11720                           ; BSR set to: 14
 11721                           ;incstack = 0
 11722                           ;__flash_set_page_size@size stored from wreg
 11723  0170BC  0100               	movlb	0	; () banked
 11724  0170BE  6F77               	movwf	__flash_set_page_size@size& (0+255),b
 11725  0170C0                     
 11726                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
 11727  0170C0  EC4F  F0C6         	call	__flash_is_busy	;wreg free
 11728  0170C4  0900               	iorlw	0
 11729  0170C6  A4D8               	btfss	status,2,c
 11730  0170C8  D7FB               	goto	l25607
 11731                           
 11732                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
 11733  0170CA  0100               	movlb	0	; () banked
 11734  0170CC  5177               	movf	__flash_set_page_size@size& (0+255),w,b
 11735  0170CE  A4D8               	btfss	status,2,c
 11736  0170D0  D00E               	goto	l2557
 11737                           
 11738                           ; BSR set to: 0
 11739                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
 11740  0170D2  0E73               	movlw	low __flash_set_page_size@command
 11741  0170D4  6F60               	movwf	memcpy@d1& (0+255),b
 11742  0170D6  0E00               	movlw	high __flash_set_page_size@command
 11743  0170D8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11744  0170DA  0E5A               	movlw	low _flash_command_pagesize_512
 11745  0170DC  6F62               	movwf	memcpy@s1& (0+255),b
 11746  0170DE  0EC4               	movlw	high _flash_command_pagesize_512
 11747  0170E0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11748  0170E2  0E00               	movlw	0
 11749  0170E4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11750  0170E6  0E04               	movlw	4
 11751  0170E8  6F64               	movwf	memcpy@n& (0+255),b
 11752  0170EA  EC97  F0BA         	call	_memcpy	;wreg free
 11753  0170EE                     l2557:
 11754                           
 11755                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
 11756  0170EE  0100               	movlb	0	; () banked
 11757  0170F0  0577               	decf	__flash_set_page_size@size& (0+255),w,b
 11758  0170F2  A4D8               	btfss	status,2,c
 11759  0170F4  D00E               	goto	l2558
 11760                           
 11761                           ; BSR set to: 0
 11762                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
 11763  0170F6  0E73               	movlw	low __flash_set_page_size@command
 11764  0170F8  6F60               	movwf	memcpy@d1& (0+255),b
 11765  0170FA  0E00               	movlw	high __flash_set_page_size@command
 11766  0170FC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11767  0170FE  0E56               	movlw	low _flash_command_pagesize_528
 11768  017100  6F62               	movwf	memcpy@s1& (0+255),b
 11769  017102  0EC4               	movlw	high _flash_command_pagesize_528
 11770  017104  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11771  017106  0E00               	movlw	0
 11772  017108  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11773  01710A  0E04               	movlw	4
 11774  01710C  6F64               	movwf	memcpy@n& (0+255),b
 11775  01710E  EC97  F0BA         	call	_memcpy	;wreg free
 11776  017112                     l2558:
 11777                           
 11778                           ;flash.c: 113: spi_tx(command, 4);
 11779  017112  0E73               	movlw	low __flash_set_page_size@command
 11780  017114  0100               	movlb	0	; () banked
 11781  017116  6F60               	movwf	spi_tx@data& (0+255),b
 11782  017118  0E00               	movlw	high __flash_set_page_size@command
 11783  01711A  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 11784  01711C  0E00               	movlw	0
 11785  01711E  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 11786  017120  0E04               	movlw	4
 11787  017122  6F62               	movwf	spi_tx@length& (0+255),b
 11788  017124  EC92  F0BC         	call	_spi_tx	;wreg free
 11789  017128  0012               	return		;funcret
 11790  01712A                     __end_of__flash_set_page_size:
 11791                           	opt stack 0
 11792                           tblptru	equ	0xFF8
 11793                           tblptrh	equ	0xFF7
 11794                           tblptrl	equ	0xFF6
 11795                           tablat	equ	0xFF5
 11796                           prodh	equ	0xFF4
 11797                           prodl	equ	0xFF3
 11798                           intcon3	equ	0xFF0
 11799                           postinc0	equ	0xFEE
 11800                           wreg	equ	0xFE8
 11801                           postdec1	equ	0xFE5
 11802                           plusw1	equ	0xFE3
 11803                           fsr1h	equ	0xFE2
 11804                           fsr1l	equ	0xFE1
 11805                           indf2	equ	0xFDF
 11806                           postinc2	equ	0xFDE
 11807                           postdec2	equ	0xFDD
 11808                           plusw2	equ	0xFDB
 11809                           fsr2h	equ	0xFDA
 11810                           fsr2l	equ	0xFD9
 11811                           status	equ	0xFD8
 11812                           
 11813 ;; *************** function _buck_init *****************
 11814 ;; Defined at:
 11815 ;;		line 543 in file "buck.c"
 11816 ;; Parameters:    Size  Location     Type
 11817 ;;		None
 11818 ;; Auto vars:     Size  Location     Type
 11819 ;;		None
 11820 ;; Return value:  Size  Location     Type
 11821 ;;                  1    wreg      void 
 11822 ;; Registers used:
 11823 ;;		wreg, status,2, cstack
 11824 ;; Tracked objects:
 11825 ;;		On entry : 0/0
 11826 ;;		On exit  : 0/0
 11827 ;;		Unchanged: 0/0
 11828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11833 ;;Total ram usage:        0 bytes
 11834 ;; Hardware stack levels used:    1
 11835 ;; Hardware stack levels required when called:   11
 11836 ;; This function calls:
 11837 ;;		__buck_pin_init
 11838 ;;		__buck_timer2_init
 11839 ;; This function is called by:
 11840 ;;		_system_init
 11841 ;; This function uses a non-reentrant model
 11842 ;;
 11843                           
 11844                           	psect	text42
 11845  019036                     __ptext42:
 11846                           	opt stack 0
 11847  019036                     _buck_init:
 11848                           	opt stack 18
 11849                           
 11850                           ;buck.c: 545: buck_status = BUCK_STATUS_OFF;
 11851                           
 11852                           ;incstack = 0
 11853  019036  0E00               	movlw	0
 11854  019038  6E1E               	movwf	_buck_status,c
 11855                           
 11856                           ;buck.c: 546: _buck_timer2_init();
 11857  01903A  EC34  F0C7         	call	__buck_timer2_init	;wreg free
 11858                           
 11859                           ;buck.c: 547: _buck_pin_init();
 11860  01903E  EC06  F0C3         	call	__buck_pin_init	;wreg free
 11861  019042  0012               	return		;funcret
 11862  019044                     __end_of_buck_init:
 11863                           	opt stack 0
 11864                           tblptru	equ	0xFF8
 11865                           tblptrh	equ	0xFF7
 11866                           tblptrl	equ	0xFF6
 11867                           tablat	equ	0xFF5
 11868                           prodh	equ	0xFF4
 11869                           prodl	equ	0xFF3
 11870                           intcon3	equ	0xFF0
 11871                           postinc0	equ	0xFEE
 11872                           wreg	equ	0xFE8
 11873                           postdec1	equ	0xFE5
 11874                           plusw1	equ	0xFE3
 11875                           fsr1h	equ	0xFE2
 11876                           fsr1l	equ	0xFE1
 11877                           indf2	equ	0xFDF
 11878                           postinc2	equ	0xFDE
 11879                           postdec2	equ	0xFDD
 11880                           plusw2	equ	0xFDB
 11881                           fsr2h	equ	0xFDA
 11882                           fsr2l	equ	0xFD9
 11883                           status	equ	0xFD8
 11884                           
 11885 ;; *************** function __buck_timer2_init *****************
 11886 ;; Defined at:
 11887 ;;		line 64 in file "buck.c"
 11888 ;; Parameters:    Size  Location     Type
 11889 ;;		None
 11890 ;; Auto vars:     Size  Location     Type
 11891 ;;		None
 11892 ;; Return value:  Size  Location     Type
 11893 ;;                  1    wreg      void 
 11894 ;; Registers used:
 11895 ;;		None
 11896 ;; Tracked objects:
 11897 ;;		On entry : 0/0
 11898 ;;		On exit  : 0/0
 11899 ;;		Unchanged: 0/0
 11900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11905 ;;Total ram usage:        0 bytes
 11906 ;; Hardware stack levels used:    1
 11907 ;; Hardware stack levels required when called:   10
 11908 ;; This function calls:
 11909 ;;		Nothing
 11910 ;; This function is called by:
 11911 ;;		_buck_init
 11912 ;; This function uses a non-reentrant model
 11913 ;;
 11914                           
 11915                           	psect	text43
 11916  018E68                     __ptext43:
 11917                           	opt stack 0
 11918  018E68                     __buck_timer2_init:
 11919                           	opt stack 18
 11920                           
 11921                           ;buck.c: 68: CCPTMRS0bits.C1TSEL = 0b000;
 11922                           
 11923                           ;incstack = 0
 11924  018E68  010F               	movlb	15	; () banked
 11925  018E6A  9152               	bcf	82,0,b	;volatile
 11926  018E6C  9352               	bcf	82,1,b	;volatile
 11927  018E6E  9552               	bcf	82,2,b	;volatile
 11928                           
 11929                           ;buck.c: 71: T2CONbits.T2OUTPS = 0b1111;
 11930  018E70  86CA               	bsf	4042,3,c	;volatile
 11931  018E72  88CA               	bsf	4042,4,c	;volatile
 11932  018E74  8ACA               	bsf	4042,5,c	;volatile
 11933  018E76  8CCA               	bsf	4042,6,c	;volatile
 11934                           
 11935                           ;buck.c: 74: T2CONbits.T2CKPS1 = 0;
 11936  018E78  92CA               	bcf	4042,1,c	;volatile
 11937                           
 11938                           ;buck.c: 75: T2CONbits.T2CKPS0 = 0;
 11939  018E7A  90CA               	bcf	4042,0,c	;volatile
 11940                           
 11941                           ;buck.c: 78: T2CONbits.TMR2ON = 0;
 11942  018E7C  94CA               	bcf	4042,2,c	;volatile
 11943                           
 11944                           ; BSR set to: 15
 11945  018E7E  0012               	return		;funcret
 11946  018E80                     __end_of__buck_timer2_init:
 11947                           	opt stack 0
 11948                           tblptru	equ	0xFF8
 11949                           tblptrh	equ	0xFF7
 11950                           tblptrl	equ	0xFF6
 11951                           tablat	equ	0xFF5
 11952                           prodh	equ	0xFF4
 11953                           prodl	equ	0xFF3
 11954                           intcon3	equ	0xFF0
 11955                           postinc0	equ	0xFEE
 11956                           wreg	equ	0xFE8
 11957                           postdec1	equ	0xFE5
 11958                           plusw1	equ	0xFE3
 11959                           fsr1h	equ	0xFE2
 11960                           fsr1l	equ	0xFE1
 11961                           indf2	equ	0xFDF
 11962                           postinc2	equ	0xFDE
 11963                           postdec2	equ	0xFDD
 11964                           plusw2	equ	0xFDB
 11965                           fsr2h	equ	0xFDA
 11966                           fsr2l	equ	0xFD9
 11967                           status	equ	0xFD8
 11968                           
 11969 ;; *************** function __buck_pin_init *****************
 11970 ;; Defined at:
 11971 ;;		line 41 in file "buck.c"
 11972 ;; Parameters:    Size  Location     Type
 11973 ;;		None
 11974 ;; Auto vars:     Size  Location     Type
 11975 ;;		None
 11976 ;; Return value:  Size  Location     Type
 11977 ;;                  1    wreg      void 
 11978 ;; Registers used:
 11979 ;;		wreg, status,2
 11980 ;; Tracked objects:
 11981 ;;		On entry : 0/0
 11982 ;;		On exit  : 0/0
 11983 ;;		Unchanged: 0/0
 11984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11989 ;;Total ram usage:        0 bytes
 11990 ;; Hardware stack levels used:    1
 11991 ;; Hardware stack levels required when called:   10
 11992 ;; This function calls:
 11993 ;;		Nothing
 11994 ;; This function is called by:
 11995 ;;		_buck_init
 11996 ;; This function uses a non-reentrant model
 11997 ;;
 11998                           
 11999                           	psect	text44
 12000  01860C                     __ptext44:
 12001                           	opt stack 0
 12002  01860C                     __buck_pin_init:
 12003                           	opt stack 18
 12004                           
 12005                           ;buck.c: 44: LATBbits.LB1 = 0;
 12006                           
 12007                           ; BSR set to: 15
 12008                           ;incstack = 0
 12009  01860C  928A               	bcf	3978,1,c	;volatile
 12010                           
 12011                           ;buck.c: 45: TRISBbits.TRISB1 = 0;
 12012  01860E  9293               	bcf	3987,1,c	;volatile
 12013                           
 12014                           ;buck.c: 46: LATBbits.LB2 = 0;
 12015  018610  948A               	bcf	3978,2,c	;volatile
 12016                           
 12017                           ;buck.c: 47: TRISBbits.TRISB2 = 0;
 12018  018612  9493               	bcf	3987,2,c	;volatile
 12019                           
 12020                           ;buck.c: 48: LATBbits.LB3 = 0;
 12021  018614  968A               	bcf	3978,3,c	;volatile
 12022                           
 12023                           ;buck.c: 49: TRISBbits.TRISB3 = 0;
 12024  018616  9693               	bcf	3987,3,c	;volatile
 12025                           
 12026                           ;buck.c: 52: LATBbits.LATB2 = 0;
 12027  018618  948A               	bcf	3978,2,c	;volatile
 12028                           
 12029                           ;buck.c: 53: LATBbits.LATB1 = 0;
 12030  01861A  928A               	bcf	3978,1,c	;volatile
 12031                           
 12032                           ;buck.c: 56: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 12033  01861C  0E55               	movlw	85
 12034  01861E  6EA7               	movwf	4007,c	;volsfr
 12035  018620  0EAA               	movlw	170
 12036  018622  6EA7               	movwf	4007,c	;volsfr
 12037  018624  010E               	movlb	14	; () banked
 12038  018626  91BF               	bcf	191,0,b	;volatile
 12039                           
 12040                           ;buck.c: 57: RPOR6 = 14;
 12041  018628  0E0E               	movlw	14
 12042  01862A  6FC6               	movwf	198,b	;volatile
 12043                           
 12044                           ;buck.c: 58: RPOR5 = 15;
 12045  01862C  0E0F               	movlw	15
 12046  01862E  6FC5               	movwf	197,b	;volatile
 12047                           
 12048                           ;buck.c: 59: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 12049  018630  0E55               	movlw	85
 12050  018632  6EA7               	movwf	4007,c	;volsfr
 12051  018634  0EAA               	movlw	170
 12052  018636  6EA7               	movwf	4007,c	;volsfr
 12053                           
 12054                           ; BSR set to: 14
 12055  018638  81BF               	bsf	191,0,b	;volatile
 12056                           
 12057                           ; BSR set to: 14
 12058  01863A  0012               	return		;funcret
 12059  01863C                     __end_of__buck_pin_init:
 12060                           	opt stack 0
 12061                           tblptru	equ	0xFF8
 12062                           tblptrh	equ	0xFF7
 12063                           tblptrl	equ	0xFF6
 12064                           tablat	equ	0xFF5
 12065                           prodh	equ	0xFF4
 12066                           prodl	equ	0xFF3
 12067                           intcon3	equ	0xFF0
 12068                           postinc0	equ	0xFEE
 12069                           wreg	equ	0xFE8
 12070                           postdec1	equ	0xFE5
 12071                           plusw1	equ	0xFE3
 12072                           fsr1h	equ	0xFE2
 12073                           fsr1l	equ	0xFE1
 12074                           indf2	equ	0xFDF
 12075                           postinc2	equ	0xFDE
 12076                           postdec2	equ	0xFDD
 12077                           plusw2	equ	0xFDB
 12078                           fsr2h	equ	0xFDA
 12079                           fsr2l	equ	0xFD9
 12080                           status	equ	0xFD8
 12081                           
 12082 ;; *************** function _adc_init *****************
 12083 ;; Defined at:
 12084 ;;		line 10 in file "adc.c"
 12085 ;; Parameters:    Size  Location     Type
 12086 ;;		None
 12087 ;; Auto vars:     Size  Location     Type
 12088 ;;		None
 12089 ;; Return value:  Size  Location     Type
 12090 ;;                  1    wreg      void 
 12091 ;; Registers used:
 12092 ;;		wreg, status,2
 12093 ;; Tracked objects:
 12094 ;;		On entry : 0/0
 12095 ;;		On exit  : 0/0
 12096 ;;		Unchanged: 0/0
 12097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12102 ;;Total ram usage:        0 bytes
 12103 ;; Hardware stack levels used:    1
 12104 ;; Hardware stack levels required when called:   10
 12105 ;; This function calls:
 12106 ;;		Nothing
 12107 ;; This function is called by:
 12108 ;;		_system_init
 12109 ;; This function uses a non-reentrant model
 12110 ;;
 12111                           
 12112                           	psect	text45
 12113  018D7C                     __ptext45:
 12114                           	opt stack 0
 12115  018D7C                     _adc_init:
 12116                           	opt stack 19
 12117                           
 12118                           ;adc.c: 12: ADCON0bits.VCFG1 = 0;
 12119                           
 12120                           ; BSR set to: 14
 12121                           ;incstack = 0
 12122  018D7C  9EC2               	bcf	4034,7,c	;volatile
 12123                           
 12124                           ;adc.c: 13: ADCON0bits.VCFG0 = 1;
 12125  018D7E  8CC2               	bsf	4034,6,c	;volatile
 12126                           
 12127                           ;adc.c: 14: ADCON0bits.CHS = 0b1100;
 12128  018D80  50C2               	movf	4034,w,c	;volatile
 12129  018D82  0BC3               	andlw	-61
 12130  018D84  0930               	iorlw	48
 12131  018D86  6EC2               	movwf	4034,c	;volatile
 12132                           
 12133                           ;adc.c: 15: ADCON0bits.ADON = 1;
 12134  018D88  80C2               	bsf	4034,0,c	;volatile
 12135                           
 12136                           ;adc.c: 16: ADCON1bits.ADFM = 0;
 12137  018D8A  9EC1               	bcf	4033,7,c	;volatile
 12138                           
 12139                           ;adc.c: 17: ADCON1bits.ADCAL = 0;
 12140  018D8C  9CC1               	bcf	4033,6,c	;volatile
 12141                           
 12142                           ;adc.c: 18: ADCON1bits.ADCS = 0b110;
 12143  018D8E  50C1               	movf	4033,w,c	;volatile
 12144  018D90  0BF8               	andlw	-8
 12145  018D92  0906               	iorlw	6
 12146  018D94  6EC1               	movwf	4033,c	;volatile
 12147  018D96  0012               	return		;funcret
 12148  018D98                     __end_of_adc_init:
 12149                           	opt stack 0
 12150                           tblptru	equ	0xFF8
 12151                           tblptrh	equ	0xFF7
 12152                           tblptrl	equ	0xFF6
 12153                           tablat	equ	0xFF5
 12154                           prodh	equ	0xFF4
 12155                           prodl	equ	0xFF3
 12156                           intcon3	equ	0xFF0
 12157                           postinc0	equ	0xFEE
 12158                           wreg	equ	0xFE8
 12159                           postdec1	equ	0xFE5
 12160                           plusw1	equ	0xFE3
 12161                           fsr1h	equ	0xFE2
 12162                           fsr1l	equ	0xFE1
 12163                           indf2	equ	0xFDF
 12164                           postinc2	equ	0xFDE
 12165                           postdec2	equ	0xFDD
 12166                           plusw2	equ	0xFDB
 12167                           fsr2h	equ	0xFDA
 12168                           fsr2l	equ	0xFD9
 12169                           status	equ	0xFD8
 12170                           
 12171 ;; *************** function __system_timer0_init *****************
 12172 ;; Defined at:
 12173 ;;		line 215 in file "os.c"
 12174 ;; Parameters:    Size  Location     Type
 12175 ;;		None
 12176 ;; Auto vars:     Size  Location     Type
 12177 ;;		None
 12178 ;; Return value:  Size  Location     Type
 12179 ;;                  1    wreg      void 
 12180 ;; Registers used:
 12181 ;;		wreg, status,2, status,0
 12182 ;; Tracked objects:
 12183 ;;		On entry : 0/0
 12184 ;;		On exit  : 0/0
 12185 ;;		Unchanged: 0/0
 12186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12191 ;;Total ram usage:        0 bytes
 12192 ;; Hardware stack levels used:    1
 12193 ;; Hardware stack levels required when called:   10
 12194 ;; This function calls:
 12195 ;;		Nothing
 12196 ;; This function is called by:
 12197 ;;		_system_init
 12198 ;; This function uses a non-reentrant model
 12199 ;;
 12200                           
 12201                           	psect	text46
 12202  0182CC                     __ptext46:
 12203                           	opt stack 0
 12204  0182CC                     __system_timer0_init:
 12205                           	opt stack 19
 12206                           
 12207                           ;os.c: 218: T0CONbits.T0CS = 0;
 12208                           
 12209                           ;incstack = 0
 12210  0182CC  9AD5               	bcf	4053,5,c	;volatile
 12211                           
 12212                           ;os.c: 220: T0CONbits.T08BIT = 0;
 12213  0182CE  9CD5               	bcf	4053,6,c	;volatile
 12214                           
 12215                           ;os.c: 222: T0CONbits.T0PS2 = 0;
 12216  0182D0  94D5               	bcf	4053,2,c	;volatile
 12217                           
 12218                           ;os.c: 223: T0CONbits.T0PS1 = 1;
 12219  0182D2  82D5               	bsf	4053,1,c	;volatile
 12220                           
 12221                           ;os.c: 224: T0CONbits.T0PS0 = 0;
 12222  0182D4  90D5               	bcf	4053,0,c	;volatile
 12223                           
 12224                           ;os.c: 226: T0CONbits.PSA = 0;
 12225  0182D6  96D5               	bcf	4053,3,c	;volatile
 12226                           
 12227                           ;os.c: 228: switch(os.clockFrequency)
 12228  0182D8  D009               	goto	l1173
 12229  0182DA                     
 12230                           ;os.c: 231: TMR0H = 0xF8;
 12231  0182DA  0EF8               	movlw	248
 12232  0182DC  6ED7               	movwf	4055,c	;volatile
 12233                           
 12234                           ;os.c: 232: TMR0L = 0x30;
 12235  0182DE  0E30               	movlw	48
 12236  0182E0  D003               	goto	L8
 12237  0182E2                     
 12238                           ;os.c: 235: TMR0H = 0xD1;
 12239  0182E2  0ED1               	movlw	209
 12240  0182E4  6ED7               	movwf	4055,c	;volatile
 12241                           
 12242                           ;os.c: 236: TMR0L = 0x20;
 12243  0182E6  0E20               	movlw	32
 12244  0182E8                     L8:
 12245  0182E8  6ED6               	movwf	4054,c	;volatile
 12246                           
 12247                           ;os.c: 238: }
 12248                           
 12249                           ;os.c: 237: break;
 12250  0182EA  D008               	goto	l1175
 12251  0182EC                     l1173:
 12252  0182EC  0102               	movlb	2	; () banked
 12253  0182EE  5100               	movf	_os& (0+255),w,b	;volatile
 12254                           
 12255                           ; Switch size 1, requested type "space"
 12256                           ; Number of cases is 2, Range of values is 1 to 2
 12257                           ; switch strategies available:
 12258                           ; Name         Instructions Cycles
 12259                           ; simple_byte            7     4 (average)
 12260                           ;	Chosen strategy is simple_byte
 12261  0182F0  0A01               	xorlw	1	; case 1
 12262  0182F2  B4D8               	btfsc	status,2,c
 12263  0182F4  D7F2               	goto	l1174
 12264  0182F6  0A03               	xorlw	3	; case 2
 12265  0182F8  B4D8               	btfsc	status,2,c
 12266  0182FA  D7F3               	goto	l1176
 12267  0182FC                     l1175:
 12268                           
 12269                           ;os.c: 240: T0CONbits.TMR0ON = 1;
 12270  0182FC  8ED5               	bsf	4053,7,c	;volatile
 12271                           
 12272                           ;os.c: 243: INTCONbits.TMR0IF = 0;
 12273  0182FE  94F2               	bcf	intcon,2,c	;volatile
 12274                           
 12275                           ;os.c: 244: INTCONbits.TMR0IE = 1;
 12276  018300  8AF2               	bsf	intcon,5,c	;volatile
 12277                           
 12278                           ;os.c: 245: INTCONbits.GIE = 1;
 12279  018302  8EF2               	bsf	intcon,7,c	;volatile
 12280                           
 12281                           ;os.c: 248: os.timeSlot = 0;
 12282  018304  0E00               	movlw	0
 12283  018306  0102               	movlb	2	; () banked
 12284  018308  6F08               	movwf	(_os+8)& (0+255),b	;volatile
 12285                           
 12286                           ; BSR set to: 2
 12287  01830A  0012               	return		;funcret
 12288  01830C                     __end_of__system_timer0_init:
 12289                           	opt stack 0
 12290                           tblptru	equ	0xFF8
 12291                           tblptrh	equ	0xFF7
 12292                           tblptrl	equ	0xFF6
 12293                           tablat	equ	0xFF5
 12294                           prodh	equ	0xFF4
 12295                           prodl	equ	0xFF3
 12296                           intcon	equ	0xFF2
 12297                           intcon3	equ	0xFF0
 12298                           postinc0	equ	0xFEE
 12299                           wreg	equ	0xFE8
 12300                           postdec1	equ	0xFE5
 12301                           plusw1	equ	0xFE3
 12302                           fsr1h	equ	0xFE2
 12303                           fsr1l	equ	0xFE1
 12304                           indf2	equ	0xFDF
 12305                           postinc2	equ	0xFDE
 12306                           postdec2	equ	0xFDD
 12307                           plusw2	equ	0xFDB
 12308                           fsr2h	equ	0xFDA
 12309                           fsr2l	equ	0xFD9
 12310                           status	equ	0xFD8
 12311                           
 12312 ;; *************** function __system_encoder_init *****************
 12313 ;; Defined at:
 12314 ;;		line 161 in file "os.c"
 12315 ;; Parameters:    Size  Location     Type
 12316 ;;		None
 12317 ;; Auto vars:     Size  Location     Type
 12318 ;;		None
 12319 ;; Return value:  Size  Location     Type
 12320 ;;                  1    wreg      void 
 12321 ;; Registers used:
 12322 ;;		wreg, status,2
 12323 ;; Tracked objects:
 12324 ;;		On entry : 0/0
 12325 ;;		On exit  : 0/0
 12326 ;;		Unchanged: 0/0
 12327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12332 ;;Total ram usage:        0 bytes
 12333 ;; Hardware stack levels used:    1
 12334 ;; Hardware stack levels required when called:   10
 12335 ;; This function calls:
 12336 ;;		Nothing
 12337 ;; This function is called by:
 12338 ;;		_system_init
 12339 ;; This function uses a non-reentrant model
 12340 ;;
 12341                           
 12342                           	psect	text47
 12343  01830C                     __ptext47:
 12344                           	opt stack 0
 12345  01830C                     __system_encoder_init:
 12346                           	opt stack 19
 12347                           
 12348                           ;os.c: 163: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 12349                           
 12350                           ; BSR set to: 2
 12351                           ;incstack = 0
 12352  01830C  0E55               	movlw	85
 12353  01830E  6EA7               	movwf	4007,c	;volsfr
 12354  018310  0EAA               	movlw	170
 12355  018312  6EA7               	movwf	4007,c	;volsfr
 12356  018314  010E               	movlb	14	; () banked
 12357  018316  91BF               	bcf	191,0,b	;volatile
 12358                           
 12359                           ;os.c: 164: RPINR1 = 0;
 12360  018318  0E00               	movlw	0
 12361  01831A  6FE1               	movwf	225,b	;volatile
 12362                           
 12363                           ;os.c: 165: RPINR3 = 9;
 12364  01831C  0E09               	movlw	9
 12365  01831E  6FE3               	movwf	227,b	;volatile
 12366                           
 12367                           ;os.c: 166: RPINR2 = 10;
 12368  018320  0E0A               	movlw	10
 12369  018322  6FE2               	movwf	226,b	;volatile
 12370                           
 12371                           ;os.c: 167: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
 12372  018324  0E55               	movlw	85
 12373  018326  6EA7               	movwf	4007,c	;volsfr
 12374  018328  0EAA               	movlw	170
 12375  01832A  6EA7               	movwf	4007,c	;volsfr
 12376                           
 12377                           ; BSR set to: 14
 12378  01832C  91BF               	bcf	191,0,b	;volatile
 12379                           
 12380                           ; BSR set to: 14
 12381                           ;os.c: 174: INTCON2bits.INTEDG1 = 0;
 12382  01832E  9AF1               	bcf	intcon2,5,c	;volatile
 12383                           
 12384                           ; BSR set to: 14
 12385                           ;os.c: 175: INTCON3bits.INT1IF = 0;
 12386  018330  90F0               	bcf	intcon3,0,c	;volatile
 12387                           
 12388                           ; BSR set to: 14
 12389                           ;os.c: 176: INTCON3bits.INT1IE = 1;
 12390  018332  86F0               	bsf	intcon3,3,c	;volatile
 12391                           
 12392                           ; BSR set to: 14
 12393                           ;os.c: 178: INTCON2bits.INTEDG2 = 1;
 12394  018334  88F1               	bsf	intcon2,4,c	;volatile
 12395                           
 12396                           ; BSR set to: 14
 12397                           ;os.c: 179: INTCON3bits.INT2IF = 0;
 12398  018336  92F0               	bcf	intcon3,1,c	;volatile
 12399                           
 12400                           ; BSR set to: 14
 12401                           ;os.c: 182: INTCON2bits.INTEDG3 = 1;
 12402  018338  86F1               	bsf	intcon2,3,c	;volatile
 12403                           
 12404                           ; BSR set to: 14
 12405                           ;os.c: 183: INTCON3bits.INT3IF = 0;
 12406  01833A  94F0               	bcf	intcon3,2,c	;volatile
 12407                           
 12408                           ; BSR set to: 14
 12409                           ;os.c: 186: INTCONbits.GIE = 1;
 12410  01833C  8EF2               	bsf	intcon,7,c	;volatile
 12411                           
 12412                           ;os.c: 188: os.encoderCount = 0;
 12413  01833E  0E00               	movlw	0
 12414  018340  0102               	movlb	2	; () banked
 12415  018342  6F06               	movwf	(_os+6)& (0+255),b	;volatile
 12416                           
 12417                           ;os.c: 189: os.buttonCount = 0;
 12418  018344  0E00               	movlw	0
 12419  018346  6F07               	movwf	(_os+7)& (0+255),b	;volatile
 12420                           
 12421                           ; BSR set to: 2
 12422  018348  0012               	return		;funcret
 12423  01834A                     __end_of__system_encoder_init:
 12424                           	opt stack 0
 12425                           tblptru	equ	0xFF8
 12426                           tblptrh	equ	0xFF7
 12427                           tblptrl	equ	0xFF6
 12428                           tablat	equ	0xFF5
 12429                           prodh	equ	0xFF4
 12430                           prodl	equ	0xFF3
 12431                           intcon	equ	0xFF2
 12432                           intcon2	equ	0xFF1
 12433                           intcon3	equ	0xFF0
 12434                           postinc0	equ	0xFEE
 12435                           wreg	equ	0xFE8
 12436                           postdec1	equ	0xFE5
 12437                           plusw1	equ	0xFE3
 12438                           fsr1h	equ	0xFE2
 12439                           fsr1l	equ	0xFE1
 12440                           indf2	equ	0xFDF
 12441                           postinc2	equ	0xFDE
 12442                           postdec2	equ	0xFDD
 12443                           plusw2	equ	0xFDB
 12444                           fsr2h	equ	0xFDA
 12445                           fsr2l	equ	0xFD9
 12446                           status	equ	0xFD8
 12447                           
 12448 ;; *************** function _system_calculate_output_voltage *****************
 12449 ;; Defined at:
 12450 ;;		line 588 in file "os.c"
 12451 ;; Parameters:    Size  Location     Type
 12452 ;;		None
 12453 ;; Auto vars:     Size  Location     Type
 12454 ;;  tmp             4   16[BANK0 ] long 
 12455 ;; Return value:  Size  Location     Type
 12456 ;;                  1    wreg      void 
 12457 ;; Registers used:
 12458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12459 ;; Tracked objects:
 12460 ;;		On entry : 0/0
 12461 ;;		On exit  : 0/0
 12462 ;;		Unchanged: 0/0
 12463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12465 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12466 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12467 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12468 ;;Total ram usage:        8 bytes
 12469 ;; Hardware stack levels used:    1
 12470 ;; Hardware stack levels required when called:   11
 12471 ;; This function calls:
 12472 ;;		___lmul
 12473 ;; This function is called by:
 12474 ;;		_main
 12475 ;; This function uses a non-reentrant model
 12476 ;;
 12477                           
 12478                           	psect	text48
 12479  014624                     __ptext48:
 12480                           	opt stack 0
 12481  014624                     _system_calculate_output_voltage:
 12482                           	opt stack 19
 12483                           
 12484                           ;os.c: 590: int32_t tmp = (int32_t) (os.output_voltage_adc[0] + os.output_voltage_adc[1]
      +                           + os.output_voltage_adc[2] + os.output_voltage_adc[3]);
 12485                           
 12486                           ; BSR set to: 2
 12487                           ;incstack = 0
 12488  014624  0102               	movlb	2	; () banked
 12489  014626  5121               	movf	(_os+33)& (0+255),w,b	;volatile
 12490  014628  251F               	addwf	(_os+31)& (0+255),w,b	;volatile
 12491  01462A  0100               	movlb	0	; () banked
 12492  01462C  6F6C               	movwf	??_system_calculate_output_voltage& (0+255),b
 12493  01462E  0102               	movlb	2	; () banked
 12494  014630  5122               	movf	(_os+34)& (0+255),w,b	;volatile
 12495  014632  2120               	addwfc	(_os+32)& (0+255),w,b	;volatile
 12496  014634  0100               	movlb	0	; () banked
 12497  014636  6F6D               	movwf	(??_system_calculate_output_voltage+1)& (0+255),b
 12498  014638  0102               	movlb	2	; () banked
 12499  01463A  5123               	movf	(_os+35)& (0+255),w,b	;volatile
 12500  01463C  0100               	movlb	0	; () banked
 12501  01463E  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 12502  014640  0102               	movlb	2	; () banked
 12503  014642  5124               	movf	(_os+36)& (0+255),w,b	;volatile
 12504  014644  0100               	movlb	0	; () banked
 12505  014646  236D               	addwfc	(??_system_calculate_output_voltage+1)& (0+255),f,b
 12506  014648  0102               	movlb	2	; () banked
 12507  01464A  5125               	movf	(_os+37)& (0+255),w,b	;volatile
 12508  01464C  0100               	movlb	0	; () banked
 12509  01464E  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 12510  014650  0102               	movlb	2	; () banked
 12511  014652  5126               	movf	(_os+38)& (0+255),w,b	;volatile
 12512  014654  0100               	movlb	0	; () banked
 12513  014656  236D               	addwfc	(??_system_calculate_output_voltage+1)& (0+255),f,b
 12514  014658  C06C  F070         	movff	??_system_calculate_output_voltage,system_calculate_output_voltage@tmp
 12515  01465C  C06D  F071         	movff	??_system_calculate_output_voltage+1,system_calculate_output_voltage@tmp+1
 12516  014660  0E00               	movlw	0
 12517  014662  BF71               	btfsc	(system_calculate_output_voltage@tmp+1)& (0+255),7,b
 12518  014664  0EFF               	movlw	-1
 12519  014666  6F72               	movwf	(system_calculate_output_voltage@tmp+2)& (0+255),b
 12520  014668  6F73               	movwf	(system_calculate_output_voltage@tmp+3)& (0+255),b
 12521                           
 12522                           ;os.c: 591: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Offset;
 12523  01466A  C329  F06C         	movff	_calibrationParameters+17,??_system_calculate_output_voltage
 12524  01466E  C32A  F06D         	movff	_calibrationParameters+18,??_system_calculate_output_voltage+1
 12525  014672  0E00               	movlw	0
 12526  014674  BF6D               	btfsc	(??_system_calculate_output_voltage+1)& (0+255),7,b
 12527  014676  0EFF               	movlw	255
 12528  014678  6F6E               	movwf	(??_system_calculate_output_voltage+2)& (0+255),b
 12529  01467A  6F6F               	movwf	(??_system_calculate_output_voltage+3)& (0+255),b
 12530  01467C  516C               	movf	??_system_calculate_output_voltage& (0+255),w,b
 12531  01467E  2770               	addwf	system_calculate_output_voltage@tmp& (0+255),f,b
 12532  014680  516D               	movf	(??_system_calculate_output_voltage+1)& (0+255),w,b
 12533  014682  2371               	addwfc	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 12534  014684  516E               	movf	(??_system_calculate_output_voltage+2)& (0+255),w,b
 12535  014686  2372               	addwfc	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 12536  014688  516F               	movf	(??_system_calculate_output_voltage+3)& (0+255),w,b
 12537  01468A  2373               	addwfc	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 12538                           
 12539                           ; BSR set to: 0
 12540                           ;os.c: 592: tmp *= calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Multiplier;
 12541  01468C  C070  F060         	movff	system_calculate_output_voltage@tmp,___lmul@multiplier
 12542  014690  C071  F061         	movff	system_calculate_output_voltage@tmp+1,___lmul@multiplier+1
 12543  014694  C072  F062         	movff	system_calculate_output_voltage@tmp+2,___lmul@multiplier+2
 12544  014698  C073  F063         	movff	system_calculate_output_voltage@tmp+3,___lmul@multiplier+3
 12545  01469C  EE23  F02B         	lfsr	2,_calibrationParameters+19
 12546  0146A0  CFDE F064          	movff	postinc2,___lmul@multiplicand
 12547  0146A4  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 12548  0146A8  0E00               	movlw	0
 12549  0146AA  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 12550  0146AC  0EFF               	movlw	-1
 12551  0146AE  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12552  0146B0  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12553  0146B2  ECEB  F0BC         	call	___lmul	;wreg free
 12554  0146B6  C060  F070         	movff	?___lmul,system_calculate_output_voltage@tmp
 12555  0146BA  C061  F071         	movff	?___lmul+1,system_calculate_output_voltage@tmp+1
 12556  0146BE  C062  F072         	movff	?___lmul+2,system_calculate_output_voltage@tmp+2
 12557  0146C2  C063  F073         	movff	?___lmul+3,system_calculate_output_voltage@tmp+3
 12558                           
 12559                           ;os.c: 593: tmp >>= calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLTAGE].Shift - 1;
 12560  0146C6  C32D  F06C         	movff	_calibrationParameters+21,??_system_calculate_output_voltage
 12561  0146CA  0EFF               	movlw	-1
 12562  0146CC  0100               	movlb	0	; () banked
 12563  0146CE  276C               	addwf	??_system_calculate_output_voltage& (0+255),f,b
 12564  0146D0  296C               	incf	??_system_calculate_output_voltage& (0+255),w,b
 12565  0146D2  6F6D               	movwf	(??_system_calculate_output_voltage+1)& (0+255),b
 12566  0146D4  D005               	goto	u27390
 12567  0146D6                     u27395:
 12568  0146D6  3573               	rlcf	(system_calculate_output_voltage@tmp+3)& (0+255),w,b
 12569  0146D8  3373               	rrcf	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 12570  0146DA  3372               	rrcf	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 12571  0146DC  3371               	rrcf	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 12572  0146DE  3370               	rrcf	system_calculate_output_voltage@tmp& (0+255),f,b
 12573  0146E0                     u27390:
 12574  0146E0  2F6D               	decfsz	(??_system_calculate_output_voltage+1)& (0+255),f,b
 12575  0146E2  D7F9               	goto	u27395
 12576                           
 12577                           ;os.c: 594: tmp += 1;
 12578  0146E4  0E01               	movlw	1
 12579  0146E6  0100               	movlb	0	; () banked
 12580  0146E8  2770               	addwf	system_calculate_output_voltage@tmp& (0+255),f,b
 12581  0146EA  0E00               	movlw	0
 12582  0146EC  2371               	addwfc	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 12583  0146EE  2372               	addwfc	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 12584  0146F0  2373               	addwfc	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 12585                           
 12586                           ; BSR set to: 0
 12587                           ;os.c: 595: tmp >>= 1;
 12588  0146F2  3573               	rlcf	(system_calculate_output_voltage@tmp+3)& (0+255),w,b
 12589  0146F4  3373               	rrcf	(system_calculate_output_voltage@tmp+3)& (0+255),f,b
 12590  0146F6  3372               	rrcf	(system_calculate_output_voltage@tmp+2)& (0+255),f,b
 12591  0146F8  3371               	rrcf	(system_calculate_output_voltage@tmp+1)& (0+255),f,b
 12592  0146FA  3370               	rrcf	system_calculate_output_voltage@tmp& (0+255),f,b
 12593                           
 12594                           ; BSR set to: 0
 12595                           ;os.c: 596: os.output_voltage = (int16_t) tmp;
 12596  0146FC  C070  F227         	movff	system_calculate_output_voltage@tmp,_os+39	;volatile
 12597  014700  C071  F228         	movff	system_calculate_output_voltage@tmp+1,_os+40	;volatile
 12598                           
 12599                           ; BSR set to: 0
 12600  014704  0012               	return		;funcret
 12601  014706                     __end_of_system_calculate_output_voltage:
 12602                           	opt stack 0
 12603                           tblptru	equ	0xFF8
 12604                           tblptrh	equ	0xFF7
 12605                           tblptrl	equ	0xFF6
 12606                           tablat	equ	0xFF5
 12607                           prodh	equ	0xFF4
 12608                           prodl	equ	0xFF3
 12609                           intcon	equ	0xFF2
 12610                           intcon2	equ	0xFF1
 12611                           intcon3	equ	0xFF0
 12612                           postinc0	equ	0xFEE
 12613                           wreg	equ	0xFE8
 12614                           postdec1	equ	0xFE5
 12615                           plusw1	equ	0xFE3
 12616                           fsr1h	equ	0xFE2
 12617                           fsr1l	equ	0xFE1
 12618                           indf2	equ	0xFDF
 12619                           postinc2	equ	0xFDE
 12620                           postdec2	equ	0xFDD
 12621                           plusw2	equ	0xFDB
 12622                           fsr2h	equ	0xFDA
 12623                           fsr2l	equ	0xFD9
 12624                           status	equ	0xFD8
 12625                           
 12626 ;; *************** function _system_calculate_output_current *****************
 12627 ;; Defined at:
 12628 ;;		line 626 in file "os.c"
 12629 ;; Parameters:    Size  Location     Type
 12630 ;;		None
 12631 ;; Auto vars:     Size  Location     Type
 12632 ;;  tmp             4   16[BANK0 ] long 
 12633 ;; Return value:  Size  Location     Type
 12634 ;;                  1    wreg      void 
 12635 ;; Registers used:
 12636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12637 ;; Tracked objects:
 12638 ;;		On entry : 0/0
 12639 ;;		On exit  : 0/0
 12640 ;;		Unchanged: 0/0
 12641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12643 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12644 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12645 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12646 ;;Total ram usage:        8 bytes
 12647 ;; Hardware stack levels used:    1
 12648 ;; Hardware stack levels required when called:   11
 12649 ;; This function calls:
 12650 ;;		___lmul
 12651 ;;		_buck_get_mode
 12652 ;; This function is called by:
 12653 ;;		_main
 12654 ;; This function uses a non-reentrant model
 12655 ;;
 12656                           
 12657                           	psect	text49
 12658  012CFC                     __ptext49:
 12659                           	opt stack 0
 12660  012CFC                     _system_calculate_output_current:
 12661                           	opt stack 19
 12662                           
 12663                           ;os.c: 628: int32_t tmp;;os.c: 630: if((buck_get_mode()==BUCK_STATUS_OFF) || (buck_get_m
      +                          ode()==BUCK_STATUS_REMOTE_OFF))
 12664                           
 12665                           ; BSR set to: 0
 12666                           ;incstack = 0
 12667  012CFC  EC8C  F0C8         	call	_buck_get_mode	;wreg free
 12668  012D00  0900               	iorlw	0
 12669  012D02  B4D8               	btfsc	status,2,c
 12670  012D04  D005               	goto	u27430
 12671  012D06  EC8C  F0C8         	call	_buck_get_mode	;wreg free
 12672  012D0A  0A80               	xorlw	128
 12673  012D0C  A4D8               	btfss	status,2,c
 12674  012D0E  D006               	goto	l1240
 12675  012D10                     u27430:
 12676                           
 12677                           ;os.c: 631: {;os.c: 632: os.output_current = 0;
 12678  012D10  0E00               	movlw	0
 12679  012D12  0102               	movlb	2	; () banked
 12680  012D14  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 12681  012D16  0E00               	movlw	0
 12682  012D18  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 12683                           
 12684                           ;os.c: 633: }
 12685  012D1A  0012               	return	
 12686  012D1C                     l1240:
 12687                           
 12688                           ;os.c: 634: else;os.c: 635: {;os.c: 636: tmp = (int32_t) (os.output_current_adc[0] + os.
      +                          output_current_adc[1] + os.output_current_adc[2] + os.output_current_adc[3]);
 12689                           
 12690                           ; BSR set to: 2
 12691  012D1C  0102               	movlb	2	; () banked
 12692  012D1E  512B               	movf	(_os+43)& (0+255),w,b	;volatile
 12693  012D20  2529               	addwf	(_os+41)& (0+255),w,b	;volatile
 12694  012D22  0100               	movlb	0	; () banked
 12695  012D24  6F6C               	movwf	??_system_calculate_output_current& (0+255),b
 12696  012D26  0102               	movlb	2	; () banked
 12697  012D28  512C               	movf	(_os+44)& (0+255),w,b	;volatile
 12698  012D2A  212A               	addwfc	(_os+42)& (0+255),w,b	;volatile
 12699  012D2C  0100               	movlb	0	; () banked
 12700  012D2E  6F6D               	movwf	(??_system_calculate_output_current+1)& (0+255),b
 12701  012D30  0102               	movlb	2	; () banked
 12702  012D32  512D               	movf	(_os+45)& (0+255),w,b	;volatile
 12703  012D34  0100               	movlb	0	; () banked
 12704  012D36  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 12705  012D38  0102               	movlb	2	; () banked
 12706  012D3A  512E               	movf	(_os+46)& (0+255),w,b	;volatile
 12707  012D3C  0100               	movlb	0	; () banked
 12708  012D3E  236D               	addwfc	(??_system_calculate_output_current+1)& (0+255),f,b
 12709  012D40  0102               	movlb	2	; () banked
 12710  012D42  512F               	movf	(_os+47)& (0+255),w,b	;volatile
 12711  012D44  0100               	movlb	0	; () banked
 12712  012D46  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 12713  012D48  0102               	movlb	2	; () banked
 12714  012D4A  5130               	movf	(_os+48)& (0+255),w,b	;volatile
 12715  012D4C  0100               	movlb	0	; () banked
 12716  012D4E  236D               	addwfc	(??_system_calculate_output_current+1)& (0+255),f,b
 12717  012D50  C06C  F070         	movff	??_system_calculate_output_current,system_calculate_output_current@tmp
 12718  012D54  C06D  F071         	movff	??_system_calculate_output_current+1,system_calculate_output_current@tmp+1
 12719  012D58  0E00               	movlw	0
 12720  012D5A  BF71               	btfsc	(system_calculate_output_current@tmp+1)& (0+255),7,b
 12721  012D5C  0EFF               	movlw	-1
 12722  012D5E  6F72               	movwf	(system_calculate_output_current@tmp+2)& (0+255),b
 12723  012D60  6F73               	movwf	(system_calculate_output_current@tmp+3)& (0+255),b
 12724                           
 12725                           ;os.c: 637: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibrati
      +                          on;
 12726  012D62  C346  F06C         	movff	_calibrationParameters+46,??_system_calculate_output_current
 12727  012D66  C347  F06D         	movff	_calibrationParameters+47,??_system_calculate_output_current+1
 12728  012D6A  0E00               	movlw	0
 12729  012D6C  BF6D               	btfsc	(??_system_calculate_output_current+1)& (0+255),7,b
 12730  012D6E  0EFF               	movlw	255
 12731  012D70  6F6E               	movwf	(??_system_calculate_output_current+2)& (0+255),b
 12732  012D72  6F6F               	movwf	(??_system_calculate_output_current+3)& (0+255),b
 12733  012D74  516C               	movf	??_system_calculate_output_current& (0+255),w,b
 12734  012D76  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 12735  012D78  516D               	movf	(??_system_calculate_output_current+1)& (0+255),w,b
 12736  012D7A  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 12737  012D7C  516E               	movf	(??_system_calculate_output_current+2)& (0+255),w,b
 12738  012D7E  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 12739  012D80  516F               	movf	(??_system_calculate_output_current+3)& (0+255),w,b
 12740  012D82  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 12741                           
 12742                           ;os.c: 638: tmp += calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Offset;
 12743  012D84  C341  F06C         	movff	_calibrationParameters+41,??_system_calculate_output_current
 12744  012D88  C342  F06D         	movff	_calibrationParameters+42,??_system_calculate_output_current+1
 12745  012D8C  0E00               	movlw	0
 12746  012D8E  BF6D               	btfsc	(??_system_calculate_output_current+1)& (0+255),7,b
 12747  012D90  0EFF               	movlw	255
 12748  012D92  6F6E               	movwf	(??_system_calculate_output_current+2)& (0+255),b
 12749  012D94  6F6F               	movwf	(??_system_calculate_output_current+3)& (0+255),b
 12750  012D96  516C               	movf	??_system_calculate_output_current& (0+255),w,b
 12751  012D98  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 12752  012D9A  516D               	movf	(??_system_calculate_output_current+1)& (0+255),w,b
 12753  012D9C  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 12754  012D9E  516E               	movf	(??_system_calculate_output_current+2)& (0+255),w,b
 12755  012DA0  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 12756  012DA2  516F               	movf	(??_system_calculate_output_current+3)& (0+255),w,b
 12757  012DA4  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 12758                           
 12759                           ; BSR set to: 0
 12760                           ;os.c: 639: tmp *= calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Multiplier;
 12761  012DA6  C070  F060         	movff	system_calculate_output_current@tmp,___lmul@multiplier
 12762  012DAA  C071  F061         	movff	system_calculate_output_current@tmp+1,___lmul@multiplier+1
 12763  012DAE  C072  F062         	movff	system_calculate_output_current@tmp+2,___lmul@multiplier+2
 12764  012DB2  C073  F063         	movff	system_calculate_output_current@tmp+3,___lmul@multiplier+3
 12765  012DB6  EE23  F043         	lfsr	2,_calibrationParameters+43
 12766  012DBA  CFDE F064          	movff	postinc2,___lmul@multiplicand
 12767  012DBE  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 12768  012DC2  0E00               	movlw	0
 12769  012DC4  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 12770  012DC6  0EFF               	movlw	-1
 12771  012DC8  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12772  012DCA  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12773  012DCC  ECEB  F0BC         	call	___lmul	;wreg free
 12774  012DD0  C060  F070         	movff	?___lmul,system_calculate_output_current@tmp
 12775  012DD4  C061  F071         	movff	?___lmul+1,system_calculate_output_current@tmp+1
 12776  012DD8  C062  F072         	movff	?___lmul+2,system_calculate_output_current@tmp+2
 12777  012DDC  C063  F073         	movff	?___lmul+3,system_calculate_output_current@tmp+3
 12778                           
 12779                           ;os.c: 640: tmp >>= calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].Shift - 1;
 12780  012DE0  C345  F06C         	movff	_calibrationParameters+45,??_system_calculate_output_current
 12781  012DE4  0EFF               	movlw	-1
 12782  012DE6  0100               	movlb	0	; () banked
 12783  012DE8  276C               	addwf	??_system_calculate_output_current& (0+255),f,b
 12784  012DEA  296C               	incf	??_system_calculate_output_current& (0+255),w,b
 12785  012DEC  6F6D               	movwf	(??_system_calculate_output_current+1)& (0+255),b
 12786  012DEE  D005               	goto	u27440
 12787  012DF0                     u27445:
 12788  012DF0  3573               	rlcf	(system_calculate_output_current@tmp+3)& (0+255),w,b
 12789  012DF2  3373               	rrcf	(system_calculate_output_current@tmp+3)& (0+255),f,b
 12790  012DF4  3372               	rrcf	(system_calculate_output_current@tmp+2)& (0+255),f,b
 12791  012DF6  3371               	rrcf	(system_calculate_output_current@tmp+1)& (0+255),f,b
 12792  012DF8  3370               	rrcf	system_calculate_output_current@tmp& (0+255),f,b
 12793  012DFA                     u27440:
 12794  012DFA  2F6D               	decfsz	(??_system_calculate_output_current+1)& (0+255),f,b
 12795  012DFC  D7F9               	goto	u27445
 12796                           
 12797                           ;os.c: 641: tmp += 1;
 12798  012DFE  0E01               	movlw	1
 12799  012E00  0100               	movlb	0	; () banked
 12800  012E02  2770               	addwf	system_calculate_output_current@tmp& (0+255),f,b
 12801  012E04  0E00               	movlw	0
 12802  012E06  2371               	addwfc	(system_calculate_output_current@tmp+1)& (0+255),f,b
 12803  012E08  2372               	addwfc	(system_calculate_output_current@tmp+2)& (0+255),f,b
 12804  012E0A  2373               	addwfc	(system_calculate_output_current@tmp+3)& (0+255),f,b
 12805                           
 12806                           ; BSR set to: 0
 12807                           ;os.c: 642: tmp >>= 1;
 12808  012E0C  3573               	rlcf	(system_calculate_output_current@tmp+3)& (0+255),w,b
 12809  012E0E  3373               	rrcf	(system_calculate_output_current@tmp+3)& (0+255),f,b
 12810  012E10  3372               	rrcf	(system_calculate_output_current@tmp+2)& (0+255),f,b
 12811  012E12  3371               	rrcf	(system_calculate_output_current@tmp+1)& (0+255),f,b
 12812  012E14  3370               	rrcf	system_calculate_output_current@tmp& (0+255),f,b
 12813                           
 12814                           ; BSR set to: 0
 12815                           ;os.c: 643: os.output_current = (int16_t) tmp;
 12816  012E16  C070  F232         	movff	system_calculate_output_current@tmp,_os+50	;volatile
 12817  012E1A  C071  F233         	movff	system_calculate_output_current@tmp+1,_os+51	;volatile
 12818  012E1E  0012               	return	
 12819  012E20                     __end_of_system_calculate_output_current:
 12820                           	opt stack 0
 12821                           tblptru	equ	0xFF8
 12822                           tblptrh	equ	0xFF7
 12823                           tblptrl	equ	0xFF6
 12824                           tablat	equ	0xFF5
 12825                           prodh	equ	0xFF4
 12826                           prodl	equ	0xFF3
 12827                           intcon	equ	0xFF2
 12828                           intcon2	equ	0xFF1
 12829                           intcon3	equ	0xFF0
 12830                           postinc0	equ	0xFEE
 12831                           wreg	equ	0xFE8
 12832                           postdec1	equ	0xFE5
 12833                           plusw1	equ	0xFE3
 12834                           fsr1h	equ	0xFE2
 12835                           fsr1l	equ	0xFE1
 12836                           indf2	equ	0xFDF
 12837                           postinc2	equ	0xFDE
 12838                           postdec2	equ	0xFDD
 12839                           plusw2	equ	0xFDB
 12840                           fsr2h	equ	0xFDA
 12841                           fsr2l	equ	0xFD9
 12842                           status	equ	0xFD8
 12843                           
 12844 ;; *************** function _system_calculate_input_voltage *****************
 12845 ;; Defined at:
 12846 ;;		line 571 in file "os.c"
 12847 ;; Parameters:    Size  Location     Type
 12848 ;;		None
 12849 ;; Auto vars:     Size  Location     Type
 12850 ;;  tmp             4   16[BANK0 ] long 
 12851 ;; Return value:  Size  Location     Type
 12852 ;;                  1    wreg      void 
 12853 ;; Registers used:
 12854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12855 ;; Tracked objects:
 12856 ;;		On entry : 0/0
 12857 ;;		On exit  : 0/0
 12858 ;;		Unchanged: 0/0
 12859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12861 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12862 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12863 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12864 ;;Total ram usage:        8 bytes
 12865 ;; Hardware stack levels used:    1
 12866 ;; Hardware stack levels required when called:   11
 12867 ;; This function calls:
 12868 ;;		___lmul
 12869 ;; This function is called by:
 12870 ;;		_main
 12871 ;; This function uses a non-reentrant model
 12872 ;;
 12873                           
 12874                           	psect	text50
 12875  014706                     __ptext50:
 12876                           	opt stack 0
 12877  014706                     _system_calculate_input_voltage:
 12878                           	opt stack 19
 12879                           
 12880                           ;os.c: 573: int32_t tmp = (int32_t) (os.input_voltage_adc[0] + os.input_voltage_adc[1] +
      +                           os.input_voltage_adc[2] + os.input_voltage_adc[3]);
 12881                           
 12882                           ;incstack = 0
 12883  014706  0102               	movlb	2	; () banked
 12884  014708  510C               	movf	(_os+12)& (0+255),w,b	;volatile
 12885  01470A  250A               	addwf	(_os+10)& (0+255),w,b	;volatile
 12886  01470C  0100               	movlb	0	; () banked
 12887  01470E  6F6C               	movwf	??_system_calculate_input_voltage& (0+255),b
 12888  014710  0102               	movlb	2	; () banked
 12889  014712  510D               	movf	(_os+13)& (0+255),w,b	;volatile
 12890  014714  210B               	addwfc	(_os+11)& (0+255),w,b	;volatile
 12891  014716  0100               	movlb	0	; () banked
 12892  014718  6F6D               	movwf	(??_system_calculate_input_voltage+1)& (0+255),b
 12893  01471A  0102               	movlb	2	; () banked
 12894  01471C  510E               	movf	(_os+14)& (0+255),w,b	;volatile
 12895  01471E  0100               	movlb	0	; () banked
 12896  014720  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 12897  014722  0102               	movlb	2	; () banked
 12898  014724  510F               	movf	(_os+15)& (0+255),w,b	;volatile
 12899  014726  0100               	movlb	0	; () banked
 12900  014728  236D               	addwfc	(??_system_calculate_input_voltage+1)& (0+255),f,b
 12901  01472A  0102               	movlb	2	; () banked
 12902  01472C  5110               	movf	(_os+16)& (0+255),w,b	;volatile
 12903  01472E  0100               	movlb	0	; () banked
 12904  014730  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 12905  014732  0102               	movlb	2	; () banked
 12906  014734  5111               	movf	(_os+17)& (0+255),w,b	;volatile
 12907  014736  0100               	movlb	0	; () banked
 12908  014738  236D               	addwfc	(??_system_calculate_input_voltage+1)& (0+255),f,b
 12909  01473A  C06C  F070         	movff	??_system_calculate_input_voltage,system_calculate_input_voltage@tmp
 12910  01473E  C06D  F071         	movff	??_system_calculate_input_voltage+1,system_calculate_input_voltage@tmp+1
 12911  014742  0E00               	movlw	0
 12912  014744  BF71               	btfsc	(system_calculate_input_voltage@tmp+1)& (0+255),7,b
 12913  014746  0EFF               	movlw	-1
 12914  014748  6F72               	movwf	(system_calculate_input_voltage@tmp+2)& (0+255),b
 12915  01474A  6F73               	movwf	(system_calculate_input_voltage@tmp+3)& (0+255),b
 12916                           
 12917                           ;os.c: 574: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Offset;
 12918  01474C  C31D  F06C         	movff	_calibrationParameters+5,??_system_calculate_input_voltage
 12919  014750  C31E  F06D         	movff	_calibrationParameters+6,??_system_calculate_input_voltage+1
 12920  014754  0E00               	movlw	0
 12921  014756  BF6D               	btfsc	(??_system_calculate_input_voltage+1)& (0+255),7,b
 12922  014758  0EFF               	movlw	255
 12923  01475A  6F6E               	movwf	(??_system_calculate_input_voltage+2)& (0+255),b
 12924  01475C  6F6F               	movwf	(??_system_calculate_input_voltage+3)& (0+255),b
 12925  01475E  516C               	movf	??_system_calculate_input_voltage& (0+255),w,b
 12926  014760  2770               	addwf	system_calculate_input_voltage@tmp& (0+255),f,b
 12927  014762  516D               	movf	(??_system_calculate_input_voltage+1)& (0+255),w,b
 12928  014764  2371               	addwfc	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12929  014766  516E               	movf	(??_system_calculate_input_voltage+2)& (0+255),w,b
 12930  014768  2372               	addwfc	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12931  01476A  516F               	movf	(??_system_calculate_input_voltage+3)& (0+255),w,b
 12932  01476C  2373               	addwfc	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12933                           
 12934                           ; BSR set to: 0
 12935                           ;os.c: 575: tmp *= calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Multiplier;
 12936  01476E  C070  F060         	movff	system_calculate_input_voltage@tmp,___lmul@multiplier
 12937  014772  C071  F061         	movff	system_calculate_input_voltage@tmp+1,___lmul@multiplier+1
 12938  014776  C072  F062         	movff	system_calculate_input_voltage@tmp+2,___lmul@multiplier+2
 12939  01477A  C073  F063         	movff	system_calculate_input_voltage@tmp+3,___lmul@multiplier+3
 12940  01477E  EE23  F01F         	lfsr	2,_calibrationParameters+7
 12941  014782  CFDE F064          	movff	postinc2,___lmul@multiplicand
 12942  014786  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 12943  01478A  0E00               	movlw	0
 12944  01478C  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 12945  01478E  0EFF               	movlw	-1
 12946  014790  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12947  014792  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12948  014794  ECEB  F0BC         	call	___lmul	;wreg free
 12949  014798  C060  F070         	movff	?___lmul,system_calculate_input_voltage@tmp
 12950  01479C  C061  F071         	movff	?___lmul+1,system_calculate_input_voltage@tmp+1
 12951  0147A0  C062  F072         	movff	?___lmul+2,system_calculate_input_voltage@tmp+2
 12952  0147A4  C063  F073         	movff	?___lmul+3,system_calculate_input_voltage@tmp+3
 12953                           
 12954                           ;os.c: 576: tmp >>= calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAGE].Shift - 1;
 12955  0147A8  C321  F06C         	movff	_calibrationParameters+9,??_system_calculate_input_voltage
 12956  0147AC  0EFF               	movlw	-1
 12957  0147AE  0100               	movlb	0	; () banked
 12958  0147B0  276C               	addwf	??_system_calculate_input_voltage& (0+255),f,b
 12959  0147B2  296C               	incf	??_system_calculate_input_voltage& (0+255),w,b
 12960  0147B4  6F6D               	movwf	(??_system_calculate_input_voltage+1)& (0+255),b
 12961  0147B6  D005               	goto	u27410
 12962  0147B8                     u27415:
 12963  0147B8  3573               	rlcf	(system_calculate_input_voltage@tmp+3)& (0+255),w,b
 12964  0147BA  3373               	rrcf	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12965  0147BC  3372               	rrcf	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12966  0147BE  3371               	rrcf	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12967  0147C0  3370               	rrcf	system_calculate_input_voltage@tmp& (0+255),f,b
 12968  0147C2                     u27410:
 12969  0147C2  2F6D               	decfsz	(??_system_calculate_input_voltage+1)& (0+255),f,b
 12970  0147C4  D7F9               	goto	u27415
 12971                           
 12972                           ;os.c: 577: tmp += 1;
 12973  0147C6  0E01               	movlw	1
 12974  0147C8  0100               	movlb	0	; () banked
 12975  0147CA  2770               	addwf	system_calculate_input_voltage@tmp& (0+255),f,b
 12976  0147CC  0E00               	movlw	0
 12977  0147CE  2371               	addwfc	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12978  0147D0  2372               	addwfc	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12979  0147D2  2373               	addwfc	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12980                           
 12981                           ; BSR set to: 0
 12982                           ;os.c: 578: tmp >>= 1;
 12983  0147D4  3573               	rlcf	(system_calculate_input_voltage@tmp+3)& (0+255),w,b
 12984  0147D6  3373               	rrcf	(system_calculate_input_voltage@tmp+3)& (0+255),f,b
 12985  0147D8  3372               	rrcf	(system_calculate_input_voltage@tmp+2)& (0+255),f,b
 12986  0147DA  3371               	rrcf	(system_calculate_input_voltage@tmp+1)& (0+255),f,b
 12987  0147DC  3370               	rrcf	system_calculate_input_voltage@tmp& (0+255),f,b
 12988                           
 12989                           ; BSR set to: 0
 12990                           ;os.c: 579: os.input_voltage = (int16_t) tmp;
 12991  0147DE  C070  F212         	movff	system_calculate_input_voltage@tmp,_os+18	;volatile
 12992  0147E2  C071  F213         	movff	system_calculate_input_voltage@tmp+1,_os+19	;volatile
 12993                           
 12994                           ; BSR set to: 0
 12995  0147E6  0012               	return		;funcret
 12996  0147E8                     __end_of_system_calculate_input_voltage:
 12997                           	opt stack 0
 12998                           tblptru	equ	0xFF8
 12999                           tblptrh	equ	0xFF7
 13000                           tblptrl	equ	0xFF6
 13001                           tablat	equ	0xFF5
 13002                           prodh	equ	0xFF4
 13003                           prodl	equ	0xFF3
 13004                           intcon	equ	0xFF2
 13005                           intcon2	equ	0xFF1
 13006                           intcon3	equ	0xFF0
 13007                           postinc0	equ	0xFEE
 13008                           wreg	equ	0xFE8
 13009                           postdec1	equ	0xFE5
 13010                           plusw1	equ	0xFE3
 13011                           fsr1h	equ	0xFE2
 13012                           fsr1l	equ	0xFE1
 13013                           indf2	equ	0xFDF
 13014                           postinc2	equ	0xFDE
 13015                           postdec2	equ	0xFDD
 13016                           plusw2	equ	0xFDB
 13017                           fsr2h	equ	0xFDA
 13018                           fsr2l	equ	0xFD9
 13019                           status	equ	0xFD8
 13020                           
 13021 ;; *************** function _system_calculate_input_current *****************
 13022 ;; Defined at:
 13023 ;;		line 605 in file "os.c"
 13024 ;; Parameters:    Size  Location     Type
 13025 ;;		None
 13026 ;; Auto vars:     Size  Location     Type
 13027 ;;  tmp             4   16[BANK0 ] long 
 13028 ;; Return value:  Size  Location     Type
 13029 ;;                  1    wreg      void 
 13030 ;; Registers used:
 13031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13032 ;; Tracked objects:
 13033 ;;		On entry : 0/0
 13034 ;;		On exit  : 0/0
 13035 ;;		Unchanged: 0/0
 13036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13038 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13039 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13040 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13041 ;;Total ram usage:        8 bytes
 13042 ;; Hardware stack levels used:    1
 13043 ;; Hardware stack levels required when called:   11
 13044 ;; This function calls:
 13045 ;;		___lmul
 13046 ;;		_buck_get_mode
 13047 ;; This function is called by:
 13048 ;;		_main
 13049 ;; This function uses a non-reentrant model
 13050 ;;
 13051                           
 13052                           	psect	text51
 13053  012E20                     __ptext51:
 13054                           	opt stack 0
 13055  012E20                     _system_calculate_input_current:
 13056                           	opt stack 19
 13057                           
 13058                           ;os.c: 607: int32_t tmp;;os.c: 609: if((buck_get_mode()==BUCK_STATUS_OFF) || (buck_get_m
      +                          ode()==BUCK_STATUS_REMOTE_OFF))
 13059                           
 13060                           ; BSR set to: 0
 13061                           ;incstack = 0
 13062  012E20  EC8C  F0C8         	call	_buck_get_mode	;wreg free
 13063  012E24  0900               	iorlw	0
 13064  012E26  B4D8               	btfsc	status,2,c
 13065  012E28  D005               	goto	u27550
 13066  012E2A  EC8C  F0C8         	call	_buck_get_mode	;wreg free
 13067  012E2E  0A80               	xorlw	128
 13068  012E30  A4D8               	btfss	status,2,c
 13069  012E32  D006               	goto	l1233
 13070  012E34                     u27550:
 13071                           
 13072                           ;os.c: 610: {;os.c: 611: os.input_current = 0;
 13073  012E34  0E00               	movlw	0
 13074  012E36  0102               	movlb	2	; () banked
 13075  012E38  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 13076  012E3A  0E00               	movlw	0
 13077  012E3C  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 13078                           
 13079                           ;os.c: 612: }
 13080  012E3E  0012               	return	
 13081  012E40                     l1233:
 13082                           
 13083                           ;os.c: 613: else;os.c: 614: {;os.c: 615: tmp = (int32_t) (os.input_current_adc[0] + os.i
      +                          nput_current_adc[1] + os.input_current_adc[2] + os.input_current_adc[3]);
 13084                           
 13085                           ; BSR set to: 2
 13086  012E40  0102               	movlb	2	; () banked
 13087  012E42  5116               	movf	(_os+22)& (0+255),w,b	;volatile
 13088  012E44  2514               	addwf	(_os+20)& (0+255),w,b	;volatile
 13089  012E46  0100               	movlb	0	; () banked
 13090  012E48  6F6C               	movwf	??_system_calculate_input_current& (0+255),b
 13091  012E4A  0102               	movlb	2	; () banked
 13092  012E4C  5117               	movf	(_os+23)& (0+255),w,b	;volatile
 13093  012E4E  2115               	addwfc	(_os+21)& (0+255),w,b	;volatile
 13094  012E50  0100               	movlb	0	; () banked
 13095  012E52  6F6D               	movwf	(??_system_calculate_input_current+1)& (0+255),b
 13096  012E54  0102               	movlb	2	; () banked
 13097  012E56  5118               	movf	(_os+24)& (0+255),w,b	;volatile
 13098  012E58  0100               	movlb	0	; () banked
 13099  012E5A  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 13100  012E5C  0102               	movlb	2	; () banked
 13101  012E5E  5119               	movf	(_os+25)& (0+255),w,b	;volatile
 13102  012E60  0100               	movlb	0	; () banked
 13103  012E62  236D               	addwfc	(??_system_calculate_input_current+1)& (0+255),f,b
 13104  012E64  0102               	movlb	2	; () banked
 13105  012E66  511A               	movf	(_os+26)& (0+255),w,b	;volatile
 13106  012E68  0100               	movlb	0	; () banked
 13107  012E6A  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 13108  012E6C  0102               	movlb	2	; () banked
 13109  012E6E  511B               	movf	(_os+27)& (0+255),w,b	;volatile
 13110  012E70  0100               	movlb	0	; () banked
 13111  012E72  236D               	addwfc	(??_system_calculate_input_current+1)& (0+255),f,b
 13112  012E74  C06C  F070         	movff	??_system_calculate_input_current,system_calculate_input_current@tmp
 13113  012E78  C06D  F071         	movff	??_system_calculate_input_current+1,system_calculate_input_current@tmp+1
 13114  012E7C  0E00               	movlw	0
 13115  012E7E  BF71               	btfsc	(system_calculate_input_current@tmp+1)& (0+255),7,b
 13116  012E80  0EFF               	movlw	-1
 13117  012E82  6F72               	movwf	(system_calculate_input_current@tmp+2)& (0+255),b
 13118  012E84  6F73               	movwf	(system_calculate_input_current@tmp+3)& (0+255),b
 13119                           
 13120                           ;os.c: 616: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibratio
      +                          n;
 13121  012E86  C33A  F06C         	movff	_calibrationParameters+34,??_system_calculate_input_current
 13122  012E8A  C33B  F06D         	movff	_calibrationParameters+35,??_system_calculate_input_current+1
 13123  012E8E  0E00               	movlw	0
 13124  012E90  BF6D               	btfsc	(??_system_calculate_input_current+1)& (0+255),7,b
 13125  012E92  0EFF               	movlw	255
 13126  012E94  6F6E               	movwf	(??_system_calculate_input_current+2)& (0+255),b
 13127  012E96  6F6F               	movwf	(??_system_calculate_input_current+3)& (0+255),b
 13128  012E98  516C               	movf	??_system_calculate_input_current& (0+255),w,b
 13129  012E9A  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 13130  012E9C  516D               	movf	(??_system_calculate_input_current+1)& (0+255),w,b
 13131  012E9E  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 13132  012EA0  516E               	movf	(??_system_calculate_input_current+2)& (0+255),w,b
 13133  012EA2  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 13134  012EA4  516F               	movf	(??_system_calculate_input_current+3)& (0+255),w,b
 13135  012EA6  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 13136                           
 13137                           ;os.c: 617: tmp += calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Offset;
 13138  012EA8  C335  F06C         	movff	_calibrationParameters+29,??_system_calculate_input_current
 13139  012EAC  C336  F06D         	movff	_calibrationParameters+30,??_system_calculate_input_current+1
 13140  012EB0  0E00               	movlw	0
 13141  012EB2  BF6D               	btfsc	(??_system_calculate_input_current+1)& (0+255),7,b
 13142  012EB4  0EFF               	movlw	255
 13143  012EB6  6F6E               	movwf	(??_system_calculate_input_current+2)& (0+255),b
 13144  012EB8  6F6F               	movwf	(??_system_calculate_input_current+3)& (0+255),b
 13145  012EBA  516C               	movf	??_system_calculate_input_current& (0+255),w,b
 13146  012EBC  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 13147  012EBE  516D               	movf	(??_system_calculate_input_current+1)& (0+255),w,b
 13148  012EC0  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 13149  012EC2  516E               	movf	(??_system_calculate_input_current+2)& (0+255),w,b
 13150  012EC4  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 13151  012EC6  516F               	movf	(??_system_calculate_input_current+3)& (0+255),w,b
 13152  012EC8  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 13153                           
 13154                           ; BSR set to: 0
 13155                           ;os.c: 618: tmp *= calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Multiplier;
 13156  012ECA  C070  F060         	movff	system_calculate_input_current@tmp,___lmul@multiplier
 13157  012ECE  C071  F061         	movff	system_calculate_input_current@tmp+1,___lmul@multiplier+1
 13158  012ED2  C072  F062         	movff	system_calculate_input_current@tmp+2,___lmul@multiplier+2
 13159  012ED6  C073  F063         	movff	system_calculate_input_current@tmp+3,___lmul@multiplier+3
 13160  012EDA  EE23  F037         	lfsr	2,_calibrationParameters+31
 13161  012EDE  CFDE F064          	movff	postinc2,___lmul@multiplicand
 13162  012EE2  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 13163  012EE6  0E00               	movlw	0
 13164  012EE8  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 13165  012EEA  0EFF               	movlw	-1
 13166  012EEC  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13167  012EEE  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13168  012EF0  ECEB  F0BC         	call	___lmul	;wreg free
 13169  012EF4  C060  F070         	movff	?___lmul,system_calculate_input_current@tmp
 13170  012EF8  C061  F071         	movff	?___lmul+1,system_calculate_input_current@tmp+1
 13171  012EFC  C062  F072         	movff	?___lmul+2,system_calculate_input_current@tmp+2
 13172  012F00  C063  F073         	movff	?___lmul+3,system_calculate_input_current@tmp+3
 13173                           
 13174                           ;os.c: 619: tmp >>= calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Shift - 1;
 13175  012F04  C339  F06C         	movff	_calibrationParameters+33,??_system_calculate_input_current
 13176  012F08  0EFF               	movlw	-1
 13177  012F0A  0100               	movlb	0	; () banked
 13178  012F0C  276C               	addwf	??_system_calculate_input_current& (0+255),f,b
 13179  012F0E  296C               	incf	??_system_calculate_input_current& (0+255),w,b
 13180  012F10  6F6D               	movwf	(??_system_calculate_input_current+1)& (0+255),b
 13181  012F12  D005               	goto	u27560
 13182  012F14                     u27565:
 13183  012F14  3573               	rlcf	(system_calculate_input_current@tmp+3)& (0+255),w,b
 13184  012F16  3373               	rrcf	(system_calculate_input_current@tmp+3)& (0+255),f,b
 13185  012F18  3372               	rrcf	(system_calculate_input_current@tmp+2)& (0+255),f,b
 13186  012F1A  3371               	rrcf	(system_calculate_input_current@tmp+1)& (0+255),f,b
 13187  012F1C  3370               	rrcf	system_calculate_input_current@tmp& (0+255),f,b
 13188  012F1E                     u27560:
 13189  012F1E  2F6D               	decfsz	(??_system_calculate_input_current+1)& (0+255),f,b
 13190  012F20  D7F9               	goto	u27565
 13191                           
 13192                           ;os.c: 620: tmp += 1;
 13193  012F22  0E01               	movlw	1
 13194  012F24  0100               	movlb	0	; () banked
 13195  012F26  2770               	addwf	system_calculate_input_current@tmp& (0+255),f,b
 13196  012F28  0E00               	movlw	0
 13197  012F2A  2371               	addwfc	(system_calculate_input_current@tmp+1)& (0+255),f,b
 13198  012F2C  2372               	addwfc	(system_calculate_input_current@tmp+2)& (0+255),f,b
 13199  012F2E  2373               	addwfc	(system_calculate_input_current@tmp+3)& (0+255),f,b
 13200                           
 13201                           ; BSR set to: 0
 13202                           ;os.c: 621: tmp >>= 1;
 13203  012F30  3573               	rlcf	(system_calculate_input_current@tmp+3)& (0+255),w,b
 13204  012F32  3373               	rrcf	(system_calculate_input_current@tmp+3)& (0+255),f,b
 13205  012F34  3372               	rrcf	(system_calculate_input_current@tmp+2)& (0+255),f,b
 13206  012F36  3371               	rrcf	(system_calculate_input_current@tmp+1)& (0+255),f,b
 13207  012F38  3370               	rrcf	system_calculate_input_current@tmp& (0+255),f,b
 13208                           
 13209                           ; BSR set to: 0
 13210                           ;os.c: 622: os.input_current = (int16_t) tmp;
 13211  012F3A  C070  F21D         	movff	system_calculate_input_current@tmp,_os+29	;volatile
 13212  012F3E  C071  F21E         	movff	system_calculate_input_current@tmp+1,_os+30	;volatile
 13213  012F42  0012               	return	
 13214  012F44                     __end_of_system_calculate_input_current:
 13215                           	opt stack 0
 13216                           tblptru	equ	0xFF8
 13217                           tblptrh	equ	0xFF7
 13218                           tblptrl	equ	0xFF6
 13219                           tablat	equ	0xFF5
 13220                           prodh	equ	0xFF4
 13221                           prodl	equ	0xFF3
 13222                           intcon	equ	0xFF2
 13223                           intcon2	equ	0xFF1
 13224                           intcon3	equ	0xFF0
 13225                           postinc0	equ	0xFEE
 13226                           wreg	equ	0xFE8
 13227                           postdec1	equ	0xFE5
 13228                           plusw1	equ	0xFE3
 13229                           fsr1h	equ	0xFE2
 13230                           fsr1l	equ	0xFE1
 13231                           indf2	equ	0xFDF
 13232                           postinc2	equ	0xFDE
 13233                           postdec2	equ	0xFDD
 13234                           plusw2	equ	0xFDB
 13235                           fsr2h	equ	0xFDA
 13236                           fsr2l	equ	0xFD9
 13237                           status	equ	0xFD8
 13238                           
 13239 ;; *************** function _log_collect_data *****************
 13240 ;; Defined at:
 13241 ;;		line 114 in file "log.c"
 13242 ;; Parameters:    Size  Location     Type
 13243 ;;		None
 13244 ;; Auto vars:     Size  Location     Type
 13245 ;;  temp            2   24[BANK0 ] unsigned int 
 13246 ;; Return value:  Size  Location     Type
 13247 ;;                  1    wreg      void 
 13248 ;; Registers used:
 13249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13250 ;; Tracked objects:
 13251 ;;		On entry : 0/0
 13252 ;;		On exit  : 0/0
 13253 ;;		Unchanged: 0/0
 13254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13256 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13257 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13258 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13259 ;;Total ram usage:        6 bytes
 13260 ;; Hardware stack levels used:    1
 13261 ;; Hardware stack levels required when called:   12
 13262 ;; This function calls:
 13263 ;;		__get_input_power
 13264 ;;		__get_output_power
 13265 ;;		_buck_get_mode
 13266 ;;		_rtcc_get_seconds_decimal
 13267 ;;		_system_output_is_on
 13268 ;; This function is called by:
 13269 ;;		_main
 13270 ;; This function uses a non-reentrant model
 13271 ;;
 13272                           
 13273                           	psect	text52
 13274  00F1AA                     __ptext52:
 13275                           	opt stack 0
 13276  00F1AA                     _log_collect_data:
 13277                           	opt stack 18
 13278                           
 13279                           ;log.c: 116: uint16_t temp;;log.c: 119: temp = rtcc_get_seconds_decimal();
 13280                           
 13281                           ;incstack = 0
 13282  00F1AA  ECDB  F0C7         	call	_rtcc_get_seconds_decimal	;wreg free
 13283  00F1AE  0100               	movlb	0	; () banked
 13284  00F1B0  6F74               	movwf	??_log_collect_data& (0+255),b
 13285  00F1B2  5174               	movf	??_log_collect_data& (0+255),w,b
 13286  00F1B4  6F78               	movwf	log_collect_data@temp& (0+255),b
 13287  00F1B6  6B79               	clrf	(log_collect_data@temp+1)& (0+255),b
 13288                           
 13289                           ; BSR set to: 0
 13290                           ;log.c: 120: if(lastSecond==temp)
 13291  00F1B8  0101               	movlb	1	; () banked
 13292  00F1BA  51EE               	movf	_lastSecond& (0+255),w,b
 13293  00F1BC  0100               	movlb	0	; () banked
 13294  00F1BE  6F74               	movwf	??_log_collect_data& (0+255),b
 13295  00F1C0  6B75               	clrf	(??_log_collect_data+1)& (0+255),b
 13296  00F1C2  5178               	movf	log_collect_data@temp& (0+255),w,b
 13297  00F1C4  1974               	xorwf	??_log_collect_data& (0+255),w,b
 13298  00F1C6  E104               	bnz	l3224
 13299  00F1C8  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 13300  00F1CA  1975               	xorwf	(??_log_collect_data+1)& (0+255),w,b
 13301  00F1CC  B4D8               	btfsc	status,2,c
 13302  00F1CE  0012               	return	
 13303  00F1D0                     l3224:
 13304                           
 13305                           ; BSR set to: 0
 13306                           ;log.c: 123: };log.c: 126: lastSecond = (uint8_t) temp;
 13307  00F1D0  C078  F1EE         	movff	log_collect_data@temp,_lastSecond
 13308                           
 13309                           ; BSR set to: 0
 13310                           ;log.c: 129: inputVoltageSum += os.input_voltage;
 13311  00F1D4  C212  F074         	movff	_os+18,??_log_collect_data	;volatile
 13312  00F1D8  C213  F075         	movff	_os+19,??_log_collect_data+1	;volatile
 13313  00F1DC  0E00               	movlw	0
 13314  00F1DE  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 13315  00F1E0  0EFF               	movlw	255
 13316  00F1E2  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 13317  00F1E4  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 13318  00F1E6  5174               	movf	??_log_collect_data& (0+255),w,b
 13319  00F1E8  0102               	movlb	2	; () banked
 13320  00F1EA  27A1               	addwf	_inputVoltageSum& (0+255),f,b
 13321  00F1EC  0100               	movlb	0	; () banked
 13322  00F1EE  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 13323  00F1F0  0102               	movlb	2	; () banked
 13324  00F1F2  23A2               	addwfc	(_inputVoltageSum+1)& (0+255),f,b
 13325  00F1F4  0100               	movlb	0	; () banked
 13326  00F1F6  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 13327  00F1F8  0102               	movlb	2	; () banked
 13328  00F1FA  23A3               	addwfc	(_inputVoltageSum+2)& (0+255),f,b
 13329  00F1FC  0100               	movlb	0	; () banked
 13330  00F1FE  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 13331  00F200  0102               	movlb	2	; () banked
 13332  00F202  23A4               	addwfc	(_inputVoltageSum+3)& (0+255),f,b
 13333                           
 13334                           ;log.c: 130: inputCurrentSum += os.input_current;
 13335  00F204  C21D  F074         	movff	_os+29,??_log_collect_data	;volatile
 13336  00F208  C21E  F075         	movff	_os+30,??_log_collect_data+1	;volatile
 13337  00F20C  0E00               	movlw	0
 13338  00F20E  0100               	movlb	0	; () banked
 13339  00F210  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 13340  00F212  0EFF               	movlw	255
 13341  00F214  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 13342  00F216  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 13343  00F218  5174               	movf	??_log_collect_data& (0+255),w,b
 13344  00F21A  0102               	movlb	2	; () banked
 13345  00F21C  279D               	addwf	_inputCurrentSum& (0+255),f,b
 13346  00F21E  0100               	movlb	0	; () banked
 13347  00F220  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 13348  00F222  0102               	movlb	2	; () banked
 13349  00F224  239E               	addwfc	(_inputCurrentSum+1)& (0+255),f,b
 13350  00F226  0100               	movlb	0	; () banked
 13351  00F228  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 13352  00F22A  0102               	movlb	2	; () banked
 13353  00F22C  239F               	addwfc	(_inputCurrentSum+2)& (0+255),f,b
 13354  00F22E  0100               	movlb	0	; () banked
 13355  00F230  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 13356  00F232  0102               	movlb	2	; () banked
 13357  00F234  23A0               	addwfc	(_inputCurrentSum+3)& (0+255),f,b
 13358                           
 13359                           ;log.c: 131: outputVoltageSum += os.output_voltage;
 13360  00F236  C227  F074         	movff	_os+39,??_log_collect_data	;volatile
 13361  00F23A  C228  F075         	movff	_os+40,??_log_collect_data+1	;volatile
 13362  00F23E  0E00               	movlw	0
 13363  00F240  0100               	movlb	0	; () banked
 13364  00F242  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 13365  00F244  0EFF               	movlw	255
 13366  00F246  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 13367  00F248  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 13368  00F24A  5174               	movf	??_log_collect_data& (0+255),w,b
 13369  00F24C  0102               	movlb	2	; () banked
 13370  00F24E  2799               	addwf	_outputVoltageSum& (0+255),f,b
 13371  00F250  0100               	movlb	0	; () banked
 13372  00F252  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 13373  00F254  0102               	movlb	2	; () banked
 13374  00F256  239A               	addwfc	(_outputVoltageSum+1)& (0+255),f,b
 13375  00F258  0100               	movlb	0	; () banked
 13376  00F25A  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 13377  00F25C  0102               	movlb	2	; () banked
 13378  00F25E  239B               	addwfc	(_outputVoltageSum+2)& (0+255),f,b
 13379  00F260  0100               	movlb	0	; () banked
 13380  00F262  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 13381  00F264  0102               	movlb	2	; () banked
 13382  00F266  239C               	addwfc	(_outputVoltageSum+3)& (0+255),f,b
 13383                           
 13384                           ;log.c: 132: outputCurrentSum += os.output_current;
 13385  00F268  C232  F074         	movff	_os+50,??_log_collect_data	;volatile
 13386  00F26C  C233  F075         	movff	_os+51,??_log_collect_data+1	;volatile
 13387  00F270  0E00               	movlw	0
 13388  00F272  0100               	movlb	0	; () banked
 13389  00F274  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 13390  00F276  0EFF               	movlw	255
 13391  00F278  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 13392  00F27A  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 13393  00F27C  5174               	movf	??_log_collect_data& (0+255),w,b
 13394  00F27E  0102               	movlb	2	; () banked
 13395  00F280  2795               	addwf	_outputCurrentSum& (0+255),f,b
 13396  00F282  0100               	movlb	0	; () banked
 13397  00F284  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 13398  00F286  0102               	movlb	2	; () banked
 13399  00F288  2396               	addwfc	(_outputCurrentSum+1)& (0+255),f,b
 13400  00F28A  0100               	movlb	0	; () banked
 13401  00F28C  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 13402  00F28E  0102               	movlb	2	; () banked
 13403  00F290  2397               	addwfc	(_outputCurrentSum+2)& (0+255),f,b
 13404  00F292  0100               	movlb	0	; () banked
 13405  00F294  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 13406  00F296  0102               	movlb	2	; () banked
 13407  00F298  2398               	addwfc	(_outputCurrentSum+3)& (0+255),f,b
 13408                           
 13409                           ; BSR set to: 2
 13410                           ;log.c: 133: temp = _get_input_power();
 13411  00F29A  EC82  F0B5         	call	__get_input_power	;wreg free
 13412  00F29E  C06E  F078         	movff	?__get_input_power,log_collect_data@temp
 13413  00F2A2  C06F  F079         	movff	?__get_input_power+1,log_collect_data@temp+1
 13414                           
 13415                           ;log.c: 134: inputPowerSum += temp>>1;
 13416  00F2A6  90D8               	bcf	status,0,c
 13417  00F2A8  0100               	movlb	0	; () banked
 13418  00F2AA  3179               	rrcf	(log_collect_data@temp+1)& (0+255),w,b
 13419  00F2AC  6F75               	movwf	(??_log_collect_data+1)& (0+255),b
 13420  00F2AE  3178               	rrcf	log_collect_data@temp& (0+255),w,b
 13421  00F2B0  6F74               	movwf	??_log_collect_data& (0+255),b
 13422  00F2B2  5174               	movf	??_log_collect_data& (0+255),w,b
 13423  00F2B4  0102               	movlb	2	; () banked
 13424  00F2B6  2791               	addwf	_inputPowerSum& (0+255),f,b
 13425  00F2B8  0100               	movlb	0	; () banked
 13426  00F2BA  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 13427  00F2BC  0102               	movlb	2	; () banked
 13428  00F2BE  2392               	addwfc	(_inputPowerSum+1)& (0+255),f,b
 13429  00F2C0  0E00               	movlw	0
 13430  00F2C2  2393               	addwfc	(_inputPowerSum+2)& (0+255),f,b
 13431  00F2C4  0E00               	movlw	0
 13432  00F2C6  2394               	addwfc	(_inputPowerSum+3)& (0+255),f,b
 13433                           
 13434                           ; BSR set to: 2
 13435                           ;log.c: 135: inputCapacitySum += temp;
 13436  00F2C8  0100               	movlb	0	; () banked
 13437  00F2CA  5178               	movf	log_collect_data@temp& (0+255),w,b
 13438  00F2CC  0102               	movlb	2	; () banked
 13439  00F2CE  2789               	addwf	_inputCapacitySum& (0+255),f,b
 13440  00F2D0  0100               	movlb	0	; () banked
 13441  00F2D2  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 13442  00F2D4  0102               	movlb	2	; () banked
 13443  00F2D6  238A               	addwfc	(_inputCapacitySum+1)& (0+255),f,b
 13444  00F2D8  0E00               	movlw	0
 13445  00F2DA  238B               	addwfc	(_inputCapacitySum+2)& (0+255),f,b
 13446  00F2DC  0E00               	movlw	0
 13447  00F2DE  238C               	addwfc	(_inputCapacitySum+3)& (0+255),f,b
 13448                           
 13449                           ; BSR set to: 2
 13450                           ;log.c: 136: temp = _get_output_power();
 13451  00F2E0  EC41  F0B5         	call	__get_output_power	;wreg free
 13452  00F2E4  C06D  F078         	movff	?__get_output_power,log_collect_data@temp
 13453  00F2E8  C06E  F079         	movff	?__get_output_power+1,log_collect_data@temp+1
 13454                           
 13455                           ;log.c: 137: outputPowerSum += temp>>1;
 13456  00F2EC  90D8               	bcf	status,0,c
 13457  00F2EE  0100               	movlb	0	; () banked
 13458  00F2F0  3179               	rrcf	(log_collect_data@temp+1)& (0+255),w,b
 13459  00F2F2  6F75               	movwf	(??_log_collect_data+1)& (0+255),b
 13460  00F2F4  3178               	rrcf	log_collect_data@temp& (0+255),w,b
 13461  00F2F6  6F74               	movwf	??_log_collect_data& (0+255),b
 13462  00F2F8  5174               	movf	??_log_collect_data& (0+255),w,b
 13463  00F2FA  0102               	movlb	2	; () banked
 13464  00F2FC  278D               	addwf	_outputPowerSum& (0+255),f,b
 13465  00F2FE  0100               	movlb	0	; () banked
 13466  00F300  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 13467  00F302  0102               	movlb	2	; () banked
 13468  00F304  238E               	addwfc	(_outputPowerSum+1)& (0+255),f,b
 13469  00F306  0E00               	movlw	0
 13470  00F308  238F               	addwfc	(_outputPowerSum+2)& (0+255),f,b
 13471  00F30A  0E00               	movlw	0
 13472  00F30C  2390               	addwfc	(_outputPowerSum+3)& (0+255),f,b
 13473                           
 13474                           ; BSR set to: 2
 13475                           ;log.c: 138: outputCapacitySum += temp;
 13476  00F30E  0100               	movlb	0	; () banked
 13477  00F310  5178               	movf	log_collect_data@temp& (0+255),w,b
 13478  00F312  0102               	movlb	2	; () banked
 13479  00F314  2785               	addwf	_outputCapacitySum& (0+255),f,b
 13480  00F316  0100               	movlb	0	; () banked
 13481  00F318  5179               	movf	(log_collect_data@temp+1)& (0+255),w,b
 13482  00F31A  0102               	movlb	2	; () banked
 13483  00F31C  2386               	addwfc	(_outputCapacitySum+1)& (0+255),f,b
 13484  00F31E  0E00               	movlw	0
 13485  00F320  2387               	addwfc	(_outputCapacitySum+2)& (0+255),f,b
 13486  00F322  0E00               	movlw	0
 13487  00F324  2388               	addwfc	(_outputCapacitySum+3)& (0+255),f,b
 13488                           
 13489                           ;log.c: 139: temperatureOnboardSum += os.temperature_onboard;
 13490  00F326  C236  F074         	movff	_os+54,??_log_collect_data	;volatile
 13491  00F32A  C237  F075         	movff	_os+55,??_log_collect_data+1	;volatile
 13492  00F32E  0E00               	movlw	0
 13493  00F330  0100               	movlb	0	; () banked
 13494  00F332  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 13495  00F334  0EFF               	movlw	255
 13496  00F336  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 13497  00F338  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 13498  00F33A  5174               	movf	??_log_collect_data& (0+255),w,b
 13499  00F33C  0102               	movlb	2	; () banked
 13500  00F33E  2781               	addwf	_temperatureOnboardSum& (0+255),f,b
 13501  00F340  0100               	movlb	0	; () banked
 13502  00F342  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 13503  00F344  0102               	movlb	2	; () banked
 13504  00F346  2382               	addwfc	(_temperatureOnboardSum+1)& (0+255),f,b
 13505  00F348  0100               	movlb	0	; () banked
 13506  00F34A  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 13507  00F34C  0102               	movlb	2	; () banked
 13508  00F34E  2383               	addwfc	(_temperatureOnboardSum+2)& (0+255),f,b
 13509  00F350  0100               	movlb	0	; () banked
 13510  00F352  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 13511  00F354  0102               	movlb	2	; () banked
 13512  00F356  2384               	addwfc	(_temperatureOnboardSum+3)& (0+255),f,b
 13513                           
 13514                           ;log.c: 140: temperatureExternal1Sum += os.temperature_external_1;
 13515  00F358  C23A  F074         	movff	_os+58,??_log_collect_data	;volatile
 13516  00F35C  C23B  F075         	movff	_os+59,??_log_collect_data+1	;volatile
 13517  00F360  0E00               	movlw	0
 13518  00F362  0100               	movlb	0	; () banked
 13519  00F364  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 13520  00F366  0EFF               	movlw	255
 13521  00F368  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 13522  00F36A  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 13523  00F36C  5174               	movf	??_log_collect_data& (0+255),w,b
 13524  00F36E  0102               	movlb	2	; () banked
 13525  00F370  277D               	addwf	_temperatureExternal1Sum& (0+255),f,b
 13526  00F372  0100               	movlb	0	; () banked
 13527  00F374  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 13528  00F376  0102               	movlb	2	; () banked
 13529  00F378  237E               	addwfc	(_temperatureExternal1Sum+1)& (0+255),f,b
 13530  00F37A  0100               	movlb	0	; () banked
 13531  00F37C  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 13532  00F37E  0102               	movlb	2	; () banked
 13533  00F380  237F               	addwfc	(_temperatureExternal1Sum+2)& (0+255),f,b
 13534  00F382  0100               	movlb	0	; () banked
 13535  00F384  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 13536  00F386  0102               	movlb	2	; () banked
 13537  00F388  2380               	addwfc	(_temperatureExternal1Sum+3)& (0+255),f,b
 13538                           
 13539                           ;log.c: 141: temperatureExternal2Sum += os.temperature_external_2;
 13540  00F38A  C23E  F074         	movff	_os+62,??_log_collect_data	;volatile
 13541  00F38E  C23F  F075         	movff	_os+63,??_log_collect_data+1	;volatile
 13542  00F392  0E00               	movlw	0
 13543  00F394  0100               	movlb	0	; () banked
 13544  00F396  BF75               	btfsc	(??_log_collect_data+1)& (0+255),7,b
 13545  00F398  0EFF               	movlw	255
 13546  00F39A  6F76               	movwf	(??_log_collect_data+2)& (0+255),b
 13547  00F39C  6F77               	movwf	(??_log_collect_data+3)& (0+255),b
 13548  00F39E  5174               	movf	??_log_collect_data& (0+255),w,b
 13549  00F3A0  0102               	movlb	2	; () banked
 13550  00F3A2  2779               	addwf	_temperatureExternal2Sum& (0+255),f,b
 13551  00F3A4  0100               	movlb	0	; () banked
 13552  00F3A6  5175               	movf	(??_log_collect_data+1)& (0+255),w,b
 13553  00F3A8  0102               	movlb	2	; () banked
 13554  00F3AA  237A               	addwfc	(_temperatureExternal2Sum+1)& (0+255),f,b
 13555  00F3AC  0100               	movlb	0	; () banked
 13556  00F3AE  5176               	movf	(??_log_collect_data+2)& (0+255),w,b
 13557  00F3B0  0102               	movlb	2	; () banked
 13558  00F3B2  237B               	addwfc	(_temperatureExternal2Sum+2)& (0+255),f,b
 13559  00F3B4  0100               	movlb	0	; () banked
 13560  00F3B6  5177               	movf	(??_log_collect_data+3)& (0+255),w,b
 13561  00F3B8  0102               	movlb	2	; () banked
 13562  00F3BA  237C               	addwfc	(_temperatureExternal2Sum+3)& (0+255),f,b
 13563                           
 13564                           ; BSR set to: 2
 13565                           ;log.c: 142: if(buck_get_mode()&0b01111111)
 13566  00F3BC  EC8C  F0C8         	call	_buck_get_mode	;wreg free
 13567  00F3C0  0100               	movlb	0	; () banked
 13568  00F3C2  6F74               	movwf	??_log_collect_data& (0+255),b
 13569  00F3C4  0E7F               	movlw	127
 13570  00F3C6  1774               	andwf	??_log_collect_data& (0+255),f,b
 13571  00F3C8  B4D8               	btfsc	status,2,c
 13572  00F3CA  D003               	goto	l3226
 13573                           
 13574                           ; BSR set to: 0
 13575                           ;log.c: 143: {;log.c: 144: ++chargerOnTime;
 13576  00F3CC  0102               	movlb	2	; () banked
 13577  00F3CE  4BB9               	infsnz	_chargerOnTime& (0+255),f,b
 13578  00F3D0  2BBA               	incf	(_chargerOnTime+1)& (0+255),f,b
 13579  00F3D2                     l3226:
 13580                           
 13581                           ;log.c: 145: };log.c: 146: if(os.boardVoltage==BOARD_VOLTAGE_LOW)
 13582                           
 13583                           ; BSR set to: 2
 13584  00F3D2  0102               	movlb	2	; () banked
 13585  00F3D4  5101               	movf	(_os+1)& (0+255),w,b	;volatile
 13586  00F3D6  A4D8               	btfss	status,2,c
 13587  00F3D8  D002               	goto	l3227
 13588                           
 13589                           ; BSR set to: 2
 13590                           ;log.c: 147: {;log.c: 148: ++lowPowerTime;
 13591  00F3DA  4BB7               	infsnz	_lowPowerTime& (0+255),f,b
 13592  00F3DC  2BB8               	incf	(_lowPowerTime+1)& (0+255),f,b
 13593  00F3DE                     l3227:
 13594                           
 13595                           ; BSR set to: 2
 13596                           ;log.c: 149: };log.c: 150: if(system_output_is_on(OUTPUT_1))
 13597                           
 13598                           ; BSR set to: 2
 13599  00F3DE  0E01               	movlw	1
 13600  00F3E0  ECF4  F0C6         	call	_system_output_is_on
 13601  00F3E4  0900               	iorlw	0
 13602  00F3E6  B4D8               	btfsc	status,2,c
 13603  00F3E8  D002               	goto	l3228
 13604                           
 13605                           ;log.c: 151: status |= 0b10000000;
 13606  00F3EA  0101               	movlb	1	; () banked
 13607  00F3EC  8FEF               	bsf	_status& (0+255),7,b
 13608  00F3EE                     l3228:
 13609                           
 13610                           ;log.c: 152: if(system_output_is_on(OUTPUT_2))
 13611                           
 13612                           ; BSR set to: 1
 13613  00F3EE  0E02               	movlw	2
 13614  00F3F0  ECF4  F0C6         	call	_system_output_is_on
 13615  00F3F4  0900               	iorlw	0
 13616  00F3F6  B4D8               	btfsc	status,2,c
 13617  00F3F8  D002               	goto	l3229
 13618                           
 13619                           ;log.c: 153: status |= 0b01000000;
 13620  00F3FA  0101               	movlb	1	; () banked
 13621  00F3FC  8DEF               	bsf	_status& (0+255),6,b
 13622  00F3FE                     l3229:
 13623                           
 13624                           ;log.c: 154: if(system_output_is_on(OUTPUT_3))
 13625                           
 13626                           ; BSR set to: 1
 13627  00F3FE  0E04               	movlw	4
 13628  00F400  ECF4  F0C6         	call	_system_output_is_on
 13629  00F404  0900               	iorlw	0
 13630  00F406  B4D8               	btfsc	status,2,c
 13631  00F408  D002               	goto	l3230
 13632                           
 13633                           ;log.c: 155: status |= 0b00100000;
 13634  00F40A  0101               	movlb	1	; () banked
 13635  00F40C  8BEF               	bsf	_status& (0+255),5,b
 13636  00F40E                     l3230:
 13637                           
 13638                           ;log.c: 156: if(system_output_is_on(OUTPUT_4))
 13639                           
 13640                           ; BSR set to: 1
 13641  00F40E  0E08               	movlw	8
 13642  00F410  ECF4  F0C6         	call	_system_output_is_on
 13643  00F414  0900               	iorlw	0
 13644  00F416  B4D8               	btfsc	status,2,c
 13645  00F418  D002               	goto	l3231
 13646                           
 13647                           ;log.c: 157: status |= 0b00010000;
 13648  00F41A  0101               	movlb	1	; () banked
 13649  00F41C  89EF               	bsf	_status& (0+255),4,b
 13650  00F41E                     l3231:
 13651                           
 13652                           ;log.c: 158: if(system_output_is_on(OUTPUT_USB))
 13653                           
 13654                           ; BSR set to: 1
 13655  00F41E  0E10               	movlw	16
 13656  00F420  ECF4  F0C6         	call	_system_output_is_on
 13657  00F424  0900               	iorlw	0
 13658  00F426  B4D8               	btfsc	status,2,c
 13659  00F428  D002               	goto	l3232
 13660                           
 13661                           ;log.c: 159: status |= 0b00001000;
 13662  00F42A  0101               	movlb	1	; () banked
 13663  00F42C  87EF               	bsf	_status& (0+255),3,b
 13664  00F42E                     l3232:
 13665                           
 13666                           ;log.c: 160: if(system_output_is_on(OUTPUT_FAN))
 13667                           
 13668                           ; BSR set to: 1
 13669  00F42E  0E20               	movlw	32
 13670  00F430  ECF4  F0C6         	call	_system_output_is_on
 13671  00F434  0900               	iorlw	0
 13672  00F436  B4D8               	btfsc	status,2,c
 13673  00F438  D002               	goto	l3233
 13674                           
 13675                           ;log.c: 161: status |= 0b00000100;
 13676  00F43A  0101               	movlb	1	; () banked
 13677  00F43C  85EF               	bsf	_status& (0+255),2,b
 13678  00F43E                     l3233:
 13679                           
 13680                           ;log.c: 163: status |= 0b00000010;
 13681  00F43E  0101               	movlb	1	; () banked
 13682  00F440  83EF               	bsf	_status& (0+255),1,b
 13683                           
 13684                           ;log.c: 164: ++averageCount;
 13685  00F442  4A0D               	infsnz	_averageCount,f,c
 13686  00F444  2A0E               	incf	_averageCount+1,f,c
 13687  00F446  0012               	return		;funcret
 13688  00F448                     __end_of_log_collect_data:
 13689                           	opt stack 0
 13690                           tblptru	equ	0xFF8
 13691                           tblptrh	equ	0xFF7
 13692                           tblptrl	equ	0xFF6
 13693                           tablat	equ	0xFF5
 13694                           prodh	equ	0xFF4
 13695                           prodl	equ	0xFF3
 13696                           intcon	equ	0xFF2
 13697                           intcon2	equ	0xFF1
 13698                           intcon3	equ	0xFF0
 13699                           postinc0	equ	0xFEE
 13700                           wreg	equ	0xFE8
 13701                           postdec1	equ	0xFE5
 13702                           plusw1	equ	0xFE3
 13703                           fsr1h	equ	0xFE2
 13704                           fsr1l	equ	0xFE1
 13705                           indf2	equ	0xFDF
 13706                           postinc2	equ	0xFDE
 13707                           postdec2	equ	0xFDD
 13708                           plusw2	equ	0xFDB
 13709                           fsr2h	equ	0xFDA
 13710                           fsr2l	equ	0xFD9
 13711                           status	equ	0xFD8
 13712                           
 13713 ;; *************** function _system_output_is_on *****************
 13714 ;; Defined at:
 13715 ;;		line 492 in file "os.c"
 13716 ;; Parameters:    Size  Location     Type
 13717 ;;  output          1    wreg     enum E6793
 13718 ;; Auto vars:     Size  Location     Type
 13719 ;;  output          1    0[BANK0 ] enum E6793
 13720 ;; Return value:  Size  Location     Type
 13721 ;;                  1    wreg      unsigned char 
 13722 ;; Registers used:
 13723 ;;		wreg, status,2, status,0
 13724 ;; Tracked objects:
 13725 ;;		On entry : 0/0
 13726 ;;		On exit  : 0/0
 13727 ;;		Unchanged: 0/0
 13728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13730 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13732 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13733 ;;Total ram usage:        1 bytes
 13734 ;; Hardware stack levels used:    1
 13735 ;; Hardware stack levels required when called:   10
 13736 ;; This function calls:
 13737 ;;		Nothing
 13738 ;; This function is called by:
 13739 ;;		_system_output_toggle
 13740 ;;		_log_collect_data
 13741 ;; This function uses a non-reentrant model
 13742 ;;
 13743                           
 13744                           	psect	text53
 13745  018DE8                     __ptext53:
 13746                           	opt stack 0
 13747  018DE8                     _system_output_is_on:
 13748                           	opt stack 17
 13749                           
 13750                           ;incstack = 0
 13751                           ;system_output_is_on@output stored from wreg
 13752  018DE8  0100               	movlb	0	; () banked
 13753  018DEA  6F60               	movwf	system_output_is_on@output& (0+255),b
 13754                           
 13755                           ;os.c: 494: if(os.outputs&output)
 13756  018DEC  0102               	movlb	2	; () banked
 13757  018DEE  5105               	movf	(_os+5)& (0+255),w,b	;volatile
 13758  018DF0  0100               	movlb	0	; () banked
 13759  018DF2  1560               	andwf	system_output_is_on@output& (0+255),w,b
 13760  018DF4  0900               	iorlw	0
 13761  018DF6  B4D8               	btfsc	status,2,c
 13762  018DF8  D002               	goto	l1196
 13763                           
 13764                           ; BSR set to: 0
 13765                           ;os.c: 495: return 1;
 13766  018DFA  0E01               	movlw	1
 13767                           
 13768                           ; BSR set to: 0
 13769                           
 13770                           ; BSR set to: 0
 13771  018DFC  0012               	return	
 13772  018DFE                     l1196:
 13773                           
 13774                           ; BSR set to: 0
 13775                           ;os.c: 496: else;os.c: 497: return 0;
 13776                           
 13777                           ; BSR set to: 0
 13778  018DFE  0E00               	movlw	0
 13779                           
 13780                           ; BSR set to: 0
 13781  018E00  0012               	return	
 13782  018E02                     __end_of_system_output_is_on:
 13783                           	opt stack 0
 13784                           tblptru	equ	0xFF8
 13785                           tblptrh	equ	0xFF7
 13786                           tblptrl	equ	0xFF6
 13787                           tablat	equ	0xFF5
 13788                           prodh	equ	0xFF4
 13789                           prodl	equ	0xFF3
 13790                           intcon	equ	0xFF2
 13791                           intcon2	equ	0xFF1
 13792                           intcon3	equ	0xFF0
 13793                           postinc0	equ	0xFEE
 13794                           wreg	equ	0xFE8
 13795                           postdec1	equ	0xFE5
 13796                           plusw1	equ	0xFE3
 13797                           fsr1h	equ	0xFE2
 13798                           fsr1l	equ	0xFE1
 13799                           indf2	equ	0xFDF
 13800                           postinc2	equ	0xFDE
 13801                           postdec2	equ	0xFDD
 13802                           plusw2	equ	0xFDB
 13803                           fsr2h	equ	0xFDA
 13804                           fsr2l	equ	0xFD9
 13805                           status	equ	0xFD8
 13806                           
 13807 ;; *************** function __get_output_power *****************
 13808 ;; Defined at:
 13809 ;;		line 99 in file "log.c"
 13810 ;; Parameters:    Size  Location     Type
 13811 ;;		None
 13812 ;; Auto vars:     Size  Location     Type
 13813 ;;  pwr             4   15[BANK0 ] unsigned long 
 13814 ;; Return value:  Size  Location     Type
 13815 ;;                  2   13[BANK0 ] unsigned int 
 13816 ;; Registers used:
 13817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13818 ;; Tracked objects:
 13819 ;;		On entry : 0/0
 13820 ;;		On exit  : 0/0
 13821 ;;		Unchanged: 0/0
 13822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13823 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13824 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13826 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13827 ;;Total ram usage:        6 bytes
 13828 ;; Hardware stack levels used:    1
 13829 ;; Hardware stack levels required when called:   11
 13830 ;; This function calls:
 13831 ;;		___lldiv
 13832 ;;		___lmul
 13833 ;; This function is called by:
 13834 ;;		_log_collect_data
 13835 ;; This function uses a non-reentrant model
 13836 ;;
 13837                           
 13838                           	psect	text54
 13839  016A82                     __ptext54:
 13840                           	opt stack 0
 13841  016A82                     __get_output_power:
 13842                           	opt stack 18
 13843                           
 13844                           ;log.c: 101: uint32_t pwr;;log.c: 102: pwr = ((int32_t) os.output_voltage) * ((int32_t) 
      +                          os.output_current);
 13845                           
 13846                           ; BSR set to: 0
 13847                           ;incstack = 0
 13848  016A82  EE22  F027         	lfsr	2,_os+39	;volatile
 13849  016A86  CFDE F060          	movff	postinc2,___lmul@multiplier
 13850  016A8A  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 13851  016A8E  0100               	movlb	0	; () banked
 13852  016A90  0E00               	movlw	0
 13853  016A92  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 13854  016A94  0EFF               	movlw	-1
 13855  016A96  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 13856  016A98  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 13857  016A9A  EE22  F032         	lfsr	2,_os+50	;volatile
 13858  016A9E  CFDE F064          	movff	postinc2,___lmul@multiplicand
 13859  016AA2  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 13860  016AA6  0E00               	movlw	0
 13861  016AA8  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 13862  016AAA  0EFF               	movlw	-1
 13863  016AAC  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13864  016AAE  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13865  016AB0  ECEB  F0BC         	call	___lmul	;wreg free
 13866  016AB4  C060  F06F         	movff	?___lmul,__get_output_power@pwr
 13867  016AB8  C061  F070         	movff	?___lmul+1,__get_output_power@pwr+1
 13868  016ABC  C062  F071         	movff	?___lmul+2,__get_output_power@pwr+2
 13869  016AC0  C063  F072         	movff	?___lmul+3,__get_output_power@pwr+3
 13870                           
 13871                           ;log.c: 103: pwr /= 1000;
 13872  016AC4  C06F  F060         	movff	__get_output_power@pwr,___lldiv@dividend
 13873  016AC8  C070  F061         	movff	__get_output_power@pwr+1,___lldiv@dividend+1
 13874  016ACC  C071  F062         	movff	__get_output_power@pwr+2,___lldiv@dividend+2
 13875  016AD0  C072  F063         	movff	__get_output_power@pwr+3,___lldiv@dividend+3
 13876  016AD4  0EE8               	movlw	232
 13877  016AD6  0100               	movlb	0	; () banked
 13878  016AD8  6F64               	movwf	___lldiv@divisor& (0+255),b
 13879  016ADA  0E03               	movlw	3
 13880  016ADC  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 13881  016ADE  0E00               	movlw	0
 13882  016AE0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 13883  016AE2  0E00               	movlw	0
 13884  016AE4  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 13885  016AE6  ECBD  F0B4         	call	___lldiv	;wreg free
 13886  016AEA  C060  F06F         	movff	?___lldiv,__get_output_power@pwr
 13887  016AEE  C061  F070         	movff	?___lldiv+1,__get_output_power@pwr+1
 13888  016AF2  C062  F071         	movff	?___lldiv+2,__get_output_power@pwr+2
 13889  016AF6  C063  F072         	movff	?___lldiv+3,__get_output_power@pwr+3
 13890                           
 13891                           ;log.c: 104: return (uint16_t) pwr;
 13892  016AFA  C06F  F06D         	movff	__get_output_power@pwr,?__get_output_power
 13893  016AFE  C070  F06E         	movff	__get_output_power@pwr+1,?__get_output_power+1
 13894  016B02  0012               	return	
 13895  016B04                     __end_of__get_output_power:
 13896                           	opt stack 0
 13897                           tblptru	equ	0xFF8
 13898                           tblptrh	equ	0xFF7
 13899                           tblptrl	equ	0xFF6
 13900                           tablat	equ	0xFF5
 13901                           prodh	equ	0xFF4
 13902                           prodl	equ	0xFF3
 13903                           intcon	equ	0xFF2
 13904                           intcon2	equ	0xFF1
 13905                           intcon3	equ	0xFF0
 13906                           postinc0	equ	0xFEE
 13907                           wreg	equ	0xFE8
 13908                           postdec1	equ	0xFE5
 13909                           plusw1	equ	0xFE3
 13910                           fsr1h	equ	0xFE2
 13911                           fsr1l	equ	0xFE1
 13912                           indf2	equ	0xFDF
 13913                           postinc2	equ	0xFDE
 13914                           postdec2	equ	0xFDD
 13915                           plusw2	equ	0xFDB
 13916                           fsr2h	equ	0xFDA
 13917                           fsr2l	equ	0xFD9
 13918                           status	equ	0xFD8
 13919                           
 13920 ;; *************** function __get_input_power *****************
 13921 ;; Defined at:
 13922 ;;		line 91 in file "log.c"
 13923 ;; Parameters:    Size  Location     Type
 13924 ;;		None
 13925 ;; Auto vars:     Size  Location     Type
 13926 ;;  pwr             4   16[BANK0 ] long 
 13927 ;; Return value:  Size  Location     Type
 13928 ;;                  2   14[BANK0 ] unsigned int 
 13929 ;; Registers used:
 13930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13931 ;; Tracked objects:
 13932 ;;		On entry : 0/0
 13933 ;;		On exit  : 0/0
 13934 ;;		Unchanged: 0/0
 13935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13936 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13937 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13939 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13940 ;;Total ram usage:        6 bytes
 13941 ;; Hardware stack levels used:    1
 13942 ;; Hardware stack levels required when called:   11
 13943 ;; This function calls:
 13944 ;;		___aldiv
 13945 ;;		___lmul
 13946 ;; This function is called by:
 13947 ;;		_log_collect_data
 13948 ;; This function uses a non-reentrant model
 13949 ;;
 13950                           
 13951                           	psect	text55
 13952  016B04                     __ptext55:
 13953                           	opt stack 0
 13954  016B04                     __get_input_power:
 13955                           	opt stack 18
 13956                           
 13957                           ;log.c: 93: int32_t pwr;;log.c: 94: pwr = ((int32_t) os.input_voltage) * ((int32_t) os.i
      +                          nput_current);
 13958                           
 13959                           ;incstack = 0
 13960  016B04  EE22  F012         	lfsr	2,_os+18	;volatile
 13961  016B08  CFDE F060          	movff	postinc2,___lmul@multiplier
 13962  016B0C  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 13963  016B10  0100               	movlb	0	; () banked
 13964  016B12  0E00               	movlw	0
 13965  016B14  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 13966  016B16  0EFF               	movlw	-1
 13967  016B18  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 13968  016B1A  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 13969  016B1C  EE22  F01D         	lfsr	2,_os+29	;volatile
 13970  016B20  CFDE F064          	movff	postinc2,___lmul@multiplicand
 13971  016B24  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 13972  016B28  0E00               	movlw	0
 13973  016B2A  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 13974  016B2C  0EFF               	movlw	-1
 13975  016B2E  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13976  016B30  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13977  016B32  ECEB  F0BC         	call	___lmul	;wreg free
 13978  016B36  C060  F070         	movff	?___lmul,__get_input_power@pwr
 13979  016B3A  C061  F071         	movff	?___lmul+1,__get_input_power@pwr+1
 13980  016B3E  C062  F072         	movff	?___lmul+2,__get_input_power@pwr+2
 13981  016B42  C063  F073         	movff	?___lmul+3,__get_input_power@pwr+3
 13982                           
 13983                           ;log.c: 95: pwr /= 1000;
 13984  016B46  C070  F060         	movff	__get_input_power@pwr,___aldiv@dividend
 13985  016B4A  C071  F061         	movff	__get_input_power@pwr+1,___aldiv@dividend+1
 13986  016B4E  C072  F062         	movff	__get_input_power@pwr+2,___aldiv@dividend+2
 13987  016B52  C073  F063         	movff	__get_input_power@pwr+3,___aldiv@dividend+3
 13988  016B56  0EE8               	movlw	232
 13989  016B58  0100               	movlb	0	; () banked
 13990  016B5A  6F64               	movwf	___aldiv@divisor& (0+255),b
 13991  016B5C  0E03               	movlw	3
 13992  016B5E  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 13993  016B60  0E00               	movlw	0
 13994  016B62  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 13995  016B64  0E00               	movlw	0
 13996  016B66  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 13997  016B68  EC4E  F0A7         	call	___aldiv	;wreg free
 13998  016B6C  C060  F070         	movff	?___aldiv,__get_input_power@pwr
 13999  016B70  C061  F071         	movff	?___aldiv+1,__get_input_power@pwr+1
 14000  016B74  C062  F072         	movff	?___aldiv+2,__get_input_power@pwr+2
 14001  016B78  C063  F073         	movff	?___aldiv+3,__get_input_power@pwr+3
 14002                           
 14003                           ;log.c: 96: return (uint16_t) pwr;
 14004  016B7C  C070  F06E         	movff	__get_input_power@pwr,?__get_input_power
 14005  016B80  C071  F06F         	movff	__get_input_power@pwr+1,?__get_input_power+1
 14006  016B84  0012               	return	
 14007  016B86                     __end_of__get_input_power:
 14008                           	opt stack 0
 14009                           tblptru	equ	0xFF8
 14010                           tblptrh	equ	0xFF7
 14011                           tblptrl	equ	0xFF6
 14012                           tablat	equ	0xFF5
 14013                           prodh	equ	0xFF4
 14014                           prodl	equ	0xFF3
 14015                           intcon	equ	0xFF2
 14016                           intcon2	equ	0xFF1
 14017                           intcon3	equ	0xFF0
 14018                           postinc0	equ	0xFEE
 14019                           wreg	equ	0xFE8
 14020                           postdec1	equ	0xFE5
 14021                           plusw1	equ	0xFE3
 14022                           fsr1h	equ	0xFE2
 14023                           fsr1l	equ	0xFE1
 14024                           indf2	equ	0xFDF
 14025                           postinc2	equ	0xFDE
 14026                           postdec2	equ	0xFDD
 14027                           plusw2	equ	0xFDB
 14028                           fsr2h	equ	0xFDA
 14029                           fsr2l	equ	0xFD9
 14030                           status	equ	0xFD8
 14031                           
 14032 ;; *************** function _i2c_eeprom_tasks *****************
 14033 ;; Defined at:
 14034 ;;		line 690 in file "i2c.c"
 14035 ;; Parameters:    Size  Location     Type
 14036 ;;		None
 14037 ;; Auto vars:     Size  Location     Type
 14038 ;;		None
 14039 ;; Return value:  Size  Location     Type
 14040 ;;                  1    wreg      void 
 14041 ;; Registers used:
 14042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14043 ;; Tracked objects:
 14044 ;;		On entry : 0/0
 14045 ;;		On exit  : 0/0
 14046 ;;		Unchanged: 0/0
 14047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14052 ;;Total ram usage:        0 bytes
 14053 ;; Hardware stack levels used:    1
 14054 ;; Hardware stack levels required when called:   14
 14055 ;; This function calls:
 14056 ;;		__write_calibration
 14057 ;;		_get_next_eeprom_write_task
 14058 ;; This function is called by:
 14059 ;;		_main
 14060 ;; This function uses a non-reentrant model
 14061 ;;
 14062                           
 14063                           	psect	text56
 14064  01704C                     __ptext56:
 14065                           	opt stack 0
 14066  01704C                     _i2c_eeprom_tasks:
 14067                           	opt stack 16
 14068                           
 14069                           ;i2c.c: 692: switch(get_next_eeprom_write_task())
 14070                           
 14071                           ;incstack = 0
 14072  01704C  D01C               	goto	l1460
 14073  01704E                     
 14074                           ;i2c.c: 697: _write_calibration(CALIBRATION_INDEX_INPUT_VOLTAGE);
 14075  01704E  0E00               	movlw	0
 14076  017050  ECD0  F0B2         	call	__write_calibration
 14077                           
 14078                           ;i2c.c: 698: break;
 14079  017054  0012               	return	
 14080  017056                     
 14081                           ;i2c.c: 700: _write_calibration(CALIBRATION_INDEX_OUTPUT_VOLTAGE);
 14082  017056  0E01               	movlw	1
 14083  017058  ECD0  F0B2         	call	__write_calibration
 14084                           
 14085                           ;i2c.c: 701: break;
 14086  01705C  0012               	return	
 14087  01705E                     
 14088                           ;i2c.c: 703: _write_calibration(CALIBRATION_INDEX_INPUT_CURRENT);
 14089  01705E  0E02               	movlw	2
 14090  017060  ECD0  F0B2         	call	__write_calibration
 14091                           
 14092                           ;i2c.c: 704: break;
 14093  017064  0012               	return	
 14094  017066                     
 14095                           ;i2c.c: 706: _write_calibration(CALIBRATION_INDEX_OUTPUT_CURRENT);
 14096  017066  0E03               	movlw	3
 14097  017068  ECD0  F0B2         	call	__write_calibration
 14098                           
 14099                           ;i2c.c: 707: break;
 14100  01706C  0012               	return	
 14101  01706E                     
 14102                           ;i2c.c: 709: _write_calibration(CALIBRATION_INDEX_ONBOARD_TEMPERATURE);
 14103  01706E  0E04               	movlw	4
 14104  017070  ECD0  F0B2         	call	__write_calibration
 14105                           
 14106                           ;i2c.c: 710: break;
 14107  017074  0012               	return	
 14108  017076                     
 14109                           ;i2c.c: 712: _write_calibration(CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_1);
 14110  017076  0E05               	movlw	5
 14111  017078  ECD0  F0B2         	call	__write_calibration
 14112                           
 14113                           ;i2c.c: 713: break;
 14114  01707C  0012               	return	
 14115  01707E                     
 14116                           ;i2c.c: 715: _write_calibration(CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_2);
 14117  01707E  0E06               	movlw	6
 14118  017080  ECD0  F0B2         	call	__write_calibration
 14119                           
 14120                           ;i2c.c: 717: }
 14121                           
 14122                           ;i2c.c: 716: break;
 14123  017084  0012               	return	
 14124  017086                     l1460:
 14125  017086  EC4D  F0C4         	call	_get_next_eeprom_write_task	;wreg free
 14126                           
 14127                           ; Switch size 1, requested type "space"
 14128                           ; Number of cases is 8, Range of values is 1 to 8
 14129                           ; switch strategies available:
 14130                           ; Name         Instructions Cycles
 14131                           ; simple_byte           25    13 (average)
 14132                           ;	Chosen strategy is simple_byte
 14133  01708A  0A01               	xorlw	1	; case 1
 14134  01708C  B4D8               	btfsc	status,2,c
 14135  01708E  0012               	return	
 14136  017090  0A03               	xorlw	3	; case 2
 14137  017092  B4D8               	btfsc	status,2,c
 14138  017094  D7DC               	goto	l1463
 14139  017096  0A01               	xorlw	1	; case 3
 14140  017098  B4D8               	btfsc	status,2,c
 14141  01709A  D7DD               	goto	l1464
 14142  01709C  0A07               	xorlw	7	; case 4
 14143  01709E  B4D8               	btfsc	status,2,c
 14144  0170A0  D7DE               	goto	l1465
 14145  0170A2  0A01               	xorlw	1	; case 5
 14146  0170A4  B4D8               	btfsc	status,2,c
 14147  0170A6  D7DF               	goto	l1466
 14148  0170A8  0A03               	xorlw	3	; case 6
 14149  0170AA  B4D8               	btfsc	status,2,c
 14150  0170AC  D7E0               	goto	l1467
 14151  0170AE  0A01               	xorlw	1	; case 7
 14152  0170B0  B4D8               	btfsc	status,2,c
 14153  0170B2  D7E1               	goto	l1468
 14154  0170B4  0A0F               	xorlw	15	; case 8
 14155  0170B6  A4D8               	btfss	status,2,c
 14156  0170B8  0012               	return	
 14157  0170BA  D7E1               	goto	l1469
 14158  0170BC                     __end_of_i2c_eeprom_tasks:
 14159                           	opt stack 0
 14160                           tblptru	equ	0xFF8
 14161                           tblptrh	equ	0xFF7
 14162                           tblptrl	equ	0xFF6
 14163                           tablat	equ	0xFF5
 14164                           prodh	equ	0xFF4
 14165                           prodl	equ	0xFF3
 14166                           intcon	equ	0xFF2
 14167                           intcon2	equ	0xFF1
 14168                           intcon3	equ	0xFF0
 14169                           postinc0	equ	0xFEE
 14170                           wreg	equ	0xFE8
 14171                           postdec1	equ	0xFE5
 14172                           plusw1	equ	0xFE3
 14173                           fsr1h	equ	0xFE2
 14174                           fsr1l	equ	0xFE1
 14175                           indf2	equ	0xFDF
 14176                           postinc2	equ	0xFDE
 14177                           postdec2	equ	0xFDD
 14178                           plusw2	equ	0xFDB
 14179                           fsr2h	equ	0xFDA
 14180                           fsr2l	equ	0xFD9
 14181                           status	equ	0xFD8
 14182                           
 14183 ;; *************** function _get_next_eeprom_write_task *****************
 14184 ;; Defined at:
 14185 ;;		line 670 in file "i2c.c"
 14186 ;; Parameters:    Size  Location     Type
 14187 ;;		None
 14188 ;; Auto vars:     Size  Location     Type
 14189 ;;  task            1    0[BANK0 ] enum E6645
 14190 ;; Return value:  Size  Location     Type
 14191 ;;                  1    wreg      enum E6645
 14192 ;; Registers used:
 14193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14194 ;; Tracked objects:
 14195 ;;		On entry : 0/0
 14196 ;;		On exit  : 0/0
 14197 ;;		Unchanged: 0/0
 14198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14200 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14202 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14203 ;;Total ram usage:        1 bytes
 14204 ;; Hardware stack levels used:    1
 14205 ;; Hardware stack levels required when called:   10
 14206 ;; This function calls:
 14207 ;;		Nothing
 14208 ;; This function is called by:
 14209 ;;		_i2c_eeprom_tasks
 14210 ;; This function uses a non-reentrant model
 14211 ;;
 14212                           
 14213                           	psect	text57
 14214  01889A                     __ptext57:
 14215                           	opt stack 0
 14216  01889A                     _get_next_eeprom_write_task:
 14217                           	opt stack 19
 14218                           
 14219                           ;i2c.c: 672: eeprom_write_task_t task;;i2c.c: 673: if (task_list_read_index == task_list
      +                          _write_index)
 14220                           
 14221                           ;incstack = 0
 14222  01889A  501F               	movf	_task_list_write_index,w,c
 14223  01889C  1820               	xorwf	_task_list_read_index,w,c
 14224  01889E  A4D8               	btfss	status,2,c
 14225  0188A0  D002               	goto	l1455
 14226                           
 14227                           ;i2c.c: 674: {;i2c.c: 676: return EEPROM_WRITE_TASK_NONE;
 14228  0188A2  0E00               	movlw	0
 14229                           
 14230                           ;i2c.c: 677: }
 14231  0188A4  0012               	return	
 14232  0188A6                     l1455:
 14233                           
 14234                           ;i2c.c: 678: else;i2c.c: 679: {;i2c.c: 681: task = task_list[task_list_read_index];
 14235  0188A6  5020               	movf	_task_list_read_index,w,c
 14236  0188A8  0D01               	mullw	1
 14237  0188AA  0E00               	movlw	low _task_list
 14238  0188AC  24F3               	addwf	prodl,w,c
 14239  0188AE  6ED9               	movwf	fsr2l,c
 14240  0188B0  0E03               	movlw	high _task_list
 14241  0188B2  20F4               	addwfc	prodh,w,c
 14242  0188B4  6EDA               	movwf	fsr2h,c
 14243  0188B6  50DF               	movf	indf2,w,c
 14244  0188B8  0100               	movlb	0	; () banked
 14245  0188BA  6F60               	movwf	get_next_eeprom_write_task@task& (0+255),b
 14246                           
 14247                           ; BSR set to: 0
 14248                           ;i2c.c: 683: ++task_list_read_index;
 14249  0188BC  2A20               	incf	_task_list_read_index,f,c
 14250                           
 14251                           ; BSR set to: 0
 14252                           ;i2c.c: 684: task_list_read_index &= 0x0F;
 14253  0188BE  0E0F               	movlw	15
 14254  0188C0  1620               	andwf	_task_list_read_index,f,c
 14255                           
 14256                           ; BSR set to: 0
 14257                           ;i2c.c: 686: return task;
 14258  0188C2  5160               	movf	get_next_eeprom_write_task@task& (0+255),w,b
 14259                           
 14260                           ; BSR set to: 0
 14261  0188C4  0012               	return	
 14262  0188C6                     __end_of_get_next_eeprom_write_task:
 14263                           	opt stack 0
 14264                           tblptru	equ	0xFF8
 14265                           tblptrh	equ	0xFF7
 14266                           tblptrl	equ	0xFF6
 14267                           tablat	equ	0xFF5
 14268                           prodh	equ	0xFF4
 14269                           prodl	equ	0xFF3
 14270                           intcon	equ	0xFF2
 14271                           intcon2	equ	0xFF1
 14272                           intcon3	equ	0xFF0
 14273                           postinc0	equ	0xFEE
 14274                           wreg	equ	0xFE8
 14275                           postdec1	equ	0xFE5
 14276                           plusw1	equ	0xFE3
 14277                           fsr1h	equ	0xFE2
 14278                           fsr1l	equ	0xFE1
 14279                           indf2	equ	0xFDF
 14280                           postinc2	equ	0xFDE
 14281                           postdec2	equ	0xFDD
 14282                           plusw2	equ	0xFDB
 14283                           fsr2h	equ	0xFDA
 14284                           fsr2l	equ	0xFD9
 14285                           status	equ	0xFD8
 14286                           
 14287 ;; *************** function __write_calibration *****************
 14288 ;; Defined at:
 14289 ;;		line 618 in file "i2c.c"
 14290 ;; Parameters:    Size  Location     Type
 14291 ;;  index           1    wreg     enum E6806
 14292 ;; Auto vars:     Size  Location     Type
 14293 ;;  index           1   59[BANK0 ] enum E6806
 14294 ;;  buffer         16   39[BANK0 ] unsigned char [16]
 14295 ;;  ptr             2   57[BANK0 ] PTR unsigned char 
 14296 ;;		 -> calibrationParameters(84), 
 14297 ;;  addr            2   55[BANK0 ] unsigned int 
 14298 ;;  cntr            1   60[BANK0 ] unsigned char 
 14299 ;; Return value:  Size  Location     Type
 14300 ;;                  1    wreg      void 
 14301 ;; Registers used:
 14302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14303 ;; Tracked objects:
 14304 ;;		On entry : 0/0
 14305 ;;		On exit  : 0/0
 14306 ;;		Unchanged: 0/0
 14307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14309 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14310 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14311 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14312 ;;Total ram usage:       24 bytes
 14313 ;; Hardware stack levels used:    1
 14314 ;; Hardware stack levels required when called:   13
 14315 ;; This function calls:
 14316 ;;		_i2c_eeprom_write
 14317 ;; This function is called by:
 14318 ;;		_i2c_eeprom_tasks
 14319 ;; This function uses a non-reentrant model
 14320 ;;
 14321                           
 14322                           	psect	text58
 14323  0165A0                     __ptext58:
 14324                           	opt stack 0
 14325  0165A0                     __write_calibration:
 14326                           	opt stack 16
 14327                           
 14328                           ;incstack = 0
 14329                           ;__write_calibration@index stored from wreg
 14330  0165A0  0100               	movlb	0	; () banked
 14331  0165A2  6F9B               	movwf	__write_calibration@index& (0+255),b
 14332                           
 14333                           ;i2c.c: 620: uint8_t buffer[16];;i2c.c: 621: uint8_t *ptr;;i2c.c: 622: uint8_t cntr;;i2c
      +                          .c: 623: uint16_t addr;;i2c.c: 624: buffer[0] = 0x77;
 14334  0165A4  0E77               	movlw	119
 14335  0165A6  0100               	movlb	0	; () banked
 14336  0165A8  6F87               	movwf	__write_calibration@buffer& (0+255),b
 14337                           
 14338                           ;i2c.c: 625: buffer[1] = 0x55;
 14339  0165AA  0E55               	movlw	85
 14340  0165AC  6F88               	movwf	(__write_calibration@buffer+1)& (0+255),b
 14341                           
 14342                           ;i2c.c: 626: buffer[2] = 0x33;
 14343  0165AE  0E33               	movlw	51
 14344  0165B0  6F89               	movwf	(__write_calibration@buffer+2)& (0+255),b
 14345                           
 14346                           ; BSR set to: 0
 14347                           ;i2c.c: 627: buffer[3] = (uint8_t) index;
 14348  0165B2  C09B  F08A         	movff	__write_calibration@index,__write_calibration@buffer+3
 14349                           
 14350                           ; BSR set to: 0
 14351                           ;i2c.c: 628: ptr = (uint8_t*) &calibrationParameters[index];
 14352  0165B6  519B               	movf	__write_calibration@index& (0+255),w,b
 14353  0165B8  0D0C               	mullw	12
 14354  0165BA  0E18               	movlw	low _calibrationParameters
 14355  0165BC  24F3               	addwf	prodl,w,c
 14356  0165BE  6F99               	movwf	__write_calibration@ptr& (0+255),b
 14357  0165C0  0E03               	movlw	high _calibrationParameters
 14358  0165C2  20F4               	addwfc	prodh,w,c
 14359  0165C4  6F9A               	movwf	(__write_calibration@ptr+1)& (0+255),b
 14360                           
 14361                           ; BSR set to: 0
 14362                           ;i2c.c: 629: for(cntr=4; cntr<16; ++cntr)
 14363  0165C6  0E04               	movlw	4
 14364  0165C8  6F9C               	movwf	__write_calibration@cntr& (0+255),b
 14365  0165CA                     l26617:
 14366                           
 14367                           ; BSR set to: 0
 14368  0165CA  0E0F               	movlw	15
 14369  0165CC  659C               	cpfsgt	__write_calibration@cntr& (0+255),b
 14370  0165CE  D001               	goto	l1440
 14371  0165D0  D012               	goto	u25000
 14372  0165D2                     l1440:
 14373                           
 14374                           ; BSR set to: 0
 14375                           ;i2c.c: 630: {;i2c.c: 631: buffer[cntr] = *ptr;
 14376                           
 14377                           ; BSR set to: 0
 14378  0165D2  C099  FFD9         	movff	__write_calibration@ptr,fsr2l
 14379  0165D6  C09A  FFDA         	movff	__write_calibration@ptr+1,fsr2h
 14380  0165DA  519C               	movf	__write_calibration@cntr& (0+255),w,b
 14381  0165DC  0D01               	mullw	1
 14382  0165DE  0E87               	movlw	low __write_calibration@buffer
 14383  0165E0  24F3               	addwf	prodl,w,c
 14384  0165E2  6EE1               	movwf	fsr1l,c
 14385  0165E4  0E00               	movlw	high __write_calibration@buffer
 14386  0165E6  20F4               	addwfc	prodh,w,c
 14387  0165E8  6EE2               	movwf	fsr1h,c
 14388  0165EA  CFDF FFE7          	movff	indf2,indf1
 14389                           
 14390                           ; BSR set to: 0
 14391                           ;i2c.c: 632: ++ptr;
 14392  0165EE  4B99               	infsnz	__write_calibration@ptr& (0+255),f,b
 14393  0165F0  2B9A               	incf	(__write_calibration@ptr+1)& (0+255),f,b
 14394                           
 14395                           ; BSR set to: 0
 14396  0165F2  2B9C               	incf	__write_calibration@cntr& (0+255),f,b
 14397  0165F4  D7EA               	goto	l26617
 14398  0165F6                     u25000:
 14399                           
 14400                           ; BSR set to: 0
 14401                           ;i2c.c: 633: };i2c.c: 634: addr = 0x0200 + (index<<4);
 14402                           
 14403                           ; BSR set to: 0
 14404  0165F6  519B               	movf	__write_calibration@index& (0+255),w,b
 14405  0165F8  6F85               	movwf	??__write_calibration& (0+255),b
 14406  0165FA  6B86               	clrf	(??__write_calibration+1)& (0+255),b
 14407  0165FC  3B85               	swapf	??__write_calibration& (0+255),f,b
 14408  0165FE  3B86               	swapf	(??__write_calibration+1)& (0+255),f,b
 14409  016600  0EF0               	movlw	240
 14410  016602  1786               	andwf	(??__write_calibration+1)& (0+255),f,b
 14411  016604  5185               	movf	??__write_calibration& (0+255),w,b
 14412  016606  0B0F               	andlw	15
 14413  016608  1386               	iorwf	(??__write_calibration+1)& (0+255),f,b
 14414  01660A  0EF0               	movlw	240
 14415  01660C  1785               	andwf	??__write_calibration& (0+255),f,b
 14416  01660E  0E00               	movlw	0
 14417  016610  2585               	addwf	??__write_calibration& (0+255),w,b
 14418  016612  6F97               	movwf	__write_calibration@addr& (0+255),b
 14419  016614  0E02               	movlw	2
 14420  016616  2186               	addwfc	(??__write_calibration+1)& (0+255),w,b
 14421  016618  6F98               	movwf	(__write_calibration@addr+1)& (0+255),b
 14422                           
 14423                           ; BSR set to: 0
 14424                           ;i2c.c: 635: i2c_eeprom_write(addr, &buffer[0], 16);
 14425  01661A  C097  F06A         	movff	__write_calibration@addr,i2c_eeprom_write@address
 14426  01661E  C098  F06B         	movff	__write_calibration@addr+1,i2c_eeprom_write@address+1
 14427  016622  0E87               	movlw	low __write_calibration@buffer
 14428  016624  6F6C               	movwf	i2c_eeprom_write@data& (0+255),b
 14429  016626  0E00               	movlw	high __write_calibration@buffer
 14430  016628  6F6D               	movwf	(i2c_eeprom_write@data+1)& (0+255),b
 14431  01662A  0E10               	movlw	16
 14432  01662C  6F6E               	movwf	i2c_eeprom_write@length& (0+255),b
 14433  01662E  ECC3  F0B5         	call	_i2c_eeprom_write	;wreg free
 14434  016632  0012               	return		;funcret
 14435  016634                     __end_of__write_calibration:
 14436                           	opt stack 0
 14437                           tblptru	equ	0xFF8
 14438                           tblptrh	equ	0xFF7
 14439                           tblptrl	equ	0xFF6
 14440                           tablat	equ	0xFF5
 14441                           prodh	equ	0xFF4
 14442                           prodl	equ	0xFF3
 14443                           intcon	equ	0xFF2
 14444                           intcon2	equ	0xFF1
 14445                           intcon3	equ	0xFF0
 14446                           postinc0	equ	0xFEE
 14447                           wreg	equ	0xFE8
 14448                           indf1	equ	0xFE7
 14449                           postdec1	equ	0xFE5
 14450                           plusw1	equ	0xFE3
 14451                           fsr1h	equ	0xFE2
 14452                           fsr1l	equ	0xFE1
 14453                           indf2	equ	0xFDF
 14454                           postinc2	equ	0xFDE
 14455                           postdec2	equ	0xFDD
 14456                           plusw2	equ	0xFDB
 14457                           fsr2h	equ	0xFDA
 14458                           fsr2l	equ	0xFD9
 14459                           status	equ	0xFD8
 14460                           
 14461 ;; *************** function _i2c_adc_start *****************
 14462 ;; Defined at:
 14463 ;;		line 452 in file "i2c.c"
 14464 ;; Parameters:    Size  Location     Type
 14465 ;;  channel         1    wreg     enum E6627
 14466 ;;  resolution      1   10[BANK0 ] enum E6633
 14467 ;;  gain            1   11[BANK0 ] enum E6639
 14468 ;; Auto vars:     Size  Location     Type
 14469 ;;  channel         1   12[BANK0 ] enum E6627
 14470 ;;  configuratio    1   13[BANK0 ] unsigned char 
 14471 ;; Return value:  Size  Location     Type
 14472 ;;                  1    wreg      void 
 14473 ;; Registers used:
 14474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14475 ;; Tracked objects:
 14476 ;;		On entry : 0/0
 14477 ;;		On exit  : 0/0
 14478 ;;		Unchanged: 0/0
 14479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14480 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14481 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14483 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14484 ;;Total ram usage:        4 bytes
 14485 ;; Hardware stack levels used:    1
 14486 ;; Hardware stack levels required when called:   12
 14487 ;; This function calls:
 14488 ;;		__i2c_write
 14489 ;;		_i2c_set_frequency
 14490 ;; This function is called by:
 14491 ;;		_main
 14492 ;; This function uses a non-reentrant model
 14493 ;;
 14494                           
 14495                           	psect	text59
 14496  0183C4                     __ptext59:
 14497                           	opt stack 0
 14498  0183C4                     _i2c_adc_start:
 14499                           	opt stack 18
 14500                           
 14501                           ;incstack = 0
 14502                           ;i2c_adc_start@channel stored from wreg
 14503  0183C4  0100               	movlb	0	; () banked
 14504  0183C6  6F6C               	movwf	i2c_adc_start@channel& (0+255),b
 14505                           
 14506                           ;i2c.c: 454: uint8_t configuration_byte;;i2c.c: 455: configuration_byte = 0b10000000;
 14507  0183C8  0E80               	movlw	128
 14508  0183CA  0100               	movlb	0	; () banked
 14509  0183CC  6F6D               	movwf	i2c_adc_start@configuration_byte& (0+255),b
 14510                           
 14511                           ; BSR set to: 0
 14512                           ;i2c.c: 456: configuration_byte |= (channel<<5);
 14513  0183CE  396C               	swapf	i2c_adc_start@channel& (0+255),w,b
 14514  0183D0  46E8               	rlncf	wreg,f,c
 14515  0183D2  0BE0               	andlw	224
 14516  0183D4  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 14517                           
 14518                           ; BSR set to: 0
 14519                           ;i2c.c: 457: configuration_byte |= (resolution<<2);
 14520  0183D6  456A               	rlncf	i2c_adc_start@resolution& (0+255),w,b
 14521  0183D8  46E8               	rlncf	wreg,f,c
 14522  0183DA  0BFC               	andlw	252
 14523  0183DC  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 14524                           
 14525                           ; BSR set to: 0
 14526                           ;i2c.c: 458: configuration_byte |= gain;
 14527  0183DE  516B               	movf	i2c_adc_start@gain& (0+255),w,b
 14528  0183E0  136D               	iorwf	i2c_adc_start@configuration_byte& (0+255),f,b
 14529                           
 14530                           ; BSR set to: 0
 14531                           ;i2c.c: 461: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 14532  0183E2  0E02               	movlw	2
 14533  0183E4  EC4E  F0C3         	call	_i2c_set_frequency
 14534                           
 14535                           ;i2c.c: 463: _i2c_write(0b11010000, &configuration_byte, 1);
 14536  0183E8  0E6D               	movlw	low i2c_adc_start@configuration_byte
 14537  0183EA  0100               	movlb	0	; () banked
 14538  0183EC  6F65               	movwf	__i2c_write@data& (0+255),b
 14539  0183EE  0E00               	movlw	high i2c_adc_start@configuration_byte
 14540  0183F0  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 14541  0183F2  0E01               	movlw	1
 14542  0183F4  6F67               	movwf	__i2c_write@length& (0+255),b
 14543  0183F6  0ED0               	movlw	208
 14544  0183F8  EC65  F0BF         	call	__i2c_write
 14545  0183FC  0012               	return		;funcret
 14546  0183FE                     __end_of_i2c_adc_start:
 14547                           	opt stack 0
 14548                           tblptru	equ	0xFF8
 14549                           tblptrh	equ	0xFF7
 14550                           tblptrl	equ	0xFF6
 14551                           tablat	equ	0xFF5
 14552                           prodh	equ	0xFF4
 14553                           prodl	equ	0xFF3
 14554                           intcon	equ	0xFF2
 14555                           intcon2	equ	0xFF1
 14556                           intcon3	equ	0xFF0
 14557                           postinc0	equ	0xFEE
 14558                           wreg	equ	0xFE8
 14559                           indf1	equ	0xFE7
 14560                           postdec1	equ	0xFE5
 14561                           plusw1	equ	0xFE3
 14562                           fsr1h	equ	0xFE2
 14563                           fsr1l	equ	0xFE1
 14564                           indf2	equ	0xFDF
 14565                           postinc2	equ	0xFDE
 14566                           postdec2	equ	0xFDD
 14567                           plusw2	equ	0xFDB
 14568                           fsr2h	equ	0xFDA
 14569                           fsr2l	equ	0xFD9
 14570                           status	equ	0xFD8
 14571                           
 14572 ;; *************** function _i2c_adc_read *****************
 14573 ;; Defined at:
 14574 ;;		line 466 in file "i2c.c"
 14575 ;; Parameters:    Size  Location     Type
 14576 ;;		None
 14577 ;; Auto vars:     Size  Location     Type
 14578 ;;  result          2    8[BANK0 ] int 
 14579 ;; Return value:  Size  Location     Type
 14580 ;;                  2    5[BANK0 ] int 
 14581 ;; Registers used:
 14582 ;;		wreg, status,2, status,0, cstack
 14583 ;; Tracked objects:
 14584 ;;		On entry : 0/0
 14585 ;;		On exit  : 0/0
 14586 ;;		Unchanged: 0/0
 14587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14588 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14589 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14590 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14591 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14592 ;;Total ram usage:        5 bytes
 14593 ;; Hardware stack levels used:    1
 14594 ;; Hardware stack levels required when called:   11
 14595 ;; This function calls:
 14596 ;;		__i2c_acknowledge
 14597 ;;		__i2c_get
 14598 ;;		__i2c_not_acknowledge
 14599 ;;		__i2c_send
 14600 ;;		__i2c_start
 14601 ;;		__i2c_stop
 14602 ;;		__i2c_wait_idle
 14603 ;;		_i2c_set_frequency
 14604 ;; This function is called by:
 14605 ;;		_main
 14606 ;; This function uses a non-reentrant model
 14607 ;;
 14608                           
 14609                           	psect	text60
 14610  017D30                     __ptext60:
 14611                           	opt stack 0
 14612  017D30                     _i2c_adc_read:
 14613                           	opt stack 19
 14614                           
 14615                           ;i2c.c: 468: int16_t result;;i2c.c: 471: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 14616                           
 14617                           ;incstack = 0
 14618  017D30  0E02               	movlw	2
 14619  017D32  EC4E  F0C3         	call	_i2c_set_frequency
 14620                           
 14621                           ;i2c.c: 473: _i2c_wait_idle();
 14622  017D36  EC03  F0BA         	call	__i2c_wait_idle	;wreg free
 14623                           
 14624                           ;i2c.c: 474: _i2c_start();
 14625  017D3A  EC7B  F0C8         	call	__i2c_start	;wreg free
 14626                           
 14627                           ;i2c.c: 475: _i2c_wait_idle();
 14628  017D3E  EC03  F0BA         	call	__i2c_wait_idle	;wreg free
 14629                           
 14630                           ;i2c.c: 476: _i2c_send(0b11010000 | 0x01);
 14631  017D42  0ED1               	movlw	209
 14632  017D44  EC72  F0C8         	call	__i2c_send
 14633                           
 14634                           ;i2c.c: 477: _i2c_wait_idle();
 14635  017D48  EC03  F0BA         	call	__i2c_wait_idle	;wreg free
 14636                           
 14637                           ;i2c.c: 478: result = _i2c_get();
 14638  017D4C  EC63  F0C8         	call	__i2c_get	;wreg free
 14639  017D50  0100               	movlb	0	; () banked
 14640  017D52  6F67               	movwf	??_i2c_adc_read& (0+255),b
 14641  017D54  5167               	movf	??_i2c_adc_read& (0+255),w,b
 14642  017D56  6F68               	movwf	i2c_adc_read@result& (0+255),b
 14643  017D58  6B69               	clrf	(i2c_adc_read@result+1)& (0+255),b
 14644                           
 14645                           ; BSR set to: 0
 14646                           ;i2c.c: 479: result <<= 8;
 14647  017D5A  5168               	movf	i2c_adc_read@result& (0+255),w,b
 14648  017D5C  6F69               	movwf	(i2c_adc_read@result+1)& (0+255),b
 14649  017D5E  6B68               	clrf	i2c_adc_read@result& (0+255),b
 14650                           
 14651                           ; BSR set to: 0
 14652                           ;i2c.c: 480: _i2c_acknowledge();
 14653  017D60  EC68  F0C8         	call	__i2c_acknowledge	;wreg free
 14654                           
 14655                           ;i2c.c: 481: result |= _i2c_get();
 14656  017D64  EC63  F0C8         	call	__i2c_get	;wreg free
 14657  017D68  0100               	movlb	0	; () banked
 14658  017D6A  6F67               	movwf	??_i2c_adc_read& (0+255),b
 14659  017D6C  5167               	movf	??_i2c_adc_read& (0+255),w,b
 14660  017D6E  1368               	iorwf	i2c_adc_read@result& (0+255),f,b
 14661                           
 14662                           ; BSR set to: 0
 14663                           ;i2c.c: 482: _i2c_not_acknowledge();
 14664  017D70  EC5E  F0C8         	call	__i2c_not_acknowledge	;wreg free
 14665                           
 14666                           ;i2c.c: 483: _i2c_stop();
 14667  017D74  EC77  F0C8         	call	__i2c_stop	;wreg free
 14668                           
 14669                           ;i2c.c: 485: return result;
 14670  017D78  C068  F065         	movff	i2c_adc_read@result,?_i2c_adc_read
 14671  017D7C  C069  F066         	movff	i2c_adc_read@result+1,?_i2c_adc_read+1
 14672  017D80  0012               	return	
 14673  017D82                     __end_of_i2c_adc_read:
 14674                           	opt stack 0
 14675                           tblptru	equ	0xFF8
 14676                           tblptrh	equ	0xFF7
 14677                           tblptrl	equ	0xFF6
 14678                           tablat	equ	0xFF5
 14679                           prodh	equ	0xFF4
 14680                           prodl	equ	0xFF3
 14681                           intcon	equ	0xFF2
 14682                           intcon2	equ	0xFF1
 14683                           intcon3	equ	0xFF0
 14684                           postinc0	equ	0xFEE
 14685                           wreg	equ	0xFE8
 14686                           indf1	equ	0xFE7
 14687                           postdec1	equ	0xFE5
 14688                           plusw1	equ	0xFE3
 14689                           fsr1h	equ	0xFE2
 14690                           fsr1l	equ	0xFE1
 14691                           indf2	equ	0xFDF
 14692                           postinc2	equ	0xFDE
 14693                           postdec2	equ	0xFDD
 14694                           plusw2	equ	0xFDB
 14695                           fsr2h	equ	0xFDA
 14696                           fsr2l	equ	0xFD9
 14697                           status	equ	0xFD8
 14698                           
 14699 ;; *************** function __i2c_not_acknowledge *****************
 14700 ;; Defined at:
 14701 ;;		line 98 in file "i2c.c"
 14702 ;; Parameters:    Size  Location     Type
 14703 ;;		None
 14704 ;; Auto vars:     Size  Location     Type
 14705 ;;		None
 14706 ;; Return value:  Size  Location     Type
 14707 ;;                  1    wreg      void 
 14708 ;; Registers used:
 14709 ;;		None
 14710 ;; Tracked objects:
 14711 ;;		On entry : 0/0
 14712 ;;		On exit  : 0/0
 14713 ;;		Unchanged: 0/0
 14714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14719 ;;Total ram usage:        0 bytes
 14720 ;; Hardware stack levels used:    1
 14721 ;; Hardware stack levels required when called:   10
 14722 ;; This function calls:
 14723 ;;		Nothing
 14724 ;; This function is called by:
 14725 ;;		__i2c_read
 14726 ;;		_i2c_adc_read
 14727 ;; This function uses a non-reentrant model
 14728 ;;
 14729                           
 14730                           	psect	text61
 14731  0190BC                     __ptext61:
 14732                           	opt stack 0
 14733  0190BC                     __i2c_not_acknowledge:
 14734                           	opt stack 15
 14735                           
 14736                           ;i2c.c: 100: SSP1CON2bits.ACKDT = 1;
 14737                           
 14738                           ;incstack = 0
 14739  0190BC  8AC5               	bsf	4037,5,c	;volatile
 14740                           
 14741                           ;i2c.c: 101: SSP1CON2bits.ACKEN = 1;
 14742  0190BE  88C5               	bsf	4037,4,c	;volatile
 14743  0190C0  A8C5               	btfss	4037,4,c	;volatile
 14744  0190C2  0012               	return	
 14745  0190C4  D7FD               	goto	l1322
 14746  0190C6                     __end_of__i2c_not_acknowledge:
 14747                           	opt stack 0
 14748                           tblptru	equ	0xFF8
 14749                           tblptrh	equ	0xFF7
 14750                           tblptrl	equ	0xFF6
 14751                           tablat	equ	0xFF5
 14752                           prodh	equ	0xFF4
 14753                           prodl	equ	0xFF3
 14754                           intcon	equ	0xFF2
 14755                           intcon2	equ	0xFF1
 14756                           intcon3	equ	0xFF0
 14757                           postinc0	equ	0xFEE
 14758                           wreg	equ	0xFE8
 14759                           indf1	equ	0xFE7
 14760                           postdec1	equ	0xFE5
 14761                           plusw1	equ	0xFE3
 14762                           fsr1h	equ	0xFE2
 14763                           fsr1l	equ	0xFE1
 14764                           indf2	equ	0xFDF
 14765                           postinc2	equ	0xFDE
 14766                           postdec2	equ	0xFDD
 14767                           plusw2	equ	0xFDB
 14768                           fsr2h	equ	0xFDA
 14769                           fsr2l	equ	0xFD9
 14770                           status	equ	0xFD8
 14771                           
 14772 ;; *************** function __i2c_get *****************
 14773 ;; Defined at:
 14774 ;;		line 75 in file "i2c.c"
 14775 ;; Parameters:    Size  Location     Type
 14776 ;;		None
 14777 ;; Auto vars:     Size  Location     Type
 14778 ;;		None
 14779 ;; Return value:  Size  Location     Type
 14780 ;;                  1    wreg      unsigned char 
 14781 ;; Registers used:
 14782 ;;		wreg, status,2
 14783 ;; Tracked objects:
 14784 ;;		On entry : 0/0
 14785 ;;		On exit  : 0/0
 14786 ;;		Unchanged: 0/0
 14787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14792 ;;Total ram usage:        0 bytes
 14793 ;; Hardware stack levels used:    1
 14794 ;; Hardware stack levels required when called:   10
 14795 ;; This function calls:
 14796 ;;		Nothing
 14797 ;; This function is called by:
 14798 ;;		__i2c_read
 14799 ;;		_i2c_adc_read
 14800 ;; This function uses a non-reentrant model
 14801 ;;
 14802                           
 14803                           	psect	text62
 14804  0190C6                     __ptext62:
 14805                           	opt stack 0
 14806  0190C6                     __i2c_get:
 14807                           	opt stack 15
 14808                           
 14809                           ;i2c.c: 77: SSP1CON2bits.RCEN = 1 ;
 14810                           
 14811                           ;incstack = 0
 14812  0190C6  86C5               	bsf	4037,3,c	;volatile
 14813  0190C8  B6C5               	btfsc	4037,3,c	;volatile
 14814  0190CA  D7FE               	goto	l1304
 14815                           
 14816                           ;i2c.c: 79: return SSP1BUF;
 14817  0190CC  50C9               	movf	4041,w,c	;volatile
 14818  0190CE  0012               	return	
 14819  0190D0                     __end_of__i2c_get:
 14820                           	opt stack 0
 14821                           tblptru	equ	0xFF8
 14822                           tblptrh	equ	0xFF7
 14823                           tblptrl	equ	0xFF6
 14824                           tablat	equ	0xFF5
 14825                           prodh	equ	0xFF4
 14826                           prodl	equ	0xFF3
 14827                           intcon	equ	0xFF2
 14828                           intcon2	equ	0xFF1
 14829                           intcon3	equ	0xFF0
 14830                           postinc0	equ	0xFEE
 14831                           wreg	equ	0xFE8
 14832                           indf1	equ	0xFE7
 14833                           postdec1	equ	0xFE5
 14834                           plusw1	equ	0xFE3
 14835                           fsr1h	equ	0xFE2
 14836                           fsr1l	equ	0xFE1
 14837                           indf2	equ	0xFDF
 14838                           postinc2	equ	0xFDE
 14839                           postdec2	equ	0xFDD
 14840                           plusw2	equ	0xFDB
 14841                           fsr2h	equ	0xFDA
 14842                           fsr2l	equ	0xFD9
 14843                           status	equ	0xFD8
 14844                           
 14845 ;; *************** function __i2c_acknowledge *****************
 14846 ;; Defined at:
 14847 ;;		line 90 in file "i2c.c"
 14848 ;; Parameters:    Size  Location     Type
 14849 ;;		None
 14850 ;; Auto vars:     Size  Location     Type
 14851 ;;		None
 14852 ;; Return value:  Size  Location     Type
 14853 ;;                  1    wreg      void 
 14854 ;; Registers used:
 14855 ;;		None
 14856 ;; Tracked objects:
 14857 ;;		On entry : 0/0
 14858 ;;		On exit  : 0/0
 14859 ;;		Unchanged: 0/0
 14860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14865 ;;Total ram usage:        0 bytes
 14866 ;; Hardware stack levels used:    1
 14867 ;; Hardware stack levels required when called:   10
 14868 ;; This function calls:
 14869 ;;		Nothing
 14870 ;; This function is called by:
 14871 ;;		__i2c_read
 14872 ;;		_i2c_adc_read
 14873 ;; This function uses a non-reentrant model
 14874 ;;
 14875                           
 14876                           	psect	text63
 14877  0190D0                     __ptext63:
 14878                           	opt stack 0
 14879  0190D0                     __i2c_acknowledge:
 14880                           	opt stack 15
 14881                           
 14882                           ;i2c.c: 92: SSP1CON2bits.ACKDT = 0;
 14883                           
 14884                           ;incstack = 0
 14885  0190D0  9AC5               	bcf	4037,5,c	;volatile
 14886                           
 14887                           ;i2c.c: 93: SSP1CON2bits.ACKEN = 1;
 14888  0190D2  88C5               	bsf	4037,4,c	;volatile
 14889  0190D4  A8C5               	btfss	4037,4,c	;volatile
 14890  0190D6  0012               	return	
 14891  0190D8  D7FD               	goto	l1316
 14892  0190DA                     __end_of__i2c_acknowledge:
 14893                           	opt stack 0
 14894                           tblptru	equ	0xFF8
 14895                           tblptrh	equ	0xFF7
 14896                           tblptrl	equ	0xFF6
 14897                           tablat	equ	0xFF5
 14898                           prodh	equ	0xFF4
 14899                           prodl	equ	0xFF3
 14900                           intcon	equ	0xFF2
 14901                           intcon2	equ	0xFF1
 14902                           intcon3	equ	0xFF0
 14903                           postinc0	equ	0xFEE
 14904                           wreg	equ	0xFE8
 14905                           indf1	equ	0xFE7
 14906                           postdec1	equ	0xFE5
 14907                           plusw1	equ	0xFE3
 14908                           fsr1h	equ	0xFE2
 14909                           fsr1l	equ	0xFE1
 14910                           indf2	equ	0xFDF
 14911                           postinc2	equ	0xFDE
 14912                           postdec2	equ	0xFDD
 14913                           plusw2	equ	0xFDB
 14914                           fsr2h	equ	0xFDA
 14915                           fsr2l	equ	0xFD9
 14916                           status	equ	0xFD8
 14917                           
 14918 ;; *************** function _display_update *****************
 14919 ;; Defined at:
 14920 ;;		line 243 in file "display.c"
 14921 ;; Parameters:    Size  Location     Type
 14922 ;;		None
 14923 ;; Auto vars:     Size  Location     Type
 14924 ;;		None
 14925 ;; Return value:  Size  Location     Type
 14926 ;;                  1    wreg      void 
 14927 ;; Registers used:
 14928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14929 ;; Tracked objects:
 14930 ;;		On entry : 0/0
 14931 ;;		On exit  : 0/0
 14932 ;;		Unchanged: 0/0
 14933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14938 ;;Total ram usage:        0 bytes
 14939 ;; Hardware stack levels used:    1
 14940 ;; Hardware stack levels required when called:   14
 14941 ;; This function calls:
 14942 ;;		_i2c_display_cursor
 14943 ;;		_i2c_display_write_fixed
 14944 ;; This function is called by:
 14945 ;;		_main
 14946 ;; This function uses a non-reentrant model
 14947 ;;
 14948                           
 14949                           	psect	text64
 14950  016D04                     __ptext64:
 14951                           	opt stack 0
 14952  016D04                     _display_update:
 14953                           	opt stack 16
 14954                           
 14955                           ;display.c: 245: i2c_display_cursor(0, 0);
 14956                           
 14957                           ;incstack = 0
 14958  016D04  0E00               	movlw	0
 14959  016D06  0100               	movlb	0	; () banked
 14960  016D08  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 14961  016D0A  0E00               	movlw	0
 14962  016D0C  ECBB  F0C4         	call	_i2c_display_cursor
 14963                           
 14964                           ;display.c: 246: i2c_display_write_fixed(&display_content[0][0], 20);
 14965  016D10  0E6C               	movlw	low _display_content
 14966  016D12  0100               	movlb	0	; () banked
 14967  016D14  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 14968  016D16  0E03               	movlw	high _display_content
 14969  016D18  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 14970  016D1A  0E14               	movlw	20
 14971  016D1C  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 14972  016D1E  ECDE  F0BB         	call	_i2c_display_write_fixed	;wreg free
 14973                           
 14974                           ;display.c: 247: i2c_display_cursor(1, 0);
 14975  016D22  0E00               	movlw	0
 14976  016D24  0100               	movlb	0	; () banked
 14977  016D26  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 14978  016D28  0E01               	movlw	1
 14979  016D2A  ECBB  F0C4         	call	_i2c_display_cursor
 14980                           
 14981                           ;display.c: 248: i2c_display_write_fixed(&display_content[1][0], 20);
 14982  016D2E  0E80               	movlw	low (_display_content+20)
 14983  016D30  0100               	movlb	0	; () banked
 14984  016D32  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 14985  016D34  0E03               	movlw	high (_display_content+20)
 14986  016D36  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 14987  016D38  0E14               	movlw	20
 14988  016D3A  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 14989  016D3C  ECDE  F0BB         	call	_i2c_display_write_fixed	;wreg free
 14990                           
 14991                           ;display.c: 249: i2c_display_cursor(2, 0);
 14992  016D40  0E00               	movlw	0
 14993  016D42  0100               	movlb	0	; () banked
 14994  016D44  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 14995  016D46  0E02               	movlw	2
 14996  016D48  ECBB  F0C4         	call	_i2c_display_cursor
 14997                           
 14998                           ;display.c: 250: i2c_display_write_fixed(&display_content[2][0], 20);
 14999  016D4C  0E94               	movlw	low (_display_content+40)
 15000  016D4E  0100               	movlb	0	; () banked
 15001  016D50  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 15002  016D52  0E03               	movlw	high (_display_content+40)
 15003  016D54  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 15004  016D56  0E14               	movlw	20
 15005  016D58  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 15006  016D5A  ECDE  F0BB         	call	_i2c_display_write_fixed	;wreg free
 15007                           
 15008                           ;display.c: 251: i2c_display_cursor(3, 0);
 15009  016D5E  0E00               	movlw	0
 15010  016D60  0100               	movlb	0	; () banked
 15011  016D62  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 15012  016D64  0E03               	movlw	3
 15013  016D66  ECBB  F0C4         	call	_i2c_display_cursor
 15014                           
 15015                           ;display.c: 252: i2c_display_write_fixed(&display_content[3][0], 20);
 15016  016D6A  0EA8               	movlw	low (_display_content+60)
 15017  016D6C  0100               	movlb	0	; () banked
 15018  016D6E  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 15019  016D70  0E03               	movlw	high (_display_content+60)
 15020  016D72  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 15021  016D74  0E14               	movlw	20
 15022  016D76  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 15023  016D78  ECDE  F0BB         	call	_i2c_display_write_fixed	;wreg free
 15024  016D7C  0012               	return		;funcret
 15025  016D7E                     __end_of_display_update:
 15026                           	opt stack 0
 15027                           tblptru	equ	0xFF8
 15028                           tblptrh	equ	0xFF7
 15029                           tblptrl	equ	0xFF6
 15030                           tablat	equ	0xFF5
 15031                           prodh	equ	0xFF4
 15032                           prodl	equ	0xFF3
 15033                           intcon	equ	0xFF2
 15034                           intcon2	equ	0xFF1
 15035                           intcon3	equ	0xFF0
 15036                           postinc0	equ	0xFEE
 15037                           wreg	equ	0xFE8
 15038                           indf1	equ	0xFE7
 15039                           postdec1	equ	0xFE5
 15040                           plusw1	equ	0xFE3
 15041                           fsr1h	equ	0xFE2
 15042                           fsr1l	equ	0xFE1
 15043                           indf2	equ	0xFDF
 15044                           postinc2	equ	0xFDE
 15045                           postdec2	equ	0xFDD
 15046                           plusw2	equ	0xFDB
 15047                           fsr2h	equ	0xFDA
 15048                           fsr2l	equ	0xFD9
 15049                           status	equ	0xFD8
 15050                           
 15051 ;; *************** function _i2c_display_write_fixed *****************
 15052 ;; Defined at:
 15053 ;;		line 278 in file "i2c.c"
 15054 ;; Parameters:    Size  Location     Type
 15055 ;;  data            2    5[BANK0 ] PTR unsigned char 
 15056 ;;		 -> display_content(80), 
 15057 ;;  length          1    7[BANK0 ] unsigned char 
 15058 ;; Auto vars:     Size  Location     Type
 15059 ;;  pos             1    8[BANK0 ] unsigned char 
 15060 ;; Return value:  Size  Location     Type
 15061 ;;                  1    wreg      void 
 15062 ;; Registers used:
 15063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15064 ;; Tracked objects:
 15065 ;;		On entry : 0/0
 15066 ;;		On exit  : 0/0
 15067 ;;		Unchanged: 0/0
 15068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15069 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15070 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15072 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15073 ;;Total ram usage:        4 bytes
 15074 ;; Hardware stack levels used:    1
 15075 ;; Hardware stack levels required when called:   11
 15076 ;; This function calls:
 15077 ;;		__i2c_send
 15078 ;;		__i2c_start
 15079 ;;		__i2c_stop
 15080 ;;		__i2c_wait_idle
 15081 ;;		_i2c_set_frequency
 15082 ;; This function is called by:
 15083 ;;		_display_update
 15084 ;; This function uses a non-reentrant model
 15085 ;;
 15086                           
 15087                           	psect	text65
 15088  0177BC                     __ptext65:
 15089                           	opt stack 0
 15090  0177BC                     _i2c_display_write_fixed:
 15091                           	opt stack 18
 15092                           
 15093                           ;i2c.c: 280: uint8_t pos;;i2c.c: 283: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 15094                           
 15095                           ;incstack = 0
 15096  0177BC  0E02               	movlw	2
 15097  0177BE  EC4E  F0C3         	call	_i2c_set_frequency
 15098                           
 15099                           ;i2c.c: 285: _i2c_wait_idle();
 15100  0177C2  EC03  F0BA         	call	__i2c_wait_idle	;wreg free
 15101                           
 15102                           ;i2c.c: 286: _i2c_start();
 15103  0177C6  EC7B  F0C8         	call	__i2c_start	;wreg free
 15104                           
 15105                           ;i2c.c: 287: _i2c_wait_idle();
 15106  0177CA  EC03  F0BA         	call	__i2c_wait_idle	;wreg free
 15107                           
 15108                           ;i2c.c: 288: _i2c_send(0b01111000);
 15109  0177CE  0E78               	movlw	120
 15110  0177D0  EC72  F0C8         	call	__i2c_send
 15111                           
 15112                           ;i2c.c: 289: _i2c_wait_idle();
 15113  0177D4  EC03  F0BA         	call	__i2c_wait_idle	;wreg free
 15114                           
 15115                           ;i2c.c: 290: _i2c_send(0b01000000);
 15116  0177D8  0E40               	movlw	64
 15117  0177DA  EC72  F0C8         	call	__i2c_send
 15118                           
 15119                           ;i2c.c: 291: _i2c_wait_idle();
 15120  0177DE  EC03  F0BA         	call	__i2c_wait_idle	;wreg free
 15121                           
 15122                           ;i2c.c: 294: for(pos=0; pos<length; ++pos)
 15123  0177E2  0E00               	movlw	0
 15124  0177E4  0100               	movlb	0	; () banked
 15125  0177E6  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 15126  0177E8  D00F               	goto	l1373
 15127  0177EA                     
 15128                           ; BSR set to: 0
 15129                           ;i2c.c: 295: {;i2c.c: 296: _i2c_send(data[pos]);
 15130                           
 15131                           ; BSR set to: 0
 15132  0177EA  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 15133  0177EC  0D01               	mullw	1
 15134  0177EE  50F3               	movf	prodl,w,c
 15135  0177F0  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 15136  0177F2  6ED9               	movwf	fsr2l,c
 15137  0177F4  50F4               	movf	prodh,w,c
 15138  0177F6  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 15139  0177F8  6EDA               	movwf	fsr2h,c
 15140  0177FA  50DF               	movf	indf2,w,c
 15141  0177FC  EC72  F0C8         	call	__i2c_send
 15142                           
 15143                           ;i2c.c: 297: _i2c_wait_idle();
 15144  017800  EC03  F0BA         	call	__i2c_wait_idle	;wreg free
 15145  017804  0100               	movlb	0	; () banked
 15146  017806  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 15147  017808                     l1373:
 15148                           
 15149                           ; BSR set to: 0
 15150                           
 15151                           ; BSR set to: 0
 15152  017808  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 15153  01780A  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 15154  01780C  A0D8               	btfss	status,0,c
 15155  01780E  D7ED               	goto	l1374
 15156                           
 15157                           ; BSR set to: 0
 15158                           ;i2c.c: 298: };i2c.c: 300: _i2c_stop();
 15159                           
 15160                           ; BSR set to: 0
 15161  017810  EC77  F0C8         	call	__i2c_stop	;wreg free
 15162  017814  0012               	return		;funcret
 15163  017816                     __end_of_i2c_display_write_fixed:
 15164                           	opt stack 0
 15165                           tblptru	equ	0xFF8
 15166                           tblptrh	equ	0xFF7
 15167                           tblptrl	equ	0xFF6
 15168                           tablat	equ	0xFF5
 15169                           prodh	equ	0xFF4
 15170                           prodl	equ	0xFF3
 15171                           intcon	equ	0xFF2
 15172                           intcon2	equ	0xFF1
 15173                           intcon3	equ	0xFF0
 15174                           postinc0	equ	0xFEE
 15175                           wreg	equ	0xFE8
 15176                           indf1	equ	0xFE7
 15177                           postdec1	equ	0xFE5
 15178                           plusw1	equ	0xFE3
 15179                           fsr1h	equ	0xFE2
 15180                           fsr1l	equ	0xFE1
 15181                           indf2	equ	0xFDF
 15182                           postinc2	equ	0xFDE
 15183                           postdec2	equ	0xFDD
 15184                           plusw2	equ	0xFDB
 15185                           fsr2h	equ	0xFDA
 15186                           fsr2l	equ	0xFD9
 15187                           status	equ	0xFD8
 15188                           
 15189 ;; *************** function _i2c_display_cursor *****************
 15190 ;; Defined at:
 15191 ;;		line 238 in file "i2c.c"
 15192 ;; Parameters:    Size  Location     Type
 15193 ;;  line            1    wreg     unsigned char 
 15194 ;;  position        1   13[BANK0 ] unsigned char 
 15195 ;; Auto vars:     Size  Location     Type
 15196 ;;  line            1   14[BANK0 ] unsigned char 
 15197 ;;  address         1   15[BANK0 ] unsigned char 
 15198 ;; Return value:  Size  Location     Type
 15199 ;;                  1    wreg      void 
 15200 ;; Registers used:
 15201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15202 ;; Tracked objects:
 15203 ;;		On entry : 0/0
 15204 ;;		On exit  : 0/0
 15205 ;;		Unchanged: 0/0
 15206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15207 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15208 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15210 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15211 ;;Total ram usage:        3 bytes
 15212 ;; Hardware stack levels used:    1
 15213 ;; Hardware stack levels required when called:   13
 15214 ;; This function calls:
 15215 ;;		__ic2_display_set_address
 15216 ;;		_i2c_set_frequency
 15217 ;; This function is called by:
 15218 ;;		_display_update
 15219 ;; This function uses a non-reentrant model
 15220 ;;
 15221                           
 15222                           	psect	text66
 15223  018976                     __ptext66:
 15224                           	opt stack 0
 15225  018976                     _i2c_display_cursor:
 15226                           	opt stack 16
 15227                           
 15228                           ;incstack = 0
 15229                           ;i2c_display_cursor@line stored from wreg
 15230  018976  0100               	movlb	0	; () banked
 15231  018978  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 15232                           
 15233                           ;i2c.c: 240: uint8_t address;;i2c.c: 243: line &= 0b11;
 15234  01897A  0E03               	movlw	3
 15235  01897C  0100               	movlb	0	; () banked
 15236  01897E  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 15237                           
 15238                           ;i2c.c: 244: address = line<<5;
 15239  018980  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 15240  018982  46E8               	rlncf	wreg,f,c
 15241  018984  0BE0               	andlw	224
 15242  018986  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 15243                           
 15244                           ;i2c.c: 245: position &= 0b11111;
 15245  018988  0E1F               	movlw	31
 15246  01898A  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 15247                           
 15248                           ;i2c.c: 246: address |= position;
 15249  01898C  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 15250  01898E  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 15251                           
 15252                           ; BSR set to: 0
 15253                           ;i2c.c: 249: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 15254  018990  0E02               	movlw	2
 15255  018992  EC4E  F0C3         	call	_i2c_set_frequency
 15256                           
 15257                           ;i2c.c: 252: _ic2_display_set_address(address);
 15258  018996  0100               	movlb	0	; () banked
 15259  018998  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 15260  01899A  EC63  F0C4         	call	__ic2_display_set_address
 15261  01899E  0012               	return		;funcret
 15262  0189A0                     __end_of_i2c_display_cursor:
 15263                           	opt stack 0
 15264                           tblptru	equ	0xFF8
 15265                           tblptrh	equ	0xFF7
 15266                           tblptrl	equ	0xFF6
 15267                           tablat	equ	0xFF5
 15268                           prodh	equ	0xFF4
 15269                           prodl	equ	0xFF3
 15270                           intcon	equ	0xFF2
 15271                           intcon2	equ	0xFF1
 15272                           intcon3	equ	0xFF0
 15273                           postinc0	equ	0xFEE
 15274                           wreg	equ	0xFE8
 15275                           indf1	equ	0xFE7
 15276                           postdec1	equ	0xFE5
 15277                           plusw1	equ	0xFE3
 15278                           fsr1h	equ	0xFE2
 15279                           fsr1l	equ	0xFE1
 15280                           indf2	equ	0xFDF
 15281                           postinc2	equ	0xFDE
 15282                           postdec2	equ	0xFDD
 15283                           plusw2	equ	0xFDB
 15284                           fsr2h	equ	0xFDA
 15285                           fsr2l	equ	0xFD9
 15286                           status	equ	0xFD8
 15287                           
 15288 ;; *************** function __ic2_display_set_address *****************
 15289 ;; Defined at:
 15290 ;;		line 202 in file "i2c.c"
 15291 ;; Parameters:    Size  Location     Type
 15292 ;;  address         1    wreg     unsigned char 
 15293 ;; Auto vars:     Size  Location     Type
 15294 ;;  address         1   10[BANK0 ] unsigned char 
 15295 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 15296 ;; Return value:  Size  Location     Type
 15297 ;;                  1    wreg      void 
 15298 ;; Registers used:
 15299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15300 ;; Tracked objects:
 15301 ;;		On entry : 0/0
 15302 ;;		On exit  : 0/0
 15303 ;;		Unchanged: 0/0
 15304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15306 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15308 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15309 ;;Total ram usage:        3 bytes
 15310 ;; Hardware stack levels used:    1
 15311 ;; Hardware stack levels required when called:   12
 15312 ;; This function calls:
 15313 ;;		__i2c_write
 15314 ;;		_i2c_set_frequency
 15315 ;; This function is called by:
 15316 ;;		_i2c_display_cursor
 15317 ;; This function uses a non-reentrant model
 15318 ;;
 15319                           
 15320                           	psect	text67
 15321  0188C6                     __ptext67:
 15322                           	opt stack 0
 15323  0188C6                     __ic2_display_set_address:
 15324                           	opt stack 16
 15325                           
 15326                           ;incstack = 0
 15327                           ;__ic2_display_set_address@address stored from wreg
 15328  0188C6  0100               	movlb	0	; () banked
 15329  0188C8  6F6A               	movwf	__ic2_display_set_address@address& (0+255),b
 15330                           
 15331                           ;i2c.c: 204: uint8_t data_array[2];;i2c.c: 205: data_array[0] = 0b00000000;
 15332  0188CA  0E00               	movlw	0
 15333  0188CC  0100               	movlb	0	; () banked
 15334  0188CE  6F6B               	movwf	__ic2_display_set_address@data_array& (0+255),b
 15335                           
 15336                           ; BSR set to: 0
 15337                           ;i2c.c: 206: data_array[1] = 0b10000000 | address;
 15338  0188D0  516A               	movf	__ic2_display_set_address@address& (0+255),w,b
 15339  0188D2  0980               	iorlw	128
 15340  0188D4  6F6C               	movwf	(__ic2_display_set_address@data_array+1)& (0+255),b
 15341                           
 15342                           ; BSR set to: 0
 15343                           ;i2c.c: 209: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 15344  0188D6  0E02               	movlw	2
 15345  0188D8  EC4E  F0C3         	call	_i2c_set_frequency
 15346                           
 15347                           ;i2c.c: 212: _i2c_write(0b01111000, &data_array[0], 2);
 15348  0188DC  0E6B               	movlw	low __ic2_display_set_address@data_array
 15349  0188DE  0100               	movlb	0	; () banked
 15350  0188E0  6F65               	movwf	__i2c_write@data& (0+255),b
 15351  0188E2  0E00               	movlw	high __ic2_display_set_address@data_array
 15352  0188E4  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 15353  0188E6  0E02               	movlw	2
 15354  0188E8  6F67               	movwf	__i2c_write@length& (0+255),b
 15355  0188EA  0E78               	movlw	120
 15356  0188EC  EC65  F0BF         	call	__i2c_write
 15357  0188F0  0012               	return		;funcret
 15358  0188F2                     __end_of__ic2_display_set_address:
 15359                           	opt stack 0
 15360                           tblptru	equ	0xFF8
 15361                           tblptrh	equ	0xFF7
 15362                           tblptrl	equ	0xFF6
 15363                           tablat	equ	0xFF5
 15364                           prodh	equ	0xFF4
 15365                           prodl	equ	0xFF3
 15366                           intcon	equ	0xFF2
 15367                           intcon2	equ	0xFF1
 15368                           intcon3	equ	0xFF0
 15369                           postinc0	equ	0xFEE
 15370                           wreg	equ	0xFE8
 15371                           indf1	equ	0xFE7
 15372                           postdec1	equ	0xFE5
 15373                           plusw1	equ	0xFE3
 15374                           fsr1h	equ	0xFE2
 15375                           fsr1l	equ	0xFE1
 15376                           indf2	equ	0xFDF
 15377                           postinc2	equ	0xFDE
 15378                           postdec2	equ	0xFDD
 15379                           plusw2	equ	0xFDB
 15380                           fsr2h	equ	0xFDA
 15381                           fsr2l	equ	0xFD9
 15382                           status	equ	0xFD8
 15383                           
 15384 ;; *************** function _display_prepare *****************
 15385 ;; Defined at:
 15386 ;;		line 143 in file "display.c"
 15387 ;; Parameters:    Size  Location     Type
 15388 ;;  mode            1    wreg     unsigned char 
 15389 ;; Auto vars:     Size  Location     Type
 15390 ;;  mode            1  117[BANK0 ] unsigned char 
 15391 ;; Return value:  Size  Location     Type
 15392 ;;                  1    wreg      void 
 15393 ;; Registers used:
 15394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15395 ;; Tracked objects:
 15396 ;;		On entry : 0/0
 15397 ;;		On exit  : 0/0
 15398 ;;		Unchanged: 0/0
 15399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15402 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15403 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15404 ;;Total ram usage:        3 bytes
 15405 ;; Hardware stack levels used:    1
 15406 ;; Hardware stack levels required when called:   15
 15407 ;; This function calls:
 15408 ;;		__display_charger
 15409 ;;		__display_clear
 15410 ;;		__display_efficiency
 15411 ;;		__display_inout
 15412 ;;		__display_outputs
 15413 ;;		__display_startup
 15414 ;;		__display_temperature
 15415 ;;		__display_time
 15416 ;;		__display_usb
 15417 ;; This function is called by:
 15418 ;;		_main
 15419 ;; This function uses a non-reentrant model
 15420 ;;
 15421                           
 15422                           	psect	text68
 15423  016048                     __ptext68:
 15424                           	opt stack 0
 15425  016048                     _display_prepare:
 15426                           	opt stack 15
 15427                           
 15428                           ;incstack = 0
 15429                           ;display_prepare@mode stored from wreg
 15430  016048  0100               	movlb	0	; () banked
 15431  01604A  6FD5               	movwf	display_prepare@mode& (0+255),b
 15432                           
 15433                           ;display.c: 145: _display_clear();
 15434  01604C  EC2A  F0C0         	call	__display_clear	;wreg free
 15435                           
 15436                           ;display.c: 147: switch(mode&0xF0)
 15437  016050  D027               	goto	l1738
 15438  016052                     
 15439                           ;display.c: 150: _display_startup();
 15440  016052  EC59  F086         	call	__display_startup	;wreg free
 15441                           
 15442                           ;display.c: 151: ++startup_timer;
 15443  016056  0101               	movlb	1	; () banked
 15444  016058  2BF1               	incf	_startup_timer& (0+255),f,b
 15445                           
 15446                           ; BSR set to: 1
 15447                           ;display.c: 152: if(startup_timer>30)
 15448  01605A  0E1E               	movlw	30
 15449  01605C  65F1               	cpfsgt	_startup_timer& (0+255),b
 15450  01605E  0012               	return	
 15451                           
 15452                           ; BSR set to: 1
 15453                           ;display.c: 153: {;display.c: 154: os.display_mode = DISPLAY_MODE_OVERVIEW;
 15454  016060  0E00               	movlw	0
 15455  016062  0102               	movlb	2	; () banked
 15456  016064  6F40               	movwf	(_os+64)& (0+255),b	;volatile
 15457                           
 15458                           ; BSR set to: 2
 15459                           ;display.c: 155: };display.c: 156: break;
 15460  016066  0012               	return	
 15461  016068                     
 15462                           ;display.c: 158: _display_inout();
 15463                           
 15464                           ; BSR set to: 2
 15465  016068  EC4C  F088         	call	__display_inout	;wreg free
 15466                           
 15467                           ;display.c: 159: break;
 15468  01606C  0012               	return	
 15469  01606E                     
 15470                           ;display.c: 161: _display_time(mode);
 15471  01606E  0100               	movlb	0	; () banked
 15472  016070  51D5               	movf	display_prepare@mode& (0+255),w,b
 15473  016072  EC49  F062         	call	__display_time
 15474                           
 15475                           ;display.c: 162: break;
 15476  016076  0012               	return	
 15477  016078                     
 15478                           ;display.c: 164: _display_usb();
 15479  016078  ECD7  F08B         	call	__display_usb	;wreg free
 15480                           
 15481                           ;display.c: 165: break;
 15482  01607C  0012               	return	
 15483  01607E                     
 15484                           ;display.c: 167: _display_outputs(mode);
 15485  01607E  0100               	movlb	0	; () banked
 15486  016080  51D5               	movf	display_prepare@mode& (0+255),w,b
 15487  016082  EC34  F081         	call	__display_outputs
 15488                           
 15489                           ;display.c: 168: break;
 15490  016086  0012               	return	
 15491  016088                     
 15492                           ;display.c: 170: _display_charger();
 15493  016088  EC7B  F074         	call	__display_charger	;wreg free
 15494                           
 15495                           ;display.c: 171: break;
 15496  01608C  0012               	return	
 15497  01608E                     
 15498                           ;display.c: 173: _display_efficiency();
 15499  01608E  EC4C  F071         	call	__display_efficiency	;wreg free
 15500                           
 15501                           ;display.c: 174: break;
 15502  016092  0012               	return	
 15503  016094                     
 15504                           ;display.c: 176: _display_temperature();
 15505  016094  EC27  F08A         	call	__display_temperature	;wreg free
 15506                           
 15507                           ;display.c: 177: break;
 15508  016098  0012               	return	
 15509  01609A                     
 15510                           ;display.c: 179: _display_inout();
 15511  01609A  EC4C  F088         	call	__display_inout	;wreg free
 15512                           
 15513                           ;display.c: 180: }
 15514  01609E  0012               	return	
 15515  0160A0                     l1738:
 15516  0160A0  0100               	movlb	0	; () banked
 15517  0160A2  51D5               	movf	display_prepare@mode& (0+255),w,b
 15518  0160A4  0BF0               	andlw	240
 15519  0160A6  6FD3               	movwf	??_display_prepare& (0+255),b
 15520  0160A8  6BD4               	clrf	(??_display_prepare+1)& (0+255),b
 15521                           
 15522                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15523                           ; Switch size 1, requested type "space"
 15524                           ; Number of cases is 1, Range of values is 0 to 0
 15525                           ; switch strategies available:
 15526                           ; Name         Instructions Cycles
 15527                           ; simple_byte            4     3 (average)
 15528                           ;	Chosen strategy is simple_byte
 15529  0160AA  51D4               	movf	(??_display_prepare+1)& (0+255),w,b
 15530  0160AC  0A00               	xorlw	0	; case 0
 15531  0160AE  A4D8               	btfss	status,2,c
 15532  0160B0  D7F4               	goto	l1749
 15533                           
 15534                           ; BSR set to: 0
 15535                           ; Switch size 1, requested type "space"
 15536                           ; Number of cases is 8, Range of values is 0 to 112
 15537                           ; switch strategies available:
 15538                           ; Name         Instructions Cycles
 15539                           ; simple_byte           25    13 (average)
 15540                           ;	Chosen strategy is simple_byte
 15541  0160B2  51D3               	movf	??_display_prepare& (0+255),w,b
 15542  0160B4  0A00               	xorlw	0	; case 0
 15543  0160B6  B4D8               	btfsc	status,2,c
 15544  0160B8  D7D7               	goto	l1742
 15545  0160BA  0A10               	xorlw	16	; case 16
 15546  0160BC  B4D8               	btfsc	status,2,c
 15547  0160BE  D7D7               	goto	l1743
 15548  0160C0  0A30               	xorlw	48	; case 32
 15549  0160C2  B4D8               	btfsc	status,2,c
 15550  0160C4  D7D9               	goto	l1744
 15551  0160C6  0A10               	xorlw	16	; case 48
 15552  0160C8  B4D8               	btfsc	status,2,c
 15553  0160CA  D7D9               	goto	l1745
 15554  0160CC  0A70               	xorlw	112	; case 64
 15555  0160CE  B4D8               	btfsc	status,2,c
 15556  0160D0  D7DB               	goto	l1746
 15557  0160D2  0A10               	xorlw	16	; case 80
 15558  0160D4  B4D8               	btfsc	status,2,c
 15559  0160D6  D7DB               	goto	l1747
 15560  0160D8  0A30               	xorlw	48	; case 96
 15561  0160DA  B4D8               	btfsc	status,2,c
 15562  0160DC  D7DB               	goto	l1748
 15563  0160DE  0A10               	xorlw	16	; case 112
 15564  0160E0  B4D8               	btfsc	status,2,c
 15565  0160E2  D7B7               	goto	l1739
 15566  0160E4  D7DA               	goto	l1749
 15567  0160E6                     __end_of_display_prepare:
 15568                           	opt stack 0
 15569                           tblptru	equ	0xFF8
 15570                           tblptrh	equ	0xFF7
 15571                           tblptrl	equ	0xFF6
 15572                           tablat	equ	0xFF5
 15573                           prodh	equ	0xFF4
 15574                           prodl	equ	0xFF3
 15575                           intcon	equ	0xFF2
 15576                           intcon2	equ	0xFF1
 15577                           intcon3	equ	0xFF0
 15578                           postinc0	equ	0xFEE
 15579                           wreg	equ	0xFE8
 15580                           indf1	equ	0xFE7
 15581                           postdec1	equ	0xFE5
 15582                           plusw1	equ	0xFE3
 15583                           fsr1h	equ	0xFE2
 15584                           fsr1l	equ	0xFE1
 15585                           indf2	equ	0xFDF
 15586                           postinc2	equ	0xFDE
 15587                           postdec2	equ	0xFDD
 15588                           plusw2	equ	0xFDB
 15589                           fsr2h	equ	0xFDA
 15590                           fsr2l	equ	0xFD9
 15591                           status	equ	0xFD8
 15592                           
 15593 ;; *************** function __display_usb *****************
 15594 ;; Defined at:
 15595 ;;		line 372 in file "display.c"
 15596 ;; Parameters:    Size  Location     Type
 15597 ;;		None
 15598 ;; Auto vars:     Size  Location     Type
 15599 ;;  header         20    0[BANK0 ] const unsigned char [20]
 15600 ;;  usb_off        17   20[BANK0 ] const unsigned char [17]
 15601 ;;  usb_on         16   53[BANK0 ] const unsigned char [16]
 15602 ;;  low            16   37[BANK0 ] const unsigned char [16]
 15603 ;;  cntr            1   69[BANK0 ] unsigned char 
 15604 ;; Return value:  Size  Location     Type
 15605 ;;                  1    wreg      void 
 15606 ;; Registers used:
 15607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 15608 ;; Tracked objects:
 15609 ;;		On entry : 0/0
 15610 ;;		On exit  : 0/0
 15611 ;;		Unchanged: 0/0
 15612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15614 ;;      Locals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15616 ;;      Totals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15617 ;;Total ram usage:       70 bytes
 15618 ;; Hardware stack levels used:    1
 15619 ;; Hardware stack levels required when called:   10
 15620 ;; This function calls:
 15621 ;;		Nothing
 15622 ;; This function is called by:
 15623 ;;		_display_prepare
 15624 ;; This function uses a non-reentrant model
 15625 ;;
 15626                           
 15627                           	psect	text69
 15628  0117AE                     __ptext69:
 15629                           	opt stack 0
 15630  0117AE                     __display_usb:
 15631                           	opt stack 19
 15632                           
 15633                           ;display.c: 374: uint8_t cntr;;display.c: 375: const char header[] = "USB Charger Output
      +                          s";
 15634                           
 15635                           ;incstack = 0
 15636  0117AE  0E07               	movlw	low __display_usb@F7301
 15637  0117B0  6EF6               	movwf	tblptrl,c
 15638  0117B2                     	if	1	;There is more than 1 active tblptr byte
 15639  0117B2  0EC1               	movlw	high __display_usb@F7301
 15640  0117B4  6EF7               	movwf	tblptrh,c
 15641  0117B6                     	endif
 15642  0117B6                     	if	1	;There are 3 active tblptr bytes
 15643  0117B6  0E00               	movlw	low (__display_usb@F7301 shr (0+16))
 15644  0117B8  6EF8               	movwf	tblptru,c
 15645  0117BA                     	endif
 15646  0117BA  EE20  F060         	lfsr	2,__display_usb@header
 15647  0117BE  0E13               	movlw	19
 15648  0117C0                     u26010:
 15649  0117C0  0009               	tblrd		*+
 15650  0117C2  CFF5 FFDE          	movff	tablat,postinc2
 15651  0117C6  06E8               	decf	wreg,f,c
 15652  0117C8  E2FB               	bc	u26010
 15653                           
 15654                           ;display.c: 376: const char low[] = "Battery too low";
 15655  0117CA  0E3E               	movlw	low __display_usb@F7303
 15656  0117CC  6EF6               	movwf	tblptrl,c
 15657  0117CE                     	if	1	;There is more than 1 active tblptr byte
 15658  0117CE  0EC2               	movlw	high __display_usb@F7303
 15659  0117D0  6EF7               	movwf	tblptrh,c
 15660  0117D2                     	endif
 15661  0117D2                     	if	1	;There are 3 active tblptr bytes
 15662  0117D2  0E00               	movlw	low (__display_usb@F7303 shr (0+16))
 15663  0117D4  6EF8               	movwf	tblptru,c
 15664  0117D6                     	endif
 15665  0117D6  EE20  F085         	lfsr	2,__display_usb@low
 15666  0117DA  0E0F               	movlw	15
 15667  0117DC                     u26020:
 15668  0117DC  0009               	tblrd		*+
 15669  0117DE  CFF5 FFDE          	movff	tablat,postinc2
 15670  0117E2  06E8               	decf	wreg,f,c
 15671  0117E4  E2FB               	bc	u26020
 15672                           
 15673                           ;display.c: 377: const char usb_on[] = "USB charging on";
 15674  0117E6  0E2E               	movlw	low __display_usb@F7305
 15675  0117E8  6EF6               	movwf	tblptrl,c
 15676  0117EA                     	if	1	;There is more than 1 active tblptr byte
 15677  0117EA  0EC2               	movlw	high __display_usb@F7305
 15678  0117EC  6EF7               	movwf	tblptrh,c
 15679  0117EE                     	endif
 15680  0117EE                     	if	1	;There are 3 active tblptr bytes
 15681  0117EE  0E00               	movlw	low (__display_usb@F7305 shr (0+16))
 15682  0117F0  6EF8               	movwf	tblptru,c
 15683  0117F2                     	endif
 15684  0117F2  EE20  F095         	lfsr	2,__display_usb@usb_on
 15685  0117F6  0E0F               	movlw	15
 15686  0117F8                     u26030:
 15687  0117F8  0009               	tblrd		*+
 15688  0117FA  CFF5 FFDE          	movff	tablat,postinc2
 15689  0117FE  06E8               	decf	wreg,f,c
 15690  011800  E2FB               	bc	u26030
 15691                           
 15692                           ;display.c: 378: const char usb_off[] = "USB charging off";
 15693  011802  0EFD               	movlw	low __display_usb@F7307
 15694  011804  6EF6               	movwf	tblptrl,c
 15695  011806                     	if	1	;There is more than 1 active tblptr byte
 15696  011806  0EC1               	movlw	high __display_usb@F7307
 15697  011808  6EF7               	movwf	tblptrh,c
 15698  01180A                     	endif
 15699  01180A                     	if	1	;There are 3 active tblptr bytes
 15700  01180A  0E00               	movlw	low (__display_usb@F7307 shr (0+16))
 15701  01180C  6EF8               	movwf	tblptru,c
 15702  01180E                     	endif
 15703  01180E  EE20  F074         	lfsr	2,__display_usb@usb_off
 15704  011812  0E10               	movlw	16
 15705  011814                     u26040:
 15706  011814  0009               	tblrd		*+
 15707  011816  CFF5 FFDE          	movff	tablat,postinc2
 15708  01181A  06E8               	decf	wreg,f,c
 15709  01181C  E2FB               	bc	u26040
 15710                           
 15711                           ;display.c: 381: cntr = 0;
 15712  01181E  0E00               	movlw	0
 15713  011820  0100               	movlb	0	; () banked
 15714  011822  6FA5               	movwf	__display_usb@cntr& (0+255),b
 15715                           
 15716                           ;display.c: 382: while(header[cntr])
 15717  011824  D013               	goto	l1895
 15718  011826                     
 15719                           ; BSR set to: 0
 15720                           ;display.c: 383: display_content[0][cntr] = header[cntr++];
 15721                           
 15722                           ; BSR set to: 0
 15723  011826  51A5               	movf	__display_usb@cntr& (0+255),w,b
 15724  011828  0D01               	mullw	1
 15725  01182A  0E60               	movlw	low __display_usb@header
 15726  01182C  24F3               	addwf	prodl,w,c
 15727  01182E  6ED9               	movwf	fsr2l,c
 15728  011830  0E00               	movlw	high __display_usb@header
 15729  011832  20F4               	addwfc	prodh,w,c
 15730  011834  6EDA               	movwf	fsr2h,c
 15731  011836  51A5               	movf	__display_usb@cntr& (0+255),w,b
 15732  011838  0D01               	mullw	1
 15733  01183A  0E6C               	movlw	low _display_content
 15734  01183C  24F3               	addwf	prodl,w,c
 15735  01183E  6EE1               	movwf	fsr1l,c
 15736  011840  0E03               	movlw	high _display_content
 15737  011842  20F4               	addwfc	prodh,w,c
 15738  011844  6EE2               	movwf	fsr1h,c
 15739  011846  CFDF FFE7          	movff	indf2,indf1
 15740                           
 15741                           ; BSR set to: 0
 15742  01184A  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 15743  01184C                     l1895:
 15744                           
 15745                           ; BSR set to: 0
 15746                           
 15747                           ; BSR set to: 0
 15748  01184C  51A5               	movf	__display_usb@cntr& (0+255),w,b
 15749  01184E  0D01               	mullw	1
 15750  011850  0E60               	movlw	low __display_usb@header
 15751  011852  24F3               	addwf	prodl,w,c
 15752  011854  6ED9               	movwf	fsr2l,c
 15753  011856  0E00               	movlw	high __display_usb@header
 15754  011858  20F4               	addwfc	prodh,w,c
 15755  01185A  6EDA               	movwf	fsr2h,c
 15756  01185C  50DF               	movf	indf2,w,c
 15757  01185E  A4D8               	btfss	status,2,c
 15758  011860  D7E2               	goto	l1896
 15759                           
 15760                           ; BSR set to: 0
 15761                           ;display.c: 385: if(os.output_voltage<12000)
 15762                           
 15763                           ; BSR set to: 0
 15764  011862  0102               	movlb	2	; () banked
 15765  011864  BF28               	btfsc	(_os+40)& (0+255),7,b	;volatile
 15766  011866  D006               	goto	u26060
 15767  011868  0EE0               	movlw	224
 15768  01186A  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
 15769  01186C  0E2E               	movlw	46
 15770  01186E  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
 15771  011870  B0D8               	btfsc	status,0,c
 15772  011872  D022               	goto	u26070
 15773  011874                     u26060:
 15774                           
 15775                           ; BSR set to: 2
 15776                           ;display.c: 386: {;display.c: 387: cntr = 0;
 15777  011874  0E00               	movlw	0
 15778  011876  0100               	movlb	0	; () banked
 15779  011878  6FA5               	movwf	__display_usb@cntr& (0+255),b
 15780                           
 15781                           ;display.c: 388: while(low[cntr])
 15782  01187A  D013               	goto	l1899
 15783  01187C                     
 15784                           ; BSR set to: 0
 15785                           ;display.c: 389: display_content[2][cntr] = low[cntr++];
 15786                           
 15787                           ; BSR set to: 0
 15788  01187C  51A5               	movf	__display_usb@cntr& (0+255),w,b
 15789  01187E  0D01               	mullw	1
 15790  011880  0E85               	movlw	low __display_usb@low
 15791  011882  24F3               	addwf	prodl,w,c
 15792  011884  6ED9               	movwf	fsr2l,c
 15793  011886  0E00               	movlw	high __display_usb@low
 15794  011888  20F4               	addwfc	prodh,w,c
 15795  01188A  6EDA               	movwf	fsr2h,c
 15796  01188C  51A5               	movf	__display_usb@cntr& (0+255),w,b
 15797  01188E  0D01               	mullw	1
 15798  011890  0E94               	movlw	low (_display_content+40)
 15799  011892  24F3               	addwf	prodl,w,c
 15800  011894  6EE1               	movwf	fsr1l,c
 15801  011896  0E03               	movlw	high (_display_content+40)
 15802  011898  20F4               	addwfc	prodh,w,c
 15803  01189A  6EE2               	movwf	fsr1h,c
 15804  01189C  CFDF FFE7          	movff	indf2,indf1
 15805                           
 15806                           ; BSR set to: 0
 15807  0118A0  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 15808  0118A2                     l1899:
 15809                           
 15810                           ; BSR set to: 0
 15811                           
 15812                           ; BSR set to: 0
 15813  0118A2  51A5               	movf	__display_usb@cntr& (0+255),w,b
 15814  0118A4  0D01               	mullw	1
 15815  0118A6  0E85               	movlw	low __display_usb@low
 15816  0118A8  24F3               	addwf	prodl,w,c
 15817  0118AA  6ED9               	movwf	fsr2l,c
 15818  0118AC  0E00               	movlw	high __display_usb@low
 15819  0118AE  20F4               	addwfc	prodh,w,c
 15820  0118B0  6EDA               	movwf	fsr2h,c
 15821  0118B2  50DF               	movf	indf2,w,c
 15822  0118B4  A4D8               	btfss	status,2,c
 15823  0118B6  D7E2               	goto	l1900
 15824  0118B8                     u26070:
 15825                           
 15826                           ;display.c: 390: };display.c: 392: cntr = 0;
 15827                           
 15828                           ; BSR set to: 0
 15829                           
 15830                           ; BSR set to: 0
 15831  0118B8  0E00               	movlw	0
 15832  0118BA  0100               	movlb	0	; () banked
 15833  0118BC  6FA5               	movwf	__display_usb@cntr& (0+255),b
 15834                           
 15835                           ; BSR set to: 0
 15836                           ;display.c: 393: if(LATDbits.LD3)
 15837  0118BE  B68C               	btfsc	3980,3,c	;volatile
 15838  0118C0  D014               	goto	l1903
 15839  0118C2  D032               	goto	l1907
 15840  0118C4                     
 15841                           ; BSR set to: 0
 15842                           ;display.c: 396: display_content[3][cntr] = usb_on[cntr++];
 15843                           
 15844                           ; BSR set to: 0
 15845  0118C4  51A5               	movf	__display_usb@cntr& (0+255),w,b
 15846  0118C6  0D01               	mullw	1
 15847  0118C8  0E95               	movlw	low __display_usb@usb_on
 15848  0118CA  24F3               	addwf	prodl,w,c
 15849  0118CC  6ED9               	movwf	fsr2l,c
 15850  0118CE  0E00               	movlw	high __display_usb@usb_on
 15851  0118D0  20F4               	addwfc	prodh,w,c
 15852  0118D2  6EDA               	movwf	fsr2h,c
 15853  0118D4  51A5               	movf	__display_usb@cntr& (0+255),w,b
 15854  0118D6  0D01               	mullw	1
 15855  0118D8  0EA8               	movlw	low (_display_content+60)
 15856  0118DA  24F3               	addwf	prodl,w,c
 15857  0118DC  6EE1               	movwf	fsr1l,c
 15858  0118DE  0E03               	movlw	high (_display_content+60)
 15859  0118E0  20F4               	addwfc	prodh,w,c
 15860  0118E2  6EE2               	movwf	fsr1h,c
 15861  0118E4  CFDF FFE7          	movff	indf2,indf1
 15862                           
 15863                           ; BSR set to: 0
 15864  0118E8  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 15865  0118EA                     l1903:
 15866                           
 15867                           ; BSR set to: 0
 15868                           
 15869                           ; BSR set to: 0
 15870  0118EA  51A5               	movf	__display_usb@cntr& (0+255),w,b
 15871  0118EC  0D01               	mullw	1
 15872  0118EE  0E95               	movlw	low __display_usb@usb_on
 15873  0118F0  24F3               	addwf	prodl,w,c
 15874  0118F2  6ED9               	movwf	fsr2l,c
 15875  0118F4  0E00               	movlw	high __display_usb@usb_on
 15876  0118F6  20F4               	addwfc	prodh,w,c
 15877  0118F8  6EDA               	movwf	fsr2h,c
 15878  0118FA  50DF               	movf	indf2,w,c
 15879  0118FC  B4D8               	btfsc	status,2,c
 15880  0118FE  0012               	return	
 15881  011900  D7E1               	goto	l1904
 15882  011902                     
 15883                           ; BSR set to: 0
 15884                           ;display.c: 401: display_content[3][cntr] = usb_off[cntr++];
 15885                           
 15886                           ; BSR set to: 0
 15887  011902  51A5               	movf	__display_usb@cntr& (0+255),w,b
 15888  011904  0D01               	mullw	1
 15889  011906  0E74               	movlw	low __display_usb@usb_off
 15890  011908  24F3               	addwf	prodl,w,c
 15891  01190A  6ED9               	movwf	fsr2l,c
 15892  01190C  0E00               	movlw	high __display_usb@usb_off
 15893  01190E  20F4               	addwfc	prodh,w,c
 15894  011910  6EDA               	movwf	fsr2h,c
 15895  011912  51A5               	movf	__display_usb@cntr& (0+255),w,b
 15896  011914  0D01               	mullw	1
 15897  011916  0EA8               	movlw	low (_display_content+60)
 15898  011918  24F3               	addwf	prodl,w,c
 15899  01191A  6EE1               	movwf	fsr1l,c
 15900  01191C  0E03               	movlw	high (_display_content+60)
 15901  01191E  20F4               	addwfc	prodh,w,c
 15902  011920  6EE2               	movwf	fsr1h,c
 15903  011922  CFDF FFE7          	movff	indf2,indf1
 15904                           
 15905                           ; BSR set to: 0
 15906  011926  2BA5               	incf	__display_usb@cntr& (0+255),f,b
 15907  011928                     l1907:
 15908                           
 15909                           ; BSR set to: 0
 15910                           
 15911                           ; BSR set to: 0
 15912  011928  51A5               	movf	__display_usb@cntr& (0+255),w,b
 15913  01192A  0D01               	mullw	1
 15914  01192C  0E74               	movlw	low __display_usb@usb_off
 15915  01192E  24F3               	addwf	prodl,w,c
 15916  011930  6ED9               	movwf	fsr2l,c
 15917  011932  0E00               	movlw	high __display_usb@usb_off
 15918  011934  20F4               	addwfc	prodh,w,c
 15919  011936  6EDA               	movwf	fsr2h,c
 15920  011938  50DF               	movf	indf2,w,c
 15921  01193A  B4D8               	btfsc	status,2,c
 15922  01193C  0012               	return	
 15923  01193E  D7E1               	goto	l1908
 15924  011940                     __end_of__display_usb:
 15925                           	opt stack 0
 15926                           tblptru	equ	0xFF8
 15927                           tblptrh	equ	0xFF7
 15928                           tblptrl	equ	0xFF6
 15929                           tablat	equ	0xFF5
 15930                           prodh	equ	0xFF4
 15931                           prodl	equ	0xFF3
 15932                           intcon	equ	0xFF2
 15933                           intcon2	equ	0xFF1
 15934                           intcon3	equ	0xFF0
 15935                           postinc0	equ	0xFEE
 15936                           wreg	equ	0xFE8
 15937                           indf1	equ	0xFE7
 15938                           postdec1	equ	0xFE5
 15939                           plusw1	equ	0xFE3
 15940                           fsr1h	equ	0xFE2
 15941                           fsr1l	equ	0xFE1
 15942                           indf2	equ	0xFDF
 15943                           postinc2	equ	0xFDE
 15944                           postdec2	equ	0xFDD
 15945                           plusw2	equ	0xFDB
 15946                           fsr2h	equ	0xFDA
 15947                           fsr2l	equ	0xFD9
 15948                           status	equ	0xFD8
 15949                           
 15950 ;; *************** function __display_time *****************
 15951 ;; Defined at:
 15952 ;;		line 255 in file "display.c"
 15953 ;; Parameters:    Size  Location     Type
 15954 ;;  mode            1    wreg     unsigned char 
 15955 ;; Auto vars:     Size  Location     Type
 15956 ;;  mode            1  203[BANK1 ] unsigned char 
 15957 ;;  pressseconds   20   40[BANK1 ] const unsigned char [20]
 15958 ;;  pressminutes   20   20[BANK1 ] const unsigned char [20]
 15959 ;;  pts            20    0[BANK1 ] const unsigned char [20]
 15960 ;;  presshours     18   78[BANK1 ] const unsigned char [18]
 15961 ;;  pressmonth     18   60[BANK1 ] const unsigned char [18]
 15962 ;;  presssave      16  112[BANK1 ] const unsigned char [16]
 15963 ;;  pressday       16   96[BANK1 ] const unsigned char [16]
 15964 ;;  tad            14  128[BANK1 ] const unsigned char [14]
 15965 ;;  setseconds     12  154[BANK1 ] const unsigned char [12]
 15966 ;;  setminutes     12  142[BANK1 ] const unsigned char [12]
 15967 ;;  sethours       10  176[BANK1 ] const unsigned char [10]
 15968 ;;  setmonth       10  166[BANK1 ] const unsigned char [10]
 15969 ;;  setyear         9  186[BANK1 ] const unsigned char [9]
 15970 ;;  setday          8  195[BANK1 ] const unsigned char [8]
 15971 ;;  cntr            1  210[BANK1 ] unsigned char 
 15972 ;;  seconds         1  209[BANK1 ] unsigned char 
 15973 ;;  minutes         1  208[BANK1 ] unsigned char 
 15974 ;;  hours           1  207[BANK1 ] unsigned char 
 15975 ;;  day             1  206[BANK1 ] unsigned char 
 15976 ;;  month           1  205[BANK1 ] unsigned char 
 15977 ;;  year            1  204[BANK1 ] unsigned char 
 15978 ;; Return value:  Size  Location     Type
 15979 ;;                  1    wreg      void 
 15980 ;; Registers used:
 15981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15982 ;; Tracked objects:
 15983 ;;		On entry : 0/0
 15984 ;;		On exit  : 0/0
 15985 ;;		Unchanged: 0/0
 15986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15988 ;;      Locals:         0       0     211       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15990 ;;      Totals:         0       0     211       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15991 ;;Total ram usage:      211 bytes
 15992 ;; Hardware stack levels used:    1
 15993 ;; Hardware stack levels required when called:   11
 15994 ;; This function calls:
 15995 ;;		_rtcc_get_day
 15996 ;;		_rtcc_get_hours
 15997 ;;		_rtcc_get_minutes
 15998 ;;		_rtcc_get_month
 15999 ;;		_rtcc_get_seconds
 16000 ;;		_rtcc_get_year
 16001 ;; This function is called by:
 16002 ;;		_display_prepare
 16003 ;; This function uses a non-reentrant model
 16004 ;;
 16005                           
 16006                           	psect	text70
 16007  00C492                     __ptext70:
 16008                           	opt stack 0
 16009  00C492                     __display_time:
 16010                           	opt stack 18
 16011                           
 16012                           ; BSR set to: 0
 16013                           ;incstack = 0
 16014                           ;__display_time@mode stored from wreg
 16015  00C492  0101               	movlb	1	; () banked
 16016  00C494  6FCB               	movwf	__display_time@mode& (0+255),b
 16017                           
 16018                           ;display.c: 257: const char tad[] = "Time and Date";
 16019  00C496  0E99               	movlw	low __display_time@F7264
 16020  00C498  6EF6               	movwf	tblptrl,c
 16021  00C49A                     	if	1	;There is more than 1 active tblptr byte
 16022  00C49A  0EC2               	movlw	high __display_time@F7264
 16023  00C49C  6EF7               	movwf	tblptrh,c
 16024  00C49E                     	endif
 16025  00C49E                     	if	1	;There are 3 active tblptr bytes
 16026  00C49E  0E00               	movlw	low (__display_time@F7264 shr (0+16))
 16027  00C4A0  6EF8               	movwf	tblptru,c
 16028  00C4A2                     	endif
 16029  00C4A2  EE21  F080         	lfsr	2,__display_time@tad
 16030  00C4A6  0E0D               	movlw	13
 16031  00C4A8                     u25730:
 16032  00C4A8  0009               	tblrd		*+
 16033  00C4AA  CFF5 FFDE          	movff	tablat,postinc2
 16034  00C4AE  06E8               	decf	wreg,f,c
 16035  00C4B0  E2FB               	bc	u25730
 16036                           
 16037                           ;display.c: 258: const char setyear[] = "Set year";
 16038  00C4B2  0E10               	movlw	low __display_time@F7266
 16039  00C4B4  6EF6               	movwf	tblptrl,c
 16040  00C4B6                     	if	1	;There is more than 1 active tblptr byte
 16041  00C4B6  0EC3               	movlw	high __display_time@F7266
 16042  00C4B8  6EF7               	movwf	tblptrh,c
 16043  00C4BA                     	endif
 16044  00C4BA                     	if	1	;There are 3 active tblptr bytes
 16045  00C4BA  0E00               	movlw	low (__display_time@F7266 shr (0+16))
 16046  00C4BC  6EF8               	movwf	tblptru,c
 16047  00C4BE                     	endif
 16048  00C4BE  EE21  F0BA         	lfsr	2,__display_time@setyear
 16049  00C4C2  0E08               	movlw	8
 16050  00C4C4                     u25740:
 16051  00C4C4  0009               	tblrd		*+
 16052  00C4C6  CFF5 FFDE          	movff	tablat,postinc2
 16053  00C4CA  06E8               	decf	wreg,f,c
 16054  00C4CC  E2FB               	bc	u25740
 16055                           
 16056                           ;display.c: 259: const char setmonth[] = "Set month";
 16057  00C4CE  0E06               	movlw	low __display_time@F7268
 16058  00C4D0  6EF6               	movwf	tblptrl,c
 16059  00C4D2                     	if	1	;There is more than 1 active tblptr byte
 16060  00C4D2  0EC3               	movlw	high __display_time@F7268
 16061  00C4D4  6EF7               	movwf	tblptrh,c
 16062  00C4D6                     	endif
 16063  00C4D6                     	if	1	;There are 3 active tblptr bytes
 16064  00C4D6  0E00               	movlw	low (__display_time@F7268 shr (0+16))
 16065  00C4D8  6EF8               	movwf	tblptru,c
 16066  00C4DA                     	endif
 16067  00C4DA  EE21  F0A6         	lfsr	2,__display_time@setmonth
 16068  00C4DE  0E09               	movlw	9
 16069  00C4E0                     u25750:
 16070  00C4E0  0009               	tblrd		*+
 16071  00C4E2  CFF5 FFDE          	movff	tablat,postinc2
 16072  00C4E6  06E8               	decf	wreg,f,c
 16073  00C4E8  E2FB               	bc	u25750
 16074                           
 16075                           ;display.c: 260: const char setday[] = "Set day";
 16076  00C4EA  0E2A               	movlw	low __display_time@F7270
 16077  00C4EC  6EF6               	movwf	tblptrl,c
 16078  00C4EE                     	if	1	;There is more than 1 active tblptr byte
 16079  00C4EE  0EC3               	movlw	high __display_time@F7270
 16080  00C4F0  6EF7               	movwf	tblptrh,c
 16081  00C4F2                     	endif
 16082  00C4F2                     	if	1	;There are 3 active tblptr bytes
 16083  00C4F2  0E00               	movlw	low (__display_time@F7270 shr (0+16))
 16084  00C4F4  6EF8               	movwf	tblptru,c
 16085  00C4F6                     	endif
 16086  00C4F6  EE21  F0C3         	lfsr	2,__display_time@setday
 16087  00C4FA  0E07               	movlw	7
 16088  00C4FC                     u25760:
 16089  00C4FC  0009               	tblrd		*+
 16090  00C4FE  CFF5 FFDE          	movff	tablat,postinc2
 16091  00C502  06E8               	decf	wreg,f,c
 16092  00C504  E2FB               	bc	u25760
 16093                           
 16094                           ;display.c: 261: const char sethours[] = "Set hours";
 16095  00C506  0EFC               	movlw	low __display_time@F7272
 16096  00C508  6EF6               	movwf	tblptrl,c
 16097  00C50A                     	if	1	;There is more than 1 active tblptr byte
 16098  00C50A  0EC2               	movlw	high __display_time@F7272
 16099  00C50C  6EF7               	movwf	tblptrh,c
 16100  00C50E                     	endif
 16101  00C50E                     	if	1	;There are 3 active tblptr bytes
 16102  00C50E  0E00               	movlw	low (__display_time@F7272 shr (0+16))
 16103  00C510  6EF8               	movwf	tblptru,c
 16104  00C512                     	endif
 16105  00C512  EE21  F0B0         	lfsr	2,__display_time@sethours
 16106  00C516  0E09               	movlw	9
 16107  00C518                     u25770:
 16108  00C518  0009               	tblrd		*+
 16109  00C51A  CFF5 FFDE          	movff	tablat,postinc2
 16110  00C51E  06E8               	decf	wreg,f,c
 16111  00C520  E2FB               	bc	u25770
 16112                           
 16113                           ;display.c: 262: const char setminutes[] = "Set minutes";
 16114  00C522  0EE5               	movlw	low __display_time@F7274
 16115  00C524  6EF6               	movwf	tblptrl,c
 16116  00C526                     	if	1	;There is more than 1 active tblptr byte
 16117  00C526  0EC2               	movlw	high __display_time@F7274
 16118  00C528  6EF7               	movwf	tblptrh,c
 16119  00C52A                     	endif
 16120  00C52A                     	if	1	;There are 3 active tblptr bytes
 16121  00C52A  0E00               	movlw	low (__display_time@F7274 shr (0+16))
 16122  00C52C  6EF8               	movwf	tblptru,c
 16123  00C52E                     	endif
 16124  00C52E  EE21  F08E         	lfsr	2,__display_time@setminutes
 16125  00C532  0E0B               	movlw	11
 16126  00C534                     u25780:
 16127  00C534  0009               	tblrd		*+
 16128  00C536  CFF5 FFDE          	movff	tablat,postinc2
 16129  00C53A  06E8               	decf	wreg,f,c
 16130  00C53C  E2FB               	bc	u25780
 16131                           
 16132                           ;display.c: 263: const char setseconds[] = "Set seconds";
 16133  00C53E  0ED9               	movlw	low __display_time@F7276
 16134  00C540  6EF6               	movwf	tblptrl,c
 16135  00C542                     	if	1	;There is more than 1 active tblptr byte
 16136  00C542  0EC2               	movlw	high __display_time@F7276
 16137  00C544  6EF7               	movwf	tblptrh,c
 16138  00C546                     	endif
 16139  00C546                     	if	1	;There are 3 active tblptr bytes
 16140  00C546  0E00               	movlw	low (__display_time@F7276 shr (0+16))
 16141  00C548  6EF8               	movwf	tblptru,c
 16142  00C54A                     	endif
 16143  00C54A  EE21  F09A         	lfsr	2,__display_time@setseconds
 16144  00C54E  0E0B               	movlw	11
 16145  00C550                     u25790:
 16146  00C550  0009               	tblrd		*+
 16147  00C552  CFF5 FFDE          	movff	tablat,postinc2
 16148  00C556  06E8               	decf	wreg,f,c
 16149  00C558  E2FB               	bc	u25790
 16150                           
 16151                           ;display.c: 264: const char pts[] = "->Press to set time";
 16152  00C55A  0E43               	movlw	low __display_time@F7278
 16153  00C55C  6EF6               	movwf	tblptrl,c
 16154  00C55E                     	if	1	;There is more than 1 active tblptr byte
 16155  00C55E  0EC1               	movlw	high __display_time@F7278
 16156  00C560  6EF7               	movwf	tblptrh,c
 16157  00C562                     	endif
 16158  00C562                     	if	1	;There are 3 active tblptr bytes
 16159  00C562  0E00               	movlw	low (__display_time@F7278 shr (0+16))
 16160  00C564  6EF8               	movwf	tblptru,c
 16161  00C566                     	endif
 16162  00C566  EE21  F000         	lfsr	2,__display_time@pts
 16163  00C56A  0E13               	movlw	19
 16164  00C56C                     u25800:
 16165  00C56C  0009               	tblrd		*+
 16166  00C56E  CFF5 FFDE          	movff	tablat,postinc2
 16167  00C572  06E8               	decf	wreg,f,c
 16168  00C574  E2FB               	bc	u25800
 16169                           
 16170                           ;display.c: 265: const char pressmonth[] = "->Press for month";
 16171  00C576  0EC7               	movlw	low __display_time@F7280
 16172  00C578  6EF6               	movwf	tblptrl,c
 16173  00C57A                     	if	1	;There is more than 1 active tblptr byte
 16174  00C57A  0EC1               	movlw	high __display_time@F7280
 16175  00C57C  6EF7               	movwf	tblptrh,c
 16176  00C57E                     	endif
 16177  00C57E                     	if	1	;There are 3 active tblptr bytes
 16178  00C57E  0E00               	movlw	low (__display_time@F7280 shr (0+16))
 16179  00C580  6EF8               	movwf	tblptru,c
 16180  00C582                     	endif
 16181  00C582  EE21  F03C         	lfsr	2,__display_time@pressmonth
 16182  00C586  0E11               	movlw	17
 16183  00C588                     u25810:
 16184  00C588  0009               	tblrd		*+
 16185  00C58A  CFF5 FFDE          	movff	tablat,postinc2
 16186  00C58E  06E8               	decf	wreg,f,c
 16187  00C590  E2FB               	bc	u25810
 16188                           
 16189                           ;display.c: 266: const char pressday[] = "->Press for day";
 16190  00C592  0E5E               	movlw	low __display_time@F7282
 16191  00C594  6EF6               	movwf	tblptrl,c
 16192  00C596                     	if	1	;There is more than 1 active tblptr byte
 16193  00C596  0EC2               	movlw	high __display_time@F7282
 16194  00C598  6EF7               	movwf	tblptrh,c
 16195  00C59A                     	endif
 16196  00C59A                     	if	1	;There are 3 active tblptr bytes
 16197  00C59A  0E00               	movlw	low (__display_time@F7282 shr (0+16))
 16198  00C59C  6EF8               	movwf	tblptru,c
 16199  00C59E                     	endif
 16200  00C59E  EE21  F060         	lfsr	2,__display_time@pressday
 16201  00C5A2  0E0F               	movlw	15
 16202  00C5A4                     u25820:
 16203  00C5A4  0009               	tblrd		*+
 16204  00C5A6  CFF5 FFDE          	movff	tablat,postinc2
 16205  00C5AA  06E8               	decf	wreg,f,c
 16206  00C5AC  E2FB               	bc	u25820
 16207                           
 16208                           ;display.c: 267: const char presshours[] = "->Press for hours";
 16209  00C5AE  0EB5               	movlw	low __display_time@F7284
 16210  00C5B0  6EF6               	movwf	tblptrl,c
 16211  00C5B2                     	if	1	;There is more than 1 active tblptr byte
 16212  00C5B2  0EC1               	movlw	high __display_time@F7284
 16213  00C5B4  6EF7               	movwf	tblptrh,c
 16214  00C5B6                     	endif
 16215  00C5B6                     	if	1	;There are 3 active tblptr bytes
 16216  00C5B6  0E00               	movlw	low (__display_time@F7284 shr (0+16))
 16217  00C5B8  6EF8               	movwf	tblptru,c
 16218  00C5BA                     	endif
 16219  00C5BA  EE21  F04E         	lfsr	2,__display_time@presshours
 16220  00C5BE  0E11               	movlw	17
 16221  00C5C0                     u25830:
 16222  00C5C0  0009               	tblrd		*+
 16223  00C5C2  CFF5 FFDE          	movff	tablat,postinc2
 16224  00C5C6  06E8               	decf	wreg,f,c
 16225  00C5C8  E2FB               	bc	u25830
 16226                           
 16227                           ;display.c: 268: const char pressminutes[] = "->Press for minutes";
 16228  00C5CA  0E2F               	movlw	low __display_time@F7286
 16229  00C5CC  6EF6               	movwf	tblptrl,c
 16230  00C5CE                     	if	1	;There is more than 1 active tblptr byte
 16231  00C5CE  0EC1               	movlw	high __display_time@F7286
 16232  00C5D0  6EF7               	movwf	tblptrh,c
 16233  00C5D2                     	endif
 16234  00C5D2                     	if	1	;There are 3 active tblptr bytes
 16235  00C5D2  0E00               	movlw	low (__display_time@F7286 shr (0+16))
 16236  00C5D4  6EF8               	movwf	tblptru,c
 16237  00C5D6                     	endif
 16238  00C5D6  EE21  F014         	lfsr	2,__display_time@pressminutes
 16239  00C5DA  0E13               	movlw	19
 16240  00C5DC                     u25840:
 16241  00C5DC  0009               	tblrd		*+
 16242  00C5DE  CFF5 FFDE          	movff	tablat,postinc2
 16243  00C5E2  06E8               	decf	wreg,f,c
 16244  00C5E4  E2FB               	bc	u25840
 16245                           
 16246                           ;display.c: 269: const char pressseconds[] = "->Press for seconds";
 16247  00C5E6  0E1B               	movlw	low __display_time@F7288
 16248  00C5E8  6EF6               	movwf	tblptrl,c
 16249  00C5EA                     	if	1	;There is more than 1 active tblptr byte
 16250  00C5EA  0EC1               	movlw	high __display_time@F7288
 16251  00C5EC  6EF7               	movwf	tblptrh,c
 16252  00C5EE                     	endif
 16253  00C5EE                     	if	1	;There are 3 active tblptr bytes
 16254  00C5EE  0E00               	movlw	low (__display_time@F7288 shr (0+16))
 16255  00C5F0  6EF8               	movwf	tblptru,c
 16256  00C5F2                     	endif
 16257  00C5F2  EE21  F028         	lfsr	2,__display_time@pressseconds
 16258  00C5F6  0E13               	movlw	19
 16259  00C5F8                     u25850:
 16260  00C5F8  0009               	tblrd		*+
 16261  00C5FA  CFF5 FFDE          	movff	tablat,postinc2
 16262  00C5FE  06E8               	decf	wreg,f,c
 16263  00C600  E2FB               	bc	u25850
 16264                           
 16265                           ;display.c: 270: const char presssave[] = "->Press to save";
 16266  00C602  0E4E               	movlw	low __display_time@F7290
 16267  00C604  6EF6               	movwf	tblptrl,c
 16268  00C606                     	if	1	;There is more than 1 active tblptr byte
 16269  00C606  0EC2               	movlw	high __display_time@F7290
 16270  00C608  6EF7               	movwf	tblptrh,c
 16271  00C60A                     	endif
 16272  00C60A                     	if	1	;There are 3 active tblptr bytes
 16273  00C60A  0E00               	movlw	low (__display_time@F7290 shr (0+16))
 16274  00C60C  6EF8               	movwf	tblptru,c
 16275  00C60E                     	endif
 16276  00C60E  EE21  F070         	lfsr	2,__display_time@presssave
 16277  00C612  0E0F               	movlw	15
 16278  00C614                     u25860:
 16279  00C614  0009               	tblrd		*+
 16280  00C616  CFF5 FFDE          	movff	tablat,postinc2
 16281  00C61A  06E8               	decf	wreg,f,c
 16282  00C61C  E2FB               	bc	u25860
 16283                           
 16284                           ;display.c: 272: uint8_t cntr;;display.c: 273: uint8_t year = rtcc_get_year();
 16285  00C61E  EC37  F0C8         	call	_rtcc_get_year	;wreg free
 16286  00C622  0101               	movlb	1	; () banked
 16287  00C624  6FCC               	movwf	__display_time@year& (0+255),b
 16288                           
 16289                           ; BSR set to: 1
 16290                           ;display.c: 274: uint8_t month = rtcc_get_month();
 16291  00C626  EC3E  F0C8         	call	_rtcc_get_month	;wreg free
 16292  00C62A  0101               	movlb	1	; () banked
 16293  00C62C  6FCD               	movwf	__display_time@month& (0+255),b
 16294                           
 16295                           ; BSR set to: 1
 16296                           ;display.c: 275: uint8_t day = rtcc_get_day();
 16297  00C62E  EC45  F0C8         	call	_rtcc_get_day	;wreg free
 16298  00C632  0101               	movlb	1	; () banked
 16299  00C634  6FCE               	movwf	__display_time@day& (0+255),b
 16300                           
 16301                           ; BSR set to: 1
 16302                           ;display.c: 276: uint8_t hours = rtcc_get_hours();
 16303  00C636  EC30  F0C8         	call	_rtcc_get_hours	;wreg free
 16304  00C63A  0101               	movlb	1	; () banked
 16305  00C63C  6FCF               	movwf	__display_time@hours& (0+255),b
 16306                           
 16307                           ; BSR set to: 1
 16308                           ;display.c: 277: uint8_t minutes = rtcc_get_minutes();
 16309  00C63E  EC29  F0C8         	call	_rtcc_get_minutes	;wreg free
 16310  00C642  0101               	movlb	1	; () banked
 16311  00C644  6FD0               	movwf	__display_time@minutes& (0+255),b
 16312                           
 16313                           ; BSR set to: 1
 16314                           ;display.c: 278: uint8_t seconds = rtcc_get_seconds();
 16315  00C646  EC22  F0C8         	call	_rtcc_get_seconds	;wreg free
 16316  00C64A  0101               	movlb	1	; () banked
 16317  00C64C  6FD1               	movwf	__display_time@seconds& (0+255),b
 16318                           
 16319                           ;display.c: 280: switch(mode)
 16320  00C64E  D1D5               	goto	l1833
 16321  00C650                     
 16322                           ; BSR set to: 1
 16323                           ;display.c: 283: cntr = 0;
 16324                           
 16325                           ; BSR set to: 1
 16326  00C650  0E00               	movlw	0
 16327  00C652  6FD2               	movwf	__display_time@cntr& (0+255),b
 16328                           
 16329                           ;display.c: 284: while(tad[cntr])
 16330  00C654  D013               	goto	l1835
 16331  00C656                     
 16332                           ; BSR set to: 1
 16333                           ;display.c: 285: display_content[0][cntr] = tad[cntr++];
 16334                           
 16335                           ; BSR set to: 1
 16336  00C656  51D2               	movf	__display_time@cntr& (0+255),w,b
 16337  00C658  0D01               	mullw	1
 16338  00C65A  0E80               	movlw	low __display_time@tad
 16339  00C65C  24F3               	addwf	prodl,w,c
 16340  00C65E  6ED9               	movwf	fsr2l,c
 16341  00C660  0E01               	movlw	high __display_time@tad
 16342  00C662  20F4               	addwfc	prodh,w,c
 16343  00C664  6EDA               	movwf	fsr2h,c
 16344  00C666  51D2               	movf	__display_time@cntr& (0+255),w,b
 16345  00C668  0D01               	mullw	1
 16346  00C66A  0E6C               	movlw	low _display_content
 16347  00C66C  24F3               	addwf	prodl,w,c
 16348  00C66E  6EE1               	movwf	fsr1l,c
 16349  00C670  0E03               	movlw	high _display_content
 16350  00C672  20F4               	addwfc	prodh,w,c
 16351  00C674  6EE2               	movwf	fsr1h,c
 16352  00C676  CFDF FFE7          	movff	indf2,indf1
 16353                           
 16354                           ; BSR set to: 1
 16355  00C67A  2BD2               	incf	__display_time@cntr& (0+255),f,b
 16356  00C67C                     l1835:
 16357                           
 16358                           ; BSR set to: 1
 16359                           
 16360                           ; BSR set to: 1
 16361  00C67C  51D2               	movf	__display_time@cntr& (0+255),w,b
 16362  00C67E  0D01               	mullw	1
 16363  00C680  0E80               	movlw	low __display_time@tad
 16364  00C682  24F3               	addwf	prodl,w,c
 16365  00C684  6ED9               	movwf	fsr2l,c
 16366  00C686  0E01               	movlw	high __display_time@tad
 16367  00C688  20F4               	addwfc	prodh,w,c
 16368  00C68A  6EDA               	movwf	fsr2h,c
 16369  00C68C  50DF               	movf	indf2,w,c
 16370  00C68E  A4D8               	btfss	status,2,c
 16371  00C690  D7E2               	goto	l1836
 16372                           
 16373                           ; BSR set to: 1
 16374                           ;display.c: 286: cntr = 0;
 16375                           
 16376                           ; BSR set to: 1
 16377  00C692  0E00               	movlw	0
 16378  00C694  6FD2               	movwf	__display_time@cntr& (0+255),b
 16379                           
 16380                           ;display.c: 287: while(pts[cntr])
 16381  00C696  D013               	goto	l1838
 16382  00C698                     
 16383                           ; BSR set to: 1
 16384                           ;display.c: 288: display_content[3][cntr] = pts[cntr++];
 16385                           
 16386                           ; BSR set to: 1
 16387  00C698  51D2               	movf	__display_time@cntr& (0+255),w,b
 16388  00C69A  0D01               	mullw	1
 16389  00C69C  0E00               	movlw	low __display_time@pts
 16390  00C69E  24F3               	addwf	prodl,w,c
 16391  00C6A0  6ED9               	movwf	fsr2l,c
 16392  00C6A2  0E01               	movlw	high __display_time@pts
 16393  00C6A4  20F4               	addwfc	prodh,w,c
 16394  00C6A6  6EDA               	movwf	fsr2h,c
 16395  00C6A8  51D2               	movf	__display_time@cntr& (0+255),w,b
 16396  00C6AA  0D01               	mullw	1
 16397  00C6AC  0EA8               	movlw	low (_display_content+60)
 16398  00C6AE  24F3               	addwf	prodl,w,c
 16399  00C6B0  6EE1               	movwf	fsr1l,c
 16400  00C6B2  0E03               	movlw	high (_display_content+60)
 16401  00C6B4  20F4               	addwfc	prodh,w,c
 16402  00C6B6  6EE2               	movwf	fsr1h,c
 16403  00C6B8  CFDF FFE7          	movff	indf2,indf1
 16404                           
 16405                           ; BSR set to: 1
 16406  00C6BC  2BD2               	incf	__display_time@cntr& (0+255),f,b
 16407  00C6BE                     l1838:
 16408                           
 16409                           ; BSR set to: 1
 16410                           
 16411                           ; BSR set to: 1
 16412  00C6BE  51D2               	movf	__display_time@cntr& (0+255),w,b
 16413  00C6C0  0D01               	mullw	1
 16414  00C6C2  0E00               	movlw	low __display_time@pts
 16415  00C6C4  24F3               	addwf	prodl,w,c
 16416  00C6C6  6ED9               	movwf	fsr2l,c
 16417  00C6C8  0E01               	movlw	high __display_time@pts
 16418  00C6CA  20F4               	addwfc	prodh,w,c
 16419  00C6CC  6EDA               	movwf	fsr2h,c
 16420  00C6CE  50DF               	movf	indf2,w,c
 16421  00C6D0  B4D8               	btfsc	status,2,c
 16422  00C6D2  D1A9               	goto	l1841
 16423  00C6D4  D7E1               	goto	l1839
 16424  00C6D6                     
 16425                           ; BSR set to: 1
 16426                           ;display.c: 292: cntr = 0;
 16427                           
 16428                           ; BSR set to: 1
 16429  00C6D6  0E00               	movlw	0
 16430  00C6D8  6FD2               	movwf	__display_time@cntr& (0+255),b
 16431                           
 16432                           ;display.c: 293: while(setyear[cntr])
 16433  00C6DA  D013               	goto	l1843
 16434  00C6DC                     
 16435                           ; BSR set to: 1
 16436                           ;display.c: 294: display_content[0][cntr] = setyear[cntr++];
 16437                           
 16438                           ; BSR set to: 1
 16439  00C6DC  51D2               	movf	__display_time@cntr& (0+255),w,b
 16440  00C6DE  0D01               	mullw	1
 16441  00C6E0  0EBA               	movlw	low __display_time@setyear
 16442  00C6E2  24F3               	addwf	prodl,w,c
 16443  00C6E4  6ED9               	movwf	fsr2l,c
 16444  00C6E6  0E01               	movlw	high __display_time@setyear
 16445  00C6E8  20F4               	addwfc	prodh,w,c
 16446  00C6EA  6EDA               	movwf	fsr2h,c
 16447  00C6EC  51D2               	movf	__display_time@cntr& (0+255),w,b
 16448  00C6EE  0D01               	mullw	1
 16449  00C6F0  0E6C               	movlw	low _display_content
 16450  00C6F2  24F3               	addwf	prodl,w,c
 16451  00C6F4  6EE1               	movwf	fsr1l,c
 16452  00C6F6  0E03               	movlw	high _display_content
 16453  00C6F8  20F4               	addwfc	prodh,w,c
 16454  00C6FA  6EE2               	movwf	fsr1h,c
 16455  00C6FC  CFDF FFE7          	movff	indf2,indf1
 16456                           
 16457                           ; BSR set to: 1
 16458  00C700  2BD2               	incf	__display_time@cntr& (0+255),f,b
 16459  00C702                     l1843:
 16460                           
 16461                           ; BSR set to: 1
 16462                           
 16463                           ; BSR set to: 1
 16464  00C702  51D2               	movf	__display_time@cntr& (0+255),w,b
 16465  00C704  0D01               	mullw	1
 16466  00C706  0EBA               	movlw	low __display_time@setyear
 16467  00C708  24F3               	addwf	prodl,w,c
 16468  00C70A  6ED9               	movwf	fsr2l,c
 16469  00C70C  0E01               	movlw	high __display_time@setyear
 16470  00C70E  20F4               	addwfc	prodh,w,c
 16471  00C710  6EDA               	movwf	fsr2h,c
 16472  00C712  50DF               	movf	indf2,w,c
 16473  00C714  A4D8               	btfss	status,2,c
 16474  00C716  D7E2               	goto	l1844
 16475                           
 16476                           ; BSR set to: 1
 16477                           ;display.c: 295: cntr = 0;
 16478                           
 16479                           ; BSR set to: 1
 16480  00C718  0E00               	movlw	0
 16481  00C71A  6FD2               	movwf	__display_time@cntr& (0+255),b
 16482                           
 16483                           ;display.c: 296: while(pressmonth[cntr])
 16484  00C71C  D013               	goto	l1846
 16485  00C71E                     
 16486                           ; BSR set to: 1
 16487                           ;display.c: 297: display_content[3][cntr] = pressmonth[cntr++];
 16488                           
 16489                           ; BSR set to: 1
 16490  00C71E  51D2               	movf	__display_time@cntr& (0+255),w,b
 16491  00C720  0D01               	mullw	1
 16492  00C722  0E3C               	movlw	low __display_time@pressmonth
 16493  00C724  24F3               	addwf	prodl,w,c
 16494  00C726  6ED9               	movwf	fsr2l,c
 16495  00C728  0E01               	movlw	high __display_time@pressmonth
 16496  00C72A  20F4               	addwfc	prodh,w,c
 16497  00C72C  6EDA               	movwf	fsr2h,c
 16498  00C72E  51D2               	movf	__display_time@cntr& (0+255),w,b
 16499  00C730  0D01               	mullw	1
 16500  00C732  0EA8               	movlw	low (_display_content+60)
 16501  00C734  24F3               	addwf	prodl,w,c
 16502  00C736  6EE1               	movwf	fsr1l,c
 16503  00C738  0E03               	movlw	high (_display_content+60)
 16504  00C73A  20F4               	addwfc	prodh,w,c
 16505  00C73C  6EE2               	movwf	fsr1h,c
 16506  00C73E  CFDF FFE7          	movff	indf2,indf1
 16507                           
 16508                           ; BSR set to: 1
 16509  00C742  2BD2               	incf	__display_time@cntr& (0+255),f,b
 16510  00C744                     l1846:
 16511                           
 16512                           ; BSR set to: 1
 16513                           
 16514                           ; BSR set to: 1
 16515  00C744  51D2               	movf	__display_time@cntr& (0+255),w,b
 16516  00C746  0D01               	mullw	1
 16517  00C748  0E3C               	movlw	low __display_time@pressmonth
 16518  00C74A  24F3               	addwf	prodl,w,c
 16519  00C74C  6ED9               	movwf	fsr2l,c
 16520  00C74E  0E01               	movlw	high __display_time@pressmonth
 16521  00C750  20F4               	addwfc	prodh,w,c
 16522  00C752  6EDA               	movwf	fsr2h,c
 16523  00C754  50DF               	movf	indf2,w,c
 16524  00C756  B4D8               	btfsc	status,2,c
 16525  00C758  D166               	goto	l1841
 16526  00C75A  D7E1               	goto	l1847
 16527  00C75C                     
 16528                           ; BSR set to: 1
 16529                           ;display.c: 301: cntr = 0;
 16530                           
 16531                           ; BSR set to: 1
 16532  00C75C  0E00               	movlw	0
 16533  00C75E  6FD2               	movwf	__display_time@cntr& (0+255),b
 16534                           
 16535                           ;display.c: 302: while(setmonth[cntr])
 16536  00C760  D013               	goto	l1850
 16537  00C762                     
 16538                           ; BSR set to: 1
 16539                           ;display.c: 303: display_content[0][cntr] = setmonth[cntr++];
 16540                           
 16541                           ; BSR set to: 1
 16542  00C762  51D2               	movf	__display_time@cntr& (0+255),w,b
 16543  00C764  0D01               	mullw	1
 16544  00C766  0EA6               	movlw	low __display_time@setmonth
 16545  00C768  24F3               	addwf	prodl,w,c
 16546  00C76A  6ED9               	movwf	fsr2l,c
 16547  00C76C  0E01               	movlw	high __display_time@setmonth
 16548  00C76E  20F4               	addwfc	prodh,w,c
 16549  00C770  6EDA               	movwf	fsr2h,c
 16550  00C772  51D2               	movf	__display_time@cntr& (0+255),w,b
 16551  00C774  0D01               	mullw	1
 16552  00C776  0E6C               	movlw	low _display_content
 16553  00C778  24F3               	addwf	prodl,w,c
 16554  00C77A  6EE1               	movwf	fsr1l,c
 16555  00C77C  0E03               	movlw	high _display_content
 16556  00C77E  20F4               	addwfc	prodh,w,c
 16557  00C780  6EE2               	movwf	fsr1h,c
 16558  00C782  CFDF FFE7          	movff	indf2,indf1
 16559                           
 16560                           ; BSR set to: 1
 16561  00C786  2BD2               	incf	__display_time@cntr& (0+255),f,b
 16562  00C788                     l1850:
 16563                           
 16564                           ; BSR set to: 1
 16565                           
 16566                           ; BSR set to: 1
 16567  00C788  51D2               	movf	__display_time@cntr& (0+255),w,b
 16568  00C78A  0D01               	mullw	1
 16569  00C78C  0EA6               	movlw	low __display_time@setmonth
 16570  00C78E  24F3               	addwf	prodl,w,c
 16571  00C790  6ED9               	movwf	fsr2l,c
 16572  00C792  0E01               	movlw	high __display_time@setmonth
 16573  00C794  20F4               	addwfc	prodh,w,c
 16574  00C796  6EDA               	movwf	fsr2h,c
 16575  00C798  50DF               	movf	indf2,w,c
 16576  00C79A  A4D8               	btfss	status,2,c
 16577  00C79C  D7E2               	goto	l1851
 16578                           
 16579                           ; BSR set to: 1
 16580                           ;display.c: 304: cntr = 0;
 16581                           
 16582                           ; BSR set to: 1
 16583  00C79E  0E00               	movlw	0
 16584  00C7A0  6FD2               	movwf	__display_time@cntr& (0+255),b
 16585                           
 16586                           ;display.c: 305: while(pressday[cntr])
 16587  00C7A2  D013               	goto	l1853
 16588  00C7A4                     
 16589                           ; BSR set to: 1
 16590                           ;display.c: 306: display_content[3][cntr] = pressday[cntr++];
 16591                           
 16592                           ; BSR set to: 1
 16593  00C7A4  51D2               	movf	__display_time@cntr& (0+255),w,b
 16594  00C7A6  0D01               	mullw	1
 16595  00C7A8  0E60               	movlw	low __display_time@pressday
 16596  00C7AA  24F3               	addwf	prodl,w,c
 16597  00C7AC  6ED9               	movwf	fsr2l,c
 16598  00C7AE  0E01               	movlw	high __display_time@pressday
 16599  00C7B0  20F4               	addwfc	prodh,w,c
 16600  00C7B2  6EDA               	movwf	fsr2h,c
 16601  00C7B4  51D2               	movf	__display_time@cntr& (0+255),w,b
 16602  00C7B6  0D01               	mullw	1
 16603  00C7B8  0EA8               	movlw	low (_display_content+60)
 16604  00C7BA  24F3               	addwf	prodl,w,c
 16605  00C7BC  6EE1               	movwf	fsr1l,c
 16606  00C7BE  0E03               	movlw	high (_display_content+60)
 16607  00C7C0  20F4               	addwfc	prodh,w,c
 16608  00C7C2  6EE2               	movwf	fsr1h,c
 16609  00C7C4  CFDF FFE7          	movff	indf2,indf1
 16610                           
 16611                           ; BSR set to: 1
 16612  00C7C8  2BD2               	incf	__display_time@cntr& (0+255),f,b
 16613  00C7CA                     l1853:
 16614                           
 16615                           ; BSR set to: 1
 16616                           
 16617                           ; BSR set to: 1
 16618  00C7CA  51D2               	movf	__display_time@cntr& (0+255),w,b
 16619  00C7CC  0D01               	mullw	1
 16620  00C7CE  0E60               	movlw	low __display_time@pressday
 16621  00C7D0  24F3               	addwf	prodl,w,c
 16622  00C7D2  6ED9               	movwf	fsr2l,c
 16623  00C7D4  0E01               	movlw	high __display_time@pressday
 16624  00C7D6  20F4               	addwfc	prodh,w,c
 16625  00C7D8  6EDA               	movwf	fsr2h,c
 16626  00C7DA  50DF               	movf	indf2,w,c
 16627  00C7DC  B4D8               	btfsc	status,2,c
 16628  00C7DE  D123               	goto	l1841
 16629  00C7E0  D7E1               	goto	l1854
 16630  00C7E2                     
 16631                           ; BSR set to: 1
 16632                           ;display.c: 310: cntr = 0;
 16633                           
 16634                           ; BSR set to: 1
 16635  00C7E2  0E00               	movlw	0
 16636  00C7E4  6FD2               	movwf	__display_time@cntr& (0+255),b
 16637                           
 16638                           ;display.c: 311: while(setday[cntr])
 16639  00C7E6  D013               	goto	l1857
 16640  00C7E8                     
 16641                           ; BSR set to: 1
 16642                           ;display.c: 312: display_content[0][cntr] = setday[cntr++];
 16643                           
 16644                           ; BSR set to: 1
 16645  00C7E8  51D2               	movf	__display_time@cntr& (0+255),w,b
 16646  00C7EA  0D01               	mullw	1
 16647  00C7EC  0EC3               	movlw	low __display_time@setday
 16648  00C7EE  24F3               	addwf	prodl,w,c
 16649  00C7F0  6ED9               	movwf	fsr2l,c
 16650  00C7F2  0E01               	movlw	high __display_time@setday
 16651  00C7F4  20F4               	addwfc	prodh,w,c
 16652  00C7F6  6EDA               	movwf	fsr2h,c
 16653  00C7F8  51D2               	movf	__display_time@cntr& (0+255),w,b
 16654  00C7FA  0D01               	mullw	1
 16655  00C7FC  0E6C               	movlw	low _display_content
 16656  00C7FE  24F3               	addwf	prodl,w,c
 16657  00C800  6EE1               	movwf	fsr1l,c
 16658  00C802  0E03               	movlw	high _display_content
 16659  00C804  20F4               	addwfc	prodh,w,c
 16660  00C806  6EE2               	movwf	fsr1h,c
 16661  00C808  CFDF FFE7          	movff	indf2,indf1
 16662                           
 16663                           ; BSR set to: 1
 16664  00C80C  2BD2               	incf	__display_time@cntr& (0+255),f,b
 16665  00C80E                     l1857:
 16666                           
 16667                           ; BSR set to: 1
 16668                           
 16669                           ; BSR set to: 1
 16670  00C80E  51D2               	movf	__display_time@cntr& (0+255),w,b
 16671  00C810  0D01               	mullw	1
 16672  00C812  0EC3               	movlw	low __display_time@setday
 16673  00C814  24F3               	addwf	prodl,w,c
 16674  00C816  6ED9               	movwf	fsr2l,c
 16675  00C818  0E01               	movlw	high __display_time@setday
 16676  00C81A  20F4               	addwfc	prodh,w,c
 16677  00C81C  6EDA               	movwf	fsr2h,c
 16678  00C81E  50DF               	movf	indf2,w,c
 16679  00C820  A4D8               	btfss	status,2,c
 16680  00C822  D7E2               	goto	l1858
 16681                           
 16682                           ; BSR set to: 1
 16683                           ;display.c: 313: cntr = 0;
 16684                           
 16685                           ; BSR set to: 1
 16686  00C824  0E00               	movlw	0
 16687  00C826  6FD2               	movwf	__display_time@cntr& (0+255),b
 16688                           
 16689                           ;display.c: 314: while(presshours[cntr])
 16690  00C828  D013               	goto	l1860
 16691  00C82A                     
 16692                           ; BSR set to: 1
 16693                           ;display.c: 315: display_content[3][cntr] = presshours[cntr++];
 16694                           
 16695                           ; BSR set to: 1
 16696  00C82A  51D2               	movf	__display_time@cntr& (0+255),w,b
 16697  00C82C  0D01               	mullw	1
 16698  00C82E  0E4E               	movlw	low __display_time@presshours
 16699  00C830  24F3               	addwf	prodl,w,c
 16700  00C832  6ED9               	movwf	fsr2l,c
 16701  00C834  0E01               	movlw	high __display_time@presshours
 16702  00C836  20F4               	addwfc	prodh,w,c
 16703  00C838  6EDA               	movwf	fsr2h,c
 16704  00C83A  51D2               	movf	__display_time@cntr& (0+255),w,b
 16705  00C83C  0D01               	mullw	1
 16706  00C83E  0EA8               	movlw	low (_display_content+60)
 16707  00C840  24F3               	addwf	prodl,w,c
 16708  00C842  6EE1               	movwf	fsr1l,c
 16709  00C844  0E03               	movlw	high (_display_content+60)
 16710  00C846  20F4               	addwfc	prodh,w,c
 16711  00C848  6EE2               	movwf	fsr1h,c
 16712  00C84A  CFDF FFE7          	movff	indf2,indf1
 16713                           
 16714                           ; BSR set to: 1
 16715  00C84E  2BD2               	incf	__display_time@cntr& (0+255),f,b
 16716  00C850                     l1860:
 16717                           
 16718                           ; BSR set to: 1
 16719                           
 16720                           ; BSR set to: 1
 16721  00C850  51D2               	movf	__display_time@cntr& (0+255),w,b
 16722  00C852  0D01               	mullw	1
 16723  00C854  0E4E               	movlw	low __display_time@presshours
 16724  00C856  24F3               	addwf	prodl,w,c
 16725  00C858  6ED9               	movwf	fsr2l,c
 16726  00C85A  0E01               	movlw	high __display_time@presshours
 16727  00C85C  20F4               	addwfc	prodh,w,c
 16728  00C85E  6EDA               	movwf	fsr2h,c
 16729  00C860  50DF               	movf	indf2,w,c
 16730  00C862  B4D8               	btfsc	status,2,c
 16731  00C864  D0E0               	goto	l1841
 16732  00C866  D7E1               	goto	l1861
 16733  00C868                     
 16734                           ; BSR set to: 1
 16735                           ;display.c: 319: cntr = 0;
 16736                           
 16737                           ; BSR set to: 1
 16738  00C868  0E00               	movlw	0
 16739  00C86A  6FD2               	movwf	__display_time@cntr& (0+255),b
 16740                           
 16741                           ;display.c: 320: while(sethours[cntr])
 16742  00C86C  D013               	goto	l1864
 16743  00C86E                     
 16744                           ; BSR set to: 1
 16745                           ;display.c: 321: display_content[0][cntr] = sethours[cntr++];
 16746                           
 16747                           ; BSR set to: 1
 16748  00C86E  51D2               	movf	__display_time@cntr& (0+255),w,b
 16749  00C870  0D01               	mullw	1
 16750  00C872  0EB0               	movlw	low __display_time@sethours
 16751  00C874  24F3               	addwf	prodl,w,c
 16752  00C876  6ED9               	movwf	fsr2l,c
 16753  00C878  0E01               	movlw	high __display_time@sethours
 16754  00C87A  20F4               	addwfc	prodh,w,c
 16755  00C87C  6EDA               	movwf	fsr2h,c
 16756  00C87E  51D2               	movf	__display_time@cntr& (0+255),w,b
 16757  00C880  0D01               	mullw	1
 16758  00C882  0E6C               	movlw	low _display_content
 16759  00C884  24F3               	addwf	prodl,w,c
 16760  00C886  6EE1               	movwf	fsr1l,c
 16761  00C888  0E03               	movlw	high _display_content
 16762  00C88A  20F4               	addwfc	prodh,w,c
 16763  00C88C  6EE2               	movwf	fsr1h,c
 16764  00C88E  CFDF FFE7          	movff	indf2,indf1
 16765                           
 16766                           ; BSR set to: 1
 16767  00C892  2BD2               	incf	__display_time@cntr& (0+255),f,b
 16768  00C894                     l1864:
 16769                           
 16770                           ; BSR set to: 1
 16771                           
 16772                           ; BSR set to: 1
 16773  00C894  51D2               	movf	__display_time@cntr& (0+255),w,b
 16774  00C896  0D01               	mullw	1
 16775  00C898  0EB0               	movlw	low __display_time@sethours
 16776  00C89A  24F3               	addwf	prodl,w,c
 16777  00C89C  6ED9               	movwf	fsr2l,c
 16778  00C89E  0E01               	movlw	high __display_time@sethours
 16779  00C8A0  20F4               	addwfc	prodh,w,c
 16780  00C8A2  6EDA               	movwf	fsr2h,c
 16781  00C8A4  50DF               	movf	indf2,w,c
 16782  00C8A6  A4D8               	btfss	status,2,c
 16783  00C8A8  D7E2               	goto	l1865
 16784                           
 16785                           ; BSR set to: 1
 16786                           ;display.c: 322: cntr = 0;
 16787                           
 16788                           ; BSR set to: 1
 16789  00C8AA  0E00               	movlw	0
 16790  00C8AC  6FD2               	movwf	__display_time@cntr& (0+255),b
 16791                           
 16792                           ;display.c: 323: while(pressminutes[cntr])
 16793  00C8AE  D013               	goto	l1867
 16794  00C8B0                     
 16795                           ; BSR set to: 1
 16796                           ;display.c: 324: display_content[3][cntr] = pressminutes[cntr++];
 16797                           
 16798                           ; BSR set to: 1
 16799  00C8B0  51D2               	movf	__display_time@cntr& (0+255),w,b
 16800  00C8B2  0D01               	mullw	1
 16801  00C8B4  0E14               	movlw	low __display_time@pressminutes
 16802  00C8B6  24F3               	addwf	prodl,w,c
 16803  00C8B8  6ED9               	movwf	fsr2l,c
 16804  00C8BA  0E01               	movlw	high __display_time@pressminutes
 16805  00C8BC  20F4               	addwfc	prodh,w,c
 16806  00C8BE  6EDA               	movwf	fsr2h,c
 16807  00C8C0  51D2               	movf	__display_time@cntr& (0+255),w,b
 16808  00C8C2  0D01               	mullw	1
 16809  00C8C4  0EA8               	movlw	low (_display_content+60)
 16810  00C8C6  24F3               	addwf	prodl,w,c
 16811  00C8C8  6EE1               	movwf	fsr1l,c
 16812  00C8CA  0E03               	movlw	high (_display_content+60)
 16813  00C8CC  20F4               	addwfc	prodh,w,c
 16814  00C8CE  6EE2               	movwf	fsr1h,c
 16815  00C8D0  CFDF FFE7          	movff	indf2,indf1
 16816                           
 16817                           ; BSR set to: 1
 16818  00C8D4  2BD2               	incf	__display_time@cntr& (0+255),f,b
 16819  00C8D6                     l1867:
 16820                           
 16821                           ; BSR set to: 1
 16822                           
 16823                           ; BSR set to: 1
 16824  00C8D6  51D2               	movf	__display_time@cntr& (0+255),w,b
 16825  00C8D8  0D01               	mullw	1
 16826  00C8DA  0E14               	movlw	low __display_time@pressminutes
 16827  00C8DC  24F3               	addwf	prodl,w,c
 16828  00C8DE  6ED9               	movwf	fsr2l,c
 16829  00C8E0  0E01               	movlw	high __display_time@pressminutes
 16830  00C8E2  20F4               	addwfc	prodh,w,c
 16831  00C8E4  6EDA               	movwf	fsr2h,c
 16832  00C8E6  50DF               	movf	indf2,w,c
 16833  00C8E8  B4D8               	btfsc	status,2,c
 16834  00C8EA  D09D               	goto	l1841
 16835  00C8EC  D7E1               	goto	l1868
 16836  00C8EE                     
 16837                           ; BSR set to: 1
 16838                           ;display.c: 328: cntr = 0;
 16839                           
 16840                           ; BSR set to: 1
 16841  00C8EE  0E00               	movlw	0
 16842  00C8F0  6FD2               	movwf	__display_time@cntr& (0+255),b
 16843                           
 16844                           ;display.c: 329: while(setminutes[cntr])
 16845  00C8F2  D013               	goto	l1871
 16846  00C8F4                     
 16847                           ; BSR set to: 1
 16848                           ;display.c: 330: display_content[0][cntr] = setminutes[cntr++];
 16849                           
 16850                           ; BSR set to: 1
 16851  00C8F4  51D2               	movf	__display_time@cntr& (0+255),w,b
 16852  00C8F6  0D01               	mullw	1
 16853  00C8F8  0E8E               	movlw	low __display_time@setminutes
 16854  00C8FA  24F3               	addwf	prodl,w,c
 16855  00C8FC  6ED9               	movwf	fsr2l,c
 16856  00C8FE  0E01               	movlw	high __display_time@setminutes
 16857  00C900  20F4               	addwfc	prodh,w,c
 16858  00C902  6EDA               	movwf	fsr2h,c
 16859  00C904  51D2               	movf	__display_time@cntr& (0+255),w,b
 16860  00C906  0D01               	mullw	1
 16861  00C908  0E6C               	movlw	low _display_content
 16862  00C90A  24F3               	addwf	prodl,w,c
 16863  00C90C  6EE1               	movwf	fsr1l,c
 16864  00C90E  0E03               	movlw	high _display_content
 16865  00C910  20F4               	addwfc	prodh,w,c
 16866  00C912  6EE2               	movwf	fsr1h,c
 16867  00C914  CFDF FFE7          	movff	indf2,indf1
 16868                           
 16869                           ; BSR set to: 1
 16870  00C918  2BD2               	incf	__display_time@cntr& (0+255),f,b
 16871  00C91A                     l1871:
 16872                           
 16873                           ; BSR set to: 1
 16874                           
 16875                           ; BSR set to: 1
 16876  00C91A  51D2               	movf	__display_time@cntr& (0+255),w,b
 16877  00C91C  0D01               	mullw	1
 16878  00C91E  0E8E               	movlw	low __display_time@setminutes
 16879  00C920  24F3               	addwf	prodl,w,c
 16880  00C922  6ED9               	movwf	fsr2l,c
 16881  00C924  0E01               	movlw	high __display_time@setminutes
 16882  00C926  20F4               	addwfc	prodh,w,c
 16883  00C928  6EDA               	movwf	fsr2h,c
 16884  00C92A  50DF               	movf	indf2,w,c
 16885  00C92C  A4D8               	btfss	status,2,c
 16886  00C92E  D7E2               	goto	l1872
 16887                           
 16888                           ; BSR set to: 1
 16889                           ;display.c: 331: cntr = 0;
 16890                           
 16891                           ; BSR set to: 1
 16892  00C930  0E00               	movlw	0
 16893  00C932  6FD2               	movwf	__display_time@cntr& (0+255),b
 16894                           
 16895                           ;display.c: 332: while(pressseconds[cntr])
 16896  00C934  D013               	goto	l1874
 16897  00C936                     
 16898                           ; BSR set to: 1
 16899                           ;display.c: 333: display_content[3][cntr] = pressseconds[cntr++];
 16900                           
 16901                           ; BSR set to: 1
 16902  00C936  51D2               	movf	__display_time@cntr& (0+255),w,b
 16903  00C938  0D01               	mullw	1
 16904  00C93A  0E28               	movlw	low __display_time@pressseconds
 16905  00C93C  24F3               	addwf	prodl,w,c
 16906  00C93E  6ED9               	movwf	fsr2l,c
 16907  00C940  0E01               	movlw	high __display_time@pressseconds
 16908  00C942  20F4               	addwfc	prodh,w,c
 16909  00C944  6EDA               	movwf	fsr2h,c
 16910  00C946  51D2               	movf	__display_time@cntr& (0+255),w,b
 16911  00C948  0D01               	mullw	1
 16912  00C94A  0EA8               	movlw	low (_display_content+60)
 16913  00C94C  24F3               	addwf	prodl,w,c
 16914  00C94E  6EE1               	movwf	fsr1l,c
 16915  00C950  0E03               	movlw	high (_display_content+60)
 16916  00C952  20F4               	addwfc	prodh,w,c
 16917  00C954  6EE2               	movwf	fsr1h,c
 16918  00C956  CFDF FFE7          	movff	indf2,indf1
 16919                           
 16920                           ; BSR set to: 1
 16921  00C95A  2BD2               	incf	__display_time@cntr& (0+255),f,b
 16922  00C95C                     l1874:
 16923                           
 16924                           ; BSR set to: 1
 16925                           
 16926                           ; BSR set to: 1
 16927  00C95C  51D2               	movf	__display_time@cntr& (0+255),w,b
 16928  00C95E  0D01               	mullw	1
 16929  00C960  0E28               	movlw	low __display_time@pressseconds
 16930  00C962  24F3               	addwf	prodl,w,c
 16931  00C964  6ED9               	movwf	fsr2l,c
 16932  00C966  0E01               	movlw	high __display_time@pressseconds
 16933  00C968  20F4               	addwfc	prodh,w,c
 16934  00C96A  6EDA               	movwf	fsr2h,c
 16935  00C96C  50DF               	movf	indf2,w,c
 16936  00C96E  B4D8               	btfsc	status,2,c
 16937  00C970  D05A               	goto	l1841
 16938  00C972  D7E1               	goto	l1875
 16939  00C974                     
 16940                           ; BSR set to: 1
 16941                           ;display.c: 337: cntr = 0;
 16942                           
 16943                           ; BSR set to: 1
 16944  00C974  0E00               	movlw	0
 16945  00C976  6FD2               	movwf	__display_time@cntr& (0+255),b
 16946                           
 16947                           ;display.c: 338: while(setseconds[cntr])
 16948  00C978  D013               	goto	l1878
 16949  00C97A                     
 16950                           ; BSR set to: 1
 16951                           ;display.c: 339: display_content[0][cntr] = setseconds[cntr++];
 16952                           
 16953                           ; BSR set to: 1
 16954  00C97A  51D2               	movf	__display_time@cntr& (0+255),w,b
 16955  00C97C  0D01               	mullw	1
 16956  00C97E  0E9A               	movlw	low __display_time@setseconds
 16957  00C980  24F3               	addwf	prodl,w,c
 16958  00C982  6ED9               	movwf	fsr2l,c
 16959  00C984  0E01               	movlw	high __display_time@setseconds
 16960  00C986  20F4               	addwfc	prodh,w,c
 16961  00C988  6EDA               	movwf	fsr2h,c
 16962  00C98A  51D2               	movf	__display_time@cntr& (0+255),w,b
 16963  00C98C  0D01               	mullw	1
 16964  00C98E  0E6C               	movlw	low _display_content
 16965  00C990  24F3               	addwf	prodl,w,c
 16966  00C992  6EE1               	movwf	fsr1l,c
 16967  00C994  0E03               	movlw	high _display_content
 16968  00C996  20F4               	addwfc	prodh,w,c
 16969  00C998  6EE2               	movwf	fsr1h,c
 16970  00C99A  CFDF FFE7          	movff	indf2,indf1
 16971                           
 16972                           ; BSR set to: 1
 16973  00C99E  2BD2               	incf	__display_time@cntr& (0+255),f,b
 16974  00C9A0                     l1878:
 16975                           
 16976                           ; BSR set to: 1
 16977                           
 16978                           ; BSR set to: 1
 16979  00C9A0  51D2               	movf	__display_time@cntr& (0+255),w,b
 16980  00C9A2  0D01               	mullw	1
 16981  00C9A4  0E9A               	movlw	low __display_time@setseconds
 16982  00C9A6  24F3               	addwf	prodl,w,c
 16983  00C9A8  6ED9               	movwf	fsr2l,c
 16984  00C9AA  0E01               	movlw	high __display_time@setseconds
 16985  00C9AC  20F4               	addwfc	prodh,w,c
 16986  00C9AE  6EDA               	movwf	fsr2h,c
 16987  00C9B0  50DF               	movf	indf2,w,c
 16988  00C9B2  A4D8               	btfss	status,2,c
 16989  00C9B4  D7E2               	goto	l1879
 16990                           
 16991                           ; BSR set to: 1
 16992                           ;display.c: 340: cntr = 0;
 16993                           
 16994                           ; BSR set to: 1
 16995  00C9B6  0E00               	movlw	0
 16996  00C9B8  6FD2               	movwf	__display_time@cntr& (0+255),b
 16997                           
 16998                           ;display.c: 341: while(presssave[cntr])
 16999  00C9BA  D013               	goto	l1881
 17000  00C9BC                     
 17001                           ; BSR set to: 1
 17002                           ;display.c: 342: display_content[3][cntr] = presssave[cntr++];
 17003                           
 17004                           ; BSR set to: 1
 17005  00C9BC  51D2               	movf	__display_time@cntr& (0+255),w,b
 17006  00C9BE  0D01               	mullw	1
 17007  00C9C0  0E70               	movlw	low __display_time@presssave
 17008  00C9C2  24F3               	addwf	prodl,w,c
 17009  00C9C4  6ED9               	movwf	fsr2l,c
 17010  00C9C6  0E01               	movlw	high __display_time@presssave
 17011  00C9C8  20F4               	addwfc	prodh,w,c
 17012  00C9CA  6EDA               	movwf	fsr2h,c
 17013  00C9CC  51D2               	movf	__display_time@cntr& (0+255),w,b
 17014  00C9CE  0D01               	mullw	1
 17015  00C9D0  0EA8               	movlw	low (_display_content+60)
 17016  00C9D2  24F3               	addwf	prodl,w,c
 17017  00C9D4  6EE1               	movwf	fsr1l,c
 17018  00C9D6  0E03               	movlw	high (_display_content+60)
 17019  00C9D8  20F4               	addwfc	prodh,w,c
 17020  00C9DA  6EE2               	movwf	fsr1h,c
 17021  00C9DC  CFDF FFE7          	movff	indf2,indf1
 17022                           
 17023                           ; BSR set to: 1
 17024  00C9E0  2BD2               	incf	__display_time@cntr& (0+255),f,b
 17025  00C9E2                     l1881:
 17026                           
 17027                           ; BSR set to: 1
 17028                           
 17029                           ; BSR set to: 1
 17030  00C9E2  51D2               	movf	__display_time@cntr& (0+255),w,b
 17031  00C9E4  0D01               	mullw	1
 17032  00C9E6  0E70               	movlw	low __display_time@presssave
 17033  00C9E8  24F3               	addwf	prodl,w,c
 17034  00C9EA  6ED9               	movwf	fsr2l,c
 17035  00C9EC  0E01               	movlw	high __display_time@presssave
 17036  00C9EE  20F4               	addwfc	prodh,w,c
 17037  00C9F0  6EDA               	movwf	fsr2h,c
 17038  00C9F2  50DF               	movf	indf2,w,c
 17039  00C9F4  B4D8               	btfsc	status,2,c
 17040  00C9F6  D017               	goto	l1841
 17041  00C9F8  D7E1               	goto	l1882
 17042  00C9FA                     l1833:
 17043                           
 17044                           ; BSR set to: 1
 17045                           
 17046                           ; BSR set to: 1
 17047  00C9FA  51CB               	movf	__display_time@mode& (0+255),w,b
 17048                           
 17049                           ; Switch size 1, requested type "space"
 17050                           ; Number of cases is 7, Range of values is 16 to 22
 17051                           ; switch strategies available:
 17052                           ; Name         Instructions Cycles
 17053                           ; simple_byte           22    12 (average)
 17054                           ;	Chosen strategy is simple_byte
 17055  00C9FC  0A10               	xorlw	16	; case 16
 17056  00C9FE  B4D8               	btfsc	status,2,c
 17057  00CA00  D627               	goto	l1834
 17058  00CA02  0A01               	xorlw	1	; case 17
 17059  00CA04  B4D8               	btfsc	status,2,c
 17060  00CA06  D667               	goto	l1842
 17061  00CA08  0A03               	xorlw	3	; case 18
 17062  00CA0A  B4D8               	btfsc	status,2,c
 17063  00CA0C  D6A7               	goto	l1849
 17064  00CA0E  0A01               	xorlw	1	; case 19
 17065  00CA10  B4D8               	btfsc	status,2,c
 17066  00CA12  D6E7               	goto	l1856
 17067  00CA14  0A07               	xorlw	7	; case 20
 17068  00CA16  B4D8               	btfsc	status,2,c
 17069  00CA18  D727               	goto	l1863
 17070  00CA1A  0A01               	xorlw	1	; case 21
 17071  00CA1C  B4D8               	btfsc	status,2,c
 17072  00CA1E  D767               	goto	l1870
 17073  00CA20  0A03               	xorlw	3	; case 22
 17074  00CA22  B4D8               	btfsc	status,2,c
 17075  00CA24  D7A7               	goto	l1877
 17076  00CA26                     l1841:
 17077                           
 17078                           ; BSR set to: 1
 17079                           ;display.c: 347: display_content[1][0] = '2';
 17080                           
 17081                           ; BSR set to: 1
 17082  00CA26  0E32               	movlw	50
 17083  00CA28  0103               	movlb	3	; () banked
 17084  00CA2A  6F80               	movwf	(_display_content+20)& (0+255),b
 17085                           
 17086                           ;display.c: 348: display_content[1][1] = '0';
 17087  00CA2C  0E30               	movlw	48
 17088  00CA2E  6F81               	movwf	(_display_content+21)& (0+255),b
 17089                           
 17090                           ; BSR set to: 3
 17091                           ;display.c: 349: display_content[1][2] = (year>>4) + 48;
 17092  00CA30  0101               	movlb	1	; () banked
 17093  00CA32  39CC               	swapf	__display_time@year& (0+255),w,b
 17094  00CA34  0B0F               	andlw	15
 17095  00CA36  0F30               	addlw	48
 17096  00CA38  0103               	movlb	3	; () banked
 17097  00CA3A  6F82               	movwf	(_display_content+22)& (0+255),b
 17098                           
 17099                           ; BSR set to: 3
 17100                           ;display.c: 350: display_content[1][3] = (year&0x0F) + 48;
 17101  00CA3C  0101               	movlb	1	; () banked
 17102  00CA3E  51CC               	movf	__display_time@year& (0+255),w,b
 17103  00CA40  0B0F               	andlw	15
 17104  00CA42  0F30               	addlw	48
 17105  00CA44  0103               	movlb	3	; () banked
 17106  00CA46  6F83               	movwf	(_display_content+23)& (0+255),b
 17107                           
 17108                           ;display.c: 352: display_content[1][4] = '-';
 17109  00CA48  0E2D               	movlw	45
 17110  00CA4A  6F84               	movwf	(_display_content+24)& (0+255),b
 17111                           
 17112                           ; BSR set to: 3
 17113                           ;display.c: 353: display_content[1][5] = (month>>4) + 48;
 17114  00CA4C  0101               	movlb	1	; () banked
 17115  00CA4E  39CD               	swapf	__display_time@month& (0+255),w,b
 17116  00CA50  0B0F               	andlw	15
 17117  00CA52  0F30               	addlw	48
 17118  00CA54  0103               	movlb	3	; () banked
 17119  00CA56  6F85               	movwf	(_display_content+25)& (0+255),b
 17120                           
 17121                           ; BSR set to: 3
 17122                           ;display.c: 354: display_content[1][6] = (month&0x0F) + 48;
 17123  00CA58  0101               	movlb	1	; () banked
 17124  00CA5A  51CD               	movf	__display_time@month& (0+255),w,b
 17125  00CA5C  0B0F               	andlw	15
 17126  00CA5E  0F30               	addlw	48
 17127  00CA60  0103               	movlb	3	; () banked
 17128  00CA62  6F86               	movwf	(_display_content+26)& (0+255),b
 17129                           
 17130                           ;display.c: 356: display_content[1][7] = '-';
 17131  00CA64  0E2D               	movlw	45
 17132  00CA66  6F87               	movwf	(_display_content+27)& (0+255),b
 17133                           
 17134                           ; BSR set to: 3
 17135                           ;display.c: 357: display_content[1][8] = (day>>4) + 48;
 17136  00CA68  0101               	movlb	1	; () banked
 17137  00CA6A  39CE               	swapf	__display_time@day& (0+255),w,b
 17138  00CA6C  0B0F               	andlw	15
 17139  00CA6E  0F30               	addlw	48
 17140  00CA70  0103               	movlb	3	; () banked
 17141  00CA72  6F88               	movwf	(_display_content+28)& (0+255),b
 17142                           
 17143                           ; BSR set to: 3
 17144                           ;display.c: 358: display_content[1][9] = (day&0x0F) + 48;
 17145  00CA74  0101               	movlb	1	; () banked
 17146  00CA76  51CE               	movf	__display_time@day& (0+255),w,b
 17147  00CA78  0B0F               	andlw	15
 17148  00CA7A  0F30               	addlw	48
 17149  00CA7C  0103               	movlb	3	; () banked
 17150  00CA7E  6F89               	movwf	(_display_content+29)& (0+255),b
 17151                           
 17152                           ; BSR set to: 3
 17153                           ;display.c: 360: display_content[2][0] = (hours>>4) + 48;
 17154  00CA80  0101               	movlb	1	; () banked
 17155  00CA82  39CF               	swapf	__display_time@hours& (0+255),w,b
 17156  00CA84  0B0F               	andlw	15
 17157  00CA86  0F30               	addlw	48
 17158  00CA88  0103               	movlb	3	; () banked
 17159  00CA8A  6F94               	movwf	(_display_content+40)& (0+255),b
 17160                           
 17161                           ; BSR set to: 3
 17162                           ;display.c: 361: display_content[2][1] = (hours&0x0F) + 48;
 17163  00CA8C  0101               	movlb	1	; () banked
 17164  00CA8E  51CF               	movf	__display_time@hours& (0+255),w,b
 17165  00CA90  0B0F               	andlw	15
 17166  00CA92  0F30               	addlw	48
 17167  00CA94  0103               	movlb	3	; () banked
 17168  00CA96  6F95               	movwf	(_display_content+41)& (0+255),b
 17169                           
 17170                           ;display.c: 363: display_content[2][2] = ':';
 17171  00CA98  0E3A               	movlw	58
 17172  00CA9A  6F96               	movwf	(_display_content+42)& (0+255),b
 17173                           
 17174                           ; BSR set to: 3
 17175                           ;display.c: 364: display_content[2][3] = (minutes>>4) + 48;
 17176  00CA9C  0101               	movlb	1	; () banked
 17177  00CA9E  39D0               	swapf	__display_time@minutes& (0+255),w,b
 17178  00CAA0  0B0F               	andlw	15
 17179  00CAA2  0F30               	addlw	48
 17180  00CAA4  0103               	movlb	3	; () banked
 17181  00CAA6  6F97               	movwf	(_display_content+43)& (0+255),b
 17182                           
 17183                           ; BSR set to: 3
 17184                           ;display.c: 365: display_content[2][4] = (minutes&0x0F) + 48;
 17185  00CAA8  0101               	movlb	1	; () banked
 17186  00CAAA  51D0               	movf	__display_time@minutes& (0+255),w,b
 17187  00CAAC  0B0F               	andlw	15
 17188  00CAAE  0F30               	addlw	48
 17189  00CAB0  0103               	movlb	3	; () banked
 17190  00CAB2  6F98               	movwf	(_display_content+44)& (0+255),b
 17191                           
 17192                           ;display.c: 367: display_content[2][5] = ':';
 17193  00CAB4  0E3A               	movlw	58
 17194  00CAB6  6F99               	movwf	(_display_content+45)& (0+255),b
 17195                           
 17196                           ; BSR set to: 3
 17197                           ;display.c: 368: display_content[2][6] = (seconds>>4) + 48;
 17198  00CAB8  0101               	movlb	1	; () banked
 17199  00CABA  39D1               	swapf	__display_time@seconds& (0+255),w,b
 17200  00CABC  0B0F               	andlw	15
 17201  00CABE  0F30               	addlw	48
 17202  00CAC0  0103               	movlb	3	; () banked
 17203  00CAC2  6F9A               	movwf	(_display_content+46)& (0+255),b
 17204                           
 17205                           ; BSR set to: 3
 17206                           ;display.c: 369: display_content[2][7] = (seconds&0x0F) + 48;
 17207  00CAC4  0101               	movlb	1	; () banked
 17208  00CAC6  51D1               	movf	__display_time@seconds& (0+255),w,b
 17209  00CAC8  0B0F               	andlw	15
 17210  00CACA  0F30               	addlw	48
 17211  00CACC  0103               	movlb	3	; () banked
 17212  00CACE  6F9B               	movwf	(_display_content+47)& (0+255),b
 17213                           
 17214                           ; BSR set to: 3
 17215  00CAD0  0012               	return		;funcret
 17216  00CAD2                     __end_of__display_time:
 17217                           	opt stack 0
 17218                           tblptru	equ	0xFF8
 17219                           tblptrh	equ	0xFF7
 17220                           tblptrl	equ	0xFF6
 17221                           tablat	equ	0xFF5
 17222                           prodh	equ	0xFF4
 17223                           prodl	equ	0xFF3
 17224                           intcon	equ	0xFF2
 17225                           intcon2	equ	0xFF1
 17226                           intcon3	equ	0xFF0
 17227                           postinc0	equ	0xFEE
 17228                           wreg	equ	0xFE8
 17229                           indf1	equ	0xFE7
 17230                           postdec1	equ	0xFE5
 17231                           plusw1	equ	0xFE3
 17232                           fsr1h	equ	0xFE2
 17233                           fsr1l	equ	0xFE1
 17234                           indf2	equ	0xFDF
 17235                           postinc2	equ	0xFDE
 17236                           postdec2	equ	0xFDD
 17237                           plusw2	equ	0xFDB
 17238                           fsr2h	equ	0xFDA
 17239                           fsr2l	equ	0xFD9
 17240                           status	equ	0xFD8
 17241                           
 17242 ;; *************** function __display_temperature *****************
 17243 ;; Defined at:
 17244 ;;		line 582 in file "display.c"
 17245 ;; Parameters:    Size  Location     Type
 17246 ;;		None
 17247 ;; Auto vars:     Size  Location     Type
 17248 ;;  header         20   48[BANK0 ] const unsigned char [20]
 17249 ;;  external2      12   80[BANK0 ] const unsigned char [12]
 17250 ;;  external1      12   68[BANK0 ] const unsigned char [12]
 17251 ;;  internal       11   92[BANK0 ] const unsigned char [11]
 17252 ;;  cntr            1  103[BANK0 ] unsigned char 
 17253 ;; Return value:  Size  Location     Type
 17254 ;;                  1    wreg      void 
 17255 ;; Registers used:
 17256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17257 ;; Tracked objects:
 17258 ;;		On entry : 0/0
 17259 ;;		On exit  : 0/0
 17260 ;;		Unchanged: 0/0
 17261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17263 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17265 ;;      Totals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17266 ;;Total ram usage:       56 bytes
 17267 ;; Hardware stack levels used:    1
 17268 ;; Hardware stack levels required when called:   14
 17269 ;; This function calls:
 17270 ;;		__display_itoa
 17271 ;; This function is called by:
 17272 ;;		_display_prepare
 17273 ;; This function uses a non-reentrant model
 17274 ;;
 17275                           
 17276                           	psect	text71
 17277  01144E                     __ptext71:
 17278                           	opt stack 0
 17279  01144E                     __display_temperature:
 17280                           	opt stack 15
 17281                           
 17282                           ;display.c: 584: uint8_t cntr;;display.c: 585: const char header[] = "Temperature Monito
      +                          r";
 17283                           
 17284                           ; BSR set to: 3
 17285                           ;incstack = 0
 17286  01144E  0EDF               	movlw	low __display_temperature@F7362
 17287  011450  6EF6               	movwf	tblptrl,c
 17288  011452                     	if	1	;There is more than 1 active tblptr byte
 17289  011452  0EC0               	movlw	high __display_temperature@F7362
 17290  011454  6EF7               	movwf	tblptrh,c
 17291  011456                     	endif
 17292  011456                     	if	1	;There are 3 active tblptr bytes
 17293  011456  0E00               	movlw	low (__display_temperature@F7362 shr (0+16))
 17294  011458  6EF8               	movwf	tblptru,c
 17295  01145A                     	endif
 17296  01145A  EE20  F090         	lfsr	2,__display_temperature@header
 17297  01145E  0E13               	movlw	19
 17298  011460                     u26470:
 17299  011460  0009               	tblrd		*+
 17300  011462  CFF5 FFDE          	movff	tablat,postinc2
 17301  011466  06E8               	decf	wreg,f,c
 17302  011468  E2FB               	bc	u26470
 17303                           
 17304                           ;display.c: 586: const char internal[] = "On-board: ";
 17305  01146A  0EF1               	movlw	low __display_temperature@F7364
 17306  01146C  6EF6               	movwf	tblptrl,c
 17307  01146E                     	if	1	;There is more than 1 active tblptr byte
 17308  01146E  0EC2               	movlw	high __display_temperature@F7364
 17309  011470  6EF7               	movwf	tblptrh,c
 17310  011472                     	endif
 17311  011472                     	if	1	;There are 3 active tblptr bytes
 17312  011472  0E00               	movlw	low (__display_temperature@F7364 shr (0+16))
 17313  011474  6EF8               	movwf	tblptru,c
 17314  011476                     	endif
 17315  011476  EE20  F0BC         	lfsr	2,__display_temperature@internal
 17316  01147A  0E0A               	movlw	10
 17317  01147C                     u26480:
 17318  01147C  0009               	tblrd		*+
 17319  01147E  CFF5 FFDE          	movff	tablat,postinc2
 17320  011482  06E8               	decf	wreg,f,c
 17321  011484  E2FB               	bc	u26480
 17322                           
 17323                           ;display.c: 587: const char external1[] = "External 1:";
 17324  011486  0EC1               	movlw	low __display_temperature@F7366
 17325  011488  6EF6               	movwf	tblptrl,c
 17326  01148A                     	if	1	;There is more than 1 active tblptr byte
 17327  01148A  0EC2               	movlw	high __display_temperature@F7366
 17328  01148C  6EF7               	movwf	tblptrh,c
 17329  01148E                     	endif
 17330  01148E                     	if	1	;There are 3 active tblptr bytes
 17331  01148E  0E00               	movlw	low (__display_temperature@F7366 shr (0+16))
 17332  011490  6EF8               	movwf	tblptru,c
 17333  011492                     	endif
 17334  011492  EE20  F0A4         	lfsr	2,__display_temperature@external1
 17335  011496  0E0B               	movlw	11
 17336  011498                     u26490:
 17337  011498  0009               	tblrd		*+
 17338  01149A  CFF5 FFDE          	movff	tablat,postinc2
 17339  01149E  06E8               	decf	wreg,f,c
 17340  0114A0  E2FB               	bc	u26490
 17341                           
 17342                           ;display.c: 588: const char external2[] = "External 2:";
 17343  0114A2  0EB5               	movlw	low __display_temperature@F7368
 17344  0114A4  6EF6               	movwf	tblptrl,c
 17345  0114A6                     	if	1	;There is more than 1 active tblptr byte
 17346  0114A6  0EC2               	movlw	high __display_temperature@F7368
 17347  0114A8  6EF7               	movwf	tblptrh,c
 17348  0114AA                     	endif
 17349  0114AA                     	if	1	;There are 3 active tblptr bytes
 17350  0114AA  0E00               	movlw	low (__display_temperature@F7368 shr (0+16))
 17351  0114AC  6EF8               	movwf	tblptru,c
 17352  0114AE                     	endif
 17353  0114AE  EE20  F0B0         	lfsr	2,__display_temperature@external2
 17354  0114B2  0E0B               	movlw	11
 17355  0114B4                     u26500:
 17356  0114B4  0009               	tblrd		*+
 17357  0114B6  CFF5 FFDE          	movff	tablat,postinc2
 17358  0114BA  06E8               	decf	wreg,f,c
 17359  0114BC  E2FB               	bc	u26500
 17360                           
 17361                           ;display.c: 590: cntr = 0;
 17362  0114BE  0E00               	movlw	0
 17363  0114C0  0100               	movlb	0	; () banked
 17364  0114C2  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 17365                           
 17366                           ;display.c: 591: while(header[cntr])
 17367  0114C4  D013               	goto	l2025
 17368  0114C6                     
 17369                           ; BSR set to: 0
 17370                           ;display.c: 592: display_content[0][cntr] = header[cntr++];
 17371                           
 17372                           ; BSR set to: 0
 17373  0114C6  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 17374  0114C8  0D01               	mullw	1
 17375  0114CA  0E90               	movlw	low __display_temperature@header
 17376  0114CC  24F3               	addwf	prodl,w,c
 17377  0114CE  6ED9               	movwf	fsr2l,c
 17378  0114D0  0E00               	movlw	high __display_temperature@header
 17379  0114D2  20F4               	addwfc	prodh,w,c
 17380  0114D4  6EDA               	movwf	fsr2h,c
 17381  0114D6  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 17382  0114D8  0D01               	mullw	1
 17383  0114DA  0E6C               	movlw	low _display_content
 17384  0114DC  24F3               	addwf	prodl,w,c
 17385  0114DE  6EE1               	movwf	fsr1l,c
 17386  0114E0  0E03               	movlw	high _display_content
 17387  0114E2  20F4               	addwfc	prodh,w,c
 17388  0114E4  6EE2               	movwf	fsr1h,c
 17389  0114E6  CFDF FFE7          	movff	indf2,indf1
 17390                           
 17391                           ; BSR set to: 0
 17392  0114EA  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 17393  0114EC                     l2025:
 17394                           
 17395                           ; BSR set to: 0
 17396                           
 17397                           ; BSR set to: 0
 17398  0114EC  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 17399  0114EE  0D01               	mullw	1
 17400  0114F0  0E90               	movlw	low __display_temperature@header
 17401  0114F2  24F3               	addwf	prodl,w,c
 17402  0114F4  6ED9               	movwf	fsr2l,c
 17403  0114F6  0E00               	movlw	high __display_temperature@header
 17404  0114F8  20F4               	addwfc	prodh,w,c
 17405  0114FA  6EDA               	movwf	fsr2h,c
 17406  0114FC  50DF               	movf	indf2,w,c
 17407  0114FE  A4D8               	btfss	status,2,c
 17408  011500  D7E2               	goto	l2026
 17409                           
 17410                           ; BSR set to: 0
 17411                           ;display.c: 594: cntr = 0;
 17412                           
 17413                           ; BSR set to: 0
 17414  011502  0E00               	movlw	0
 17415  011504  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 17416                           
 17417                           ;display.c: 595: while(internal[cntr])
 17418  011506  D013               	goto	l2028
 17419  011508                     
 17420                           ; BSR set to: 0
 17421                           ;display.c: 596: display_content[1][cntr] = internal[cntr++];
 17422                           
 17423                           ; BSR set to: 0
 17424  011508  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 17425  01150A  0D01               	mullw	1
 17426  01150C  0EBC               	movlw	low __display_temperature@internal
 17427  01150E  24F3               	addwf	prodl,w,c
 17428  011510  6ED9               	movwf	fsr2l,c
 17429  011512  0E00               	movlw	high __display_temperature@internal
 17430  011514  20F4               	addwfc	prodh,w,c
 17431  011516  6EDA               	movwf	fsr2h,c
 17432  011518  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 17433  01151A  0D01               	mullw	1
 17434  01151C  0E80               	movlw	low (_display_content+20)
 17435  01151E  24F3               	addwf	prodl,w,c
 17436  011520  6EE1               	movwf	fsr1l,c
 17437  011522  0E03               	movlw	high (_display_content+20)
 17438  011524  20F4               	addwfc	prodh,w,c
 17439  011526  6EE2               	movwf	fsr1h,c
 17440  011528  CFDF FFE7          	movff	indf2,indf1
 17441                           
 17442                           ; BSR set to: 0
 17443  01152C  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 17444  01152E                     l2028:
 17445                           
 17446                           ; BSR set to: 0
 17447                           
 17448                           ; BSR set to: 0
 17449  01152E  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 17450  011530  0D01               	mullw	1
 17451  011532  0EBC               	movlw	low __display_temperature@internal
 17452  011534  24F3               	addwf	prodl,w,c
 17453  011536  6ED9               	movwf	fsr2l,c
 17454  011538  0E00               	movlw	high __display_temperature@internal
 17455  01153A  20F4               	addwfc	prodh,w,c
 17456  01153C  6EDA               	movwf	fsr2h,c
 17457  01153E  50DF               	movf	indf2,w,c
 17458  011540  A4D8               	btfss	status,2,c
 17459  011542  D7E2               	goto	l2029
 17460                           
 17461                           ; BSR set to: 0
 17462                           ;display.c: 598: _display_itoa(os.temperature_onboard, 2, &display_content[1][12]);
 17463                           
 17464                           ; BSR set to: 0
 17465  011544  C236  F078         	movff	_os+54,__display_itoa@value	;volatile
 17466  011548  C237  F079         	movff	_os+55,__display_itoa@value+1	;volatile
 17467  01154C  0E02               	movlw	2
 17468  01154E  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 17469  011550  0E8C               	movlw	low (_display_content+32)
 17470  011552  6F7B               	movwf	__display_itoa@text& (0+255),b
 17471  011554  0E03               	movlw	high (_display_content+32)
 17472  011556  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 17473  011558  EC51  F083         	call	__display_itoa	;wreg free
 17474                           
 17475                           ;display.c: 600: cntr = 0;
 17476  01155C  0E00               	movlw	0
 17477  01155E  0100               	movlb	0	; () banked
 17478  011560  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 17479                           
 17480                           ;display.c: 601: while(external1[cntr])
 17481  011562  D013               	goto	l2031
 17482  011564                     
 17483                           ; BSR set to: 0
 17484                           ;display.c: 602: display_content[2][cntr] = external1[cntr++];
 17485                           
 17486                           ; BSR set to: 0
 17487  011564  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 17488  011566  0D01               	mullw	1
 17489  011568  0EA4               	movlw	low __display_temperature@external1
 17490  01156A  24F3               	addwf	prodl,w,c
 17491  01156C  6ED9               	movwf	fsr2l,c
 17492  01156E  0E00               	movlw	high __display_temperature@external1
 17493  011570  20F4               	addwfc	prodh,w,c
 17494  011572  6EDA               	movwf	fsr2h,c
 17495  011574  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 17496  011576  0D01               	mullw	1
 17497  011578  0E94               	movlw	low (_display_content+40)
 17498  01157A  24F3               	addwf	prodl,w,c
 17499  01157C  6EE1               	movwf	fsr1l,c
 17500  01157E  0E03               	movlw	high (_display_content+40)
 17501  011580  20F4               	addwfc	prodh,w,c
 17502  011582  6EE2               	movwf	fsr1h,c
 17503  011584  CFDF FFE7          	movff	indf2,indf1
 17504                           
 17505                           ; BSR set to: 0
 17506  011588  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 17507  01158A                     l2031:
 17508                           
 17509                           ; BSR set to: 0
 17510                           
 17511                           ; BSR set to: 0
 17512  01158A  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 17513  01158C  0D01               	mullw	1
 17514  01158E  0EA4               	movlw	low __display_temperature@external1
 17515  011590  24F3               	addwf	prodl,w,c
 17516  011592  6ED9               	movwf	fsr2l,c
 17517  011594  0E00               	movlw	high __display_temperature@external1
 17518  011596  20F4               	addwfc	prodh,w,c
 17519  011598  6EDA               	movwf	fsr2h,c
 17520  01159A  50DF               	movf	indf2,w,c
 17521  01159C  A4D8               	btfss	status,2,c
 17522  01159E  D7E2               	goto	l2032
 17523                           
 17524                           ; BSR set to: 0
 17525                           ;display.c: 604: _display_itoa(os.temperature_external_1, 2, &display_content[2][12]);
 17526                           
 17527                           ; BSR set to: 0
 17528  0115A0  C23A  F078         	movff	_os+58,__display_itoa@value	;volatile
 17529  0115A4  C23B  F079         	movff	_os+59,__display_itoa@value+1	;volatile
 17530  0115A8  0E02               	movlw	2
 17531  0115AA  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 17532  0115AC  0EA0               	movlw	low (_display_content+52)
 17533  0115AE  6F7B               	movwf	__display_itoa@text& (0+255),b
 17534  0115B0  0E03               	movlw	high (_display_content+52)
 17535  0115B2  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 17536  0115B4  EC51  F083         	call	__display_itoa	;wreg free
 17537                           
 17538                           ;display.c: 606: cntr = 0;
 17539  0115B8  0E00               	movlw	0
 17540  0115BA  0100               	movlb	0	; () banked
 17541  0115BC  6FC7               	movwf	__display_temperature@cntr& (0+255),b
 17542                           
 17543                           ;display.c: 607: while(external2[cntr])
 17544  0115BE  D013               	goto	l2034
 17545  0115C0                     
 17546                           ; BSR set to: 0
 17547                           ;display.c: 608: display_content[3][cntr] = external2[cntr++];
 17548                           
 17549                           ; BSR set to: 0
 17550  0115C0  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 17551  0115C2  0D01               	mullw	1
 17552  0115C4  0EB0               	movlw	low __display_temperature@external2
 17553  0115C6  24F3               	addwf	prodl,w,c
 17554  0115C8  6ED9               	movwf	fsr2l,c
 17555  0115CA  0E00               	movlw	high __display_temperature@external2
 17556  0115CC  20F4               	addwfc	prodh,w,c
 17557  0115CE  6EDA               	movwf	fsr2h,c
 17558  0115D0  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 17559  0115D2  0D01               	mullw	1
 17560  0115D4  0EA8               	movlw	low (_display_content+60)
 17561  0115D6  24F3               	addwf	prodl,w,c
 17562  0115D8  6EE1               	movwf	fsr1l,c
 17563  0115DA  0E03               	movlw	high (_display_content+60)
 17564  0115DC  20F4               	addwfc	prodh,w,c
 17565  0115DE  6EE2               	movwf	fsr1h,c
 17566  0115E0  CFDF FFE7          	movff	indf2,indf1
 17567                           
 17568                           ; BSR set to: 0
 17569  0115E4  2BC7               	incf	__display_temperature@cntr& (0+255),f,b
 17570  0115E6                     l2034:
 17571                           
 17572                           ; BSR set to: 0
 17573                           
 17574                           ; BSR set to: 0
 17575  0115E6  51C7               	movf	__display_temperature@cntr& (0+255),w,b
 17576  0115E8  0D01               	mullw	1
 17577  0115EA  0EB0               	movlw	low __display_temperature@external2
 17578  0115EC  24F3               	addwf	prodl,w,c
 17579  0115EE  6ED9               	movwf	fsr2l,c
 17580  0115F0  0E00               	movlw	high __display_temperature@external2
 17581  0115F2  20F4               	addwfc	prodh,w,c
 17582  0115F4  6EDA               	movwf	fsr2h,c
 17583  0115F6  50DF               	movf	indf2,w,c
 17584  0115F8  A4D8               	btfss	status,2,c
 17585  0115FA  D7E2               	goto	l2035
 17586                           
 17587                           ; BSR set to: 0
 17588                           ;display.c: 610: _display_itoa(os.temperature_external_2, 2, &display_content[3][12]);
 17589                           
 17590                           ; BSR set to: 0
 17591  0115FC  C23E  F078         	movff	_os+62,__display_itoa@value	;volatile
 17592  011600  C23F  F079         	movff	_os+63,__display_itoa@value+1	;volatile
 17593  011604  0E02               	movlw	2
 17594  011606  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 17595  011608  0EB4               	movlw	low (_display_content+72)
 17596  01160A  6F7B               	movwf	__display_itoa@text& (0+255),b
 17597  01160C  0E03               	movlw	high (_display_content+72)
 17598  01160E  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 17599  011610  EC51  F083         	call	__display_itoa	;wreg free
 17600  011614  0012               	return		;funcret
 17601  011616                     __end_of__display_temperature:
 17602                           	opt stack 0
 17603                           tblptru	equ	0xFF8
 17604                           tblptrh	equ	0xFF7
 17605                           tblptrl	equ	0xFF6
 17606                           tablat	equ	0xFF5
 17607                           prodh	equ	0xFF4
 17608                           prodl	equ	0xFF3
 17609                           intcon	equ	0xFF2
 17610                           intcon2	equ	0xFF1
 17611                           intcon3	equ	0xFF0
 17612                           postinc0	equ	0xFEE
 17613                           wreg	equ	0xFE8
 17614                           indf1	equ	0xFE7
 17615                           postdec1	equ	0xFE5
 17616                           plusw1	equ	0xFE3
 17617                           fsr1h	equ	0xFE2
 17618                           fsr1l	equ	0xFE1
 17619                           indf2	equ	0xFDF
 17620                           postinc2	equ	0xFDE
 17621                           postdec2	equ	0xFDD
 17622                           plusw2	equ	0xFDB
 17623                           fsr2h	equ	0xFDA
 17624                           fsr2l	equ	0xFD9
 17625                           status	equ	0xFD8
 17626                           
 17627 ;; *************** function __display_startup *****************
 17628 ;; Defined at:
 17629 ;;		line 183 in file "display.c"
 17630 ;; Parameters:    Size  Location     Type
 17631 ;;		None
 17632 ;; Auto vars:     Size  Location     Type
 17633 ;;  line1          19   28[BANK0 ] const unsigned char [19]
 17634 ;;  line4          15   47[BANK0 ] const unsigned char [15]
 17635 ;;  line2           9   62[BANK0 ] const unsigned char [9]
 17636 ;;  cntr            1   72[BANK0 ] unsigned char 
 17637 ;;  line3           1   71[BANK0 ] const unsigned char 
 17638 ;; Return value:  Size  Location     Type
 17639 ;;                  1    wreg      void 
 17640 ;; Registers used:
 17641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17642 ;; Tracked objects:
 17643 ;;		On entry : 0/0
 17644 ;;		On exit  : 0/0
 17645 ;;		Unchanged: 0/0
 17646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17648 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17650 ;;      Totals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17651 ;;Total ram usage:       45 bytes
 17652 ;; Hardware stack levels used:    1
 17653 ;; Hardware stack levels required when called:   14
 17654 ;; This function calls:
 17655 ;;		__display_itoa_u16
 17656 ;; This function is called by:
 17657 ;;		_display_prepare
 17658 ;; This function uses a non-reentrant model
 17659 ;;
 17660                           
 17661                           	psect	text72
 17662  010CB2                     __ptext72:
 17663                           	opt stack 0
 17664  010CB2                     __display_startup:
 17665                           	opt stack 15
 17666                           
 17667                           ;display.c: 185: uint8_t cntr;;display.c: 186: const char line1[] = "MPPT Solar Charger"
      +                          ;
 17668                           
 17669                           ;incstack = 0
 17670  010CB2  0E90               	movlw	low __display_startup@F7244
 17671  010CB4  6EF6               	movwf	tblptrl,c
 17672  010CB6                     	if	1	;There is more than 1 active tblptr byte
 17673  010CB6  0EC1               	movlw	high __display_startup@F7244
 17674  010CB8  6EF7               	movwf	tblptrh,c
 17675  010CBA                     	endif
 17676  010CBA                     	if	1	;There are 3 active tblptr bytes
 17677  010CBA  0E00               	movlw	low (__display_startup@F7244 shr (0+16))
 17678  010CBC  6EF8               	movwf	tblptru,c
 17679  010CBE                     	endif
 17680  010CBE  EE20  F07C         	lfsr	2,__display_startup@line1
 17681  010CC2  0E12               	movlw	18
 17682  010CC4                     u25580:
 17683  010CC4  0009               	tblrd		*+
 17684  010CC6  CFF5 FFDE          	movff	tablat,postinc2
 17685  010CCA  06E8               	decf	wreg,f,c
 17686  010CCC  E2FB               	bc	u25580
 17687                           
 17688                           ;display.c: 187: const char line2[] = "Version ";
 17689  010CCE  0E19               	movlw	low __display_startup@F7246
 17690  010CD0  6EF6               	movwf	tblptrl,c
 17691  010CD2                     	if	1	;There is more than 1 active tblptr byte
 17692  010CD2  0EC3               	movlw	high __display_startup@F7246
 17693  010CD4  6EF7               	movwf	tblptrh,c
 17694  010CD6                     	endif
 17695  010CD6                     	if	1	;There are 3 active tblptr bytes
 17696  010CD6  0E00               	movlw	low (__display_startup@F7246 shr (0+16))
 17697  010CD8  6EF8               	movwf	tblptru,c
 17698  010CDA                     	endif
 17699  010CDA  EE20  F09E         	lfsr	2,__display_startup@line2
 17700  010CDE  0E08               	movlw	8
 17701  010CE0                     u25590:
 17702  010CE0  0009               	tblrd		*+
 17703  010CE2  CFF5 FFDE          	movff	tablat,postinc2
 17704  010CE6  06E8               	decf	wreg,f,c
 17705  010CE8  E2FB               	bc	u25590
 17706                           
 17707                           ;display.c: 188: const char line3[] = "";
 17708  010CEA  0E46               	movlw	low __display_startup@F7248
 17709  010CEC  6EF6               	movwf	tblptrl,c
 17710  010CEE                     	if	1	;There is more than 1 active tblptr byte
 17711  010CEE  0EC3               	movlw	high __display_startup@F7248
 17712  010CF0  6EF7               	movwf	tblptrh,c
 17713  010CF2                     	endif
 17714  010CF2                     	if	1	;There are 3 active tblptr bytes
 17715  010CF2  0E00               	movlw	low (__display_startup@F7248 shr (0+16))
 17716  010CF4  6EF8               	movwf	tblptru,c
 17717  010CF6                     	endif
 17718  010CF6  0008               	tblrd		*
 17719  010CF8  CFF5 F0A7          	movff	tablat,__display_startup@line3
 17720                           
 17721                           ;display.c: 189: const char line4[] = "soldernerd.com";
 17722  010CFC  0E6E               	movlw	low __display_startup@F7250
 17723  010CFE  6EF6               	movwf	tblptrl,c
 17724  010D00                     	if	1	;There is more than 1 active tblptr byte
 17725  010D00  0EC2               	movlw	high __display_startup@F7250
 17726  010D02  6EF7               	movwf	tblptrh,c
 17727  010D04                     	endif
 17728  010D04                     	if	1	;There are 3 active tblptr bytes
 17729  010D04  0E00               	movlw	low (__display_startup@F7250 shr (0+16))
 17730  010D06  6EF8               	movwf	tblptru,c
 17731  010D08                     	endif
 17732  010D08  EE20  F08F         	lfsr	2,__display_startup@line4
 17733  010D0C  0E0E               	movlw	14
 17734  010D0E                     u25600:
 17735  010D0E  0009               	tblrd		*+
 17736  010D10  CFF5 FFDE          	movff	tablat,postinc2
 17737  010D14  06E8               	decf	wreg,f,c
 17738  010D16  E2FB               	bc	u25600
 17739                           
 17740                           ;display.c: 191: cntr = 0;
 17741  010D18  0E00               	movlw	0
 17742  010D1A  0100               	movlb	0	; () banked
 17743  010D1C  6FA8               	movwf	__display_startup@cntr& (0+255),b
 17744                           
 17745                           ;display.c: 192: while(line1[cntr])
 17746  010D1E  D013               	goto	l1761
 17747  010D20                     
 17748                           ; BSR set to: 0
 17749                           ;display.c: 193: display_content[0][cntr] = line1[cntr++];
 17750                           
 17751                           ; BSR set to: 0
 17752  010D20  51A8               	movf	__display_startup@cntr& (0+255),w,b
 17753  010D22  0D01               	mullw	1
 17754  010D24  0E7C               	movlw	low __display_startup@line1
 17755  010D26  24F3               	addwf	prodl,w,c
 17756  010D28  6ED9               	movwf	fsr2l,c
 17757  010D2A  0E00               	movlw	high __display_startup@line1
 17758  010D2C  20F4               	addwfc	prodh,w,c
 17759  010D2E  6EDA               	movwf	fsr2h,c
 17760  010D30  51A8               	movf	__display_startup@cntr& (0+255),w,b
 17761  010D32  0D01               	mullw	1
 17762  010D34  0E6C               	movlw	low _display_content
 17763  010D36  24F3               	addwf	prodl,w,c
 17764  010D38  6EE1               	movwf	fsr1l,c
 17765  010D3A  0E03               	movlw	high _display_content
 17766  010D3C  20F4               	addwfc	prodh,w,c
 17767  010D3E  6EE2               	movwf	fsr1h,c
 17768  010D40  CFDF FFE7          	movff	indf2,indf1
 17769                           
 17770                           ; BSR set to: 0
 17771  010D44  2BA8               	incf	__display_startup@cntr& (0+255),f,b
 17772  010D46                     l1761:
 17773                           
 17774                           ; BSR set to: 0
 17775                           
 17776                           ; BSR set to: 0
 17777  010D46  51A8               	movf	__display_startup@cntr& (0+255),w,b
 17778  010D48  0D01               	mullw	1
 17779  010D4A  0E7C               	movlw	low __display_startup@line1
 17780  010D4C  24F3               	addwf	prodl,w,c
 17781  010D4E  6ED9               	movwf	fsr2l,c
 17782  010D50  0E00               	movlw	high __display_startup@line1
 17783  010D52  20F4               	addwfc	prodh,w,c
 17784  010D54  6EDA               	movwf	fsr2h,c
 17785  010D56  50DF               	movf	indf2,w,c
 17786  010D58  A4D8               	btfss	status,2,c
 17787  010D5A  D7E2               	goto	l1762
 17788                           
 17789                           ; BSR set to: 0
 17790                           ;display.c: 194: cntr = 0;
 17791                           
 17792                           ; BSR set to: 0
 17793  010D5C  0E00               	movlw	0
 17794  010D5E  6FA8               	movwf	__display_startup@cntr& (0+255),b
 17795                           
 17796                           ;display.c: 195: while(line2[cntr])
 17797  010D60  D013               	goto	l1764
 17798  010D62                     
 17799                           ; BSR set to: 0
 17800                           ;display.c: 196: display_content[1][cntr] = line2[cntr++];
 17801                           
 17802                           ; BSR set to: 0
 17803  010D62  51A8               	movf	__display_startup@cntr& (0+255),w,b
 17804  010D64  0D01               	mullw	1
 17805  010D66  0E9E               	movlw	low __display_startup@line2
 17806  010D68  24F3               	addwf	prodl,w,c
 17807  010D6A  6ED9               	movwf	fsr2l,c
 17808  010D6C  0E00               	movlw	high __display_startup@line2
 17809  010D6E  20F4               	addwfc	prodh,w,c
 17810  010D70  6EDA               	movwf	fsr2h,c
 17811  010D72  51A8               	movf	__display_startup@cntr& (0+255),w,b
 17812  010D74  0D01               	mullw	1
 17813  010D76  0E80               	movlw	low (_display_content+20)
 17814  010D78  24F3               	addwf	prodl,w,c
 17815  010D7A  6EE1               	movwf	fsr1l,c
 17816  010D7C  0E03               	movlw	high (_display_content+20)
 17817  010D7E  20F4               	addwfc	prodh,w,c
 17818  010D80  6EE2               	movwf	fsr1h,c
 17819  010D82  CFDF FFE7          	movff	indf2,indf1
 17820                           
 17821                           ; BSR set to: 0
 17822  010D86  2BA8               	incf	__display_startup@cntr& (0+255),f,b
 17823  010D88                     l1764:
 17824                           
 17825                           ; BSR set to: 0
 17826                           
 17827                           ; BSR set to: 0
 17828  010D88  51A8               	movf	__display_startup@cntr& (0+255),w,b
 17829  010D8A  0D01               	mullw	1
 17830  010D8C  0E9E               	movlw	low __display_startup@line2
 17831  010D8E  24F3               	addwf	prodl,w,c
 17832  010D90  6ED9               	movwf	fsr2l,c
 17833  010D92  0E00               	movlw	high __display_startup@line2
 17834  010D94  20F4               	addwfc	prodh,w,c
 17835  010D96  6EDA               	movwf	fsr2h,c
 17836  010D98  50DF               	movf	indf2,w,c
 17837  010D9A  A4D8               	btfss	status,2,c
 17838  010D9C  D7E2               	goto	l1765
 17839                           
 17840                           ; BSR set to: 0
 17841                           ;display.c: 197: cntr += _display_itoa_u16(0x00, &display_content[1][cntr]);
 17842                           
 17843                           ; BSR set to: 0
 17844  010D9E  0E00               	movlw	0
 17845  010DA0  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 17846  010DA2  0E00               	movlw	0
 17847  010DA4  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 17848  010DA6  51A8               	movf	__display_startup@cntr& (0+255),w,b
 17849  010DA8  0D01               	mullw	1
 17850  010DAA  0E80               	movlw	low (_display_content+20)
 17851  010DAC  24F3               	addwf	prodl,w,c
 17852  010DAE  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 17853  010DB0  0E03               	movlw	high (_display_content+20)
 17854  010DB2  20F4               	addwfc	prodh,w,c
 17855  010DB4  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 17856  010DB6  EC7B  F0AD         	call	__display_itoa_u16	;wreg free
 17857  010DBA  0100               	movlb	0	; () banked
 17858  010DBC  27A8               	addwf	__display_startup@cntr& (0+255),f,b
 17859                           
 17860                           ; BSR set to: 0
 17861                           ;display.c: 198: display_content[1][cntr++] = '.';
 17862  010DBE  51A8               	movf	__display_startup@cntr& (0+255),w,b
 17863  010DC0  0D01               	mullw	1
 17864  010DC2  0E80               	movlw	low (_display_content+20)
 17865  010DC4  24F3               	addwf	prodl,w,c
 17866  010DC6  6ED9               	movwf	fsr2l,c
 17867  010DC8  0E03               	movlw	high (_display_content+20)
 17868  010DCA  20F4               	addwfc	prodh,w,c
 17869  010DCC  6EDA               	movwf	fsr2h,c
 17870  010DCE  0E2E               	movlw	46
 17871  010DD0  6EDF               	movwf	indf2,c
 17872                           
 17873                           ; BSR set to: 0
 17874  010DD2  2BA8               	incf	__display_startup@cntr& (0+255),f,b
 17875                           
 17876                           ; BSR set to: 0
 17877                           ;display.c: 199: cntr += _display_itoa_u16(0x01, &display_content[1][cntr]);
 17878  010DD4  0E00               	movlw	0
 17879  010DD6  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 17880  010DD8  0E01               	movlw	1
 17881  010DDA  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 17882  010DDC  51A8               	movf	__display_startup@cntr& (0+255),w,b
 17883  010DDE  0D01               	mullw	1
 17884  010DE0  0E80               	movlw	low (_display_content+20)
 17885  010DE2  24F3               	addwf	prodl,w,c
 17886  010DE4  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 17887  010DE6  0E03               	movlw	high (_display_content+20)
 17888  010DE8  20F4               	addwfc	prodh,w,c
 17889  010DEA  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 17890  010DEC  EC7B  F0AD         	call	__display_itoa_u16	;wreg free
 17891  010DF0  0100               	movlb	0	; () banked
 17892  010DF2  27A8               	addwf	__display_startup@cntr& (0+255),f,b
 17893                           
 17894                           ; BSR set to: 0
 17895                           ;display.c: 200: display_content[1][cntr++] = '.';
 17896  010DF4  51A8               	movf	__display_startup@cntr& (0+255),w,b
 17897  010DF6  0D01               	mullw	1
 17898  010DF8  0E80               	movlw	low (_display_content+20)
 17899  010DFA  24F3               	addwf	prodl,w,c
 17900  010DFC  6ED9               	movwf	fsr2l,c
 17901  010DFE  0E03               	movlw	high (_display_content+20)
 17902  010E00  20F4               	addwfc	prodh,w,c
 17903  010E02  6EDA               	movwf	fsr2h,c
 17904  010E04  0E2E               	movlw	46
 17905  010E06  6EDF               	movwf	indf2,c
 17906  010E08  2BA8               	incf	__display_startup@cntr& (0+255),f,b
 17907                           
 17908                           ; BSR set to: 0
 17909                           ;display.c: 201: cntr += _display_itoa_u16(0x00, &display_content[1][cntr]);
 17910  010E0A  0E00               	movlw	0
 17911  010E0C  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 17912  010E0E  0E00               	movlw	0
 17913  010E10  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 17914  010E12  51A8               	movf	__display_startup@cntr& (0+255),w,b
 17915  010E14  0D01               	mullw	1
 17916  010E16  0E80               	movlw	low (_display_content+20)
 17917  010E18  24F3               	addwf	prodl,w,c
 17918  010E1A  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 17919  010E1C  0E03               	movlw	high (_display_content+20)
 17920  010E1E  20F4               	addwfc	prodh,w,c
 17921  010E20  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 17922  010E22  EC7B  F0AD         	call	__display_itoa_u16	;wreg free
 17923  010E26  0100               	movlb	0	; () banked
 17924  010E28  27A8               	addwf	__display_startup@cntr& (0+255),f,b
 17925                           
 17926                           ; BSR set to: 0
 17927                           ;display.c: 202: cntr = 0;
 17928  010E2A  0E00               	movlw	0
 17929  010E2C  6FA8               	movwf	__display_startup@cntr& (0+255),b
 17930                           
 17931                           ;display.c: 203: while(line3[cntr])
 17932  010E2E  D013               	goto	l1767
 17933  010E30                     
 17934                           ; BSR set to: 0
 17935                           ;display.c: 204: display_content[2][cntr] = line3[cntr++];
 17936                           
 17937                           ; BSR set to: 0
 17938  010E30  51A8               	movf	__display_startup@cntr& (0+255),w,b
 17939  010E32  0D01               	mullw	1
 17940  010E34  0EA7               	movlw	low __display_startup@line3
 17941  010E36  24F3               	addwf	prodl,w,c
 17942  010E38  6ED9               	movwf	fsr2l,c
 17943  010E3A  0E00               	movlw	high __display_startup@line3
 17944  010E3C  20F4               	addwfc	prodh,w,c
 17945  010E3E  6EDA               	movwf	fsr2h,c
 17946  010E40  51A8               	movf	__display_startup@cntr& (0+255),w,b
 17947  010E42  0D01               	mullw	1
 17948  010E44  0E94               	movlw	low (_display_content+40)
 17949  010E46  24F3               	addwf	prodl,w,c
 17950  010E48  6EE1               	movwf	fsr1l,c
 17951  010E4A  0E03               	movlw	high (_display_content+40)
 17952  010E4C  20F4               	addwfc	prodh,w,c
 17953  010E4E  6EE2               	movwf	fsr1h,c
 17954  010E50  CFDF FFE7          	movff	indf2,indf1
 17955                           
 17956                           ; BSR set to: 0
 17957  010E54  2BA8               	incf	__display_startup@cntr& (0+255),f,b
 17958  010E56                     l1767:
 17959                           
 17960                           ; BSR set to: 0
 17961                           
 17962                           ; BSR set to: 0
 17963  010E56  51A8               	movf	__display_startup@cntr& (0+255),w,b
 17964  010E58  0D01               	mullw	1
 17965  010E5A  0EA7               	movlw	low __display_startup@line3
 17966  010E5C  24F3               	addwf	prodl,w,c
 17967  010E5E  6ED9               	movwf	fsr2l,c
 17968  010E60  0E00               	movlw	high __display_startup@line3
 17969  010E62  20F4               	addwfc	prodh,w,c
 17970  010E64  6EDA               	movwf	fsr2h,c
 17971  010E66  50DF               	movf	indf2,w,c
 17972  010E68  A4D8               	btfss	status,2,c
 17973  010E6A  D7E2               	goto	l1768
 17974                           
 17975                           ; BSR set to: 0
 17976                           ;display.c: 205: cntr = 0;
 17977                           
 17978                           ; BSR set to: 0
 17979  010E6C  0E00               	movlw	0
 17980  010E6E  6FA8               	movwf	__display_startup@cntr& (0+255),b
 17981                           
 17982                           ;display.c: 206: while(line4[cntr])
 17983  010E70  D013               	goto	l1770
 17984  010E72                     
 17985                           ; BSR set to: 0
 17986                           ;display.c: 207: display_content[3][cntr] = line4[cntr++];
 17987                           
 17988                           ; BSR set to: 0
 17989  010E72  51A8               	movf	__display_startup@cntr& (0+255),w,b
 17990  010E74  0D01               	mullw	1
 17991  010E76  0E8F               	movlw	low __display_startup@line4
 17992  010E78  24F3               	addwf	prodl,w,c
 17993  010E7A  6ED9               	movwf	fsr2l,c
 17994  010E7C  0E00               	movlw	high __display_startup@line4
 17995  010E7E  20F4               	addwfc	prodh,w,c
 17996  010E80  6EDA               	movwf	fsr2h,c
 17997  010E82  51A8               	movf	__display_startup@cntr& (0+255),w,b
 17998  010E84  0D01               	mullw	1
 17999  010E86  0EA8               	movlw	low (_display_content+60)
 18000  010E88  24F3               	addwf	prodl,w,c
 18001  010E8A  6EE1               	movwf	fsr1l,c
 18002  010E8C  0E03               	movlw	high (_display_content+60)
 18003  010E8E  20F4               	addwfc	prodh,w,c
 18004  010E90  6EE2               	movwf	fsr1h,c
 18005  010E92  CFDF FFE7          	movff	indf2,indf1
 18006                           
 18007                           ; BSR set to: 0
 18008  010E96  2BA8               	incf	__display_startup@cntr& (0+255),f,b
 18009  010E98                     l1770:
 18010                           
 18011                           ; BSR set to: 0
 18012                           
 18013                           ; BSR set to: 0
 18014  010E98  51A8               	movf	__display_startup@cntr& (0+255),w,b
 18015  010E9A  0D01               	mullw	1
 18016  010E9C  0E8F               	movlw	low __display_startup@line4
 18017  010E9E  24F3               	addwf	prodl,w,c
 18018  010EA0  6ED9               	movwf	fsr2l,c
 18019  010EA2  0E00               	movlw	high __display_startup@line4
 18020  010EA4  20F4               	addwfc	prodh,w,c
 18021  010EA6  6EDA               	movwf	fsr2h,c
 18022  010EA8  50DF               	movf	indf2,w,c
 18023  010EAA  B4D8               	btfsc	status,2,c
 18024  010EAC  0012               	return	
 18025  010EAE  D7E1               	goto	l1771
 18026  010EB0                     __end_of__display_startup:
 18027                           	opt stack 0
 18028                           tblptru	equ	0xFF8
 18029                           tblptrh	equ	0xFF7
 18030                           tblptrl	equ	0xFF6
 18031                           tablat	equ	0xFF5
 18032                           prodh	equ	0xFF4
 18033                           prodl	equ	0xFF3
 18034                           intcon	equ	0xFF2
 18035                           intcon2	equ	0xFF1
 18036                           intcon3	equ	0xFF0
 18037                           postinc0	equ	0xFEE
 18038                           wreg	equ	0xFE8
 18039                           indf1	equ	0xFE7
 18040                           postdec1	equ	0xFE5
 18041                           plusw1	equ	0xFE3
 18042                           fsr1h	equ	0xFE2
 18043                           fsr1l	equ	0xFE1
 18044                           indf2	equ	0xFDF
 18045                           postinc2	equ	0xFDE
 18046                           postdec2	equ	0xFDD
 18047                           plusw2	equ	0xFDB
 18048                           fsr2h	equ	0xFDA
 18049                           fsr2l	equ	0xFD9
 18050                           status	equ	0xFD8
 18051                           
 18052 ;; *************** function __display_itoa_u16 *****************
 18053 ;; Defined at:
 18054 ;;		line 112 in file "display.c"
 18055 ;; Parameters:    Size  Location     Type
 18056 ;;  value           2   24[BANK0 ] unsigned int 
 18057 ;;  text            2   26[BANK0 ] PTR unsigned char 
 18058 ;;		 -> display_content(80), 
 18059 ;; Auto vars:     Size  Location     Type
 18060 ;;		None
 18061 ;; Return value:  Size  Location     Type
 18062 ;;                  1    wreg      unsigned char 
 18063 ;; Registers used:
 18064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18065 ;; Tracked objects:
 18066 ;;		On entry : 0/0
 18067 ;;		On exit  : 0/0
 18068 ;;		Unchanged: 0/0
 18069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18070 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18073 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18074 ;;Total ram usage:        4 bytes
 18075 ;; Hardware stack levels used:    1
 18076 ;; Hardware stack levels required when called:   13
 18077 ;; This function calls:
 18078 ;;		_itoa
 18079 ;; This function is called by:
 18080 ;;		__display_startup
 18081 ;; This function uses a non-reentrant model
 18082 ;;
 18083                           
 18084                           	psect	text73
 18085  015AF6                     __ptext73:
 18086                           	opt stack 0
 18087  015AF6                     __display_itoa_u16:
 18088                           	opt stack 15
 18089                           
 18090                           ;display.c: 114: itoa(text, value, 10);
 18091                           
 18092                           ; BSR set to: 0
 18093                           ;incstack = 0
 18094  015AF6  C07A  F070         	movff	__display_itoa_u16@text,itoa@buf
 18095  015AFA  C07B  F071         	movff	__display_itoa_u16@text+1,itoa@buf+1
 18096  015AFE  C078  F072         	movff	__display_itoa_u16@value,itoa@val
 18097  015B02  C079  F073         	movff	__display_itoa_u16@value+1,itoa@val+1
 18098  015B06  0E00               	movlw	0
 18099  015B08  0100               	movlb	0	; () banked
 18100  015B0A  6F75               	movwf	(itoa@base+1)& (0+255),b
 18101  015B0C  0E0A               	movlw	10
 18102  015B0E  6F74               	movwf	itoa@base& (0+255),b
 18103  015B10  ECE0  F0C0         	call	_itoa	;wreg free
 18104                           
 18105                           ;display.c: 115: if(value>9999)
 18106  015B14  0E10               	movlw	16
 18107  015B16  0100               	movlb	0	; () banked
 18108  015B18  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 18109  015B1A  0E27               	movlw	39
 18110  015B1C  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 18111  015B1E  A0D8               	btfss	status,0,c
 18112  015B20  D00A               	goto	l1727
 18113                           
 18114                           ; BSR set to: 0
 18115                           ;display.c: 116: {;display.c: 117: *(text+5) = ' ';
 18116  015B22  EE20 F005          	lfsr	2,5
 18117  015B26  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 18118  015B28  26D9               	addwf	fsr2l,f,c
 18119  015B2A  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 18120  015B2C  22DA               	addwfc	fsr2h,f,c
 18121  015B2E  0E20               	movlw	32
 18122  015B30  6EDF               	movwf	indf2,c
 18123                           
 18124                           ; BSR set to: 0
 18125                           ;display.c: 118: return 5;
 18126  015B32  0E05               	movlw	5
 18127                           
 18128                           ; BSR set to: 0
 18129                           ;display.c: 119: }
 18130                           
 18131                           ; BSR set to: 0
 18132  015B34  0012               	return	
 18133  015B36                     l1727:
 18134                           
 18135                           ; BSR set to: 0
 18136                           ;display.c: 120: else if (value>999)
 18137                           
 18138                           ; BSR set to: 0
 18139  015B36  0EE8               	movlw	232
 18140  015B38  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 18141  015B3A  0E03               	movlw	3
 18142  015B3C  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 18143  015B3E  A0D8               	btfss	status,0,c
 18144  015B40  D00A               	goto	l1730
 18145                           
 18146                           ; BSR set to: 0
 18147                           ;display.c: 121: {;display.c: 122: *(text+4) = ' ';
 18148  015B42  EE20 F004          	lfsr	2,4
 18149  015B46  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 18150  015B48  26D9               	addwf	fsr2l,f,c
 18151  015B4A  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 18152  015B4C  22DA               	addwfc	fsr2h,f,c
 18153  015B4E  0E20               	movlw	32
 18154  015B50  6EDF               	movwf	indf2,c
 18155                           
 18156                           ; BSR set to: 0
 18157                           ;display.c: 123: return 4;
 18158  015B52  0E04               	movlw	4
 18159                           
 18160                           ; BSR set to: 0
 18161                           ;display.c: 124: }
 18162                           
 18163                           ; BSR set to: 0
 18164  015B54  0012               	return	
 18165  015B56                     l1730:
 18166                           
 18167                           ; BSR set to: 0
 18168                           ;display.c: 125: else if (value>99)
 18169                           
 18170                           ; BSR set to: 0
 18171  015B56  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 18172  015B58  E104               	bnz	u23960
 18173  015B5A  0E64               	movlw	100
 18174  015B5C  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 18175  015B5E  A0D8               	btfss	status,0,c
 18176  015B60  D00A               	goto	l1732
 18177  015B62                     u23960:
 18178                           
 18179                           ; BSR set to: 0
 18180                           ;display.c: 126: {;display.c: 127: *(text+3) = ' ';
 18181  015B62  EE20 F003          	lfsr	2,3
 18182  015B66  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 18183  015B68  26D9               	addwf	fsr2l,f,c
 18184  015B6A  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 18185  015B6C  22DA               	addwfc	fsr2h,f,c
 18186  015B6E  0E20               	movlw	32
 18187  015B70  6EDF               	movwf	indf2,c
 18188                           
 18189                           ; BSR set to: 0
 18190                           ;display.c: 128: return 3;
 18191  015B72  0E03               	movlw	3
 18192                           
 18193                           ; BSR set to: 0
 18194                           ;display.c: 129: }
 18195                           
 18196                           ; BSR set to: 0
 18197  015B74  0012               	return	
 18198  015B76                     l1732:
 18199                           
 18200                           ; BSR set to: 0
 18201                           ;display.c: 130: else if (value>9)
 18202                           
 18203                           ; BSR set to: 0
 18204  015B76  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 18205  015B78  E104               	bnz	u23970
 18206  015B7A  0E0A               	movlw	10
 18207  015B7C  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 18208  015B7E  A0D8               	btfss	status,0,c
 18209  015B80  D00A               	goto	l1734
 18210  015B82                     u23970:
 18211                           
 18212                           ; BSR set to: 0
 18213                           ;display.c: 131: {;display.c: 132: *(text+2) = ' ';
 18214  015B82  EE20 F002          	lfsr	2,2
 18215  015B86  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 18216  015B88  26D9               	addwf	fsr2l,f,c
 18217  015B8A  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 18218  015B8C  22DA               	addwfc	fsr2h,f,c
 18219  015B8E  0E20               	movlw	32
 18220  015B90  6EDF               	movwf	indf2,c
 18221                           
 18222                           ; BSR set to: 0
 18223                           ;display.c: 133: return 2;
 18224  015B92  0E02               	movlw	2
 18225                           
 18226                           ; BSR set to: 0
 18227                           ;display.c: 134: }
 18228                           
 18229                           ; BSR set to: 0
 18230  015B94  0012               	return	
 18231  015B96                     l1734:
 18232                           
 18233                           ; BSR set to: 0
 18234                           ;display.c: 135: else;display.c: 136: {;display.c: 137: *(text+1) = ' ';
 18235                           
 18236                           ; BSR set to: 0
 18237  015B96  EE20 F001          	lfsr	2,1
 18238  015B9A  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 18239  015B9C  26D9               	addwf	fsr2l,f,c
 18240  015B9E  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 18241  015BA0  22DA               	addwfc	fsr2h,f,c
 18242  015BA2  0E20               	movlw	32
 18243  015BA4  6EDF               	movwf	indf2,c
 18244                           
 18245                           ; BSR set to: 0
 18246                           ;display.c: 138: return 1;
 18247  015BA6  0E01               	movlw	1
 18248                           
 18249                           ; BSR set to: 0
 18250                           
 18251                           ; BSR set to: 0
 18252                           
 18253                           ; BSR set to: 0
 18254                           
 18255                           ; BSR set to: 0
 18256  015BA8  0012               	return	
 18257  015BAA                     __end_of__display_itoa_u16:
 18258                           	opt stack 0
 18259                           tblptru	equ	0xFF8
 18260                           tblptrh	equ	0xFF7
 18261                           tblptrl	equ	0xFF6
 18262                           tablat	equ	0xFF5
 18263                           prodh	equ	0xFF4
 18264                           prodl	equ	0xFF3
 18265                           intcon	equ	0xFF2
 18266                           intcon2	equ	0xFF1
 18267                           intcon3	equ	0xFF0
 18268                           postinc0	equ	0xFEE
 18269                           wreg	equ	0xFE8
 18270                           indf1	equ	0xFE7
 18271                           postdec1	equ	0xFE5
 18272                           plusw1	equ	0xFE3
 18273                           fsr1h	equ	0xFE2
 18274                           fsr1l	equ	0xFE1
 18275                           indf2	equ	0xFDF
 18276                           postinc2	equ	0xFDE
 18277                           postdec2	equ	0xFDD
 18278                           plusw2	equ	0xFDB
 18279                           fsr2h	equ	0xFDA
 18280                           fsr2l	equ	0xFD9
 18281                           status	equ	0xFD8
 18282                           
 18283 ;; *************** function __display_outputs *****************
 18284 ;; Defined at:
 18285 ;;		line 405 in file "display.c"
 18286 ;; Parameters:    Size  Location     Type
 18287 ;;  mode            1    wreg     unsigned char 
 18288 ;; Auto vars:     Size  Location     Type
 18289 ;;  mode            1   72[BANK0 ] unsigned char 
 18290 ;;  line4          21   21[BANK0 ] const unsigned char [21]
 18291 ;;  line3          21    0[BANK0 ] const unsigned char [21]
 18292 ;;  low            16   42[BANK0 ] const unsigned char [16]
 18293 ;;  header         14   58[BANK0 ] const unsigned char [14]
 18294 ;;  cntr            1   73[BANK0 ] unsigned char 
 18295 ;; Return value:  Size  Location     Type
 18296 ;;                  1    wreg      void 
 18297 ;; Registers used:
 18298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 18299 ;; Tracked objects:
 18300 ;;		On entry : 0/0
 18301 ;;		On exit  : 0/0
 18302 ;;		Unchanged: 0/0
 18303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18305 ;;      Locals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18307 ;;      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18308 ;;Total ram usage:       74 bytes
 18309 ;; Hardware stack levels used:    1
 18310 ;; Hardware stack levels required when called:   10
 18311 ;; This function calls:
 18312 ;;		Nothing
 18313 ;; This function is called by:
 18314 ;;		_display_prepare
 18315 ;; This function uses a non-reentrant model
 18316 ;;
 18317                           
 18318                           	psect	text74
 18319  010268                     __ptext74:
 18320                           	opt stack 0
 18321  010268                     __display_outputs:
 18322                           	opt stack 19
 18323                           
 18324                           ; BSR set to: 0
 18325                           ;incstack = 0
 18326                           ;__display_outputs@mode stored from wreg
 18327  010268  0100               	movlb	0	; () banked
 18328  01026A  6FA8               	movwf	__display_outputs@mode& (0+255),b
 18329                           
 18330                           ;display.c: 407: uint8_t cntr;;display.c: 408: const char header[] = "Power Outputs";
 18331  01026C  0E8B               	movlw	low __display_outputs@F7311
 18332  01026E  6EF6               	movwf	tblptrl,c
 18333  010270                     	if	1	;There is more than 1 active tblptr byte
 18334  010270  0EC2               	movlw	high __display_outputs@F7311
 18335  010272  6EF7               	movwf	tblptrh,c
 18336  010274                     	endif
 18337  010274                     	if	1	;There are 3 active tblptr bytes
 18338  010274  0E00               	movlw	low (__display_outputs@F7311 shr (0+16))
 18339  010276  6EF8               	movwf	tblptru,c
 18340  010278                     	endif
 18341  010278  EE20  F09A         	lfsr	2,__display_outputs@header
 18342  01027C  0E0D               	movlw	13
 18343  01027E                     u26110:
 18344  01027E  0009               	tblrd		*+
 18345  010280  CFF5 FFDE          	movff	tablat,postinc2
 18346  010284  06E8               	decf	wreg,f,c
 18347  010286  E2FB               	bc	u26110
 18348                           
 18349                           ;display.c: 409: const char low[] = "Battery too low";
 18350  010288  0E1E               	movlw	low __display_outputs@F7313
 18351  01028A  6EF6               	movwf	tblptrl,c
 18352  01028C                     	if	1	;There is more than 1 active tblptr byte
 18353  01028C  0EC2               	movlw	high __display_outputs@F7313
 18354  01028E  6EF7               	movwf	tblptrh,c
 18355  010290                     	endif
 18356  010290                     	if	1	;There are 3 active tblptr bytes
 18357  010290  0E00               	movlw	low (__display_outputs@F7313 shr (0+16))
 18358  010292  6EF8               	movwf	tblptru,c
 18359  010294                     	endif
 18360  010294  EE20  F08A         	lfsr	2,__display_outputs@low
 18361  010298  0E0F               	movlw	15
 18362  01029A                     u26120:
 18363  01029A  0009               	tblrd		*+
 18364  01029C  CFF5 FFDE          	movff	tablat,postinc2
 18365  0102A0  06E8               	decf	wreg,f,c
 18366  0102A2  E2FB               	bc	u26120
 18367                           
 18368                           ;display.c: 410: const char line3[] = "  Out1 off  Out2 off";
 18369  0102A4  0ECA               	movlw	low __display_outputs@F7315
 18370  0102A6  6EF6               	movwf	tblptrl,c
 18371  0102A8                     	if	1	;There is more than 1 active tblptr byte
 18372  0102A8  0EC0               	movlw	high __display_outputs@F7315
 18373  0102AA  6EF7               	movwf	tblptrh,c
 18374  0102AC                     	endif
 18375  0102AC                     	if	1	;There are 3 active tblptr bytes
 18376  0102AC  0E00               	movlw	low (__display_outputs@F7315 shr (0+16))
 18377  0102AE  6EF8               	movwf	tblptru,c
 18378  0102B0                     	endif
 18379  0102B0  EE20  F060         	lfsr	2,__display_outputs@line3
 18380  0102B4  0E14               	movlw	20
 18381  0102B6                     u26130:
 18382  0102B6  0009               	tblrd		*+
 18383  0102B8  CFF5 FFDE          	movff	tablat,postinc2
 18384  0102BC  06E8               	decf	wreg,f,c
 18385  0102BE  E2FB               	bc	u26130
 18386                           
 18387                           ;display.c: 411: const char line4[] = "  Out3 off  Out4 off";
 18388  0102C0  0EB5               	movlw	low __display_outputs@F7317
 18389  0102C2  6EF6               	movwf	tblptrl,c
 18390  0102C4                     	if	1	;There is more than 1 active tblptr byte
 18391  0102C4  0EC0               	movlw	high __display_outputs@F7317
 18392  0102C6  6EF7               	movwf	tblptrh,c
 18393  0102C8                     	endif
 18394  0102C8                     	if	1	;There are 3 active tblptr bytes
 18395  0102C8  0E00               	movlw	low (__display_outputs@F7317 shr (0+16))
 18396  0102CA  6EF8               	movwf	tblptru,c
 18397  0102CC                     	endif
 18398  0102CC  EE20  F075         	lfsr	2,__display_outputs@line4
 18399  0102D0  0E14               	movlw	20
 18400  0102D2                     u26140:
 18401  0102D2  0009               	tblrd		*+
 18402  0102D4  CFF5 FFDE          	movff	tablat,postinc2
 18403  0102D8  06E8               	decf	wreg,f,c
 18404  0102DA  E2FB               	bc	u26140
 18405                           
 18406                           ;display.c: 413: cntr = 0;
 18407  0102DC  0E00               	movlw	0
 18408  0102DE  0100               	movlb	0	; () banked
 18409  0102E0  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 18410                           
 18411                           ;display.c: 414: while(header[cntr])
 18412  0102E2  D013               	goto	l1921
 18413  0102E4                     
 18414                           ; BSR set to: 0
 18415                           ;display.c: 415: display_content[0][cntr] = header[cntr++];
 18416                           
 18417                           ; BSR set to: 0
 18418  0102E4  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 18419  0102E6  0D01               	mullw	1
 18420  0102E8  0E9A               	movlw	low __display_outputs@header
 18421  0102EA  24F3               	addwf	prodl,w,c
 18422  0102EC  6ED9               	movwf	fsr2l,c
 18423  0102EE  0E00               	movlw	high __display_outputs@header
 18424  0102F0  20F4               	addwfc	prodh,w,c
 18425  0102F2  6EDA               	movwf	fsr2h,c
 18426  0102F4  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 18427  0102F6  0D01               	mullw	1
 18428  0102F8  0E6C               	movlw	low _display_content
 18429  0102FA  24F3               	addwf	prodl,w,c
 18430  0102FC  6EE1               	movwf	fsr1l,c
 18431  0102FE  0E03               	movlw	high _display_content
 18432  010300  20F4               	addwfc	prodh,w,c
 18433  010302  6EE2               	movwf	fsr1h,c
 18434  010304  CFDF FFE7          	movff	indf2,indf1
 18435                           
 18436                           ; BSR set to: 0
 18437  010308  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 18438  01030A                     l1921:
 18439                           
 18440                           ; BSR set to: 0
 18441                           
 18442                           ; BSR set to: 0
 18443  01030A  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 18444  01030C  0D01               	mullw	1
 18445  01030E  0E9A               	movlw	low __display_outputs@header
 18446  010310  24F3               	addwf	prodl,w,c
 18447  010312  6ED9               	movwf	fsr2l,c
 18448  010314  0E00               	movlw	high __display_outputs@header
 18449  010316  20F4               	addwfc	prodh,w,c
 18450  010318  6EDA               	movwf	fsr2h,c
 18451  01031A  50DF               	movf	indf2,w,c
 18452  01031C  A4D8               	btfss	status,2,c
 18453  01031E  D7E2               	goto	l1922
 18454                           
 18455                           ; BSR set to: 0
 18456                           ;display.c: 417: if(os.output_voltage<-1)
 18457                           
 18458                           ; BSR set to: 0
 18459  010320  0102               	movlb	2	; () banked
 18460  010322  AF28               	btfss	(_os+40)& (0+255),7,b	;volatile
 18461  010324  D027               	goto	u26170
 18462  010326  2927               	incf	(_os+39)& (0+255),w,b	;volatile
 18463  010328  0EFF               	movlw	255
 18464  01032A  5928               	subwfb	(_os+40)& (0+255),w,b	;volatile
 18465  01032C  B0D8               	btfsc	status,0,c
 18466  01032E  D022               	goto	u26170
 18467                           
 18468                           ; BSR set to: 2
 18469                           ;display.c: 418: {;display.c: 419: cntr = 0;
 18470  010330  0E00               	movlw	0
 18471  010332  0100               	movlb	0	; () banked
 18472  010334  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 18473                           
 18474                           ;display.c: 420: while(low[cntr])
 18475  010336  D013               	goto	l1925
 18476  010338                     
 18477                           ; BSR set to: 0
 18478                           ;display.c: 421: display_content[1][cntr] = low[cntr++];
 18479                           
 18480                           ; BSR set to: 0
 18481  010338  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 18482  01033A  0D01               	mullw	1
 18483  01033C  0E8A               	movlw	low __display_outputs@low
 18484  01033E  24F3               	addwf	prodl,w,c
 18485  010340  6ED9               	movwf	fsr2l,c
 18486  010342  0E00               	movlw	high __display_outputs@low
 18487  010344  20F4               	addwfc	prodh,w,c
 18488  010346  6EDA               	movwf	fsr2h,c
 18489  010348  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 18490  01034A  0D01               	mullw	1
 18491  01034C  0E80               	movlw	low (_display_content+20)
 18492  01034E  24F3               	addwf	prodl,w,c
 18493  010350  6EE1               	movwf	fsr1l,c
 18494  010352  0E03               	movlw	high (_display_content+20)
 18495  010354  20F4               	addwfc	prodh,w,c
 18496  010356  6EE2               	movwf	fsr1h,c
 18497  010358  CFDF FFE7          	movff	indf2,indf1
 18498                           
 18499                           ; BSR set to: 0
 18500  01035C  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 18501  01035E                     l1925:
 18502                           
 18503                           ; BSR set to: 0
 18504                           
 18505                           ; BSR set to: 0
 18506  01035E  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 18507  010360  0D01               	mullw	1
 18508  010362  0E8A               	movlw	low __display_outputs@low
 18509  010364  24F3               	addwf	prodl,w,c
 18510  010366  6ED9               	movwf	fsr2l,c
 18511  010368  0E00               	movlw	high __display_outputs@low
 18512  01036A  20F4               	addwfc	prodh,w,c
 18513  01036C  6EDA               	movwf	fsr2h,c
 18514  01036E  50DF               	movf	indf2,w,c
 18515  010370  A4D8               	btfss	status,2,c
 18516  010372  D7E2               	goto	l1926
 18517  010374                     u26170:
 18518                           
 18519                           ;display.c: 422: };display.c: 424: cntr = 0;
 18520                           
 18521                           ; BSR set to: 0
 18522                           
 18523                           ; BSR set to: 0
 18524  010374  0E00               	movlw	0
 18525  010376  0100               	movlb	0	; () banked
 18526  010378  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 18527                           
 18528                           ;display.c: 425: while(line3[cntr])
 18529  01037A  D013               	goto	l1928
 18530  01037C                     
 18531                           ; BSR set to: 0
 18532                           ;display.c: 426: display_content[2][cntr] = line3[cntr++];
 18533                           
 18534                           ; BSR set to: 0
 18535  01037C  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 18536  01037E  0D01               	mullw	1
 18537  010380  0E60               	movlw	low __display_outputs@line3
 18538  010382  24F3               	addwf	prodl,w,c
 18539  010384  6ED9               	movwf	fsr2l,c
 18540  010386  0E00               	movlw	high __display_outputs@line3
 18541  010388  20F4               	addwfc	prodh,w,c
 18542  01038A  6EDA               	movwf	fsr2h,c
 18543  01038C  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 18544  01038E  0D01               	mullw	1
 18545  010390  0E94               	movlw	low (_display_content+40)
 18546  010392  24F3               	addwf	prodl,w,c
 18547  010394  6EE1               	movwf	fsr1l,c
 18548  010396  0E03               	movlw	high (_display_content+40)
 18549  010398  20F4               	addwfc	prodh,w,c
 18550  01039A  6EE2               	movwf	fsr1h,c
 18551  01039C  CFDF FFE7          	movff	indf2,indf1
 18552                           
 18553                           ; BSR set to: 0
 18554  0103A0  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 18555  0103A2                     l1928:
 18556                           
 18557                           ; BSR set to: 0
 18558                           
 18559                           ; BSR set to: 0
 18560  0103A2  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 18561  0103A4  0D01               	mullw	1
 18562  0103A6  0E60               	movlw	low __display_outputs@line3
 18563  0103A8  24F3               	addwf	prodl,w,c
 18564  0103AA  6ED9               	movwf	fsr2l,c
 18565  0103AC  0E00               	movlw	high __display_outputs@line3
 18566  0103AE  20F4               	addwfc	prodh,w,c
 18567  0103B0  6EDA               	movwf	fsr2h,c
 18568  0103B2  50DF               	movf	indf2,w,c
 18569  0103B4  A4D8               	btfss	status,2,c
 18570  0103B6  D7E2               	goto	l1929
 18571                           
 18572                           ; BSR set to: 0
 18573                           ;display.c: 428: cntr = 0;
 18574                           
 18575                           ; BSR set to: 0
 18576  0103B8  0E00               	movlw	0
 18577  0103BA  6FA9               	movwf	__display_outputs@cntr& (0+255),b
 18578                           
 18579                           ;display.c: 429: while(line4[cntr])
 18580  0103BC  D013               	goto	l1931
 18581  0103BE                     
 18582                           ; BSR set to: 0
 18583                           ;display.c: 430: display_content[3][cntr] = line4[cntr++];
 18584                           
 18585                           ; BSR set to: 0
 18586  0103BE  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 18587  0103C0  0D01               	mullw	1
 18588  0103C2  0E75               	movlw	low __display_outputs@line4
 18589  0103C4  24F3               	addwf	prodl,w,c
 18590  0103C6  6ED9               	movwf	fsr2l,c
 18591  0103C8  0E00               	movlw	high __display_outputs@line4
 18592  0103CA  20F4               	addwfc	prodh,w,c
 18593  0103CC  6EDA               	movwf	fsr2h,c
 18594  0103CE  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 18595  0103D0  0D01               	mullw	1
 18596  0103D2  0EA8               	movlw	low (_display_content+60)
 18597  0103D4  24F3               	addwf	prodl,w,c
 18598  0103D6  6EE1               	movwf	fsr1l,c
 18599  0103D8  0E03               	movlw	high (_display_content+60)
 18600  0103DA  20F4               	addwfc	prodh,w,c
 18601  0103DC  6EE2               	movwf	fsr1h,c
 18602  0103DE  CFDF FFE7          	movff	indf2,indf1
 18603                           
 18604                           ; BSR set to: 0
 18605  0103E2  2BA9               	incf	__display_outputs@cntr& (0+255),f,b
 18606  0103E4                     l1931:
 18607                           
 18608                           ; BSR set to: 0
 18609                           
 18610                           ; BSR set to: 0
 18611  0103E4  51A9               	movf	__display_outputs@cntr& (0+255),w,b
 18612  0103E6  0D01               	mullw	1
 18613  0103E8  0E75               	movlw	low __display_outputs@line4
 18614  0103EA  24F3               	addwf	prodl,w,c
 18615  0103EC  6ED9               	movwf	fsr2l,c
 18616  0103EE  0E00               	movlw	high __display_outputs@line4
 18617  0103F0  20F4               	addwfc	prodh,w,c
 18618  0103F2  6EDA               	movwf	fsr2h,c
 18619  0103F4  50DF               	movf	indf2,w,c
 18620  0103F6  A4D8               	btfss	status,2,c
 18621  0103F8  D7E2               	goto	l1932
 18622                           
 18623                           ; BSR set to: 0
 18624                           ;display.c: 432: if(os.outputs & OUTPUT_1)
 18625  0103FA  0102               	movlb	2	; () banked
 18626  0103FC  A105               	btfss	(_os+5)& (0+255),0,b	;volatile
 18627  0103FE  D005               	goto	l1934
 18628                           
 18629                           ; BSR set to: 2
 18630                           ;display.c: 433: {;display.c: 434: display_content[2][8] = 'n';
 18631  010400  0E6E               	movlw	110
 18632  010402  0103               	movlb	3	; () banked
 18633  010404  6F9C               	movwf	(_display_content+48)& (0+255),b
 18634                           
 18635                           ;display.c: 435: display_content[2][9] = ' ';
 18636  010406  0E20               	movlw	32
 18637  010408  6F9D               	movwf	(_display_content+49)& (0+255),b
 18638  01040A                     l1934:
 18639                           
 18640                           ;display.c: 436: };display.c: 437: if(os.outputs & OUTPUT_2)
 18641                           
 18642                           ; BSR set to: 3
 18643  01040A  0102               	movlb	2	; () banked
 18644  01040C  A305               	btfss	(_os+5)& (0+255),1,b	;volatile
 18645  01040E  D005               	goto	l1935
 18646                           
 18647                           ; BSR set to: 2
 18648                           ;display.c: 438: {;display.c: 439: display_content[2][18] = 'n';
 18649  010410  0E6E               	movlw	110
 18650  010412  0103               	movlb	3	; () banked
 18651  010414  6FA6               	movwf	(_display_content+58)& (0+255),b
 18652                           
 18653                           ;display.c: 440: display_content[2][19] = ' ';
 18654  010416  0E20               	movlw	32
 18655  010418  6FA7               	movwf	(_display_content+59)& (0+255),b
 18656  01041A                     l1935:
 18657                           
 18658                           ;display.c: 441: };display.c: 442: if(os.outputs & OUTPUT_3)
 18659                           
 18660                           ; BSR set to: 3
 18661  01041A  0102               	movlb	2	; () banked
 18662  01041C  A505               	btfss	(_os+5)& (0+255),2,b	;volatile
 18663  01041E  D005               	goto	l1936
 18664                           
 18665                           ; BSR set to: 2
 18666                           ;display.c: 443: {;display.c: 444: display_content[3][8] = 'n';
 18667  010420  0E6E               	movlw	110
 18668  010422  0103               	movlb	3	; () banked
 18669  010424  6FB0               	movwf	(_display_content+68)& (0+255),b
 18670                           
 18671                           ;display.c: 445: display_content[3][9] = ' ';
 18672  010426  0E20               	movlw	32
 18673  010428  6FB1               	movwf	(_display_content+69)& (0+255),b
 18674  01042A                     l1936:
 18675                           
 18676                           ;display.c: 446: };display.c: 447: if(os.outputs & OUTPUT_4)
 18677                           
 18678                           ; BSR set to: 3
 18679  01042A  0102               	movlb	2	; () banked
 18680  01042C  A705               	btfss	(_os+5)& (0+255),3,b	;volatile
 18681  01042E  D01E               	goto	l1938
 18682                           
 18683                           ; BSR set to: 2
 18684                           ;display.c: 448: {;display.c: 449: display_content[3][18] = 'n';
 18685  010430  0E6E               	movlw	110
 18686  010432  0103               	movlb	3	; () banked
 18687  010434  6FBA               	movwf	(_display_content+78)& (0+255),b
 18688                           
 18689                           ;display.c: 450: display_content[3][19] = ' ';
 18690  010436  0E20               	movlw	32
 18691  010438  6FBB               	movwf	(_display_content+79)& (0+255),b
 18692                           
 18693                           ; BSR set to: 3
 18694                           ;display.c: 451: };display.c: 453: switch(mode)
 18695  01043A  D018               	goto	l1938
 18696  01043C                     
 18697                           ;display.c: 456: display_content[2][0] = '-';
 18698                           
 18699                           ; BSR set to: 3
 18700  01043C  0E2D               	movlw	45
 18701  01043E  0103               	movlb	3	; () banked
 18702  010440  6F94               	movwf	(_display_content+40)& (0+255),b
 18703                           
 18704                           ;display.c: 457: display_content[2][1] = '>';
 18705  010442  0E3E               	movlw	62
 18706  010444  6F95               	movwf	(_display_content+41)& (0+255),b
 18707                           
 18708                           ;display.c: 458: break;
 18709  010446  0012               	return	
 18710  010448                     
 18711                           ;display.c: 460: display_content[2][10] = '-';
 18712                           
 18713                           ; BSR set to: 3
 18714  010448  0E2D               	movlw	45
 18715  01044A  0103               	movlb	3	; () banked
 18716  01044C  6F9E               	movwf	(_display_content+50)& (0+255),b
 18717                           
 18718                           ;display.c: 461: display_content[2][11] = '>';
 18719  01044E  0E3E               	movlw	62
 18720  010450  6F9F               	movwf	(_display_content+51)& (0+255),b
 18721                           
 18722                           ;display.c: 462: break;
 18723  010452  0012               	return	
 18724  010454                     
 18725                           ;display.c: 464: display_content[3][0] = '-';
 18726                           
 18727                           ; BSR set to: 3
 18728  010454  0E2D               	movlw	45
 18729  010456  0103               	movlb	3	; () banked
 18730  010458  6FA8               	movwf	(_display_content+60)& (0+255),b
 18731                           
 18732                           ;display.c: 465: display_content[3][1] = '>';
 18733  01045A  0E3E               	movlw	62
 18734  01045C  6FA9               	movwf	(_display_content+61)& (0+255),b
 18735                           
 18736                           ;display.c: 466: break;
 18737  01045E  0012               	return	
 18738  010460                     
 18739                           ;display.c: 468: display_content[3][10] = '-';
 18740                           
 18741                           ; BSR set to: 3
 18742  010460  0E2D               	movlw	45
 18743  010462  0103               	movlb	3	; () banked
 18744  010464  6FB2               	movwf	(_display_content+70)& (0+255),b
 18745                           
 18746                           ;display.c: 469: display_content[3][11] = '>';
 18747  010466  0E3E               	movlw	62
 18748  010468  6FB3               	movwf	(_display_content+71)& (0+255),b
 18749                           
 18750                           ; BSR set to: 3
 18751                           ;display.c: 471: }
 18752                           
 18753                           ;display.c: 470: break;
 18754  01046A  0012               	return	
 18755  01046C                     l1938:
 18756                           
 18757                           ; BSR set to: 3
 18758  01046C  0100               	movlb	0	; () banked
 18759  01046E  51A8               	movf	__display_outputs@mode& (0+255),w,b
 18760                           
 18761                           ; Switch size 1, requested type "space"
 18762                           ; Number of cases is 4, Range of values is 49 to 52
 18763                           ; switch strategies available:
 18764                           ; Name         Instructions Cycles
 18765                           ; simple_byte           13     7 (average)
 18766                           ;	Chosen strategy is simple_byte
 18767  010470  0A31               	xorlw	49	; case 49
 18768  010472  B4D8               	btfsc	status,2,c
 18769  010474  D7E3               	goto	l1939
 18770  010476  0A03               	xorlw	3	; case 50
 18771  010478  B4D8               	btfsc	status,2,c
 18772  01047A  D7E6               	goto	l1941
 18773  01047C  0A01               	xorlw	1	; case 51
 18774  01047E  B4D8               	btfsc	status,2,c
 18775  010480  D7E9               	goto	l1942
 18776  010482  0A07               	xorlw	7	; case 52
 18777  010484  A4D8               	btfss	status,2,c
 18778  010486  0012               	return	
 18779  010488  D7EB               	goto	l1943
 18780  01048A                     __end_of__display_outputs:
 18781                           	opt stack 0
 18782                           tblptru	equ	0xFF8
 18783                           tblptrh	equ	0xFF7
 18784                           tblptrl	equ	0xFF6
 18785                           tablat	equ	0xFF5
 18786                           prodh	equ	0xFF4
 18787                           prodl	equ	0xFF3
 18788                           intcon	equ	0xFF2
 18789                           intcon2	equ	0xFF1
 18790                           intcon3	equ	0xFF0
 18791                           postinc0	equ	0xFEE
 18792                           wreg	equ	0xFE8
 18793                           indf1	equ	0xFE7
 18794                           postdec1	equ	0xFE5
 18795                           plusw1	equ	0xFE3
 18796                           fsr1h	equ	0xFE2
 18797                           fsr1l	equ	0xFE1
 18798                           indf2	equ	0xFDF
 18799                           postinc2	equ	0xFDE
 18800                           postdec2	equ	0xFDD
 18801                           plusw2	equ	0xFDB
 18802                           fsr2h	equ	0xFDA
 18803                           fsr2l	equ	0xFD9
 18804                           status	equ	0xFD8
 18805                           
 18806 ;; *************** function __display_inout *****************
 18807 ;; Defined at:
 18808 ;;		line 210 in file "display.c"
 18809 ;; Parameters:    Size  Location     Type
 18810 ;;		None
 18811 ;; Auto vars:     Size  Location     Type
 18812 ;;  line2          18   66[BANK0 ] const unsigned char [18]
 18813 ;;  line1          18   48[BANK0 ] const unsigned char [18]
 18814 ;;  line4          14   84[BANK0 ] const unsigned char [14]
 18815 ;;  line3           3   98[BANK0 ] const unsigned char [3]
 18816 ;;  cntr            1  101[BANK0 ] unsigned char 
 18817 ;; Return value:  Size  Location     Type
 18818 ;;                  1    wreg      void 
 18819 ;; Registers used:
 18820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18821 ;; Tracked objects:
 18822 ;;		On entry : 0/0
 18823 ;;		On exit  : 0/0
 18824 ;;		Unchanged: 0/0
 18825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18827 ;;      Locals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18829 ;;      Totals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18830 ;;Total ram usage:       54 bytes
 18831 ;; Hardware stack levels used:    1
 18832 ;; Hardware stack levels required when called:   14
 18833 ;; This function calls:
 18834 ;;		__display_itoa
 18835 ;;		_buck_get_mode
 18836 ;; This function is called by:
 18837 ;;		_display_prepare
 18838 ;; This function uses a non-reentrant model
 18839 ;;
 18840                           
 18841                           	psect	text75
 18842  011098                     __ptext75:
 18843                           	opt stack 0
 18844  011098                     __display_inout:
 18845                           	opt stack 15
 18846                           
 18847                           ;display.c: 212: uint8_t cntr;;display.c: 213: const char line1[] = "Voltage & Current";
 18848                           
 18849                           ;incstack = 0
 18850  011098  0EEB               	movlw	low __display_inout@F7254
 18851  01109A  6EF6               	movwf	tblptrl,c
 18852  01109C                     	if	1	;There is more than 1 active tblptr byte
 18853  01109C  0EC1               	movlw	high __display_inout@F7254
 18854  01109E  6EF7               	movwf	tblptrh,c
 18855  0110A0                     	endif
 18856  0110A0                     	if	1	;There are 3 active tblptr bytes
 18857  0110A0  0E00               	movlw	low (__display_inout@F7254 shr (0+16))
 18858  0110A2  6EF8               	movwf	tblptru,c
 18859  0110A4                     	endif
 18860  0110A4  EE20  F090         	lfsr	2,__display_inout@line1
 18861  0110A8  0E11               	movlw	17
 18862  0110AA                     u25650:
 18863  0110AA  0009               	tblrd		*+
 18864  0110AC  CFF5 FFDE          	movff	tablat,postinc2
 18865  0110B0  06E8               	decf	wreg,f,c
 18866  0110B2  E2FB               	bc	u25650
 18867                           
 18868                           ;display.c: 214: const char line2[] = "   Input   Output";
 18869  0110B4  0ED9               	movlw	low __display_inout@F7256
 18870  0110B6  6EF6               	movwf	tblptrl,c
 18871  0110B8                     	if	1	;There is more than 1 active tblptr byte
 18872  0110B8  0EC1               	movlw	high __display_inout@F7256
 18873  0110BA  6EF7               	movwf	tblptrh,c
 18874  0110BC                     	endif
 18875  0110BC                     	if	1	;There are 3 active tblptr bytes
 18876  0110BC  0E00               	movlw	low (__display_inout@F7256 shr (0+16))
 18877  0110BE  6EF8               	movwf	tblptru,c
 18878  0110C0                     	endif
 18879  0110C0  EE20  F0A2         	lfsr	2,__display_inout@line2
 18880  0110C4  0E11               	movlw	17
 18881  0110C6                     u25660:
 18882  0110C6  0009               	tblrd		*+
 18883  0110C8  CFF5 FFDE          	movff	tablat,postinc2
 18884  0110CC  06E8               	decf	wreg,f,c
 18885  0110CE  E2FB               	bc	u25660
 18886                           
 18887                           ;display.c: 215: const char line3[] = "V:";
 18888  0110D0  0E41               	movlw	low __display_inout@F7258
 18889  0110D2  6EF6               	movwf	tblptrl,c
 18890  0110D4                     	if	1	;There is more than 1 active tblptr byte
 18891  0110D4  0EC3               	movlw	high __display_inout@F7258
 18892  0110D6  6EF7               	movwf	tblptrh,c
 18893  0110D8                     	endif
 18894  0110D8                     	if	1	;There are 3 active tblptr bytes
 18895  0110D8  0E00               	movlw	low (__display_inout@F7258 shr (0+16))
 18896  0110DA  6EF8               	movwf	tblptru,c
 18897  0110DC                     	endif
 18898  0110DC  0009               	tblrd		*+
 18899  0110DE  CFF5 F0C2          	movff	tablat,__display_inout@line3
 18900  0110E2  0009               	tblrd		*+
 18901  0110E4  CFF5 F0C3          	movff	tablat,__display_inout@line3+1
 18902  0110E8  000A               	tblrd		*-
 18903  0110EA  CFF5 F0C4          	movff	tablat,__display_inout@line3+2
 18904                           
 18905                           ;display.c: 216: const char line4[] = "A: --      --";
 18906  0110EE  0EA7               	movlw	low __display_inout@F7260
 18907  0110F0  6EF6               	movwf	tblptrl,c
 18908  0110F2                     	if	1	;There is more than 1 active tblptr byte
 18909  0110F2  0EC2               	movlw	high __display_inout@F7260
 18910  0110F4  6EF7               	movwf	tblptrh,c
 18911  0110F6                     	endif
 18912  0110F6                     	if	1	;There are 3 active tblptr bytes
 18913  0110F6  0E00               	movlw	low (__display_inout@F7260 shr (0+16))
 18914  0110F8  6EF8               	movwf	tblptru,c
 18915  0110FA                     	endif
 18916  0110FA  EE20  F0B4         	lfsr	2,__display_inout@line4
 18917  0110FE  0E0D               	movlw	13
 18918  011100                     u25670:
 18919  011100  0009               	tblrd		*+
 18920  011102  CFF5 FFDE          	movff	tablat,postinc2
 18921  011106  06E8               	decf	wreg,f,c
 18922  011108  E2FB               	bc	u25670
 18923                           
 18924                           ;display.c: 218: cntr = 0;
 18925  01110A  0E00               	movlw	0
 18926  01110C  0100               	movlb	0	; () banked
 18927  01110E  6FC5               	movwf	__display_inout@cntr& (0+255),b
 18928                           
 18929                           ;display.c: 219: while(line1[cntr])
 18930  011110  D013               	goto	l1784
 18931  011112                     
 18932                           ; BSR set to: 0
 18933                           ;display.c: 220: display_content[0][cntr] = line1[cntr++];
 18934                           
 18935                           ; BSR set to: 0
 18936  011112  51C5               	movf	__display_inout@cntr& (0+255),w,b
 18937  011114  0D01               	mullw	1
 18938  011116  0E90               	movlw	low __display_inout@line1
 18939  011118  24F3               	addwf	prodl,w,c
 18940  01111A  6ED9               	movwf	fsr2l,c
 18941  01111C  0E00               	movlw	high __display_inout@line1
 18942  01111E  20F4               	addwfc	prodh,w,c
 18943  011120  6EDA               	movwf	fsr2h,c
 18944  011122  51C5               	movf	__display_inout@cntr& (0+255),w,b
 18945  011124  0D01               	mullw	1
 18946  011126  0E6C               	movlw	low _display_content
 18947  011128  24F3               	addwf	prodl,w,c
 18948  01112A  6EE1               	movwf	fsr1l,c
 18949  01112C  0E03               	movlw	high _display_content
 18950  01112E  20F4               	addwfc	prodh,w,c
 18951  011130  6EE2               	movwf	fsr1h,c
 18952  011132  CFDF FFE7          	movff	indf2,indf1
 18953                           
 18954                           ; BSR set to: 0
 18955  011136  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 18956  011138                     l1784:
 18957                           
 18958                           ; BSR set to: 0
 18959                           
 18960                           ; BSR set to: 0
 18961  011138  51C5               	movf	__display_inout@cntr& (0+255),w,b
 18962  01113A  0D01               	mullw	1
 18963  01113C  0E90               	movlw	low __display_inout@line1
 18964  01113E  24F3               	addwf	prodl,w,c
 18965  011140  6ED9               	movwf	fsr2l,c
 18966  011142  0E00               	movlw	high __display_inout@line1
 18967  011144  20F4               	addwfc	prodh,w,c
 18968  011146  6EDA               	movwf	fsr2h,c
 18969  011148  50DF               	movf	indf2,w,c
 18970  01114A  A4D8               	btfss	status,2,c
 18971  01114C  D7E2               	goto	l1785
 18972                           
 18973                           ; BSR set to: 0
 18974                           ;display.c: 222: cntr = 0;
 18975                           
 18976                           ; BSR set to: 0
 18977  01114E  0E00               	movlw	0
 18978  011150  6FC5               	movwf	__display_inout@cntr& (0+255),b
 18979                           
 18980                           ;display.c: 223: while(line2[cntr])
 18981  011152  D013               	goto	l1787
 18982  011154                     
 18983                           ; BSR set to: 0
 18984                           ;display.c: 224: display_content[1][cntr] = line2[cntr++];
 18985                           
 18986                           ; BSR set to: 0
 18987  011154  51C5               	movf	__display_inout@cntr& (0+255),w,b
 18988  011156  0D01               	mullw	1
 18989  011158  0EA2               	movlw	low __display_inout@line2
 18990  01115A  24F3               	addwf	prodl,w,c
 18991  01115C  6ED9               	movwf	fsr2l,c
 18992  01115E  0E00               	movlw	high __display_inout@line2
 18993  011160  20F4               	addwfc	prodh,w,c
 18994  011162  6EDA               	movwf	fsr2h,c
 18995  011164  51C5               	movf	__display_inout@cntr& (0+255),w,b
 18996  011166  0D01               	mullw	1
 18997  011168  0E80               	movlw	low (_display_content+20)
 18998  01116A  24F3               	addwf	prodl,w,c
 18999  01116C  6EE1               	movwf	fsr1l,c
 19000  01116E  0E03               	movlw	high (_display_content+20)
 19001  011170  20F4               	addwfc	prodh,w,c
 19002  011172  6EE2               	movwf	fsr1h,c
 19003  011174  CFDF FFE7          	movff	indf2,indf1
 19004                           
 19005                           ; BSR set to: 0
 19006  011178  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 19007  01117A                     l1787:
 19008                           
 19009                           ; BSR set to: 0
 19010                           
 19011                           ; BSR set to: 0
 19012  01117A  51C5               	movf	__display_inout@cntr& (0+255),w,b
 19013  01117C  0D01               	mullw	1
 19014  01117E  0EA2               	movlw	low __display_inout@line2
 19015  011180  24F3               	addwf	prodl,w,c
 19016  011182  6ED9               	movwf	fsr2l,c
 19017  011184  0E00               	movlw	high __display_inout@line2
 19018  011186  20F4               	addwfc	prodh,w,c
 19019  011188  6EDA               	movwf	fsr2h,c
 19020  01118A  50DF               	movf	indf2,w,c
 19021  01118C  A4D8               	btfss	status,2,c
 19022  01118E  D7E2               	goto	l1788
 19023                           
 19024                           ; BSR set to: 0
 19025                           ;display.c: 226: cntr = 0;
 19026                           
 19027                           ; BSR set to: 0
 19028  011190  0E00               	movlw	0
 19029  011192  6FC5               	movwf	__display_inout@cntr& (0+255),b
 19030                           
 19031                           ;display.c: 227: while(line3[cntr])
 19032  011194  D013               	goto	l1790
 19033  011196                     
 19034                           ; BSR set to: 0
 19035                           ;display.c: 228: display_content[2][cntr] = line3[cntr++];
 19036                           
 19037                           ; BSR set to: 0
 19038  011196  51C5               	movf	__display_inout@cntr& (0+255),w,b
 19039  011198  0D01               	mullw	1
 19040  01119A  0EC2               	movlw	low __display_inout@line3
 19041  01119C  24F3               	addwf	prodl,w,c
 19042  01119E  6ED9               	movwf	fsr2l,c
 19043  0111A0  0E00               	movlw	high __display_inout@line3
 19044  0111A2  20F4               	addwfc	prodh,w,c
 19045  0111A4  6EDA               	movwf	fsr2h,c
 19046  0111A6  51C5               	movf	__display_inout@cntr& (0+255),w,b
 19047  0111A8  0D01               	mullw	1
 19048  0111AA  0E94               	movlw	low (_display_content+40)
 19049  0111AC  24F3               	addwf	prodl,w,c
 19050  0111AE  6EE1               	movwf	fsr1l,c
 19051  0111B0  0E03               	movlw	high (_display_content+40)
 19052  0111B2  20F4               	addwfc	prodh,w,c
 19053  0111B4  6EE2               	movwf	fsr1h,c
 19054  0111B6  CFDF FFE7          	movff	indf2,indf1
 19055                           
 19056                           ; BSR set to: 0
 19057  0111BA  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 19058  0111BC                     l1790:
 19059                           
 19060                           ; BSR set to: 0
 19061                           
 19062                           ; BSR set to: 0
 19063  0111BC  51C5               	movf	__display_inout@cntr& (0+255),w,b
 19064  0111BE  0D01               	mullw	1
 19065  0111C0  0EC2               	movlw	low __display_inout@line3
 19066  0111C2  24F3               	addwf	prodl,w,c
 19067  0111C4  6ED9               	movwf	fsr2l,c
 19068  0111C6  0E00               	movlw	high __display_inout@line3
 19069  0111C8  20F4               	addwfc	prodh,w,c
 19070  0111CA  6EDA               	movwf	fsr2h,c
 19071  0111CC  50DF               	movf	indf2,w,c
 19072  0111CE  A4D8               	btfss	status,2,c
 19073  0111D0  D7E2               	goto	l1791
 19074                           
 19075                           ; BSR set to: 0
 19076                           ;display.c: 229: _display_itoa(os.input_voltage, 3, &display_content[2][3]);
 19077                           
 19078                           ; BSR set to: 0
 19079  0111D2  C212  F078         	movff	_os+18,__display_itoa@value	;volatile
 19080  0111D6  C213  F079         	movff	_os+19,__display_itoa@value+1	;volatile
 19081  0111DA  0E03               	movlw	3
 19082  0111DC  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 19083  0111DE  0E97               	movlw	low (_display_content+43)
 19084  0111E0  6F7B               	movwf	__display_itoa@text& (0+255),b
 19085  0111E2  0E03               	movlw	high (_display_content+43)
 19086  0111E4  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 19087  0111E6  EC51  F083         	call	__display_itoa	;wreg free
 19088                           
 19089                           ;display.c: 230: _display_itoa(os.output_voltage, 3, &display_content[2][11]);
 19090  0111EA  C227  F078         	movff	_os+39,__display_itoa@value	;volatile
 19091  0111EE  C228  F079         	movff	_os+40,__display_itoa@value+1	;volatile
 19092  0111F2  0E03               	movlw	3
 19093  0111F4  0100               	movlb	0	; () banked
 19094  0111F6  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 19095  0111F8  0E9F               	movlw	low (_display_content+51)
 19096  0111FA  6F7B               	movwf	__display_itoa@text& (0+255),b
 19097  0111FC  0E03               	movlw	high (_display_content+51)
 19098  0111FE  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 19099  011200  EC51  F083         	call	__display_itoa	;wreg free
 19100                           
 19101                           ;display.c: 232: cntr = 0;
 19102  011204  0E00               	movlw	0
 19103  011206  0100               	movlb	0	; () banked
 19104  011208  6FC5               	movwf	__display_inout@cntr& (0+255),b
 19105                           
 19106                           ;display.c: 233: while(line4[cntr])
 19107  01120A  D013               	goto	l1793
 19108  01120C                     
 19109                           ; BSR set to: 0
 19110                           ;display.c: 234: display_content[3][cntr] = line4[cntr++];
 19111                           
 19112                           ; BSR set to: 0
 19113  01120C  51C5               	movf	__display_inout@cntr& (0+255),w,b
 19114  01120E  0D01               	mullw	1
 19115  011210  0EB4               	movlw	low __display_inout@line4
 19116  011212  24F3               	addwf	prodl,w,c
 19117  011214  6ED9               	movwf	fsr2l,c
 19118  011216  0E00               	movlw	high __display_inout@line4
 19119  011218  20F4               	addwfc	prodh,w,c
 19120  01121A  6EDA               	movwf	fsr2h,c
 19121  01121C  51C5               	movf	__display_inout@cntr& (0+255),w,b
 19122  01121E  0D01               	mullw	1
 19123  011220  0EA8               	movlw	low (_display_content+60)
 19124  011222  24F3               	addwf	prodl,w,c
 19125  011224  6EE1               	movwf	fsr1l,c
 19126  011226  0E03               	movlw	high (_display_content+60)
 19127  011228  20F4               	addwfc	prodh,w,c
 19128  01122A  6EE2               	movwf	fsr1h,c
 19129  01122C  CFDF FFE7          	movff	indf2,indf1
 19130                           
 19131                           ; BSR set to: 0
 19132  011230  2BC5               	incf	__display_inout@cntr& (0+255),f,b
 19133  011232                     l1793:
 19134                           
 19135                           ; BSR set to: 0
 19136                           
 19137                           ; BSR set to: 0
 19138  011232  51C5               	movf	__display_inout@cntr& (0+255),w,b
 19139  011234  0D01               	mullw	1
 19140  011236  0EB4               	movlw	low __display_inout@line4
 19141  011238  24F3               	addwf	prodl,w,c
 19142  01123A  6ED9               	movwf	fsr2l,c
 19143  01123C  0E00               	movlw	high __display_inout@line4
 19144  01123E  20F4               	addwfc	prodh,w,c
 19145  011240  6EDA               	movwf	fsr2h,c
 19146  011242  50DF               	movf	indf2,w,c
 19147  011244  A4D8               	btfss	status,2,c
 19148  011246  D7E2               	goto	l1794
 19149                           
 19150                           ;display.c: 236: {;display.c: 237: _display_itoa(os.input_current, 3, &display_content[3
      +                          ][3]);
 19151                           
 19152                           ; BSR set to: 0
 19153                           
 19154                           ; BSR set to: 0
 19155                           ;display.c: 235: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
 19156  011248  C21D  F078         	movff	_os+29,__display_itoa@value	;volatile
 19157  01124C  C21E  F079         	movff	_os+30,__display_itoa@value+1	;volatile
 19158  011250  0E03               	movlw	3
 19159  011252  0100               	movlb	0	; () banked
 19160  011254  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 19161  011256  0EAB               	movlw	low (_display_content+63)
 19162  011258  6F7B               	movwf	__display_itoa@text& (0+255),b
 19163  01125A  0E03               	movlw	high (_display_content+63)
 19164  01125C  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 19165  01125E  EC51  F083         	call	__display_itoa	;wreg free
 19166                           
 19167                           ;display.c: 238: _display_itoa(os.output_current, 3, &display_content[3][11]);
 19168  011262  C232  F078         	movff	_os+50,__display_itoa@value	;volatile
 19169  011266  C233  F079         	movff	_os+51,__display_itoa@value+1	;volatile
 19170  01126A  0E03               	movlw	3
 19171  01126C  0100               	movlb	0	; () banked
 19172  01126E  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 19173  011270  0EB3               	movlw	low (_display_content+71)
 19174  011272  6F7B               	movwf	__display_itoa@text& (0+255),b
 19175  011274  0E03               	movlw	high (_display_content+71)
 19176  011276  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 19177  011278  EC51  F083         	call	__display_itoa	;wreg free
 19178  01127C  0012               	return	
 19179  01127E                     __end_of__display_inout:
 19180                           	opt stack 0
 19181                           tblptru	equ	0xFF8
 19182                           tblptrh	equ	0xFF7
 19183                           tblptrl	equ	0xFF6
 19184                           tablat	equ	0xFF5
 19185                           prodh	equ	0xFF4
 19186                           prodl	equ	0xFF3
 19187                           intcon	equ	0xFF2
 19188                           intcon2	equ	0xFF1
 19189                           intcon3	equ	0xFF0
 19190                           postinc0	equ	0xFEE
 19191                           wreg	equ	0xFE8
 19192                           indf1	equ	0xFE7
 19193                           postdec1	equ	0xFE5
 19194                           plusw1	equ	0xFE3
 19195                           fsr1h	equ	0xFE2
 19196                           fsr1l	equ	0xFE1
 19197                           indf2	equ	0xFDF
 19198                           postinc2	equ	0xFDE
 19199                           postdec2	equ	0xFDD
 19200                           plusw2	equ	0xFDB
 19201                           fsr2h	equ	0xFDA
 19202                           fsr2l	equ	0xFD9
 19203                           status	equ	0xFD8
 19204                           
 19205 ;; *************** function __display_efficiency *****************
 19206 ;; Defined at:
 19207 ;;		line 544 in file "display.c"
 19208 ;; Parameters:    Size  Location     Type
 19209 ;;		None
 19210 ;; Auto vars:     Size  Location     Type
 19211 ;;  source         19   69[BANK0 ] const unsigned char [19]
 19212 ;;  header         19   50[BANK0 ] const unsigned char [19]
 19213 ;;  footer         14   88[BANK0 ] const unsigned char [14]
 19214 ;;  battery         4  110[BANK0 ] long 
 19215 ;;  panel           4  106[BANK0 ] long 
 19216 ;;  efficiency      4  102[BANK0 ] float 
 19217 ;;  cntr            1  114[BANK0 ] unsigned char 
 19218 ;; Return value:  Size  Location     Type
 19219 ;;                  1    wreg      void 
 19220 ;; Registers used:
 19221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19222 ;; Tracked objects:
 19223 ;;		On entry : 0/0
 19224 ;;		On exit  : 0/0
 19225 ;;		Unchanged: 0/0
 19226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19228 ;;      Locals:         0      65       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19229 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19230 ;;      Totals:         0      67       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19231 ;;Total ram usage:       67 bytes
 19232 ;; Hardware stack levels used:    1
 19233 ;; Hardware stack levels required when called:   14
 19234 ;; This function calls:
 19235 ;;		___aldiv
 19236 ;;		___fltol
 19237 ;;		___lmul
 19238 ;;		___xxtofl
 19239 ;;		__display_itoa
 19240 ;; This function is called by:
 19241 ;;		_display_prepare
 19242 ;; This function uses a non-reentrant model
 19243 ;;
 19244                           
 19245                           	psect	text76
 19246  00E298                     __ptext76:
 19247                           	opt stack 0
 19248  00E298                     __display_efficiency:
 19249                           	opt stack 15
 19250                           
 19251                           ;display.c: 546: uint8_t cntr;;display.c: 547: const char header[] = "Charger Efficiency
      +                          ";
 19252                           
 19253                           ;incstack = 0
 19254  00E298  0E6A               	movlw	low __display_efficiency@F7342
 19255  00E29A  6EF6               	movwf	tblptrl,c
 19256  00E29C                     	if	1	;There is more than 1 active tblptr byte
 19257  00E29C  0EC1               	movlw	high __display_efficiency@F7342
 19258  00E29E  6EF7               	movwf	tblptrh,c
 19259  00E2A0                     	endif
 19260  00E2A0                     	if	1	;There are 3 active tblptr bytes
 19261  00E2A0  0E00               	movlw	low (__display_efficiency@F7342 shr (0+16))
 19262  00E2A2  6EF8               	movwf	tblptru,c
 19263  00E2A4                     	endif
 19264  00E2A4  EE20  F092         	lfsr	2,__display_efficiency@header
 19265  00E2A8  0E12               	movlw	18
 19266  00E2AA                     u26410:
 19267  00E2AA  0009               	tblrd		*+
 19268  00E2AC  CFF5 FFDE          	movff	tablat,postinc2
 19269  00E2B0  06E8               	decf	wreg,f,c
 19270  00E2B2  E2FB               	bc	u26410
 19271                           
 19272                           ;display.c: 548: const char source[] = "Panel:    Battery:";
 19273  00E2B4  0E57               	movlw	low __display_efficiency@F7344
 19274  00E2B6  6EF6               	movwf	tblptrl,c
 19275  00E2B8                     	if	1	;There is more than 1 active tblptr byte
 19276  00E2B8  0EC1               	movlw	high __display_efficiency@F7344
 19277  00E2BA  6EF7               	movwf	tblptrh,c
 19278  00E2BC                     	endif
 19279  00E2BC                     	if	1	;There are 3 active tblptr bytes
 19280  00E2BC  0E00               	movlw	low (__display_efficiency@F7344 shr (0+16))
 19281  00E2BE  6EF8               	movwf	tblptru,c
 19282  00E2C0                     	endif
 19283  00E2C0  EE20  F0A5         	lfsr	2,__display_efficiency@source
 19284  00E2C4  0E12               	movlw	18
 19285  00E2C6                     u26420:
 19286  00E2C6  0009               	tblrd		*+
 19287  00E2C8  CFF5 FFDE          	movff	tablat,postinc2
 19288  00E2CC  06E8               	decf	wreg,f,c
 19289  00E2CE  E2FB               	bc	u26420
 19290                           
 19291                           ;display.c: 549: const char footer[] = "E:         L:";
 19292  00E2D0  0E7D               	movlw	low __display_efficiency@F7346
 19293  00E2D2  6EF6               	movwf	tblptrl,c
 19294  00E2D4                     	if	1	;There is more than 1 active tblptr byte
 19295  00E2D4  0EC2               	movlw	high __display_efficiency@F7346
 19296  00E2D6  6EF7               	movwf	tblptrh,c
 19297  00E2D8                     	endif
 19298  00E2D8                     	if	1	;There are 3 active tblptr bytes
 19299  00E2D8  0E00               	movlw	low (__display_efficiency@F7346 shr (0+16))
 19300  00E2DA  6EF8               	movwf	tblptru,c
 19301  00E2DC                     	endif
 19302  00E2DC  EE20  F0B8         	lfsr	2,__display_efficiency@footer
 19303  00E2E0  0E0D               	movlw	13
 19304  00E2E2                     u26430:
 19305  00E2E2  0009               	tblrd		*+
 19306  00E2E4  CFF5 FFDE          	movff	tablat,postinc2
 19307  00E2E8  06E8               	decf	wreg,f,c
 19308  00E2EA  E2FB               	bc	u26430
 19309                           
 19310                           ;display.c: 550: int32_t panel;;display.c: 551: int32_t battery = (int32_t) os.output_vo
      +                          ltage * (int32_t) os.output_current;
 19311  00E2EC  EE22  F027         	lfsr	2,_os+39	;volatile
 19312  00E2F0  CFDE F060          	movff	postinc2,___lmul@multiplier
 19313  00E2F4  CFDD F061          	movff	postdec2,___lmul@multiplier+1
 19314  00E2F8  0100               	movlb	0	; () banked
 19315  00E2FA  0E00               	movlw	0
 19316  00E2FC  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 19317  00E2FE  0EFF               	movlw	-1
 19318  00E300  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 19319  00E302  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 19320  00E304  EE22  F032         	lfsr	2,_os+50	;volatile
 19321  00E308  CFDE F064          	movff	postinc2,___lmul@multiplicand
 19322  00E30C  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 19323  00E310  0E00               	movlw	0
 19324  00E312  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 19325  00E314  0EFF               	movlw	-1
 19326  00E316  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19327  00E318  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19328  00E31A  ECEB  F0BC         	call	___lmul	;wreg free
 19329  00E31E  C060  F0CE         	movff	?___lmul,__display_efficiency@battery
 19330  00E322  C061  F0CF         	movff	?___lmul+1,__display_efficiency@battery+1
 19331  00E326  C062  F0D0         	movff	?___lmul+2,__display_efficiency@battery+2
 19332  00E32A  C063  F0D1         	movff	?___lmul+3,__display_efficiency@battery+3
 19333                           
 19334                           ;display.c: 552: float efficiency;;display.c: 554: panel = (int32_t) os.input_voltage;
 19335  00E32E  EE22  F012         	lfsr	2,_os+18	;volatile
 19336  00E332  CFDE F0CA          	movff	postinc2,__display_efficiency@panel
 19337  00E336  CFDD F0CB          	movff	postdec2,__display_efficiency@panel+1
 19338  00E33A  0100               	movlb	0	; () banked
 19339  00E33C  0E00               	movlw	0
 19340  00E33E  BFCB               	btfsc	(__display_efficiency@panel+1)& (0+255),7,b
 19341  00E340  0EFF               	movlw	-1
 19342  00E342  6FCC               	movwf	(__display_efficiency@panel+2)& (0+255),b
 19343  00E344  6FCD               	movwf	(__display_efficiency@panel+3)& (0+255),b
 19344                           
 19345                           ; BSR set to: 0
 19346                           ;display.c: 555: panel *= (int32_t) os.input_current;
 19347  00E346  C0CA  F060         	movff	__display_efficiency@panel,___lmul@multiplier
 19348  00E34A  C0CB  F061         	movff	__display_efficiency@panel+1,___lmul@multiplier+1
 19349  00E34E  C0CC  F062         	movff	__display_efficiency@panel+2,___lmul@multiplier+2
 19350  00E352  C0CD  F063         	movff	__display_efficiency@panel+3,___lmul@multiplier+3
 19351  00E356  EE22  F01D         	lfsr	2,_os+29	;volatile
 19352  00E35A  CFDE F064          	movff	postinc2,___lmul@multiplicand
 19353  00E35E  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 19354  00E362  0E00               	movlw	0
 19355  00E364  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 19356  00E366  0EFF               	movlw	-1
 19357  00E368  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19358  00E36A  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19359  00E36C  ECEB  F0BC         	call	___lmul	;wreg free
 19360  00E370  C060  F0CA         	movff	?___lmul,__display_efficiency@panel
 19361  00E374  C061  F0CB         	movff	?___lmul+1,__display_efficiency@panel+1
 19362  00E378  C062  F0CC         	movff	?___lmul+2,__display_efficiency@panel+2
 19363  00E37C  C063  F0CD         	movff	?___lmul+3,__display_efficiency@panel+3
 19364                           
 19365                           ;display.c: 556: panel /= 1000;
 19366  00E380  C0CA  F060         	movff	__display_efficiency@panel,___aldiv@dividend
 19367  00E384  C0CB  F061         	movff	__display_efficiency@panel+1,___aldiv@dividend+1
 19368  00E388  C0CC  F062         	movff	__display_efficiency@panel+2,___aldiv@dividend+2
 19369  00E38C  C0CD  F063         	movff	__display_efficiency@panel+3,___aldiv@dividend+3
 19370  00E390  0EE8               	movlw	232
 19371  00E392  0100               	movlb	0	; () banked
 19372  00E394  6F64               	movwf	___aldiv@divisor& (0+255),b
 19373  00E396  0E03               	movlw	3
 19374  00E398  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 19375  00E39A  0E00               	movlw	0
 19376  00E39C  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 19377  00E39E  0E00               	movlw	0
 19378  00E3A0  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 19379  00E3A2  EC4E  F0A7         	call	___aldiv	;wreg free
 19380  00E3A6  C060  F0CA         	movff	?___aldiv,__display_efficiency@panel
 19381  00E3AA  C061  F0CB         	movff	?___aldiv+1,__display_efficiency@panel+1
 19382  00E3AE  C062  F0CC         	movff	?___aldiv+2,__display_efficiency@panel+2
 19383  00E3B2  C063  F0CD         	movff	?___aldiv+3,__display_efficiency@panel+3
 19384                           
 19385                           ;display.c: 558: battery = (int32_t) os.output_voltage;
 19386  00E3B6  EE22  F027         	lfsr	2,_os+39	;volatile
 19387  00E3BA  CFDE F0CE          	movff	postinc2,__display_efficiency@battery
 19388  00E3BE  CFDD F0CF          	movff	postdec2,__display_efficiency@battery+1
 19389  00E3C2  0100               	movlb	0	; () banked
 19390  00E3C4  0E00               	movlw	0
 19391  00E3C6  BFCF               	btfsc	(__display_efficiency@battery+1)& (0+255),7,b
 19392  00E3C8  0EFF               	movlw	-1
 19393  00E3CA  6FD0               	movwf	(__display_efficiency@battery+2)& (0+255),b
 19394  00E3CC  6FD1               	movwf	(__display_efficiency@battery+3)& (0+255),b
 19395                           
 19396                           ; BSR set to: 0
 19397                           ;display.c: 559: battery *= os.output_current;
 19398  00E3CE  C0CE  F060         	movff	__display_efficiency@battery,___lmul@multiplier
 19399  00E3D2  C0CF  F061         	movff	__display_efficiency@battery+1,___lmul@multiplier+1
 19400  00E3D6  C0D0  F062         	movff	__display_efficiency@battery+2,___lmul@multiplier+2
 19401  00E3DA  C0D1  F063         	movff	__display_efficiency@battery+3,___lmul@multiplier+3
 19402  00E3DE  EE22  F032         	lfsr	2,_os+50	;volatile
 19403  00E3E2  CFDE F064          	movff	postinc2,___lmul@multiplicand
 19404  00E3E6  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 19405  00E3EA  0E00               	movlw	0
 19406  00E3EC  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 19407  00E3EE  0EFF               	movlw	-1
 19408  00E3F0  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19409  00E3F2  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19410  00E3F4  ECEB  F0BC         	call	___lmul	;wreg free
 19411  00E3F8  C060  F0CE         	movff	?___lmul,__display_efficiency@battery
 19412  00E3FC  C061  F0CF         	movff	?___lmul+1,__display_efficiency@battery+1
 19413  00E400  C062  F0D0         	movff	?___lmul+2,__display_efficiency@battery+2
 19414  00E404  C063  F0D1         	movff	?___lmul+3,__display_efficiency@battery+3
 19415                           
 19416                           ;display.c: 560: efficiency = battery / panel;
 19417  00E408  C0CA  F064         	movff	__display_efficiency@panel,___aldiv@divisor
 19418  00E40C  C0CB  F065         	movff	__display_efficiency@panel+1,___aldiv@divisor+1
 19419  00E410  C0CC  F066         	movff	__display_efficiency@panel+2,___aldiv@divisor+2
 19420  00E414  C0CD  F067         	movff	__display_efficiency@panel+3,___aldiv@divisor+3
 19421  00E418  C0CE  F060         	movff	__display_efficiency@battery,___aldiv@dividend
 19422  00E41C  C0CF  F061         	movff	__display_efficiency@battery+1,___aldiv@dividend+1
 19423  00E420  C0D0  F062         	movff	__display_efficiency@battery+2,___aldiv@dividend+2
 19424  00E424  C0D1  F063         	movff	__display_efficiency@battery+3,___aldiv@dividend+3
 19425  00E428  EC4E  F0A7         	call	___aldiv	;wreg free
 19426  00E42C  C060  F06E         	movff	?___aldiv,___xxtofl@val
 19427  00E430  C061  F06F         	movff	?___aldiv+1,___xxtofl@val+1
 19428  00E434  C062  F070         	movff	?___aldiv+2,___xxtofl@val+2
 19429  00E438  C063  F071         	movff	?___aldiv+3,___xxtofl@val+3
 19430  00E43C  0E01               	movlw	1
 19431  00E43E  ECCD  F092         	call	___xxtofl
 19432  00E442  C06E  F0C6         	movff	?___xxtofl,__display_efficiency@efficiency
 19433  00E446  C06F  F0C7         	movff	?___xxtofl+1,__display_efficiency@efficiency+1
 19434  00E44A  C070  F0C8         	movff	?___xxtofl+2,__display_efficiency@efficiency+2
 19435  00E44E  C071  F0C9         	movff	?___xxtofl+3,__display_efficiency@efficiency+3
 19436                           
 19437                           ;display.c: 561: battery /= 1000;
 19438  00E452  C0CE  F060         	movff	__display_efficiency@battery,___aldiv@dividend
 19439  00E456  C0CF  F061         	movff	__display_efficiency@battery+1,___aldiv@dividend+1
 19440  00E45A  C0D0  F062         	movff	__display_efficiency@battery+2,___aldiv@dividend+2
 19441  00E45E  C0D1  F063         	movff	__display_efficiency@battery+3,___aldiv@dividend+3
 19442  00E462  0EE8               	movlw	232
 19443  00E464  0100               	movlb	0	; () banked
 19444  00E466  6F64               	movwf	___aldiv@divisor& (0+255),b
 19445  00E468  0E03               	movlw	3
 19446  00E46A  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 19447  00E46C  0E00               	movlw	0
 19448  00E46E  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 19449  00E470  0E00               	movlw	0
 19450  00E472  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 19451  00E474  EC4E  F0A7         	call	___aldiv	;wreg free
 19452  00E478  C060  F0CE         	movff	?___aldiv,__display_efficiency@battery
 19453  00E47C  C061  F0CF         	movff	?___aldiv+1,__display_efficiency@battery+1
 19454  00E480  C062  F0D0         	movff	?___aldiv+2,__display_efficiency@battery+2
 19455  00E484  C063  F0D1         	movff	?___aldiv+3,__display_efficiency@battery+3
 19456                           
 19457                           ;display.c: 563: cntr = 0;
 19458  00E488  0E00               	movlw	0
 19459  00E48A  0100               	movlb	0	; () banked
 19460  00E48C  6FD2               	movwf	__display_efficiency@cntr& (0+255),b
 19461                           
 19462                           ;display.c: 564: while(header[cntr])
 19463  00E48E  D013               	goto	l2005
 19464  00E490                     
 19465                           ; BSR set to: 0
 19466                           ;display.c: 565: display_content[0][cntr] = header[cntr++];
 19467                           
 19468                           ; BSR set to: 0
 19469  00E490  51D2               	movf	__display_efficiency@cntr& (0+255),w,b
 19470  00E492  0D01               	mullw	1
 19471  00E494  0E92               	movlw	low __display_efficiency@header
 19472  00E496  24F3               	addwf	prodl,w,c
 19473  00E498  6ED9               	movwf	fsr2l,c
 19474  00E49A  0E00               	movlw	high __display_efficiency@header
 19475  00E49C  20F4               	addwfc	prodh,w,c
 19476  00E49E  6EDA               	movwf	fsr2h,c
 19477  00E4A0  51D2               	movf	__display_efficiency@cntr& (0+255),w,b
 19478  00E4A2  0D01               	mullw	1
 19479  00E4A4  0E6C               	movlw	low _display_content
 19480  00E4A6  24F3               	addwf	prodl,w,c
 19481  00E4A8  6EE1               	movwf	fsr1l,c
 19482  00E4AA  0E03               	movlw	high _display_content
 19483  00E4AC  20F4               	addwfc	prodh,w,c
 19484  00E4AE  6EE2               	movwf	fsr1h,c
 19485  00E4B0  CFDF FFE7          	movff	indf2,indf1
 19486                           
 19487                           ; BSR set to: 0
 19488  00E4B4  2BD2               	incf	__display_efficiency@cntr& (0+255),f,b
 19489  00E4B6                     l2005:
 19490                           
 19491                           ; BSR set to: 0
 19492                           
 19493                           ; BSR set to: 0
 19494  00E4B6  51D2               	movf	__display_efficiency@cntr& (0+255),w,b
 19495  00E4B8  0D01               	mullw	1
 19496  00E4BA  0E92               	movlw	low __display_efficiency@header
 19497  00E4BC  24F3               	addwf	prodl,w,c
 19498  00E4BE  6ED9               	movwf	fsr2l,c
 19499  00E4C0  0E00               	movlw	high __display_efficiency@header
 19500  00E4C2  20F4               	addwfc	prodh,w,c
 19501  00E4C4  6EDA               	movwf	fsr2h,c
 19502  00E4C6  50DF               	movf	indf2,w,c
 19503  00E4C8  A4D8               	btfss	status,2,c
 19504  00E4CA  D7E2               	goto	l2006
 19505                           
 19506                           ; BSR set to: 0
 19507                           ;display.c: 567: cntr = 0;
 19508                           
 19509                           ; BSR set to: 0
 19510  00E4CC  0E00               	movlw	0
 19511  00E4CE  6FD2               	movwf	__display_efficiency@cntr& (0+255),b
 19512                           
 19513                           ;display.c: 568: while(source[cntr])
 19514  00E4D0  D013               	goto	l2008
 19515  00E4D2                     
 19516                           ; BSR set to: 0
 19517                           ;display.c: 569: display_content[1][cntr] = source[cntr++];
 19518                           
 19519                           ; BSR set to: 0
 19520  00E4D2  51D2               	movf	__display_efficiency@cntr& (0+255),w,b
 19521  00E4D4  0D01               	mullw	1
 19522  00E4D6  0EA5               	movlw	low __display_efficiency@source
 19523  00E4D8  24F3               	addwf	prodl,w,c
 19524  00E4DA  6ED9               	movwf	fsr2l,c
 19525  00E4DC  0E00               	movlw	high __display_efficiency@source
 19526  00E4DE  20F4               	addwfc	prodh,w,c
 19527  00E4E0  6EDA               	movwf	fsr2h,c
 19528  00E4E2  51D2               	movf	__display_efficiency@cntr& (0+255),w,b
 19529  00E4E4  0D01               	mullw	1
 19530  00E4E6  0E80               	movlw	low (_display_content+20)
 19531  00E4E8  24F3               	addwf	prodl,w,c
 19532  00E4EA  6EE1               	movwf	fsr1l,c
 19533  00E4EC  0E03               	movlw	high (_display_content+20)
 19534  00E4EE  20F4               	addwfc	prodh,w,c
 19535  00E4F0  6EE2               	movwf	fsr1h,c
 19536  00E4F2  CFDF FFE7          	movff	indf2,indf1
 19537                           
 19538                           ; BSR set to: 0
 19539  00E4F6  2BD2               	incf	__display_efficiency@cntr& (0+255),f,b
 19540  00E4F8                     l2008:
 19541                           
 19542                           ; BSR set to: 0
 19543                           
 19544                           ; BSR set to: 0
 19545  00E4F8  51D2               	movf	__display_efficiency@cntr& (0+255),w,b
 19546  00E4FA  0D01               	mullw	1
 19547  00E4FC  0EA5               	movlw	low __display_efficiency@source
 19548  00E4FE  24F3               	addwf	prodl,w,c
 19549  00E500  6ED9               	movwf	fsr2l,c
 19550  00E502  0E00               	movlw	high __display_efficiency@source
 19551  00E504  20F4               	addwfc	prodh,w,c
 19552  00E506  6EDA               	movwf	fsr2h,c
 19553  00E508  50DF               	movf	indf2,w,c
 19554  00E50A  A4D8               	btfss	status,2,c
 19555  00E50C  D7E2               	goto	l2009
 19556                           
 19557                           ; BSR set to: 0
 19558                           ;display.c: 571: _display_itoa((int16_t) panel, 3, &display_content[2][0]);
 19559                           
 19560                           ; BSR set to: 0
 19561  00E50E  C0CA  F078         	movff	__display_efficiency@panel,__display_itoa@value
 19562  00E512  C0CB  F079         	movff	__display_efficiency@panel+1,__display_itoa@value+1
 19563  00E516  0E03               	movlw	3
 19564  00E518  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 19565  00E51A  0E94               	movlw	low (_display_content+40)
 19566  00E51C  6F7B               	movwf	__display_itoa@text& (0+255),b
 19567  00E51E  0E03               	movlw	high (_display_content+40)
 19568  00E520  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 19569  00E522  EC51  F083         	call	__display_itoa	;wreg free
 19570                           
 19571                           ;display.c: 572: _display_itoa((int16_t) battery, 3, &display_content[2][10]);
 19572  00E526  C0CE  F078         	movff	__display_efficiency@battery,__display_itoa@value
 19573  00E52A  C0CF  F079         	movff	__display_efficiency@battery+1,__display_itoa@value+1
 19574  00E52E  0E03               	movlw	3
 19575  00E530  0100               	movlb	0	; () banked
 19576  00E532  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 19577  00E534  0E9E               	movlw	low (_display_content+50)
 19578  00E536  6F7B               	movwf	__display_itoa@text& (0+255),b
 19579  00E538  0E03               	movlw	high (_display_content+50)
 19580  00E53A  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 19581  00E53C  EC51  F083         	call	__display_itoa	;wreg free
 19582                           
 19583                           ;display.c: 574: cntr = 0;
 19584  00E540  0E00               	movlw	0
 19585  00E542  0100               	movlb	0	; () banked
 19586  00E544  6FD2               	movwf	__display_efficiency@cntr& (0+255),b
 19587                           
 19588                           ;display.c: 575: while(footer[cntr])
 19589  00E546  D013               	goto	l2011
 19590  00E548                     
 19591                           ; BSR set to: 0
 19592                           ;display.c: 576: display_content[3][cntr] = footer[cntr++];
 19593                           
 19594                           ; BSR set to: 0
 19595  00E548  51D2               	movf	__display_efficiency@cntr& (0+255),w,b
 19596  00E54A  0D01               	mullw	1
 19597  00E54C  0EB8               	movlw	low __display_efficiency@footer
 19598  00E54E  24F3               	addwf	prodl,w,c
 19599  00E550  6ED9               	movwf	fsr2l,c
 19600  00E552  0E00               	movlw	high __display_efficiency@footer
 19601  00E554  20F4               	addwfc	prodh,w,c
 19602  00E556  6EDA               	movwf	fsr2h,c
 19603  00E558  51D2               	movf	__display_efficiency@cntr& (0+255),w,b
 19604  00E55A  0D01               	mullw	1
 19605  00E55C  0EA8               	movlw	low (_display_content+60)
 19606  00E55E  24F3               	addwf	prodl,w,c
 19607  00E560  6EE1               	movwf	fsr1l,c
 19608  00E562  0E03               	movlw	high (_display_content+60)
 19609  00E564  20F4               	addwfc	prodh,w,c
 19610  00E566  6EE2               	movwf	fsr1h,c
 19611  00E568  CFDF FFE7          	movff	indf2,indf1
 19612                           
 19613                           ; BSR set to: 0
 19614  00E56C  2BD2               	incf	__display_efficiency@cntr& (0+255),f,b
 19615  00E56E                     l2011:
 19616                           
 19617                           ; BSR set to: 0
 19618                           
 19619                           ; BSR set to: 0
 19620  00E56E  51D2               	movf	__display_efficiency@cntr& (0+255),w,b
 19621  00E570  0D01               	mullw	1
 19622  00E572  0EB8               	movlw	low __display_efficiency@footer
 19623  00E574  24F3               	addwf	prodl,w,c
 19624  00E576  6ED9               	movwf	fsr2l,c
 19625  00E578  0E00               	movlw	high __display_efficiency@footer
 19626  00E57A  20F4               	addwfc	prodh,w,c
 19627  00E57C  6EDA               	movwf	fsr2h,c
 19628  00E57E  50DF               	movf	indf2,w,c
 19629  00E580  A4D8               	btfss	status,2,c
 19630  00E582  D7E2               	goto	l2012
 19631                           
 19632                           ; BSR set to: 0
 19633                           ;display.c: 578: _display_itoa((int16_t) efficiency, 1, &display_content[3][3]);
 19634                           
 19635                           ; BSR set to: 0
 19636  00E584  C0C6  F060         	movff	__display_efficiency@efficiency,___fltol@f1
 19637  00E588  C0C7  F061         	movff	__display_efficiency@efficiency+1,___fltol@f1+1
 19638  00E58C  C0C8  F062         	movff	__display_efficiency@efficiency+2,___fltol@f1+2
 19639  00E590  C0C9  F063         	movff	__display_efficiency@efficiency+3,___fltol@f1+3
 19640  00E594  ECF4  F0A3         	call	___fltol	;wreg free
 19641  00E598  C060  F078         	movff	?___fltol,__display_itoa@value
 19642  00E59C  C061  F079         	movff	?___fltol+1,__display_itoa@value+1
 19643  00E5A0  0E01               	movlw	1
 19644  00E5A2  0100               	movlb	0	; () banked
 19645  00E5A4  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 19646  00E5A6  0EAB               	movlw	low (_display_content+63)
 19647  00E5A8  6F7B               	movwf	__display_itoa@text& (0+255),b
 19648  00E5AA  0E03               	movlw	high (_display_content+63)
 19649  00E5AC  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 19650  00E5AE  EC51  F083         	call	__display_itoa	;wreg free
 19651                           
 19652                           ;display.c: 579: _display_itoa((int16_t) (panel-battery), 3, &display_content[3][14]);
 19653  00E5B2  C0CE  F090         	movff	__display_efficiency@battery,??__display_efficiency
 19654  00E5B6  C0CF  F091         	movff	__display_efficiency@battery+1,??__display_efficiency+1
 19655  00E5BA  0100               	movlb	0	; () banked
 19656  00E5BC  1F90               	comf	??__display_efficiency& (0+255),f,b
 19657  00E5BE  1F91               	comf	(??__display_efficiency+1)& (0+255),f,b
 19658  00E5C0  4B90               	infsnz	??__display_efficiency& (0+255),f,b
 19659  00E5C2  2B91               	incf	(??__display_efficiency+1)& (0+255),f,b
 19660  00E5C4  51CA               	movf	__display_efficiency@panel& (0+255),w,b
 19661  00E5C6  2590               	addwf	??__display_efficiency& (0+255),w,b
 19662  00E5C8  6F78               	movwf	__display_itoa@value& (0+255),b
 19663  00E5CA  51CB               	movf	(__display_efficiency@panel+1)& (0+255),w,b
 19664  00E5CC  2191               	addwfc	(??__display_efficiency+1)& (0+255),w,b
 19665  00E5CE  6F79               	movwf	(__display_itoa@value+1)& (0+255),b
 19666  00E5D0  0E03               	movlw	3
 19667  00E5D2  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 19668  00E5D4  0EB6               	movlw	low (_display_content+74)
 19669  00E5D6  6F7B               	movwf	__display_itoa@text& (0+255),b
 19670  00E5D8  0E03               	movlw	high (_display_content+74)
 19671  00E5DA  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 19672  00E5DC  EC51  F083         	call	__display_itoa	;wreg free
 19673  00E5E0  0012               	return		;funcret
 19674  00E5E2                     __end_of__display_efficiency:
 19675                           	opt stack 0
 19676                           tblptru	equ	0xFF8
 19677                           tblptrh	equ	0xFF7
 19678                           tblptrl	equ	0xFF6
 19679                           tablat	equ	0xFF5
 19680                           prodh	equ	0xFF4
 19681                           prodl	equ	0xFF3
 19682                           intcon	equ	0xFF2
 19683                           intcon2	equ	0xFF1
 19684                           intcon3	equ	0xFF0
 19685                           postinc0	equ	0xFEE
 19686                           wreg	equ	0xFE8
 19687                           indf1	equ	0xFE7
 19688                           postdec1	equ	0xFE5
 19689                           plusw1	equ	0xFE3
 19690                           fsr1h	equ	0xFE2
 19691                           fsr1l	equ	0xFE1
 19692                           indf2	equ	0xFDF
 19693                           postinc2	equ	0xFDE
 19694                           postdec2	equ	0xFDD
 19695                           plusw2	equ	0xFDB
 19696                           fsr2h	equ	0xFDA
 19697                           fsr2l	equ	0xFD9
 19698                           status	equ	0xFD8
 19699                           
 19700 ;; *************** function ___xxtofl *****************
 19701 ;; Defined at:
 19702 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 19703 ;; Parameters:    Size  Location     Type
 19704 ;;  sign            1    wreg     unsigned char 
 19705 ;;  val             4   14[BANK0 ] long 
 19706 ;; Auto vars:     Size  Location     Type
 19707 ;;  sign            1   22[BANK0 ] unsigned char 
 19708 ;;  arg             4   24[BANK0 ] unsigned long 
 19709 ;;  exp             1   23[BANK0 ] unsigned char 
 19710 ;; Return value:  Size  Location     Type
 19711 ;;                  4   14[BANK0 ] unsigned char 
 19712 ;; Registers used:
 19713 ;;		wreg, status,2, status,0
 19714 ;; Tracked objects:
 19715 ;;		On entry : 0/0
 19716 ;;		On exit  : 0/0
 19717 ;;		Unchanged: 0/0
 19718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19719 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19720 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19721 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19722 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19723 ;;Total ram usage:       14 bytes
 19724 ;; Hardware stack levels used:    1
 19725 ;; Hardware stack levels required when called:   10
 19726 ;; This function calls:
 19727 ;;		Nothing
 19728 ;; This function is called by:
 19729 ;;		__display_efficiency
 19730 ;; This function uses a non-reentrant model
 19731 ;;
 19732                           
 19733                           	psect	text77
 19734  01259A                     __ptext77:
 19735                           	opt stack 0
 19736  01259A                     ___xxtofl:
 19737                           	opt stack 18
 19738                           
 19739                           ;incstack = 0
 19740                           ;___xxtofl@sign stored from wreg
 19741  01259A  0100               	movlb	0	; () banked
 19742  01259C  6F76               	movwf	___xxtofl@sign& (0+255),b
 19743  01259E  0100               	movlb	0	; () banked
 19744  0125A0  5176               	movf	___xxtofl@sign& (0+255),w,b
 19745  0125A2  A4D8               	btfss	status,2,c
 19746                           
 19747                           ; BSR set to: 0
 19748  0125A4  AF71               	btfss	(___xxtofl@val+3)& (0+255),7,b
 19749  0125A6  D01A               	goto	l4458
 19750                           
 19751                           ; BSR set to: 0
 19752  0125A8  C06E  F072         	movff	___xxtofl@val,??___xxtofl
 19753  0125AC  C06F  F073         	movff	___xxtofl@val+1,??___xxtofl+1
 19754  0125B0  C070  F074         	movff	___xxtofl@val+2,??___xxtofl+2
 19755  0125B4  C071  F075         	movff	___xxtofl@val+3,??___xxtofl+3
 19756  0125B8  1F72               	comf	??___xxtofl& (0+255),f,b
 19757  0125BA  1F73               	comf	(??___xxtofl+1)& (0+255),f,b
 19758  0125BC  1F74               	comf	(??___xxtofl+2)& (0+255),f,b
 19759  0125BE  1F75               	comf	(??___xxtofl+3)& (0+255),f,b
 19760  0125C0  2B72               	incf	??___xxtofl& (0+255),f,b
 19761  0125C2  0E00               	movlw	0
 19762  0125C4  2373               	addwfc	(??___xxtofl+1)& (0+255),f,b
 19763  0125C6  2374               	addwfc	(??___xxtofl+2)& (0+255),f,b
 19764  0125C8  2375               	addwfc	(??___xxtofl+3)& (0+255),f,b
 19765  0125CA  C072  F078         	movff	??___xxtofl,___xxtofl@arg
 19766  0125CE  C073  F079         	movff	??___xxtofl+1,___xxtofl@arg+1
 19767  0125D2  C074  F07A         	movff	??___xxtofl+2,___xxtofl@arg+2
 19768  0125D6  C075  F07B         	movff	??___xxtofl+3,___xxtofl@arg+3
 19769  0125DA  D008               	goto	l4459
 19770  0125DC                     l4458:
 19771                           
 19772                           ; BSR set to: 0
 19773  0125DC  C06E  F078         	movff	___xxtofl@val,___xxtofl@arg
 19774  0125E0  C06F  F079         	movff	___xxtofl@val+1,___xxtofl@arg+1
 19775  0125E4  C070  F07A         	movff	___xxtofl@val+2,___xxtofl@arg+2
 19776  0125E8  C071  F07B         	movff	___xxtofl@val+3,___xxtofl@arg+3
 19777  0125EC                     l4459:
 19778                           
 19779                           ; BSR set to: 0
 19780                           
 19781                           ; BSR set to: 0
 19782  0125EC  516E               	movf	___xxtofl@val& (0+255),w,b
 19783  0125EE  116F               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 19784  0125F0  1170               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 19785  0125F2  1171               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 19786  0125F4  A4D8               	btfss	status,2,c
 19787  0125F6  D009               	goto	l4460
 19788                           
 19789                           ; BSR set to: 0
 19790  0125F8  0E00               	movlw	0
 19791  0125FA  6F6E               	movwf	?___xxtofl& (0+255),b
 19792  0125FC  0E00               	movlw	0
 19793  0125FE  6F6F               	movwf	(?___xxtofl+1)& (0+255),b
 19794  012600  0E00               	movlw	0
 19795  012602  6F70               	movwf	(?___xxtofl+2)& (0+255),b
 19796  012604  0E00               	movlw	0
 19797  012606  6F71               	movwf	(?___xxtofl+3)& (0+255),b
 19798                           
 19799                           ; BSR set to: 0
 19800  012608  0012               	return	
 19801  01260A                     l4460:
 19802                           
 19803                           ; BSR set to: 0
 19804                           
 19805                           ; BSR set to: 0
 19806  01260A  0E96               	movlw	150
 19807  01260C  6F77               	movwf	___xxtofl@exp& (0+255),b
 19808  01260E  D006               	goto	l4462
 19809  012610                     
 19810                           ; BSR set to: 0
 19811                           
 19812                           ; BSR set to: 0
 19813  012610  2B77               	incf	___xxtofl@exp& (0+255),f,b
 19814  012612  90D8               	bcf	status,0,c
 19815  012614  337B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 19816  012616  337A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 19817  012618  3379               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 19818  01261A  3378               	rrcf	___xxtofl@arg& (0+255),f,b
 19819  01261C                     l4462:
 19820                           
 19821                           ; BSR set to: 0
 19822                           
 19823                           ; BSR set to: 0
 19824  01261C  0E00               	movlw	0
 19825  01261E  1578               	andwf	___xxtofl@arg& (0+255),w,b
 19826  012620  6F72               	movwf	??___xxtofl& (0+255),b
 19827  012622  0E00               	movlw	0
 19828  012624  1579               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 19829  012626  6F73               	movwf	(??___xxtofl+1)& (0+255),b
 19830  012628  0E00               	movlw	0
 19831  01262A  157A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 19832  01262C  6F74               	movwf	(??___xxtofl+2)& (0+255),b
 19833  01262E  0EFE               	movlw	254
 19834  012630  157B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 19835  012632  6F75               	movwf	(??___xxtofl+3)& (0+255),b
 19836  012634  5172               	movf	??___xxtofl& (0+255),w,b
 19837  012636  1173               	iorwf	(??___xxtofl+1)& (0+255),w,b
 19838  012638  1174               	iorwf	(??___xxtofl+2)& (0+255),w,b
 19839  01263A  1175               	iorwf	(??___xxtofl+3)& (0+255),w,b
 19840  01263C  B4D8               	btfsc	status,2,c
 19841  01263E  D00D               	goto	l4465
 19842  012640  D7E7               	goto	l4463
 19843  012642                     
 19844                           ; BSR set to: 0
 19845                           
 19846                           ; BSR set to: 0
 19847  012642  2B77               	incf	___xxtofl@exp& (0+255),f,b
 19848                           
 19849                           ; BSR set to: 0
 19850  012644  0E01               	movlw	1
 19851  012646  2778               	addwf	___xxtofl@arg& (0+255),f,b
 19852  012648  0E00               	movlw	0
 19853  01264A  2379               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 19854  01264C  237A               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 19855  01264E  237B               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 19856                           
 19857                           ; BSR set to: 0
 19858  012650  90D8               	bcf	status,0,c
 19859  012652  337B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 19860  012654  337A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 19861  012656  3379               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 19862  012658  3378               	rrcf	___xxtofl@arg& (0+255),f,b
 19863  01265A                     l4465:
 19864                           
 19865                           ; BSR set to: 0
 19866  01265A  0E00               	movlw	0
 19867  01265C  1578               	andwf	___xxtofl@arg& (0+255),w,b
 19868  01265E  6F72               	movwf	??___xxtofl& (0+255),b
 19869  012660  0E00               	movlw	0
 19870  012662  1579               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 19871  012664  6F73               	movwf	(??___xxtofl+1)& (0+255),b
 19872  012666  0E00               	movlw	0
 19873  012668  157A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 19874  01266A  6F74               	movwf	(??___xxtofl+2)& (0+255),b
 19875  01266C  0EFF               	movlw	255
 19876  01266E  157B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 19877  012670  6F75               	movwf	(??___xxtofl+3)& (0+255),b
 19878  012672  5172               	movf	??___xxtofl& (0+255),w,b
 19879  012674  1173               	iorwf	(??___xxtofl+1)& (0+255),w,b
 19880  012676  1174               	iorwf	(??___xxtofl+2)& (0+255),w,b
 19881  012678  1175               	iorwf	(??___xxtofl+3)& (0+255),w,b
 19882  01267A  B4D8               	btfsc	status,2,c
 19883  01267C  D007               	goto	l4468
 19884  01267E  D7E1               	goto	l4466
 19885  012680                     
 19886                           ; BSR set to: 0
 19887                           
 19888                           ; BSR set to: 0
 19889  012680  0777               	decf	___xxtofl@exp& (0+255),f,b
 19890  012682  90D8               	bcf	status,0,c
 19891  012684  3778               	rlcf	___xxtofl@arg& (0+255),f,b
 19892  012686  3779               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 19893  012688  377A               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 19894  01268A  377B               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 19895  01268C                     l4468:
 19896                           
 19897                           ; BSR set to: 0
 19898                           
 19899                           ; BSR set to: 0
 19900  01268C  BF7A               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 19901  01268E  D003               	goto	u24540
 19902                           
 19903                           ; BSR set to: 0
 19904  012690  0E02               	movlw	2
 19905  012692  6177               	cpfslt	___xxtofl@exp& (0+255),b
 19906  012694  D7F5               	goto	l4469
 19907  012696                     u24540:
 19908                           
 19909                           ; BSR set to: 0
 19910                           
 19911                           ; BSR set to: 0
 19912  012696  A177               	btfss	___xxtofl@exp& (0+255),0,b
 19913                           
 19914                           ; BSR set to: 0
 19915  012698  9F7A               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 19916                           
 19917                           ; BSR set to: 0
 19918                           
 19919                           ; BSR set to: 0
 19920  01269A  90D8               	bcf	status,0,c
 19921  01269C  3377               	rrcf	___xxtofl@exp& (0+255),f,b
 19922                           
 19923                           ; BSR set to: 0
 19924  01269E  C077  F072         	movff	___xxtofl@exp,??___xxtofl
 19925  0126A2  6B73               	clrf	(??___xxtofl+1)& (0+255),b
 19926  0126A4  6B74               	clrf	(??___xxtofl+2)& (0+255),b
 19927  0126A6  6B75               	clrf	(??___xxtofl+3)& (0+255),b
 19928  0126A8  C072  F075         	movff	??___xxtofl,??___xxtofl+3
 19929  0126AC  6B74               	clrf	(??___xxtofl+2)& (0+255),b
 19930  0126AE  6B73               	clrf	(??___xxtofl+1)& (0+255),b
 19931  0126B0  6B72               	clrf	??___xxtofl& (0+255),b
 19932  0126B2  5172               	movf	??___xxtofl& (0+255),w,b
 19933  0126B4  1378               	iorwf	___xxtofl@arg& (0+255),f,b
 19934  0126B6  5173               	movf	(??___xxtofl+1)& (0+255),w,b
 19935  0126B8  1379               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 19936  0126BA  5174               	movf	(??___xxtofl+2)& (0+255),w,b
 19937  0126BC  137A               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 19938  0126BE  5175               	movf	(??___xxtofl+3)& (0+255),w,b
 19939  0126C0  137B               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 19940                           
 19941                           ; BSR set to: 0
 19942  0126C2  5176               	movf	___xxtofl@sign& (0+255),w,b
 19943  0126C4  A4D8               	btfss	status,2,c
 19944                           
 19945                           ; BSR set to: 0
 19946  0126C6  AF71               	btfss	(___xxtofl@val+3)& (0+255),7,b
 19947  0126C8  D001               	goto	l4474
 19948                           
 19949                           ; BSR set to: 0
 19950  0126CA  8F7B               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 19951  0126CC                     l4474:
 19952                           
 19953                           ; BSR set to: 0
 19954                           
 19955                           ; BSR set to: 0
 19956  0126CC  C078  F06E         	movff	___xxtofl@arg,?___xxtofl
 19957  0126D0  C079  F06F         	movff	___xxtofl@arg+1,?___xxtofl+1
 19958  0126D4  C07A  F070         	movff	___xxtofl@arg+2,?___xxtofl+2
 19959  0126D8  C07B  F071         	movff	___xxtofl@arg+3,?___xxtofl+3
 19960  0126DC  0012               	return	
 19961  0126DE                     __end_of___xxtofl:
 19962                           	opt stack 0
 19963                           tblptru	equ	0xFF8
 19964                           tblptrh	equ	0xFF7
 19965                           tblptrl	equ	0xFF6
 19966                           tablat	equ	0xFF5
 19967                           prodh	equ	0xFF4
 19968                           prodl	equ	0xFF3
 19969                           intcon	equ	0xFF2
 19970                           intcon2	equ	0xFF1
 19971                           intcon3	equ	0xFF0
 19972                           postinc0	equ	0xFEE
 19973                           wreg	equ	0xFE8
 19974                           indf1	equ	0xFE7
 19975                           postdec1	equ	0xFE5
 19976                           plusw1	equ	0xFE3
 19977                           fsr1h	equ	0xFE2
 19978                           fsr1l	equ	0xFE1
 19979                           indf2	equ	0xFDF
 19980                           postinc2	equ	0xFDE
 19981                           postdec2	equ	0xFDD
 19982                           plusw2	equ	0xFDB
 19983                           fsr2h	equ	0xFDA
 19984                           fsr2l	equ	0xFD9
 19985                           status	equ	0xFD8
 19986                           
 19987 ;; *************** function ___fltol *****************
 19988 ;; Defined at:
 19989 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 19990 ;; Parameters:    Size  Location     Type
 19991 ;;  f1              4    0[BANK0 ] unsigned char 
 19992 ;; Auto vars:     Size  Location     Type
 19993 ;;  exp1            1    9[BANK0 ] unsigned char 
 19994 ;;  sign1           1    8[BANK0 ] unsigned char 
 19995 ;; Return value:  Size  Location     Type
 19996 ;;                  4    0[BANK0 ] long 
 19997 ;; Registers used:
 19998 ;;		wreg, status,2, status,0
 19999 ;; Tracked objects:
 20000 ;;		On entry : 0/0
 20001 ;;		On exit  : 0/0
 20002 ;;		Unchanged: 0/0
 20003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20004 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20005 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20006 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20007 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20008 ;;Total ram usage:       10 bytes
 20009 ;; Hardware stack levels used:    1
 20010 ;; Hardware stack levels required when called:   10
 20011 ;; This function calls:
 20012 ;;		Nothing
 20013 ;; This function is called by:
 20014 ;;		__display_efficiency
 20015 ;; This function uses a non-reentrant model
 20016 ;;
 20017                           
 20018                           	psect	text78
 20019  0147E8                     __ptext78:
 20020                           	opt stack 0
 20021  0147E8                     ___fltol:
 20022                           	opt stack 18
 20023                           
 20024                           ; BSR set to: 0
 20025                           ;incstack = 0
 20026  0147E8  0100               	movlb	0	; () banked
 20027  0147EA  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 20028  0147EC  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 20029  0147EE  6F69               	movwf	___fltol@exp1& (0+255),b
 20030  0147F0  5169               	movf	___fltol@exp1& (0+255),w,b
 20031  0147F2  A4D8               	btfss	status,2,c
 20032  0147F4  D009               	goto	l4103
 20033                           
 20034                           ; BSR set to: 0
 20035  0147F6  0E00               	movlw	0
 20036  0147F8  6F60               	movwf	?___fltol& (0+255),b
 20037  0147FA  0E00               	movlw	0
 20038  0147FC  6F61               	movwf	(?___fltol+1)& (0+255),b
 20039  0147FE  0E00               	movlw	0
 20040  014800  6F62               	movwf	(?___fltol+2)& (0+255),b
 20041  014802  0E00               	movlw	0
 20042  014804  6F63               	movwf	(?___fltol+3)& (0+255),b
 20043                           
 20044                           ; BSR set to: 0
 20045  014806  0012               	return	
 20046  014808                     l4103:
 20047                           
 20048                           ; BSR set to: 0
 20049                           
 20050                           ; BSR set to: 0
 20051  014808  C060  F064         	movff	___fltol@f1,??___fltol
 20052  01480C  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 20053  014810  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 20054  014814  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 20055  014818  0E20               	movlw	32
 20056  01481A  D005               	goto	u24420
 20057  01481C                     u24425:
 20058  01481C  90D8               	bcf	status,0,c
 20059  01481E  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 20060  014820  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 20061  014822  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 20062  014824  3364               	rrcf	??___fltol& (0+255),f,b
 20063  014826                     u24420:
 20064  014826  2EE8               	decfsz	wreg,f,c
 20065  014828  D7F9               	goto	u24425
 20066  01482A  5164               	movf	??___fltol& (0+255),w,b
 20067  01482C  6F68               	movwf	___fltol@sign1& (0+255),b
 20068                           
 20069                           ; BSR set to: 0
 20070  01482E  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 20071                           
 20072                           ; BSR set to: 0
 20073  014830  0EFF               	movlw	255
 20074  014832  1760               	andwf	___fltol@f1& (0+255),f,b
 20075  014834  0EFF               	movlw	255
 20076  014836  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 20077  014838  0EFF               	movlw	255
 20078  01483A  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 20079  01483C  0E00               	movlw	0
 20080  01483E  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 20081                           
 20082                           ; BSR set to: 0
 20083  014840  0E96               	movlw	150
 20084  014842  5F69               	subwf	___fltol@exp1& (0+255),f,b
 20085                           
 20086                           ; BSR set to: 0
 20087  014844  AF69               	btfss	___fltol@exp1& (0+255),7,b
 20088  014846  D016               	goto	l4105
 20089                           
 20090                           ; BSR set to: 0
 20091  014848  5169               	movf	___fltol@exp1& (0+255),w,b
 20092  01484A  0A80               	xorlw	128
 20093  01484C  0F97               	addlw	151
 20094  01484E  B0D8               	btfsc	status,0,c
 20095  014850  D009               	goto	l4106
 20096                           
 20097                           ; BSR set to: 0
 20098  014852  0E00               	movlw	0
 20099  014854  6F60               	movwf	?___fltol& (0+255),b
 20100  014856  0E00               	movlw	0
 20101  014858  6F61               	movwf	(?___fltol+1)& (0+255),b
 20102  01485A  0E00               	movlw	0
 20103  01485C  6F62               	movwf	(?___fltol+2)& (0+255),b
 20104  01485E  0E00               	movlw	0
 20105  014860  6F63               	movwf	(?___fltol+3)& (0+255),b
 20106                           
 20107                           ; BSR set to: 0
 20108  014862  0012               	return	
 20109  014864                     l4106:
 20110                           
 20111                           ; BSR set to: 0
 20112                           
 20113                           ; BSR set to: 0
 20114                           
 20115                           ; BSR set to: 0
 20116  014864  90D8               	bcf	status,0,c
 20117  014866  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 20118  014868  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 20119  01486A  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 20120  01486C  3360               	rrcf	___fltol@f1& (0+255),f,b
 20121                           
 20122                           ; BSR set to: 0
 20123  01486E  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 20124  014870  D7F9               	goto	l4106
 20125                           
 20126                           ; BSR set to: 0
 20127  014872  D015               	goto	u24460
 20128  014874                     l4105:
 20129                           
 20130                           ; BSR set to: 0
 20131                           
 20132                           ; BSR set to: 0
 20133  014874  0E1F               	movlw	31
 20134  014876  6569               	cpfsgt	___fltol@exp1& (0+255),b
 20135  014878  D00F               	goto	l4111
 20136                           
 20137                           ; BSR set to: 0
 20138  01487A  0E00               	movlw	0
 20139  01487C  6F60               	movwf	?___fltol& (0+255),b
 20140  01487E  0E00               	movlw	0
 20141  014880  6F61               	movwf	(?___fltol+1)& (0+255),b
 20142  014882  0E00               	movlw	0
 20143  014884  6F62               	movwf	(?___fltol+2)& (0+255),b
 20144  014886  0E00               	movlw	0
 20145  014888  6F63               	movwf	(?___fltol+3)& (0+255),b
 20146                           
 20147                           ; BSR set to: 0
 20148  01488A  0012               	return	
 20149  01488C                     
 20150                           ; BSR set to: 0
 20151                           
 20152                           ; BSR set to: 0
 20153  01488C  90D8               	bcf	status,0,c
 20154  01488E  3760               	rlcf	___fltol@f1& (0+255),f,b
 20155  014890  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 20156  014892  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 20157  014894  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 20158  014896  0769               	decf	___fltol@exp1& (0+255),f,b
 20159  014898                     l4111:
 20160                           
 20161                           ; BSR set to: 0
 20162                           
 20163                           ; BSR set to: 0
 20164  014898  5169               	movf	___fltol@exp1& (0+255),w,b
 20165  01489A  A4D8               	btfss	status,2,c
 20166  01489C  D7F7               	goto	l4112
 20167  01489E                     u24460:
 20168                           
 20169                           ; BSR set to: 0
 20170                           
 20171                           ; BSR set to: 0
 20172                           
 20173                           ; BSR set to: 0
 20174  01489E  5168               	movf	___fltol@sign1& (0+255),w,b
 20175  0148A0  B4D8               	btfsc	status,2,c
 20176  0148A2  D008               	goto	l4114
 20177                           
 20178                           ; BSR set to: 0
 20179  0148A4  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 20180  0148A6  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 20181  0148A8  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 20182  0148AA  6D60               	negf	___fltol@f1& (0+255),b
 20183  0148AC  0E00               	movlw	0
 20184  0148AE  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 20185  0148B0  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 20186  0148B2  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 20187  0148B4                     l4114:
 20188                           
 20189                           ; BSR set to: 0
 20190                           
 20191                           ; BSR set to: 0
 20192  0148B4  C060  F060         	movff	___fltol@f1,?___fltol
 20193  0148B8  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 20194  0148BC  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 20195  0148C0  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 20196  0148C4  0012               	return	
 20197  0148C6                     __end_of___fltol:
 20198                           	opt stack 0
 20199                           tblptru	equ	0xFF8
 20200                           tblptrh	equ	0xFF7
 20201                           tblptrl	equ	0xFF6
 20202                           tablat	equ	0xFF5
 20203                           prodh	equ	0xFF4
 20204                           prodl	equ	0xFF3
 20205                           intcon	equ	0xFF2
 20206                           intcon2	equ	0xFF1
 20207                           intcon3	equ	0xFF0
 20208                           postinc0	equ	0xFEE
 20209                           wreg	equ	0xFE8
 20210                           indf1	equ	0xFE7
 20211                           postdec1	equ	0xFE5
 20212                           plusw1	equ	0xFE3
 20213                           fsr1h	equ	0xFE2
 20214                           fsr1l	equ	0xFE1
 20215                           indf2	equ	0xFDF
 20216                           postinc2	equ	0xFDE
 20217                           postdec2	equ	0xFDD
 20218                           plusw2	equ	0xFDB
 20219                           fsr2h	equ	0xFDA
 20220                           fsr2l	equ	0xFD9
 20221                           status	equ	0xFD8
 20222                           
 20223 ;; *************** function ___aldiv *****************
 20224 ;; Defined at:
 20225 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 20226 ;; Parameters:    Size  Location     Type
 20227 ;;  dividend        4    0[BANK0 ] long 
 20228 ;;  divisor         4    4[BANK0 ] long 
 20229 ;; Auto vars:     Size  Location     Type
 20230 ;;  quotient        4   10[BANK0 ] long 
 20231 ;;  sign            1    9[BANK0 ] unsigned char 
 20232 ;;  counter         1    8[BANK0 ] unsigned char 
 20233 ;; Return value:  Size  Location     Type
 20234 ;;                  4    0[BANK0 ] long 
 20235 ;; Registers used:
 20236 ;;		wreg, status,2, status,0
 20237 ;; Tracked objects:
 20238 ;;		On entry : 0/0
 20239 ;;		On exit  : 0/0
 20240 ;;		Unchanged: 0/0
 20241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20242 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20243 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20245 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20246 ;;Total ram usage:       14 bytes
 20247 ;; Hardware stack levels used:    1
 20248 ;; Hardware stack levels required when called:   10
 20249 ;; This function calls:
 20250 ;;		Nothing
 20251 ;; This function is called by:
 20252 ;;		__display_efficiency
 20253 ;;		__get_input_power
 20254 ;;		_log_generate_entry
 20255 ;; This function uses a non-reentrant model
 20256 ;;
 20257                           
 20258                           	psect	text79
 20259  014E9C                     __ptext79:
 20260                           	opt stack 0
 20261  014E9C                     ___aldiv:
 20262                           	opt stack 18
 20263                           
 20264                           ; BSR set to: 0
 20265                           ;incstack = 0
 20266  014E9C  0E00               	movlw	0
 20267  014E9E  0100               	movlb	0	; () banked
 20268  014EA0  6F69               	movwf	___aldiv@sign& (0+255),b
 20269                           
 20270                           ; BSR set to: 0
 20271  014EA2  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 20272  014EA4  D00A               	goto	l3884
 20273                           
 20274                           ; BSR set to: 0
 20275  014EA6  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 20276  014EA8  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 20277  014EAA  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 20278  014EAC  6D64               	negf	___aldiv@divisor& (0+255),b
 20279  014EAE  0E00               	movlw	0
 20280  014EB0  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 20281  014EB2  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 20282  014EB4  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 20283                           
 20284                           ; BSR set to: 0
 20285  014EB6  0E01               	movlw	1
 20286  014EB8  6F69               	movwf	___aldiv@sign& (0+255),b
 20287  014EBA                     l3884:
 20288                           
 20289                           ; BSR set to: 0
 20290                           
 20291                           ; BSR set to: 0
 20292  014EBA  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 20293  014EBC  D00A               	goto	l3885
 20294                           
 20295                           ; BSR set to: 0
 20296  014EBE  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 20297  014EC0  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 20298  014EC2  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 20299  014EC4  6D60               	negf	___aldiv@dividend& (0+255),b
 20300  014EC6  0E00               	movlw	0
 20301  014EC8  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 20302  014ECA  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 20303  014ECC  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 20304                           
 20305                           ; BSR set to: 0
 20306  014ECE  0E01               	movlw	1
 20307  014ED0  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 20308  014ED2                     l3885:
 20309                           
 20310                           ; BSR set to: 0
 20311                           
 20312                           ; BSR set to: 0
 20313  014ED2  0E00               	movlw	0
 20314  014ED4  6F6A               	movwf	___aldiv@quotient& (0+255),b
 20315  014ED6  0E00               	movlw	0
 20316  014ED8  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 20317  014EDA  0E00               	movlw	0
 20318  014EDC  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 20319  014EDE  0E00               	movlw	0
 20320  014EE0  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 20321                           
 20322                           ; BSR set to: 0
 20323  014EE2  5164               	movf	___aldiv@divisor& (0+255),w,b
 20324  014EE4  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 20325  014EE6  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 20326  014EE8  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 20327  014EEA  B4D8               	btfsc	status,2,c
 20328  014EEC  D02A               	goto	l3892
 20329                           
 20330                           ; BSR set to: 0
 20331  014EEE  0E01               	movlw	1
 20332  014EF0  6F68               	movwf	___aldiv@counter& (0+255),b
 20333  014EF2  D006               	goto	l3887
 20334  014EF4                     
 20335                           ; BSR set to: 0
 20336                           
 20337                           ; BSR set to: 0
 20338  014EF4  90D8               	bcf	status,0,c
 20339  014EF6  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 20340  014EF8  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 20341  014EFA  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 20342  014EFC  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 20343  014EFE  2B68               	incf	___aldiv@counter& (0+255),f,b
 20344  014F00                     l3887:
 20345                           
 20346                           ; BSR set to: 0
 20347                           
 20348                           ; BSR set to: 0
 20349  014F00  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 20350  014F02  D7F8               	goto	l3888
 20351  014F04                     u24380:
 20352                           
 20353                           ; BSR set to: 0
 20354                           
 20355                           ; BSR set to: 0
 20356                           
 20357                           ; BSR set to: 0
 20358  014F04  90D8               	bcf	status,0,c
 20359  014F06  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 20360  014F08  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 20361  014F0A  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 20362  014F0C  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 20363                           
 20364                           ; BSR set to: 0
 20365  014F0E  5164               	movf	___aldiv@divisor& (0+255),w,b
 20366  014F10  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 20367  014F12  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 20368  014F14  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 20369  014F16  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 20370  014F18  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 20371  014F1A  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 20372  014F1C  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 20373  014F1E  A0D8               	btfss	status,0,c
 20374  014F20  D009               	goto	l3891
 20375                           
 20376                           ; BSR set to: 0
 20377  014F22  5164               	movf	___aldiv@divisor& (0+255),w,b
 20378  014F24  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 20379  014F26  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 20380  014F28  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 20381  014F2A  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 20382  014F2C  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 20383  014F2E  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 20384  014F30  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 20385                           
 20386                           ; BSR set to: 0
 20387  014F32  816A               	bsf	___aldiv@quotient& (0+255),0,b
 20388  014F34                     l3891:
 20389                           
 20390                           ; BSR set to: 0
 20391                           
 20392                           ; BSR set to: 0
 20393  014F34  90D8               	bcf	status,0,c
 20394  014F36  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 20395  014F38  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 20396  014F3A  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 20397  014F3C  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 20398                           
 20399                           ; BSR set to: 0
 20400  014F3E  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 20401  014F40  D7E1               	goto	u24380
 20402  014F42                     l3892:
 20403                           
 20404                           ; BSR set to: 0
 20405                           
 20406                           ; BSR set to: 0
 20407                           
 20408                           ; BSR set to: 0
 20409  014F42  5169               	movf	___aldiv@sign& (0+255),w,b
 20410  014F44  B4D8               	btfsc	status,2,c
 20411  014F46  D008               	goto	l3893
 20412                           
 20413                           ; BSR set to: 0
 20414  014F48  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 20415  014F4A  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 20416  014F4C  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 20417  014F4E  6D6A               	negf	___aldiv@quotient& (0+255),b
 20418  014F50  0E00               	movlw	0
 20419  014F52  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 20420  014F54  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 20421  014F56  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 20422  014F58                     l3893:
 20423                           
 20424                           ; BSR set to: 0
 20425                           
 20426                           ; BSR set to: 0
 20427  014F58  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 20428  014F5C  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 20429  014F60  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 20430  014F64  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 20431  014F68  0012               	return	
 20432  014F6A                     __end_of___aldiv:
 20433                           	opt stack 0
 20434                           tblptru	equ	0xFF8
 20435                           tblptrh	equ	0xFF7
 20436                           tblptrl	equ	0xFF6
 20437                           tablat	equ	0xFF5
 20438                           prodh	equ	0xFF4
 20439                           prodl	equ	0xFF3
 20440                           intcon	equ	0xFF2
 20441                           intcon2	equ	0xFF1
 20442                           intcon3	equ	0xFF0
 20443                           postinc0	equ	0xFEE
 20444                           wreg	equ	0xFE8
 20445                           indf1	equ	0xFE7
 20446                           postdec1	equ	0xFE5
 20447                           plusw1	equ	0xFE3
 20448                           fsr1h	equ	0xFE2
 20449                           fsr1l	equ	0xFE1
 20450                           indf2	equ	0xFDF
 20451                           postinc2	equ	0xFDE
 20452                           postdec2	equ	0xFDD
 20453                           plusw2	equ	0xFDB
 20454                           fsr2h	equ	0xFDA
 20455                           fsr2l	equ	0xFD9
 20456                           status	equ	0xFD8
 20457                           
 20458 ;; *************** function __display_clear *****************
 20459 ;; Defined at:
 20460 ;;		line 32 in file "display.c"
 20461 ;; Parameters:    Size  Location     Type
 20462 ;;		None
 20463 ;; Auto vars:     Size  Location     Type
 20464 ;;  col             1    3[BANK0 ] unsigned char 
 20465 ;;  row             1    2[BANK0 ] unsigned char 
 20466 ;; Return value:  Size  Location     Type
 20467 ;;                  1    wreg      void 
 20468 ;; Registers used:
 20469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20470 ;; Tracked objects:
 20471 ;;		On entry : 0/0
 20472 ;;		On exit  : 0/0
 20473 ;;		Unchanged: 0/0
 20474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20476 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20477 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20478 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20479 ;;Total ram usage:        4 bytes
 20480 ;; Hardware stack levels used:    1
 20481 ;; Hardware stack levels required when called:   10
 20482 ;; This function calls:
 20483 ;;		Nothing
 20484 ;; This function is called by:
 20485 ;;		_display_prepare
 20486 ;; This function uses a non-reentrant model
 20487 ;;
 20488                           
 20489                           	psect	text80
 20490  018054                     __ptext80:
 20491                           	opt stack 0
 20492  018054                     __display_clear:
 20493                           	opt stack 19
 20494                           
 20495                           ;display.c: 34: uint8_t row;;display.c: 35: uint8_t col;;display.c: 36: for(row=0;row<4;
      +                          ++row)
 20496                           
 20497                           ; BSR set to: 0
 20498                           ;incstack = 0
 20499  018054  0E00               	movlw	0
 20500  018056  0100               	movlb	0	; () banked
 20501  018058  6F62               	movwf	__display_clear@row& (0+255),b
 20502  01805A                     l26881:
 20503                           
 20504                           ; BSR set to: 0
 20505  01805A  0E03               	movlw	3
 20506  01805C  6562               	cpfsgt	__display_clear@row& (0+255),b
 20507  01805E  D001               	goto	l1698
 20508  018060  0012               	return	
 20509  018062                     l1698:
 20510                           
 20511                           ; BSR set to: 0
 20512                           ;display.c: 37: {;display.c: 38: for(col=0;col<20;++col)
 20513                           
 20514                           ; BSR set to: 0
 20515  018062  0E00               	movlw	0
 20516  018064  6F63               	movwf	__display_clear@col& (0+255),b
 20517  018066                     l26887:
 20518                           
 20519                           ; BSR set to: 0
 20520  018066  0E13               	movlw	19
 20521  018068  6563               	cpfsgt	__display_clear@col& (0+255),b
 20522  01806A  D001               	goto	l1700
 20523  01806C  D016               	goto	u25560
 20524  01806E                     l1700:
 20525                           
 20526                           ; BSR set to: 0
 20527                           ;display.c: 39: {;display.c: 40: display_content[row][col] = ' ';
 20528                           
 20529                           ; BSR set to: 0
 20530  01806E  5162               	movf	__display_clear@row& (0+255),w,b
 20531  018070  0D14               	mullw	20
 20532  018072  0E6C               	movlw	low _display_content
 20533  018074  6F60               	movwf	??__display_clear& (0+255),b
 20534  018076  0E03               	movlw	high _display_content
 20535  018078  6F61               	movwf	(??__display_clear+1)& (0+255),b
 20536  01807A  50F3               	movf	prodl,w,c
 20537  01807C  2760               	addwf	??__display_clear& (0+255),f,b
 20538  01807E  50F4               	movf	prodh,w,c
 20539  018080  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 20540  018082  5163               	movf	__display_clear@col& (0+255),w,b
 20541  018084  0D01               	mullw	1
 20542  018086  50F3               	movf	prodl,w,c
 20543  018088  2560               	addwf	??__display_clear& (0+255),w,b
 20544  01808A  6ED9               	movwf	fsr2l,c
 20545  01808C  50F4               	movf	prodh,w,c
 20546  01808E  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 20547  018090  6EDA               	movwf	fsr2h,c
 20548  018092  0E20               	movlw	32
 20549  018094  6EDF               	movwf	indf2,c
 20550                           
 20551                           ; BSR set to: 0
 20552  018096  2B63               	incf	__display_clear@col& (0+255),f,b
 20553  018098  D7E6               	goto	l26887
 20554  01809A                     u25560:
 20555                           
 20556                           ; BSR set to: 0
 20557                           
 20558                           ; BSR set to: 0
 20559  01809A  2B62               	incf	__display_clear@row& (0+255),f,b
 20560  01809C  D7DE               	goto	l26881
 20561  01809E                     __end_of__display_clear:
 20562                           	opt stack 0
 20563                           tblptru	equ	0xFF8
 20564                           tblptrh	equ	0xFF7
 20565                           tblptrl	equ	0xFF6
 20566                           tablat	equ	0xFF5
 20567                           prodh	equ	0xFF4
 20568                           prodl	equ	0xFF3
 20569                           intcon	equ	0xFF2
 20570                           intcon2	equ	0xFF1
 20571                           intcon3	equ	0xFF0
 20572                           postinc0	equ	0xFEE
 20573                           wreg	equ	0xFE8
 20574                           indf1	equ	0xFE7
 20575                           postdec1	equ	0xFE5
 20576                           plusw1	equ	0xFE3
 20577                           fsr1h	equ	0xFE2
 20578                           fsr1l	equ	0xFE1
 20579                           indf2	equ	0xFDF
 20580                           postinc2	equ	0xFDE
 20581                           postdec2	equ	0xFDD
 20582                           plusw2	equ	0xFDB
 20583                           fsr2h	equ	0xFDA
 20584                           fsr2l	equ	0xFD9
 20585                           status	equ	0xFD8
 20586                           
 20587 ;; *************** function __display_charger *****************
 20588 ;; Defined at:
 20589 ;;		line 474 in file "display.c"
 20590 ;; Parameters:    Size  Location     Type
 20591 ;;		None
 20592 ;; Auto vars:     Size  Location     Type
 20593 ;;  charger_asyn   21   36[BANK1 ] const unsigned char [21]
 20594 ;;  header         21   15[BANK1 ] const unsigned char [21]
 20595 ;;  charger_sync   20   57[BANK1 ] const unsigned char [20]
 20596 ;;  supply_off     19   77[BANK1 ] const unsigned char [19]
 20597 ;;  supply_on      18   96[BANK1 ] const unsigned char [18]
 20598 ;;  charger_star   16  114[BANK1 ] const unsigned char [16]
 20599 ;;  charger_off    12  130[BANK1 ] const unsigned char [12]
 20600 ;;  fan_off         8    0[BANK1 ] const unsigned char [8]
 20601 ;;  fan_on          7    8[BANK1 ] const unsigned char [7]
 20602 ;;  cntr            1  142[BANK1 ] unsigned char 
 20603 ;; Return value:  Size  Location     Type
 20604 ;;                  1    wreg      void 
 20605 ;; Registers used:
 20606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20607 ;; Tracked objects:
 20608 ;;		On entry : 0/0
 20609 ;;		On exit  : 0/0
 20610 ;;		Unchanged: 0/0
 20611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20613 ;;      Locals:         0       0     143       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20614 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20615 ;;      Totals:         0       1     143       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20616 ;;Total ram usage:      144 bytes
 20617 ;; Hardware stack levels used:    1
 20618 ;; Hardware stack levels required when called:   14
 20619 ;; This function calls:
 20620 ;;		__display_itoa
 20621 ;;		_buck_get_dutycycle
 20622 ;;		_buck_get_mode
 20623 ;; This function is called by:
 20624 ;;		_display_prepare
 20625 ;; This function uses a non-reentrant model
 20626 ;;
 20627                           
 20628                           	psect	text81
 20629  00E8F6                     __ptext81:
 20630                           	opt stack 0
 20631  00E8F6                     __display_charger:
 20632                           	opt stack 15
 20633                           
 20634                           ;display.c: 476: uint8_t cntr;;display.c: 477: const char header[] = "MPPT Charger Detai
      +                          ls";
 20635                           
 20636                           ; BSR set to: 0
 20637                           ;incstack = 0
 20638  00E8F6  0EA0               	movlw	low __display_charger@F7321
 20639  00E8F8  6EF6               	movwf	tblptrl,c
 20640  00E8FA                     	if	1	;There is more than 1 active tblptr byte
 20641  00E8FA  0EC0               	movlw	high __display_charger@F7321
 20642  00E8FC  6EF7               	movwf	tblptrh,c
 20643  00E8FE                     	endif
 20644  00E8FE                     	if	1	;There are 3 active tblptr bytes
 20645  00E8FE  0E00               	movlw	low (__display_charger@F7321 shr (0+16))
 20646  00E900  6EF8               	movwf	tblptru,c
 20647  00E902                     	endif
 20648  00E902  EE21  F00F         	lfsr	2,__display_charger@header
 20649  00E906  0E14               	movlw	20
 20650  00E908                     u26240:
 20651  00E908  0009               	tblrd		*+
 20652  00E90A  CFF5 FFDE          	movff	tablat,postinc2
 20653  00E90E  06E8               	decf	wreg,f,c
 20654  00E910  E2FB               	bc	u26240
 20655                           
 20656                           ;display.c: 478: const char supply_on[] = "Charger supply on";
 20657  00E912  0EA3               	movlw	low __display_charger@F7323
 20658  00E914  6EF6               	movwf	tblptrl,c
 20659  00E916                     	if	1	;There is more than 1 active tblptr byte
 20660  00E916  0EC1               	movlw	high __display_charger@F7323
 20661  00E918  6EF7               	movwf	tblptrh,c
 20662  00E91A                     	endif
 20663  00E91A                     	if	1	;There are 3 active tblptr bytes
 20664  00E91A  0E00               	movlw	low (__display_charger@F7323 shr (0+16))
 20665  00E91C  6EF8               	movwf	tblptru,c
 20666  00E91E                     	endif
 20667  00E91E  EE21  F060         	lfsr	2,__display_charger@supply_on
 20668  00E922  0E11               	movlw	17
 20669  00E924                     u26250:
 20670  00E924  0009               	tblrd		*+
 20671  00E926  CFF5 FFDE          	movff	tablat,postinc2
 20672  00E92A  06E8               	decf	wreg,f,c
 20673  00E92C  E2FB               	bc	u26250
 20674                           
 20675                           ;display.c: 479: const char supply_off[] = "Charger supply off";
 20676  00E92E  0E7D               	movlw	low __display_charger@F7325
 20677  00E930  6EF6               	movwf	tblptrl,c
 20678  00E932                     	if	1	;There is more than 1 active tblptr byte
 20679  00E932  0EC1               	movlw	high __display_charger@F7325
 20680  00E934  6EF7               	movwf	tblptrh,c
 20681  00E936                     	endif
 20682  00E936                     	if	1	;There are 3 active tblptr bytes
 20683  00E936  0E00               	movlw	low (__display_charger@F7325 shr (0+16))
 20684  00E938  6EF8               	movwf	tblptru,c
 20685  00E93A                     	endif
 20686  00E93A  EE21  F04D         	lfsr	2,__display_charger@supply_off
 20687  00E93E  0E12               	movlw	18
 20688  00E940                     u26260:
 20689  00E940  0009               	tblrd		*+
 20690  00E942  CFF5 FFDE          	movff	tablat,postinc2
 20691  00E946  06E8               	decf	wreg,f,c
 20692  00E948  E2FB               	bc	u26260
 20693                           
 20694                           ;display.c: 480: const char fan_on[] = "Fan on";
 20695  00E94A  0E3A               	movlw	low __display_charger@F7327
 20696  00E94C  6EF6               	movwf	tblptrl,c
 20697  00E94E                     	if	1	;There is more than 1 active tblptr byte
 20698  00E94E  0EC3               	movlw	high __display_charger@F7327
 20699  00E950  6EF7               	movwf	tblptrh,c
 20700  00E952                     	endif
 20701  00E952                     	if	1	;There are 3 active tblptr bytes
 20702  00E952  0E00               	movlw	low (__display_charger@F7327 shr (0+16))
 20703  00E954  6EF8               	movwf	tblptru,c
 20704  00E956                     	endif
 20705  00E956  EE21  F008         	lfsr	2,__display_charger@fan_on
 20706  00E95A  0E06               	movlw	6
 20707  00E95C                     u26270:
 20708  00E95C  0009               	tblrd		*+
 20709  00E95E  CFF5 FFDE          	movff	tablat,postinc2
 20710  00E962  06E8               	decf	wreg,f,c
 20711  00E964  E2FB               	bc	u26270
 20712                           
 20713                           ;display.c: 481: const char fan_off[] = "Fan off";
 20714  00E966  0E22               	movlw	low __display_charger@F7329
 20715  00E968  6EF6               	movwf	tblptrl,c
 20716  00E96A                     	if	1	;There is more than 1 active tblptr byte
 20717  00E96A  0EC3               	movlw	high __display_charger@F7329
 20718  00E96C  6EF7               	movwf	tblptrh,c
 20719  00E96E                     	endif
 20720  00E96E                     	if	1	;There are 3 active tblptr bytes
 20721  00E96E  0E00               	movlw	low (__display_charger@F7329 shr (0+16))
 20722  00E970  6EF8               	movwf	tblptru,c
 20723  00E972                     	endif
 20724  00E972  EE21  F000         	lfsr	2,__display_charger@fan_off
 20725  00E976  0E07               	movlw	7
 20726  00E978                     u26280:
 20727  00E978  0009               	tblrd		*+
 20728  00E97A  CFF5 FFDE          	movff	tablat,postinc2
 20729  00E97E  06E8               	decf	wreg,f,c
 20730  00E980  E2FB               	bc	u26280
 20731                           
 20732                           ;display.c: 483: const char charger_off[] = "Charger off";
 20733  00E982  0ECD               	movlw	low __display_charger@F7331
 20734  00E984  6EF6               	movwf	tblptrl,c
 20735  00E986                     	if	1	;There is more than 1 active tblptr byte
 20736  00E986  0EC2               	movlw	high __display_charger@F7331
 20737  00E988  6EF7               	movwf	tblptrh,c
 20738  00E98A                     	endif
 20739  00E98A                     	if	1	;There are 3 active tblptr bytes
 20740  00E98A  0E00               	movlw	low (__display_charger@F7331 shr (0+16))
 20741  00E98C  6EF8               	movwf	tblptru,c
 20742  00E98E                     	endif
 20743  00E98E  EE21  F082         	lfsr	2,__display_charger@charger_off
 20744  00E992  0E0B               	movlw	11
 20745  00E994                     u26290:
 20746  00E994  0009               	tblrd		*+
 20747  00E996  CFF5 FFDE          	movff	tablat,postinc2
 20748  00E99A  06E8               	decf	wreg,f,c
 20749  00E99C  E2FB               	bc	u26290
 20750                           
 20751                           ;display.c: 484: const char charger_startup[] = "Charger Startup";
 20752  00E99E  0E0E               	movlw	low __display_charger@F7333
 20753  00E9A0  6EF6               	movwf	tblptrl,c
 20754  00E9A2                     	if	1	;There is more than 1 active tblptr byte
 20755  00E9A2  0EC2               	movlw	high __display_charger@F7333
 20756  00E9A4  6EF7               	movwf	tblptrh,c
 20757  00E9A6                     	endif
 20758  00E9A6                     	if	1	;There are 3 active tblptr bytes
 20759  00E9A6  0E00               	movlw	low (__display_charger@F7333 shr (0+16))
 20760  00E9A8  6EF8               	movwf	tblptru,c
 20761  00E9AA                     	endif
 20762  00E9AA  EE21  F072         	lfsr	2,__display_charger@charger_startup
 20763  00E9AE  0E0F               	movlw	15
 20764  00E9B0                     u26300:
 20765  00E9B0  0009               	tblrd		*+
 20766  00E9B2  CFF5 FFDE          	movff	tablat,postinc2
 20767  00E9B6  06E8               	decf	wreg,f,c
 20768  00E9B8  E2FB               	bc	u26300
 20769                           
 20770                           ;display.c: 485: const char charger_async[] = "Charger Asynchronous";
 20771  00E9BA  0E8B               	movlw	low __display_charger@F7335
 20772  00E9BC  6EF6               	movwf	tblptrl,c
 20773  00E9BE                     	if	1	;There is more than 1 active tblptr byte
 20774  00E9BE  0EC0               	movlw	high __display_charger@F7335
 20775  00E9C0  6EF7               	movwf	tblptrh,c
 20776  00E9C2                     	endif
 20777  00E9C2                     	if	1	;There are 3 active tblptr bytes
 20778  00E9C2  0E00               	movlw	low (__display_charger@F7335 shr (0+16))
 20779  00E9C4  6EF8               	movwf	tblptru,c
 20780  00E9C6                     	endif
 20781  00E9C6  EE21  F024         	lfsr	2,__display_charger@charger_async
 20782  00E9CA  0E14               	movlw	20
 20783  00E9CC                     u26310:
 20784  00E9CC  0009               	tblrd		*+
 20785  00E9CE  CFF5 FFDE          	movff	tablat,postinc2
 20786  00E9D2  06E8               	decf	wreg,f,c
 20787  00E9D4  E2FB               	bc	u26310
 20788                           
 20789                           ;display.c: 486: const char charger_sync[] = "Charger Synchronous";
 20790  00E9D6  0EF3               	movlw	low __display_charger@F7337
 20791  00E9D8  6EF6               	movwf	tblptrl,c
 20792  00E9DA                     	if	1	;There is more than 1 active tblptr byte
 20793  00E9DA  0EC0               	movlw	high __display_charger@F7337
 20794  00E9DC  6EF7               	movwf	tblptrh,c
 20795  00E9DE                     	endif
 20796  00E9DE                     	if	1	;There are 3 active tblptr bytes
 20797  00E9DE  0E00               	movlw	low (__display_charger@F7337 shr (0+16))
 20798  00E9E0  6EF8               	movwf	tblptru,c
 20799  00E9E2                     	endif
 20800  00E9E2  EE21  F039         	lfsr	2,__display_charger@charger_sync
 20801  00E9E6  0E13               	movlw	19
 20802  00E9E8                     u26320:
 20803  00E9E8  0009               	tblrd		*+
 20804  00E9EA  CFF5 FFDE          	movff	tablat,postinc2
 20805  00E9EE  06E8               	decf	wreg,f,c
 20806  00E9F0  E2FB               	bc	u26320
 20807                           
 20808                           ;display.c: 488: cntr = 0;
 20809  00E9F2  0E00               	movlw	0
 20810  00E9F4  0101               	movlb	1	; () banked
 20811  00E9F6  6F8E               	movwf	__display_charger@cntr& (0+255),b
 20812                           
 20813                           ;display.c: 489: while(header[cntr])
 20814  00E9F8  D013               	goto	l1965
 20815  00E9FA                     
 20816                           ; BSR set to: 1
 20817                           ;display.c: 490: display_content[0][cntr] = header[cntr++];
 20818                           
 20819                           ; BSR set to: 1
 20820  00E9FA  518E               	movf	__display_charger@cntr& (0+255),w,b
 20821  00E9FC  0D01               	mullw	1
 20822  00E9FE  0E0F               	movlw	low __display_charger@header
 20823  00EA00  24F3               	addwf	prodl,w,c
 20824  00EA02  6ED9               	movwf	fsr2l,c
 20825  00EA04  0E01               	movlw	high __display_charger@header
 20826  00EA06  20F4               	addwfc	prodh,w,c
 20827  00EA08  6EDA               	movwf	fsr2h,c
 20828  00EA0A  518E               	movf	__display_charger@cntr& (0+255),w,b
 20829  00EA0C  0D01               	mullw	1
 20830  00EA0E  0E6C               	movlw	low _display_content
 20831  00EA10  24F3               	addwf	prodl,w,c
 20832  00EA12  6EE1               	movwf	fsr1l,c
 20833  00EA14  0E03               	movlw	high _display_content
 20834  00EA16  20F4               	addwfc	prodh,w,c
 20835  00EA18  6EE2               	movwf	fsr1h,c
 20836  00EA1A  CFDF FFE7          	movff	indf2,indf1
 20837                           
 20838                           ; BSR set to: 1
 20839  00EA1E  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 20840  00EA20                     l1965:
 20841                           
 20842                           ; BSR set to: 1
 20843                           
 20844                           ; BSR set to: 1
 20845  00EA20  518E               	movf	__display_charger@cntr& (0+255),w,b
 20846  00EA22  0D01               	mullw	1
 20847  00EA24  0E0F               	movlw	low __display_charger@header
 20848  00EA26  24F3               	addwf	prodl,w,c
 20849  00EA28  6ED9               	movwf	fsr2l,c
 20850  00EA2A  0E01               	movlw	high __display_charger@header
 20851  00EA2C  20F4               	addwfc	prodh,w,c
 20852  00EA2E  6EDA               	movwf	fsr2h,c
 20853  00EA30  50DF               	movf	indf2,w,c
 20854  00EA32  A4D8               	btfss	status,2,c
 20855  00EA34  D7E2               	goto	l1966
 20856                           
 20857                           ; BSR set to: 1
 20858                           ;display.c: 492: cntr = 0;
 20859                           
 20860                           ; BSR set to: 1
 20861  00EA36  0E00               	movlw	0
 20862  00EA38  6F8E               	movwf	__display_charger@cntr& (0+255),b
 20863                           
 20864                           ;display.c: 493: if(1 || buck_get_mode()!=BUCK_STATUS_OFF)
 20865  00EA3A  D014               	goto	l1971
 20866  00EA3C                     
 20867                           ;display.c: 496: display_content[1][cntr] = supply_on[cntr++];
 20868  00EA3C  0101               	movlb	1	; () banked
 20869  00EA3E  518E               	movf	__display_charger@cntr& (0+255),w,b
 20870  00EA40  0D01               	mullw	1
 20871  00EA42  0E60               	movlw	low __display_charger@supply_on
 20872  00EA44  24F3               	addwf	prodl,w,c
 20873  00EA46  6ED9               	movwf	fsr2l,c
 20874  00EA48  0E01               	movlw	high __display_charger@supply_on
 20875  00EA4A  20F4               	addwfc	prodh,w,c
 20876  00EA4C  6EDA               	movwf	fsr2h,c
 20877  00EA4E  518E               	movf	__display_charger@cntr& (0+255),w,b
 20878  00EA50  0D01               	mullw	1
 20879  00EA52  0E80               	movlw	low (_display_content+20)
 20880  00EA54  24F3               	addwf	prodl,w,c
 20881  00EA56  6EE1               	movwf	fsr1l,c
 20882  00EA58  0E03               	movlw	high (_display_content+20)
 20883  00EA5A  20F4               	addwfc	prodh,w,c
 20884  00EA5C  6EE2               	movwf	fsr1h,c
 20885  00EA5E  CFDF FFE7          	movff	indf2,indf1
 20886                           
 20887                           ; BSR set to: 1
 20888  00EA62  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 20889  00EA64                     l1971:
 20890                           
 20891                           ; BSR set to: 1
 20892  00EA64  0101               	movlb	1	; () banked
 20893  00EA66  518E               	movf	__display_charger@cntr& (0+255),w,b
 20894  00EA68  0D01               	mullw	1
 20895  00EA6A  0E60               	movlw	low __display_charger@supply_on
 20896  00EA6C  24F3               	addwf	prodl,w,c
 20897  00EA6E  6ED9               	movwf	fsr2l,c
 20898  00EA70  0E01               	movlw	high __display_charger@supply_on
 20899  00EA72  20F4               	addwfc	prodh,w,c
 20900  00EA74  6EDA               	movwf	fsr2h,c
 20901  00EA76  50DF               	movf	indf2,w,c
 20902  00EA78  B4D8               	btfsc	status,2,c
 20903  00EA7A  D020               	goto	u26360
 20904  00EA7C  D7DF               	goto	l1972
 20905  00EA7E                     
 20906                           ; BSR set to: 1
 20907                           ;display.c: 501: display_content[1][cntr] = supply_off[cntr++];
 20908                           
 20909                           ; BSR set to: 1
 20910  00EA7E  518E               	movf	__display_charger@cntr& (0+255),w,b
 20911  00EA80  0D01               	mullw	1
 20912  00EA82  0E4D               	movlw	low __display_charger@supply_off
 20913  00EA84  24F3               	addwf	prodl,w,c
 20914  00EA86  6ED9               	movwf	fsr2l,c
 20915  00EA88  0E01               	movlw	high __display_charger@supply_off
 20916  00EA8A  20F4               	addwfc	prodh,w,c
 20917  00EA8C  6EDA               	movwf	fsr2h,c
 20918  00EA8E  518E               	movf	__display_charger@cntr& (0+255),w,b
 20919  00EA90  0D01               	mullw	1
 20920  00EA92  0E80               	movlw	low (_display_content+20)
 20921  00EA94  24F3               	addwf	prodl,w,c
 20922  00EA96  6EE1               	movwf	fsr1l,c
 20923  00EA98  0E03               	movlw	high (_display_content+20)
 20924  00EA9A  20F4               	addwfc	prodh,w,c
 20925  00EA9C  6EE2               	movwf	fsr1h,c
 20926  00EA9E  CFDF FFE7          	movff	indf2,indf1
 20927                           
 20928                           ; BSR set to: 1
 20929  00EAA2  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 20930                           
 20931                           ; BSR set to: 1
 20932  00EAA4  0101               	movlb	1	; () banked
 20933  00EAA6  518E               	movf	__display_charger@cntr& (0+255),w,b
 20934  00EAA8  0D01               	mullw	1
 20935  00EAAA  0E4D               	movlw	low __display_charger@supply_off
 20936  00EAAC  24F3               	addwf	prodl,w,c
 20937  00EAAE  6ED9               	movwf	fsr2l,c
 20938  00EAB0  0E01               	movlw	high __display_charger@supply_off
 20939  00EAB2  20F4               	addwfc	prodh,w,c
 20940  00EAB4  6EDA               	movwf	fsr2h,c
 20941  00EAB6  50DF               	movf	indf2,w,c
 20942  00EAB8  A4D8               	btfss	status,2,c
 20943  00EABA  D7E1               	goto	l1976
 20944  00EABC                     u26360:
 20945                           
 20946                           ; BSR set to: 1
 20947                           ;display.c: 502: };display.c: 504: cntr = 0;
 20948                           
 20949                           ; BSR set to: 1
 20950                           
 20951                           ; BSR set to: 1
 20952  00EABC  0E00               	movlw	0
 20953  00EABE  6F8E               	movwf	__display_charger@cntr& (0+255),b
 20954                           
 20955                           ;display.c: 505: switch(buck_get_mode())
 20956  00EAC0  D080               	goto	l1978
 20957  00EAC2                     
 20958                           ; BSR set to: 1
 20959                           ;display.c: 509: display_content[2][cntr] = charger_off[cntr++];
 20960                           
 20961                           ; BSR set to: 1
 20962  00EAC2  518E               	movf	__display_charger@cntr& (0+255),w,b
 20963  00EAC4  0D01               	mullw	1
 20964  00EAC6  0E82               	movlw	low __display_charger@charger_off
 20965  00EAC8  24F3               	addwf	prodl,w,c
 20966  00EACA  6ED9               	movwf	fsr2l,c
 20967  00EACC  0E01               	movlw	high __display_charger@charger_off
 20968  00EACE  20F4               	addwfc	prodh,w,c
 20969  00EAD0  6EDA               	movwf	fsr2h,c
 20970  00EAD2  518E               	movf	__display_charger@cntr& (0+255),w,b
 20971  00EAD4  0D01               	mullw	1
 20972  00EAD6  0E94               	movlw	low (_display_content+40)
 20973  00EAD8  24F3               	addwf	prodl,w,c
 20974  00EADA  6EE1               	movwf	fsr1l,c
 20975  00EADC  0E03               	movlw	high (_display_content+40)
 20976  00EADE  20F4               	addwfc	prodh,w,c
 20977  00EAE0  6EE2               	movwf	fsr1h,c
 20978  00EAE2  CFDF FFE7          	movff	indf2,indf1
 20979                           
 20980                           ; BSR set to: 1
 20981  00EAE6  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 20982  00EAE8                     
 20983                           ; BSR set to: 1
 20984  00EAE8  0101               	movlb	1	; () banked
 20985  00EAEA  518E               	movf	__display_charger@cntr& (0+255),w,b
 20986  00EAEC  0D01               	mullw	1
 20987  00EAEE  0E82               	movlw	low __display_charger@charger_off
 20988  00EAF0  24F3               	addwf	prodl,w,c
 20989  00EAF2  6ED9               	movwf	fsr2l,c
 20990  00EAF4  0E01               	movlw	high __display_charger@charger_off
 20991  00EAF6  20F4               	addwfc	prodh,w,c
 20992  00EAF8  6EDA               	movwf	fsr2h,c
 20993  00EAFA  50DF               	movf	indf2,w,c
 20994  00EAFC  B4D8               	btfsc	status,2,c
 20995  00EAFE  D06F               	goto	l1983
 20996  00EB00  D7E0               	goto	l1981
 20997  00EB02                     
 20998                           ; BSR set to: 1
 20999                           ;display.c: 514: display_content[2][cntr] = charger_startup[cntr++];
 21000                           
 21001                           ; BSR set to: 1
 21002  00EB02  518E               	movf	__display_charger@cntr& (0+255),w,b
 21003  00EB04  0D01               	mullw	1
 21004  00EB06  0E72               	movlw	low __display_charger@charger_startup
 21005  00EB08  24F3               	addwf	prodl,w,c
 21006  00EB0A  6ED9               	movwf	fsr2l,c
 21007  00EB0C  0E01               	movlw	high __display_charger@charger_startup
 21008  00EB0E  20F4               	addwfc	prodh,w,c
 21009  00EB10  6EDA               	movwf	fsr2h,c
 21010  00EB12  518E               	movf	__display_charger@cntr& (0+255),w,b
 21011  00EB14  0D01               	mullw	1
 21012  00EB16  0E94               	movlw	low (_display_content+40)
 21013  00EB18  24F3               	addwf	prodl,w,c
 21014  00EB1A  6EE1               	movwf	fsr1l,c
 21015  00EB1C  0E03               	movlw	high (_display_content+40)
 21016  00EB1E  20F4               	addwfc	prodh,w,c
 21017  00EB20  6EE2               	movwf	fsr1h,c
 21018  00EB22  CFDF FFE7          	movff	indf2,indf1
 21019                           
 21020                           ; BSR set to: 1
 21021  00EB26  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 21022  00EB28                     
 21023                           ; BSR set to: 1
 21024  00EB28  0101               	movlb	1	; () banked
 21025  00EB2A  518E               	movf	__display_charger@cntr& (0+255),w,b
 21026  00EB2C  0D01               	mullw	1
 21027  00EB2E  0E72               	movlw	low __display_charger@charger_startup
 21028  00EB30  24F3               	addwf	prodl,w,c
 21029  00EB32  6ED9               	movwf	fsr2l,c
 21030  00EB34  0E01               	movlw	high __display_charger@charger_startup
 21031  00EB36  20F4               	addwfc	prodh,w,c
 21032  00EB38  6EDA               	movwf	fsr2h,c
 21033  00EB3A  50DF               	movf	indf2,w,c
 21034  00EB3C  B4D8               	btfsc	status,2,c
 21035  00EB3E  D04F               	goto	l1983
 21036  00EB40  D7E0               	goto	l1986
 21037  00EB42                     
 21038                           ; BSR set to: 1
 21039                           ;display.c: 519: display_content[2][cntr] = charger_async[cntr++];
 21040                           
 21041                           ; BSR set to: 1
 21042  00EB42  518E               	movf	__display_charger@cntr& (0+255),w,b
 21043  00EB44  0D01               	mullw	1
 21044  00EB46  0E24               	movlw	low __display_charger@charger_async
 21045  00EB48  24F3               	addwf	prodl,w,c
 21046  00EB4A  6ED9               	movwf	fsr2l,c
 21047  00EB4C  0E01               	movlw	high __display_charger@charger_async
 21048  00EB4E  20F4               	addwfc	prodh,w,c
 21049  00EB50  6EDA               	movwf	fsr2h,c
 21050  00EB52  518E               	movf	__display_charger@cntr& (0+255),w,b
 21051  00EB54  0D01               	mullw	1
 21052  00EB56  0E94               	movlw	low (_display_content+40)
 21053  00EB58  24F3               	addwf	prodl,w,c
 21054  00EB5A  6EE1               	movwf	fsr1l,c
 21055  00EB5C  0E03               	movlw	high (_display_content+40)
 21056  00EB5E  20F4               	addwfc	prodh,w,c
 21057  00EB60  6EE2               	movwf	fsr1h,c
 21058  00EB62  CFDF FFE7          	movff	indf2,indf1
 21059                           
 21060                           ; BSR set to: 1
 21061  00EB66  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 21062  00EB68                     
 21063                           ; BSR set to: 1
 21064  00EB68  0101               	movlb	1	; () banked
 21065  00EB6A  518E               	movf	__display_charger@cntr& (0+255),w,b
 21066  00EB6C  0D01               	mullw	1
 21067  00EB6E  0E24               	movlw	low __display_charger@charger_async
 21068  00EB70  24F3               	addwf	prodl,w,c
 21069  00EB72  6ED9               	movwf	fsr2l,c
 21070  00EB74  0E01               	movlw	high __display_charger@charger_async
 21071  00EB76  20F4               	addwfc	prodh,w,c
 21072  00EB78  6EDA               	movwf	fsr2h,c
 21073  00EB7A  50DF               	movf	indf2,w,c
 21074  00EB7C  B4D8               	btfsc	status,2,c
 21075  00EB7E  D02F               	goto	l1983
 21076  00EB80  D7E0               	goto	l1990
 21077  00EB82                     
 21078                           ; BSR set to: 1
 21079                           ;display.c: 524: display_content[2][cntr] = charger_sync[cntr++];
 21080                           
 21081                           ; BSR set to: 1
 21082  00EB82  518E               	movf	__display_charger@cntr& (0+255),w,b
 21083  00EB84  0D01               	mullw	1
 21084  00EB86  0E39               	movlw	low __display_charger@charger_sync
 21085  00EB88  24F3               	addwf	prodl,w,c
 21086  00EB8A  6ED9               	movwf	fsr2l,c
 21087  00EB8C  0E01               	movlw	high __display_charger@charger_sync
 21088  00EB8E  20F4               	addwfc	prodh,w,c
 21089  00EB90  6EDA               	movwf	fsr2h,c
 21090  00EB92  518E               	movf	__display_charger@cntr& (0+255),w,b
 21091  00EB94  0D01               	mullw	1
 21092  00EB96  0E94               	movlw	low (_display_content+40)
 21093  00EB98  24F3               	addwf	prodl,w,c
 21094  00EB9A  6EE1               	movwf	fsr1l,c
 21095  00EB9C  0E03               	movlw	high (_display_content+40)
 21096  00EB9E  20F4               	addwfc	prodh,w,c
 21097  00EBA0  6EE2               	movwf	fsr1h,c
 21098  00EBA2  CFDF FFE7          	movff	indf2,indf1
 21099                           
 21100                           ; BSR set to: 1
 21101  00EBA6  2B8E               	incf	__display_charger@cntr& (0+255),f,b
 21102  00EBA8                     
 21103                           ; BSR set to: 1
 21104  00EBA8  0101               	movlb	1	; () banked
 21105  00EBAA  518E               	movf	__display_charger@cntr& (0+255),w,b
 21106  00EBAC  0D01               	mullw	1
 21107  00EBAE  0E39               	movlw	low __display_charger@charger_sync
 21108  00EBB0  24F3               	addwf	prodl,w,c
 21109  00EBB2  6ED9               	movwf	fsr2l,c
 21110  00EBB4  0E01               	movlw	high __display_charger@charger_sync
 21111  00EBB6  20F4               	addwfc	prodh,w,c
 21112  00EBB8  6EDA               	movwf	fsr2h,c
 21113  00EBBA  50DF               	movf	indf2,w,c
 21114  00EBBC  B4D8               	btfsc	status,2,c
 21115  00EBBE  D00F               	goto	l1983
 21116  00EBC0  D7E0               	goto	l1994
 21117  00EBC2                     l1978:
 21118                           
 21119                           ; BSR set to: 1
 21120                           
 21121                           ; BSR set to: 1
 21122  00EBC2  EC8C  F0C8         	call	_buck_get_mode	;wreg free
 21123                           
 21124                           ; Switch size 1, requested type "space"
 21125                           ; Number of cases is 4, Range of values is 0 to 3
 21126                           ; switch strategies available:
 21127                           ; Name         Instructions Cycles
 21128                           ; simple_byte           13     7 (average)
 21129                           ;	Chosen strategy is simple_byte
 21130  00EBC6  0A00               	xorlw	0	; case 0
 21131  00EBC8  B4D8               	btfsc	status,2,c
 21132  00EBCA  D78E               	goto	l1980
 21133  00EBCC  0A01               	xorlw	1	; case 1
 21134  00EBCE  B4D8               	btfsc	status,2,c
 21135  00EBD0  D7AB               	goto	l1985
 21136  00EBD2  0A03               	xorlw	3	; case 2
 21137  00EBD4  B4D8               	btfsc	status,2,c
 21138  00EBD6  D7C8               	goto	l1989
 21139  00EBD8  0A01               	xorlw	1	; case 3
 21140  00EBDA  B4D8               	btfsc	status,2,c
 21141  00EBDC  D7E5               	goto	l1993
 21142  00EBDE                     l1983:
 21143                           
 21144                           ;display.c: 528: _display_itoa((int16_t) buck_get_dutycycle(), 0, &display_content[3][0]
      +                          );
 21145  00EBDE  EC85  F0C8         	call	_buck_get_dutycycle	;wreg free
 21146  00EBE2  0100               	movlb	0	; () banked
 21147  00EBE4  6F90               	movwf	??__display_charger& (0+255),b
 21148  00EBE6  5190               	movf	??__display_charger& (0+255),w,b
 21149  00EBE8  6F78               	movwf	__display_itoa@value& (0+255),b
 21150  00EBEA  6B79               	clrf	(__display_itoa@value+1)& (0+255),b
 21151  00EBEC  0E00               	movlw	0
 21152  00EBEE  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 21153  00EBF0  0EA8               	movlw	low (_display_content+60)
 21154  00EBF2  6F7B               	movwf	__display_itoa@text& (0+255),b
 21155  00EBF4  0E03               	movlw	high (_display_content+60)
 21156  00EBF6  6F7C               	movwf	(__display_itoa@text+1)& (0+255),b
 21157  00EBF8  EC51  F083         	call	__display_itoa	;wreg free
 21158  00EBFC  0012               	return		;funcret
 21159  00EBFE                     __end_of__display_charger:
 21160                           	opt stack 0
 21161                           tblptru	equ	0xFF8
 21162                           tblptrh	equ	0xFF7
 21163                           tblptrl	equ	0xFF6
 21164                           tablat	equ	0xFF5
 21165                           prodh	equ	0xFF4
 21166                           prodl	equ	0xFF3
 21167                           intcon	equ	0xFF2
 21168                           intcon2	equ	0xFF1
 21169                           intcon3	equ	0xFF0
 21170                           postinc0	equ	0xFEE
 21171                           wreg	equ	0xFE8
 21172                           indf1	equ	0xFE7
 21173                           postdec1	equ	0xFE5
 21174                           plusw1	equ	0xFE3
 21175                           fsr1h	equ	0xFE2
 21176                           fsr1l	equ	0xFE1
 21177                           indf2	equ	0xFDF
 21178                           postinc2	equ	0xFDE
 21179                           postdec2	equ	0xFDD
 21180                           plusw2	equ	0xFDB
 21181                           fsr2h	equ	0xFDA
 21182                           fsr2l	equ	0xFD9
 21183                           status	equ	0xFD8
 21184                           
 21185 ;; *************** function __display_itoa *****************
 21186 ;; Defined at:
 21187 ;;		line 45 in file "display.c"
 21188 ;; Parameters:    Size  Location     Type
 21189 ;;  value           2   24[BANK0 ] int 
 21190 ;;  decimals        1   26[BANK0 ] unsigned char 
 21191 ;;  text            2   27[BANK0 ] PTR unsigned char 
 21192 ;;		 -> display_content(80), 
 21193 ;; Auto vars:     Size  Location     Type
 21194 ;;  tmp            10   35[BANK0 ] unsigned char [10]
 21195 ;;  pos             1   47[BANK0 ] unsigned char 
 21196 ;;  missing         1   46[BANK0 ] char 
 21197 ;;  len             1   45[BANK0 ] unsigned char 
 21198 ;; Return value:  Size  Location     Type
 21199 ;;                  1    wreg      void 
 21200 ;; Registers used:
 21201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21202 ;; Tracked objects:
 21203 ;;		On entry : 0/0
 21204 ;;		On exit  : 0/0
 21205 ;;		Unchanged: 0/0
 21206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21207 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21208 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21209 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21210 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21211 ;;Total ram usage:       24 bytes
 21212 ;; Hardware stack levels used:    1
 21213 ;; Hardware stack levels required when called:   13
 21214 ;; This function calls:
 21215 ;;		_itoa
 21216 ;;		_strlen
 21217 ;; This function is called by:
 21218 ;;		__display_inout
 21219 ;;		__display_charger
 21220 ;;		__display_efficiency
 21221 ;;		__display_temperature
 21222 ;; This function uses a non-reentrant model
 21223 ;;
 21224                           
 21225                           	psect	text82
 21226  0106A2                     __ptext82:
 21227                           	opt stack 0
 21228  0106A2                     __display_itoa:
 21229                           	opt stack 15
 21230                           
 21231                           ;display.c: 47: uint8_t pos;;display.c: 48: uint8_t len;;display.c: 49: int8_t missing;;
      +                          display.c: 50: char tmp[10];;display.c: 51: itoa(tmp, value, 10);
 21232                           
 21233                           ;incstack = 0
 21234  0106A2  0E83               	movlw	low __display_itoa@tmp
 21235  0106A4  0100               	movlb	0	; () banked
 21236  0106A6  6F70               	movwf	itoa@buf& (0+255),b
 21237  0106A8  0E00               	movlw	high __display_itoa@tmp
 21238  0106AA  6F71               	movwf	(itoa@buf+1)& (0+255),b
 21239  0106AC  C078  F072         	movff	__display_itoa@value,itoa@val
 21240  0106B0  C079  F073         	movff	__display_itoa@value+1,itoa@val+1
 21241  0106B4  0E00               	movlw	0
 21242  0106B6  6F75               	movwf	(itoa@base+1)& (0+255),b
 21243  0106B8  0E0A               	movlw	10
 21244  0106BA  6F74               	movwf	itoa@base& (0+255),b
 21245  0106BC  ECE0  F0C0         	call	_itoa	;wreg free
 21246                           
 21247                           ;display.c: 52: len = strlen(tmp);
 21248  0106C0  0E83               	movlw	low __display_itoa@tmp
 21249  0106C2  0100               	movlb	0	; () banked
 21250  0106C4  6F60               	movwf	strlen@s& (0+255),b
 21251  0106C6  0E00               	movlw	high __display_itoa@tmp
 21252  0106C8  6F61               	movwf	(strlen@s+1)& (0+255),b
 21253  0106CA  ECA5  F0C1         	call	_strlen	;wreg free
 21254  0106CE  0100               	movlb	0	; () banked
 21255  0106D0  5160               	movf	?_strlen& (0+255),w,b
 21256  0106D2  6F8D               	movwf	__display_itoa@len& (0+255),b
 21257                           
 21258                           ; BSR set to: 0
 21259                           ;display.c: 54: if(value<0)
 21260  0106D4  AF79               	btfss	(__display_itoa@value+1)& (0+255),7,b
 21261  0106D6  D054               	goto	l1705
 21262                           
 21263                           ; BSR set to: 0
 21264                           ;display.c: 55: {;display.c: 56: missing = decimals + 2 - len;
 21265  0106D8  518D               	movf	__display_itoa@len& (0+255),w,b
 21266  0106DA  0800               	sublw	0
 21267  0106DC  257A               	addwf	__display_itoa@decimals& (0+255),w,b
 21268  0106DE  0F02               	addlw	2
 21269  0106E0  6F8E               	movwf	__display_itoa@missing& (0+255),b
 21270                           
 21271                           ;display.c: 57: if(missing>0)
 21272  0106E2  518E               	movf	__display_itoa@missing& (0+255),w,b
 21273  0106E4  0A80               	xorlw	128
 21274  0106E6  0F7F               	addlw	-129
 21275  0106E8  A0D8               	btfss	status,0,c
 21276  0106EA  D090               	goto	l1712
 21277                           
 21278                           ; BSR set to: 0
 21279                           ;display.c: 58: {;display.c: 59: for(pos=decimals;pos!=0xFF;--pos)
 21280  0106EC  C07A  F08F         	movff	__display_itoa@decimals,__display_itoa@pos
 21281  0106F0                     l25351:
 21282                           
 21283                           ; BSR set to: 0
 21284  0106F0  298F               	incf	__display_itoa@pos& (0+255),w,b
 21285  0106F2  B4D8               	btfsc	status,2,c
 21286  0106F4  D042               	goto	u23860
 21287                           
 21288                           ; BSR set to: 0
 21289                           ;display.c: 60: {;display.c: 61: if(pos>=missing)
 21290                           
 21291                           ; BSR set to: 0
 21292                           
 21293                           ; BSR set to: 0
 21294  0106F6  518F               	movf	__display_itoa@pos& (0+255),w,b
 21295  0106F8  BF8E               	btfsc	__display_itoa@missing& (0+255),7,b
 21296  0106FA  D004               	goto	u23850
 21297  0106FC  0AFF               	xorlw	255
 21298  0106FE  258E               	addwf	__display_itoa@missing& (0+255),w,b
 21299  010700  B0D8               	btfsc	status,0,c
 21300  010702  D02A               	goto	l1709
 21301  010704                     u23850:
 21302                           
 21303                           ; BSR set to: 0
 21304                           ;display.c: 62: {;display.c: 63: tmp[pos+1] = tmp[pos+1-missing];
 21305  010704  C08E  F07D         	movff	__display_itoa@missing,??__display_itoa
 21306  010708  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 21307  01070A  BF7D               	btfsc	??__display_itoa& (0+255),7,b
 21308  01070C  077E               	decf	(??__display_itoa+1)& (0+255),f,b
 21309  01070E  1F7D               	comf	??__display_itoa& (0+255),f,b
 21310  010710  1F7E               	comf	(??__display_itoa+1)& (0+255),f,b
 21311  010712  4B7D               	infsnz	??__display_itoa& (0+255),f,b
 21312  010714  2B7E               	incf	(??__display_itoa+1)& (0+255),f,b
 21313  010716  518F               	movf	__display_itoa@pos& (0+255),w,b
 21314  010718  6F7F               	movwf	(??__display_itoa+2)& (0+255),b
 21315  01071A  6B80               	clrf	(??__display_itoa+3)& (0+255),b
 21316  01071C  517D               	movf	??__display_itoa& (0+255),w,b
 21317  01071E  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 21318  010720  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 21319  010722  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 21320  010724  0E01               	movlw	1
 21321  010726  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 21322  010728  0E00               	movlw	0
 21323  01072A  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 21324  01072C  0E83               	movlw	low __display_itoa@tmp
 21325  01072E  257F               	addwf	(??__display_itoa+2)& (0+255),w,b
 21326  010730  6ED9               	movwf	fsr2l,c
 21327  010732  0E00               	movlw	high __display_itoa@tmp
 21328  010734  2180               	addwfc	(??__display_itoa+3)& (0+255),w,b
 21329  010736  6EDA               	movwf	fsr2h,c
 21330  010738  518F               	movf	__display_itoa@pos& (0+255),w,b
 21331  01073A  6F81               	movwf	(??__display_itoa+4)& (0+255),b
 21332  01073C  6B82               	clrf	(??__display_itoa+5)& (0+255),b
 21333  01073E  0E01               	movlw	1
 21334  010740  2781               	addwf	(??__display_itoa+4)& (0+255),f,b
 21335  010742  0E00               	movlw	0
 21336  010744  2382               	addwfc	(??__display_itoa+5)& (0+255),f,b
 21337  010746  0E83               	movlw	low __display_itoa@tmp
 21338  010748  2581               	addwf	(??__display_itoa+4)& (0+255),w,b
 21339  01074A  6EE1               	movwf	fsr1l,c
 21340  01074C  0E00               	movlw	high __display_itoa@tmp
 21341  01074E  2182               	addwfc	(??__display_itoa+5)& (0+255),w,b
 21342  010750  6EE2               	movwf	fsr1h,c
 21343  010752  CFDF FFE7          	movff	indf2,indf1
 21344                           
 21345                           ;display.c: 64: }
 21346  010756  D00F               	goto	l1710
 21347  010758                     l1709:
 21348                           
 21349                           ; BSR set to: 0
 21350                           ;display.c: 65: else;display.c: 66: {;display.c: 67: tmp[pos+1] = '0';
 21351                           
 21352                           ; BSR set to: 0
 21353  010758  518F               	movf	__display_itoa@pos& (0+255),w,b
 21354  01075A  6F7D               	movwf	??__display_itoa& (0+255),b
 21355  01075C  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 21356  01075E  0E01               	movlw	1
 21357  010760  277D               	addwf	??__display_itoa& (0+255),f,b
 21358  010762  0E00               	movlw	0
 21359  010764  237E               	addwfc	(??__display_itoa+1)& (0+255),f,b
 21360  010766  0E83               	movlw	low __display_itoa@tmp
 21361  010768  257D               	addwf	??__display_itoa& (0+255),w,b
 21362  01076A  6ED9               	movwf	fsr2l,c
 21363  01076C  0E00               	movlw	high __display_itoa@tmp
 21364  01076E  217E               	addwfc	(??__display_itoa+1)& (0+255),w,b
 21365  010770  6EDA               	movwf	fsr2h,c
 21366  010772  0E30               	movlw	48
 21367  010774  6EDF               	movwf	indf2,c
 21368  010776                     l1710:
 21369                           
 21370                           ; BSR set to: 0
 21371                           
 21372                           ; BSR set to: 0
 21373  010776  078F               	decf	__display_itoa@pos& (0+255),f,b
 21374  010778  D7BB               	goto	l25351
 21375  01077A                     u23860:
 21376                           
 21377                           ; BSR set to: 0
 21378                           ;display.c: 68: };display.c: 69: };display.c: 70: len = decimals + 2;
 21379                           
 21380                           ; BSR set to: 0
 21381  01077A  517A               	movf	__display_itoa@decimals& (0+255),w,b
 21382  01077C  0F02               	addlw	2
 21383  01077E  D045               	goto	L9
 21384  010780                     l1705:
 21385                           
 21386                           ; BSR set to: 0
 21387                           ;display.c: 73: else;display.c: 74: {;display.c: 75: missing = decimals + 1 - len;
 21388                           
 21389                           ; BSR set to: 0
 21390  010780  518D               	movf	__display_itoa@len& (0+255),w,b
 21391  010782  0800               	sublw	0
 21392  010784  257A               	addwf	__display_itoa@decimals& (0+255),w,b
 21393  010786  6F7D               	movwf	??__display_itoa& (0+255),b
 21394  010788  297D               	incf	??__display_itoa& (0+255),w,b
 21395  01078A  6F8E               	movwf	__display_itoa@missing& (0+255),b
 21396                           
 21397                           ;display.c: 76: if(missing>0)
 21398  01078C  518E               	movf	__display_itoa@missing& (0+255),w,b
 21399  01078E  0A80               	xorlw	128
 21400  010790  0F7F               	addlw	-129
 21401  010792  A0D8               	btfss	status,0,c
 21402  010794  D03B               	goto	l1712
 21403                           
 21404                           ; BSR set to: 0
 21405                           ;display.c: 77: {;display.c: 78: for(pos=decimals;pos!=0xFF;--pos)
 21406  010796  C07A  F08F         	movff	__display_itoa@decimals,__display_itoa@pos
 21407  01079A                     l25371:
 21408                           
 21409                           ; BSR set to: 0
 21410  01079A  298F               	incf	__display_itoa@pos& (0+255),w,b
 21411  01079C  B4D8               	btfsc	status,2,c
 21412  01079E  D034               	goto	u23900
 21413                           
 21414                           ; BSR set to: 0
 21415                           ;display.c: 79: {;display.c: 80: if(pos>=missing)
 21416                           
 21417                           ; BSR set to: 0
 21418                           
 21419                           ; BSR set to: 0
 21420  0107A0  518F               	movf	__display_itoa@pos& (0+255),w,b
 21421  0107A2  BF8E               	btfsc	__display_itoa@missing& (0+255),7,b
 21422  0107A4  D004               	goto	u23890
 21423  0107A6  0AFF               	xorlw	255
 21424  0107A8  258E               	addwf	__display_itoa@missing& (0+255),w,b
 21425  0107AA  B0D8               	btfsc	status,0,c
 21426  0107AC  D021               	goto	l1715
 21427  0107AE                     u23890:
 21428                           
 21429                           ; BSR set to: 0
 21430                           ;display.c: 81: {;display.c: 82: tmp[pos] = tmp[pos-missing];
 21431  0107AE  C08E  F07D         	movff	__display_itoa@missing,??__display_itoa
 21432  0107B2  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 21433  0107B4  BF7D               	btfsc	??__display_itoa& (0+255),7,b
 21434  0107B6  077E               	decf	(??__display_itoa+1)& (0+255),f,b
 21435  0107B8  1F7D               	comf	??__display_itoa& (0+255),f,b
 21436  0107BA  1F7E               	comf	(??__display_itoa+1)& (0+255),f,b
 21437  0107BC  4B7D               	infsnz	??__display_itoa& (0+255),f,b
 21438  0107BE  2B7E               	incf	(??__display_itoa+1)& (0+255),f,b
 21439  0107C0  518F               	movf	__display_itoa@pos& (0+255),w,b
 21440  0107C2  6F7F               	movwf	(??__display_itoa+2)& (0+255),b
 21441  0107C4  6B80               	clrf	(??__display_itoa+3)& (0+255),b
 21442  0107C6  517D               	movf	??__display_itoa& (0+255),w,b
 21443  0107C8  277F               	addwf	(??__display_itoa+2)& (0+255),f,b
 21444  0107CA  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 21445  0107CC  2380               	addwfc	(??__display_itoa+3)& (0+255),f,b
 21446  0107CE  0E83               	movlw	low __display_itoa@tmp
 21447  0107D0  257F               	addwf	(??__display_itoa+2)& (0+255),w,b
 21448  0107D2  6ED9               	movwf	fsr2l,c
 21449  0107D4  0E00               	movlw	high __display_itoa@tmp
 21450  0107D6  2180               	addwfc	(??__display_itoa+3)& (0+255),w,b
 21451  0107D8  6EDA               	movwf	fsr2h,c
 21452  0107DA  518F               	movf	__display_itoa@pos& (0+255),w,b
 21453  0107DC  0D01               	mullw	1
 21454  0107DE  0E83               	movlw	low __display_itoa@tmp
 21455  0107E0  24F3               	addwf	prodl,w,c
 21456  0107E2  6EE1               	movwf	fsr1l,c
 21457  0107E4  0E00               	movlw	high __display_itoa@tmp
 21458  0107E6  20F4               	addwfc	prodh,w,c
 21459  0107E8  6EE2               	movwf	fsr1h,c
 21460  0107EA  CFDF FFE7          	movff	indf2,indf1
 21461                           
 21462                           ;display.c: 83: }
 21463  0107EE  D00A               	goto	l1716
 21464  0107F0                     l1715:
 21465                           
 21466                           ; BSR set to: 0
 21467                           ;display.c: 84: else;display.c: 85: {;display.c: 86: tmp[pos] = '0';
 21468                           
 21469                           ; BSR set to: 0
 21470  0107F0  518F               	movf	__display_itoa@pos& (0+255),w,b
 21471  0107F2  0D01               	mullw	1
 21472  0107F4  0E83               	movlw	low __display_itoa@tmp
 21473  0107F6  24F3               	addwf	prodl,w,c
 21474  0107F8  6ED9               	movwf	fsr2l,c
 21475  0107FA  0E00               	movlw	high __display_itoa@tmp
 21476  0107FC  20F4               	addwfc	prodh,w,c
 21477  0107FE  6EDA               	movwf	fsr2h,c
 21478  010800  0E30               	movlw	48
 21479  010802  6EDF               	movwf	indf2,c
 21480  010804                     l1716:
 21481                           
 21482                           ; BSR set to: 0
 21483                           
 21484                           ; BSR set to: 0
 21485  010804  078F               	decf	__display_itoa@pos& (0+255),f,b
 21486  010806  D7C9               	goto	l25371
 21487  010808                     u23900:
 21488                           
 21489                           ; BSR set to: 0
 21490                           ;display.c: 87: };display.c: 88: };display.c: 89: len = decimals + 1;
 21491                           
 21492                           ; BSR set to: 0
 21493  010808  297A               	incf	__display_itoa@decimals& (0+255),w,b
 21494  01080A                     L9:
 21495  01080A  6F8D               	movwf	__display_itoa@len& (0+255),b
 21496  01080C                     l1712:
 21497                           
 21498                           ; BSR set to: 0
 21499                           ;display.c: 90: };display.c: 91: };display.c: 93: decimals = len - decimals - 1;
 21500                           
 21501                           ; BSR set to: 0
 21502  01080C  517A               	movf	__display_itoa@decimals& (0+255),w,b
 21503  01080E  0800               	sublw	0
 21504  010810  258D               	addwf	__display_itoa@len& (0+255),w,b
 21505  010812  6F7D               	movwf	??__display_itoa& (0+255),b
 21506  010814  057D               	decf	??__display_itoa& (0+255),w,b
 21507  010816  6F7A               	movwf	__display_itoa@decimals& (0+255),b
 21508                           
 21509                           ; BSR set to: 0
 21510                           ;display.c: 95: for(pos=0;pos<len;++pos)
 21511  010818  0E00               	movlw	0
 21512  01081A  6F8F               	movwf	__display_itoa@pos& (0+255),b
 21513  01081C  D023               	goto	l1717
 21514  01081E                     
 21515                           ; BSR set to: 0
 21516                           ;display.c: 96: {;display.c: 97: text[pos] = tmp[pos];
 21517                           
 21518                           ; BSR set to: 0
 21519  01081E  518F               	movf	__display_itoa@pos& (0+255),w,b
 21520  010820  0D01               	mullw	1
 21521  010822  0E83               	movlw	low __display_itoa@tmp
 21522  010824  24F3               	addwf	prodl,w,c
 21523  010826  6ED9               	movwf	fsr2l,c
 21524  010828  0E00               	movlw	high __display_itoa@tmp
 21525  01082A  20F4               	addwfc	prodh,w,c
 21526  01082C  6EDA               	movwf	fsr2h,c
 21527  01082E  518F               	movf	__display_itoa@pos& (0+255),w,b
 21528  010830  0D01               	mullw	1
 21529  010832  50F3               	movf	prodl,w,c
 21530  010834  257B               	addwf	__display_itoa@text& (0+255),w,b
 21531  010836  6EE1               	movwf	fsr1l,c
 21532  010838  50F4               	movf	prodh,w,c
 21533  01083A  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 21534  01083C  6EE2               	movwf	fsr1h,c
 21535  01083E  CFDF FFE7          	movff	indf2,indf1
 21536                           
 21537                           ; BSR set to: 0
 21538                           ;display.c: 98: if(pos==decimals)
 21539  010842  517A               	movf	__display_itoa@decimals& (0+255),w,b
 21540  010844  198F               	xorwf	__display_itoa@pos& (0+255),w,b
 21541  010846  A4D8               	btfss	status,2,c
 21542  010848  D00C               	goto	l1719
 21543                           
 21544                           ; BSR set to: 0
 21545                           ;display.c: 99: {;display.c: 101: ++pos;
 21546  01084A  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 21547                           
 21548                           ; BSR set to: 0
 21549                           ;display.c: 102: text[pos] = '.';
 21550  01084C  518F               	movf	__display_itoa@pos& (0+255),w,b
 21551  01084E  0D01               	mullw	1
 21552  010850  50F3               	movf	prodl,w,c
 21553  010852  257B               	addwf	__display_itoa@text& (0+255),w,b
 21554  010854  6ED9               	movwf	fsr2l,c
 21555  010856  50F4               	movf	prodh,w,c
 21556  010858  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 21557  01085A  6EDA               	movwf	fsr2h,c
 21558  01085C  0E2E               	movlw	46
 21559  01085E  6EDF               	movwf	indf2,c
 21560                           
 21561                           ;display.c: 103: break;
 21562  010860  D01E               	goto	l1721
 21563  010862                     l1719:
 21564                           
 21565                           ; BSR set to: 0
 21566                           
 21567                           ; BSR set to: 0
 21568  010862  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 21569  010864                     l1717:
 21570                           
 21571                           ; BSR set to: 0
 21572                           
 21573                           ; BSR set to: 0
 21574  010864  518D               	movf	__display_itoa@len& (0+255),w,b
 21575  010866  5D8F               	subwf	__display_itoa@pos& (0+255),w,b
 21576  010868  B0D8               	btfsc	status,0,c
 21577  01086A  D019               	goto	l1721
 21578  01086C  D7D8               	goto	l1718
 21579  01086E                     
 21580                           ; BSR set to: 0
 21581                           ;display.c: 107: {;display.c: 108: text[pos+1] = tmp[pos];
 21582                           
 21583                           ; BSR set to: 0
 21584  01086E  518F               	movf	__display_itoa@pos& (0+255),w,b
 21585  010870  0D01               	mullw	1
 21586  010872  0E83               	movlw	low __display_itoa@tmp
 21587  010874  24F3               	addwf	prodl,w,c
 21588  010876  6ED9               	movwf	fsr2l,c
 21589  010878  0E00               	movlw	high __display_itoa@tmp
 21590  01087A  20F4               	addwfc	prodh,w,c
 21591  01087C  6EDA               	movwf	fsr2h,c
 21592  01087E  518F               	movf	__display_itoa@pos& (0+255),w,b
 21593  010880  6F7D               	movwf	??__display_itoa& (0+255),b
 21594  010882  6B7E               	clrf	(??__display_itoa+1)& (0+255),b
 21595  010884  0E01               	movlw	1
 21596  010886  277D               	addwf	??__display_itoa& (0+255),f,b
 21597  010888  0E00               	movlw	0
 21598  01088A  237E               	addwfc	(??__display_itoa+1)& (0+255),f,b
 21599  01088C  517D               	movf	??__display_itoa& (0+255),w,b
 21600  01088E  257B               	addwf	__display_itoa@text& (0+255),w,b
 21601  010890  6EE1               	movwf	fsr1l,c
 21602  010892  517E               	movf	(??__display_itoa+1)& (0+255),w,b
 21603  010894  217C               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 21604  010896  6EE2               	movwf	fsr1h,c
 21605  010898  CFDF FFE7          	movff	indf2,indf1
 21606                           
 21607                           ; BSR set to: 0
 21608  01089C  2B8F               	incf	__display_itoa@pos& (0+255),f,b
 21609  01089E                     l1721:
 21610                           
 21611                           ; BSR set to: 0
 21612                           
 21613                           ; BSR set to: 0
 21614  01089E  518D               	movf	__display_itoa@len& (0+255),w,b
 21615  0108A0  5D8F               	subwf	__display_itoa@pos& (0+255),w,b
 21616  0108A2  B0D8               	btfsc	status,0,c
 21617  0108A4  0012               	return	
 21618  0108A6  D7E3               	goto	l1722
 21619  0108A8                     __end_of__display_itoa:
 21620                           	opt stack 0
 21621                           tblptru	equ	0xFF8
 21622                           tblptrh	equ	0xFF7
 21623                           tblptrl	equ	0xFF6
 21624                           tablat	equ	0xFF5
 21625                           prodh	equ	0xFF4
 21626                           prodl	equ	0xFF3
 21627                           intcon	equ	0xFF2
 21628                           intcon2	equ	0xFF1
 21629                           intcon3	equ	0xFF0
 21630                           postinc0	equ	0xFEE
 21631                           wreg	equ	0xFE8
 21632                           indf1	equ	0xFE7
 21633                           postdec1	equ	0xFE5
 21634                           plusw1	equ	0xFE3
 21635                           fsr1h	equ	0xFE2
 21636                           fsr1l	equ	0xFE1
 21637                           indf2	equ	0xFDF
 21638                           postinc2	equ	0xFDE
 21639                           postdec2	equ	0xFDD
 21640                           plusw2	equ	0xFDB
 21641                           fsr2h	equ	0xFDA
 21642                           fsr2l	equ	0xFD9
 21643                           status	equ	0xFD8
 21644                           
 21645 ;; *************** function _strlen *****************
 21646 ;; Defined at:
 21647 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 21648 ;; Parameters:    Size  Location     Type
 21649 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 21650 ;;		 -> _display_itoa@tmp(10), 
 21651 ;; Auto vars:     Size  Location     Type
 21652 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 21653 ;;		 -> _display_itoa@tmp(10), 
 21654 ;; Return value:  Size  Location     Type
 21655 ;;                  2    0[BANK0 ] unsigned int 
 21656 ;; Registers used:
 21657 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21658 ;; Tracked objects:
 21659 ;;		On entry : 0/0
 21660 ;;		On exit  : 0/0
 21661 ;;		Unchanged: 0/0
 21662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21663 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21664 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21665 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21666 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21667 ;;Total ram usage:        6 bytes
 21668 ;; Hardware stack levels used:    1
 21669 ;; Hardware stack levels required when called:   10
 21670 ;; This function calls:
 21671 ;;		Nothing
 21672 ;; This function is called by:
 21673 ;;		__display_itoa
 21674 ;; This function uses a non-reentrant model
 21675 ;;
 21676                           
 21677                           	psect	text83
 21678  01834A                     __ptext83:
 21679                           	opt stack 0
 21680  01834A                     _strlen:
 21681                           	opt stack 17
 21682                           
 21683                           ; BSR set to: 0
 21684                           ;incstack = 0
 21685  01834A  C060  F064         	movff	strlen@s,strlen@cp
 21686  01834E  C061  F065         	movff	strlen@s+1,strlen@cp+1
 21687  018352  D003               	goto	l4503
 21688  018354  0100               	movlb	0	; () banked
 21689  018356  4B64               	infsnz	strlen@cp& (0+255),f,b
 21690  018358  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 21691  01835A                     l4503:
 21692                           
 21693                           ; BSR set to: 0
 21694  01835A  C064  FFD9         	movff	strlen@cp,fsr2l
 21695  01835E  C065  FFDA         	movff	strlen@cp+1,fsr2h
 21696  018362  50DF               	movf	indf2,w,c
 21697  018364  A4D8               	btfss	status,2,c
 21698  018366  D7F6               	goto	l4504
 21699  018368  C060  F062         	movff	strlen@s,??_strlen
 21700  01836C  C061  F063         	movff	strlen@s+1,??_strlen+1
 21701  018370  0100               	movlb	0	; () banked
 21702  018372  1F62               	comf	??_strlen& (0+255),f,b
 21703  018374  1F63               	comf	(??_strlen+1)& (0+255),f,b
 21704  018376  4B62               	infsnz	??_strlen& (0+255),f,b
 21705  018378  2B63               	incf	(??_strlen+1)& (0+255),f,b
 21706  01837A  5164               	movf	strlen@cp& (0+255),w,b
 21707  01837C  2562               	addwf	??_strlen& (0+255),w,b
 21708  01837E  6F60               	movwf	?_strlen& (0+255),b
 21709  018380  5165               	movf	(strlen@cp+1)& (0+255),w,b
 21710  018382  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 21711  018384  6F61               	movwf	(?_strlen+1)& (0+255),b
 21712  018386  0012               	return	
 21713  018388                     __end_of_strlen:
 21714                           	opt stack 0
 21715                           tblptru	equ	0xFF8
 21716                           tblptrh	equ	0xFF7
 21717                           tblptrl	equ	0xFF6
 21718                           tablat	equ	0xFF5
 21719                           prodh	equ	0xFF4
 21720                           prodl	equ	0xFF3
 21721                           intcon	equ	0xFF2
 21722                           intcon2	equ	0xFF1
 21723                           intcon3	equ	0xFF0
 21724                           postinc0	equ	0xFEE
 21725                           wreg	equ	0xFE8
 21726                           indf1	equ	0xFE7
 21727                           postdec1	equ	0xFE5
 21728                           plusw1	equ	0xFE3
 21729                           fsr1h	equ	0xFE2
 21730                           fsr1l	equ	0xFE1
 21731                           indf2	equ	0xFDF
 21732                           postinc2	equ	0xFDE
 21733                           postdec2	equ	0xFDD
 21734                           plusw2	equ	0xFDB
 21735                           fsr2h	equ	0xFDA
 21736                           fsr2l	equ	0xFD9
 21737                           status	equ	0xFD8
 21738                           
 21739 ;; *************** function _itoa *****************
 21740 ;; Defined at:
 21741 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 21742 ;; Parameters:    Size  Location     Type
 21743 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 21744 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 21745 ;;  val             2   18[BANK0 ] int 
 21746 ;;  base            2   20[BANK0 ] int 
 21747 ;; Auto vars:     Size  Location     Type
 21748 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 21749 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 21750 ;; Return value:  Size  Location     Type
 21751 ;;                  2   16[BANK0 ] PTR unsigned char 
 21752 ;; Registers used:
 21753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21754 ;; Tracked objects:
 21755 ;;		On entry : 0/0
 21756 ;;		On exit  : 0/0
 21757 ;;		Unchanged: 0/0
 21758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21759 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21760 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21762 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21763 ;;Total ram usage:        8 bytes
 21764 ;; Hardware stack levels used:    1
 21765 ;; Hardware stack levels required when called:   12
 21766 ;; This function calls:
 21767 ;;		_utoa
 21768 ;; This function is called by:
 21769 ;;		__display_itoa
 21770 ;;		__display_itoa_u16
 21771 ;; This function uses a non-reentrant model
 21772 ;;
 21773                           
 21774                           	psect	text84
 21775  0181C0                     __ptext84:
 21776                           	opt stack 0
 21777  0181C0                     _itoa:
 21778                           	opt stack 15
 21779                           
 21780                           ; BSR set to: 0
 21781                           ;incstack = 0
 21782  0181C0  C070  F076         	movff	itoa@buf,itoa@cp
 21783  0181C4  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 21784  0181C8  0100               	movlb	0	; () banked
 21785  0181CA  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 21786  0181CC  D00C               	goto	l4479
 21787                           
 21788                           ; BSR set to: 0
 21789  0181CE  C070  FFD9         	movff	itoa@buf,fsr2l
 21790  0181D2  C071  FFDA         	movff	itoa@buf+1,fsr2h
 21791  0181D6  0E2D               	movlw	45
 21792  0181D8  6EDF               	movwf	indf2,c
 21793                           
 21794                           ; BSR set to: 0
 21795  0181DA  4B70               	infsnz	itoa@buf& (0+255),f,b
 21796  0181DC  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 21797                           
 21798                           ; BSR set to: 0
 21799  0181DE  6D72               	negf	itoa@val& (0+255),b
 21800  0181E0  1F73               	comf	(itoa@val+1)& (0+255),f,b
 21801  0181E2  B0D8               	btfsc	status,0,c
 21802  0181E4  2B73               	incf	(itoa@val+1)& (0+255),f,b
 21803  0181E6                     l4479:
 21804                           
 21805                           ; BSR set to: 0
 21806                           
 21807                           ; BSR set to: 0
 21808  0181E6  C070  F067         	movff	itoa@buf,utoa@buf
 21809  0181EA  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 21810  0181EE  C072  F069         	movff	itoa@val,utoa@val
 21811  0181F2  C073  F06A         	movff	itoa@val+1,utoa@val+1
 21812  0181F6  C074  F06B         	movff	itoa@base,utoa@base
 21813  0181FA  C075  F06C         	movff	itoa@base+1,utoa@base+1
 21814  0181FE  EC85  F0AE         	call	_utoa	;wreg free
 21815  018202  0012               	return	
 21816  018204                     __end_of_itoa:
 21817                           	opt stack 0
 21818                           tblptru	equ	0xFF8
 21819                           tblptrh	equ	0xFF7
 21820                           tblptrl	equ	0xFF6
 21821                           tablat	equ	0xFF5
 21822                           prodh	equ	0xFF4
 21823                           prodl	equ	0xFF3
 21824                           intcon	equ	0xFF2
 21825                           intcon2	equ	0xFF1
 21826                           intcon3	equ	0xFF0
 21827                           postinc0	equ	0xFEE
 21828                           wreg	equ	0xFE8
 21829                           indf1	equ	0xFE7
 21830                           postdec1	equ	0xFE5
 21831                           plusw1	equ	0xFE3
 21832                           fsr1h	equ	0xFE2
 21833                           fsr1l	equ	0xFE1
 21834                           indf2	equ	0xFDF
 21835                           postinc2	equ	0xFDE
 21836                           postdec2	equ	0xFDD
 21837                           plusw2	equ	0xFDB
 21838                           fsr2h	equ	0xFDA
 21839                           fsr2l	equ	0xFD9
 21840                           status	equ	0xFD8
 21841                           
 21842 ;; *************** function _utoa *****************
 21843 ;; Defined at:
 21844 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 21845 ;; Parameters:    Size  Location     Type
 21846 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 21847 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 21848 ;;  val             2    9[BANK0 ] unsigned int 
 21849 ;;  base            2   11[BANK0 ] int 
 21850 ;; Auto vars:     Size  Location     Type
 21851 ;;  v               2   13[BANK0 ] unsigned int 
 21852 ;;  c               1   15[BANK0 ] unsigned char 
 21853 ;; Return value:  Size  Location     Type
 21854 ;;                  2    7[BANK0 ] PTR unsigned char 
 21855 ;; Registers used:
 21856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21857 ;; Tracked objects:
 21858 ;;		On entry : 0/0
 21859 ;;		On exit  : 0/0
 21860 ;;		Unchanged: 0/0
 21861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21862 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21863 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21865 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21866 ;;Total ram usage:        9 bytes
 21867 ;; Hardware stack levels used:    1
 21868 ;; Hardware stack levels required when called:   11
 21869 ;; This function calls:
 21870 ;;		___lwdiv
 21871 ;;		___lwmod
 21872 ;; This function is called by:
 21873 ;;		_itoa
 21874 ;; This function uses a non-reentrant model
 21875 ;;
 21876                           
 21877                           	psect	text85
 21878  015D0A                     __ptext85:
 21879                           	opt stack 0
 21880  015D0A                     _utoa:
 21881                           	opt stack 15
 21882                           
 21883                           ;incstack = 0
 21884  015D0A  C069  F06D         	movff	utoa@val,utoa@v
 21885  015D0E  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 21886  015D12  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 21887  015D16  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 21888  015D1A  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 21889  015D1E  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 21890  015D22  EC1B  F0BE         	call	___lwdiv	;wreg free
 21891  015D26  C060  F06D         	movff	?___lwdiv,utoa@v
 21892  015D2A  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 21893  015D2E  0100               	movlb	0	; () banked
 21894  015D30  4B67               	infsnz	utoa@buf& (0+255),f,b
 21895  015D32  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 21896                           
 21897                           ; BSR set to: 0
 21898  015D34  516D               	movf	utoa@v& (0+255),w,b
 21899  015D36  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 21900  015D38  A4D8               	btfss	status,2,c
 21901  015D3A  D7EB               	goto	l4483
 21902                           
 21903                           ; BSR set to: 0
 21904                           
 21905                           ; BSR set to: 0
 21906  015D3C  C067  FFD9         	movff	utoa@buf,fsr2l
 21907  015D40  C068  FFDA         	movff	utoa@buf+1,fsr2h
 21908  015D44  0E00               	movlw	0
 21909  015D46  6EDF               	movwf	indf2,c
 21910                           
 21911                           ; BSR set to: 0
 21912  015D48  0767               	decf	utoa@buf& (0+255),f,b
 21913  015D4A  A0D8               	btfss	status,0,c
 21914  015D4C  0768               	decf	(utoa@buf+1)& (0+255),f,b
 21915  015D4E                     
 21916                           ; BSR set to: 0
 21917                           
 21918                           ; BSR set to: 0
 21919  015D4E  C069  F060         	movff	utoa@val,___lwmod@dividend
 21920  015D52  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 21921  015D56  C06B  F062         	movff	utoa@base,___lwmod@divisor
 21922  015D5A  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 21923  015D5E  EC02  F0C1         	call	___lwmod	;wreg free
 21924  015D62  0100               	movlb	0	; () banked
 21925  015D64  5160               	movf	?___lwmod& (0+255),w,b
 21926  015D66  6F6F               	movwf	utoa@c& (0+255),b
 21927                           
 21928                           ; BSR set to: 0
 21929  015D68  C069  F060         	movff	utoa@val,___lwdiv@dividend
 21930  015D6C  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 21931  015D70  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 21932  015D74  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 21933  015D78  EC1B  F0BE         	call	___lwdiv	;wreg free
 21934  015D7C  C060  F069         	movff	?___lwdiv,utoa@val
 21935  015D80  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 21936  015D84  0E09               	movlw	9
 21937  015D86  0100               	movlb	0	; () banked
 21938  015D88  656F               	cpfsgt	utoa@c& (0+255),b
 21939  015D8A  D002               	goto	l4486
 21940                           
 21941                           ; BSR set to: 0
 21942  015D8C  0E07               	movlw	7
 21943  015D8E  276F               	addwf	utoa@c& (0+255),f,b
 21944  015D90                     l4486:
 21945                           
 21946                           ; BSR set to: 0
 21947  015D90  0E30               	movlw	48
 21948  015D92  276F               	addwf	utoa@c& (0+255),f,b
 21949                           
 21950                           ; BSR set to: 0
 21951  015D94  C067  FFD9         	movff	utoa@buf,fsr2l
 21952  015D98  C068  FFDA         	movff	utoa@buf+1,fsr2h
 21953  015D9C  C06F  FFDF         	movff	utoa@c,indf2
 21954                           
 21955                           ; BSR set to: 0
 21956  015DA0  0767               	decf	utoa@buf& (0+255),f,b
 21957  015DA2  A0D8               	btfss	status,0,c
 21958  015DA4  0768               	decf	(utoa@buf+1)& (0+255),f,b
 21959                           
 21960                           ; BSR set to: 0
 21961  015DA6  5169               	movf	utoa@val& (0+255),w,b
 21962  015DA8  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 21963  015DAA  A4D8               	btfss	status,2,c
 21964  015DAC  D7D0               	goto	l4485
 21965                           
 21966                           ; BSR set to: 0
 21967                           ;	Return value of _utoa is never used
 21968                           
 21969                           ; BSR set to: 0
 21970  015DAE  4B67               	infsnz	utoa@buf& (0+255),f,b
 21971  015DB0  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 21972  015DB2  0012               	return	
 21973  015DB4                     __end_of_utoa:
 21974                           	opt stack 0
 21975                           tblptru	equ	0xFF8
 21976                           tblptrh	equ	0xFF7
 21977                           tblptrl	equ	0xFF6
 21978                           tablat	equ	0xFF5
 21979                           prodh	equ	0xFF4
 21980                           prodl	equ	0xFF3
 21981                           intcon	equ	0xFF2
 21982                           intcon2	equ	0xFF1
 21983                           intcon3	equ	0xFF0
 21984                           postinc0	equ	0xFEE
 21985                           wreg	equ	0xFE8
 21986                           indf1	equ	0xFE7
 21987                           postdec1	equ	0xFE5
 21988                           plusw1	equ	0xFE3
 21989                           fsr1h	equ	0xFE2
 21990                           fsr1l	equ	0xFE1
 21991                           indf2	equ	0xFDF
 21992                           postinc2	equ	0xFDE
 21993                           postdec2	equ	0xFDD
 21994                           plusw2	equ	0xFDB
 21995                           fsr2h	equ	0xFDA
 21996                           fsr2l	equ	0xFD9
 21997                           status	equ	0xFD8
 21998                           
 21999 ;; *************** function ___lwmod *****************
 22000 ;; Defined at:
 22001 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 22002 ;; Parameters:    Size  Location     Type
 22003 ;;  dividend        2    0[BANK0 ] unsigned int 
 22004 ;;  divisor         2    2[BANK0 ] unsigned int 
 22005 ;; Auto vars:     Size  Location     Type
 22006 ;;  counter         1    4[BANK0 ] unsigned char 
 22007 ;; Return value:  Size  Location     Type
 22008 ;;                  2    0[BANK0 ] unsigned int 
 22009 ;; Registers used:
 22010 ;;		wreg, status,2, status,0
 22011 ;; Tracked objects:
 22012 ;;		On entry : 0/0
 22013 ;;		On exit  : 0/0
 22014 ;;		Unchanged: 0/0
 22015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22016 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22017 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22019 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22020 ;;Total ram usage:        5 bytes
 22021 ;; Hardware stack levels used:    1
 22022 ;; Hardware stack levels required when called:   10
 22023 ;; This function calls:
 22024 ;;		Nothing
 22025 ;; This function is called by:
 22026 ;;		_utoa
 22027 ;; This function uses a non-reentrant model
 22028 ;;
 22029                           
 22030                           	psect	text86
 22031  018204                     __ptext86:
 22032                           	opt stack 0
 22033  018204                     ___lwmod:
 22034                           	opt stack 15
 22035                           
 22036                           ; BSR set to: 0
 22037                           ;incstack = 0
 22038  018204  0100               	movlb	0	; () banked
 22039  018206  5162               	movf	___lwmod@divisor& (0+255),w,b
 22040  018208  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 22041  01820A  B4D8               	btfsc	status,2,c
 22042  01820C  D018               	goto	l4310
 22043                           
 22044                           ; BSR set to: 0
 22045  01820E  0E01               	movlw	1
 22046  018210  6F64               	movwf	___lwmod@counter& (0+255),b
 22047  018212  D004               	goto	l4305
 22048  018214                     
 22049                           ; BSR set to: 0
 22050                           
 22051                           ; BSR set to: 0
 22052  018214  90D8               	bcf	status,0,c
 22053  018216  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 22054  018218  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 22055  01821A  2B64               	incf	___lwmod@counter& (0+255),f,b
 22056  01821C                     l4305:
 22057                           
 22058                           ; BSR set to: 0
 22059                           
 22060                           ; BSR set to: 0
 22061  01821C  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 22062  01821E  D7FA               	goto	l4306
 22063  018220                     u21400:
 22064                           
 22065                           ; BSR set to: 0
 22066                           
 22067                           ; BSR set to: 0
 22068                           
 22069                           ; BSR set to: 0
 22070  018220  5162               	movf	___lwmod@divisor& (0+255),w,b
 22071  018222  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 22072  018224  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 22073  018226  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 22074  018228  A0D8               	btfss	status,0,c
 22075  01822A  D004               	goto	l4309
 22076                           
 22077                           ; BSR set to: 0
 22078  01822C  5162               	movf	___lwmod@divisor& (0+255),w,b
 22079  01822E  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 22080  018230  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 22081  018232  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 22082  018234                     l4309:
 22083                           
 22084                           ; BSR set to: 0
 22085                           
 22086                           ; BSR set to: 0
 22087  018234  90D8               	bcf	status,0,c
 22088  018236  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 22089  018238  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 22090                           
 22091                           ; BSR set to: 0
 22092  01823A  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 22093  01823C  D7F1               	goto	u21400
 22094  01823E                     l4310:
 22095                           
 22096                           ; BSR set to: 0
 22097                           
 22098                           ; BSR set to: 0
 22099  01823E  C060  F060         	movff	___lwmod@dividend,?___lwmod
 22100  018242  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 22101                           
 22102                           ; BSR set to: 0
 22103  018246  0012               	return		;funcret
 22104  018248                     __end_of___lwmod:
 22105                           	opt stack 0
 22106                           tblptru	equ	0xFF8
 22107                           tblptrh	equ	0xFF7
 22108                           tblptrl	equ	0xFF6
 22109                           tablat	equ	0xFF5
 22110                           prodh	equ	0xFF4
 22111                           prodl	equ	0xFF3
 22112                           intcon	equ	0xFF2
 22113                           intcon2	equ	0xFF1
 22114                           intcon3	equ	0xFF0
 22115                           postinc0	equ	0xFEE
 22116                           wreg	equ	0xFE8
 22117                           indf1	equ	0xFE7
 22118                           postdec1	equ	0xFE5
 22119                           plusw1	equ	0xFE3
 22120                           fsr1h	equ	0xFE2
 22121                           fsr1l	equ	0xFE1
 22122                           indf2	equ	0xFDF
 22123                           postinc2	equ	0xFDE
 22124                           postdec2	equ	0xFDD
 22125                           plusw2	equ	0xFDB
 22126                           fsr2h	equ	0xFDA
 22127                           fsr2l	equ	0xFD9
 22128                           status	equ	0xFD8
 22129                           
 22130 ;; *************** function ___lwdiv *****************
 22131 ;; Defined at:
 22132 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 22133 ;; Parameters:    Size  Location     Type
 22134 ;;  dividend        2    0[BANK0 ] unsigned int 
 22135 ;;  divisor         2    2[BANK0 ] unsigned int 
 22136 ;; Auto vars:     Size  Location     Type
 22137 ;;  quotient        2    5[BANK0 ] unsigned int 
 22138 ;;  counter         1    4[BANK0 ] unsigned char 
 22139 ;; Return value:  Size  Location     Type
 22140 ;;                  2    0[BANK0 ] unsigned int 
 22141 ;; Registers used:
 22142 ;;		wreg, status,2, status,0
 22143 ;; Tracked objects:
 22144 ;;		On entry : 0/0
 22145 ;;		On exit  : 0/0
 22146 ;;		Unchanged: 0/0
 22147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22148 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22149 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22151 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22152 ;;Total ram usage:        7 bytes
 22153 ;; Hardware stack levels used:    1
 22154 ;; Hardware stack levels required when called:   10
 22155 ;; This function calls:
 22156 ;;		Nothing
 22157 ;; This function is called by:
 22158 ;;		_utoa
 22159 ;; This function uses a non-reentrant model
 22160 ;;
 22161                           
 22162                           	psect	text87
 22163  017C36                     __ptext87:
 22164                           	opt stack 0
 22165  017C36                     ___lwdiv:
 22166                           	opt stack 15
 22167                           
 22168                           ; BSR set to: 0
 22169                           ;incstack = 0
 22170  017C36  0E00               	movlw	0
 22171  017C38  0100               	movlb	0	; () banked
 22172  017C3A  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 22173  017C3C  0E00               	movlw	0
 22174  017C3E  6F65               	movwf	___lwdiv@quotient& (0+255),b
 22175                           
 22176                           ; BSR set to: 0
 22177  017C40  5162               	movf	___lwdiv@divisor& (0+255),w,b
 22178  017C42  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 22179  017C44  B4D8               	btfsc	status,2,c
 22180  017C46  D01C               	goto	l4300
 22181                           
 22182                           ; BSR set to: 0
 22183  017C48  0E01               	movlw	1
 22184  017C4A  6F64               	movwf	___lwdiv@counter& (0+255),b
 22185  017C4C  D004               	goto	l4295
 22186  017C4E                     
 22187                           ; BSR set to: 0
 22188                           
 22189                           ; BSR set to: 0
 22190  017C4E  90D8               	bcf	status,0,c
 22191  017C50  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 22192  017C52  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 22193  017C54  2B64               	incf	___lwdiv@counter& (0+255),f,b
 22194  017C56                     l4295:
 22195                           
 22196                           ; BSR set to: 0
 22197                           
 22198                           ; BSR set to: 0
 22199  017C56  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 22200  017C58  D7FA               	goto	l4296
 22201  017C5A                     u21370:
 22202                           
 22203                           ; BSR set to: 0
 22204                           
 22205                           ; BSR set to: 0
 22206                           
 22207                           ; BSR set to: 0
 22208  017C5A  90D8               	bcf	status,0,c
 22209  017C5C  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 22210  017C5E  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 22211                           
 22212                           ; BSR set to: 0
 22213  017C60  5162               	movf	___lwdiv@divisor& (0+255),w,b
 22214  017C62  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 22215  017C64  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 22216  017C66  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 22217  017C68  A0D8               	btfss	status,0,c
 22218  017C6A  D005               	goto	l4299
 22219                           
 22220                           ; BSR set to: 0
 22221  017C6C  5162               	movf	___lwdiv@divisor& (0+255),w,b
 22222  017C6E  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 22223  017C70  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 22224  017C72  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 22225                           
 22226                           ; BSR set to: 0
 22227  017C74  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 22228  017C76                     l4299:
 22229                           
 22230                           ; BSR set to: 0
 22231                           
 22232                           ; BSR set to: 0
 22233  017C76  90D8               	bcf	status,0,c
 22234  017C78  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 22235  017C7A  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 22236                           
 22237                           ; BSR set to: 0
 22238  017C7C  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 22239  017C7E  D7ED               	goto	u21370
 22240  017C80                     l4300:
 22241                           
 22242                           ; BSR set to: 0
 22243                           
 22244                           ; BSR set to: 0
 22245  017C80  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 22246  017C84  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 22247                           
 22248                           ; BSR set to: 0
 22249  017C88  0012               	return		;funcret
 22250  017C8A                     __end_of___lwdiv:
 22251                           	opt stack 0
 22252                           tblptru	equ	0xFF8
 22253                           tblptrh	equ	0xFF7
 22254                           tblptrl	equ	0xFF6
 22255                           tablat	equ	0xFF5
 22256                           prodh	equ	0xFF4
 22257                           prodl	equ	0xFF3
 22258                           intcon	equ	0xFF2
 22259                           intcon2	equ	0xFF1
 22260                           intcon3	equ	0xFF0
 22261                           postinc0	equ	0xFEE
 22262                           wreg	equ	0xFE8
 22263                           indf1	equ	0xFE7
 22264                           postdec1	equ	0xFE5
 22265                           plusw1	equ	0xFE3
 22266                           fsr1h	equ	0xFE2
 22267                           fsr1l	equ	0xFE1
 22268                           indf2	equ	0xFDF
 22269                           postinc2	equ	0xFDE
 22270                           postdec2	equ	0xFDD
 22271                           plusw2	equ	0xFDB
 22272                           fsr2h	equ	0xFDA
 22273                           fsr2l	equ	0xFD9
 22274                           status	equ	0xFD8
 22275                           
 22276 ;; *************** function _buck_operate *****************
 22277 ;; Defined at:
 22278 ;;		line 550 in file "buck.c"
 22279 ;; Parameters:    Size  Location     Type
 22280 ;;		None
 22281 ;; Auto vars:     Size  Location     Type
 22282 ;;		None
 22283 ;; Return value:  Size  Location     Type
 22284 ;;                  1    wreg      void 
 22285 ;; Registers used:
 22286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22287 ;; Tracked objects:
 22288 ;;		On entry : 0/0
 22289 ;;		On exit  : 0/0
 22290 ;;		Unchanged: 0/0
 22291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22296 ;;Total ram usage:        0 bytes
 22297 ;; Hardware stack levels used:    1
 22298 ;; Hardware stack levels required when called:   14
 22299 ;; This function calls:
 22300 ;;		__buck_operate_local
 22301 ;;		__buck_operate_remote
 22302 ;; This function is called by:
 22303 ;;		_main
 22304 ;; This function uses a non-reentrant model
 22305 ;;
 22306                           
 22307                           	psect	text88
 22308  01797E                     __ptext88:
 22309                           	opt stack 0
 22310  01797E                     _buck_operate:
 22311                           	opt stack 16
 22312                           
 22313                           ;buck.c: 553: if(buck_remote_enable)
 22314                           
 22315                           ; BSR set to: 0
 22316                           ;incstack = 0
 22317  01797E  0101               	movlb	1	; () banked
 22318  017980  51F0               	movf	_buck_remote_enable& (0+255),w,b
 22319  017982  B4D8               	btfsc	status,2,c
 22320  017984  D020               	goto	l2430
 22321                           
 22322                           ; BSR set to: 1
 22323                           ;buck.c: 554: {;buck.c: 555: if(buck_status<BUCK_STATUS_REMOTE_OFF)
 22324  017986  0E80               	movlw	128
 22325  017988  601E               	cpfslt	_buck_status,c
 22326  01798A  D01A               	goto	l2431
 22327  01798C  D00B               	goto	l2432
 22328  01798E                     
 22329                           ;buck.c: 563: buck_remote_on = 0;
 22330                           
 22331                           ; BSR set to: 1
 22332  01798E  0E00               	movlw	0
 22333  017990  D001               	goto	L10
 22334  017992                     
 22335                           ;buck.c: 567: buck_remote_on = 1;
 22336  017992  0E01               	movlw	1
 22337  017994                     L10:
 22338  017994  6E1D               	movwf	_buck_remote_on,c
 22339                           
 22340                           ;buck.c: 568: buck_remote_synchronous = 0;
 22341  017996  0E00               	movlw	0
 22342  017998  D003               	goto	L11
 22343  01799A                     
 22344                           ;buck.c: 571: buck_remote_on = 1;
 22345  01799A  0E01               	movlw	1
 22346  01799C  6E1D               	movwf	_buck_remote_on,c
 22347                           
 22348                           ;buck.c: 572: buck_remote_synchronous = 1;
 22349  01799E  0E01               	movlw	1
 22350  0179A0                     L11:
 22351  0179A0  6E1C               	movwf	_buck_remote_synchronous,c
 22352                           
 22353                           ;buck.c: 574: }
 22354                           
 22355                           ;buck.c: 573: break;
 22356  0179A2  D00A               	goto	l2434
 22357  0179A4                     l2432:
 22358  0179A4  501E               	movf	_buck_status,w,c
 22359                           
 22360                           ; Switch size 1, requested type "space"
 22361                           ; Number of cases is 3, Range of values is 0 to 3
 22362                           ; switch strategies available:
 22363                           ; Name         Instructions Cycles
 22364                           ; simple_byte           10     6 (average)
 22365                           ;	Chosen strategy is simple_byte
 22366  0179A6  0A00               	xorlw	0	; case 0
 22367  0179A8  B4D8               	btfsc	status,2,c
 22368  0179AA  D7F1               	goto	l2433
 22369  0179AC  0A02               	xorlw	2	; case 2
 22370  0179AE  B4D8               	btfsc	status,2,c
 22371  0179B0  D7F0               	goto	l2435
 22372  0179B2  0A01               	xorlw	1	; case 3
 22373  0179B4  B4D8               	btfsc	status,2,c
 22374  0179B6  D7F1               	goto	l2436
 22375  0179B8                     l2434:
 22376                           
 22377                           ;buck.c: 575: buck_remote_dutycycle = buck_dutycycle;
 22378  0179B8  C0FF  F01B         	movff	_buck_dutycycle,_buck_remote_dutycycle
 22379                           
 22380                           ;buck.c: 576: buck_status += BUCK_STATUS_REMOTE_OFF;
 22381  0179BC  0E80               	movlw	128
 22382  0179BE  261E               	addwf	_buck_status,f,c
 22383  0179C0                     l2431:
 22384                           
 22385                           ;buck.c: 577: };buck.c: 578: _buck_operate_remote();
 22386  0179C0  ECB5  F0A1         	call	__buck_operate_remote	;wreg free
 22387                           
 22388                           ;buck.c: 579: }
 22389  0179C4  0012               	return	
 22390  0179C6                     l2430:
 22391                           
 22392                           ;buck.c: 580: else;buck.c: 581: {;buck.c: 582: if(buck_status>=BUCK_STATUS_REMOTE_OFF)
 22393  0179C6  0E7F               	movlw	127
 22394  0179C8  641E               	cpfsgt	_buck_status,c
 22395  0179CA  D002               	goto	l2438
 22396                           
 22397                           ;buck.c: 583: {;buck.c: 586: buck_status -= BUCK_STATUS_REMOTE_OFF;
 22398  0179CC  0E80               	movlw	128
 22399  0179CE  5E1E               	subwf	_buck_status,f,c
 22400  0179D0                     l2438:
 22401                           
 22402                           ;buck.c: 587: };buck.c: 588: _buck_operate_local();
 22403  0179D0  EC69  F065         	call	__buck_operate_local	;wreg free
 22404  0179D4  0012               	return	
 22405  0179D6                     __end_of_buck_operate:
 22406                           	opt stack 0
 22407                           tblptru	equ	0xFF8
 22408                           tblptrh	equ	0xFF7
 22409                           tblptrl	equ	0xFF6
 22410                           tablat	equ	0xFF5
 22411                           prodh	equ	0xFF4
 22412                           prodl	equ	0xFF3
 22413                           intcon	equ	0xFF2
 22414                           intcon2	equ	0xFF1
 22415                           intcon3	equ	0xFF0
 22416                           postinc0	equ	0xFEE
 22417                           wreg	equ	0xFE8
 22418                           indf1	equ	0xFE7
 22419                           postdec1	equ	0xFE5
 22420                           plusw1	equ	0xFE3
 22421                           fsr1h	equ	0xFE2
 22422                           fsr1l	equ	0xFE1
 22423                           indf2	equ	0xFDF
 22424                           postinc2	equ	0xFDE
 22425                           postdec2	equ	0xFDD
 22426                           plusw2	equ	0xFDB
 22427                           fsr2h	equ	0xFDA
 22428                           fsr2l	equ	0xFD9
 22429                           status	equ	0xFD8
 22430                           
 22431 ;; *************** function __buck_operate_remote *****************
 22432 ;; Defined at:
 22433 ;;		line 453 in file "buck.c"
 22434 ;; Parameters:    Size  Location     Type
 22435 ;;		None
 22436 ;; Auto vars:     Size  Location     Type
 22437 ;;		None
 22438 ;; Return value:  Size  Location     Type
 22439 ;;                  1    wreg      void 
 22440 ;; Registers used:
 22441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22442 ;; Tracked objects:
 22443 ;;		On entry : 0/0
 22444 ;;		On exit  : 0/0
 22445 ;;		Unchanged: 0/0
 22446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22448 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22450 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22451 ;;Total ram usage:        1 bytes
 22452 ;; Hardware stack levels used:    1
 22453 ;; Hardware stack levels required when called:   13
 22454 ;; This function calls:
 22455 ;;		__buck_initial_dutycycle
 22456 ;;		__buck_prepare
 22457 ;;		__buck_set_dutycycle
 22458 ;;		__buck_set_sync_async
 22459 ;;		__buck_start
 22460 ;;		__buck_stop
 22461 ;; This function is called by:
 22462 ;;		_buck_operate
 22463 ;; This function uses a non-reentrant model
 22464 ;;
 22465                           
 22466                           	psect	text89
 22467  01436A                     __ptext89:
 22468                           	opt stack 0
 22469  01436A                     __buck_operate_remote:
 22470                           	opt stack 16
 22471                           
 22472                           ;buck.c: 455: switch(buck_status)
 22473                           
 22474                           ;incstack = 0
 22475  01436A  D067               	goto	l2402
 22476  01436C                     
 22477                           ;buck.c: 458: if((os.timeSlot&0b00110000)==0b00110000)
 22478  01436C  0102               	movlb	2	; () banked
 22479  01436E  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 22480  014370  0B30               	andlw	48
 22481  014372  0A30               	xorlw	48
 22482  014374  A4D8               	btfss	status,2,c
 22483  014376  0012               	return	
 22484                           
 22485                           ; BSR set to: 2
 22486                           ;buck.c: 459: {;buck.c: 460: if(buck_remote_on)
 22487  014378  501D               	movf	_buck_remote_on,w,c
 22488  01437A  B4D8               	btfsc	status,2,c
 22489  01437C  0012               	return	
 22490                           
 22491                           ; BSR set to: 2
 22492                           ;buck.c: 461: {;buck.c: 464: _buck_prepare();
 22493  01437E  ECD1  F0B9         	call	__buck_prepare	;wreg free
 22494                           
 22495                           ;buck.c: 465: };buck.c: 466: };buck.c: 467: break;
 22496  014382  0012               	return	
 22497  014384                     
 22498                           ;buck.c: 470: if((os.timeSlot&0b00110000)==0b00110000)
 22499  014384  0102               	movlb	2	; () banked
 22500  014386  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 22501  014388  0B30               	andlw	48
 22502  01438A  0A30               	xorlw	48
 22503  01438C  A4D8               	btfss	status,2,c
 22504  01438E  0012               	return	
 22505                           
 22506                           ; BSR set to: 2
 22507                           ;buck.c: 471: {;buck.c: 473: if(buck_remote_synchronous)
 22508  014390  501C               	movf	_buck_remote_synchronous,w,c
 22509  014392  B4D8               	btfsc	status,2,c
 22510  014394  D00C               	goto	l2409
 22511                           
 22512                           ; BSR set to: 2
 22513                           ;buck.c: 474: {;buck.c: 476: _buck_start(BUCK_MODE_SYNCHRONOUS, _buck_initial_dutycycle(
      +                          ));
 22514  014396  EC1E  F0AD         	call	__buck_initial_dutycycle	;wreg free
 22515  01439A  0100               	movlb	0	; () banked
 22516  01439C  6F76               	movwf	__buck_operate_remote$10020& (0+255),b
 22517                           
 22518                           ; BSR set to: 0
 22519                           ;buck.c: 474: {;buck.c: 476: _buck_start(BUCK_MODE_SYNCHRONOUS, _buck_initial_dutycycle(
      +                          ));
 22520  01439E  C076  F072         	movff	__buck_operate_remote$10020,__buck_start@dutycycle
 22521  0143A2  0E01               	movlw	1
 22522  0143A4  EC3B  F0AB         	call	__buck_start
 22523                           
 22524                           ;buck.c: 477: buck_remote_dutycycle = buck_dutycycle;
 22525  0143A8  C0FF  F01B         	movff	_buck_dutycycle,_buck_remote_dutycycle
 22526                           
 22527                           ;buck.c: 478: }
 22528  0143AC  0012               	return	
 22529  0143AE                     l2409:
 22530                           
 22531                           ;buck.c: 479: else;buck.c: 480: {;buck.c: 482: _buck_start(BUCK_MODE_ASYNCHRONOUS, 40);
 22532  0143AE  0E28               	movlw	40
 22533  0143B0  0100               	movlb	0	; () banked
 22534  0143B2  6F72               	movwf	__buck_start@dutycycle& (0+255),b
 22535  0143B4  0E00               	movlw	0
 22536  0143B6  EC3B  F0AB         	call	__buck_start
 22537                           
 22538                           ;buck.c: 483: buck_remote_dutycycle = buck_dutycycle;
 22539  0143BA  C0FF  F01B         	movff	_buck_dutycycle,_buck_remote_dutycycle
 22540                           
 22541                           ;buck.c: 484: };buck.c: 485: };buck.c: 486: break;
 22542  0143BE  0012               	return	
 22543  0143C0                     
 22544                           ;buck.c: 490: if(!buck_remote_on)
 22545  0143C0  501D               	movf	_buck_remote_on,w,c
 22546  0143C2  A4D8               	btfss	status,2,c
 22547  0143C4  D003               	goto	l2412
 22548                           
 22549                           ;buck.c: 491: {;buck.c: 493: _buck_stop();
 22550  0143C6  EC79  F0C4         	call	__buck_stop	;wreg free
 22551                           
 22552                           ;buck.c: 494: }
 22553  0143CA  0012               	return	
 22554  0143CC                     l2412:
 22555                           
 22556                           ;buck.c: 496: else if(buck_remote_synchronous)
 22557  0143CC  501C               	movf	_buck_remote_synchronous,w,c
 22558  0143CE  B4D8               	btfsc	status,2,c
 22559  0143D0  D009               	goto	l2414
 22560                           
 22561                           ;buck.c: 497: {;buck.c: 500: buck_remote_dutycycle = _buck_initial_dutycycle();
 22562  0143D2  EC1E  F0AD         	call	__buck_initial_dutycycle	;wreg free
 22563  0143D6  6E1B               	movwf	_buck_remote_dutycycle,c
 22564                           
 22565                           ;buck.c: 501: _buck_set_sync_async(BUCK_MODE_SYNCHRONOUS, buck_remote_dutycycle);
 22566  0143D8  C01B  F062         	movff	_buck_remote_dutycycle,__buck_set_sync_async@new_dutycycle
 22567  0143DC  0E01               	movlw	1
 22568  0143DE  ECB2  F0B7         	call	__buck_set_sync_async
 22569                           
 22570                           ;buck.c: 502: }
 22571  0143E2  0012               	return	
 22572  0143E4                     l2414:
 22573                           
 22574                           ;buck.c: 503: else;buck.c: 504: {;buck.c: 506: if(buck_dutycycle!=buck_remote_dutycycle)
 22575  0143E4  501B               	movf	_buck_remote_dutycycle,w,c
 22576  0143E6  0100               	movlb	0	; () banked
 22577  0143E8  19FF               	xorwf	_buck_dutycycle& (0+255),w,b
 22578  0143EA  B4D8               	btfsc	status,2,c
 22579  0143EC  0012               	return	
 22580                           
 22581                           ; BSR set to: 0
 22582                           ;buck.c: 507: {;buck.c: 508: _buck_set_dutycycle(buck_remote_dutycycle);
 22583  0143EE  501B               	movf	_buck_remote_dutycycle,w,c
 22584  0143F0  ECCB  F0B8         	call	__buck_set_dutycycle
 22585                           
 22586                           ;buck.c: 509: };buck.c: 510: };buck.c: 511: break;
 22587  0143F4  0012               	return	
 22588  0143F6                     
 22589                           ;buck.c: 514: _buck_set_dutycycle(buck_remote_dutycycle);
 22590  0143F6  501B               	movf	_buck_remote_dutycycle,w,c
 22591  0143F8  ECCB  F0B8         	call	__buck_set_dutycycle
 22592                           
 22593                           ;buck.c: 515: if(!buck_remote_on)
 22594  0143FC  501D               	movf	_buck_remote_on,w,c
 22595  0143FE  A4D8               	btfss	status,2,c
 22596  014400  D003               	goto	l2418
 22597                           
 22598                           ;buck.c: 516: {;buck.c: 518: _buck_stop();
 22599  014402  EC79  F0C4         	call	__buck_stop	;wreg free
 22600                           
 22601                           ;buck.c: 519: }
 22602  014406  0012               	return	
 22603  014408                     l2418:
 22604                           
 22605                           ;buck.c: 521: else if(!buck_remote_synchronous)
 22606  014408  501C               	movf	_buck_remote_synchronous,w,c
 22607  01440A  A4D8               	btfss	status,2,c
 22608  01440C  D00A               	goto	l2420
 22609                           
 22610                           ;buck.c: 522: {;buck.c: 524: buck_remote_dutycycle = _buck_initial_dutycycle()-5;
 22611  01440E  EC1E  F0AD         	call	__buck_initial_dutycycle	;wreg free
 22612  014412  0FFB               	addlw	251
 22613  014414  6E1B               	movwf	_buck_remote_dutycycle,c
 22614                           
 22615                           ;buck.c: 525: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, buck_remote_dutycycle);
 22616  014416  C01B  F062         	movff	_buck_remote_dutycycle,__buck_set_sync_async@new_dutycycle
 22617  01441A  0E00               	movlw	0
 22618  01441C  ECB2  F0B7         	call	__buck_set_sync_async
 22619                           
 22620                           ;buck.c: 526: }
 22621  014420  0012               	return	
 22622  014422                     l2420:
 22623                           
 22624                           ;buck.c: 527: else;buck.c: 528: {;buck.c: 530: if(buck_dutycycle!=buck_remote_dutycycle)
 22625  014422  501B               	movf	_buck_remote_dutycycle,w,c
 22626  014424  0100               	movlb	0	; () banked
 22627  014426  19FF               	xorwf	_buck_dutycycle& (0+255),w,b
 22628  014428  B4D8               	btfsc	status,2,c
 22629  01442A  0012               	return	
 22630                           
 22631                           ; BSR set to: 0
 22632                           ;buck.c: 531: {;buck.c: 532: _buck_set_dutycycle(buck_remote_dutycycle);
 22633  01442C  501B               	movf	_buck_remote_dutycycle,w,c
 22634  01442E  ECCB  F0B8         	call	__buck_set_dutycycle
 22635                           
 22636                           ;buck.c: 533: };buck.c: 534: };buck.c: 535: break;
 22637  014432  0012               	return	
 22638  014434                     
 22639                           ;buck.c: 539: _buck_stop();
 22640  014434  EC79  F0C4         	call	__buck_stop	;wreg free
 22641                           
 22642                           ;buck.c: 540: }
 22643  014438  0012               	return	
 22644  01443A                     l2402:
 22645  01443A  501E               	movf	_buck_status,w,c
 22646                           
 22647                           ; Switch size 1, requested type "space"
 22648                           ; Number of cases is 4, Range of values is 128 to 131
 22649                           ; switch strategies available:
 22650                           ; Name         Instructions Cycles
 22651                           ; simple_byte           13     7 (average)
 22652                           ;	Chosen strategy is simple_byte
 22653  01443C  0A80               	xorlw	128	; case 128
 22654  01443E  B4D8               	btfsc	status,2,c
 22655  014440  D795               	goto	l2403
 22656  014442  0A01               	xorlw	1	; case 129
 22657  014444  B4D8               	btfsc	status,2,c
 22658  014446  D79E               	goto	l2407
 22659  014448  0A03               	xorlw	3	; case 130
 22660  01444A  B4D8               	btfsc	status,2,c
 22661  01444C  D7B9               	goto	l2411
 22662  01444E  0A01               	xorlw	1	; case 131
 22663  014450  B4D8               	btfsc	status,2,c
 22664  014452  D7D1               	goto	l2417
 22665  014454  D7EF               	goto	l2423
 22666  014456                     __end_of__buck_operate_remote:
 22667                           	opt stack 0
 22668                           tblptru	equ	0xFF8
 22669                           tblptrh	equ	0xFF7
 22670                           tblptrl	equ	0xFF6
 22671                           tablat	equ	0xFF5
 22672                           prodh	equ	0xFF4
 22673                           prodl	equ	0xFF3
 22674                           intcon	equ	0xFF2
 22675                           intcon2	equ	0xFF1
 22676                           intcon3	equ	0xFF0
 22677                           postinc0	equ	0xFEE
 22678                           wreg	equ	0xFE8
 22679                           indf1	equ	0xFE7
 22680                           postdec1	equ	0xFE5
 22681                           plusw1	equ	0xFE3
 22682                           fsr1h	equ	0xFE2
 22683                           fsr1l	equ	0xFE1
 22684                           indf2	equ	0xFDF
 22685                           postinc2	equ	0xFDE
 22686                           postdec2	equ	0xFDD
 22687                           plusw2	equ	0xFDB
 22688                           fsr2h	equ	0xFDA
 22689                           fsr2l	equ	0xFD9
 22690                           status	equ	0xFD8
 22691                           
 22692 ;; *************** function __buck_prepare *****************
 22693 ;; Defined at:
 22694 ;;		line 125 in file "buck.c"
 22695 ;; Parameters:    Size  Location     Type
 22696 ;;		None
 22697 ;; Auto vars:     Size  Location     Type
 22698 ;;  cntr            1    0[BANK0 ] unsigned char 
 22699 ;; Return value:  Size  Location     Type
 22700 ;;                  1    wreg      void 
 22701 ;; Registers used:
 22702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22703 ;; Tracked objects:
 22704 ;;		On entry : 0/0
 22705 ;;		On exit  : 0/0
 22706 ;;		Unchanged: 0/0
 22707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22709 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22711 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22712 ;;Total ram usage:        1 bytes
 22713 ;; Hardware stack levels used:    1
 22714 ;; Hardware stack levels required when called:   10
 22715 ;; This function calls:
 22716 ;;		Nothing
 22717 ;; This function is called by:
 22718 ;;		__buck_operate_remote
 22719 ;; This function uses a non-reentrant model
 22720 ;;
 22721                           
 22722                           	psect	text90
 22723  0173A2                     __ptext90:
 22724                           	opt stack 0
 22725  0173A2                     __buck_prepare:
 22726                           	opt stack 18
 22727                           
 22728                           ;buck.c: 127: uint8_t cntr;;buck.c: 128: LATBbits.LB1 = 1;
 22729                           
 22730                           ;incstack = 0
 22731  0173A2  828A               	bsf	3978,1,c	;volatile
 22732                           
 22733                           ;buck.c: 129: if(buck_status<0x80)
 22734  0173A4  0E80               	movlw	128
 22735  0173A6  601E               	cpfslt	_buck_status,c
 22736  0173A8  D002               	goto	l2320
 22737                           
 22738                           ;buck.c: 130: buck_status = BUCK_STATUS_STARTUP;
 22739  0173AA  0E01               	movlw	1
 22740  0173AC  D001               	goto	L12
 22741  0173AE                     l2320:
 22742                           
 22743                           ;buck.c: 131: else;buck.c: 132: buck_status = BUCK_STATUS_REMOTE_STARTUP;
 22744  0173AE  0E81               	movlw	129
 22745  0173B0                     L12:
 22746  0173B0  6E1E               	movwf	_buck_status,c
 22747                           
 22748                           ;buck.c: 134: os.input_current = 0;
 22749  0173B2  0E00               	movlw	0
 22750  0173B4  0102               	movlb	2	; () banked
 22751  0173B6  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 22752  0173B8  0E00               	movlw	0
 22753  0173BA  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 22754                           
 22755                           ;buck.c: 135: os.output_current = 0;
 22756  0173BC  0E00               	movlw	0
 22757  0173BE  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 22758  0173C0  0E00               	movlw	0
 22759  0173C2  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 22760                           
 22761                           ;buck.c: 136: for(cntr=0;cntr<4;++cntr)
 22762  0173C4  0E00               	movlw	0
 22763  0173C6  0100               	movlb	0	; () banked
 22764  0173C8  6F60               	movwf	__buck_prepare@cntr& (0+255),b
 22765  0173CA                     l25543:
 22766                           
 22767                           ; BSR set to: 0
 22768  0173CA  0E03               	movlw	3
 22769  0173CC  6560               	cpfsgt	__buck_prepare@cntr& (0+255),b
 22770  0173CE  D001               	goto	l2322
 22771  0173D0  0012               	return	
 22772  0173D2                     l2322:
 22773                           
 22774                           ; BSR set to: 0
 22775                           ;buck.c: 137: {;buck.c: 138: os.input_current_adc[cntr] = 0;
 22776                           
 22777                           ; BSR set to: 0
 22778  0173D2  5160               	movf	__buck_prepare@cntr& (0+255),w,b
 22779  0173D4  0D02               	mullw	2
 22780  0173D6  0E14               	movlw	low (_os+20)
 22781  0173D8  24F3               	addwf	prodl,w,c
 22782  0173DA  6ED9               	movwf	fsr2l,c
 22783  0173DC  0E02               	movlw	high (_os+20)
 22784  0173DE  20F4               	addwfc	prodh,w,c
 22785  0173E0  6EDA               	movwf	fsr2h,c
 22786  0173E2  0E00               	movlw	0
 22787  0173E4  6EDE               	movwf	postinc2,c
 22788  0173E6  0E00               	movlw	0
 22789  0173E8  6EDD               	movwf	postdec2,c
 22790                           
 22791                           ;buck.c: 139: os.output_current_adc[cntr] = 0;
 22792  0173EA  5160               	movf	__buck_prepare@cntr& (0+255),w,b
 22793  0173EC  0D02               	mullw	2
 22794  0173EE  0E29               	movlw	low (_os+41)
 22795  0173F0  24F3               	addwf	prodl,w,c
 22796  0173F2  6ED9               	movwf	fsr2l,c
 22797  0173F4  0E02               	movlw	high (_os+41)
 22798  0173F6  20F4               	addwfc	prodh,w,c
 22799  0173F8  6EDA               	movwf	fsr2h,c
 22800  0173FA  0E00               	movlw	0
 22801  0173FC  6EDE               	movwf	postinc2,c
 22802  0173FE  0E00               	movlw	0
 22803  017400  6EDD               	movwf	postdec2,c
 22804                           
 22805                           ; BSR set to: 0
 22806  017402  2B60               	incf	__buck_prepare@cntr& (0+255),f,b
 22807  017404  D7E2               	goto	l25543
 22808  017406                     __end_of__buck_prepare:
 22809                           	opt stack 0
 22810                           tblptru	equ	0xFF8
 22811                           tblptrh	equ	0xFF7
 22812                           tblptrl	equ	0xFF6
 22813                           tablat	equ	0xFF5
 22814                           prodh	equ	0xFF4
 22815                           prodl	equ	0xFF3
 22816                           intcon	equ	0xFF2
 22817                           intcon2	equ	0xFF1
 22818                           intcon3	equ	0xFF0
 22819                           postinc0	equ	0xFEE
 22820                           wreg	equ	0xFE8
 22821                           indf1	equ	0xFE7
 22822                           postdec1	equ	0xFE5
 22823                           plusw1	equ	0xFE3
 22824                           fsr1h	equ	0xFE2
 22825                           fsr1l	equ	0xFE1
 22826                           indf2	equ	0xFDF
 22827                           postinc2	equ	0xFDE
 22828                           postdec2	equ	0xFDD
 22829                           plusw2	equ	0xFDB
 22830                           fsr2h	equ	0xFDA
 22831                           fsr2l	equ	0xFD9
 22832                           status	equ	0xFD8
 22833                           
 22834 ;; *************** function __buck_operate_local *****************
 22835 ;; Defined at:
 22836 ;;		line 308 in file "buck.c"
 22837 ;; Parameters:    Size  Location     Type
 22838 ;;		None
 22839 ;; Auto vars:     Size  Location     Type
 22840 ;;  cntr            1   29[BANK0 ] unsigned char 
 22841 ;;  tmp_dutycycl    1   28[BANK0 ] unsigned char 
 22842 ;; Return value:  Size  Location     Type
 22843 ;;                  1    wreg      void 
 22844 ;; Registers used:
 22845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22846 ;; Tracked objects:
 22847 ;;		On entry : 0/0
 22848 ;;		On exit  : 0/0
 22849 ;;		Unchanged: 0/0
 22850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22852 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22853 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22854 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22855 ;;Total ram usage:        8 bytes
 22856 ;; Hardware stack levels used:    1
 22857 ;; Hardware stack levels required when called:   13
 22858 ;; This function calls:
 22859 ;;		___lmul
 22860 ;;		__buck_initial_dutycycle
 22861 ;;		__buck_set_dutycycle
 22862 ;;		__buck_set_sync_async
 22863 ;;		__buck_start
 22864 ;;		__buck_stop
 22865 ;; This function is called by:
 22866 ;;		_buck_operate
 22867 ;; This function uses a non-reentrant model
 22868 ;;
 22869                           
 22870                           	psect	text91
 22871  00CAD2                     __ptext91:
 22872                           	opt stack 0
 22873  00CAD2                     __buck_operate_local:
 22874                           	opt stack 16
 22875                           
 22876                           ;buck.c: 310: uint8_t cntr;;buck.c: 311: uint8_t tmp_dutycycle;;buck.c: 313: switch(buck
      +                          _status)
 22877                           
 22878                           ; BSR set to: 0
 22879                           ;incstack = 0
 22880  00CAD2  D22A               	goto	l2365
 22881  00CAD4                     
 22882                           ;buck.c: 316: if((os.timeSlot&0b00110000)==0b00110000)
 22883  00CAD4  0102               	movlb	2	; () banked
 22884  00CAD6  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 22885  00CAD8  0B30               	andlw	48
 22886  00CADA  0A30               	xorlw	48
 22887  00CADC  A4D8               	btfss	status,2,c
 22888  00CADE  0012               	return	
 22889                           
 22890                           ; BSR set to: 2
 22891                           ;buck.c: 317: {;buck.c: 318: if((os.input_voltage-500)>os.output_voltage)
 22892  00CAE0  0E0C               	movlw	12
 22893  00CAE2  0100               	movlb	0	; () banked
 22894  00CAE4  6F76               	movwf	??__buck_operate_local& (0+255),b
 22895  00CAE6  0EFE               	movlw	254
 22896  00CAE8  6F77               	movwf	(??__buck_operate_local+1)& (0+255),b
 22897  00CAEA  EE22  F012         	lfsr	2,_os+18	;volatile
 22898  00CAEE  CFDE F078          	movff	postinc2,??__buck_operate_local+2
 22899  00CAF2  CFDD F079          	movff	postdec2,??__buck_operate_local+3
 22900  00CAF6  5176               	movf	??__buck_operate_local& (0+255),w,b
 22901  00CAF8  2778               	addwf	(??__buck_operate_local+2)& (0+255),f,b
 22902  00CAFA  5177               	movf	(??__buck_operate_local+1)& (0+255),w,b
 22903  00CAFC  2379               	addwfc	(??__buck_operate_local+3)& (0+255),f,b
 22904  00CAFE  5178               	movf	(??__buck_operate_local+2)& (0+255),w,b
 22905  00CB00  0102               	movlb	2	; () banked
 22906  00CB02  5D27               	subwf	(_os+39)& (0+255),w,b	;volatile
 22907  00CB04  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 22908  00CB06  0A80               	xorlw	128
 22909  00CB08  0100               	movlb	0	; () banked
 22910  00CB0A  6F7A               	movwf	(??__buck_operate_local+4)& (0+255),b
 22911  00CB0C  5179               	movf	(??__buck_operate_local+3)& (0+255),w,b
 22912  00CB0E  0A80               	xorlw	128
 22913  00CB10  597A               	subwfb	(??__buck_operate_local+4)& (0+255),w,b
 22914  00CB12  B0D8               	btfsc	status,0,c
 22915  00CB14  0012               	return	
 22916                           
 22917                           ; BSR set to: 0
 22918                           ;buck.c: 319: {;buck.c: 320: LATBbits.LB1 = 1;
 22919  00CB16  828A               	bsf	3978,1,c	;volatile
 22920                           
 22921                           ; BSR set to: 0
 22922                           ;buck.c: 321: buck_status = BUCK_STATUS_STARTUP;
 22923  00CB18  0E01               	movlw	1
 22924  00CB1A  6E1E               	movwf	_buck_status,c
 22925                           
 22926                           ;buck.c: 323: os.input_current = 0;
 22927  00CB1C  0E00               	movlw	0
 22928  00CB1E  0102               	movlb	2	; () banked
 22929  00CB20  6F1E               	movwf	(_os+30)& (0+255),b	;volatile
 22930  00CB22  0E00               	movlw	0
 22931  00CB24  6F1D               	movwf	(_os+29)& (0+255),b	;volatile
 22932                           
 22933                           ;buck.c: 324: os.output_current = 0;
 22934  00CB26  0E00               	movlw	0
 22935  00CB28  6F33               	movwf	(_os+51)& (0+255),b	;volatile
 22936  00CB2A  0E00               	movlw	0
 22937  00CB2C  6F32               	movwf	(_os+50)& (0+255),b	;volatile
 22938                           
 22939                           ;buck.c: 325: for(cntr=0;cntr<4;++cntr)
 22940  00CB2E  0E00               	movlw	0
 22941  00CB30  0100               	movlb	0	; () banked
 22942  00CB32  6F7D               	movwf	__buck_operate_local@cntr& (0+255),b
 22943  00CB34                     l27405:
 22944                           
 22945                           ; BSR set to: 0
 22946  00CB34  0E03               	movlw	3
 22947  00CB36  657D               	cpfsgt	__buck_operate_local@cntr& (0+255),b
 22948  00CB38  D001               	goto	l2369
 22949  00CB3A  0012               	return	
 22950  00CB3C                     l2369:
 22951                           
 22952                           ; BSR set to: 0
 22953                           ;buck.c: 326: {;buck.c: 327: os.input_current_adc[cntr] = 0;
 22954                           
 22955                           ; BSR set to: 0
 22956  00CB3C  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 22957  00CB3E  0D02               	mullw	2
 22958  00CB40  0E14               	movlw	low (_os+20)
 22959  00CB42  24F3               	addwf	prodl,w,c
 22960  00CB44  6ED9               	movwf	fsr2l,c
 22961  00CB46  0E02               	movlw	high (_os+20)
 22962  00CB48  20F4               	addwfc	prodh,w,c
 22963  00CB4A  6EDA               	movwf	fsr2h,c
 22964  00CB4C  0E00               	movlw	0
 22965  00CB4E  6EDE               	movwf	postinc2,c
 22966  00CB50  0E00               	movlw	0
 22967  00CB52  6EDD               	movwf	postdec2,c
 22968                           
 22969                           ;buck.c: 328: os.output_current_adc[cntr] = 0;
 22970  00CB54  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 22971  00CB56  0D02               	mullw	2
 22972  00CB58  0E29               	movlw	low (_os+41)
 22973  00CB5A  24F3               	addwf	prodl,w,c
 22974  00CB5C  6ED9               	movwf	fsr2l,c
 22975  00CB5E  0E02               	movlw	high (_os+41)
 22976  00CB60  20F4               	addwfc	prodh,w,c
 22977  00CB62  6EDA               	movwf	fsr2h,c
 22978  00CB64  0E00               	movlw	0
 22979  00CB66  6EDE               	movwf	postinc2,c
 22980  00CB68  0E00               	movlw	0
 22981  00CB6A  6EDD               	movwf	postdec2,c
 22982                           
 22983                           ; BSR set to: 0
 22984  00CB6C  2B7D               	incf	__buck_operate_local@cntr& (0+255),f,b
 22985  00CB6E  D7E2               	goto	l27405
 22986  00CB70                     
 22987                           ;buck.c: 335: if((os.timeSlot&0b00110000)==0b00110000)
 22988                           
 22989                           ; BSR set to: 0
 22990  00CB70  0102               	movlb	2	; () banked
 22991  00CB72  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 22992  00CB74  0B30               	andlw	48
 22993  00CB76  0A30               	xorlw	48
 22994  00CB78  A4D8               	btfss	status,2,c
 22995  00CB7A  0012               	return	
 22996                           
 22997                           ; BSR set to: 2
 22998                           ;buck.c: 336: {;buck.c: 338: os.input_current_calibration = 0;
 22999  00CB7C  0E00               	movlw	0
 23000  00CB7E  6F1C               	movwf	(_os+28)& (0+255),b	;volatile
 23001                           
 23002                           ;buck.c: 339: os.output_current_calibration = 0;
 23003  00CB80  0E00               	movlw	0
 23004  00CB82  6F31               	movwf	(_os+49)& (0+255),b	;volatile
 23005                           
 23006                           ;buck.c: 340: for(cntr=0;cntr<4;++cntr)
 23007  00CB84  0E00               	movlw	0
 23008  00CB86  0100               	movlb	0	; () banked
 23009  00CB88  6F7D               	movwf	__buck_operate_local@cntr& (0+255),b
 23010  00CB8A                     l27419:
 23011                           
 23012                           ; BSR set to: 0
 23013  00CB8A  0E03               	movlw	3
 23014  00CB8C  657D               	cpfsgt	__buck_operate_local@cntr& (0+255),b
 23015  00CB8E  D001               	goto	l2374
 23016  00CB90  D01A               	goto	u26610
 23017  00CB92                     l2374:
 23018                           
 23019                           ; BSR set to: 0
 23020                           ;buck.c: 341: {;buck.c: 342: os.input_current_calibration += os.input_current_adc[cntr];
 23021                           
 23022                           ; BSR set to: 0
 23023  00CB92  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 23024  00CB94  0D02               	mullw	2
 23025  00CB96  0E14               	movlw	low (_os+20)
 23026  00CB98  24F3               	addwf	prodl,w,c
 23027  00CB9A  6ED9               	movwf	fsr2l,c
 23028  00CB9C  0E02               	movlw	high (_os+20)
 23029  00CB9E  20F4               	addwfc	prodh,w,c
 23030  00CBA0  6EDA               	movwf	fsr2h,c
 23031  00CBA2  50DF               	movf	indf2,w,c
 23032  00CBA4  0102               	movlb	2	; () banked
 23033  00CBA6  271C               	addwf	(_os+28)& (0+255),f,b	;volatile
 23034                           
 23035                           ;buck.c: 343: os.output_current_calibration += os.output_current_adc[cntr];
 23036  00CBA8  0100               	movlb	0	; () banked
 23037  00CBAA  517D               	movf	__buck_operate_local@cntr& (0+255),w,b
 23038  00CBAC  0D02               	mullw	2
 23039  00CBAE  0E29               	movlw	low (_os+41)
 23040  00CBB0  24F3               	addwf	prodl,w,c
 23041  00CBB2  6ED9               	movwf	fsr2l,c
 23042  00CBB4  0E02               	movlw	high (_os+41)
 23043  00CBB6  20F4               	addwfc	prodh,w,c
 23044  00CBB8  6EDA               	movwf	fsr2h,c
 23045  00CBBA  50DF               	movf	indf2,w,c
 23046  00CBBC  0102               	movlb	2	; () banked
 23047  00CBBE  2731               	addwf	(_os+49)& (0+255),f,b	;volatile
 23048                           
 23049                           ; BSR set to: 2
 23050  00CBC0  0100               	movlb	0	; () banked
 23051  00CBC2  2B7D               	incf	__buck_operate_local@cntr& (0+255),f,b
 23052  00CBC4  D7E2               	goto	l27419
 23053  00CBC6                     u26610:
 23054                           
 23055                           ; BSR set to: 0
 23056                           ;buck.c: 344: };buck.c: 346: buck_dutycycle_last_step = 1;
 23057                           
 23058                           ; BSR set to: 0
 23059  00CBC6  0E01               	movlw	1
 23060  00CBC8  0102               	movlb	2	; () banked
 23061  00CBCA  6FCA               	movwf	_buck_dutycycle_last_step& (0+255),b
 23062                           
 23063                           ; BSR set to: 2
 23064                           ;buck.c: 347: _buck_start(BUCK_MODE_ASYNCHRONOUS, _buck_initial_dutycycle());
 23065  00CBCC  EC1E  F0AD         	call	__buck_initial_dutycycle	;wreg free
 23066  00CBD0  0100               	movlb	0	; () banked
 23067  00CBD2  6F7B               	movwf	__buck_operate_local$10019& (0+255),b
 23068                           
 23069                           ; BSR set to: 0
 23070                           ;buck.c: 347: _buck_start(BUCK_MODE_ASYNCHRONOUS, _buck_initial_dutycycle());
 23071  00CBD4  C07B  F072         	movff	__buck_operate_local$10019,__buck_start@dutycycle
 23072  00CBD8  0E00               	movlw	0
 23073  00CBDA  EC3B  F0AB         	call	__buck_start
 23074                           
 23075                           ;buck.c: 349: };buck.c: 350: break;
 23076  00CBDE  0012               	return	
 23077  00CBE0                     l2376:
 23078                           
 23079                           ;buck.c: 353: if(os.timeSlot&0b00010000)
 23080  00CBE0  0102               	movlb	2	; () banked
 23081  00CBE2  A908               	btfss	(_os+8)& (0+255),4,b	;volatile
 23082  00CBE4  0012               	return	
 23083                           
 23084                           ; BSR set to: 2
 23085                           ;buck.c: 354: {;buck.c: 356: if(os.output_voltage>battery_voltage_maximum)
 23086  00CBE6  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 23087  00CBE8  5DF9               	subwf	_battery_voltage_maximum& (0+255),w,b
 23088  00CBEA  51FA               	movf	(_battery_voltage_maximum+1)& (0+255),w,b
 23089  00CBEC  0A80               	xorlw	128
 23090  00CBEE  0100               	movlb	0	; () banked
 23091  00CBF0  6F76               	movwf	??__buck_operate_local& (0+255),b
 23092  00CBF2  0102               	movlb	2	; () banked
 23093  00CBF4  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 23094  00CBF6  0A80               	xorlw	128
 23095  00CBF8  0100               	movlb	0	; () banked
 23096  00CBFA  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 23097  00CBFC  B0D8               	btfsc	status,0,c
 23098  00CBFE  D006               	goto	l2378
 23099                           
 23100                           ; BSR set to: 0
 23101                           ;buck.c: 357: {;buck.c: 358: _buck_set_dutycycle((uint8_t)(buck_dutycycle-1));
 23102  00CC00  05FF               	decf	_buck_dutycycle& (0+255),w,b
 23103  00CC02  ECCB  F0B8         	call	__buck_set_dutycycle
 23104                           
 23105                           ;buck.c: 359: buck_dutycycle_last_step = -1;
 23106  00CC06  0102               	movlb	2	; () banked
 23107  00CC08  69CA               	setf	_buck_dutycycle_last_step& (0+255),b
 23108                           
 23109                           ;buck.c: 360: }
 23110  00CC0A  0012               	return	
 23111  00CC0C                     l2378:
 23112                           
 23113                           ;buck.c: 362: else if ((os.input_current<5) || (os.input_voltage<os.output_voltage))
 23114                           
 23115                           ; BSR set to: 2
 23116  00CC0C  0102               	movlb	2	; () banked
 23117  00CC0E  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 23118  00CC10  D013               	goto	u26650
 23119  00CC12  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 23120  00CC14  E104               	bnz	u26640
 23121  00CC16  0E05               	movlw	5
 23122  00CC18  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 23123  00CC1A  A0D8               	btfss	status,0,c
 23124  00CC1C  D00D               	goto	u26650
 23125  00CC1E                     u26640:
 23126                           
 23127                           ; BSR set to: 2
 23128  00CC1E  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 23129  00CC20  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 23130  00CC22  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 23131  00CC24  0A80               	xorlw	128
 23132  00CC26  0100               	movlb	0	; () banked
 23133  00CC28  6F76               	movwf	??__buck_operate_local& (0+255),b
 23134  00CC2A  0102               	movlb	2	; () banked
 23135  00CC2C  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 23136  00CC2E  0A80               	xorlw	128
 23137  00CC30  0100               	movlb	0	; () banked
 23138  00CC32  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 23139  00CC34  B0D8               	btfsc	status,0,c
 23140  00CC36  D005               	goto	l2380
 23141  00CC38                     u26650:
 23142                           
 23143                           ;buck.c: 363: {;buck.c: 364: _buck_stop();
 23144                           
 23145                           ; BSR set to: 0
 23146  00CC38  EC79  F0C4         	call	__buck_stop	;wreg free
 23147                           
 23148                           ;buck.c: 365: buck_status = BUCK_STATUS_OFF;
 23149  00CC3C  0E00               	movlw	0
 23150  00CC3E  6E1E               	movwf	_buck_status,c
 23151                           
 23152                           ;buck.c: 366: }
 23153  00CC40  0012               	return	
 23154  00CC42                     l2380:
 23155                           
 23156                           ;buck.c: 368: else if (os.input_voltage - os.output_voltage < 1000)
 23157  00CC42  EE22  F027         	lfsr	2,_os+39	;volatile
 23158  00CC46  CFDE F076          	movff	postinc2,??__buck_operate_local
 23159  00CC4A  CFDD F077          	movff	postdec2,??__buck_operate_local+1
 23160  00CC4E  0100               	movlb	0	; () banked
 23161  00CC50  1F76               	comf	??__buck_operate_local& (0+255),f,b
 23162  00CC52  1F77               	comf	(??__buck_operate_local+1)& (0+255),f,b
 23163  00CC54  4B76               	infsnz	??__buck_operate_local& (0+255),f,b
 23164  00CC56  2B77               	incf	(??__buck_operate_local+1)& (0+255),f,b
 23165  00CC58  0102               	movlb	2	; () banked
 23166  00CC5A  5112               	movf	(_os+18)& (0+255),w,b	;volatile
 23167  00CC5C  0100               	movlb	0	; () banked
 23168  00CC5E  2776               	addwf	??__buck_operate_local& (0+255),f,b
 23169  00CC60  0102               	movlb	2	; () banked
 23170  00CC62  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 23171  00CC64  0100               	movlb	0	; () banked
 23172  00CC66  2377               	addwfc	(??__buck_operate_local+1)& (0+255),f,b
 23173  00CC68  BF77               	btfsc	(??__buck_operate_local+1)& (0+255),7,b
 23174  00CC6A  D006               	goto	u26660
 23175  00CC6C  0EE8               	movlw	232
 23176  00CC6E  5D76               	subwf	??__buck_operate_local& (0+255),w,b
 23177  00CC70  0E03               	movlw	3
 23178  00CC72  5977               	subwfb	(??__buck_operate_local+1)& (0+255),w,b
 23179  00CC74  B0D8               	btfsc	status,0,c
 23180  00CC76  D006               	goto	l2384
 23181  00CC78                     u26660:
 23182                           
 23183                           ; BSR set to: 0
 23184                           ;buck.c: 369: {;buck.c: 370: _buck_set_dutycycle((uint8_t)(buck_dutycycle-1));
 23185  00CC78  05FF               	decf	_buck_dutycycle& (0+255),w,b
 23186  00CC7A  ECCB  F0B8         	call	__buck_set_dutycycle
 23187                           
 23188                           ;buck.c: 371: buck_dutycycle_last_step = -1;
 23189  00CC7E  0102               	movlb	2	; () banked
 23190  00CC80  69CA               	setf	_buck_dutycycle_last_step& (0+255),b
 23191                           
 23192                           ;buck.c: 372: }
 23193  00CC82  0012               	return	
 23194  00CC84                     l2384:
 23195                           
 23196                           ;buck.c: 374: else if (os.input_current>600)
 23197                           
 23198                           ; BSR set to: 2
 23199  00CC84  0102               	movlb	2	; () banked
 23200  00CC86  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 23201  00CC88  D011               	goto	l2386
 23202  00CC8A  0E59               	movlw	89
 23203  00CC8C  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 23204  00CC8E  0E02               	movlw	2
 23205  00CC90  591E               	subwfb	(_os+30)& (0+255),w,b	;volatile
 23206  00CC92  A0D8               	btfss	status,0,c
 23207  00CC94  D00B               	goto	l2386
 23208                           
 23209                           ; BSR set to: 2
 23210                           ;buck.c: 375: {;buck.c: 376: tmp_dutycycle = (uint8_t) (_buck_initial_dutycycle()+5);
 23211  00CC96  EC1E  F0AD         	call	__buck_initial_dutycycle	;wreg free
 23212  00CC9A  0F05               	addlw	5
 23213  00CC9C  0100               	movlb	0	; () banked
 23214  00CC9E  6F7C               	movwf	__buck_operate_local@tmp_dutycycle& (0+255),b
 23215                           
 23216                           ; BSR set to: 0
 23217                           ;buck.c: 377: _buck_set_sync_async(BUCK_MODE_SYNCHRONOUS, tmp_dutycycle);
 23218  00CCA0  C07C  F062         	movff	__buck_operate_local@tmp_dutycycle,__buck_set_sync_async@new_dutycycle
 23219  00CCA4  0E01               	movlw	1
 23220  00CCA6  ECB2  F0B7         	call	__buck_set_sync_async
 23221                           
 23222                           ;buck.c: 380: }
 23223  00CCAA  0012               	return	
 23224  00CCAC                     l2386:
 23225                           
 23226                           ;buck.c: 382: else;buck.c: 383: {;buck.c: 385: idx = (uint8_t) (os.timeSlot & 0b00110000
      +                          );
 23227  00CCAC  0102               	movlb	2	; () banked
 23228  00CCAE  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 23229  00CCB0  0B30               	andlw	48
 23230  00CCB2  6E1A               	movwf	_idx,c
 23231                           
 23232                           ;buck.c: 386: idx >>= 4;
 23233  00CCB4  3A1A               	swapf	_idx,f,c
 23234  00CCB6  0E0F               	movlw	15
 23235  00CCB8  161A               	andwf	_idx,f,c
 23236                           
 23237                           ; BSR set to: 2
 23238                           ;buck.c: 387: now = (int32_t)os.input_voltage_adc[idx];
 23239  00CCBA  501A               	movf	_idx,w,c
 23240  00CCBC  0D02               	mullw	2
 23241  00CCBE  0E0A               	movlw	low (_os+10)
 23242  00CCC0  24F3               	addwf	prodl,w,c
 23243  00CCC2  6ED9               	movwf	fsr2l,c
 23244  00CCC4  0E02               	movlw	high (_os+10)
 23245  00CCC6  20F4               	addwfc	prodh,w,c
 23246  00CCC8  6EDA               	movwf	fsr2h,c
 23247  00CCCA  CFDE F2A5          	movff	postinc2,_now
 23248  00CCCE  CFDD F2A6          	movff	postdec2,_now+1
 23249  00CCD2  0E00               	movlw	0
 23250  00CCD4  BFA6               	btfsc	(_now+1)& (0+255),7,b
 23251  00CCD6  0EFF               	movlw	-1
 23252  00CCD8  6FA7               	movwf	(_now+2)& (0+255),b
 23253  00CCDA  6FA8               	movwf	(_now+3)& (0+255),b
 23254                           
 23255                           ; BSR set to: 2
 23256                           ;buck.c: 388: now *= (int32_t) os.input_current_adc[idx];
 23257  00CCDC  C2A5  F060         	movff	_now,___lmul@multiplier
 23258  00CCE0  C2A6  F061         	movff	_now+1,___lmul@multiplier+1
 23259  00CCE4  C2A7  F062         	movff	_now+2,___lmul@multiplier+2
 23260  00CCE8  C2A8  F063         	movff	_now+3,___lmul@multiplier+3
 23261  00CCEC  501A               	movf	_idx,w,c
 23262  00CCEE  0D02               	mullw	2
 23263  00CCF0  0E14               	movlw	low (_os+20)
 23264  00CCF2  24F3               	addwf	prodl,w,c
 23265  00CCF4  6ED9               	movwf	fsr2l,c
 23266  00CCF6  0E02               	movlw	high (_os+20)
 23267  00CCF8  20F4               	addwfc	prodh,w,c
 23268  00CCFA  6EDA               	movwf	fsr2h,c
 23269  00CCFC  CFDE F064          	movff	postinc2,___lmul@multiplicand
 23270  00CD00  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 23271  00CD04  0100               	movlb	0	; () banked
 23272  00CD06  0E00               	movlw	0
 23273  00CD08  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 23274  00CD0A  0EFF               	movlw	-1
 23275  00CD0C  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23276  00CD0E  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23277  00CD10  ECEB  F0BC         	call	___lmul	;wreg free
 23278  00CD14  C060  F2A5         	movff	?___lmul,_now
 23279  00CD18  C061  F2A6         	movff	?___lmul+1,_now+1
 23280  00CD1C  C062  F2A7         	movff	?___lmul+2,_now+2
 23281  00CD20  C063  F2A8         	movff	?___lmul+3,_now+3
 23282                           
 23283                           ;buck.c: 390: idx += 2;
 23284  00CD24  0E02               	movlw	2
 23285  00CD26  261A               	addwf	_idx,f,c
 23286                           
 23287                           ;buck.c: 391: idx &= 0b11;
 23288  00CD28  0E03               	movlw	3
 23289  00CD2A  161A               	andwf	_idx,f,c
 23290                           
 23291                           ;buck.c: 392: last = (int32_t)os.input_voltage_adc[idx];
 23292  00CD2C  501A               	movf	_idx,w,c
 23293  00CD2E  0D02               	mullw	2
 23294  00CD30  0E0A               	movlw	low (_os+10)
 23295  00CD32  24F3               	addwf	prodl,w,c
 23296  00CD34  6ED9               	movwf	fsr2l,c
 23297  00CD36  0E02               	movlw	high (_os+10)
 23298  00CD38  20F4               	addwfc	prodh,w,c
 23299  00CD3A  6EDA               	movwf	fsr2h,c
 23300  00CD3C  CFDE F2A9          	movff	postinc2,_last
 23301  00CD40  CFDD F2AA          	movff	postdec2,_last+1
 23302  00CD44  0102               	movlb	2	; () banked
 23303  00CD46  0E00               	movlw	0
 23304  00CD48  BFAA               	btfsc	(_last+1)& (0+255),7,b
 23305  00CD4A  0EFF               	movlw	-1
 23306  00CD4C  6FAB               	movwf	(_last+2)& (0+255),b
 23307  00CD4E  6FAC               	movwf	(_last+3)& (0+255),b
 23308                           
 23309                           ; BSR set to: 2
 23310                           ;buck.c: 393: last *= (int32_t) os.input_current_adc[idx];
 23311  00CD50  C2A9  F060         	movff	_last,___lmul@multiplier
 23312  00CD54  C2AA  F061         	movff	_last+1,___lmul@multiplier+1
 23313  00CD58  C2AB  F062         	movff	_last+2,___lmul@multiplier+2
 23314  00CD5C  C2AC  F063         	movff	_last+3,___lmul@multiplier+3
 23315  00CD60  501A               	movf	_idx,w,c
 23316  00CD62  0D02               	mullw	2
 23317  00CD64  0E14               	movlw	low (_os+20)
 23318  00CD66  24F3               	addwf	prodl,w,c
 23319  00CD68  6ED9               	movwf	fsr2l,c
 23320  00CD6A  0E02               	movlw	high (_os+20)
 23321  00CD6C  20F4               	addwfc	prodh,w,c
 23322  00CD6E  6EDA               	movwf	fsr2h,c
 23323  00CD70  CFDE F064          	movff	postinc2,___lmul@multiplicand
 23324  00CD74  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 23325  00CD78  0100               	movlb	0	; () banked
 23326  00CD7A  0E00               	movlw	0
 23327  00CD7C  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 23328  00CD7E  0EFF               	movlw	-1
 23329  00CD80  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23330  00CD82  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23331  00CD84  ECEB  F0BC         	call	___lmul	;wreg free
 23332  00CD88  C060  F2A9         	movff	?___lmul,_last
 23333  00CD8C  C061  F2AA         	movff	?___lmul+1,_last+1
 23334  00CD90  C062  F2AB         	movff	?___lmul+2,_last+2
 23335  00CD94  C063  F2AC         	movff	?___lmul+3,_last+3
 23336                           
 23337                           ;buck.c: 395: if(os.input_voltage>15185)
 23338  00CD98  0102               	movlb	2	; () banked
 23339  00CD9A  BF13               	btfsc	(_os+19)& (0+255),7,b	;volatile
 23340  00CD9C  D00B               	goto	l2388
 23341  00CD9E  0E52               	movlw	82
 23342  00CDA0  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 23343  00CDA2  0E3B               	movlw	59
 23344  00CDA4  5913               	subwfb	(_os+19)& (0+255),w,b	;volatile
 23345  00CDA6  A0D8               	btfss	status,0,c
 23346  00CDA8  D005               	goto	l2388
 23347                           
 23348                           ; BSR set to: 2
 23349                           ;buck.c: 396: {;buck.c: 397: _buck_set_dutycycle(buck_dutycycle+1);
 23350  00CDAA  0100               	movlb	0	; () banked
 23351  00CDAC  29FF               	incf	_buck_dutycycle& (0+255),w,b
 23352  00CDAE  ECCB  F0B8         	call	__buck_set_dutycycle
 23353                           
 23354                           ;buck.c: 398: }
 23355  00CDB2  0012               	return	
 23356  00CDB4                     l2388:
 23357                           
 23358                           ;buck.c: 399: else;buck.c: 400: {;buck.c: 401: _buck_set_dutycycle(buck_dutycycle-1);
 23359  00CDB4  0100               	movlb	0	; () banked
 23360  00CDB6  05FF               	decf	_buck_dutycycle& (0+255),w,b
 23361  00CDB8  ECCB  F0B8         	call	__buck_set_dutycycle
 23362                           
 23363                           ;buck.c: 402: };buck.c: 403: };buck.c: 404: };buck.c: 405: break;
 23364  00CDBC  0012               	return	
 23365  00CDBE                     l2390:
 23366                           
 23367                           ;buck.c: 408: if (os.timeSlot & 0b00010000)
 23368  00CDBE  0102               	movlb	2	; () banked
 23369  00CDC0  A908               	btfss	(_os+8)& (0+255),4,b	;volatile
 23370  00CDC2  0012               	return	
 23371                           
 23372                           ; BSR set to: 2
 23373                           ;buck.c: 409: {;buck.c: 411: if (os.output_voltage>battery_voltage_maximum)
 23374  00CDC4  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 23375  00CDC6  5DF9               	subwf	_battery_voltage_maximum& (0+255),w,b
 23376  00CDC8  51FA               	movf	(_battery_voltage_maximum+1)& (0+255),w,b
 23377  00CDCA  0A80               	xorlw	128
 23378  00CDCC  0100               	movlb	0	; () banked
 23379  00CDCE  6F76               	movwf	??__buck_operate_local& (0+255),b
 23380  00CDD0  0102               	movlb	2	; () banked
 23381  00CDD2  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 23382  00CDD4  0A80               	xorlw	128
 23383  00CDD6  0100               	movlb	0	; () banked
 23384  00CDD8  5976               	subwfb	??__buck_operate_local& (0+255),w,b
 23385  00CDDA  B0D8               	btfsc	status,0,c
 23386  00CDDC  D006               	goto	l2392
 23387                           
 23388                           ; BSR set to: 0
 23389                           ;buck.c: 412: {;buck.c: 413: _buck_set_dutycycle(buck_dutycycle-1);
 23390  00CDDE  05FF               	decf	_buck_dutycycle& (0+255),w,b
 23391  00CDE0  ECCB  F0B8         	call	__buck_set_dutycycle
 23392                           
 23393                           ;buck.c: 414: buck_dutycycle_last_step = -1;
 23394  00CDE4  0102               	movlb	2	; () banked
 23395  00CDE6  69CA               	setf	_buck_dutycycle_last_step& (0+255),b
 23396                           
 23397                           ;buck.c: 415: }
 23398  00CDE8  0012               	return	
 23399  00CDEA                     l2392:
 23400                           
 23401                           ;buck.c: 417: else if (os.input_current<200)
 23402                           
 23403                           ; BSR set to: 2
 23404  00CDEA  0102               	movlb	2	; () banked
 23405  00CDEC  BF1E               	btfsc	(_os+30)& (0+255),7,b	;volatile
 23406  00CDEE  D006               	goto	u26710
 23407  00CDF0  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 23408  00CDF2  E10E               	bnz	l27491
 23409  00CDF4  0EC8               	movlw	200
 23410  00CDF6  5D1D               	subwf	(_os+29)& (0+255),w,b	;volatile
 23411  00CDF8  B0D8               	btfsc	status,0,c
 23412  00CDFA  D00A               	goto	l2394
 23413  00CDFC                     u26710:
 23414                           
 23415                           ; BSR set to: 2
 23416                           ;buck.c: 418: {;buck.c: 419: tmp_dutycycle = buck_dutycycle-5;
 23417  00CDFC  0100               	movlb	0	; () banked
 23418  00CDFE  51FF               	movf	_buck_dutycycle& (0+255),w,b
 23419  00CE00  0FFB               	addlw	251
 23420  00CE02  6F7C               	movwf	__buck_operate_local@tmp_dutycycle& (0+255),b
 23421                           
 23422                           ; BSR set to: 0
 23423                           ;buck.c: 420: _buck_set_sync_async(BUCK_MODE_ASYNCHRONOUS, tmp_dutycycle);
 23424  00CE04  C07C  F062         	movff	__buck_operate_local@tmp_dutycycle,__buck_set_sync_async@new_dutycycle
 23425  00CE08  0E00               	movlw	0
 23426  00CE0A  ECB2  F0B7         	call	__buck_set_sync_async
 23427                           
 23428                           ;buck.c: 421: }
 23429  00CE0E  0012               	return	
 23430  00CE10                     l2394:
 23431  00CE10                     l27491:
 23432                           
 23433                           ;buck.c: 423: else;buck.c: 424: {;buck.c: 426: idx = os.timeSlot & 0b00110000;
 23434  00CE10  0102               	movlb	2	; () banked
 23435  00CE12  5108               	movf	(_os+8)& (0+255),w,b	;volatile
 23436  00CE14  0B30               	andlw	48
 23437  00CE16  6E1A               	movwf	_idx,c
 23438                           
 23439                           ;buck.c: 427: idx >>= 4;
 23440  00CE18  3A1A               	swapf	_idx,f,c
 23441  00CE1A  0E0F               	movlw	15
 23442  00CE1C  161A               	andwf	_idx,f,c
 23443                           
 23444                           ; BSR set to: 2
 23445                           ;buck.c: 428: now = (int32_t)os.input_voltage_adc[idx];
 23446  00CE1E  501A               	movf	_idx,w,c
 23447  00CE20  0D02               	mullw	2
 23448  00CE22  0E0A               	movlw	low (_os+10)
 23449  00CE24  24F3               	addwf	prodl,w,c
 23450  00CE26  6ED9               	movwf	fsr2l,c
 23451  00CE28  0E02               	movlw	high (_os+10)
 23452  00CE2A  20F4               	addwfc	prodh,w,c
 23453  00CE2C  6EDA               	movwf	fsr2h,c
 23454  00CE2E  CFDE F2A5          	movff	postinc2,_now
 23455  00CE32  CFDD F2A6          	movff	postdec2,_now+1
 23456  00CE36  0E00               	movlw	0
 23457  00CE38  BFA6               	btfsc	(_now+1)& (0+255),7,b
 23458  00CE3A  0EFF               	movlw	-1
 23459  00CE3C  6FA7               	movwf	(_now+2)& (0+255),b
 23460  00CE3E  6FA8               	movwf	(_now+3)& (0+255),b
 23461                           
 23462                           ; BSR set to: 2
 23463                           ;buck.c: 429: now *= (int32_t) os.input_current_adc[idx];
 23464  00CE40  C2A5  F060         	movff	_now,___lmul@multiplier
 23465  00CE44  C2A6  F061         	movff	_now+1,___lmul@multiplier+1
 23466  00CE48  C2A7  F062         	movff	_now+2,___lmul@multiplier+2
 23467  00CE4C  C2A8  F063         	movff	_now+3,___lmul@multiplier+3
 23468  00CE50  501A               	movf	_idx,w,c
 23469  00CE52  0D02               	mullw	2
 23470  00CE54  0E14               	movlw	low (_os+20)
 23471  00CE56  24F3               	addwf	prodl,w,c
 23472  00CE58  6ED9               	movwf	fsr2l,c
 23473  00CE5A  0E02               	movlw	high (_os+20)
 23474  00CE5C  20F4               	addwfc	prodh,w,c
 23475  00CE5E  6EDA               	movwf	fsr2h,c
 23476  00CE60  CFDE F064          	movff	postinc2,___lmul@multiplicand
 23477  00CE64  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 23478  00CE68  0100               	movlb	0	; () banked
 23479  00CE6A  0E00               	movlw	0
 23480  00CE6C  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 23481  00CE6E  0EFF               	movlw	-1
 23482  00CE70  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23483  00CE72  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23484  00CE74  ECEB  F0BC         	call	___lmul	;wreg free
 23485  00CE78  C060  F2A5         	movff	?___lmul,_now
 23486  00CE7C  C061  F2A6         	movff	?___lmul+1,_now+1
 23487  00CE80  C062  F2A7         	movff	?___lmul+2,_now+2
 23488  00CE84  C063  F2A8         	movff	?___lmul+3,_now+3
 23489                           
 23490                           ;buck.c: 431: idx += 2;
 23491  00CE88  0E02               	movlw	2
 23492  00CE8A  261A               	addwf	_idx,f,c
 23493                           
 23494                           ;buck.c: 432: idx &= 0b11;
 23495  00CE8C  0E03               	movlw	3
 23496  00CE8E  161A               	andwf	_idx,f,c
 23497                           
 23498                           ;buck.c: 433: last = (int32_t)os.input_voltage_adc[idx];
 23499  00CE90  501A               	movf	_idx,w,c
 23500  00CE92  0D02               	mullw	2
 23501  00CE94  0E0A               	movlw	low (_os+10)
 23502  00CE96  24F3               	addwf	prodl,w,c
 23503  00CE98  6ED9               	movwf	fsr2l,c
 23504  00CE9A  0E02               	movlw	high (_os+10)
 23505  00CE9C  20F4               	addwfc	prodh,w,c
 23506  00CE9E  6EDA               	movwf	fsr2h,c
 23507  00CEA0  CFDE F2A9          	movff	postinc2,_last
 23508  00CEA4  CFDD F2AA          	movff	postdec2,_last+1
 23509  00CEA8  0102               	movlb	2	; () banked
 23510  00CEAA  0E00               	movlw	0
 23511  00CEAC  BFAA               	btfsc	(_last+1)& (0+255),7,b
 23512  00CEAE  0EFF               	movlw	-1
 23513  00CEB0  6FAB               	movwf	(_last+2)& (0+255),b
 23514  00CEB2  6FAC               	movwf	(_last+3)& (0+255),b
 23515                           
 23516                           ; BSR set to: 2
 23517                           ;buck.c: 434: last *= (int32_t) os.input_current_adc[idx];
 23518  00CEB4  C2A9  F060         	movff	_last,___lmul@multiplier
 23519  00CEB8  C2AA  F061         	movff	_last+1,___lmul@multiplier+1
 23520  00CEBC  C2AB  F062         	movff	_last+2,___lmul@multiplier+2
 23521  00CEC0  C2AC  F063         	movff	_last+3,___lmul@multiplier+3
 23522  00CEC4  501A               	movf	_idx,w,c
 23523  00CEC6  0D02               	mullw	2
 23524  00CEC8  0E14               	movlw	low (_os+20)
 23525  00CECA  24F3               	addwf	prodl,w,c
 23526  00CECC  6ED9               	movwf	fsr2l,c
 23527  00CECE  0E02               	movlw	high (_os+20)
 23528  00CED0  20F4               	addwfc	prodh,w,c
 23529  00CED2  6EDA               	movwf	fsr2h,c
 23530  00CED4  CFDE F064          	movff	postinc2,___lmul@multiplicand
 23531  00CED8  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 23532  00CEDC  0100               	movlb	0	; () banked
 23533  00CEDE  0E00               	movlw	0
 23534  00CEE0  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 23535  00CEE2  0EFF               	movlw	-1
 23536  00CEE4  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23537  00CEE6  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23538  00CEE8  ECEB  F0BC         	call	___lmul	;wreg free
 23539  00CEEC  C060  F2A9         	movff	?___lmul,_last
 23540  00CEF0  C061  F2AA         	movff	?___lmul+1,_last+1
 23541  00CEF4  C062  F2AB         	movff	?___lmul+2,_last+2
 23542  00CEF8  C063  F2AC         	movff	?___lmul+3,_last+3
 23543                           
 23544                           ;buck.c: 436: if(os.input_voltage>15185)
 23545  00CEFC  0102               	movlb	2	; () banked
 23546  00CEFE  BF13               	btfsc	(_os+19)& (0+255),7,b	;volatile
 23547  00CF00  D00B               	goto	l2396
 23548  00CF02  0E52               	movlw	82
 23549  00CF04  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 23550  00CF06  0E3B               	movlw	59
 23551  00CF08  5913               	subwfb	(_os+19)& (0+255),w,b	;volatile
 23552  00CF0A  A0D8               	btfss	status,0,c
 23553  00CF0C  D005               	goto	l2396
 23554                           
 23555                           ; BSR set to: 2
 23556                           ;buck.c: 437: {;buck.c: 438: _buck_set_dutycycle(buck_dutycycle+1);
 23557  00CF0E  0100               	movlb	0	; () banked
 23558  00CF10  29FF               	incf	_buck_dutycycle& (0+255),w,b
 23559  00CF12  ECCB  F0B8         	call	__buck_set_dutycycle
 23560                           
 23561                           ;buck.c: 439: }
 23562  00CF16  0012               	return	
 23563  00CF18                     l2396:
 23564                           
 23565                           ;buck.c: 440: else;buck.c: 441: {;buck.c: 442: _buck_set_dutycycle(buck_dutycycle-1);
 23566  00CF18  0100               	movlb	0	; () banked
 23567  00CF1A  05FF               	decf	_buck_dutycycle& (0+255),w,b
 23568  00CF1C  ECCB  F0B8         	call	__buck_set_dutycycle
 23569                           
 23570                           ;buck.c: 443: };buck.c: 444: };buck.c: 445: };buck.c: 446: break;
 23571  00CF20  0012               	return	
 23572  00CF22                     
 23573                           ;buck.c: 449: buck_status = BUCK_STATUS_OFF;
 23574  00CF22  0E00               	movlw	0
 23575  00CF24  6E1E               	movwf	_buck_status,c
 23576                           
 23577                           ;buck.c: 450: }
 23578  00CF26  0012               	return	
 23579  00CF28                     l2365:
 23580  00CF28  501E               	movf	_buck_status,w,c
 23581                           
 23582                           ; Switch size 1, requested type "space"
 23583                           ; Number of cases is 4, Range of values is 0 to 3
 23584                           ; switch strategies available:
 23585                           ; Name         Instructions Cycles
 23586                           ; simple_byte           13     7 (average)
 23587                           ;	Chosen strategy is simple_byte
 23588  00CF2A  0A00               	xorlw	0	; case 0
 23589  00CF2C  B4D8               	btfsc	status,2,c
 23590  00CF2E  D5D2               	goto	l2366
 23591  00CF30  0A01               	xorlw	1	; case 1
 23592  00CF32  B4D8               	btfsc	status,2,c
 23593  00CF34  D61D               	goto	l2372
 23594  00CF36  0A03               	xorlw	3	; case 2
 23595  00CF38  B4D8               	btfsc	status,2,c
 23596  00CF3A  D652               	goto	l2376
 23597  00CF3C  0A01               	xorlw	1	; case 3
 23598  00CF3E  B4D8               	btfsc	status,2,c
 23599  00CF40  D73E               	goto	l2390
 23600  00CF42  D7EF               	goto	l2398
 23601  00CF44                     __end_of__buck_operate_local:
 23602                           	opt stack 0
 23603                           tblptru	equ	0xFF8
 23604                           tblptrh	equ	0xFF7
 23605                           tblptrl	equ	0xFF6
 23606                           tablat	equ	0xFF5
 23607                           prodh	equ	0xFF4
 23608                           prodl	equ	0xFF3
 23609                           intcon	equ	0xFF2
 23610                           intcon2	equ	0xFF1
 23611                           intcon3	equ	0xFF0
 23612                           postinc0	equ	0xFEE
 23613                           wreg	equ	0xFE8
 23614                           indf1	equ	0xFE7
 23615                           postdec1	equ	0xFE5
 23616                           plusw1	equ	0xFE3
 23617                           fsr1h	equ	0xFE2
 23618                           fsr1l	equ	0xFE1
 23619                           indf2	equ	0xFDF
 23620                           postinc2	equ	0xFDE
 23621                           postdec2	equ	0xFDD
 23622                           plusw2	equ	0xFDB
 23623                           fsr2h	equ	0xFDA
 23624                           fsr2l	equ	0xFD9
 23625                           status	equ	0xFD8
 23626                           
 23627 ;; *************** function __buck_stop *****************
 23628 ;; Defined at:
 23629 ;;		line 283 in file "buck.c"
 23630 ;; Parameters:    Size  Location     Type
 23631 ;;		None
 23632 ;; Auto vars:     Size  Location     Type
 23633 ;;		None
 23634 ;; Return value:  Size  Location     Type
 23635 ;;                  1    wreg      void 
 23636 ;; Registers used:
 23637 ;;		wreg, status,2, status,0
 23638 ;; Tracked objects:
 23639 ;;		On entry : 0/0
 23640 ;;		On exit  : 0/0
 23641 ;;		Unchanged: 0/0
 23642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23647 ;;Total ram usage:        0 bytes
 23648 ;; Hardware stack levels used:    1
 23649 ;; Hardware stack levels required when called:   10
 23650 ;; This function calls:
 23651 ;;		Nothing
 23652 ;; This function is called by:
 23653 ;;		__buck_operate_local
 23654 ;;		__buck_operate_remote
 23655 ;; This function uses a non-reentrant model
 23656 ;;
 23657                           
 23658                           	psect	text92
 23659  0188F2                     __ptext92:
 23660                           	opt stack 0
 23661  0188F2                     __buck_stop:
 23662                           	opt stack 18
 23663                           
 23664                           ;buck.c: 287: T2CONbits.T2OUTPS = 0b0000;
 23665                           
 23666                           ;incstack = 0
 23667  0188F2  96CA               	bcf	4042,3,c	;volatile
 23668  0188F4  98CA               	bcf	4042,4,c	;volatile
 23669  0188F6  9ACA               	bcf	4042,5,c	;volatile
 23670  0188F8  9CCA               	bcf	4042,6,c	;volatile
 23671                           
 23672                           ;buck.c: 288: PIR1bits.TMR2IF = 0;
 23673  0188FA  929E               	bcf	3998,1,c	;volatile
 23674  0188FC  A29E               	btfss	3998,1,c	;volatile
 23675  0188FE  D7FE               	goto	l2358
 23676                           
 23677                           ;buck.c: 291: CCP1CONbits.CCP1M = 0b0000;
 23678  018900  90BA               	bcf	4026,0,c	;volatile
 23679  018902  92BA               	bcf	4026,1,c	;volatile
 23680  018904  94BA               	bcf	4026,2,c	;volatile
 23681  018906  96BA               	bcf	4026,3,c	;volatile
 23682                           
 23683                           ;buck.c: 293: T2CONbits.TMR2ON = 0;
 23684  018908  94CA               	bcf	4042,2,c	;volatile
 23685                           
 23686                           ;buck.c: 295: LATBbits.LB1 = 0;
 23687  01890A  928A               	bcf	3978,1,c	;volatile
 23688                           
 23689                           ;buck.c: 297: if(buck_status<0x80)
 23690  01890C  0E80               	movlw	128
 23691  01890E  601E               	cpfslt	_buck_status,c
 23692  018910  D003               	goto	l2360
 23693                           
 23694                           ;buck.c: 298: {;buck.c: 299: buck_status = BUCK_STATUS_OFF;
 23695  018912  0E00               	movlw	0
 23696  018914  6E1E               	movwf	_buck_status,c
 23697                           
 23698                           ;buck.c: 300: }
 23699  018916  0012               	return	
 23700  018918                     l2360:
 23701                           
 23702                           ;buck.c: 301: else;buck.c: 302: {;buck.c: 303: buck_status = BUCK_STATUS_REMOTE_OFF;
 23703  018918  0E80               	movlw	128
 23704  01891A  6E1E               	movwf	_buck_status,c
 23705  01891C  0012               	return	
 23706  01891E                     __end_of__buck_stop:
 23707                           	opt stack 0
 23708                           tblptru	equ	0xFF8
 23709                           tblptrh	equ	0xFF7
 23710                           tblptrl	equ	0xFF6
 23711                           tablat	equ	0xFF5
 23712                           prodh	equ	0xFF4
 23713                           prodl	equ	0xFF3
 23714                           intcon	equ	0xFF2
 23715                           intcon2	equ	0xFF1
 23716                           intcon3	equ	0xFF0
 23717                           postinc0	equ	0xFEE
 23718                           wreg	equ	0xFE8
 23719                           indf1	equ	0xFE7
 23720                           postdec1	equ	0xFE5
 23721                           plusw1	equ	0xFE3
 23722                           fsr1h	equ	0xFE2
 23723                           fsr1l	equ	0xFE1
 23724                           indf2	equ	0xFDF
 23725                           postinc2	equ	0xFDE
 23726                           postdec2	equ	0xFDD
 23727                           plusw2	equ	0xFDB
 23728                           fsr2h	equ	0xFDA
 23729                           fsr2l	equ	0xFD9
 23730                           status	equ	0xFD8
 23731                           
 23732 ;; *************** function __buck_start *****************
 23733 ;; Defined at:
 23734 ;;		line 143 in file "buck.c"
 23735 ;; Parameters:    Size  Location     Type
 23736 ;;  mode            1    wreg     enum E6632
 23737 ;;  dutycycle       1   18[BANK0 ] unsigned char 
 23738 ;; Auto vars:     Size  Location     Type
 23739 ;;  mode            1   19[BANK0 ] enum E6632
 23740 ;;  cntr            1   21[BANK0 ] unsigned char 
 23741 ;;  startup_duty    1   20[BANK0 ] unsigned char 
 23742 ;; Return value:  Size  Location     Type
 23743 ;;                  1    wreg      void 
 23744 ;; Registers used:
 23745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23746 ;; Tracked objects:
 23747 ;;		On entry : 0/0
 23748 ;;		On exit  : 0/0
 23749 ;;		Unchanged: 0/0
 23750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23751 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23752 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23754 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23755 ;;Total ram usage:        4 bytes
 23756 ;; Hardware stack levels used:    1
 23757 ;; Hardware stack levels required when called:   12
 23758 ;; This function calls:
 23759 ;;		__buck_initial_dutycycle
 23760 ;;		__buck_set_dutycycle
 23761 ;;		__buck_set_sync_async
 23762 ;; This function is called by:
 23763 ;;		__buck_operate_local
 23764 ;;		__buck_operate_remote
 23765 ;; This function uses a non-reentrant model
 23766 ;;
 23767                           
 23768                           	psect	text93
 23769  015676                     __ptext93:
 23770                           	opt stack 0
 23771  015676                     __buck_start:
 23772                           	opt stack 16
 23773                           
 23774                           ;incstack = 0
 23775                           ;__buck_start@mode stored from wreg
 23776  015676  0100               	movlb	0	; () banked
 23777  015678  6F73               	movwf	__buck_start@mode& (0+255),b
 23778                           
 23779                           ;buck.c: 145: uint8_t startup_dutycycle;;buck.c: 146: uint8_t cntr;;buck.c: 149: calibra
      +                          tionParameters[CALIBRATION_INDEX_INPUT_CURRENT].AutoCalibration = 0;
 23780  01567A  0E00               	movlw	0
 23781  01567C  0103               	movlb	3	; () banked
 23782  01567E  6F3B               	movwf	(_calibrationParameters+35)& (0+255),b
 23783  015680  0E00               	movlw	0
 23784  015682  6F3A               	movwf	(_calibrationParameters+34)& (0+255),b
 23785                           
 23786                           ;buck.c: 150: calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibration = 
      +                          0;
 23787  015684  0E00               	movlw	0
 23788  015686  6F47               	movwf	(_calibrationParameters+47)& (0+255),b
 23789  015688  0E00               	movlw	0
 23790  01568A  6F46               	movwf	(_calibrationParameters+46)& (0+255),b
 23791                           
 23792                           ;buck.c: 153: for(cntr=0;cntr<4;++cntr)
 23793  01568C  0E00               	movlw	0
 23794  01568E  0100               	movlb	0	; () banked
 23795  015690  6F75               	movwf	__buck_start@cntr& (0+255),b
 23796  015692                     l25555:
 23797                           
 23798                           ; BSR set to: 0
 23799  015692  0E03               	movlw	3
 23800  015694  6575               	cpfsgt	__buck_start@cntr& (0+255),b
 23801  015696  D001               	goto	l2327
 23802  015698  D01E               	goto	u24100
 23803  01569A                     l2327:
 23804                           
 23805                           ; BSR set to: 0
 23806                           ;buck.c: 154: {;buck.c: 155: calibrationParameters[CALIBRATION_INDEX_INPUT_CURRENT].Auto
      +                          Calibration -= os.input_current_adc[cntr];
 23807                           
 23808                           ; BSR set to: 0
 23809  01569A  5175               	movf	__buck_start@cntr& (0+255),w,b
 23810  01569C  0D02               	mullw	2
 23811  01569E  0E14               	movlw	low (_os+20)
 23812  0156A0  24F3               	addwf	prodl,w,c
 23813  0156A2  6ED9               	movwf	fsr2l,c
 23814  0156A4  0E02               	movlw	high (_os+20)
 23815  0156A6  20F4               	addwfc	prodh,w,c
 23816  0156A8  6EDA               	movwf	fsr2h,c
 23817  0156AA  50DE               	movf	postinc2,w,c
 23818  0156AC  0103               	movlb	3	; () banked
 23819  0156AE  5F3A               	subwf	(_calibrationParameters+34)& (0+255),f,b
 23820  0156B0  50DD               	movf	postdec2,w,c
 23821  0156B2  5B3B               	subwfb	(_calibrationParameters+35)& (0+255),f,b
 23822                           
 23823                           ;buck.c: 156: calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURRENT].AutoCalibration -=
      +                           os.output_current_adc[cntr];
 23824  0156B4  0100               	movlb	0	; () banked
 23825  0156B6  5175               	movf	__buck_start@cntr& (0+255),w,b
 23826  0156B8  0D02               	mullw	2
 23827  0156BA  0E29               	movlw	low (_os+41)
 23828  0156BC  24F3               	addwf	prodl,w,c
 23829  0156BE  6ED9               	movwf	fsr2l,c
 23830  0156C0  0E02               	movlw	high (_os+41)
 23831  0156C2  20F4               	addwfc	prodh,w,c
 23832  0156C4  6EDA               	movwf	fsr2h,c
 23833  0156C6  50DE               	movf	postinc2,w,c
 23834  0156C8  0103               	movlb	3	; () banked
 23835  0156CA  5F46               	subwf	(_calibrationParameters+46)& (0+255),f,b
 23836  0156CC  50DD               	movf	postdec2,w,c
 23837  0156CE  5B47               	subwfb	(_calibrationParameters+47)& (0+255),f,b
 23838                           
 23839                           ; BSR set to: 3
 23840  0156D0  0100               	movlb	0	; () banked
 23841  0156D2  2B75               	incf	__buck_start@cntr& (0+255),f,b
 23842  0156D4  D7DE               	goto	l25555
 23843  0156D6                     u24100:
 23844                           
 23845                           ; BSR set to: 0
 23846                           ;buck.c: 159: };buck.c: 163: PR2 = 63;
 23847                           
 23848                           ; BSR set to: 0
 23849  0156D6  0E3F               	movlw	63
 23850  0156D8  6ECB               	movwf	4043,c	;volatile
 23851                           
 23852                           ;buck.c: 165: TMR2 = 0x00;
 23853  0156DA  0E00               	movlw	0
 23854  0156DC  6ECC               	movwf	4044,c	;volatile
 23855                           
 23856                           ; BSR set to: 0
 23857                           ;buck.c: 167: T2CONbits.T2OUTPS = 0b1111;
 23858  0156DE  86CA               	bsf	4042,3,c	;volatile
 23859  0156E0  88CA               	bsf	4042,4,c	;volatile
 23860  0156E2  8ACA               	bsf	4042,5,c	;volatile
 23861  0156E4  8CCA               	bsf	4042,6,c	;volatile
 23862                           
 23863                           ; BSR set to: 0
 23864                           ;buck.c: 169: PIR1bits.TMR2IF = 0;
 23865  0156E6  929E               	bcf	3998,1,c	;volatile
 23866                           
 23867                           ; BSR set to: 0
 23868                           ;buck.c: 172: if(buck_status<0x80)
 23869  0156E8  0E80               	movlw	128
 23870  0156EA  601E               	cpfslt	_buck_status,c
 23871  0156EC  D002               	goto	l2329
 23872                           
 23873                           ; BSR set to: 0
 23874                           ;buck.c: 173: {;buck.c: 174: buck_status = BUCK_STATUS_SYNCHRONOUS;
 23875  0156EE  0E03               	movlw	3
 23876  0156F0  D001               	goto	L13
 23877  0156F2                     l2329:
 23878                           
 23879                           ; BSR set to: 0
 23880                           ;buck.c: 176: else;buck.c: 177: {;buck.c: 178: buck_status = BUCK_STATUS_REMOTE_SYNCHRON
      +                          OUS;
 23881                           
 23882                           ; BSR set to: 0
 23883  0156F2  0E83               	movlw	131
 23884  0156F4                     L13:
 23885  0156F4  6E1E               	movwf	_buck_status,c
 23886                           
 23887                           ; BSR set to: 0
 23888                           ;buck.c: 179: };buck.c: 182: CCP1CON = 0x00;
 23889  0156F6  0E00               	movlw	0
 23890  0156F8  6EBA               	movwf	4026,c	;volatile
 23891                           
 23892                           ; BSR set to: 0
 23893                           ;buck.c: 184: startup_dutycycle = _buck_initial_dutycycle();
 23894  0156FA  EC1E  F0AD         	call	__buck_initial_dutycycle	;wreg free
 23895  0156FE  0100               	movlb	0	; () banked
 23896  015700  6F74               	movwf	__buck_start@startup_dutycycle& (0+255),b
 23897                           
 23898                           ; BSR set to: 0
 23899                           ;buck.c: 186: _buck_set_dutycycle(startup_dutycycle);
 23900  015702  5174               	movf	__buck_start@startup_dutycycle& (0+255),w,b
 23901  015704  ECCB  F0B8         	call	__buck_set_dutycycle
 23902                           
 23903                           ;buck.c: 188: INTCONbits.GIE = 0;
 23904  015708  9EF2               	bcf	intcon,7,c	;volatile
 23905                           
 23906                           ;buck.c: 190: T2CONbits.TMR2ON = 1;
 23907  01570A  84CA               	bsf	4042,2,c	;volatile
 23908                           
 23909                           ;buck.c: 192: CCP1CON |= 0b00001100;
 23910  01570C  0E0C               	movlw	12
 23911  01570E  12BA               	iorwf	4026,f,c	;volatile
 23912                           
 23913                           ;buck.c: 194: CCP1CON |= 0b10000000;
 23914  015710  8EBA               	bsf	4026,7,c	;volatile
 23915                           
 23916                           ;buck.c: 196: INTCONbits.GIE = 1;
 23917  015712  8EF2               	bsf	intcon,7,c	;volatile
 23918  015714  A29E               	btfss	3998,1,c	;volatile
 23919  015716  D7FE               	goto	l2332
 23920                           
 23921                           ;buck.c: 202: if(mode==BUCK_MODE_SYNCHRONOUS)
 23922  015718  0100               	movlb	0	; () banked
 23923  01571A  0573               	decf	__buck_start@mode& (0+255),w,b
 23924  01571C  A4D8               	btfss	status,2,c
 23925  01571E  D008               	goto	l2334
 23926                           
 23927                           ; BSR set to: 0
 23928                           ;buck.c: 203: {;buck.c: 205: if(dutycycle!=startup_dutycycle)
 23929  015720  5174               	movf	__buck_start@startup_dutycycle& (0+255),w,b
 23930  015722  1972               	xorwf	__buck_start@dutycycle& (0+255),w,b
 23931  015724  B4D8               	btfsc	status,2,c
 23932  015726  0012               	return	
 23933                           
 23934                           ; BSR set to: 0
 23935                           ;buck.c: 206: {;buck.c: 207: _buck_set_dutycycle(dutycycle);
 23936  015728  5172               	movf	__buck_start@dutycycle& (0+255),w,b
 23937  01572A  ECCB  F0B8         	call	__buck_set_dutycycle
 23938                           
 23939                           ;buck.c: 208: };buck.c: 209: }
 23940  01572E  0012               	return	
 23941  015730                     l2334:
 23942                           
 23943                           ;buck.c: 210: else;buck.c: 211: {;buck.c: 213: _buck_set_sync_async(BUCK_MODE_ASYNCHRONO
      +                          US, dutycycle);
 23944  015730  C072  F062         	movff	__buck_start@dutycycle,__buck_set_sync_async@new_dutycycle
 23945  015734  0E00               	movlw	0
 23946  015736  ECB2  F0B7         	call	__buck_set_sync_async
 23947  01573A  0012               	return	
 23948  01573C                     __end_of__buck_start:
 23949                           	opt stack 0
 23950                           tblptru	equ	0xFF8
 23951                           tblptrh	equ	0xFF7
 23952                           tblptrl	equ	0xFF6
 23953                           tablat	equ	0xFF5
 23954                           prodh	equ	0xFF4
 23955                           prodl	equ	0xFF3
 23956                           intcon	equ	0xFF2
 23957                           intcon2	equ	0xFF1
 23958                           intcon3	equ	0xFF0
 23959                           postinc0	equ	0xFEE
 23960                           wreg	equ	0xFE8
 23961                           indf1	equ	0xFE7
 23962                           postdec1	equ	0xFE5
 23963                           plusw1	equ	0xFE3
 23964                           fsr1h	equ	0xFE2
 23965                           fsr1l	equ	0xFE1
 23966                           indf2	equ	0xFDF
 23967                           postinc2	equ	0xFDE
 23968                           postdec2	equ	0xFDD
 23969                           plusw2	equ	0xFDB
 23970                           fsr2h	equ	0xFDA
 23971                           fsr2l	equ	0xFD9
 23972                           status	equ	0xFD8
 23973                           
 23974 ;; *************** function __buck_set_sync_async *****************
 23975 ;; Defined at:
 23976 ;;		line 217 in file "buck.c"
 23977 ;; Parameters:    Size  Location     Type
 23978 ;;  mode            1    wreg     enum E6632
 23979 ;;  new_dutycycl    1    2[BANK0 ] unsigned char 
 23980 ;; Auto vars:     Size  Location     Type
 23981 ;;  mode            1    3[BANK0 ] enum E6632
 23982 ;; Return value:  Size  Location     Type
 23983 ;;                  1    wreg      void 
 23984 ;; Registers used:
 23985 ;;		wreg, status,2, status,0, cstack
 23986 ;; Tracked objects:
 23987 ;;		On entry : 0/0
 23988 ;;		On exit  : 0/0
 23989 ;;		Unchanged: 0/0
 23990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23991 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23992 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23994 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23995 ;;Total ram usage:        2 bytes
 23996 ;; Hardware stack levels used:    1
 23997 ;; Hardware stack levels required when called:   11
 23998 ;; This function calls:
 23999 ;;		__buck_set_dutycycle
 24000 ;; This function is called by:
 24001 ;;		__buck_start
 24002 ;;		__buck_operate_local
 24003 ;;		__buck_operate_remote
 24004 ;; This function uses a non-reentrant model
 24005 ;;
 24006                           
 24007                           	psect	text94
 24008  016F64                     __ptext94:
 24009                           	opt stack 0
 24010  016F64                     __buck_set_sync_async:
 24011                           	opt stack 16
 24012                           
 24013                           ;incstack = 0
 24014                           ;__buck_set_sync_async@mode stored from wreg
 24015  016F64  0100               	movlb	0	; () banked
 24016  016F66  6F63               	movwf	__buck_set_sync_async@mode& (0+255),b
 24017                           
 24018                           ;buck.c: 219: switch(mode)
 24019  016F68  D02E               	goto	l2340
 24020  016F6A                     l2341:
 24021                           
 24022                           ; BSR set to: 0
 24023                           ;buck.c: 226: T2CONbits.T2OUTPS = 0b0000;
 24024  016F6A  96CA               	bcf	4042,3,c	;volatile
 24025  016F6C  98CA               	bcf	4042,4,c	;volatile
 24026  016F6E  9ACA               	bcf	4042,5,c	;volatile
 24027  016F70  9CCA               	bcf	4042,6,c	;volatile
 24028                           
 24029                           ;buck.c: 228: INTCONbits.GIE = 0;
 24030  016F72  9EF2               	bcf	intcon,7,c	;volatile
 24031                           
 24032                           ;buck.c: 230: PIR1bits.TMR2IF = 0;
 24033  016F74  929E               	bcf	3998,1,c	;volatile
 24034  016F76                     
 24035                           ; BSR set to: 0
 24036  016F76  A29E               	btfss	3998,1,c	;volatile
 24037  016F78  D7FE               	goto	l2343
 24038                           
 24039                           ;buck.c: 234: CCP1CONbits.P1M1 = 0;
 24040  016F7A  9EBA               	bcf	4026,7,c	;volatile
 24041                           
 24042                           ;buck.c: 235: CCP1CONbits.P1M0 = 0;
 24043  016F7C  9CBA               	bcf	4026,6,c	;volatile
 24044                           
 24045                           ;buck.c: 237: if(buck_status<0x80)
 24046  016F7E  0E80               	movlw	128
 24047  016F80  601E               	cpfslt	_buck_status,c
 24048  016F82  D002               	goto	l2345
 24049                           
 24050                           ;buck.c: 238: {;buck.c: 239: buck_status = BUCK_STATUS_ASYNCHRONOUS;
 24051  016F84  0E02               	movlw	2
 24052  016F86  D001               	goto	L14
 24053  016F88                     l2345:
 24054                           
 24055                           ;buck.c: 241: else;buck.c: 242: {;buck.c: 243: buck_status = BUCK_STATUS_REMOTE_ASYNCHRO
      +                          NOUS;
 24056  016F88  0E82               	movlw	130
 24057  016F8A                     L14:
 24058  016F8A  6E1E               	movwf	_buck_status,c
 24059                           
 24060                           ;buck.c: 244: };buck.c: 246: _buck_set_dutycycle(new_dutycycle);
 24061  016F8C  0100               	movlb	0	; () banked
 24062  016F8E  5162               	movf	__buck_set_sync_async@new_dutycycle& (0+255),w,b
 24063  016F90  ECCB  F0B8         	call	__buck_set_dutycycle
 24064                           
 24065                           ;buck.c: 248: INTCONbits.GIE = 1;
 24066  016F94  8EF2               	bsf	intcon,7,c	;volatile
 24067                           
 24068                           ;buck.c: 249: break;
 24069  016F96  0012               	return	
 24070  016F98                     
 24071                           ;buck.c: 255: if(buck_status<0x80)
 24072  016F98  0E80               	movlw	128
 24073  016F9A  601E               	cpfslt	_buck_status,c
 24074  016F9C  D002               	goto	l2349
 24075                           
 24076                           ;buck.c: 256: {;buck.c: 257: buck_status = BUCK_STATUS_SYNCHRONOUS;
 24077  016F9E  0E03               	movlw	3
 24078  016FA0  D001               	goto	L15
 24079  016FA2                     l2349:
 24080                           
 24081                           ;buck.c: 259: else;buck.c: 260: {;buck.c: 261: buck_status = BUCK_STATUS_REMOTE_SYNCHRON
      +                          OUS;
 24082  016FA2  0E83               	movlw	131
 24083  016FA4                     L15:
 24084  016FA4  6E1E               	movwf	_buck_status,c
 24085                           
 24086                           ;buck.c: 262: };buck.c: 265: T2CONbits.T2OUTPS = 0b0000;
 24087  016FA6  96CA               	bcf	4042,3,c	;volatile
 24088  016FA8  98CA               	bcf	4042,4,c	;volatile
 24089  016FAA  9ACA               	bcf	4042,5,c	;volatile
 24090  016FAC  9CCA               	bcf	4042,6,c	;volatile
 24091                           
 24092                           ;buck.c: 267: INTCONbits.GIE = 0;
 24093  016FAE  9EF2               	bcf	intcon,7,c	;volatile
 24094                           
 24095                           ;buck.c: 269: PIR1bits.TMR2IF = 0;
 24096  016FB0  929E               	bcf	3998,1,c	;volatile
 24097  016FB2  A29E               	btfss	3998,1,c	;volatile
 24098  016FB4  D7FE               	goto	l2352
 24099                           
 24100                           ;buck.c: 273: _buck_set_dutycycle(new_dutycycle);
 24101  016FB6  0100               	movlb	0	; () banked
 24102  016FB8  5162               	movf	__buck_set_sync_async@new_dutycycle& (0+255),w,b
 24103  016FBA  ECCB  F0B8         	call	__buck_set_dutycycle
 24104                           
 24105                           ;buck.c: 275: CCP1CONbits.P1M1 = 1;
 24106  016FBE  8EBA               	bsf	4026,7,c	;volatile
 24107                           
 24108                           ;buck.c: 276: CCP1CONbits.P1M0 = 0;
 24109  016FC0  9CBA               	bcf	4026,6,c	;volatile
 24110                           
 24111                           ;buck.c: 278: INTCONbits.GIE = 1;
 24112  016FC2  8EF2               	bsf	intcon,7,c	;volatile
 24113                           
 24114                           ;buck.c: 280: }
 24115                           
 24116                           ;buck.c: 279: break;
 24117  016FC4  0012               	return	
 24118  016FC6                     l2340:
 24119  016FC6  0100               	movlb	0	; () banked
 24120  016FC8  5163               	movf	__buck_set_sync_async@mode& (0+255),w,b
 24121                           
 24122                           ; Switch size 1, requested type "space"
 24123                           ; Number of cases is 2, Range of values is 0 to 1
 24124                           ; switch strategies available:
 24125                           ; Name         Instructions Cycles
 24126                           ; simple_byte            7     4 (average)
 24127                           ;	Chosen strategy is simple_byte
 24128  016FCA  0A00               	xorlw	0	; case 0
 24129  016FCC  B4D8               	btfsc	status,2,c
 24130  016FCE  D7CD               	goto	l2341
 24131  016FD0  0A01               	xorlw	1	; case 1
 24132  016FD2  A4D8               	btfss	status,2,c
 24133  016FD4  0012               	return	
 24134  016FD6  D7E0               	goto	l2348
 24135  016FD8                     __end_of__buck_set_sync_async:
 24136                           	opt stack 0
 24137                           tblptru	equ	0xFF8
 24138                           tblptrh	equ	0xFF7
 24139                           tblptrl	equ	0xFF6
 24140                           tablat	equ	0xFF5
 24141                           prodh	equ	0xFF4
 24142                           prodl	equ	0xFF3
 24143                           intcon	equ	0xFF2
 24144                           intcon2	equ	0xFF1
 24145                           intcon3	equ	0xFF0
 24146                           postinc0	equ	0xFEE
 24147                           wreg	equ	0xFE8
 24148                           indf1	equ	0xFE7
 24149                           postdec1	equ	0xFE5
 24150                           plusw1	equ	0xFE3
 24151                           fsr1h	equ	0xFE2
 24152                           fsr1l	equ	0xFE1
 24153                           indf2	equ	0xFDF
 24154                           postinc2	equ	0xFDE
 24155                           postdec2	equ	0xFDD
 24156                           plusw2	equ	0xFDB
 24157                           fsr2h	equ	0xFDA
 24158                           fsr2l	equ	0xFD9
 24159                           status	equ	0xFD8
 24160                           
 24161 ;; *************** function __buck_set_dutycycle *****************
 24162 ;; Defined at:
 24163 ;;		line 98 in file "buck.c"
 24164 ;; Parameters:    Size  Location     Type
 24165 ;;  dutyCycle       1    wreg     unsigned char 
 24166 ;; Auto vars:     Size  Location     Type
 24167 ;;  dutyCycle       1    1[BANK0 ] unsigned char 
 24168 ;; Return value:  Size  Location     Type
 24169 ;;                  1    wreg      void 
 24170 ;; Registers used:
 24171 ;;		wreg, status,2, status,0
 24172 ;; Tracked objects:
 24173 ;;		On entry : 0/0
 24174 ;;		On exit  : 0/0
 24175 ;;		Unchanged: 0/0
 24176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24178 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24179 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24180 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24181 ;;Total ram usage:        2 bytes
 24182 ;; Hardware stack levels used:    1
 24183 ;; Hardware stack levels required when called:   10
 24184 ;; This function calls:
 24185 ;;		Nothing
 24186 ;; This function is called by:
 24187 ;;		__buck_start
 24188 ;;		__buck_set_sync_async
 24189 ;;		__buck_operate_local
 24190 ;;		__buck_operate_remote
 24191 ;; This function uses a non-reentrant model
 24192 ;;
 24193                           
 24194                           	psect	text95
 24195  017196                     __ptext95:
 24196                           	opt stack 0
 24197  017196                     __buck_set_dutycycle:
 24198                           	opt stack 16
 24199                           
 24200                           ;incstack = 0
 24201                           ;__buck_set_dutycycle@dutyCycle stored from wreg
 24202  017196  0100               	movlb	0	; () banked
 24203  017198  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 24204                           
 24205                           ;buck.c: 101: if(dutyCycle>242)
 24206  01719A  0EF2               	movlw	242
 24207  01719C  0100               	movlb	0	; () banked
 24208  01719E  6561               	cpfsgt	__buck_set_dutycycle@dutyCycle& (0+255),b
 24209  0171A0  D002               	goto	l2308
 24210                           
 24211                           ; BSR set to: 0
 24212                           ;buck.c: 102: dutyCycle = 242;
 24213  0171A2  0EF2               	movlw	242
 24214  0171A4  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 24215  0171A6                     l2308:
 24216                           
 24217                           ; BSR set to: 0
 24218                           ;buck.c: 103: if(buck_status==BUCK_STATUS_SYNCHRONOUS || buck_status==BUCK_STATUS_REMOTE
      +                          _SYNCHRONOUS)
 24219                           
 24220                           ; BSR set to: 0
 24221  0171A6  0E03               	movlw	3
 24222  0171A8  181E               	xorwf	_buck_status,w,c
 24223  0171AA  B4D8               	btfsc	status,2,c
 24224  0171AC  D004               	goto	u21970
 24225                           
 24226                           ; BSR set to: 0
 24227  0171AE  0E83               	movlw	131
 24228  0171B0  181E               	xorwf	_buck_status,w,c
 24229  0171B2  A4D8               	btfss	status,2,c
 24230  0171B4  D005               	goto	l2312
 24231  0171B6                     u21970:
 24232                           
 24233                           ; BSR set to: 0
 24234                           ;buck.c: 104: {;buck.c: 105: if(dutyCycle<150)
 24235                           
 24236                           ; BSR set to: 0
 24237  0171B6  0E96               	movlw	150
 24238  0171B8  6161               	cpfslt	__buck_set_dutycycle@dutyCycle& (0+255),b
 24239  0171BA  D002               	goto	l2312
 24240                           
 24241                           ; BSR set to: 0
 24242                           ;buck.c: 106: dutyCycle = 150;
 24243  0171BC  0E96               	movlw	150
 24244  0171BE  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 24245  0171C0                     l2312:
 24246                           
 24247                           ; BSR set to: 0
 24248                           ;buck.c: 107: };buck.c: 108: if(buck_status==BUCK_STATUS_ASYNCHRONOUS || buck_status==BU
      +                          CK_STATUS_REMOTE_ASYNCHRONOUS)
 24249                           
 24250                           ; BSR set to: 0
 24251                           
 24252                           ; BSR set to: 0
 24253  0171C0  0E02               	movlw	2
 24254  0171C2  181E               	xorwf	_buck_status,w,c
 24255  0171C4  B4D8               	btfsc	status,2,c
 24256  0171C6  D004               	goto	u22000
 24257                           
 24258                           ; BSR set to: 0
 24259  0171C8  0E82               	movlw	130
 24260  0171CA  181E               	xorwf	_buck_status,w,c
 24261  0171CC  A4D8               	btfss	status,2,c
 24262  0171CE  D005               	goto	l2316
 24263  0171D0                     u22000:
 24264                           
 24265                           ; BSR set to: 0
 24266                           ;buck.c: 109: {;buck.c: 110: if(dutyCycle<40)
 24267                           
 24268                           ; BSR set to: 0
 24269  0171D0  0E28               	movlw	40
 24270  0171D2  6161               	cpfslt	__buck_set_dutycycle@dutyCycle& (0+255),b
 24271  0171D4  D002               	goto	l2316
 24272                           
 24273                           ; BSR set to: 0
 24274                           ;buck.c: 111: dutyCycle = 40;
 24275  0171D6  0E28               	movlw	40
 24276  0171D8  6F61               	movwf	__buck_set_dutycycle@dutyCycle& (0+255),b
 24277  0171DA                     l2316:
 24278                           
 24279                           ; BSR set to: 0
 24280                           ;buck.c: 112: };buck.c: 114: buck_dutycycle = dutyCycle;
 24281                           
 24282                           ; BSR set to: 0
 24283                           
 24284                           ; BSR set to: 0
 24285  0171DA  C061  F0FF         	movff	__buck_set_dutycycle@dutyCycle,_buck_dutycycle
 24286                           
 24287                           ; BSR set to: 0
 24288                           ;buck.c: 116: INTCONbits.GIE = 0;
 24289  0171DE  9EF2               	bcf	intcon,7,c	;volatile
 24290                           
 24291                           ; BSR set to: 0
 24292                           ;buck.c: 118: CCP1CONbits.DC1B = (uint8_t) (dutyCycle&0b11);
 24293  0171E0  C061  F060         	movff	__buck_set_dutycycle@dutyCycle,??__buck_set_dutycycle
 24294  0171E4  0E03               	movlw	3
 24295  0171E6  1760               	andwf	??__buck_set_dutycycle& (0+255),f,b
 24296  0171E8  3B60               	swapf	??__buck_set_dutycycle& (0+255),f,b
 24297  0171EA  50BA               	movf	4026,w,c	;volatile
 24298  0171EC  1960               	xorwf	??__buck_set_dutycycle& (0+255),w,b
 24299  0171EE  0BCF               	andlw	-49
 24300  0171F0  1960               	xorwf	??__buck_set_dutycycle& (0+255),w,b
 24301  0171F2  6EBA               	movwf	4026,c	;volatile
 24302                           
 24303                           ; BSR set to: 0
 24304                           ;buck.c: 120: CCPR1L = (uint8_t) (dutyCycle>>2);
 24305  0171F4  4161               	rrncf	__buck_set_dutycycle@dutyCycle& (0+255),w,b
 24306  0171F6  42E8               	rrncf	wreg,f,c
 24307  0171F8  0B3F               	andlw	63
 24308  0171FA  6EBB               	movwf	4027,c	;volatile
 24309                           
 24310                           ; BSR set to: 0
 24311                           ;buck.c: 122: INTCONbits.GIE = 1;
 24312  0171FC  8EF2               	bsf	intcon,7,c	;volatile
 24313                           
 24314                           ; BSR set to: 0
 24315  0171FE  0012               	return		;funcret
 24316  017200                     __end_of__buck_set_dutycycle:
 24317                           	opt stack 0
 24318                           tblptru	equ	0xFF8
 24319                           tblptrh	equ	0xFF7
 24320                           tblptrl	equ	0xFF6
 24321                           tablat	equ	0xFF5
 24322                           prodh	equ	0xFF4
 24323                           prodl	equ	0xFF3
 24324                           intcon	equ	0xFF2
 24325                           intcon2	equ	0xFF1
 24326                           intcon3	equ	0xFF0
 24327                           postinc0	equ	0xFEE
 24328                           wreg	equ	0xFE8
 24329                           indf1	equ	0xFE7
 24330                           postdec1	equ	0xFE5
 24331                           plusw1	equ	0xFE3
 24332                           fsr1h	equ	0xFE2
 24333                           fsr1l	equ	0xFE1
 24334                           indf2	equ	0xFDF
 24335                           postinc2	equ	0xFDE
 24336                           postdec2	equ	0xFDD
 24337                           plusw2	equ	0xFDB
 24338                           fsr2h	equ	0xFDA
 24339                           fsr2l	equ	0xFD9
 24340                           status	equ	0xFD8
 24341                           
 24342 ;; *************** function __buck_initial_dutycycle *****************
 24343 ;; Defined at:
 24344 ;;		line 81 in file "buck.c"
 24345 ;; Parameters:    Size  Location     Type
 24346 ;;		None
 24347 ;; Auto vars:     Size  Location     Type
 24348 ;;  dc              4   14[BANK0 ] unsigned long 
 24349 ;; Return value:  Size  Location     Type
 24350 ;;                  1    wreg      unsigned char 
 24351 ;; Registers used:
 24352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24353 ;; Tracked objects:
 24354 ;;		On entry : 0/0
 24355 ;;		On exit  : 0/0
 24356 ;;		Unchanged: 0/0
 24357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24359 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24360 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24361 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24362 ;;Total ram usage:        5 bytes
 24363 ;; Hardware stack levels used:    1
 24364 ;; Hardware stack levels required when called:   11
 24365 ;; This function calls:
 24366 ;;		___lldiv
 24367 ;; This function is called by:
 24368 ;;		__buck_start
 24369 ;;		__buck_operate_local
 24370 ;;		__buck_operate_remote
 24371 ;; This function uses a non-reentrant model
 24372 ;;
 24373                           
 24374                           	psect	text96
 24375  015A3C                     __ptext96:
 24376                           	opt stack 0
 24377  015A3C                     __buck_initial_dutycycle:
 24378                           	opt stack 16
 24379                           
 24380                           ;buck.c: 83: uint32_t dc;;buck.c: 85: if(os.input_voltage<os.output_voltage)
 24381                           
 24382                           ; BSR set to: 0
 24383                           ;incstack = 0
 24384  015A3C  0102               	movlb	2	; () banked
 24385  015A3E  5127               	movf	(_os+39)& (0+255),w,b	;volatile
 24386  015A40  5D12               	subwf	(_os+18)& (0+255),w,b	;volatile
 24387  015A42  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 24388  015A44  0A80               	xorlw	128
 24389  015A46  0100               	movlb	0	; () banked
 24390  015A48  6F6D               	movwf	??__buck_initial_dutycycle& (0+255),b
 24391  015A4A  0102               	movlb	2	; () banked
 24392  015A4C  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 24393  015A4E  0A80               	xorlw	128
 24394  015A50  0100               	movlb	0	; () banked
 24395  015A52  596D               	subwfb	??__buck_initial_dutycycle& (0+255),w,b
 24396  015A54  B0D8               	btfsc	status,0,c
 24397  015A56  D002               	goto	l2302
 24398                           
 24399                           ; BSR set to: 0
 24400                           ;buck.c: 86: return 242;
 24401  015A58  0EF2               	movlw	242
 24402                           
 24403                           ; BSR set to: 0
 24404  015A5A  0012               	return	
 24405  015A5C                     l2302:
 24406                           
 24407                           ; BSR set to: 0
 24408                           ;buck.c: 87: dc = (uint32_t) os.output_voltage;
 24409                           
 24410                           ; BSR set to: 0
 24411  015A5C  EE22  F027         	lfsr	2,_os+39	;volatile
 24412  015A60  CFDE F06E          	movff	postinc2,__buck_initial_dutycycle@dc
 24413  015A64  CFDD F06F          	movff	postdec2,__buck_initial_dutycycle@dc+1
 24414  015A68  0E00               	movlw	0
 24415  015A6A  BF6F               	btfsc	(__buck_initial_dutycycle@dc+1)& (0+255),7,b
 24416  015A6C  0EFF               	movlw	-1
 24417  015A6E  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 24418  015A70  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 24419                           
 24420                           ; BSR set to: 0
 24421                           ;buck.c: 88: dc <<= 8;
 24422  015A72  C070  F071         	movff	__buck_initial_dutycycle@dc+2,__buck_initial_dutycycle@dc+3
 24423  015A76  C06F  F070         	movff	__buck_initial_dutycycle@dc+1,__buck_initial_dutycycle@dc+2
 24424  015A7A  C06E  F06F         	movff	__buck_initial_dutycycle@dc,__buck_initial_dutycycle@dc+1
 24425  015A7E  6B6E               	clrf	__buck_initial_dutycycle@dc& (0+255),b
 24426                           
 24427                           ; BSR set to: 0
 24428                           ;buck.c: 89: dc /= (uint16_t) os.input_voltage;
 24429  015A80  C06E  F060         	movff	__buck_initial_dutycycle@dc,___lldiv@dividend
 24430  015A84  C06F  F061         	movff	__buck_initial_dutycycle@dc+1,___lldiv@dividend+1
 24431  015A88  C070  F062         	movff	__buck_initial_dutycycle@dc+2,___lldiv@dividend+2
 24432  015A8C  C071  F063         	movff	__buck_initial_dutycycle@dc+3,___lldiv@dividend+3
 24433  015A90  C212  F064         	movff	_os+18,___lldiv@divisor	;volatile
 24434  015A94  C213  F065         	movff	_os+19,___lldiv@divisor+1	;volatile
 24435  015A98  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 24436  015A9A  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 24437  015A9C  ECBD  F0B4         	call	___lldiv	;wreg free
 24438  015AA0  C060  F06E         	movff	?___lldiv,__buck_initial_dutycycle@dc
 24439  015AA4  C061  F06F         	movff	?___lldiv+1,__buck_initial_dutycycle@dc+1
 24440  015AA8  C062  F070         	movff	?___lldiv+2,__buck_initial_dutycycle@dc+2
 24441  015AAC  C063  F071         	movff	?___lldiv+3,__buck_initial_dutycycle@dc+3
 24442                           
 24443                           ;buck.c: 91: if(dc>242)
 24444  015AB0  0100               	movlb	0	; () banked
 24445  015AB2  5171               	movf	(__buck_initial_dutycycle@dc+3)& (0+255),w,b
 24446  015AB4  1170               	iorwf	(__buck_initial_dutycycle@dc+2)& (0+255),w,b
 24447  015AB6  116F               	iorwf	(__buck_initial_dutycycle@dc+1)& (0+255),w,b
 24448  015AB8  E104               	bnz	u22610
 24449  015ABA  0EF3               	movlw	243
 24450  015ABC  5D6E               	subwf	__buck_initial_dutycycle@dc& (0+255),w,b
 24451  015ABE  A0D8               	btfss	status,0,c
 24452  015AC0  D008               	goto	l2304
 24453  015AC2                     u22610:
 24454                           
 24455                           ; BSR set to: 0
 24456                           ;buck.c: 92: dc = 242;
 24457  015AC2  0EF2               	movlw	242
 24458  015AC4  6F6E               	movwf	__buck_initial_dutycycle@dc& (0+255),b
 24459  015AC6  0E00               	movlw	0
 24460  015AC8  6F6F               	movwf	(__buck_initial_dutycycle@dc+1)& (0+255),b
 24461  015ACA  0E00               	movlw	0
 24462  015ACC  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 24463  015ACE  0E00               	movlw	0
 24464  015AD0  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 24465  015AD2                     l2304:
 24466                           
 24467                           ; BSR set to: 0
 24468                           ;buck.c: 93: if(dc<150)
 24469                           
 24470                           ; BSR set to: 0
 24471  015AD2  5171               	movf	(__buck_initial_dutycycle@dc+3)& (0+255),w,b
 24472  015AD4  1170               	iorwf	(__buck_initial_dutycycle@dc+2)& (0+255),w,b
 24473  015AD6  116F               	iorwf	(__buck_initial_dutycycle@dc+1)& (0+255),w,b
 24474  015AD8  E10C               	bnz	l2305
 24475  015ADA  0E96               	movlw	150
 24476  015ADC  5D6E               	subwf	__buck_initial_dutycycle@dc& (0+255),w,b
 24477  015ADE  B0D8               	btfsc	status,0,c
 24478  015AE0  D008               	goto	l2305
 24479                           
 24480                           ; BSR set to: 0
 24481                           ;buck.c: 94: dc = 150;
 24482  015AE2  0E96               	movlw	150
 24483  015AE4  6F6E               	movwf	__buck_initial_dutycycle@dc& (0+255),b
 24484  015AE6  0E00               	movlw	0
 24485  015AE8  6F6F               	movwf	(__buck_initial_dutycycle@dc+1)& (0+255),b
 24486  015AEA  0E00               	movlw	0
 24487  015AEC  6F70               	movwf	(__buck_initial_dutycycle@dc+2)& (0+255),b
 24488  015AEE  0E00               	movlw	0
 24489  015AF0  6F71               	movwf	(__buck_initial_dutycycle@dc+3)& (0+255),b
 24490  015AF2                     l2305:
 24491                           
 24492                           ; BSR set to: 0
 24493                           ;buck.c: 95: return (uint8_t) dc;
 24494  015AF2  516E               	movf	__buck_initial_dutycycle@dc& (0+255),w,b
 24495  015AF4  0012               	return	
 24496  015AF6                     __end_of__buck_initial_dutycycle:
 24497                           	opt stack 0
 24498                           tblptru	equ	0xFF8
 24499                           tblptrh	equ	0xFF7
 24500                           tblptrl	equ	0xFF6
 24501                           tablat	equ	0xFF5
 24502                           prodh	equ	0xFF4
 24503                           prodl	equ	0xFF3
 24504                           intcon	equ	0xFF2
 24505                           intcon2	equ	0xFF1
 24506                           intcon3	equ	0xFF0
 24507                           postinc0	equ	0xFEE
 24508                           wreg	equ	0xFE8
 24509                           indf1	equ	0xFE7
 24510                           postdec1	equ	0xFE5
 24511                           plusw1	equ	0xFE3
 24512                           fsr1h	equ	0xFE2
 24513                           fsr1l	equ	0xFE1
 24514                           indf2	equ	0xFDF
 24515                           postinc2	equ	0xFDE
 24516                           postdec2	equ	0xFDD
 24517                           plusw2	equ	0xFDB
 24518                           fsr2h	equ	0xFDA
 24519                           fsr2l	equ	0xFD9
 24520                           status	equ	0xFD8
 24521                           
 24522 ;; *************** function ___lldiv *****************
 24523 ;; Defined at:
 24524 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 24525 ;; Parameters:    Size  Location     Type
 24526 ;;  dividend        4    0[BANK0 ] unsigned long 
 24527 ;;  divisor         4    4[BANK0 ] unsigned long 
 24528 ;; Auto vars:     Size  Location     Type
 24529 ;;  quotient        4    8[BANK0 ] unsigned long 
 24530 ;;  counter         1   12[BANK0 ] unsigned char 
 24531 ;; Return value:  Size  Location     Type
 24532 ;;                  4    0[BANK0 ] unsigned long 
 24533 ;; Registers used:
 24534 ;;		wreg, status,2, status,0
 24535 ;; Tracked objects:
 24536 ;;		On entry : 0/0
 24537 ;;		On exit  : 0/0
 24538 ;;		Unchanged: 0/0
 24539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24540 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24541 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24543 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24544 ;;Total ram usage:       13 bytes
 24545 ;; Hardware stack levels used:    1
 24546 ;; Hardware stack levels required when called:   10
 24547 ;; This function calls:
 24548 ;;		Nothing
 24549 ;; This function is called by:
 24550 ;;		__buck_initial_dutycycle
 24551 ;;		__get_output_power
 24552 ;;		_log_generate_entry
 24553 ;; This function uses a non-reentrant model
 24554 ;;
 24555                           
 24556                           	psect	text97
 24557  01697A                     __ptext97:
 24558                           	opt stack 0
 24559  01697A                     ___lldiv:
 24560                           	opt stack 18
 24561                           
 24562                           ; BSR set to: 0
 24563                           ;incstack = 0
 24564  01697A  0E00               	movlw	0
 24565  01697C  0100               	movlb	0	; () banked
 24566  01697E  6F68               	movwf	___lldiv@quotient& (0+255),b
 24567  016980  0E00               	movlw	0
 24568  016982  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 24569  016984  0E00               	movlw	0
 24570  016986  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 24571  016988  0E00               	movlw	0
 24572  01698A  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 24573                           
 24574                           ; BSR set to: 0
 24575  01698C  5164               	movf	___lldiv@divisor& (0+255),w,b
 24576  01698E  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 24577  016990  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 24578  016992  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 24579  016994  B4D8               	btfsc	status,2,c
 24580  016996  D02A               	goto	l3848
 24581                           
 24582                           ; BSR set to: 0
 24583  016998  0E01               	movlw	1
 24584  01699A  6F6C               	movwf	___lldiv@counter& (0+255),b
 24585  01699C  D006               	goto	l3843
 24586  01699E                     
 24587                           ; BSR set to: 0
 24588                           
 24589                           ; BSR set to: 0
 24590  01699E  90D8               	bcf	status,0,c
 24591  0169A0  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 24592  0169A2  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 24593  0169A4  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 24594  0169A6  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 24595  0169A8  2B6C               	incf	___lldiv@counter& (0+255),f,b
 24596  0169AA                     l3843:
 24597                           
 24598                           ; BSR set to: 0
 24599                           
 24600                           ; BSR set to: 0
 24601  0169AA  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 24602  0169AC  D7F8               	goto	l3844
 24603  0169AE                     u22440:
 24604                           
 24605                           ; BSR set to: 0
 24606                           
 24607                           ; BSR set to: 0
 24608                           
 24609                           ; BSR set to: 0
 24610  0169AE  90D8               	bcf	status,0,c
 24611  0169B0  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 24612  0169B2  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 24613  0169B4  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 24614  0169B6  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 24615                           
 24616                           ; BSR set to: 0
 24617  0169B8  5164               	movf	___lldiv@divisor& (0+255),w,b
 24618  0169BA  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 24619  0169BC  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24620  0169BE  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 24621  0169C0  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24622  0169C2  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 24623  0169C4  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24624  0169C6  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 24625  0169C8  A0D8               	btfss	status,0,c
 24626  0169CA  D009               	goto	l3847
 24627                           
 24628                           ; BSR set to: 0
 24629  0169CC  5164               	movf	___lldiv@divisor& (0+255),w,b
 24630  0169CE  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 24631  0169D0  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24632  0169D2  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 24633  0169D4  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24634  0169D6  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 24635  0169D8  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24636  0169DA  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 24637                           
 24638                           ; BSR set to: 0
 24639  0169DC  8168               	bsf	___lldiv@quotient& (0+255),0,b
 24640  0169DE                     l3847:
 24641                           
 24642                           ; BSR set to: 0
 24643                           
 24644                           ; BSR set to: 0
 24645  0169DE  90D8               	bcf	status,0,c
 24646  0169E0  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 24647  0169E2  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 24648  0169E4  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 24649  0169E6  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 24650                           
 24651                           ; BSR set to: 0
 24652  0169E8  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 24653  0169EA  D7E1               	goto	u22440
 24654  0169EC                     l3848:
 24655                           
 24656                           ; BSR set to: 0
 24657                           
 24658                           ; BSR set to: 0
 24659  0169EC  C068  F060         	movff	___lldiv@quotient,?___lldiv
 24660  0169F0  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 24661  0169F4  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 24662  0169F8  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 24663                           
 24664                           ; BSR set to: 0
 24665  0169FC  0012               	return		;funcret
 24666  0169FE                     __end_of___lldiv:
 24667                           	opt stack 0
 24668                           tblptru	equ	0xFF8
 24669                           tblptrh	equ	0xFF7
 24670                           tblptrl	equ	0xFF6
 24671                           tablat	equ	0xFF5
 24672                           prodh	equ	0xFF4
 24673                           prodl	equ	0xFF3
 24674                           intcon	equ	0xFF2
 24675                           intcon2	equ	0xFF1
 24676                           intcon3	equ	0xFF0
 24677                           postinc0	equ	0xFEE
 24678                           wreg	equ	0xFE8
 24679                           indf1	equ	0xFE7
 24680                           postdec1	equ	0xFE5
 24681                           plusw1	equ	0xFE3
 24682                           fsr1h	equ	0xFE2
 24683                           fsr1l	equ	0xFE1
 24684                           indf2	equ	0xFDF
 24685                           postinc2	equ	0xFDE
 24686                           postdec2	equ	0xFDD
 24687                           plusw2	equ	0xFDB
 24688                           fsr2h	equ	0xFDA
 24689                           fsr2l	equ	0xFD9
 24690                           status	equ	0xFD8
 24691                           
 24692 ;; *************** function _adc_read *****************
 24693 ;; Defined at:
 24694 ;;		line 31 in file "adc.c"
 24695 ;; Parameters:    Size  Location     Type
 24696 ;;  channel         1    wreg     enum E6899
 24697 ;; Auto vars:     Size  Location     Type
 24698 ;;  channel         1    2[BANK0 ] enum E6899
 24699 ;;  adc_value       2    3[BANK0 ] unsigned int 
 24700 ;; Return value:  Size  Location     Type
 24701 ;;                  2    0[BANK0 ] unsigned int 
 24702 ;; Registers used:
 24703 ;;		wreg, status,2, status,0
 24704 ;; Tracked objects:
 24705 ;;		On entry : 0/0
 24706 ;;		On exit  : 0/0
 24707 ;;		Unchanged: 0/0
 24708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24709 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24710 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24712 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24713 ;;Total ram usage:        5 bytes
 24714 ;; Hardware stack levels used:    1
 24715 ;; Hardware stack levels required when called:   10
 24716 ;; This function calls:
 24717 ;;		Nothing
 24718 ;; This function is called by:
 24719 ;;		_main
 24720 ;; This function uses a non-reentrant model
 24721 ;;
 24722                           
 24723                           	psect	text98
 24724  0167E8                     __ptext98:
 24725                           	opt stack 0
 24726  0167E8                     _adc_read:
 24727                           	opt stack 20
 24728                           
 24729                           ; BSR set to: 0
 24730                           ;incstack = 0
 24731                           ;adc_read@channel stored from wreg
 24732  0167E8  0100               	movlb	0	; () banked
 24733  0167EA  6F62               	movwf	adc_read@channel& (0+255),b
 24734                           
 24735                           ;adc.c: 33: uint16_t adc_value;;adc.c: 35: switch(channel)
 24736  0167EC  D010               	goto	l2509
 24737  0167EE                     
 24738                           ;adc.c: 38: ADCON0bits.CHS = 0b1100;
 24739  0167EE  50C2               	movf	4034,w,c	;volatile
 24740  0167F0  0BC3               	andlw	-61
 24741  0167F2  0930               	iorlw	48
 24742  0167F4  D007               	goto	L17
 24743  0167F6                     
 24744                           ;adc.c: 41: ADCON0bits.CHS = 0b0001;
 24745  0167F6  50C2               	movf	4034,w,c	;volatile
 24746  0167F8  0BC3               	andlw	-61
 24747  0167FA  0904               	iorlw	4
 24748  0167FC  D003               	goto	L17
 24749  0167FE                     
 24750                           ;adc.c: 44: ADCON0bits.CHS = 0b0010;
 24751  0167FE  50C2               	movf	4034,w,c	;volatile
 24752  016800  0BC3               	andlw	-61
 24753  016802  0908               	iorlw	8
 24754  016804                     L17:
 24755  016804  6EC2               	movwf	4034,c	;volatile
 24756                           
 24757                           ;adc.c: 45: break;
 24758  016806  D017               	goto	l2516
 24759  016808                     l2514:
 24760                           
 24761                           ; BSR set to: 0
 24762                           ;adc.c: 47: return 0xFFFF;
 24763  016808  6960               	setf	?_adc_read& (0+255),b
 24764  01680A  6961               	setf	(?_adc_read+1)& (0+255),b
 24765  01680C  0012               	return	
 24766  01680E                     l2509:
 24767                           
 24768                           ; BSR set to: 0
 24769  01680E  0100               	movlb	0	; () banked
 24770  016810  5162               	movf	adc_read@channel& (0+255),w,b
 24771                           
 24772                           ; Switch size 1, requested type "space"
 24773                           ; Number of cases is 3, Range of values is 0 to 2
 24774                           ; switch strategies available:
 24775                           ; Name         Instructions Cycles
 24776                           ; simple_byte           10     6 (average)
 24777                           ;	Chosen strategy is simple_byte
 24778  016812  0A00               	xorlw	0	; case 0
 24779  016814  B4D8               	btfsc	status,2,c
 24780  016816  D7EB               	goto	l2510
 24781  016818  0A01               	xorlw	1	; case 1
 24782  01681A  B4D8               	btfsc	status,2,c
 24783  01681C  D7EC               	goto	l2512
 24784  01681E  0A03               	xorlw	3	; case 2
 24785  016820  B4D8               	btfsc	status,2,c
 24786  016822  D7ED               	goto	l2513
 24787  016824  D7F1               	goto	l2514
 24788  016826                     
 24789                           ;adc.c: 54: _delay((unsigned long)((15)*(8000000/4000000.0)));
 24790                           
 24791                           ; BSR set to: 0
 24792  016826  0E0A               	movlw	10
 24793  016828                     u27907:
 24794  016828  2EE8               	decfsz	wreg,f,c
 24795  01682A  D7FE               	bra	u27907
 24796                           
 24797                           ;adc.c: 55: break;
 24798  01682C  D00C               	goto	l2518
 24799  01682E                     
 24800                           ;adc.c: 57: _delay((unsigned long)((90)*(8000000/4000000.0)));
 24801  01682E  0E3C               	movlw	60
 24802  016830                     u27917:
 24803  016830  2EE8               	decfsz	wreg,f,c
 24804  016832  D7FE               	bra	u27917
 24805                           
 24806                           ;adc.c: 59: }
 24807                           
 24808                           ;adc.c: 58: break;
 24809  016834  D008               	goto	l2518
 24810  016836                     l2516:
 24811  016836  0102               	movlb	2	; () banked
 24812  016838  5100               	movf	_os& (0+255),w,b	;volatile
 24813                           
 24814                           ; Switch size 1, requested type "space"
 24815                           ; Number of cases is 2, Range of values is 1 to 2
 24816                           ; switch strategies available:
 24817                           ; Name         Instructions Cycles
 24818                           ; simple_byte            7     4 (average)
 24819                           ;	Chosen strategy is simple_byte
 24820  01683A  0A01               	xorlw	1	; case 1
 24821  01683C  B4D8               	btfsc	status,2,c
 24822  01683E  D7F3               	goto	l2517
 24823  016840  0A03               	xorlw	3	; case 2
 24824  016842  B4D8               	btfsc	status,2,c
 24825  016844  D7F4               	goto	l2519
 24826  016846                     l2518:
 24827                           
 24828                           ;adc.c: 62: ADCON0bits.GO_NOT_DONE = 1;
 24829  016846  82C2               	bsf	4034,1,c	;volatile
 24830  016848  B2C2               	btfsc	4034,1,c	;volatile
 24831  01684A  D7FE               	goto	l2521
 24832                           
 24833                           ;adc.c: 68: adc_value = ADRESH;
 24834  01684C  CFC4 F063          	movff	4036,adc_read@adc_value	;volatile
 24835  016850  0100               	movlb	0	; () banked
 24836  016852  6B64               	clrf	(adc_read@adc_value+1)& (0+255),b
 24837                           
 24838                           ; BSR set to: 0
 24839                           ;adc.c: 69: adc_value <<= 2;
 24840  016854  90D8               	bcf	status,0,c
 24841  016856  3763               	rlcf	adc_read@adc_value& (0+255),f,b
 24842  016858  3764               	rlcf	(adc_read@adc_value+1)& (0+255),f,b
 24843  01685A  90D8               	bcf	status,0,c
 24844  01685C  3763               	rlcf	adc_read@adc_value& (0+255),f,b
 24845  01685E  3764               	rlcf	(adc_read@adc_value+1)& (0+255),f,b
 24846                           
 24847                           ; BSR set to: 0
 24848                           ;adc.c: 70: adc_value |= ADRESL;
 24849  016860  50C3               	movf	4035,w,c	;volatile
 24850  016862  1363               	iorwf	adc_read@adc_value& (0+255),f,b
 24851                           
 24852                           ; BSR set to: 0
 24853                           ;adc.c: 72: return adc_value;
 24854  016864  C063  F060         	movff	adc_read@adc_value,?_adc_read
 24855  016868  C064  F061         	movff	adc_read@adc_value+1,?_adc_read+1
 24856  01686C  0012               	return	
 24857  01686E                     __end_of_adc_read:
 24858                           	opt stack 0
 24859                           tblptru	equ	0xFF8
 24860                           tblptrh	equ	0xFF7
 24861                           tblptrl	equ	0xFF6
 24862                           tablat	equ	0xFF5
 24863                           prodh	equ	0xFF4
 24864                           prodl	equ	0xFF3
 24865                           intcon	equ	0xFF2
 24866                           intcon2	equ	0xFF1
 24867                           intcon3	equ	0xFF0
 24868                           postinc0	equ	0xFEE
 24869                           wreg	equ	0xFE8
 24870                           indf1	equ	0xFE7
 24871                           postdec1	equ	0xFE5
 24872                           plusw1	equ	0xFE3
 24873                           fsr1h	equ	0xFE2
 24874                           fsr1l	equ	0xFE1
 24875                           indf2	equ	0xFDF
 24876                           postinc2	equ	0xFDE
 24877                           postdec2	equ	0xFDD
 24878                           plusw2	equ	0xFDB
 24879                           fsr2h	equ	0xFDA
 24880                           fsr2l	equ	0xFD9
 24881                           status	equ	0xFD8
 24882                           
 24883 ;; *************** function _adc_calibrate *****************
 24884 ;; Defined at:
 24885 ;;		line 21 in file "adc.c"
 24886 ;; Parameters:    Size  Location     Type
 24887 ;;		None
 24888 ;; Auto vars:     Size  Location     Type
 24889 ;;		None
 24890 ;; Return value:  Size  Location     Type
 24891 ;;                  1    wreg      void 
 24892 ;; Registers used:
 24893 ;;		None
 24894 ;; Tracked objects:
 24895 ;;		On entry : 0/0
 24896 ;;		On exit  : 0/0
 24897 ;;		Unchanged: 0/0
 24898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24903 ;;Total ram usage:        0 bytes
 24904 ;; Hardware stack levels used:    1
 24905 ;; Hardware stack levels required when called:   10
 24906 ;; This function calls:
 24907 ;;		Nothing
 24908 ;; This function is called by:
 24909 ;;		_main
 24910 ;; This function uses a non-reentrant model
 24911 ;;
 24912                           
 24913                           	psect	text99
 24914  0190A4                     __ptext99:
 24915                           	opt stack 0
 24916  0190A4                     _adc_calibrate:
 24917                           	opt stack 20
 24918                           
 24919                           ;adc.c: 23: ADCON1bits.ADCAL = 1;
 24920                           
 24921                           ; BSR set to: 0
 24922                           ;incstack = 0
 24923  0190A4  8CC1               	bsf	4033,6,c	;volatile
 24924                           
 24925                           ;adc.c: 25: ADCON0bits.GO_NOT_DONE = 1;
 24926  0190A6  82C2               	bsf	4034,1,c	;volatile
 24927  0190A8  B2C2               	btfsc	4034,1,c	;volatile
 24928  0190AA  D7FE               	goto	l2504
 24929                           
 24930                           ;adc.c: 28: ADCON1bits.ADCAL = 0;
 24931  0190AC  9CC1               	bcf	4033,6,c	;volatile
 24932  0190AE  0012               	return		;funcret
 24933  0190B0                     __end_of_adc_calibrate:
 24934                           	opt stack 0
 24935                           tblptru	equ	0xFF8
 24936                           tblptrh	equ	0xFF7
 24937                           tblptrl	equ	0xFF6
 24938                           tablat	equ	0xFF5
 24939                           prodh	equ	0xFF4
 24940                           prodl	equ	0xFF3
 24941                           intcon	equ	0xFF2
 24942                           intcon2	equ	0xFF1
 24943                           intcon3	equ	0xFF0
 24944                           postinc0	equ	0xFEE
 24945                           wreg	equ	0xFE8
 24946                           indf1	equ	0xFE7
 24947                           postdec1	equ	0xFE5
 24948                           plusw1	equ	0xFE3
 24949                           fsr1h	equ	0xFE2
 24950                           fsr1l	equ	0xFE1
 24951                           indf2	equ	0xFDF
 24952                           postinc2	equ	0xFDE
 24953                           postdec2	equ	0xFDD
 24954                           plusw2	equ	0xFDB
 24955                           fsr2h	equ	0xFDA
 24956                           fsr2l	equ	0xFD9
 24957                           status	equ	0xFD8
 24958                           
 24959 ;; *************** function _adc_calculate_temperature *****************
 24960 ;; Defined at:
 24961 ;;		line 75 in file "adc.c"
 24962 ;; Parameters:    Size  Location     Type
 24963 ;;  adc_value       2   12[BANK0 ] unsigned int 
 24964 ;;  calibration     1   14[BANK0 ] enum E6806
 24965 ;; Auto vars:     Size  Location     Type
 24966 ;;  tmp             4   21[BANK0 ] long 
 24967 ;; Return value:  Size  Location     Type
 24968 ;;                  2   12[BANK0 ] int 
 24969 ;; Registers used:
 24970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24971 ;; Tracked objects:
 24972 ;;		On entry : 0/0
 24973 ;;		On exit  : 0/0
 24974 ;;		Unchanged: 0/0
 24975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24976 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24977 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24978 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24979 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24980 ;;Total ram usage:       13 bytes
 24981 ;; Hardware stack levels used:    1
 24982 ;; Hardware stack levels required when called:   11
 24983 ;; This function calls:
 24984 ;;		___lmul
 24985 ;; This function is called by:
 24986 ;;		_main
 24987 ;; This function uses a non-reentrant model
 24988 ;;
 24989                           
 24990                           	psect	text100
 24991  013FA4                     __ptext100:
 24992                           	opt stack 0
 24993  013FA4                     _adc_calculate_temperature:
 24994                           	opt stack 19
 24995                           
 24996                           ;adc.c: 77: int32_t tmp = (int32_t) adc_value;
 24997                           
 24998                           ;incstack = 0
 24999  013FA4  C06C  F075         	movff	adc_calculate_temperature@adc_value,adc_calculate_temperature@tmp
 25000  013FA8  C06D  F076         	movff	adc_calculate_temperature@adc_value+1,adc_calculate_temperature@tmp+1
 25001  013FAC  0100               	movlb	0	; () banked
 25002  013FAE  6B77               	clrf	(adc_calculate_temperature@tmp+2)& (0+255),b
 25003  013FB0  6B78               	clrf	(adc_calculate_temperature@tmp+3)& (0+255),b
 25004                           
 25005                           ; BSR set to: 0
 25006                           ;adc.c: 78: tmp += calibrationParameters[calibration].Offset;
 25007  013FB2  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 25008  013FB4  0D0C               	mullw	12
 25009  013FB6  0E05               	movlw	5
 25010  013FB8  26F3               	addwf	prodl,f,c
 25011  013FBA  0E00               	movlw	0
 25012  013FBC  22F4               	addwfc	prodh,f,c
 25013  013FBE  0E18               	movlw	low _calibrationParameters
 25014  013FC0  24F3               	addwf	prodl,w,c
 25015  013FC2  6ED9               	movwf	fsr2l,c
 25016  013FC4  0E03               	movlw	high _calibrationParameters
 25017  013FC6  20F4               	addwfc	prodh,w,c
 25018  013FC8  6EDA               	movwf	fsr2h,c
 25019  013FCA  CFDE F06F          	movff	postinc2,??_adc_calculate_temperature
 25020  013FCE  CFDD F070          	movff	postdec2,??_adc_calculate_temperature+1
 25021  013FD2  C06F  F071         	movff	??_adc_calculate_temperature,??_adc_calculate_temperature+2
 25022  013FD6  C070  F072         	movff	??_adc_calculate_temperature+1,??_adc_calculate_temperature+3
 25023  013FDA  0E00               	movlw	0
 25024  013FDC  BF72               	btfsc	(??_adc_calculate_temperature+3)& (0+255),7,b
 25025  013FDE  0EFF               	movlw	255
 25026  013FE0  6F73               	movwf	(??_adc_calculate_temperature+4)& (0+255),b
 25027  013FE2  6F74               	movwf	(??_adc_calculate_temperature+5)& (0+255),b
 25028  013FE4  5171               	movf	(??_adc_calculate_temperature+2)& (0+255),w,b
 25029  013FE6  2775               	addwf	adc_calculate_temperature@tmp& (0+255),f,b
 25030  013FE8  5172               	movf	(??_adc_calculate_temperature+3)& (0+255),w,b
 25031  013FEA  2376               	addwfc	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 25032  013FEC  5173               	movf	(??_adc_calculate_temperature+4)& (0+255),w,b
 25033  013FEE  2377               	addwfc	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 25034  013FF0  5174               	movf	(??_adc_calculate_temperature+5)& (0+255),w,b
 25035  013FF2  2378               	addwfc	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 25036                           
 25037                           ; BSR set to: 0
 25038                           ;adc.c: 79: tmp *= calibrationParameters[calibration].Multiplier;
 25039  013FF4  C075  F060         	movff	adc_calculate_temperature@tmp,___lmul@multiplier
 25040  013FF8  C076  F061         	movff	adc_calculate_temperature@tmp+1,___lmul@multiplier+1
 25041  013FFC  C077  F062         	movff	adc_calculate_temperature@tmp+2,___lmul@multiplier+2
 25042  014000  C078  F063         	movff	adc_calculate_temperature@tmp+3,___lmul@multiplier+3
 25043  014004  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 25044  014006  0D0C               	mullw	12
 25045  014008  0E07               	movlw	7
 25046  01400A  26F3               	addwf	prodl,f,c
 25047  01400C  0E00               	movlw	0
 25048  01400E  22F4               	addwfc	prodh,f,c
 25049  014010  0E18               	movlw	low _calibrationParameters
 25050  014012  24F3               	addwf	prodl,w,c
 25051  014014  6ED9               	movwf	fsr2l,c
 25052  014016  0E03               	movlw	high _calibrationParameters
 25053  014018  20F4               	addwfc	prodh,w,c
 25054  01401A  6EDA               	movwf	fsr2h,c
 25055  01401C  CFDE F064          	movff	postinc2,___lmul@multiplicand
 25056  014020  CFDD F065          	movff	postdec2,___lmul@multiplicand+1
 25057  014024  0E00               	movlw	0
 25058  014026  BF65               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 25059  014028  0EFF               	movlw	-1
 25060  01402A  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 25061  01402C  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 25062  01402E  ECEB  F0BC         	call	___lmul	;wreg free
 25063  014032  C060  F075         	movff	?___lmul,adc_calculate_temperature@tmp
 25064  014036  C061  F076         	movff	?___lmul+1,adc_calculate_temperature@tmp+1
 25065  01403A  C062  F077         	movff	?___lmul+2,adc_calculate_temperature@tmp+2
 25066  01403E  C063  F078         	movff	?___lmul+3,adc_calculate_temperature@tmp+3
 25067                           
 25068                           ;adc.c: 80: tmp >>= calibrationParameters[calibration].Shift - 1;
 25069  014042  0100               	movlb	0	; () banked
 25070  014044  516E               	movf	adc_calculate_temperature@calibration& (0+255),w,b
 25071  014046  0D0C               	mullw	12
 25072  014048  0E09               	movlw	9
 25073  01404A  26F3               	addwf	prodl,f,c
 25074  01404C  0E00               	movlw	0
 25075  01404E  22F4               	addwfc	prodh,f,c
 25076  014050  0E18               	movlw	low _calibrationParameters
 25077  014052  24F3               	addwf	prodl,w,c
 25078  014054  6ED9               	movwf	fsr2l,c
 25079  014056  0E03               	movlw	high _calibrationParameters
 25080  014058  20F4               	addwfc	prodh,w,c
 25081  01405A  6EDA               	movwf	fsr2h,c
 25082  01405C  50DF               	movf	indf2,w,c
 25083  01405E  6F6F               	movwf	??_adc_calculate_temperature& (0+255),b
 25084  014060  0EFF               	movlw	-1
 25085  014062  276F               	addwf	??_adc_calculate_temperature& (0+255),f,b
 25086  014064  296F               	incf	??_adc_calculate_temperature& (0+255),w,b
 25087  014066  6F70               	movwf	(??_adc_calculate_temperature+1)& (0+255),b
 25088  014068  D005               	goto	u27600
 25089  01406A                     u27605:
 25090  01406A  3578               	rlcf	(adc_calculate_temperature@tmp+3)& (0+255),w,b
 25091  01406C  3378               	rrcf	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 25092  01406E  3377               	rrcf	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 25093  014070  3376               	rrcf	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 25094  014072  3375               	rrcf	adc_calculate_temperature@tmp& (0+255),f,b
 25095  014074                     u27600:
 25096  014074  2F70               	decfsz	(??_adc_calculate_temperature+1)& (0+255),f,b
 25097  014076  D7F9               	goto	u27605
 25098                           
 25099                           ;adc.c: 81: tmp += 1;
 25100  014078  0E01               	movlw	1
 25101  01407A  0100               	movlb	0	; () banked
 25102  01407C  2775               	addwf	adc_calculate_temperature@tmp& (0+255),f,b
 25103  01407E  0E00               	movlw	0
 25104  014080  2376               	addwfc	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 25105  014082  2377               	addwfc	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 25106  014084  2378               	addwfc	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 25107                           
 25108                           ; BSR set to: 0
 25109                           ;adc.c: 82: tmp >>= 1;
 25110  014086  3578               	rlcf	(adc_calculate_temperature@tmp+3)& (0+255),w,b
 25111  014088  3378               	rrcf	(adc_calculate_temperature@tmp+3)& (0+255),f,b
 25112  01408A  3377               	rrcf	(adc_calculate_temperature@tmp+2)& (0+255),f,b
 25113  01408C  3376               	rrcf	(adc_calculate_temperature@tmp+1)& (0+255),f,b
 25114  01408E  3375               	rrcf	adc_calculate_temperature@tmp& (0+255),f,b
 25115                           
 25116                           ; BSR set to: 0
 25117                           ;adc.c: 83: return (int16_t) tmp;
 25118  014090  C075  F06C         	movff	adc_calculate_temperature@tmp,?_adc_calculate_temperature
 25119  014094  C076  F06D         	movff	adc_calculate_temperature@tmp+1,?_adc_calculate_temperature+1
 25120  014098  0012               	return	
 25121  01409A                     __end_of_adc_calculate_temperature:
 25122                           	opt stack 0
 25123                           tblptru	equ	0xFF8
 25124                           tblptrh	equ	0xFF7
 25125                           tblptrl	equ	0xFF6
 25126                           tablat	equ	0xFF5
 25127                           prodh	equ	0xFF4
 25128                           prodl	equ	0xFF3
 25129                           intcon	equ	0xFF2
 25130                           intcon2	equ	0xFF1
 25131                           intcon3	equ	0xFF0
 25132                           postinc0	equ	0xFEE
 25133                           wreg	equ	0xFE8
 25134                           indf1	equ	0xFE7
 25135                           postdec1	equ	0xFE5
 25136                           plusw1	equ	0xFE3
 25137                           fsr1h	equ	0xFE2
 25138                           fsr1l	equ	0xFE1
 25139                           indf2	equ	0xFDF
 25140                           postinc2	equ	0xFDE
 25141                           postdec2	equ	0xFDD
 25142                           plusw2	equ	0xFDB
 25143                           fsr2h	equ	0xFDA
 25144                           fsr2l	equ	0xFD9
 25145                           status	equ	0xFD8
 25146                           
 25147 ;; *************** function ___lmul *****************
 25148 ;; Defined at:
 25149 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 25150 ;; Parameters:    Size  Location     Type
 25151 ;;  multiplier      4    0[BANK0 ] unsigned long 
 25152 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 25153 ;; Auto vars:     Size  Location     Type
 25154 ;;  product         4    8[BANK0 ] unsigned long 
 25155 ;; Return value:  Size  Location     Type
 25156 ;;                  4    0[BANK0 ] unsigned long 
 25157 ;; Registers used:
 25158 ;;		wreg, status,2, status,0
 25159 ;; Tracked objects:
 25160 ;;		On entry : 0/0
 25161 ;;		On exit  : 0/0
 25162 ;;		Unchanged: 0/0
 25163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25164 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25165 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25167 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25168 ;;Total ram usage:       12 bytes
 25169 ;; Hardware stack levels used:    1
 25170 ;; Hardware stack levels required when called:   10
 25171 ;; This function calls:
 25172 ;;		Nothing
 25173 ;; This function is called by:
 25174 ;;		_system_calculate_input_voltage
 25175 ;;		_system_calculate_output_voltage
 25176 ;;		_system_calculate_input_current
 25177 ;;		_system_calculate_output_current
 25178 ;;		__display_efficiency
 25179 ;;		__buck_operate_local
 25180 ;;		_adc_calculate_temperature
 25181 ;;		__get_input_power
 25182 ;;		__get_output_power
 25183 ;; This function uses a non-reentrant model
 25184 ;;
 25185                           
 25186                           	psect	text101
 25187  0179D6                     __ptext101:
 25188                           	opt stack 0
 25189  0179D6                     ___lmul:
 25190                           	opt stack 19
 25191                           
 25192                           ; BSR set to: 0
 25193                           ;incstack = 0
 25194  0179D6  0E00               	movlw	0
 25195  0179D8  0100               	movlb	0	; () banked
 25196  0179DA  6F68               	movwf	___lmul@product& (0+255),b
 25197  0179DC  0E00               	movlw	0
 25198  0179DE  6F69               	movwf	(___lmul@product+1)& (0+255),b
 25199  0179E0  0E00               	movlw	0
 25200  0179E2  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 25201  0179E4  0E00               	movlw	0
 25202  0179E6  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 25203  0179E8                     
 25204                           ; BSR set to: 0
 25205                           
 25206                           ; BSR set to: 0
 25207  0179E8  A160               	btfss	___lmul@multiplier& (0+255),0,b
 25208  0179EA  D008               	goto	l3825
 25209                           
 25210                           ; BSR set to: 0
 25211  0179EC  5164               	movf	___lmul@multiplicand& (0+255),w,b
 25212  0179EE  2768               	addwf	___lmul@product& (0+255),f,b
 25213  0179F0  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 25214  0179F2  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 25215  0179F4  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 25216  0179F6  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 25217  0179F8  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 25218  0179FA  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 25219  0179FC                     l3825:
 25220                           
 25221                           ; BSR set to: 0
 25222                           
 25223                           ; BSR set to: 0
 25224  0179FC  90D8               	bcf	status,0,c
 25225  0179FE  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 25226  017A00  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 25227  017A02  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 25228  017A04  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 25229                           
 25230                           ; BSR set to: 0
 25231  017A06  90D8               	bcf	status,0,c
 25232  017A08  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 25233  017A0A  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 25234  017A0C  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 25235  017A0E  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 25236  017A10  5160               	movf	___lmul@multiplier& (0+255),w,b
 25237  017A12  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 25238  017A14  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 25239  017A16  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 25240  017A18  A4D8               	btfss	status,2,c
 25241  017A1A  D7E6               	goto	l3824
 25242                           
 25243                           ; BSR set to: 0
 25244  017A1C  C068  F060         	movff	___lmul@product,?___lmul
 25245  017A20  C069  F061         	movff	___lmul@product+1,?___lmul+1
 25246  017A24  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 25247  017A28  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 25248                           
 25249                           ; BSR set to: 0
 25250  017A2C  0012               	return		;funcret
 25251  017A2E                     __end_of___lmul:
 25252                           	opt stack 0
 25253                           tblptru	equ	0xFF8
 25254                           tblptrh	equ	0xFF7
 25255                           tblptrl	equ	0xFF6
 25256                           tablat	equ	0xFF5
 25257                           prodh	equ	0xFF4
 25258                           prodl	equ	0xFF3
 25259                           intcon	equ	0xFF2
 25260                           intcon2	equ	0xFF1
 25261                           intcon3	equ	0xFF0
 25262                           postinc0	equ	0xFEE
 25263                           wreg	equ	0xFE8
 25264                           indf1	equ	0xFE7
 25265                           postdec1	equ	0xFE5
 25266                           plusw1	equ	0xFE3
 25267                           fsr1h	equ	0xFE2
 25268                           fsr1l	equ	0xFE1
 25269                           indf2	equ	0xFDF
 25270                           postinc2	equ	0xFDE
 25271                           postdec2	equ	0xFDD
 25272                           plusw2	equ	0xFDB
 25273                           fsr2h	equ	0xFDA
 25274                           fsr2l	equ	0xFD9
 25275                           status	equ	0xFD8
 25276                           
 25277 ;; *************** function _USBDeviceInit *****************
 25278 ;; Defined at:
 25279 ;;		line 277 in file "usb_device.c"
 25280 ;; Parameters:    Size  Location     Type
 25281 ;;		None
 25282 ;; Auto vars:     Size  Location     Type
 25283 ;;  i               1    8[BANK0 ] unsigned char 
 25284 ;; Return value:  Size  Location     Type
 25285 ;;                  1    wreg      void 
 25286 ;; Registers used:
 25287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25288 ;; Tracked objects:
 25289 ;;		On entry : 0/0
 25290 ;;		On exit  : 0/0
 25291 ;;		Unchanged: 0/0
 25292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25296 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25297 ;;Total ram usage:        1 bytes
 25298 ;; Hardware stack levels used:    1
 25299 ;; Hardware stack levels required when called:   11
 25300 ;; This function calls:
 25301 ;;		_memset
 25302 ;; This function is called by:
 25303 ;;		_main
 25304 ;; This function uses a non-reentrant model
 25305 ;;
 25306                           
 25307                           	psect	text102
 25308  012308                     __ptext102:
 25309                           	opt stack 0
 25310  012308                     _USBDeviceInit:
 25311                           	opt stack 19
 25312                           
 25313                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 25314                           
 25315                           ; BSR set to: 0
 25316                           ;incstack = 0
 25317  012308  98A0               	bcf	4000,4,c	;volatile
 25318                           
 25319                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 25320  01230A  0E00               	movlw	0
 25321  01230C  6E63               	movwf	3939,c	;volatile
 25322                           
 25323                           ;usb_device.c: 291: {UIR = 0;};
 25324  01230E  0E00               	movlw	0
 25325  012310  6E62               	movwf	3938,c	;volatile
 25326                           
 25327                           ;usb_device.c: 294: UEP0 = 0;
 25328  012312  0E00               	movlw	0
 25329  012314  010F               	movlb	15	; () banked
 25330  012316  6F26               	movwf	38,b	;volatile
 25331                           
 25332                           ; BSR set to: 15
 25333                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 25334  012318  0E27               	movlw	39
 25335  01231A  0100               	movlb	0	; () banked
 25336  01231C  6F60               	movwf	memset@p1& (0+255),b
 25337  01231E  0E0F               	movlw	15
 25338  012320  6F61               	movwf	(memset@p1+1)& (0+255),b
 25339  012322  0E00               	movlw	0
 25340  012324  6F63               	movwf	(memset@c+1)& (0+255),b
 25341  012326  0E00               	movlw	0
 25342  012328  6F62               	movwf	memset@c& (0+255),b
 25343  01232A  0E00               	movlw	0
 25344  01232C  6F65               	movwf	(memset@n+1)& (0+255),b
 25345  01232E  0E02               	movlw	2
 25346  012330  6F64               	movwf	memset@n& (0+255),b
 25347  012332  EC1E  F0C3         	call	_memset	;wreg free
 25348                           
 25349                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 25350  012336  0E16               	movlw	22
 25351  012338  010F               	movlb	15	; () banked
 25352  01233A  6F39               	movwf	57,b	;volatile
 25353                           
 25354                           ; BSR set to: 15
 25355  01233C  0E9F               	movlw	159
 25356  01233E  6F37               	movwf	55,b	;volatile
 25357                           
 25358                           ; BSR set to: 15
 25359  012340  0E7B               	movlw	123
 25360  012342  6F36               	movwf	54,b	;volatile
 25361                           
 25362                           ; BSR set to: 15
 25363                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 25364  012344  0E00               	movlw	0
 25365  012346  0100               	movlb	0	; () banked
 25366  012348  6F68               	movwf	USBDeviceInit@i& (0+255),b
 25367  01234A                     l27617:
 25368                           
 25369                           ; BSR set to: 0
 25370  01234A  0E0B               	movlw	11
 25371  01234C  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 25372  01234E  D001               	goto	l147
 25373  012350  D00E               	goto	u26890
 25374  012352                     l147:
 25375                           
 25376                           ; BSR set to: 0
 25377                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 25378                           
 25379                           ; BSR set to: 0
 25380  012352  5168               	movf	USBDeviceInit@i& (0+255),w,b
 25381  012354  0D04               	mullw	4
 25382  012356  0E00               	movlw	0
 25383  012358  24F3               	addwf	prodl,w,c
 25384  01235A  6ED9               	movwf	fsr2l,c
 25385  01235C  0E0D               	movlw	13
 25386  01235E  20F4               	addwfc	prodh,w,c
 25387  012360  6EDA               	movwf	fsr2h,c
 25388  012362  6ADE               	clrf	postinc2,c
 25389  012364  6ADE               	clrf	postinc2,c
 25390  012366  6ADE               	clrf	postinc2,c
 25391  012368  6ADD               	clrf	postdec2,c
 25392                           
 25393                           ; BSR set to: 0
 25394  01236A  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 25395  01236C  D7EE               	goto	l27617
 25396  01236E                     u26890:
 25397                           
 25398                           ; BSR set to: 0
 25399                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 25400  01236E  8C65               	bsf	3941,6,c	;volatile
 25401                           
 25402                           ; BSR set to: 0
 25403                           ;usb_device.c: 316: UADDR = 0x00;
 25404  012370  0E00               	movlw	0
 25405  012372  010F               	movlb	15	; () banked
 25406  012374  6F38               	movwf	56,b	;volatile
 25407                           
 25408                           ; BSR set to: 15
 25409                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 25410  012376  9865               	bcf	3941,4,c	;volatile
 25411                           
 25412                           ; BSR set to: 15
 25413                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 25414  012378  9C65               	bcf	3941,6,c	;volatile
 25415  01237A                     
 25416                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 25417                           
 25418                           ; BSR set to: 15
 25419  01237A  9662               	bcf	3938,3,c	;volatile
 25420                           
 25421                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 25422  01237C  0E00               	movlw	0
 25423  01237E  6E04               	movwf	_inPipes+3,c	;volatile
 25424                           
 25425                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 25426  012380  0E00               	movlw	0
 25427  012382  0101               	movlb	1	; () banked
 25428  012384  6FD8               	movwf	(_outPipes+3)& (0+255),b	;volatile
 25429                           
 25430                           ; BSR set to: 1
 25431                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 25432  012386  0E00               	movlw	0
 25433  012388  6FDA               	movwf	(_outPipes+5)& (0+255),b	;volatile
 25434  01238A  0E00               	movlw	0
 25435  01238C  6FD9               	movwf	(_outPipes+4)& (0+255),b	;volatile
 25436                           
 25437                           ; BSR set to: 1
 25438                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 25439  01238E  B662               	btfsc	3938,3,c	;volatile
 25440  012390  D7F4               	goto	l149
 25441                           
 25442                           ; BSR set to: 1
 25443                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 25444                           
 25445                           ; BSR set to: 1
 25446  012392  0E01               	movlw	1
 25447  012394  6FFB               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 25448                           
 25449                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 25450  012396  0E01               	movlw	1
 25451  012398  6FFA               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 25452                           
 25453                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 25454  01239A  0E00               	movlw	0
 25455  01239C  6FF9               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 25456                           
 25457                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 25458  01239E  0E00               	movlw	0
 25459  0123A0  6FF8               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 25460                           
 25461                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 25462  0123A2  0E00               	movlw	0
 25463  0123A4  6FFD               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25464                           
 25465                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 25466  0123A6  0E00               	movlw	0
 25467  0123A8  0100               	movlb	0	; () banked
 25468  0123AA  6F68               	movwf	USBDeviceInit@i& (0+255),b
 25469  0123AC                     l27645:
 25470                           
 25471                           ; BSR set to: 0
 25472  0123AC  0E02               	movlw	2
 25473  0123AE  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 25474  0123B0  D001               	goto	l151
 25475  0123B2  D02E               	goto	u26920
 25476  0123B4                     l151:
 25477                           
 25478                           ; BSR set to: 0
 25479                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 25480                           
 25481                           ; BSR set to: 0
 25482  0123B4  5168               	movf	USBDeviceInit@i& (0+255),w,b
 25483  0123B6  0D02               	mullw	2
 25484  0123B8  0E07               	movlw	low _pBDTEntryIn
 25485  0123BA  24F3               	addwf	prodl,w,c
 25486  0123BC  6ED9               	movwf	fsr2l,c
 25487  0123BE  0E00               	movlw	high _pBDTEntryIn
 25488  0123C0  20F4               	addwfc	prodh,w,c
 25489  0123C2  6EDA               	movwf	fsr2h,c
 25490  0123C4  0E00               	movlw	0
 25491  0123C6  6EDE               	movwf	postinc2,c
 25492  0123C8  0E00               	movlw	0
 25493  0123CA  6EDD               	movwf	postdec2,c
 25494                           
 25495                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 25496  0123CC  5168               	movf	USBDeviceInit@i& (0+255),w,b
 25497  0123CE  0D02               	mullw	2
 25498  0123D0  0EDE               	movlw	low _pBDTEntryOut
 25499  0123D2  24F3               	addwf	prodl,w,c
 25500  0123D4  6ED9               	movwf	fsr2l,c
 25501  0123D6  0E01               	movlw	high _pBDTEntryOut
 25502  0123D8  20F4               	addwfc	prodh,w,c
 25503  0123DA  6EDA               	movwf	fsr2h,c
 25504  0123DC  0E00               	movlw	0
 25505  0123DE  6EDE               	movwf	postinc2,c
 25506  0123E0  0E00               	movlw	0
 25507  0123E2  6EDD               	movwf	postdec2,c
 25508                           
 25509                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 25510  0123E4  5168               	movf	USBDeviceInit@i& (0+255),w,b
 25511  0123E6  0D01               	mullw	1
 25512  0123E8  0EEB               	movlw	low _ep_data_in
 25513  0123EA  24F3               	addwf	prodl,w,c
 25514  0123EC  6ED9               	movwf	fsr2l,c
 25515  0123EE  0E01               	movlw	high _ep_data_in
 25516  0123F0  20F4               	addwfc	prodh,w,c
 25517  0123F2  6EDA               	movwf	fsr2h,c
 25518  0123F4  0E00               	movlw	0
 25519  0123F6  6EDF               	movwf	indf2,c
 25520                           
 25521                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 25522  0123F8  5168               	movf	USBDeviceInit@i& (0+255),w,b
 25523  0123FA  0D01               	mullw	1
 25524  0123FC  0EE8               	movlw	low _ep_data_out
 25525  0123FE  24F3               	addwf	prodl,w,c
 25526  012400  6ED9               	movwf	fsr2l,c
 25527  012402  0E01               	movlw	high _ep_data_out
 25528  012404  20F4               	addwfc	prodh,w,c
 25529  012406  6EDA               	movwf	fsr2h,c
 25530  012408  0E00               	movlw	0
 25531  01240A  6EDF               	movwf	indf2,c
 25532                           
 25533                           ; BSR set to: 0
 25534  01240C  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 25535  01240E  D7CE               	goto	l27645
 25536  012410                     u26920:
 25537                           
 25538                           ; BSR set to: 0
 25539                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 25540                           
 25541                           ; BSR set to: 0
 25542  012410  0E08               	movlw	8
 25543  012412  6E07               	movwf	_pBDTEntryIn,c
 25544  012414  0E0D               	movlw	13
 25545  012416  6E08               	movwf	_pBDTEntryIn+1,c
 25546                           
 25547                           ; BSR set to: 0
 25548                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 25549  012418  0E16               	movlw	22
 25550  01241A  010F               	movlb	15	; () banked
 25551  01241C  6F26               	movwf	38,b	;volatile
 25552                           
 25553                           ; BSR set to: 15
 25554                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 25555  01241E  0E0D               	movlw	13
 25556  012420  010D               	movlb	13	; () banked
 25557  012422  6F03               	movwf	3,b	;volatile
 25558  012424  0E30               	movlw	48
 25559  012426  6F02               	movwf	2,b	;volatile
 25560                           
 25561                           ; BSR set to: 13
 25562                           ;usb_device.c: 359: BDT[0].CNT = 8;
 25563  012428  0E08               	movlw	8
 25564  01242A  6F01               	movwf	1,b	;volatile
 25565                           
 25566                           ; BSR set to: 13
 25567                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 25568  01242C  0E04               	movlw	4
 25569  01242E  6F00               	movwf	0,b	;volatile
 25570                           
 25571                           ; BSR set to: 13
 25572                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 25573  012430  8F00               	bsf	0,7,b	;volatile
 25574                           
 25575                           ; BSR set to: 13
 25576                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 25577  012432  0E00               	movlw	0
 25578  012434  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 25579                           
 25580                           ; BSR set to: 13
 25581                           ;usb_device.c: 366: USB1msTickCount = 0;
 25582  012436  0E00               	movlw	0
 25583  012438  0102               	movlb	2	; () banked
 25584  01243A  6FAD               	movwf	_USB1msTickCount& (0+255),b	;volatile
 25585  01243C  0E00               	movlw	0
 25586  01243E  6FAE               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 25587  012440  0E00               	movlw	0
 25588  012442  6FAF               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 25589  012444  0E00               	movlw	0
 25590  012446  6FB0               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 25591                           
 25592                           ; BSR set to: 2
 25593                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 25594  012448  0E00               	movlw	0
 25595  01244A  0101               	movlb	1	; () banked
 25596  01244C  6FF7               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 25597                           
 25598                           ; BSR set to: 1
 25599                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 25600  01244E  0E00               	movlw	0
 25601  012450  6E2B               	movwf	_USBDeviceState,c	;volatile
 25602                           
 25603                           ; BSR set to: 1
 25604  012452  0012               	return		;funcret
 25605  012454                     __end_of_USBDeviceInit:
 25606                           	opt stack 0
 25607                           tblptru	equ	0xFF8
 25608                           tblptrh	equ	0xFF7
 25609                           tblptrl	equ	0xFF6
 25610                           tablat	equ	0xFF5
 25611                           prodh	equ	0xFF4
 25612                           prodl	equ	0xFF3
 25613                           intcon	equ	0xFF2
 25614                           intcon2	equ	0xFF1
 25615                           intcon3	equ	0xFF0
 25616                           postinc0	equ	0xFEE
 25617                           wreg	equ	0xFE8
 25618                           indf1	equ	0xFE7
 25619                           postdec1	equ	0xFE5
 25620                           plusw1	equ	0xFE3
 25621                           fsr1h	equ	0xFE2
 25622                           fsr1l	equ	0xFE1
 25623                           indf2	equ	0xFDF
 25624                           postinc2	equ	0xFDE
 25625                           postdec2	equ	0xFDD
 25626                           plusw2	equ	0xFDB
 25627                           fsr2h	equ	0xFDA
 25628                           fsr2l	equ	0xFD9
 25629                           status	equ	0xFD8
 25630                           
 25631 ;; *************** function _memset *****************
 25632 ;; Defined at:
 25633 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 25634 ;; Parameters:    Size  Location     Type
 25635 ;;  p1              2    0[BANK0 ] PTR void 
 25636 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 25637 ;;  c               2    2[BANK0 ] int 
 25638 ;;  n               2    4[BANK0 ] unsigned int 
 25639 ;; Auto vars:     Size  Location     Type
 25640 ;;  p               2    6[BANK0 ] PTR unsigned char 
 25641 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 25642 ;; Return value:  Size  Location     Type
 25643 ;;                  2    0[BANK0 ] PTR void 
 25644 ;; Registers used:
 25645 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25646 ;; Tracked objects:
 25647 ;;		On entry : 0/0
 25648 ;;		On exit  : 0/0
 25649 ;;		Unchanged: 0/0
 25650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25651 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25652 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25654 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25655 ;;Total ram usage:        8 bytes
 25656 ;; Hardware stack levels used:    1
 25657 ;; Hardware stack levels required when called:   10
 25658 ;; This function calls:
 25659 ;;		Nothing
 25660 ;; This function is called by:
 25661 ;;		_USBDeviceInit
 25662 ;; This function uses a non-reentrant model
 25663 ;;
 25664                           
 25665                           	psect	text103
 25666  01863C                     __ptext103:
 25667                           	opt stack 0
 25668  01863C                     _memset:
 25669                           	opt stack 19
 25670                           
 25671                           ; BSR set to: 1
 25672                           ;incstack = 0
 25673  01863C  C060  F066         	movff	memset@p1,memset@p
 25674  018640  C061  F067         	movff	memset@p1+1,memset@p+1
 25675  018644  D009               	goto	l4497
 25676  018646                     l26175:
 25677  018646  C066  FFD9         	movff	memset@p,fsr2l
 25678  01864A  C067  FFDA         	movff	memset@p+1,fsr2h
 25679  01864E  C062  FFDF         	movff	memset@c,indf2
 25680  018652  0100               	movlb	0	; () banked
 25681  018654  4B66               	infsnz	memset@p& (0+255),f,b
 25682  018656  2B67               	incf	(memset@p+1)& (0+255),f,b
 25683  018658                     l4497:
 25684                           
 25685                           ; BSR set to: 0
 25686  018658  0100               	movlb	0	; () banked
 25687  01865A  0764               	decf	memset@n& (0+255),f,b
 25688  01865C  A0D8               	btfss	status,0,c
 25689  01865E  0765               	decf	(memset@n+1)& (0+255),f,b
 25690  018660  2964               	incf	memset@n& (0+255),w,b
 25691  018662  E1F1               	bnz	l26175
 25692  018664  2965               	incf	(memset@n+1)& (0+255),w,b
 25693  018666  B4D8               	btfsc	status,2,c
 25694  018668  0012               	return	
 25695  01866A  D7ED               	goto	l4498
 25696  01866C                     __end_of_memset:
 25697                           	opt stack 0
 25698                           tblptru	equ	0xFF8
 25699                           tblptrh	equ	0xFF7
 25700                           tblptrl	equ	0xFF6
 25701                           tablat	equ	0xFF5
 25702                           prodh	equ	0xFF4
 25703                           prodl	equ	0xFF3
 25704                           intcon	equ	0xFF2
 25705                           intcon2	equ	0xFF1
 25706                           intcon3	equ	0xFF0
 25707                           postinc0	equ	0xFEE
 25708                           wreg	equ	0xFE8
 25709                           indf1	equ	0xFE7
 25710                           postdec1	equ	0xFE5
 25711                           plusw1	equ	0xFE3
 25712                           fsr1h	equ	0xFE2
 25713                           fsr1l	equ	0xFE1
 25714                           indf2	equ	0xFDF
 25715                           postinc2	equ	0xFDE
 25716                           postdec2	equ	0xFDD
 25717                           plusw2	equ	0xFDB
 25718                           fsr2h	equ	0xFDA
 25719                           fsr2l	equ	0xFD9
 25720                           status	equ	0xFD8
 25721                           
 25722 ;; *************** function _USBDeviceAttach *****************
 25723 ;; Defined at:
 25724 ;;		line 1354 in file "usb_device.c"
 25725 ;; Parameters:    Size  Location     Type
 25726 ;;		None
 25727 ;; Auto vars:     Size  Location     Type
 25728 ;;		None
 25729 ;; Return value:  Size  Location     Type
 25730 ;;                  1    wreg      void 
 25731 ;; Registers used:
 25732 ;;		wreg, status,2
 25733 ;; Tracked objects:
 25734 ;;		On entry : 0/0
 25735 ;;		On exit  : 0/0
 25736 ;;		Unchanged: 0/0
 25737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25742 ;;Total ram usage:        0 bytes
 25743 ;; Hardware stack levels used:    1
 25744 ;; Hardware stack levels required when called:   10
 25745 ;; This function calls:
 25746 ;;		Nothing
 25747 ;; This function is called by:
 25748 ;;		_main
 25749 ;; This function uses a non-reentrant model
 25750 ;;
 25751                           
 25752                           	psect	text104
 25753  0185A8                     __ptext104:
 25754                           	opt stack 0
 25755  0185A8                     _USBDeviceAttach:
 25756                           	opt stack 20
 25757                           
 25758                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 25759                           
 25760                           ; BSR set to: 0
 25761                           ;incstack = 0
 25762  0185A8  502B               	movf	_USBDeviceState,w,c	;volatile
 25763  0185AA  A4D8               	btfss	status,2,c
 25764  0185AC  0012               	return	
 25765                           
 25766                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 25767  0185AE  0E00               	movlw	0
 25768  0185B0  6E65               	movwf	3941,c	;volatile
 25769                           
 25770                           ;usb_device.c: 1365: UIE = 0;
 25771  0185B2  0E00               	movlw	0
 25772  0185B4  010F               	movlb	15	; () banked
 25773  0185B6  6F36               	movwf	54,b	;volatile
 25774                           
 25775                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 25776  0185B8  0E16               	movlw	22
 25777  0185BA  6F39               	movwf	57,b	;volatile
 25778  0185BC  0E9F               	movlw	159
 25779  0185BE  6F37               	movwf	55,b	;volatile
 25780  0185C0  0E7B               	movlw	123
 25781  0185C2  6F36               	movwf	54,b	;volatile
 25782                           
 25783                           ; BSR set to: 15
 25784                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 25785  0185C4  8ED0               	bsf	4048,7,c	;volatile
 25786                           
 25787                           ; BSR set to: 15
 25788  0185C6  88A2               	bsf	4002,4,c	;volatile
 25789                           
 25790                           ; BSR set to: 15
 25791  0185C8  88A0               	bsf	4000,4,c	;volatile
 25792                           
 25793                           ; BSR set to: 15
 25794  0185CA  8EF2               	bsf	intcon,7,c	;volatile
 25795                           
 25796                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 25797  0185CC  D001               	goto	l208
 25798  0185CE                     l209:
 25799  0185CE  8665               	bsf	3941,3,c	;volatile
 25800  0185D0                     l208:
 25801  0185D0  A665               	btfss	3941,3,c	;volatile
 25802  0185D2  D7FD               	goto	l209
 25803                           
 25804                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 25805  0185D4  0E01               	movlw	1
 25806  0185D6  6E2B               	movwf	_USBDeviceState,c	;volatile
 25807  0185D8  0012               	return	
 25808  0185DA                     __end_of_USBDeviceAttach:
 25809                           	opt stack 0
 25810                           tblptru	equ	0xFF8
 25811                           tblptrh	equ	0xFF7
 25812                           tblptrl	equ	0xFF6
 25813                           tablat	equ	0xFF5
 25814                           prodh	equ	0xFF4
 25815                           prodl	equ	0xFF3
 25816                           intcon	equ	0xFF2
 25817                           intcon2	equ	0xFF1
 25818                           intcon3	equ	0xFF0
 25819                           postinc0	equ	0xFEE
 25820                           wreg	equ	0xFE8
 25821                           indf1	equ	0xFE7
 25822                           postdec1	equ	0xFE5
 25823                           plusw1	equ	0xFE3
 25824                           fsr1h	equ	0xFE2
 25825                           fsr1l	equ	0xFE1
 25826                           indf2	equ	0xFDF
 25827                           postinc2	equ	0xFDE
 25828                           postdec2	equ	0xFDD
 25829                           plusw2	equ	0xFDB
 25830                           fsr2h	equ	0xFDA
 25831                           fsr2l	equ	0xFD9
 25832                           status	equ	0xFD8
 25833                           
 25834 ;; *************** function _SYSTEM_Initialize *****************
 25835 ;; Defined at:
 25836 ;;		line 38 in file "system.c"
 25837 ;; Parameters:    Size  Location     Type
 25838 ;;  state           1    wreg     enum E6906
 25839 ;; Auto vars:     Size  Location     Type
 25840 ;;  state           1    0[BANK0 ] enum E6906
 25841 ;;  pll_startup_    2    3[BANK0 ] unsigned int 
 25842 ;;  pll_startup_    2    1[BANK0 ] unsigned int 
 25843 ;; Return value:  Size  Location     Type
 25844 ;;                  1    wreg      void 
 25845 ;; Registers used:
 25846 ;;		wreg, status,2, status,0
 25847 ;; Tracked objects:
 25848 ;;		On entry : 0/0
 25849 ;;		On exit  : 0/0
 25850 ;;		Unchanged: 0/0
 25851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25853 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25855 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25856 ;;Total ram usage:        5 bytes
 25857 ;; Hardware stack levels used:    1
 25858 ;; Hardware stack levels required when called:   10
 25859 ;; This function calls:
 25860 ;;		Nothing
 25861 ;; This function is called by:
 25862 ;;		_main
 25863 ;; This function uses a non-reentrant model
 25864 ;;
 25865                           
 25866                           	psect	text105
 25867  017816                     __ptext105:
 25868                           	opt stack 0
 25869  017816                     _SYSTEM_Initialize:
 25870                           	opt stack 20
 25871                           
 25872                           ;incstack = 0
 25873                           ;SYSTEM_Initialize@state stored from wreg
 25874  017816  0100               	movlb	0	; () banked
 25875  017818  6F60               	movwf	SYSTEM_Initialize@state& (0+255),b
 25876                           
 25877                           ;system.c: 40: switch(state)
 25878  01781A  D01E               	goto	l942
 25879  01781C                     
 25880                           ;system.c: 49: {;system.c: 50: unsigned int pll_startup_counter = 600;
 25881  01781C  0E02               	movlw	2
 25882  01781E  0100               	movlb	0	; () banked
 25883  017820  6F62               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 25884  017822  0E58               	movlw	88
 25885  017824  6F61               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 25886                           
 25887                           ; BSR set to: 0
 25888                           ;system.c: 51: OSCTUNEbits.PLLEN = 1;
 25889  017826  8C9B               	bsf	3995,6,c	;volatile
 25890  017828                     l27797:
 25891                           
 25892                           ; BSR set to: 0
 25893  017828  0761               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 25894  01782A  A0D8               	btfss	status,0,c
 25895  01782C  0762               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 25896  01782E  2961               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 25897  017830  E1FB               	bnz	l27797
 25898  017832  2962               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 25899  017834  B4D8               	btfsc	status,2,c
 25900  017836  0012               	return	
 25901  017838  D7F7               	goto	l945
 25902  01783A                     
 25903                           ; BSR set to: 0
 25904                           ;system.c: 77: OSCCON = 0x70;
 25905                           
 25906                           ; BSR set to: 0
 25907  01783A  0E70               	movlw	112
 25908  01783C  6ED3               	movwf	4051,c	;volatile
 25909                           
 25910                           ;system.c: 83: {;system.c: 84: unsigned int pll_startup_counter = 800;
 25911  01783E  0E03               	movlw	3
 25912  017840  6F64               	movwf	(SYSTEM_Initialize@pll_startup_counter_3409+1)& (0+255),b
 25913  017842  0E20               	movlw	32
 25914  017844  6F63               	movwf	SYSTEM_Initialize@pll_startup_counter_3409& (0+255),b
 25915  017846                     l27801:
 25916                           
 25917                           ; BSR set to: 0
 25918  017846  0763               	decf	SYSTEM_Initialize@pll_startup_counter_3409& (0+255),f,b
 25919  017848  A0D8               	btfss	status,0,c
 25920  01784A  0764               	decf	(SYSTEM_Initialize@pll_startup_counter_3409+1)& (0+255),f,b
 25921  01784C  2963               	incf	SYSTEM_Initialize@pll_startup_counter_3409& (0+255),w,b
 25922  01784E  E1FB               	bnz	l27801
 25923  017850  2964               	incf	(SYSTEM_Initialize@pll_startup_counter_3409+1)& (0+255),w,b
 25924  017852  B4D8               	btfsc	status,2,c
 25925  017854  0012               	return	
 25926  017856  D7F7               	goto	l951
 25927  017858                     l942:
 25928                           
 25929                           ; BSR set to: 0
 25930  017858  0100               	movlb	0	; () banked
 25931  01785A  5160               	movf	SYSTEM_Initialize@state& (0+255),w,b
 25932                           
 25933                           ; Switch size 1, requested type "space"
 25934                           ; Number of cases is 3, Range of values is 0 to 2
 25935                           ; switch strategies available:
 25936                           ; Name         Instructions Cycles
 25937                           ; simple_byte           10     6 (average)
 25938                           ;	Chosen strategy is simple_byte
 25939  01785C  0A00               	xorlw	0	; case 0
 25940  01785E  B4D8               	btfsc	status,2,c
 25941  017860  D7DD               	goto	l943
 25942  017862  0A01               	xorlw	1	; case 1
 25943  017864  B4D8               	btfsc	status,2,c
 25944  017866  0012               	return	
 25945  017868  0A03               	xorlw	3	; case 2
 25946  01786A  A4D8               	btfss	status,2,c
 25947  01786C  0012               	return	
 25948  01786E  D7E5               	goto	l949
 25949  017870                     __end_of_SYSTEM_Initialize:
 25950                           	opt stack 0
 25951                           tblptru	equ	0xFF8
 25952                           tblptrh	equ	0xFF7
 25953                           tblptrl	equ	0xFF6
 25954                           tablat	equ	0xFF5
 25955                           prodh	equ	0xFF4
 25956                           prodl	equ	0xFF3
 25957                           intcon	equ	0xFF2
 25958                           intcon2	equ	0xFF1
 25959                           intcon3	equ	0xFF0
 25960                           postinc0	equ	0xFEE
 25961                           wreg	equ	0xFE8
 25962                           indf1	equ	0xFE7
 25963                           postdec1	equ	0xFE5
 25964                           plusw1	equ	0xFE3
 25965                           fsr1h	equ	0xFE2
 25966                           fsr1l	equ	0xFE1
 25967                           indf2	equ	0xFDF
 25968                           postinc2	equ	0xFDE
 25969                           postdec2	equ	0xFDD
 25970                           plusw2	equ	0xFDB
 25971                           fsr2h	equ	0xFDA
 25972                           fsr2l	equ	0xFD9
 25973                           status	equ	0xFD8
 25974                           
 25975 ;; *************** function _APP_DeviceMSDTasks *****************
 25976 ;; Defined at:
 25977 ;;		line 110 in file "app_device_msd.c"
 25978 ;; Parameters:    Size  Location     Type
 25979 ;;		None
 25980 ;; Auto vars:     Size  Location     Type
 25981 ;;		None
 25982 ;; Return value:  Size  Location     Type
 25983 ;;                  1    wreg      void 
 25984 ;; Registers used:
 25985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 25986 ;; Tracked objects:
 25987 ;;		On entry : 0/0
 25988 ;;		On exit  : 0/0
 25989 ;;		Unchanged: 0/0
 25990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25995 ;;Total ram usage:        0 bytes
 25996 ;; Hardware stack levels used:    1
 25997 ;; Hardware stack levels required when called:   21
 25998 ;; This function calls:
 25999 ;;		_MSDTasks
 26000 ;; This function is called by:
 26001 ;;		_main
 26002 ;; This function uses a non-reentrant model
 26003 ;;
 26004                           
 26005                           	psect	text106
 26006  018F94                     __ptext106:
 26007                           	opt stack 0
 26008  018F94                     _APP_DeviceMSDTasks:
 26009                           	opt stack 9
 26010                           
 26011                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 26012                           
 26013                           ; BSR set to: 0
 26014                           ;incstack = 0
 26015  018F94  0E20               	movlw	32
 26016  018F96  602B               	cpfslt	_USBDeviceState,c	;volatile
 26017  018F98  D001               	goto	l1033
 26018  018F9A  0012               	return	
 26019  018F9C                     l1033:
 26020                           
 26021                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 26022  018F9C  B265               	btfsc	3941,1,c	;volatile
 26023  018F9E  0012               	return	
 26024                           
 26025                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 26026                           
 26027                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 26028  018FA0  ECD7  F07D         	call	_MSDTasks	;wreg free
 26029  018FA4  0012               	return		;funcret
 26030  018FA6                     __end_of_APP_DeviceMSDTasks:
 26031                           	opt stack 0
 26032                           tblptru	equ	0xFF8
 26033                           tblptrh	equ	0xFF7
 26034                           tblptrl	equ	0xFF6
 26035                           tablat	equ	0xFF5
 26036                           prodh	equ	0xFF4
 26037                           prodl	equ	0xFF3
 26038                           intcon	equ	0xFF2
 26039                           intcon2	equ	0xFF1
 26040                           intcon3	equ	0xFF0
 26041                           postinc0	equ	0xFEE
 26042                           wreg	equ	0xFE8
 26043                           indf1	equ	0xFE7
 26044                           postdec1	equ	0xFE5
 26045                           plusw1	equ	0xFE3
 26046                           fsr1h	equ	0xFE2
 26047                           fsr1l	equ	0xFE1
 26048                           indf2	equ	0xFDF
 26049                           postinc2	equ	0xFDE
 26050                           postdec2	equ	0xFDD
 26051                           plusw2	equ	0xFDB
 26052                           fsr2h	equ	0xFDA
 26053                           fsr2l	equ	0xFD9
 26054                           status	equ	0xFD8
 26055                           
 26056 ;; *************** function _MSDTasks *****************
 26057 ;; Defined at:
 26058 ;;		line 335 in file "usb_device_msd.c"
 26059 ;; Parameters:    Size  Location     Type
 26060 ;;		None
 26061 ;; Auto vars:     Size  Location     Type
 26062 ;;  i               1   81[BANK0 ] unsigned char 
 26063 ;; Return value:  Size  Location     Type
 26064 ;;                  1    wreg      unsigned char 
 26065 ;; Registers used:
 26066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 26067 ;; Tracked objects:
 26068 ;;		On entry : 0/0
 26069 ;;		On exit  : 0/0
 26070 ;;		Unchanged: 0/0
 26071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26073 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26074 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26075 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26076 ;;Total ram usage:        6 bytes
 26077 ;; Hardware stack levels used:    1
 26078 ;; Hardware stack levels required when called:   20
 26079 ;; This function calls:
 26080 ;;		_MSDProcessCommand
 26081 ;;		_USBStallEndpoint
 26082 ;;		_USBTransferOnePacket
 26083 ;; This function is called by:
 26084 ;;		_APP_DeviceMSDTasks
 26085 ;; This function uses a non-reentrant model
 26086 ;;
 26087                           
 26088                           	psect	text107
 26089  00FBAE                     __ptext107:
 26090                           	opt stack 0
 26091  00FBAE                     _MSDTasks:
 26092                           	opt stack 9
 26093                           
 26094                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 26095                           
 26096                           ;incstack = 0
 26097  00FBAE  0E20               	movlw	32
 26098  00FBB0  182B               	xorwf	_USBDeviceState,w,c	;volatile
 26099  00FBB2  A4D8               	btfss	status,2,c
 26100  00FBB4  0012               	return	
 26101                           
 26102                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 26103                           
 26104                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 26105  00FBB6  98A0               	bcf	4000,4,c	;volatile
 26106                           
 26107                           ;usb_device_msd.c: 357: switch(MSD_State)
 26108  00FBB8  D115               	goto	l574
 26109  00FBBA                     
 26110                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 26111  00FBBA  5013               	movf	_USBMSDOutHandle,w,c
 26112  00FBBC  1014               	iorwf	_USBMSDOutHandle+1,w,c
 26113  00FBBE  B4D8               	btfsc	status,2,c
 26114  00FBC0  D006               	goto	u24650
 26115  00FBC2  C013  FFD9         	movff	_USBMSDOutHandle,fsr2l
 26116  00FBC6  C014  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 26117  00FBCA  BEDF               	btfsc	indf2,7,c
 26118  00FBCC  D119               	goto	l590
 26119  00FBCE                     u24650:
 26120                           
 26121                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 26122  00FBCE  0E00               	movlw	0
 26123  00FBD0  0100               	movlb	0	; () banked
 26124  00FBD2  6FB1               	movwf	MSDTasks@i& (0+255),b
 26125  00FBD4                     l26239:
 26126                           
 26127                           ; BSR set to: 0
 26128  00FBD4  0E1E               	movlw	30
 26129  00FBD6  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 26130  00FBD8  D001               	goto	l579
 26131  00FBDA  D014               	goto	u24670
 26132  00FBDC                     l579:
 26133                           
 26134                           ; BSR set to: 0
 26135                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 26136                           
 26137                           ; BSR set to: 0
 26138  00FBDC  51B1               	movf	MSDTasks@i& (0+255),w,b
 26139  00FBDE  0D01               	mullw	1
 26140  00FBE0  0E40               	movlw	64
 26141  00FBE2  24F3               	addwf	prodl,w,c
 26142  00FBE4  6ED9               	movwf	fsr2l,c
 26143  00FBE6  0E0D               	movlw	13
 26144  00FBE8  20F4               	addwfc	prodh,w,c
 26145  00FBEA  6EDA               	movwf	fsr2h,c
 26146  00FBEC  51B1               	movf	MSDTasks@i& (0+255),w,b
 26147  00FBEE  0D01               	mullw	1
 26148  00FBF0  0E48               	movlw	low _gblCBW
 26149  00FBF2  24F3               	addwf	prodl,w,c
 26150  00FBF4  6EE1               	movwf	fsr1l,c
 26151  00FBF6  0E02               	movlw	high _gblCBW
 26152  00FBF8  20F4               	addwfc	prodh,w,c
 26153  00FBFA  6EE2               	movwf	fsr1h,c
 26154  00FBFC  CFDF FFE7          	movff	indf2,indf1
 26155                           
 26156                           ; BSR set to: 0
 26157  00FC00  2BB1               	incf	MSDTasks@i& (0+255),f,b
 26158  00FC02  D7E8               	goto	l26239
 26159  00FC04                     u24670:
 26160                           
 26161                           ; BSR set to: 0
 26162                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 26163                           
 26164                           ; BSR set to: 0
 26165  00FC04  EE20 F001          	lfsr	2,1
 26166  00FC08  5013               	movf	_USBMSDOutHandle,w,c
 26167  00FC0A  26D9               	addwf	fsr2l,f,c
 26168  00FC0C  5014               	movf	_USBMSDOutHandle+1,w,c
 26169  00FC0E  22DA               	addwfc	fsr2h,f,c
 26170  00FC10  0E1F               	movlw	31
 26171  00FC12  18DE               	xorwf	postinc2,w,c
 26172  00FC14  A4D8               	btfss	status,2,c
 26173  00FC16  D072               	goto	l581
 26174                           
 26175                           ; BSR set to: 0
 26176  00FC18  0E55               	movlw	85
 26177  00FC1A  0102               	movlb	2	; () banked
 26178  00FC1C  1948               	xorwf	_gblCBW& (0+255),w,b
 26179  00FC1E  E16E               	bnz	l581
 26180  00FC20  0E53               	movlw	83
 26181  00FC22  1949               	xorwf	(_gblCBW+1)& (0+255),w,b
 26182  00FC24  E16B               	bnz	l581
 26183  00FC26  0E42               	movlw	66
 26184  00FC28  194A               	xorwf	(_gblCBW+2)& (0+255),w,b
 26185  00FC2A  E168               	bnz	l26289
 26186  00FC2C  0E43               	movlw	67
 26187  00FC2E  194B               	xorwf	(_gblCBW+3)& (0+255),w,b
 26188  00FC30  A4D8               	btfss	status,2,c
 26189  00FC32  D064               	goto	l581
 26190                           
 26191                           ; BSR set to: 2
 26192                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 26193  00FC34  0E01               	movlw	1
 26194  00FC36  0101               	movlb	1	; () banked
 26195  00FC38  6FF3               	movwf	_MSDCBWValid& (0+255),b
 26196                           
 26197                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 26198  00FC3A  0102               	movlb	2	; () banked
 26199  00FC3C  5155               	movf	(_gblCBW+13)& (0+255),w,b
 26200  00FC3E  A4D8               	btfss	status,2,c
 26201  00FC40  D050               	goto	l582
 26202                           
 26203                           ; BSR set to: 2
 26204  00FC42  0E11               	movlw	17
 26205  00FC44  6156               	cpfslt	(_gblCBW+14)& (0+255),b
 26206  00FC46  D04D               	goto	l582
 26207                           
 26208                           ; BSR set to: 2
 26209  00FC48  5156               	movf	(_gblCBW+14)& (0+255),w,b
 26210  00FC4A  B4D8               	btfsc	status,2,c
 26211  00FC4C  D04A               	goto	l582
 26212                           
 26213                           ; BSR set to: 2
 26214  00FC4E  C254  F0AC         	movff	_gblCBW+12,??_MSDTasks
 26215  00FC52  0E3F               	movlw	63
 26216  00FC54  0100               	movlb	0	; () banked
 26217  00FC56  17AC               	andwf	??_MSDTasks& (0+255),f,b
 26218  00FC58  A4D8               	btfss	status,2,c
 26219  00FC5A  D043               	goto	l582
 26220                           
 26221                           ; BSR set to: 0
 26222                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 26223  00FC5C  0E55               	movlw	85
 26224  00FC5E  010D               	movlb	13	; () banked
 26225  00FC60  6F80               	movwf	128,b	;volatile
 26226  00FC62  0E53               	movlw	83
 26227  00FC64  6F81               	movwf	129,b	;volatile
 26228  00FC66  0E42               	movlw	66
 26229  00FC68  6F82               	movwf	130,b	;volatile
 26230  00FC6A  0E53               	movlw	83
 26231  00FC6C  6F83               	movwf	131,b	;volatile
 26232                           
 26233                           ; BSR set to: 13
 26234                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 26235  00FC6E  C24C  FD84         	movff	_gblCBW+4,3460	;volatile
 26236  00FC72  C24D  FD85         	movff	_gblCBW+5,3461	;volatile
 26237  00FC76  C24E  FD86         	movff	_gblCBW+6,3462	;volatile
 26238  00FC7A  C24F  FD87         	movff	_gblCBW+7,3463	;volatile
 26239                           
 26240                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 26241  00FC7E  0E00               	movlw	0
 26242  00FC80  6F88               	movwf	136,b	;volatile
 26243  00FC82  0E00               	movlw	0
 26244  00FC84  6F89               	movwf	137,b	;volatile
 26245  00FC86  0E00               	movlw	0
 26246  00FC88  6F8A               	movwf	138,b	;volatile
 26247  00FC8A  0E00               	movlw	0
 26248  00FC8C  6F8B               	movwf	139,b	;volatile
 26249                           
 26250                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 26251  00FC8E  0E00               	movlw	0
 26252  00FC90  6F8C               	movwf	140,b	;volatile
 26253                           
 26254                           ; BSR set to: 13
 26255                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 26256  00FC92  6823               	setf	_MSDCommandState,c
 26257                           
 26258                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 26259  00FC94  0E00               	movlw	0
 26260  00FC96  0101               	movlb	1	; () banked
 26261  00FC98  6FF6               	movwf	_MSDReadState& (0+255),b
 26262                           
 26263                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 26264  00FC9A  0E00               	movlw	0
 26265  00FC9C  6E22               	movwf	_MSDWriteState,c
 26266                           
 26267                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 26268  00FC9E  0E00               	movlw	0
 26269  00FCA0  6FF5               	movwf	_MSDRetryAttempt& (0+255),b
 26270                           
 26271                           ; BSR set to: 1
 26272                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 26273  00FCA2  0E03               	movlw	3
 26274  00FCA4  0102               	movlb	2	; () banked
 26275  00FCA6  1957               	xorwf	(_gblCBW+15)& (0+255),w,b
 26276  00FCA8  B4D8               	btfsc	status,2,c
 26277  00FCAA  D008               	goto	l583
 26278                           
 26279                           ; BSR set to: 2
 26280                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 26281  00FCAC  9169               	bcf	(_gblSenseData+2)& (0+255),0,b
 26282  00FCAE  9369               	bcf	(_gblSenseData+2)& (0+255),1,b
 26283  00FCB0  9569               	bcf	(_gblSenseData+2)& (0+255),2,b
 26284  00FCB2  9769               	bcf	(_gblSenseData+2)& (0+255),3,b
 26285                           
 26286                           ; BSR set to: 2
 26287                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 26288  00FCB4  0E00               	movlw	0
 26289  00FCB6  6F73               	movwf	(_gblSenseData+12)& (0+255),b
 26290                           
 26291                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 26292  00FCB8  0E00               	movlw	0
 26293  00FCBA  6F74               	movwf	(_gblSenseData+13)& (0+255),b
 26294  00FCBC                     l583:
 26295                           
 26296                           ; BSR set to: 2
 26297                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 26298                           
 26299                           ; BSR set to: 2
 26300  00FCBC  AF54               	btfss	(_gblCBW+12)& (0+255),7,b
 26301  00FCBE  D002               	goto	l584
 26302                           
 26303                           ; BSR set to: 2
 26304                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 26305  00FCC0  0E01               	movlw	1
 26306  00FCC2  D001               	goto	L19
 26307  00FCC4                     l584:
 26308                           
 26309                           ; BSR set to: 2
 26310                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 26311                           
 26312                           ; BSR set to: 2
 26313  00FCC4  0E02               	movlw	2
 26314  00FCC6                     L19:
 26315  00FCC6  6E24               	movwf	_MSD_State,c
 26316                           
 26317                           ; BSR set to: 2
 26318                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 26319                           
 26320                           ; BSR set to: 2
 26321  00FCC8  5150               	movf	(_gblCBW+8)& (0+255),w,b
 26322  00FCCA  1151               	iorwf	(_gblCBW+9)& (0+255),w,b
 26323  00FCCC  1152               	iorwf	(_gblCBW+10)& (0+255),w,b
 26324  00FCCE  1153               	iorwf	(_gblCBW+11)& (0+255),w,b
 26325  00FCD0  B4D8               	btfsc	status,2,c
 26326  00FCD2  D002               	goto	l586
 26327                           
 26328                           ; BSR set to: 2
 26329                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 26330  00FCD4  0E00               	movlw	0
 26331  00FCD6  D001               	goto	L20
 26332  00FCD8                     l586:
 26333                           
 26334                           ; BSR set to: 2
 26335                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 26336                           
 26337                           ; BSR set to: 2
 26338  00FCD8  0E01               	movlw	1
 26339  00FCDA                     L20:
 26340  00FCDA  6E21               	movwf	_MSDHostNoData,c
 26341                           
 26342                           ; BSR set to: 2
 26343                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 26344                           
 26345                           ; BSR set to: 2
 26346  00FCDC  C257  F023         	movff	_gblCBW+15,_MSDCommandState
 26347                           
 26348                           ;usb_device_msd.c: 454: }
 26349  00FCE0  D08F               	goto	l590
 26350  00FCE2                     l582:
 26351                           
 26352                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 26353                           
 26354                           ; BSR set to: 2
 26355  00FCE2  0E01               	movlw	1
 26356  00FCE4  0100               	movlb	0	; () banked
 26357  00FCE6  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 26358  00FCE8  0E02               	movlw	2
 26359  00FCEA  EC52  F09A         	call	_USBStallEndpoint
 26360                           
 26361                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 26362  00FCEE  0E00               	movlw	0
 26363  00FCF0  0100               	movlb	0	; () banked
 26364  00FCF2  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 26365  00FCF4  0E02               	movlw	2
 26366  00FCF6  EC52  F09A         	call	_USBStallEndpoint
 26367                           
 26368                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 26369  00FCFA  D082               	goto	l590
 26370  00FCFC                     l581:
 26371  00FCFC                     l26289:
 26372                           
 26373                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 26374  00FCFC  0E01               	movlw	1
 26375  00FCFE  0100               	movlb	0	; () banked
 26376  00FD00  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 26377  00FD02  0E02               	movlw	2
 26378  00FD04  EC52  F09A         	call	_USBStallEndpoint
 26379                           
 26380                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 26381  00FD08  0E00               	movlw	0
 26382  00FD0A  0100               	movlb	0	; () banked
 26383  00FD0C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 26384  00FD0E  0E02               	movlw	2
 26385  00FD10  EC52  F09A         	call	_USBStallEndpoint
 26386                           
 26387                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 26388  00FD14  0E00               	movlw	0
 26389  00FD16  0101               	movlb	1	; () banked
 26390  00FD18  6FF3               	movwf	_MSDCBWValid& (0+255),b
 26391                           
 26392                           ; BSR set to: 1
 26393                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 26394                           
 26395                           ; BSR set to: 1
 26396  00FD1A  D072               	goto	l590
 26397  00FD1C                     
 26398                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 26399                           
 26400                           ; BSR set to: 1
 26401  00FD1C  EC50  F095         	call	_MSDProcessCommand	;wreg free
 26402  00FD20  0AFF               	xorlw	255
 26403  00FD22  A4D8               	btfss	status,2,c
 26404  00FD24  D06D               	goto	l590
 26405  00FD26  D011               	goto	l595
 26406  00FD28                     
 26407                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 26408  00FD28  EC50  F095         	call	_MSDProcessCommand	;wreg free
 26409  00FD2C  0AFF               	xorlw	255
 26410  00FD2E  A4D8               	btfss	status,2,c
 26411  00FD30  D067               	goto	l590
 26412                           
 26413                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 26414  00FD32  010D               	movlb	13	; () banked
 26415  00FD34  518C               	movf	140,w,b	;volatile
 26416  00FD36  A4D8               	btfss	status,2,c
 26417  00FD38  D008               	goto	l595
 26418                           
 26419                           ; BSR set to: 13
 26420  00FD3A  5188               	movf	136,w,b	;volatile
 26421  00FD3C  1189               	iorwf	137,w,b	;volatile
 26422  00FD3E  118A               	iorwf	138,w,b	;volatile
 26423  00FD40  118B               	iorwf	139,w,b	;volatile
 26424  00FD42  B4D8               	btfsc	status,2,c
 26425  00FD44  D002               	goto	l595
 26426                           
 26427                           ; BSR set to: 13
 26428                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 26429  00FD46  0E02               	movlw	2
 26430  00FD48  6F8C               	movwf	140,b	;volatile
 26431  00FD4A                     l595:
 26432                           
 26433                           ; BSR set to: 13
 26434                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 26435  00FD4A  0E03               	movlw	3
 26436  00FD4C  D03D               	goto	L18
 26437  00FD4E                     
 26438                           ; BSR set to: 13
 26439  00FD4E  C00B  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2747
 26440  00FD52  C00C  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2747+1
 26441  00FD56  0100               	movlb	0	; () banked
 26442  00FD58  51AD               	movf	_MSDTasks$2747& (0+255),w,b
 26443  00FD5A  11AE               	iorwf	(_MSDTasks$2747+1)& (0+255),w,b
 26444  00FD5C  B4D8               	btfsc	status,2,c
 26445  00FD5E  D00A               	goto	l597
 26446                           
 26447                           ; BSR set to: 0
 26448  00FD60  C00B  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2748
 26449  00FD64  C00C  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2748+1
 26450                           
 26451                           ; BSR set to: 0
 26452                           
 26453                           ; BSR set to: 0
 26454                           
 26455                           ; BSR set to: 0
 26456                           
 26457                           ; BSR set to: 0
 26458  00FD68  C0AF  FFD9         	movff	_MSDTasks$2748,fsr2l
 26459  00FD6C  C0B0  FFDA         	movff	_MSDTasks$2748+1,fsr2h
 26460  00FD70  BEDF               	btfsc	indf2,7,c
 26461  00FD72  D046               	goto	l590
 26462  00FD74                     l597:
 26463                           
 26464                           ; BSR set to: 0
 26465                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 26466                           
 26467                           ; BSR set to: 0
 26468  00FD74  0E01               	movlw	1
 26469  00FD76  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 26470  00FD78  0E80               	movlw	128
 26471  00FD7A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 26472  00FD7C  0E0D               	movlw	13
 26473  00FD7E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 26474  00FD80  0E0D               	movlw	13
 26475  00FD82  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 26476  00FD84  0E02               	movlw	2
 26477  00FD86  ECD7  F09A         	call	_USBTransferOnePacket
 26478  00FD8A  C060  F011         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 26479  00FD8E  C061  F012         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 26480                           
 26481                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 26482  00FD92  5013               	movf	_USBMSDOutHandle,w,c
 26483  00FD94  1014               	iorwf	_USBMSDOutHandle+1,w,c
 26484  00FD96  B4D8               	btfsc	status,2,c
 26485  00FD98  D006               	goto	u24840
 26486  00FD9A  C013  FFD9         	movff	_USBMSDOutHandle,fsr2l
 26487  00FD9E  C014  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 26488  00FDA2  BEDF               	btfsc	indf2,7,c
 26489  00FDA4  D010               	goto	l606
 26490  00FDA6                     u24840:
 26491                           
 26492                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 26493  00FDA6  0E00               	movlw	0
 26494  00FDA8  0100               	movlb	0	; () banked
 26495  00FDAA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 26496  00FDAC  0E40               	movlw	64
 26497  00FDAE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 26498  00FDB0  0E0D               	movlw	13
 26499  00FDB2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 26500  00FDB4  0E40               	movlw	64
 26501  00FDB6  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 26502  00FDB8  0E02               	movlw	2
 26503  00FDBA  ECD7  F09A         	call	_USBTransferOnePacket
 26504  00FDBE  C060  F013         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 26505  00FDC2  C061  F014         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 26506  00FDC6                     l606:
 26507                           
 26508                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 26509  00FDC6  0E00               	movlw	0
 26510  00FDC8                     L18:
 26511  00FDC8  6E24               	movwf	_MSD_State,c
 26512                           
 26513                           ;usb_device_msd.c: 513: break;
 26514  00FDCA  D01A               	goto	l590
 26515  00FDCC                     
 26516                           ;usb_device_msd.c: 518: MSD_State=0x00;
 26517  00FDCC  0E00               	movlw	0
 26518  00FDCE  6E24               	movwf	_MSD_State,c
 26519                           
 26520                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 26521  00FDD0  0E02               	movlw	2
 26522  00FDD2  010D               	movlb	13	; () banked
 26523  00FDD4  6F8C               	movwf	140,b	;volatile
 26524                           
 26525                           ; BSR set to: 13
 26526                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 26527  00FDD6  0E00               	movlw	0
 26528  00FDD8  0100               	movlb	0	; () banked
 26529  00FDDA  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 26530  00FDDC  0E02               	movlw	2
 26531  00FDDE  EC52  F09A         	call	_USBStallEndpoint
 26532                           
 26533                           ;usb_device_msd.c: 521: }
 26534  00FDE2  D00E               	goto	l590
 26535  00FDE4                     l574:
 26536  00FDE4  5024               	movf	_MSD_State,w,c
 26537                           
 26538                           ; Switch size 1, requested type "space"
 26539                           ; Number of cases is 4, Range of values is 0 to 3
 26540                           ; switch strategies available:
 26541                           ; Name         Instructions Cycles
 26542                           ; simple_byte           13     7 (average)
 26543                           ;	Chosen strategy is simple_byte
 26544  00FDE6  0A00               	xorlw	0	; case 0
 26545  00FDE8  B4D8               	btfsc	status,2,c
 26546  00FDEA  D6E7               	goto	l575
 26547  00FDEC  0A01               	xorlw	1	; case 1
 26548  00FDEE  B4D8               	btfsc	status,2,c
 26549  00FDF0  D795               	goto	l591
 26550  00FDF2  0A03               	xorlw	3	; case 2
 26551  00FDF4  B4D8               	btfsc	status,2,c
 26552  00FDF6  D798               	goto	l593
 26553  00FDF8  0A01               	xorlw	1	; case 3
 26554  00FDFA  B4D8               	btfsc	status,2,c
 26555  00FDFC  D7A8               	goto	l596
 26556  00FDFE  D7E6               	goto	l609
 26557  00FE00                     l590:
 26558                           
 26559                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 26560  00FE00  88A0               	bsf	4000,4,c	;volatile
 26561                           
 26562                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 26563  00FE02  0012               	return		;funcret
 26564  00FE04                     __end_of_MSDTasks:
 26565                           	opt stack 0
 26566                           tblptru	equ	0xFF8
 26567                           tblptrh	equ	0xFF7
 26568                           tblptrl	equ	0xFF6
 26569                           tablat	equ	0xFF5
 26570                           prodh	equ	0xFF4
 26571                           prodl	equ	0xFF3
 26572                           intcon	equ	0xFF2
 26573                           intcon2	equ	0xFF1
 26574                           intcon3	equ	0xFF0
 26575                           postinc0	equ	0xFEE
 26576                           wreg	equ	0xFE8
 26577                           indf1	equ	0xFE7
 26578                           postdec1	equ	0xFE5
 26579                           plusw1	equ	0xFE3
 26580                           fsr1h	equ	0xFE2
 26581                           fsr1l	equ	0xFE1
 26582                           indf2	equ	0xFDF
 26583                           postinc2	equ	0xFDE
 26584                           postdec2	equ	0xFDD
 26585                           plusw2	equ	0xFDB
 26586                           fsr2h	equ	0xFDA
 26587                           fsr2l	equ	0xFD9
 26588                           status	equ	0xFD8
 26589                           
 26590 ;; *************** function _MSDProcessCommand *****************
 26591 ;; Defined at:
 26592 ;;		line 553 in file "usb_device_msd.c"
 26593 ;; Parameters:    Size  Location     Type
 26594 ;;		None
 26595 ;; Auto vars:     Size  Location     Type
 26596 ;;		None
 26597 ;; Return value:  Size  Location     Type
 26598 ;;                  1    wreg      unsigned char 
 26599 ;; Registers used:
 26600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 26601 ;; Tracked objects:
 26602 ;;		On entry : 0/0
 26603 ;;		On exit  : 0/0
 26604 ;;		Unchanged: 0/0
 26605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26608 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26609 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26610 ;;Total ram usage:        5 bytes
 26611 ;; Hardware stack levels used:    1
 26612 ;; Hardware stack levels required when called:   19
 26613 ;; This function calls:
 26614 ;;		_ExternalFlash_MediaDetect
 26615 ;;		_ExternalFlash_MediaInitialize
 26616 ;;		_MSDProcessCommandMediaAbsent
 26617 ;;		_MSDProcessCommandMediaPresent
 26618 ;; This function is called by:
 26619 ;;		_MSDTasks
 26620 ;; This function uses a non-reentrant model
 26621 ;;
 26622                           
 26623                           	psect	text108
 26624  012AA0                     __ptext108:
 26625                           	opt stack 0
 26626  012AA0                     _MSDProcessCommand:
 26627                           	opt stack 9
 26628                           
 26629                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 26630                           
 26631                           ;incstack = 0
 26632  012AA0  C2E9  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 26633  012AA4  C2EA  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 26634  012AA8  EE22  F0DD         	lfsr	2,_LUN+9
 26635  012AAC  D801               	call	u23728
 26636  012AAE  D00A               	goto	u23729
 26637  012AB0                     u23728:
 26638  012AB0  0005               	push	
 26639  012AB2  6EFA               	movwf	pclath,c
 26640  012AB4  50DE               	movf	postinc2,w,c
 26641  012AB6  6EFD               	movwf	tosl,c
 26642  012AB8  50DE               	movf	postinc2,w,c
 26643  012ABA  6EFE               	movwf	tosh,c
 26644  012ABC  50DE               	movf	postinc2,w,c
 26645  012ABE  6EFF               	movwf	tosu,c
 26646  012AC0  50FA               	movf	pclath,w,c
 26647  012AC2  0012               	return		;indir
 26648  012AC4                     u23729:
 26649  012AC4  0900               	iorlw	0
 26650  012AC6  B4D8               	btfsc	status,2,c
 26651  012AC8  D00C               	goto	u23740
 26652  012ACA  0102               	movlb	2	; () banked
 26653  012ACC  5155               	movf	(_gblCBW+13)& (0+255),w,b
 26654  012ACE  0D01               	mullw	1
 26655  012AD0  0EF4               	movlw	low _SoftDetach
 26656  012AD2  24F3               	addwf	prodl,w,c
 26657  012AD4  6ED9               	movwf	fsr2l,c
 26658  012AD6  0E01               	movlw	high _SoftDetach
 26659  012AD8  20F4               	addwfc	prodh,w,c
 26660  012ADA  6EDA               	movwf	fsr2h,c
 26661  012ADC  04DE               	decf	postinc2,w,c
 26662  012ADE  A4D8               	btfss	status,2,c
 26663  012AE0  D01D               	goto	l612
 26664  012AE2                     u23740:
 26665                           
 26666                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 26667                           
 26668                           ; BSR set to: 2
 26669  012AE2  C255  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 26670  012AE6  0E01               	movlw	1
 26671  012AE8  0100               	movlb	0	; () banked
 26672  012AEA  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 26673  012AEC  0E00               	movlw	0
 26674  012AEE  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 26675  012AF0  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 26676  012AF2  D003               	goto	u23754
 26677  012AF4                     u23755:
 26678  012AF4  90D8               	bcf	status,0,c
 26679  012AF6  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 26680  012AF8  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 26681  012AFA                     u23754:
 26682  012AFA  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 26683  012AFC  D7FB               	goto	u23755
 26684  012AFE  0100               	movlb	0	; () banked
 26685  012B00  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 26686  012B02  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 26687  012B04  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 26688  012B06  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 26689  012B08  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 26690  012B0A  0102               	movlb	2	; () banked
 26691  012B0C  17C1               	andwf	_gblMediaPresent& (0+255),f,b
 26692  012B0E  0100               	movlb	0	; () banked
 26693  012B10  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 26694  012B12  0102               	movlb	2	; () banked
 26695  012B14  17C2               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 26696                           
 26697                           ; BSR set to: 2
 26698                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 26699  012B16  ECC7  F0BA         	call	_MSDProcessCommandMediaAbsent	;wreg free
 26700                           
 26701                           ;usb_device_msd.c: 563: }
 26702  012B1A  D058               	goto	l619
 26703  012B1C                     l612:
 26704                           
 26705                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 26706  012B1C  C255  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 26707  012B20  0E01               	movlw	1
 26708  012B22  0100               	movlb	0	; () banked
 26709  012B24  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 26710  012B26  0E00               	movlw	0
 26711  012B28  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 26712  012B2A  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 26713  012B2C  D003               	goto	u23764
 26714  012B2E                     u23765:
 26715  012B2E  90D8               	bcf	status,0,c
 26716  012B30  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 26717  012B32  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 26718  012B34                     u23764:
 26719  012B34  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 26720  012B36  D7FB               	goto	u23765
 26721  012B38  0102               	movlb	2	; () banked
 26722  012B3A  51C1               	movf	_gblMediaPresent& (0+255),w,b
 26723  012B3C  0100               	movlb	0	; () banked
 26724  012B3E  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 26725  012B40  0102               	movlb	2	; () banked
 26726  012B42  51C2               	movf	(_gblMediaPresent+1)& (0+255),w,b
 26727  012B44  0100               	movlb	0	; () banked
 26728  012B46  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 26729  012B48  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 26730  012B4A  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 26731  012B4C  A4D8               	btfss	status,2,c
 26732  012B4E  D03C               	goto	l616
 26733                           
 26734                           ; BSR set to: 0
 26735                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 26736  012B50  C2E9  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 26737  012B54  C2EA  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 26738  012B58  D801               	call	u23788
 26739  012B5A  D00B               	goto	u23789
 26740  012B5C                     u23788:
 26741  012B5C  0005               	push	
 26742  012B5E  6EFA               	movwf	pclath,c
 26743  012B60  0102               	movlb	2	; () banked
 26744  012B62  51D4               	movf	_LUN& (0+255),w,b
 26745  012B64  6EFD               	movwf	tosl,c
 26746  012B66  51D5               	movf	(_LUN+1)& (0+255),w,b
 26747  012B68  6EFE               	movwf	tosh,c
 26748  012B6A  51D6               	movf	(_LUN+2)& (0+255),w,b
 26749  012B6C  6EFF               	movwf	tosu,c
 26750  012B6E  50FA               	movf	pclath,w,c
 26751  012B70  0012               	return		;indir
 26752  012B72                     u23789:
 26753  012B72  0100               	movlb	0	; () banked
 26754  012B74  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 26755  012B76  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 26756  012B78  B4D8               	btfsc	status,2,c
 26757  012B7A  D023               	goto	l617
 26758                           
 26759                           ; BSR set to: 0
 26760                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 26761  012B7C  C255  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 26762  012B80  0E01               	movlw	1
 26763  012B82  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 26764  012B84  0E00               	movlw	0
 26765  012B86  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 26766  012B88  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 26767  012B8A  D003               	goto	u23804
 26768  012B8C                     u23805:
 26769  012B8C  90D8               	bcf	status,0,c
 26770  012B8E  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 26771  012B90  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 26772  012B92                     u23804:
 26773  012B92  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 26774  012B94  D7FB               	goto	u23805
 26775  012B96  0100               	movlb	0	; () banked
 26776  012B98  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 26777  012B9A  0102               	movlb	2	; () banked
 26778  012B9C  13C1               	iorwf	_gblMediaPresent& (0+255),f,b
 26779  012B9E  0100               	movlb	0	; () banked
 26780  012BA0  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 26781  012BA2  0102               	movlb	2	; () banked
 26782  012BA4  13C2               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 26783                           
 26784                           ; BSR set to: 2
 26785                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 26786  012BA6  5169               	movf	(_gblSenseData+2)& (0+255),w,b
 26787  012BA8  0BF0               	andlw	-16
 26788  012BAA  0906               	iorlw	6
 26789  012BAC  6F69               	movwf	(_gblSenseData+2)& (0+255),b
 26790                           
 26791                           ; BSR set to: 2
 26792                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 26793  012BAE  0E28               	movlw	40
 26794  012BB0  6F73               	movwf	(_gblSenseData+12)& (0+255),b
 26795                           
 26796                           ; BSR set to: 2
 26797                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 26798  012BB2  0E00               	movlw	0
 26799  012BB4  6F74               	movwf	(_gblSenseData+13)& (0+255),b
 26800                           
 26801                           ; BSR set to: 2
 26802                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 26803  012BB6  0E01               	movlw	1
 26804  012BB8  010D               	movlb	13	; () banked
 26805  012BBA  6F8C               	movwf	140,b	;volatile
 26806                           
 26807                           ; BSR set to: 13
 26808                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 26809  012BBC  ECA5  F06D         	call	_MSDProcessCommandMediaPresent	;wreg free
 26810                           
 26811                           ;usb_device_msd.c: 589: }
 26812  012BC0  D005               	goto	l619
 26813  012BC2                     l617:
 26814                           
 26815                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 26816  012BC2  ECC7  F0BA         	call	_MSDProcessCommandMediaAbsent	;wreg free
 26817                           
 26818                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 26819  012BC6  D002               	goto	l619
 26820  012BC8                     l616:
 26821                           
 26822                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 26823  012BC8  ECA5  F06D         	call	_MSDProcessCommandMediaPresent	;wreg free
 26824  012BCC                     l619:
 26825                           
 26826                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 26827  012BCC  5023               	movf	_MSDCommandState,w,c
 26828  012BCE  0012               	return	
 26829  012BD0                     __end_of_MSDProcessCommand:
 26830                           	opt stack 0
 26831                           tosu	equ	0xFFF
 26832                           tosh	equ	0xFFE
 26833                           tosl	equ	0xFFD
 26834                           pclath	equ	0xFFA
 26835                           tblptru	equ	0xFF8
 26836                           tblptrh	equ	0xFF7
 26837                           tblptrl	equ	0xFF6
 26838                           tablat	equ	0xFF5
 26839                           prodh	equ	0xFF4
 26840                           prodl	equ	0xFF3
 26841                           intcon	equ	0xFF2
 26842                           intcon2	equ	0xFF1
 26843                           intcon3	equ	0xFF0
 26844                           postinc0	equ	0xFEE
 26845                           wreg	equ	0xFE8
 26846                           indf1	equ	0xFE7
 26847                           postdec1	equ	0xFE5
 26848                           plusw1	equ	0xFE3
 26849                           fsr1h	equ	0xFE2
 26850                           fsr1l	equ	0xFE1
 26851                           indf2	equ	0xFDF
 26852                           postinc2	equ	0xFDE
 26853                           postdec2	equ	0xFDD
 26854                           plusw2	equ	0xFDB
 26855                           fsr2h	equ	0xFDA
 26856                           fsr2l	equ	0xFD9
 26857                           status	equ	0xFD8
 26858                           
 26859 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 26860 ;; Defined at:
 26861 ;;		line 635 in file "usb_device_msd.c"
 26862 ;; Parameters:    Size  Location     Type
 26863 ;;		None
 26864 ;; Auto vars:     Size  Location     Type
 26865 ;;		None
 26866 ;; Return value:  Size  Location     Type
 26867 ;;                  1    wreg      void 
 26868 ;; Registers used:
 26869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 26870 ;; Tracked objects:
 26871 ;;		On entry : 0/0
 26872 ;;		On exit  : 0/0
 26873 ;;		Unchanged: 0/0
 26874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26879 ;;Total ram usage:        0 bytes
 26880 ;; Hardware stack levels used:    1
 26881 ;; Hardware stack levels required when called:   18
 26882 ;; This function calls:
 26883 ;;		_MSDErrorHandler
 26884 ;;		_MSDProcessCommandMediaPresent
 26885 ;;		_ResetSenseData
 26886 ;; This function is called by:
 26887 ;;		_MSDProcessCommand
 26888 ;; This function uses a non-reentrant model
 26889 ;;
 26890                           
 26891                           	psect	text109
 26892  01758E                     __ptext109:
 26893                           	opt stack 0
 26894  01758E                     _MSDProcessCommandMediaAbsent:
 26895                           	opt stack 9
 26896                           
 26897                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 26898                           
 26899                           ;incstack = 0
 26900  01758E  D01D               	goto	l623
 26901  017590                     
 26902                           ;usb_device_msd.c: 646: ResetSenseData();
 26903  017590  EC35  F0BA         	call	_ResetSenseData	;wreg free
 26904                           
 26905                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 26906  017594  0102               	movlb	2	; () banked
 26907  017596  5169               	movf	(_gblSenseData+2)& (0+255),w,b
 26908  017598  0BF0               	andlw	-16
 26909  01759A  0902               	iorlw	2
 26910  01759C  6F69               	movwf	(_gblSenseData+2)& (0+255),b
 26911                           
 26912                           ; BSR set to: 2
 26913                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 26914  01759E  0E3A               	movlw	58
 26915  0175A0  6F73               	movwf	(_gblSenseData+12)& (0+255),b
 26916                           
 26917                           ; BSR set to: 2
 26918                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 26919  0175A2  0E00               	movlw	0
 26920  0175A4  6F74               	movwf	(_gblSenseData+13)& (0+255),b
 26921                           
 26922                           ; BSR set to: 2
 26923                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 26924  0175A6  ECA5  F06D         	call	_MSDProcessCommandMediaPresent	;wreg free
 26925                           
 26926                           ;usb_device_msd.c: 655: break;
 26927  0175AA  0012               	return	
 26928  0175AC                     
 26929                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 26930  0175AC  0E01               	movlw	1
 26931  0175AE  010D               	movlb	13	; () banked
 26932  0175B0  6F8C               	movwf	140,b	;volatile
 26933                           
 26934                           ; BSR set to: 13
 26935                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 26936  0175B2  6823               	setf	_MSDCommandState,c
 26937                           
 26938                           ;usb_device_msd.c: 665: break;
 26939  0175B4  0012               	return	
 26940  0175B6                     
 26941                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 26942                           
 26943                           ; BSR set to: 13
 26944  0175B6  ECA5  F06D         	call	_MSDProcessCommandMediaPresent	;wreg free
 26945                           
 26946                           ;usb_device_msd.c: 671: break;
 26947  0175BA  0012               	return	
 26948  0175BC                     
 26949                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 26950  0175BC  ECA5  F06D         	call	_MSDProcessCommandMediaPresent	;wreg free
 26951                           
 26952                           ;usb_device_msd.c: 677: break;
 26953  0175C0  0012               	return	
 26954  0175C2                     
 26955                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 26956  0175C2  0E7F               	movlw	127
 26957  0175C4  EC31  F098         	call	_MSDErrorHandler
 26958                           
 26959                           ;usb_device_msd.c: 685: }
 26960                           
 26961                           ;usb_device_msd.c: 684: break;
 26962  0175C8  0012               	return	
 26963  0175CA                     l623:
 26964  0175CA  5023               	movf	_MSDCommandState,w,c
 26965                           
 26966                           ; Switch size 1, requested type "space"
 26967                           ; Number of cases is 5, Range of values is 0 to 253
 26968                           ; switch strategies available:
 26969                           ; Name         Instructions Cycles
 26970                           ; simple_byte           16     9 (average)
 26971                           ;	Chosen strategy is simple_byte
 26972  0175CC  0A00               	xorlw	0	; case 0
 26973  0175CE  B4D8               	btfsc	status,2,c
 26974  0175D0  D7ED               	goto	l626
 26975  0175D2  0A03               	xorlw	3	; case 3
 26976  0175D4  B4D8               	btfsc	status,2,c
 26977  0175D6  D7DC               	goto	l624
 26978  0175D8  0A11               	xorlw	17	; case 18
 26979  0175DA  B4D8               	btfsc	status,2,c
 26980  0175DC  D7EC               	goto	l628
 26981  0175DE  0A0C               	xorlw	12	; case 30
 26982  0175E0  B4D8               	btfsc	status,2,c
 26983  0175E2  D7E4               	goto	l626
 26984  0175E4  0AE3               	xorlw	227	; case 253
 26985  0175E6  B4D8               	btfsc	status,2,c
 26986  0175E8  D7E9               	goto	l629
 26987  0175EA  D7EB               	goto	l630
 26988  0175EC                     __end_of_MSDProcessCommandMediaAbsent:
 26989                           	opt stack 0
 26990                           tosu	equ	0xFFF
 26991                           tosh	equ	0xFFE
 26992                           tosl	equ	0xFFD
 26993                           pclath	equ	0xFFA
 26994                           tblptru	equ	0xFF8
 26995                           tblptrh	equ	0xFF7
 26996                           tblptrl	equ	0xFF6
 26997                           tablat	equ	0xFF5
 26998                           prodh	equ	0xFF4
 26999                           prodl	equ	0xFF3
 27000                           intcon	equ	0xFF2
 27001                           intcon2	equ	0xFF1
 27002                           intcon3	equ	0xFF0
 27003                           postinc0	equ	0xFEE
 27004                           wreg	equ	0xFE8
 27005                           indf1	equ	0xFE7
 27006                           postdec1	equ	0xFE5
 27007                           plusw1	equ	0xFE3
 27008                           fsr1h	equ	0xFE2
 27009                           fsr1l	equ	0xFE1
 27010                           indf2	equ	0xFDF
 27011                           postinc2	equ	0xFDE
 27012                           postdec2	equ	0xFDD
 27013                           plusw2	equ	0xFDB
 27014                           fsr2h	equ	0xFDA
 27015                           fsr2l	equ	0xFD9
 27016                           status	equ	0xFD8
 27017                           
 27018 ;; *************** function _MSDProcessCommandMediaPresent *****************
 27019 ;; Defined at:
 27020 ;;		line 712 in file "usb_device_msd.c"
 27021 ;; Parameters:    Size  Location     Type
 27022 ;;		None
 27023 ;; Auto vars:     Size  Location     Type
 27024 ;;  capacity        4   66[BANK0 ] struct .
 27025 ;;  sectorSize      4   62[BANK0 ] struct .
 27026 ;;  i               1   70[BANK0 ] unsigned char 
 27027 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 27028 ;; Return value:  Size  Location     Type
 27029 ;;                  1    wreg      void 
 27030 ;; Registers used:
 27031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 27032 ;; Tracked objects:
 27033 ;;		On entry : 0/0
 27034 ;;		On exit  : 0/0
 27035 ;;		Unchanged: 0/0
 27036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27038 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27039 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27040 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27041 ;;Total ram usage:       14 bytes
 27042 ;; Hardware stack levels used:    1
 27043 ;; Hardware stack levels required when called:   17
 27044 ;; This function calls:
 27045 ;;		_ExternalFlash_CapacityRead
 27046 ;;		_ExternalFlash_SectorSizeRead
 27047 ;;		_ExternalFlash_WriteProtectStateGet
 27048 ;;		_MSDCheckForErrorCases
 27049 ;;		_MSDComputeDeviceInAndResidue
 27050 ;;		_MSDErrorHandler
 27051 ;;		_MSDReadHandler
 27052 ;;		_MSDWriteHandler
 27053 ;;		_ResetSenseData
 27054 ;;		_USBTransferOnePacket
 27055 ;;		_memcpy
 27056 ;; This function is called by:
 27057 ;;		_MSDProcessCommand
 27058 ;;		_MSDProcessCommandMediaAbsent
 27059 ;; This function uses a non-reentrant model
 27060 ;;
 27061                           
 27062                           	psect	text110
 27063  00DB4A                     __ptext110:
 27064                           	opt stack 0
 27065  00DB4A                     _MSDProcessCommandMediaPresent:
 27066                           	opt stack 10
 27067                           
 27068                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 27069                           
 27070                           ;incstack = 0
 27071  00DB4A  D1B8               	goto	l634
 27072  00DB4C                     
 27073                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 27074  00DB4C  EC58  F087         	call	_MSDReadHandler	;wreg free
 27075  00DB50  0900               	iorlw	0
 27076  00DB52  A4D8               	btfss	status,2,c
 27077  00DB54  0012               	return	
 27078                           
 27079                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 27080  00DB56  6823               	setf	_MSDCommandState,c
 27081                           
 27082                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 27083  00DB58  0012               	return	
 27084  00DB5A                     
 27085                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 27086  00DB5A  ECFF  F075         	call	_MSDWriteHandler	;wreg free
 27087  00DB5E  0900               	iorlw	0
 27088  00DB60  A4D8               	btfss	status,2,c
 27089  00DB62  0012               	return	
 27090                           
 27091                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 27092  00DB64  6823               	setf	_MSDCommandState,c
 27093                           
 27094                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 27095  00DB66  0012               	return	
 27096  00DB68                     
 27097                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 27098  00DB68  0421               	decf	_MSDHostNoData,w,c
 27099  00DB6A  A4D8               	btfss	status,2,c
 27100  00DB6C  D002               	goto	l641
 27101                           
 27102                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 27103  00DB6E  6823               	setf	_MSDCommandState,c
 27104                           
 27105                           ;usb_device_msd.c: 751: break;
 27106  00DB70  0012               	return	
 27107  00DB72                     l641:
 27108                           
 27109                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 27110  00DB72  C25A  F010         	movff	_gblCBW+18,_TransferLength+1
 27111                           
 27112                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 27113  00DB76  C25B  F00F         	movff	_gblCBW+19,_TransferLength
 27114                           
 27115                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 27116  00DB7A  C00F  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 27117  00DB7E  C010  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 27118  00DB82  0100               	movlb	0	; () banked
 27119  00DB84  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 27120  00DB86  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 27121  00DB88  EC56  F09F         	call	_MSDCheckForErrorCases	;wreg free
 27122  00DB8C  0900               	iorlw	0
 27123  00DB8E  A4D8               	btfss	status,2,c
 27124  00DB90  0012               	return	
 27125                           
 27126                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 27127                           
 27128                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 27129  00DB92  0E00               	movlw	0
 27130  00DB94  0100               	movlb	0	; () banked
 27131  00DB96  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 27132  00DB98  0E24               	movlw	36
 27133  00DB9A  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 27134  00DB9C  ECD5  F0AD         	call	_MSDComputeDeviceInAndResidue	;wreg free
 27135                           
 27136                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 27137  00DBA0  0E00               	movlw	0
 27138  00DBA2  0100               	movlb	0	; () banked
 27139  00DBA4  6F60               	movwf	memcpy@d1& (0+255),b
 27140  00DBA6  0E06               	movlw	6
 27141  00DBA8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27142  00DBAA  0EE9               	movlw	low _inq_resp
 27143  00DBAC  6F62               	movwf	memcpy@s1& (0+255),b
 27144  00DBAE  0EC3               	movlw	high _inq_resp
 27145  00DBB0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27146  00DBB2  0E00               	movlw	0
 27147  00DBB4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27148  00DBB6  0E24               	movlw	36
 27149  00DBB8  6F64               	movwf	memcpy@n& (0+255),b
 27150  00DBBA  EC97  F0BA         	call	_memcpy	;wreg free
 27151                           
 27152                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 27153  00DBBE  0EFD               	movlw	253
 27154  00DBC0  6E23               	movwf	_MSDCommandState,c
 27155                           
 27156                           ;usb_device_msd.c: 773: break;
 27157  00DBC2  0012               	return	
 27158  00DBC4                     
 27159                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 27160  00DBC4  C2E9  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 27161  00DBC8  C2EA  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 27162  00DBCC  EE22  F0D7         	lfsr	2,_LUN+3
 27163  00DBD0  D801               	call	u21678
 27164  00DBD2  D00A               	goto	u21679
 27165  00DBD4                     u21678:
 27166  00DBD4  0005               	push	
 27167  00DBD6  6EFA               	movwf	pclath,c
 27168  00DBD8  50DE               	movf	postinc2,w,c
 27169  00DBDA  6EFD               	movwf	tosl,c
 27170  00DBDC  50DE               	movf	postinc2,w,c
 27171  00DBDE  6EFE               	movwf	tosh,c
 27172  00DBE0  50DE               	movf	postinc2,w,c
 27173  00DBE2  6EFF               	movwf	tosu,c
 27174  00DBE4  50FA               	movf	pclath,w,c
 27175  00DBE6  0012               	return		;indir
 27176  00DBE8                     u21679:
 27177  00DBE8  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 27178  00DBEC  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 27179  00DBF0  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 27180  00DBF4  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 27181                           
 27182                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 27183  00DBF8  C2E9  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 27184  00DBFC  C2EA  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 27185  00DC00  EE22  F0DA         	lfsr	2,_LUN+6
 27186  00DC04  D801               	call	u21688
 27187  00DC06  D00A               	goto	u21689
 27188  00DC08                     u21688:
 27189  00DC08  0005               	push	
 27190  00DC0A  6EFA               	movwf	pclath,c
 27191  00DC0C  50DE               	movf	postinc2,w,c
 27192  00DC0E  6EFD               	movwf	tosl,c
 27193  00DC10  50DE               	movf	postinc2,w,c
 27194  00DC12  6EFE               	movwf	tosh,c
 27195  00DC14  50DE               	movf	postinc2,w,c
 27196  00DC16  6EFF               	movwf	tosu,c
 27197  00DC18  50FA               	movf	pclath,w,c
 27198  00DC1A  0012               	return		;indir
 27199  00DC1C                     u21689:
 27200  00DC1C  0100               	movlb	0	; () banked
 27201  00DC1E  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 27202  00DC22  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 27203  00DC26  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 27204  00DC28  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 27205                           
 27206                           ; BSR set to: 0
 27207                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 27208  00DC2A  EE26 F000          	lfsr	2,1536
 27209  00DC2E  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 27210                           
 27211                           ; BSR set to: 0
 27212                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 27213  00DC32  EE26 F001          	lfsr	2,1537	;volatile
 27214  00DC36  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 27215                           
 27216                           ; BSR set to: 0
 27217                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 27218  00DC3A  EE26 F002          	lfsr	2,1538	;volatile
 27219  00DC3E  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 27220                           
 27221                           ; BSR set to: 0
 27222                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 27223  00DC42  EE26 F003          	lfsr	2,1539	;volatile
 27224  00DC46  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 27225                           
 27226                           ; BSR set to: 0
 27227                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 27228  00DC4A  EE26 F004          	lfsr	2,1540	;volatile
 27229  00DC4E  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 27230                           
 27231                           ; BSR set to: 0
 27232                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 27233  00DC52  EE26 F005          	lfsr	2,1541	;volatile
 27234  00DC56  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 27235                           
 27236                           ; BSR set to: 0
 27237                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 27238  00DC5A  EE26 F006          	lfsr	2,1542	;volatile
 27239  00DC5E  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 27240                           
 27241                           ; BSR set to: 0
 27242                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 27243  00DC62  EE26 F007          	lfsr	2,1543	;volatile
 27244  00DC66  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 27245                           
 27246                           ; BSR set to: 0
 27247                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 27248  00DC6A  0E00               	movlw	0
 27249  00DC6C  6E10               	movwf	_TransferLength+1,c
 27250  00DC6E  0E08               	movlw	8
 27251  00DC70  6E0F               	movwf	_TransferLength,c
 27252                           
 27253                           ; BSR set to: 0
 27254                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 27255  00DC72  0E00               	movlw	0
 27256  00DC74  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 27257  00DC76  0E08               	movlw	8
 27258  00DC78  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 27259  00DC7A  ECD5  F0AD         	call	_MSDComputeDeviceInAndResidue	;wreg free
 27260                           
 27261                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 27262  00DC7E  0EFD               	movlw	253
 27263  00DC80  6E23               	movwf	_MSDCommandState,c
 27264                           
 27265                           ;usb_device_msd.c: 802: break;
 27266  00DC82  0012               	return	
 27267  00DC84                     
 27268                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 27269  00DC84  0421               	decf	_MSDHostNoData,w,c
 27270  00DC86  A4D8               	btfss	status,2,c
 27271  00DC88  D002               	goto	l645
 27272                           
 27273                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 27274  00DC8A  6823               	setf	_MSDCommandState,c
 27275                           
 27276                           ;usb_device_msd.c: 814: break;
 27277  00DC8C  0012               	return	
 27278  00DC8E                     l645:
 27279                           
 27280                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 27281  00DC8E  0E00               	movlw	0
 27282  00DC90  6E10               	movwf	_TransferLength+1,c
 27283  00DC92  0E12               	movlw	18
 27284  00DC94  6E0F               	movwf	_TransferLength,c
 27285                           
 27286                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 27287  00DC96  0E00               	movlw	0
 27288  00DC98  0100               	movlb	0	; () banked
 27289  00DC9A  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 27290  00DC9C  0E12               	movlw	18
 27291  00DC9E  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 27292  00DCA0  ECD5  F0AD         	call	_MSDComputeDeviceInAndResidue	;wreg free
 27293                           
 27294                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 27295  00DCA4  0E00               	movlw	0
 27296  00DCA6  0100               	movlb	0	; () banked
 27297  00DCA8  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 27298  00DCAA                     l23597:
 27299                           
 27300                           ; BSR set to: 0
 27301  00DCAA  0E11               	movlw	17
 27302  00DCAC  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 27303  00DCAE  D001               	goto	l646
 27304  00DCB0  D014               	goto	u21710
 27305  00DCB2                     l646:
 27306                           
 27307                           ; BSR set to: 0
 27308                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 27309                           
 27310                           ; BSR set to: 0
 27311  00DCB2  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 27312  00DCB4  0D01               	mullw	1
 27313  00DCB6  0E67               	movlw	low _gblSenseData
 27314  00DCB8  24F3               	addwf	prodl,w,c
 27315  00DCBA  6ED9               	movwf	fsr2l,c
 27316  00DCBC  0E02               	movlw	high _gblSenseData
 27317  00DCBE  20F4               	addwfc	prodh,w,c
 27318  00DCC0  6EDA               	movwf	fsr2h,c
 27319  00DCC2  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 27320  00DCC4  0D01               	mullw	1
 27321  00DCC6  0E00               	movlw	0
 27322  00DCC8  24F3               	addwf	prodl,w,c
 27323  00DCCA  6EE1               	movwf	fsr1l,c
 27324  00DCCC  0E06               	movlw	6
 27325  00DCCE  20F4               	addwfc	prodh,w,c
 27326  00DCD0  6EE2               	movwf	fsr1h,c
 27327  00DCD2  CFDF FFE7          	movff	indf2,indf1
 27328                           
 27329                           ; BSR set to: 0
 27330  00DCD6  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 27331  00DCD8  D7E8               	goto	l23597
 27332  00DCDA                     u21710:
 27333                           
 27334                           ; BSR set to: 0
 27335                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 27336                           
 27337                           ; BSR set to: 0
 27338  00DCDA  0EFD               	movlw	253
 27339  00DCDC  6E23               	movwf	_MSDCommandState,c
 27340                           
 27341                           ;usb_device_msd.c: 827: break;
 27342  00DCDE  0012               	return	
 27343  00DCE0                     l648:
 27344                           
 27345                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 27346  00DCE0  0E03               	movlw	3
 27347  00DCE2  CFE8 F600          	movff	wreg,1536
 27348                           
 27349                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 27350  00DCE6  0E00               	movlw	0
 27351  00DCE8  CFE8 F601          	movff	wreg,1537	;volatile
 27352                           
 27353                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 27354  00DCEC  C2E9  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 27355  00DCF0  C2EA  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 27356  00DCF4  EE22  F0E3         	lfsr	2,_LUN+15
 27357  00DCF8  D801               	call	u21728
 27358  00DCFA  D00A               	goto	u21729
 27359  00DCFC                     u21728:
 27360  00DCFC  0005               	push	
 27361  00DCFE  6EFA               	movwf	pclath,c
 27362  00DD00  50DE               	movf	postinc2,w,c
 27363  00DD02  6EFD               	movwf	tosl,c
 27364  00DD04  50DE               	movf	postinc2,w,c
 27365  00DD06  6EFE               	movwf	tosh,c
 27366  00DD08  50DE               	movf	postinc2,w,c
 27367  00DD0A  6EFF               	movwf	tosu,c
 27368  00DD0C  50FA               	movf	pclath,w,c
 27369  00DD0E  0012               	return		;indir
 27370  00DD10                     u21729:
 27371  00DD10  0900               	iorlw	0
 27372  00DD12  A4D8               	btfss	status,2,c
 27373  00DD14  D005               	goto	l650
 27374  00DD16  0E00               	movlw	0
 27375  00DD18  0100               	movlb	0	; () banked
 27376  00DD1A  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2765+1)& (0+255),b
 27377  00DD1C  0E00               	movlw	0
 27378  00DD1E  D004               	goto	L21
 27379  00DD20                     l650:
 27380                           
 27381                           ; BSR set to: 0
 27382  00DD20  0E00               	movlw	0
 27383  00DD22  0100               	movlb	0	; () banked
 27384  00DD24  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2765+1)& (0+255),b
 27385  00DD26  0E80               	movlw	128
 27386  00DD28                     L21:
 27387  00DD28  6F9B               	movwf	_MSDProcessCommandMediaPresent$2765& (0+255),b
 27388                           
 27389                           ; BSR set to: 0
 27390                           
 27391                           ; BSR set to: 0
 27392  00DD2A  EE26 F002          	lfsr	2,1538	;volatile
 27393  00DD2E  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2765,indf2
 27394                           
 27395                           ; BSR set to: 0
 27396                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 27397  00DD32  0E00               	movlw	0
 27398  00DD34  CFE8 F603          	movff	wreg,1539	;volatile
 27399                           
 27400                           ; BSR set to: 0
 27401                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 27402  00DD38  0E00               	movlw	0
 27403  00DD3A  6E10               	movwf	_TransferLength+1,c
 27404  00DD3C  0E04               	movlw	4
 27405  00DD3E  6E0F               	movwf	_TransferLength,c
 27406                           
 27407                           ; BSR set to: 0
 27408                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 27409  00DD40  0E00               	movlw	0
 27410  00DD42  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 27411  00DD44  0E04               	movlw	4
 27412  00DD46  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 27413  00DD48  ECD5  F0AD         	call	_MSDComputeDeviceInAndResidue	;wreg free
 27414                           
 27415                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 27416  00DD4C  0EFD               	movlw	253
 27417  00DD4E  6E23               	movwf	_MSDCommandState,c
 27418                           
 27419                           ;usb_device_msd.c: 839: break;
 27420  00DD50  0012               	return	
 27421  00DD52                     
 27422                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 27423  00DD52  0102               	movlb	2	; () banked
 27424  00DD54  5169               	movf	(_gblSenseData+2)& (0+255),w,b
 27425  00DD56  0BF0               	andlw	-16
 27426  00DD58  0905               	iorlw	5
 27427  00DD5A  6F69               	movwf	(_gblSenseData+2)& (0+255),b
 27428                           
 27429                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 27430  00DD5C  0E20               	movlw	32
 27431  00DD5E  6F73               	movwf	(_gblSenseData+12)& (0+255),b
 27432                           
 27433                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 27434  00DD60  0E00               	movlw	0
 27435  00DD62  6F74               	movwf	(_gblSenseData+13)& (0+255),b
 27436                           
 27437                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 27438  00DD64  0E01               	movlw	1
 27439  00DD66  010D               	movlb	13	; () banked
 27440  00DD68  6F8C               	movwf	140,b	;volatile
 27441                           
 27442                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 27443  00DD6A  0E00               	movlw	0
 27444  00DD6C  6F88               	movwf	136,b	;volatile
 27445  00DD6E  0E00               	movlw	0
 27446  00DD70  6F89               	movwf	137,b	;volatile
 27447  00DD72  0E00               	movlw	0
 27448  00DD74  6F8A               	movwf	138,b	;volatile
 27449  00DD76  0E00               	movlw	0
 27450  00DD78  6F8B               	movwf	139,b	;volatile
 27451                           
 27452                           ; BSR set to: 13
 27453                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 27454  00DD7A  6823               	setf	_MSDCommandState,c
 27455                           
 27456                           ;usb_device_msd.c: 848: break;
 27457  00DD7C  0012               	return	
 27458  00DD7E                     
 27459                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 27460                           
 27461                           ; BSR set to: 13
 27462  00DD7E  0E00               	movlw	0
 27463  00DD80  0100               	movlb	0	; () banked
 27464  00DD82  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 27465  00DD84  0E00               	movlw	0
 27466  00DD86  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 27467  00DD88  0E00               	movlw	0
 27468  00DD8A  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 27469  00DD8C  0E00               	movlw	0
 27470  00DD8E  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 27471  00DD90  EC56  F09F         	call	_MSDCheckForErrorCases	;wreg free
 27472  00DD94  0900               	iorlw	0
 27473  00DD96  A4D8               	btfss	status,2,c
 27474  00DD98  0012               	return	
 27475                           
 27476                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 27477                           
 27478                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 27479  00DD9A  0102               	movlb	2	; () banked
 27480  00DD9C  5169               	movf	(_gblSenseData+2)& (0+255),w,b
 27481  00DD9E  0B0F               	andlw	15
 27482  00DDA0  0A06               	xorlw	6
 27483  00DDA2  A4D8               	btfss	status,2,c
 27484  00DDA4  D006               	goto	l656
 27485                           
 27486                           ; BSR set to: 2
 27487  00DDA6  010D               	movlb	13	; () banked
 27488  00DDA8  058C               	decf	140,w,b	;volatile
 27489  00DDAA  A4D8               	btfss	status,2,c
 27490  00DDAC  D002               	goto	l656
 27491                           
 27492                           ; BSR set to: 13
 27493                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 27494  00DDAE  6823               	setf	_MSDCommandState,c
 27495                           
 27496                           ;usb_device_msd.c: 870: }
 27497  00DDB0  0012               	return	
 27498  00DDB2                     l656:
 27499                           
 27500                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 27501                           
 27502                           ; BSR set to: 13
 27503  00DDB2  EC35  F0BA         	call	_ResetSenseData	;wreg free
 27504                           
 27505                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 27506  00DDB6  0E00               	movlw	0
 27507  00DDB8  010D               	movlb	13	; () banked
 27508  00DDBA  6F88               	movwf	136,b	;volatile
 27509  00DDBC  0E00               	movlw	0
 27510  00DDBE  6F89               	movwf	137,b	;volatile
 27511  00DDC0  0E00               	movlw	0
 27512  00DDC2  6F8A               	movwf	138,b	;volatile
 27513  00DDC4  0E00               	movlw	0
 27514  00DDC6  6F8B               	movwf	139,b	;volatile
 27515                           
 27516                           ; BSR set to: 13
 27517                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 27518  00DDC8  6823               	setf	_MSDCommandState,c
 27519                           
 27520                           ; BSR set to: 13
 27521                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 27522  00DDCA  0012               	return	
 27523  00DDCC                     
 27524                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 27525                           
 27526                           ; BSR set to: 13
 27527                           
 27528                           ; BSR set to: 13
 27529  00DDCC  0E00               	movlw	0
 27530  00DDCE  010D               	movlb	13	; () banked
 27531  00DDD0  6F88               	movwf	136,b	;volatile
 27532  00DDD2  0E00               	movlw	0
 27533  00DDD4  6F89               	movwf	137,b	;volatile
 27534  00DDD6  0E00               	movlw	0
 27535  00DDD8  6F8A               	movwf	138,b	;volatile
 27536  00DDDA  0E00               	movlw	0
 27537  00DDDC  6F8B               	movwf	139,b	;volatile
 27538                           
 27539                           ; BSR set to: 13
 27540                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 27541  00DDDE  6823               	setf	_MSDCommandState,c
 27542                           
 27543                           ;usb_device_msd.c: 885: break;
 27544  00DDE0  0012               	return	
 27545  00DDE2                     
 27546                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 27547                           
 27548                           ; BSR set to: 13
 27549  00DDE2  5011               	movf	_USBMSDInHandle,w,c
 27550  00DDE4  1012               	iorwf	_USBMSDInHandle+1,w,c
 27551  00DDE6  B4D8               	btfsc	status,2,c
 27552  00DDE8  D006               	goto	u21780
 27553  00DDEA  C011  FFD9         	movff	_USBMSDInHandle,fsr2l
 27554  00DDEE  C012  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 27555  00DDF2  BEDF               	btfsc	indf2,7,c
 27556  00DDF4  0012               	return	
 27557  00DDF6                     u21780:
 27558                           
 27559                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 27560  00DDF6  0102               	movlb	2	; () banked
 27561  00DDF8  5153               	movf	(_gblCBW+11)& (0+255),w,b
 27562  00DDFA  1152               	iorwf	(_gblCBW+10)& (0+255),w,b
 27563  00DDFC  1151               	iorwf	(_gblCBW+9)& (0+255),w,b
 27564  00DDFE  E104               	bnz	u21790
 27565  00DE00  0E40               	movlw	64
 27566  00DE02  5D50               	subwf	(_gblCBW+8)& (0+255),w,b
 27567  00DE04  A0D8               	btfss	status,0,c
 27568  00DE06  D00B               	goto	l664
 27569  00DE08                     u21790:
 27570                           
 27571                           ; BSR set to: 2
 27572                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 27573  00DE08  0E40               	movlw	64
 27574  00DE0A  0100               	movlb	0	; () banked
 27575  00DE0C  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 27576                           
 27577                           ; BSR set to: 0
 27578                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 27579  00DE0E  0E40               	movlw	64
 27580  00DE10  0102               	movlb	2	; () banked
 27581  00DE12  5F50               	subwf	(_gblCBW+8)& (0+255),f,b
 27582  00DE14  0E00               	movlw	0
 27583  00DE16  5B51               	subwfb	(_gblCBW+9)& (0+255),f,b
 27584  00DE18  5B52               	subwfb	(_gblCBW+10)& (0+255),f,b
 27585  00DE1A  5B53               	subwfb	(_gblCBW+11)& (0+255),f,b
 27586                           
 27587                           ;usb_device_msd.c: 900: }
 27588  00DE1C  D00A               	goto	l665
 27589  00DE1E                     l664:
 27590                           
 27591                           ; BSR set to: 2
 27592                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 27593  00DE1E  C250  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 27594                           
 27595                           ; BSR set to: 2
 27596                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 27597  00DE22  0E00               	movlw	0
 27598  00DE24  6F50               	movwf	(_gblCBW+8)& (0+255),b
 27599  00DE26  0E00               	movlw	0
 27600  00DE28  6F51               	movwf	(_gblCBW+9)& (0+255),b
 27601  00DE2A  0E00               	movlw	0
 27602  00DE2C  6F52               	movwf	(_gblCBW+10)& (0+255),b
 27603  00DE2E  0E00               	movlw	0
 27604  00DE30  6F53               	movwf	(_gblCBW+11)& (0+255),b
 27605  00DE32                     l665:
 27606                           
 27607                           ; BSR set to: 2
 27608                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 27609                           
 27610                           ; BSR set to: 2
 27611  00DE32  0100               	movlb	0	; () banked
 27612  00DE34  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 27613  00DE36  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 27614  00DE38  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 27615  00DE3A  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 27616  00DE3C  5C0F               	subwf	_TransferLength,w,c
 27617  00DE3E  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 27618  00DE40  5810               	subwfb	_TransferLength+1,w,c
 27619  00DE42  A0D8               	btfss	status,0,c
 27620  00DE44  D005               	goto	l666
 27621                           
 27622                           ; BSR set to: 0
 27623                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 27624  00DE46  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 27625  00DE48  5E0F               	subwf	_TransferLength,f,c
 27626  00DE4A  0E00               	movlw	0
 27627  00DE4C  5A10               	subwfb	_TransferLength+1,f,c
 27628                           
 27629                           ;usb_device_msd.c: 918: }
 27630  00DE4E  D01A               	goto	u21820
 27631  00DE50                     l666:
 27632                           
 27633                           ; BSR set to: 0
 27634                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 27635                           
 27636                           ; BSR set to: 0
 27637  00DE50  0E00               	movlw	0
 27638  00DE52  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 27639  00DE54  D013               	goto	l668
 27640  00DE56                     
 27641                           ; BSR set to: 0
 27642                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 27643                           
 27644                           ; BSR set to: 0
 27645  00DE56  500F               	movf	_TransferLength,w,c
 27646  00DE58  1010               	iorwf	_TransferLength+1,w,c
 27647  00DE5A  B4D8               	btfsc	status,2,c
 27648  00DE5C  D004               	goto	l670
 27649                           
 27650                           ; BSR set to: 0
 27651                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 27652  00DE5E  060F               	decf	_TransferLength,f,c
 27653  00DE60  A0D8               	btfss	status,0,c
 27654  00DE62  0610               	decf	_TransferLength+1,f,c
 27655                           
 27656                           ;usb_device_msd.c: 932: }
 27657  00DE64  D00A               	goto	l671
 27658  00DE66                     l670:
 27659                           
 27660                           ; BSR set to: 0
 27661                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 27662                           
 27663                           ; BSR set to: 0
 27664  00DE66  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 27665  00DE68  0D01               	mullw	1
 27666  00DE6A  0E00               	movlw	0
 27667  00DE6C  24F3               	addwf	prodl,w,c
 27668  00DE6E  6ED9               	movwf	fsr2l,c
 27669  00DE70  0E06               	movlw	6
 27670  00DE72  20F4               	addwfc	prodh,w,c
 27671  00DE74  6EDA               	movwf	fsr2h,c
 27672  00DE76  0E00               	movlw	0
 27673  00DE78  6EDF               	movwf	indf2,c
 27674  00DE7A                     l671:
 27675                           
 27676                           ; BSR set to: 0
 27677                           
 27678                           ; BSR set to: 0
 27679  00DE7A  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 27680  00DE7C                     l668:
 27681                           
 27682                           ; BSR set to: 0
 27683                           
 27684                           ; BSR set to: 0
 27685  00DE7C  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 27686  00DE7E  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 27687  00DE80  A0D8               	btfss	status,0,c
 27688  00DE82  D7E9               	goto	l669
 27689  00DE84                     u21820:
 27690                           
 27691                           ; BSR set to: 0
 27692                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 27693                           
 27694                           ; BSR set to: 0
 27695                           
 27696                           ; BSR set to: 0
 27697  00DE84  0E01               	movlw	1
 27698  00DE86  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 27699  00DE88  0E00               	movlw	0
 27700  00DE8A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 27701  00DE8C  0E06               	movlw	6
 27702  00DE8E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 27703  00DE90  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 27704  00DE94  0E02               	movlw	2
 27705  00DE96  ECD7  F09A         	call	_USBTransferOnePacket
 27706  00DE9A  C060  F011         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 27707  00DE9E  C061  F012         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 27708                           
 27709                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 27710  00DEA2  0102               	movlb	2	; () banked
 27711  00DEA4  5150               	movf	(_gblCBW+8)& (0+255),w,b
 27712  00DEA6  1151               	iorwf	(_gblCBW+9)& (0+255),w,b
 27713  00DEA8  1152               	iorwf	(_gblCBW+10)& (0+255),w,b
 27714  00DEAA  1153               	iorwf	(_gblCBW+11)& (0+255),w,b
 27715  00DEAC  A4D8               	btfss	status,2,c
 27716  00DEAE  0012               	return	
 27717                           
 27718                           ; BSR set to: 2
 27719                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 27720  00DEB0  6823               	setf	_MSDCommandState,c
 27721                           
 27722                           ; BSR set to: 2
 27723                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 27724                           
 27725                           ; BSR set to: 2
 27726                           
 27727                           ;usb_device_msd.c: 949: break;
 27728  00DEB2  0012               	return	
 27729  00DEB4                     
 27730                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 27731                           
 27732                           ; BSR set to: 2
 27733                           
 27734                           ;usb_device_msd.c: 954: default:
 27735                           
 27736                           ; BSR set to: 2
 27737  00DEB4  0E7F               	movlw	127
 27738  00DEB6  EC31  F098         	call	_MSDErrorHandler
 27739                           
 27740                           ;usb_device_msd.c: 960: }
 27741                           
 27742                           ;usb_device_msd.c: 959: break;
 27743  00DEBA  0012               	return	
 27744  00DEBC                     l634:
 27745  00DEBC  5023               	movf	_MSDCommandState,w,c
 27746                           
 27747                           ; Switch size 1, requested type "space"
 27748                           ; Number of cases is 12, Range of values is 0 to 254
 27749                           ; switch strategies available:
 27750                           ; Name         Instructions Cycles
 27751                           ; simple_byte           37    19 (average)
 27752                           ;	Chosen strategy is simple_byte
 27753  00DEBE  0A00               	xorlw	0	; case 0
 27754  00DEC0  B4D8               	btfsc	status,2,c
 27755  00DEC2  D75D               	goto	l654
 27756  00DEC4  0A03               	xorlw	3	; case 3
 27757  00DEC6  B4D8               	btfsc	status,2,c
 27758  00DEC8  D6DD               	goto	l644
 27759  00DECA  0A11               	xorlw	17	; case 18
 27760  00DECC  B4D8               	btfsc	status,2,c
 27761  00DECE  D64C               	goto	l640
 27762  00DED0  0A08               	xorlw	8	; case 26
 27763  00DED2  B4D8               	btfsc	status,2,c
 27764  00DED4  D705               	goto	l648
 27765  00DED6  0A01               	xorlw	1	; case 27
 27766  00DED8  B4D8               	btfsc	status,2,c
 27767  00DEDA  D778               	goto	l658
 27768  00DEDC  0A05               	xorlw	5	; case 30
 27769  00DEDE  B4D8               	btfsc	status,2,c
 27770  00DEE0  D738               	goto	l653
 27771  00DEE2  0A3B               	xorlw	59	; case 37
 27772  00DEE4  B4D8               	btfsc	status,2,c
 27773  00DEE6  D66E               	goto	l643
 27774  00DEE8  0A0D               	xorlw	13	; case 40
 27775  00DEEA  B4D8               	btfsc	status,2,c
 27776  00DEEC  D62F               	goto	l635
 27777  00DEEE  0A02               	xorlw	2	; case 42
 27778  00DEF0  B4D8               	btfsc	status,2,c
 27779  00DEF2  D633               	goto	l638
 27780  00DEF4  0A05               	xorlw	5	; case 47
 27781  00DEF6  B4D8               	btfsc	status,2,c
 27782  00DEF8  D769               	goto	l658
 27783  00DEFA  0AD2               	xorlw	210	; case 253
 27784  00DEFC  B4D8               	btfsc	status,2,c
 27785  00DEFE  D771               	goto	l660
 27786  00DF00  0A03               	xorlw	3	; case 254
 27787  00DF02  D7D8               	goto	l674
 27788  00DF04                     __end_of_MSDProcessCommandMediaPresent:
 27789                           	opt stack 0
 27790                           tosu	equ	0xFFF
 27791                           tosh	equ	0xFFE
 27792                           tosl	equ	0xFFD
 27793                           pclath	equ	0xFFA
 27794                           tblptru	equ	0xFF8
 27795                           tblptrh	equ	0xFF7
 27796                           tblptrl	equ	0xFF6
 27797                           tablat	equ	0xFF5
 27798                           prodh	equ	0xFF4
 27799                           prodl	equ	0xFF3
 27800                           intcon	equ	0xFF2
 27801                           intcon2	equ	0xFF1
 27802                           intcon3	equ	0xFF0
 27803                           postinc0	equ	0xFEE
 27804                           wreg	equ	0xFE8
 27805                           indf1	equ	0xFE7
 27806                           postdec1	equ	0xFE5
 27807                           plusw1	equ	0xFE3
 27808                           fsr1h	equ	0xFE2
 27809                           fsr1l	equ	0xFE1
 27810                           indf2	equ	0xFDF
 27811                           postinc2	equ	0xFDE
 27812                           postdec2	equ	0xFDD
 27813                           plusw2	equ	0xFDB
 27814                           fsr2h	equ	0xFDA
 27815                           fsr2l	equ	0xFD9
 27816                           status	equ	0xFD8
 27817                           
 27818 ;; *************** function _MSDWriteHandler *****************
 27819 ;; Defined at:
 27820 ;;		line 1188 in file "usb_device_msd.c"
 27821 ;; Parameters:    Size  Location     Type
 27822 ;;		None
 27823 ;; Auto vars:     Size  Location     Type
 27824 ;;		None
 27825 ;; Return value:  Size  Location     Type
 27826 ;;                  1    wreg      unsigned char 
 27827 ;; Registers used:
 27828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 27829 ;; Tracked objects:
 27830 ;;		On entry : 0/0
 27831 ;;		On exit  : 0/0
 27832 ;;		Unchanged: 0/0
 27833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27836 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27837 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27838 ;;Total ram usage:        5 bytes
 27839 ;; Hardware stack levels used:    1
 27840 ;; Hardware stack levels required when called:   16
 27841 ;; This function calls:
 27842 ;;		_ExternalFlash_SectorWrite
 27843 ;;		_ExternalFlash_WriteProtectStateGet
 27844 ;;		_MSDCheckForErrorCases
 27845 ;;		_USBStallEndpoint
 27846 ;;		_USBTransferOnePacket
 27847 ;; This function is called by:
 27848 ;;		_MSDProcessCommandMediaPresent
 27849 ;; This function uses a non-reentrant model
 27850 ;;
 27851                           
 27852                           	psect	text111
 27853  00EBFE                     __ptext111:
 27854                           	opt stack 0
 27855  00EBFE                     _MSDWriteHandler:
 27856                           	opt stack 10
 27857                           
 27858                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 27859                           
 27860                           ;incstack = 0
 27861  00EBFE  D157               	goto	l704
 27862  00EC00                     l705:
 27863                           
 27864                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 27865  00EC00  C259  F1E7         	movff	_gblCBW+17,_LBA+3
 27866                           
 27867                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 27868  00EC04  C25A  F1E6         	movff	_gblCBW+18,_LBA+2
 27869                           
 27870                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 27871  00EC08  C25B  F1E5         	movff	_gblCBW+19,_LBA+1
 27872                           
 27873                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 27874  00EC0C  C25C  F1E4         	movff	_gblCBW+20,_LBA
 27875                           
 27876                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 27877  00EC10  C25E  F010         	movff	_gblCBW+22,_TransferLength+1
 27878                           
 27879                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 27880  00EC14  C25F  F00F         	movff	_gblCBW+23,_TransferLength
 27881                           
 27882                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 27883  00EC18  500F               	movf	_TransferLength,w,c
 27884  00EC1A  0100               	movlb	0	; () banked
 27885  00EC1C  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 27886  00EC1E  5010               	movf	_TransferLength+1,w,c
 27887  00EC20  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 27888  00EC22  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 27889  00EC24  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 27890  00EC26  0E09               	movlw	9
 27891  00EC28                     u20775:
 27892  00EC28  90D8               	bcf	status,0,c
 27893  00EC2A  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 27894  00EC2C  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 27895  00EC2E  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 27896  00EC30  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 27897  00EC32  2EE8               	decfsz	wreg,f,c
 27898  00EC34  D7F9               	goto	u20775
 27899  00EC36  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 27900  00EC3A  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 27901  00EC3E  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 27902  00EC42  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 27903  00EC46  EC56  F09F         	call	_MSDCheckForErrorCases	;wreg free
 27904  00EC4A  0900               	iorlw	0
 27905  00EC4C  A4D8               	btfss	status,2,c
 27906  00EC4E  D140               	goto	l707
 27907                           
 27908                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 27909                           
 27910                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 27911  00EC50  C2E9  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 27912  00EC54  C2EA  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 27913  00EC58  EE22  F0E3         	lfsr	2,_LUN+15
 27914  00EC5C  D801               	call	u20798
 27915  00EC5E  D00A               	goto	u20799
 27916  00EC60                     u20798:
 27917  00EC60  0005               	push	
 27918  00EC62  6EFA               	movwf	pclath,c
 27919  00EC64  50DE               	movf	postinc2,w,c
 27920  00EC66  6EFD               	movwf	tosl,c
 27921  00EC68  50DE               	movf	postinc2,w,c
 27922  00EC6A  6EFE               	movwf	tosh,c
 27923  00EC6C  50DE               	movf	postinc2,w,c
 27924  00EC6E  6EFF               	movwf	tosu,c
 27925  00EC70  50FA               	movf	pclath,w,c
 27926  00EC72  0012               	return		;indir
 27927  00EC74                     u20799:
 27928  00EC74  0900               	iorlw	0
 27929  00EC76  B4D8               	btfsc	status,2,c
 27930  00EC78  D016               	goto	l708
 27931                           
 27932                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 27933  00EC7A  0E01               	movlw	1
 27934  00EC7C  010D               	movlb	13	; () banked
 27935  00EC7E  6F8C               	movwf	140,b	;volatile
 27936                           
 27937                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 27938  00EC80  0102               	movlb	2	; () banked
 27939  00EC82  5169               	movf	(_gblSenseData+2)& (0+255),w,b
 27940  00EC84  0BF0               	andlw	-16
 27941  00EC86  0907               	iorlw	7
 27942  00EC88  6F69               	movwf	(_gblSenseData+2)& (0+255),b
 27943                           
 27944                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 27945  00EC8A  0E27               	movlw	39
 27946  00EC8C  6F73               	movwf	(_gblSenseData+12)& (0+255),b
 27947                           
 27948                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 27949  00EC8E  0E00               	movlw	0
 27950  00EC90  6F74               	movwf	(_gblSenseData+13)& (0+255),b
 27951                           
 27952                           ; BSR set to: 2
 27953                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 27954  00EC92  0E00               	movlw	0
 27955  00EC94  0100               	movlb	0	; () banked
 27956  00EC96  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 27957  00EC98  0E02               	movlw	2
 27958  00EC9A  EC52  F09A         	call	_USBStallEndpoint
 27959                           
 27960                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 27961  00EC9E  0E00               	movlw	0
 27962  00ECA0  6E22               	movwf	_MSDWriteState,c
 27963                           
 27964                           ;usb_device_msd.c: 1228: return MSDWriteState;
 27965  00ECA2  5022               	movf	_MSDWriteState,w,c
 27966  00ECA4  0012               	return	
 27967  00ECA6                     l708:
 27968                           
 27969                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 27970  00ECA6  0E01               	movlw	1
 27971  00ECA8  6E24               	movwf	_MSD_State,c
 27972  00ECAA                     
 27973                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 27974  00ECAA  500F               	movf	_TransferLength,w,c
 27975  00ECAC  1010               	iorwf	_TransferLength+1,w,c
 27976  00ECAE  B4D8               	btfsc	status,2,c
 27977  00ECB0  D0FB               	goto	l22607
 27978                           
 27979                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 27980                           
 27981                           ;usb_device_msd.c: 1238: break;
 27982                           
 27983                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 27984  00ECB2  0E03               	movlw	3
 27985  00ECB4  6E22               	movwf	_MSDWriteState,c
 27986                           
 27987                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 27988  00ECB6  0E00               	movlw	0
 27989  00ECB8  0102               	movlb	2	; () banked
 27990  00ECBA  6FC5               	movwf	_ptrNextData& (0+255),b
 27991  00ECBC  0E06               	movlw	6
 27992  00ECBE  6FC6               	movwf	(_ptrNextData+1)& (0+255),b
 27993                           
 27994                           ; BSR set to: 2
 27995                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 27996  00ECC0  0E00               	movlw	0
 27997  00ECC2  010D               	movlb	13	; () banked
 27998  00ECC4  6F88               	movwf	136,b	;volatile
 27999  00ECC6  0E02               	movlw	2
 28000  00ECC8  6F89               	movwf	137,b	;volatile
 28001  00ECCA  0E00               	movlw	0
 28002  00ECCC  6F8A               	movwf	138,b	;volatile
 28003  00ECCE  0E00               	movlw	0
 28004  00ECD0  6F8B               	movwf	139,b	;volatile
 28005  00ECD2                     l712:
 28006                           
 28007                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 28008  00ECD2  010D               	movlb	13	; () banked
 28009  00ECD4  5188               	movf	136,w,b	;volatile
 28010  00ECD6  1189               	iorwf	137,w,b	;volatile
 28011  00ECD8  118A               	iorwf	138,w,b	;volatile
 28012  00ECDA  118B               	iorwf	139,w,b	;volatile
 28013  00ECDC  B4D8               	btfsc	status,2,c
 28014  00ECDE  D01D               	goto	l713
 28015                           
 28016                           ; BSR set to: 13
 28017                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 28018  00ECE0  5013               	movf	_USBMSDOutHandle,w,c
 28019  00ECE2  1014               	iorwf	_USBMSDOutHandle+1,w,c
 28020  00ECE4  B4D8               	btfsc	status,2,c
 28021  00ECE6  D006               	goto	l714
 28022                           
 28023                           ; BSR set to: 13
 28024  00ECE8  C013  FFD9         	movff	_USBMSDOutHandle,fsr2l
 28025  00ECEC  C014  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 28026  00ECF0  BEDF               	btfsc	indf2,7,c
 28027  00ECF2  D0EE               	goto	l707
 28028  00ECF4                     l714:
 28029                           
 28030                           ; BSR set to: 13
 28031                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 28032                           
 28033                           ; BSR set to: 13
 28034  00ECF4  0E00               	movlw	0
 28035  00ECF6  0100               	movlb	0	; () banked
 28036  00ECF8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 28037  00ECFA  C2C5  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 28038  00ECFE  C2C6  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 28039  00ED02  0E40               	movlw	64
 28040  00ED04  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 28041  00ED06  0E02               	movlw	2
 28042  00ED08  ECD7  F09A         	call	_USBTransferOnePacket
 28043  00ED0C  C060  F013         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 28044  00ED10  C061  F014         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 28045                           
 28046                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 28047  00ED14  0E04               	movlw	4
 28048  00ED16  6E22               	movwf	_MSDWriteState,c
 28049                           
 28050                           ;usb_device_msd.c: 1260: }
 28051  00ED18  D023               	goto	l715
 28052  00ED1A                     l713:
 28053                           
 28054                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 28055  00ED1A  C2E9  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 28056  00ED1E  C2EA  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 28057  00ED22  EE22  F0E3         	lfsr	2,_LUN+15
 28058  00ED26  D801               	call	u20858
 28059  00ED28  D00A               	goto	u20859
 28060  00ED2A                     u20858:
 28061  00ED2A  0005               	push	
 28062  00ED2C  6EFA               	movwf	pclath,c
 28063  00ED2E  50DE               	movf	postinc2,w,c
 28064  00ED30  6EFD               	movwf	tosl,c
 28065  00ED32  50DE               	movf	postinc2,w,c
 28066  00ED34  6EFE               	movwf	tosh,c
 28067  00ED36  50DE               	movf	postinc2,w,c
 28068  00ED38  6EFF               	movwf	tosu,c
 28069  00ED3A  50FA               	movf	pclath,w,c
 28070  00ED3C  0012               	return		;indir
 28071  00ED3E                     u20859:
 28072  00ED3E  0900               	iorlw	0
 28073  00ED40  B4D8               	btfsc	status,2,c
 28074  00ED42  D00C               	goto	l716
 28075                           
 28076                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 28077  00ED44  0E01               	movlw	1
 28078  00ED46  010D               	movlb	13	; () banked
 28079  00ED48  6F8C               	movwf	140,b	;volatile
 28080                           
 28081                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 28082  00ED4A  0102               	movlb	2	; () banked
 28083  00ED4C  5169               	movf	(_gblSenseData+2)& (0+255),w,b
 28084  00ED4E  0BF0               	andlw	-16
 28085  00ED50  0902               	iorlw	2
 28086  00ED52  6F69               	movwf	(_gblSenseData+2)& (0+255),b
 28087                           
 28088                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 28089  00ED54  0E27               	movlw	39
 28090  00ED56  6F73               	movwf	(_gblSenseData+12)& (0+255),b
 28091                           
 28092                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 28093  00ED58  0E00               	movlw	0
 28094  00ED5A  6F74               	movwf	(_gblSenseData+13)& (0+255),b
 28095  00ED5C                     l716:
 28096                           
 28097                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 28098  00ED5C  0E02               	movlw	2
 28099  00ED5E  D0A5               	goto	L25
 28100  00ED60                     l715:
 28101                           
 28102                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 28103                           
 28104                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 28105  00ED60  5013               	movf	_USBMSDOutHandle,w,c
 28106  00ED62  1014               	iorwf	_USBMSDOutHandle+1,w,c
 28107  00ED64  B4D8               	btfsc	status,2,c
 28108  00ED66  D006               	goto	l718
 28109  00ED68  C013  FFD9         	movff	_USBMSDOutHandle,fsr2l
 28110  00ED6C  C014  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 28111  00ED70  BEDF               	btfsc	indf2,7,c
 28112  00ED72  D0AE               	goto	l707
 28113  00ED74                     l718:
 28114                           
 28115                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 28116  00ED74  EE20 F001          	lfsr	2,1
 28117  00ED78  5013               	movf	_USBMSDOutHandle,w,c
 28118  00ED7A  26D9               	addwf	fsr2l,f,c
 28119  00ED7C  5014               	movf	_USBMSDOutHandle+1,w,c
 28120  00ED7E  22DA               	addwfc	fsr2h,f,c
 28121  00ED80  50DF               	movf	indf2,w,c
 28122  00ED82  0100               	movlb	0	; () banked
 28123  00ED84  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 28124  00ED86  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 28125  00ED8A  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 28126  00ED8C  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 28127  00ED8E  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 28128  00ED90  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 28129  00ED92  0102               	movlb	2	; () banked
 28130  00ED94  5F50               	subwf	(_gblCBW+8)& (0+255),f,b
 28131  00ED96  0100               	movlb	0	; () banked
 28132  00ED98  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 28133  00ED9A  0102               	movlb	2	; () banked
 28134  00ED9C  5B51               	subwfb	(_gblCBW+9)& (0+255),f,b
 28135  00ED9E  0100               	movlb	0	; () banked
 28136  00EDA0  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 28137  00EDA2  0102               	movlb	2	; () banked
 28138  00EDA4  5B52               	subwfb	(_gblCBW+10)& (0+255),f,b
 28139  00EDA6  0100               	movlb	0	; () banked
 28140  00EDA8  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 28141  00EDAA  0102               	movlb	2	; () banked
 28142  00EDAC  5B53               	subwfb	(_gblCBW+11)& (0+255),f,b
 28143                           
 28144                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 28145  00EDAE  EE20 F001          	lfsr	2,1
 28146  00EDB2  5013               	movf	_USBMSDOutHandle,w,c
 28147  00EDB4  26D9               	addwf	fsr2l,f,c
 28148  00EDB6  5014               	movf	_USBMSDOutHandle+1,w,c
 28149  00EDB8  22DA               	addwfc	fsr2h,f,c
 28150  00EDBA  50DF               	movf	indf2,w,c
 28151  00EDBC  0100               	movlb	0	; () banked
 28152  00EDBE  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 28153  00EDC0  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 28154  00EDC4  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 28155  00EDC6  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 28156  00EDC8  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 28157  00EDCA  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 28158  00EDCC  010D               	movlb	13	; () banked
 28159  00EDCE  5F88               	subwf	136,f,b	;volatile
 28160  00EDD0  0100               	movlb	0	; () banked
 28161  00EDD2  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 28162  00EDD4  010D               	movlb	13	; () banked
 28163  00EDD6  5B89               	subwfb	137,f,b	;volatile
 28164  00EDD8  0100               	movlb	0	; () banked
 28165  00EDDA  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 28166  00EDDC  010D               	movlb	13	; () banked
 28167  00EDDE  5B8A               	subwfb	138,f,b	;volatile
 28168  00EDE0  0100               	movlb	0	; () banked
 28169  00EDE2  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 28170  00EDE4  010D               	movlb	13	; () banked
 28171  00EDE6  5B8B               	subwfb	139,f,b	;volatile
 28172                           
 28173                           ; BSR set to: 13
 28174                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 28175  00EDE8  0E40               	movlw	64
 28176  00EDEA  0102               	movlb	2	; () banked
 28177  00EDEC  27C5               	addwf	_ptrNextData& (0+255),f,b
 28178  00EDEE  0E00               	movlw	0
 28179  00EDF0  23C6               	addwfc	(_ptrNextData+1)& (0+255),f,b
 28180                           
 28181                           ; BSR set to: 2
 28182                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 28183  00EDF2  0E03               	movlw	3
 28184  00EDF4  D05A               	goto	L25
 28185  00EDF6                     
 28186                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 28187                           
 28188                           ; BSR set to: 2
 28189  00EDF6  010D               	movlb	13	; () banked
 28190  00EDF8  518C               	movf	140,w,b	;volatile
 28191  00EDFA  A4D8               	btfss	status,2,c
 28192  00EDFC  D040               	goto	l723
 28193                           
 28194                           ; BSR set to: 13
 28195                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 28196  00EDFE  C2E9  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 28197  00EE02  C2EA  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 28198  00EE06  C1E4  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 28199  00EE0A  C1E5  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 28200  00EE0E  C1E6  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 28201  00EE12  C1E7  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 28202  00EE16  0E00               	movlw	0
 28203  00EE18  0100               	movlb	0	; () banked
 28204  00EE1A  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 28205  00EE1C  0E06               	movlw	6
 28206  00EE1E  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 28207  00EE20  0101               	movlb	1	; () banked
 28208  00EE22  51E4               	movf	_LBA& (0+255),w,b
 28209  00EE24  11E5               	iorwf	(_LBA+1)& (0+255),w,b
 28210  00EE26  11E6               	iorwf	(_LBA+2)& (0+255),w,b
 28211  00EE28  11E7               	iorwf	(_LBA+3)& (0+255),w,b
 28212  00EE2A  A4D8               	btfss	status,2,c
 28213  00EE2C  D002               	goto	u20900
 28214  00EE2E  0E01               	movlw	1
 28215  00EE30  D001               	goto	u20910
 28216  00EE32                     u20900:
 28217  00EE32  0E00               	movlw	0
 28218  00EE34                     u20910:
 28219  00EE34  0100               	movlb	0	; () banked
 28220  00EE36  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 28221  00EE38  EE22  F0E6         	lfsr	2,_LUN+18
 28222  00EE3C  D801               	call	u20928
 28223  00EE3E  D00A               	goto	u20929
 28224  00EE40                     u20928:
 28225  00EE40  0005               	push	
 28226  00EE42  6EFA               	movwf	pclath,c
 28227  00EE44  50DE               	movf	postinc2,w,c
 28228  00EE46  6EFD               	movwf	tosl,c
 28229  00EE48  50DE               	movf	postinc2,w,c
 28230  00EE4A  6EFE               	movwf	tosh,c
 28231  00EE4C  50DE               	movf	postinc2,w,c
 28232  00EE4E  6EFF               	movwf	tosu,c
 28233  00EE50  50FA               	movf	pclath,w,c
 28234  00EE52  0012               	return		;indir
 28235  00EE54                     u20929:
 28236  00EE54  06E8               	decf	wreg,f,c
 28237  00EE56  B4D8               	btfsc	status,2,c
 28238  00EE58  D012               	goto	l723
 28239                           
 28240                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 28241  00EE5A  0E64               	movlw	100
 28242  00EE5C  0101               	movlb	1	; () banked
 28243  00EE5E  61F5               	cpfslt	_MSDRetryAttempt& (0+255),b
 28244  00EE60  D002               	goto	l722
 28245                           
 28246                           ; BSR set to: 1
 28247                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 28248  00EE62  2BF5               	incf	_MSDRetryAttempt& (0+255),f,b
 28249                           
 28250                           ;usb_device_msd.c: 1314: break;
 28251  00EE64  D035               	goto	l707
 28252  00EE66                     l722:
 28253                           
 28254                           ; BSR set to: 1
 28255                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 28256                           
 28257                           ; BSR set to: 1
 28258  00EE66  0E01               	movlw	1
 28259  00EE68  010D               	movlb	13	; () banked
 28260  00EE6A  6F8C               	movwf	140,b	;volatile
 28261                           
 28262                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 28263  00EE6C  0102               	movlb	2	; () banked
 28264  00EE6E  5169               	movf	(_gblSenseData+2)& (0+255),w,b
 28265  00EE70  0BF0               	andlw	-16
 28266  00EE72  0903               	iorlw	3
 28267  00EE74  6F69               	movwf	(_gblSenseData+2)& (0+255),b
 28268                           
 28269                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 28270  00EE76  0E00               	movlw	0
 28271  00EE78  6F73               	movwf	(_gblSenseData+12)& (0+255),b
 28272                           
 28273                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 28274  00EE7A  0E00               	movlw	0
 28275  00EE7C  6F74               	movwf	(_gblSenseData+13)& (0+255),b
 28276  00EE7E                     l723:
 28277                           
 28278                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 28279                           
 28280                           ; BSR set to: 2
 28281                           
 28282                           ; BSR set to: 2
 28283                           
 28284                           ; BSR set to: 2
 28285  00EE7E  0E01               	movlw	1
 28286  00EE80  0101               	movlb	1	; () banked
 28287  00EE82  27E4               	addwf	_LBA& (0+255),f,b
 28288  00EE84  0E00               	movlw	0
 28289  00EE86  23E5               	addwfc	(_LBA+1)& (0+255),f,b
 28290  00EE88  23E6               	addwfc	(_LBA+2)& (0+255),f,b
 28291  00EE8A  23E7               	addwfc	(_LBA+3)& (0+255),f,b
 28292                           
 28293                           ; BSR set to: 1
 28294                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 28295  00EE8C  060F               	decf	_TransferLength,f,c
 28296  00EE8E  A0D8               	btfss	status,0,c
 28297  00EE90  0610               	decf	_TransferLength+1,f,c
 28298                           
 28299                           ; BSR set to: 1
 28300                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 28301  00EE92  0E01               	movlw	1
 28302  00EE94  D00A               	goto	L25
 28303  00EE96                     
 28304                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 28305                           
 28306                           ; BSR set to: 1
 28307  00EE96  0E02               	movlw	2
 28308  00EE98  010D               	movlb	13	; () banked
 28309  00EE9A  6F8C               	movwf	140,b	;volatile
 28310                           
 28311                           ; BSR set to: 13
 28312                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 28313  00EE9C  0E00               	movlw	0
 28314  00EE9E  0100               	movlb	0	; () banked
 28315  00EEA0  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 28316  00EEA2  0E02               	movlw	2
 28317  00EEA4  EC52  F09A         	call	_USBStallEndpoint
 28318  00EEA8                     l22607:
 28319                           
 28320                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 28321  00EEA8  0E00               	movlw	0
 28322  00EEAA                     L25:
 28323  00EEAA  6E22               	movwf	_MSDWriteState,c
 28324                           
 28325                           ;usb_device_msd.c: 1345: }
 28326                           
 28327                           ;usb_device_msd.c: 1344: break;
 28328  00EEAC  D011               	goto	l707
 28329  00EEAE                     l704:
 28330  00EEAE  5022               	movf	_MSDWriteState,w,c
 28331                           
 28332                           ; Switch size 1, requested type "space"
 28333                           ; Number of cases is 5, Range of values is 0 to 4
 28334                           ; switch strategies available:
 28335                           ; Name         Instructions Cycles
 28336                           ; simple_byte           16     9 (average)
 28337                           ;	Chosen strategy is simple_byte
 28338  00EEB0  0A00               	xorlw	0	; case 0
 28339  00EEB2  B4D8               	btfsc	status,2,c
 28340  00EEB4  D6A5               	goto	l705
 28341  00EEB6  0A01               	xorlw	1	; case 1
 28342  00EEB8  B4D8               	btfsc	status,2,c
 28343  00EEBA  D6F7               	goto	l710
 28344  00EEBC  0A03               	xorlw	3	; case 2
 28345  00EEBE  B4D8               	btfsc	status,2,c
 28346  00EEC0  D79A               	goto	l719
 28347  00EEC2  0A01               	xorlw	1	; case 3
 28348  00EEC4  B4D8               	btfsc	status,2,c
 28349  00EEC6  D705               	goto	l712
 28350  00EEC8  0A07               	xorlw	7	; case 4
 28351  00EECA  B4D8               	btfsc	status,2,c
 28352  00EECC  D749               	goto	l715
 28353  00EECE  D7E3               	goto	l724
 28354  00EED0                     l707:
 28355                           
 28356                           ;usb_device_msd.c: 1347: return MSDWriteState;
 28357  00EED0  5022               	movf	_MSDWriteState,w,c
 28358  00EED2  0012               	return	
 28359  00EED4                     __end_of_MSDWriteHandler:
 28360                           	opt stack 0
 28361                           tosu	equ	0xFFF
 28362                           tosh	equ	0xFFE
 28363                           tosl	equ	0xFFD
 28364                           pclath	equ	0xFFA
 28365                           tblptru	equ	0xFF8
 28366                           tblptrh	equ	0xFF7
 28367                           tblptrl	equ	0xFF6
 28368                           tablat	equ	0xFF5
 28369                           prodh	equ	0xFF4
 28370                           prodl	equ	0xFF3
 28371                           intcon	equ	0xFF2
 28372                           intcon2	equ	0xFF1
 28373                           intcon3	equ	0xFF0
 28374                           postinc0	equ	0xFEE
 28375                           wreg	equ	0xFE8
 28376                           indf1	equ	0xFE7
 28377                           postdec1	equ	0xFE5
 28378                           plusw1	equ	0xFE3
 28379                           fsr1h	equ	0xFE2
 28380                           fsr1l	equ	0xFE1
 28381                           indf2	equ	0xFDF
 28382                           postinc2	equ	0xFDE
 28383                           postdec2	equ	0xFDD
 28384                           plusw2	equ	0xFDB
 28385                           fsr2h	equ	0xFDA
 28386                           fsr2l	equ	0xFD9
 28387                           status	equ	0xFD8
 28388                           
 28389 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 28390 ;; Defined at:
 28391 ;;		line 34 in file "external_flash.c"
 28392 ;; Parameters:    Size  Location     Type
 28393 ;;  config          2    0[BANK0 ] PTR void 
 28394 ;;		 -> NULL(0), 
 28395 ;; Auto vars:     Size  Location     Type
 28396 ;;		None
 28397 ;; Return value:  Size  Location     Type
 28398 ;;                  1    wreg      unsigned char 
 28399 ;; Registers used:
 28400 ;;		wreg
 28401 ;; Tracked objects:
 28402 ;;		On entry : 0/0
 28403 ;;		On exit  : 0/0
 28404 ;;		Unchanged: 0/0
 28405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28406 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28409 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28410 ;;Total ram usage:        2 bytes
 28411 ;; Hardware stack levels used:    1
 28412 ;; Hardware stack levels required when called:   10
 28413 ;; This function calls:
 28414 ;;		Nothing
 28415 ;; This function is called by:
 28416 ;;		_MSDWriteHandler
 28417 ;;		_MSDProcessCommandMediaPresent
 28418 ;; This function uses a non-reentrant model
 28419 ;;
 28420                           
 28421                           	psect	text112
 28422  019110                     __ptext112:
 28423                           	opt stack 0
 28424  019110                     _ExternalFlash_WriteProtectStateGet:
 28425                           	opt stack 15
 28426                           
 28427                           ;external_flash.c: 37: return 0;
 28428                           
 28429                           ;incstack = 0
 28430  019110  0E00               	movlw	0
 28431  019112  0012               	return	
 28432  019114                     __end_of_ExternalFlash_WriteProtectStateGet:
 28433                           	opt stack 0
 28434                           tosu	equ	0xFFF
 28435                           tosh	equ	0xFFE
 28436                           tosl	equ	0xFFD
 28437                           pclath	equ	0xFFA
 28438                           tblptru	equ	0xFF8
 28439                           tblptrh	equ	0xFF7
 28440                           tblptrl	equ	0xFF6
 28441                           tablat	equ	0xFF5
 28442                           prodh	equ	0xFF4
 28443                           prodl	equ	0xFF3
 28444                           intcon	equ	0xFF2
 28445                           intcon2	equ	0xFF1
 28446                           intcon3	equ	0xFF0
 28447                           postinc0	equ	0xFEE
 28448                           wreg	equ	0xFE8
 28449                           indf1	equ	0xFE7
 28450                           postdec1	equ	0xFE5
 28451                           plusw1	equ	0xFE3
 28452                           fsr1h	equ	0xFE2
 28453                           fsr1l	equ	0xFE1
 28454                           indf2	equ	0xFDF
 28455                           postinc2	equ	0xFDE
 28456                           postdec2	equ	0xFDD
 28457                           plusw2	equ	0xFDB
 28458                           fsr2h	equ	0xFDA
 28459                           fsr2l	equ	0xFD9
 28460                           status	equ	0xFD8
 28461                           
 28462 ;; *************** function _ExternalFlash_SectorWrite *****************
 28463 ;; Defined at:
 28464 ;;		line 56 in file "external_flash.c"
 28465 ;; Parameters:    Size  Location     Type
 28466 ;;  config          2   36[BANK0 ] PTR void 
 28467 ;;		 -> NULL(0), 
 28468 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 28469 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 28470 ;;		 -> msd_buffer(512), 
 28471 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 28472 ;; Auto vars:     Size  Location     Type
 28473 ;;  page            2   45[BANK0 ] unsigned int 
 28474 ;; Return value:  Size  Location     Type
 28475 ;;                  1    wreg      unsigned char 
 28476 ;; Registers used:
 28477 ;;		wreg, status,2, status,0, cstack
 28478 ;; Tracked objects:
 28479 ;;		On entry : 0/0
 28480 ;;		On exit  : 0/0
 28481 ;;		Unchanged: 0/0
 28482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28483 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28484 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28486 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28487 ;;Total ram usage:       11 bytes
 28488 ;; Hardware stack levels used:    1
 28489 ;; Hardware stack levels required when called:   15
 28490 ;; This function calls:
 28491 ;;		_flash_sector_write
 28492 ;; This function is called by:
 28493 ;;		_MSDWriteHandler
 28494 ;; This function uses a non-reentrant model
 28495 ;;
 28496                           
 28497                           	psect	text113
 28498  0184A4                     __ptext113:
 28499                           	opt stack 0
 28500  0184A4                     _ExternalFlash_SectorWrite:
 28501                           	opt stack 10
 28502                           
 28503                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 28504                           
 28505                           ;incstack = 0
 28506  0184A4  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 28507  0184A8  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 28508                           
 28509                           ;external_flash.c: 61: if(sector_addr >= 8192)
 28510  0184AC  0100               	movlb	0	; () banked
 28511  0184AE  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 28512  0184B0  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 28513  0184B2  E104               	bnz	u20260
 28514  0184B4  0E20               	movlw	32
 28515  0184B6  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 28516  0184B8  A0D8               	btfss	status,0,c
 28517  0184BA  D002               	goto	l2714
 28518  0184BC                     u20260:
 28519                           
 28520                           ; BSR set to: 0
 28521                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 28522  0184BC  0E00               	movlw	0
 28523                           
 28524                           ; BSR set to: 0
 28525  0184BE  0012               	return	
 28526  0184C0                     l2714:
 28527                           
 28528                           ; BSR set to: 0
 28529                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 28530                           
 28531                           ; BSR set to: 0
 28532  0184C0  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 28533  0184C4  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 28534  0184C8  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 28535  0184CC  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 28536  0184D0  EC54  F0BB         	call	_flash_sector_write	;wreg free
 28537                           
 28538                           ;external_flash.c: 69: return 1;
 28539  0184D4  0E01               	movlw	1
 28540  0184D6  0012               	return	
 28541  0184D8                     __end_of_ExternalFlash_SectorWrite:
 28542                           	opt stack 0
 28543                           tosu	equ	0xFFF
 28544                           tosh	equ	0xFFE
 28545                           tosl	equ	0xFFD
 28546                           pclath	equ	0xFFA
 28547                           tblptru	equ	0xFF8
 28548                           tblptrh	equ	0xFF7
 28549                           tblptrl	equ	0xFF6
 28550                           tablat	equ	0xFF5
 28551                           prodh	equ	0xFF4
 28552                           prodl	equ	0xFF3
 28553                           intcon	equ	0xFF2
 28554                           intcon2	equ	0xFF1
 28555                           intcon3	equ	0xFF0
 28556                           postinc0	equ	0xFEE
 28557                           wreg	equ	0xFE8
 28558                           indf1	equ	0xFE7
 28559                           postdec1	equ	0xFE5
 28560                           plusw1	equ	0xFE3
 28561                           fsr1h	equ	0xFE2
 28562                           fsr1l	equ	0xFE1
 28563                           indf2	equ	0xFDF
 28564                           postinc2	equ	0xFDE
 28565                           postdec2	equ	0xFDD
 28566                           plusw2	equ	0xFDB
 28567                           fsr2h	equ	0xFDA
 28568                           fsr2l	equ	0xFD9
 28569                           status	equ	0xFD8
 28570                           
 28571 ;; *************** function _MSDReadHandler *****************
 28572 ;; Defined at:
 28573 ;;		line 1038 in file "usb_device_msd.c"
 28574 ;; Parameters:    Size  Location     Type
 28575 ;;		None
 28576 ;; Auto vars:     Size  Location     Type
 28577 ;;		None
 28578 ;; Return value:  Size  Location     Type
 28579 ;;                  1    wreg      unsigned char 
 28580 ;; Registers used:
 28581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 28582 ;; Tracked objects:
 28583 ;;		On entry : 0/0
 28584 ;;		On exit  : 0/0
 28585 ;;		Unchanged: 0/0
 28586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28589 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28590 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28591 ;;Total ram usage:        4 bytes
 28592 ;; Hardware stack levels used:    1
 28593 ;; Hardware stack levels required when called:   16
 28594 ;; This function calls:
 28595 ;;		_ExternalFlash_SectorRead
 28596 ;;		_MSDCheckForErrorCases
 28597 ;;		_USBStallEndpoint
 28598 ;;		_USBTransferOnePacket
 28599 ;; This function is called by:
 28600 ;;		_MSDProcessCommandMediaPresent
 28601 ;; This function uses a non-reentrant model
 28602 ;;
 28603                           
 28604                           	psect	text114
 28605  010EB0                     __ptext114:
 28606                           	opt stack 0
 28607  010EB0                     _MSDReadHandler:
 28608                           	opt stack 10
 28609                           
 28610                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 28611                           
 28612                           ;incstack = 0
 28613  010EB0  D0DE               	goto	l685
 28614  010EB2                     l686:
 28615                           
 28616                           ; BSR set to: 1
 28617                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 28618  010EB2  C259  F1E7         	movff	_gblCBW+17,_LBA+3
 28619                           
 28620                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 28621  010EB6  C25A  F1E6         	movff	_gblCBW+18,_LBA+2
 28622                           
 28623                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 28624  010EBA  C25B  F1E5         	movff	_gblCBW+19,_LBA+1
 28625                           
 28626                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 28627  010EBE  C25C  F1E4         	movff	_gblCBW+20,_LBA
 28628                           
 28629                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 28630  010EC2  C25E  F010         	movff	_gblCBW+22,_TransferLength+1
 28631                           
 28632                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 28633  010EC6  C25F  F00F         	movff	_gblCBW+23,_TransferLength
 28634                           
 28635                           ; BSR set to: 1
 28636                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 28637  010ECA  500F               	movf	_TransferLength,w,c
 28638  010ECC  0100               	movlb	0	; () banked
 28639  010ECE  6F95               	movwf	??_MSDReadHandler& (0+255),b
 28640  010ED0  5010               	movf	_TransferLength+1,w,c
 28641  010ED2  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 28642  010ED4  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 28643  010ED6  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 28644  010ED8  0E09               	movlw	9
 28645  010EDA                     u20665:
 28646  010EDA  90D8               	bcf	status,0,c
 28647  010EDC  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 28648  010EDE  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 28649  010EE0  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 28650  010EE2  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 28651  010EE4  2EE8               	decfsz	wreg,f,c
 28652  010EE6  D7F9               	goto	u20665
 28653  010EE8  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 28654  010EEC  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 28655  010EF0  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 28656  010EF4  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 28657  010EF8  EC56  F09F         	call	_MSDCheckForErrorCases	;wreg free
 28658  010EFC  0900               	iorlw	0
 28659  010EFE  A4D8               	btfss	status,2,c
 28660  010F00  D0C8               	goto	l688
 28661                           
 28662                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 28663                           
 28664                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 28665  010F02  0E01               	movlw	1
 28666  010F04  0101               	movlb	1	; () banked
 28667  010F06  6FF6               	movwf	_MSDReadState& (0+255),b
 28668  010F08                     
 28669                           ; BSR set to: 1
 28670                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 28671                           
 28672                           ; BSR set to: 1
 28673  010F08  500F               	movf	_TransferLength,w,c
 28674  010F0A  1010               	iorwf	_TransferLength+1,w,c
 28675  010F0C  A4D8               	btfss	status,2,c
 28676  010F0E  D002               	goto	l690
 28677                           
 28678                           ; BSR set to: 1
 28679                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 28680  010F10  0E00               	movlw	0
 28681  010F12  D04A               	goto	L26
 28682  010F14                     l690:
 28683                           
 28684                           ; BSR set to: 1
 28685                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 28686                           
 28687                           ; BSR set to: 1
 28688  010F14  060F               	decf	_TransferLength,f,c
 28689  010F16  A0D8               	btfss	status,0,c
 28690  010F18  0610               	decf	_TransferLength+1,f,c
 28691                           
 28692                           ; BSR set to: 1
 28693                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 28694  010F1A  0E02               	movlw	2
 28695  010F1C  6FF6               	movwf	_MSDReadState& (0+255),b
 28696  010F1E                     
 28697                           ; BSR set to: 1
 28698                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 28699                           
 28700                           ; BSR set to: 1
 28701  010F1E  5011               	movf	_USBMSDInHandle,w,c
 28702  010F20  1012               	iorwf	_USBMSDInHandle+1,w,c
 28703  010F22  B4D8               	btfsc	status,2,c
 28704  010F24  D006               	goto	l692
 28705                           
 28706                           ; BSR set to: 1
 28707  010F26  C011  FFD9         	movff	_USBMSDInHandle,fsr2l
 28708  010F2A  C012  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 28709  010F2E  BEDF               	btfsc	indf2,7,c
 28710  010F30  D0B0               	goto	l688
 28711  010F32                     l692:
 28712                           
 28713                           ; BSR set to: 1
 28714                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 28715                           
 28716                           ; BSR set to: 1
 28717  010F32  C2E9  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 28718  010F36  C2EA  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 28719  010F3A  C1E4  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 28720  010F3E  C1E5  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 28721  010F42  C1E6  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 28722  010F46  C1E7  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 28723  010F4A  0E00               	movlw	0
 28724  010F4C  0100               	movlb	0	; () banked
 28725  010F4E  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 28726  010F50  0E06               	movlw	6
 28727  010F52  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 28728  010F54  EE22  F0E0         	lfsr	2,_LUN+12
 28729  010F58  D801               	call	u20718
 28730  010F5A  D00A               	goto	u20719
 28731  010F5C                     u20718:
 28732  010F5C  0005               	push	
 28733  010F5E  6EFA               	movwf	pclath,c
 28734  010F60  50DE               	movf	postinc2,w,c
 28735  010F62  6EFD               	movwf	tosl,c
 28736  010F64  50DE               	movf	postinc2,w,c
 28737  010F66  6EFE               	movwf	tosh,c
 28738  010F68  50DE               	movf	postinc2,w,c
 28739  010F6A  6EFF               	movwf	tosu,c
 28740  010F6C  50FA               	movf	pclath,w,c
 28741  010F6E  0012               	return		;indir
 28742  010F70                     u20719:
 28743  010F70  06E8               	decf	wreg,f,c
 28744  010F72  B4D8               	btfsc	status,2,c
 28745  010F74  D01B               	goto	l695
 28746                           
 28747                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 28748  010F76  0E64               	movlw	100
 28749  010F78  0101               	movlb	1	; () banked
 28750  010F7A  61F5               	cpfslt	_MSDRetryAttempt& (0+255),b
 28751  010F7C  D002               	goto	l694
 28752                           
 28753                           ; BSR set to: 1
 28754                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 28755  010F7E  2BF5               	incf	_MSDRetryAttempt& (0+255),f,b
 28756                           
 28757                           ;usb_device_msd.c: 1088: break;
 28758  010F80  D088               	goto	l688
 28759  010F82                     l694:
 28760                           
 28761                           ; BSR set to: 1
 28762                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 28763                           
 28764                           ; BSR set to: 1
 28765  010F82  0E02               	movlw	2
 28766  010F84  010D               	movlb	13	; () banked
 28767  010F86  6F8C               	movwf	140,b	;volatile
 28768                           
 28769                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 28770  010F88  0102               	movlb	2	; () banked
 28771  010F8A  5169               	movf	(_gblSenseData+2)& (0+255),w,b
 28772  010F8C  0BF0               	andlw	-16
 28773  010F8E  0903               	iorlw	3
 28774  010F90  6F69               	movwf	(_gblSenseData+2)& (0+255),b
 28775                           
 28776                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 28777  010F92  0E00               	movlw	0
 28778  010F94  6F73               	movwf	(_gblSenseData+12)& (0+255),b
 28779                           
 28780                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 28781  010F96  0E00               	movlw	0
 28782  010F98  6F74               	movwf	(_gblSenseData+13)& (0+255),b
 28783                           
 28784                           ; BSR set to: 2
 28785                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 28786  010F9A  0E01               	movlw	1
 28787  010F9C  0100               	movlb	0	; () banked
 28788  010F9E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 28789  010FA0  0E02               	movlw	2
 28790  010FA2  EC52  F09A         	call	_USBStallEndpoint
 28791  010FA6  D060               	goto	l22519
 28792  010FA8                     L26:
 28793  010FA8  6FF6               	movwf	_MSDReadState& (0+255),b
 28794                           
 28795                           ;usb_device_msd.c: 1109: break;
 28796  010FAA  D073               	goto	l688
 28797  010FAC                     l695:
 28798                           
 28799                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 28800                           
 28801                           ; BSR set to: 1
 28802                           
 28803                           ; BSR set to: 1
 28804  010FAC  0E01               	movlw	1
 28805  010FAE  0101               	movlb	1	; () banked
 28806  010FB0  27E4               	addwf	_LBA& (0+255),f,b
 28807  010FB2  0E00               	movlw	0
 28808  010FB4  23E5               	addwfc	(_LBA+1)& (0+255),f,b
 28809  010FB6  23E6               	addwfc	(_LBA+2)& (0+255),f,b
 28810  010FB8  23E7               	addwfc	(_LBA+3)& (0+255),f,b
 28811                           
 28812                           ; BSR set to: 1
 28813                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 28814  010FBA  0E00               	movlw	0
 28815  010FBC  010D               	movlb	13	; () banked
 28816  010FBE  6F88               	movwf	136,b	;volatile
 28817  010FC0  0E02               	movlw	2
 28818  010FC2  6F89               	movwf	137,b	;volatile
 28819  010FC4  0E00               	movlw	0
 28820  010FC6  6F8A               	movwf	138,b	;volatile
 28821  010FC8  0E00               	movlw	0
 28822  010FCA  6F8B               	movwf	139,b	;volatile
 28823                           
 28824                           ; BSR set to: 13
 28825                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 28826  010FCC  0E00               	movlw	0
 28827  010FCE  0102               	movlb	2	; () banked
 28828  010FD0  6FC5               	movwf	_ptrNextData& (0+255),b
 28829  010FD2  0E06               	movlw	6
 28830  010FD4  6FC6               	movwf	(_ptrNextData+1)& (0+255),b
 28831                           
 28832                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 28833  010FD6  0E03               	movlw	3
 28834  010FD8  0101               	movlb	1	; () banked
 28835  010FDA  6FF6               	movwf	_MSDReadState& (0+255),b
 28836  010FDC                     
 28837                           ; BSR set to: 1
 28838                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 28839                           
 28840                           ; BSR set to: 1
 28841  010FDC  010D               	movlb	13	; () banked
 28842  010FDE  5188               	movf	136,w,b	;volatile
 28843  010FE0  1189               	iorwf	137,w,b	;volatile
 28844  010FE2  118A               	iorwf	138,w,b	;volatile
 28845  010FE4  118B               	iorwf	139,w,b	;volatile
 28846  010FE6  A4D8               	btfss	status,2,c
 28847  010FE8  D002               	goto	l697
 28848                           
 28849                           ; BSR set to: 13
 28850                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 28851  010FEA  0E01               	movlw	1
 28852  010FEC  D03E               	goto	L28
 28853  010FEE                     l697:
 28854                           
 28855                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 28856                           
 28857                           ; BSR set to: 1
 28858  010FEE  0E04               	movlw	4
 28859  010FF0  0101               	movlb	1	; () banked
 28860  010FF2  6FF6               	movwf	_MSDReadState& (0+255),b
 28861  010FF4                     
 28862                           ; BSR set to: 1
 28863                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 28864                           
 28865                           ; BSR set to: 1
 28866  010FF4  5011               	movf	_USBMSDInHandle,w,c
 28867  010FF6  1012               	iorwf	_USBMSDInHandle+1,w,c
 28868  010FF8  B4D8               	btfsc	status,2,c
 28869  010FFA  D006               	goto	l699
 28870                           
 28871                           ; BSR set to: 1
 28872  010FFC  C011  FFD9         	movff	_USBMSDInHandle,fsr2l
 28873  011000  C012  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 28874  011004  BEDF               	btfsc	indf2,7,c
 28875  011006  D045               	goto	l688
 28876  011008                     l699:
 28877                           
 28878                           ; BSR set to: 1
 28879                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 28880                           
 28881                           ; BSR set to: 1
 28882  011008  0E01               	movlw	1
 28883  01100A  0100               	movlb	0	; () banked
 28884  01100C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 28885  01100E  C2C5  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 28886  011012  C2C6  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 28887  011016  0E40               	movlw	64
 28888  011018  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 28889  01101A  0E02               	movlw	2
 28890  01101C  ECD7  F09A         	call	_USBTransferOnePacket
 28891  011020  C060  F011         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 28892  011024  C061  F012         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 28893                           
 28894                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 28895  011028  0E03               	movlw	3
 28896  01102A  0101               	movlb	1	; () banked
 28897  01102C  6FF6               	movwf	_MSDReadState& (0+255),b
 28898                           
 28899                           ; BSR set to: 1
 28900                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 28901  01102E  0E40               	movlw	64
 28902  011030  0102               	movlb	2	; () banked
 28903  011032  5F50               	subwf	(_gblCBW+8)& (0+255),f,b
 28904  011034  0E00               	movlw	0
 28905  011036  5B51               	subwfb	(_gblCBW+9)& (0+255),f,b
 28906  011038  5B52               	subwfb	(_gblCBW+10)& (0+255),f,b
 28907  01103A  5B53               	subwfb	(_gblCBW+11)& (0+255),f,b
 28908                           
 28909                           ; BSR set to: 2
 28910                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 28911  01103C  0E40               	movlw	64
 28912  01103E  010D               	movlb	13	; () banked
 28913  011040  5F88               	subwf	136,f,b	;volatile
 28914  011042  0E00               	movlw	0
 28915  011044  5B89               	subwfb	137,f,b	;volatile
 28916  011046  5B8A               	subwfb	138,f,b	;volatile
 28917  011048  5B8B               	subwfb	139,f,b	;volatile
 28918                           
 28919                           ; BSR set to: 13
 28920                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 28921  01104A  0E40               	movlw	64
 28922  01104C  0102               	movlb	2	; () banked
 28923  01104E  27C5               	addwf	_ptrNextData& (0+255),f,b
 28924  011050  0E00               	movlw	0
 28925  011052  23C6               	addwfc	(_ptrNextData+1)& (0+255),f,b
 28926                           
 28927                           ;usb_device_msd.c: 1149: break;
 28928  011054  D01E               	goto	l688
 28929  011056                     
 28930                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 28931                           
 28932                           ; BSR set to: 2
 28933  011056  0E02               	movlw	2
 28934  011058  010D               	movlb	13	; () banked
 28935  01105A  6F8C               	movwf	140,b	;volatile
 28936                           
 28937                           ; BSR set to: 13
 28938                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 28939  01105C  0E01               	movlw	1
 28940  01105E  0100               	movlb	0	; () banked
 28941  011060  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 28942  011062  0E02               	movlw	2
 28943  011064  EC52  F09A         	call	_USBStallEndpoint
 28944  011068                     l22519:
 28945                           
 28946                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 28947  011068  0E00               	movlw	0
 28948  01106A                     L28:
 28949  01106A  0101               	movlb	1	; () banked
 28950  01106C  D79D               	goto	L26
 28951  01106E                     l685:
 28952                           
 28953                           ; BSR set to: 1
 28954  01106E  0101               	movlb	1	; () banked
 28955  011070  51F6               	movf	_MSDReadState& (0+255),w,b
 28956                           
 28957                           ; Switch size 1, requested type "space"
 28958                           ; Number of cases is 5, Range of values is 0 to 4
 28959                           ; switch strategies available:
 28960                           ; Name         Instructions Cycles
 28961                           ; simple_byte           16     9 (average)
 28962                           ;	Chosen strategy is simple_byte
 28963  011072  0A00               	xorlw	0	; case 0
 28964  011074  B4D8               	btfsc	status,2,c
 28965  011076  D71D               	goto	l686
 28966  011078  0A01               	xorlw	1	; case 1
 28967  01107A  B4D8               	btfsc	status,2,c
 28968  01107C  D745               	goto	l689
 28969  01107E  0A03               	xorlw	3	; case 2
 28970  011080  B4D8               	btfsc	status,2,c
 28971  011082  D74D               	goto	l691
 28972  011084  0A01               	xorlw	1	; case 3
 28973  011086  B4D8               	btfsc	status,2,c
 28974  011088  D7A9               	goto	l696
 28975  01108A  0A07               	xorlw	7	; case 4
 28976  01108C  B4D8               	btfsc	status,2,c
 28977  01108E  D7B2               	goto	l698
 28978  011090  D7E2               	goto	l700
 28979  011092                     l688:
 28980                           
 28981                           ;usb_device_msd.c: 1161: return MSDReadState;
 28982                           
 28983                           ; BSR set to: 1
 28984  011092  0101               	movlb	1	; () banked
 28985  011094  51F6               	movf	_MSDReadState& (0+255),w,b
 28986  011096  0012               	return	
 28987  011098                     __end_of_MSDReadHandler:
 28988                           	opt stack 0
 28989                           tosu	equ	0xFFF
 28990                           tosh	equ	0xFFE
 28991                           tosl	equ	0xFFD
 28992                           pclath	equ	0xFFA
 28993                           tblptru	equ	0xFF8
 28994                           tblptrh	equ	0xFF7
 28995                           tblptrl	equ	0xFF6
 28996                           tablat	equ	0xFF5
 28997                           prodh	equ	0xFF4
 28998                           prodl	equ	0xFF3
 28999                           intcon	equ	0xFF2
 29000                           intcon2	equ	0xFF1
 29001                           intcon3	equ	0xFF0
 29002                           postinc0	equ	0xFEE
 29003                           wreg	equ	0xFE8
 29004                           indf1	equ	0xFE7
 29005                           postdec1	equ	0xFE5
 29006                           plusw1	equ	0xFE3
 29007                           fsr1h	equ	0xFE2
 29008                           fsr1l	equ	0xFE1
 29009                           indf2	equ	0xFDF
 29010                           postinc2	equ	0xFDE
 29011                           postdec2	equ	0xFDD
 29012                           plusw2	equ	0xFDB
 29013                           fsr2h	equ	0xFDA
 29014                           fsr2l	equ	0xFD9
 29015                           status	equ	0xFD8
 29016                           
 29017 ;; *************** function _MSDCheckForErrorCases *****************
 29018 ;; Defined at:
 29019 ;;		line 1434 in file "usb_device_msd.c"
 29020 ;; Parameters:    Size  Location     Type
 29021 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 29022 ;; Auto vars:     Size  Location     Type
 29023 ;;  MSDErrorCase    1   16[BANK0 ] unsigned char 
 29024 ;;  DeviceNoData    1   15[BANK0 ] unsigned char 
 29025 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 29026 ;; Return value:  Size  Location     Type
 29027 ;;                  1    wreg      unsigned char 
 29028 ;; Registers used:
 29029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29030 ;; Tracked objects:
 29031 ;;		On entry : 0/0
 29032 ;;		On exit  : 0/0
 29033 ;;		Unchanged: 0/0
 29034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29035 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29036 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29038 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29039 ;;Total ram usage:        7 bytes
 29040 ;; Hardware stack levels used:    1
 29041 ;; Hardware stack levels required when called:   12
 29042 ;; This function calls:
 29043 ;;		_MSDErrorHandler
 29044 ;; This function is called by:
 29045 ;;		_MSDProcessCommandMediaPresent
 29046 ;;		_MSDReadHandler
 29047 ;;		_MSDWriteHandler
 29048 ;; This function uses a non-reentrant model
 29049 ;;
 29050                           
 29051                           	psect	text115
 29052  013EAC                     __ptext115:
 29053                           	opt stack 0
 29054  013EAC                     _MSDCheckForErrorCases:
 29055                           	opt stack 13
 29056                           
 29057                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 29058                           
 29059                           ; BSR set to: 1
 29060                           ;incstack = 0
 29061  013EAC  0100               	movlb	0	; () banked
 29062  013EAE  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 29063  013EB0  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 29064  013EB2  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 29065  013EB4  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 29066  013EB6  A4D8               	btfss	status,2,c
 29067  013EB8  D002               	goto	l730
 29068                           
 29069                           ; BSR set to: 0
 29070                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 29071  013EBA  0E01               	movlw	1
 29072  013EBC  D001               	goto	L29
 29073  013EBE                     l730:
 29074                           
 29075                           ; BSR set to: 0
 29076                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 29077                           
 29078                           ; BSR set to: 0
 29079  013EBE  0E00               	movlw	0
 29080  013EC0                     L29:
 29081  013EC0  6F6F               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 29082                           
 29083                           ; BSR set to: 0
 29084                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 29085                           
 29086                           ; BSR set to: 0
 29087  013EC2  0421               	decf	_MSDHostNoData,w,c
 29088  013EC4  A4D8               	btfss	status,2,c
 29089  013EC6  D005               	goto	l732
 29090                           
 29091                           ; BSR set to: 0
 29092  013EC8  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 29093  013ECA  A4D8               	btfss	status,2,c
 29094  013ECC  D002               	goto	l732
 29095                           
 29096                           ; BSR set to: 0
 29097                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 29098  013ECE  0E00               	movlw	0
 29099                           
 29100                           ; BSR set to: 0
 29101  013ED0  0012               	return	
 29102  013ED2                     l732:
 29103                           
 29104                           ; BSR set to: 0
 29105                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 29106                           
 29107                           ; BSR set to: 0
 29108  013ED2  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 29109  013ED4  0102               	movlb	2	; () banked
 29110  013ED6  1950               	xorwf	(_gblCBW+8)& (0+255),w,b
 29111  013ED8  E11F               	bnz	l22071
 29112  013EDA  0100               	movlb	0	; () banked
 29113  013EDC  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 29114  013EDE  0102               	movlb	2	; () banked
 29115  013EE0  1951               	xorwf	(_gblCBW+9)& (0+255),w,b
 29116  013EE2  E11A               	bnz	l22071
 29117  013EE4  0100               	movlb	0	; () banked
 29118  013EE6  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 29119  013EE8  0102               	movlb	2	; () banked
 29120  013EEA  1952               	xorwf	(_gblCBW+10)& (0+255),w,b
 29121  013EEC  E115               	bnz	l22071
 29122  013EEE  0100               	movlb	0	; () banked
 29123  013EF0  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 29124  013EF2  0102               	movlb	2	; () banked
 29125  013EF4  1953               	xorwf	(_gblCBW+11)& (0+255),w,b
 29126  013EF6  A4D8               	btfss	status,2,c
 29127  013EF8  D00F               	goto	l738
 29128                           
 29129                           ; BSR set to: 2
 29130                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 29131  013EFA  0424               	decf	_MSD_State,w,c
 29132  013EFC  A4D8               	btfss	status,2,c
 29133  013EFE  D006               	goto	l735
 29134                           
 29135                           ; BSR set to: 2
 29136                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 29137  013F00  0E2A               	movlw	42
 29138  013F02  1823               	xorwf	_MSDCommandState,w,c
 29139  013F04  B4D8               	btfsc	status,2,c
 29140  013F06  D008               	goto	l738
 29141                           
 29142                           ; BSR set to: 2
 29143                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 29144  013F08  0E00               	movlw	0
 29145                           
 29146                           ; BSR set to: 2
 29147  013F0A  0012               	return	
 29148  013F0C                     l735:
 29149                           
 29150                           ; BSR set to: 2
 29151                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 29152                           
 29153                           ; BSR set to: 2
 29154  013F0C  0E2A               	movlw	42
 29155  013F0E  1823               	xorwf	_MSDCommandState,w,c
 29156  013F10  A4D8               	btfss	status,2,c
 29157  013F12  D002               	goto	l738
 29158                           
 29159                           ; BSR set to: 2
 29160                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 29161  013F14  0E00               	movlw	0
 29162                           
 29163                           ; BSR set to: 2
 29164  013F16  0012               	return	
 29165  013F18                     l738:
 29166  013F18                     l22071:
 29167                           
 29168                           ; BSR set to: 2
 29169                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 29170  013F18  5150               	movf	(_gblCBW+8)& (0+255),w,b
 29171  013F1A  0100               	movlb	0	; () banked
 29172  013F1C  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 29173  013F1E  0102               	movlb	2	; () banked
 29174  013F20  5151               	movf	(_gblCBW+9)& (0+255),w,b
 29175  013F22  0100               	movlb	0	; () banked
 29176  013F24  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 29177  013F26  0102               	movlb	2	; () banked
 29178  013F28  5152               	movf	(_gblCBW+10)& (0+255),w,b
 29179  013F2A  0100               	movlb	0	; () banked
 29180  013F2C  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 29181  013F2E  0102               	movlb	2	; () banked
 29182  013F30  5153               	movf	(_gblCBW+11)& (0+255),w,b
 29183  013F32  0100               	movlb	0	; () banked
 29184  013F34  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 29185  013F36  B0D8               	btfsc	status,0,c
 29186  013F38  D002               	goto	l739
 29187                           
 29188                           ; BSR set to: 0
 29189                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 29190  013F3A  0E01               	movlw	1
 29191  013F3C  D001               	goto	L30
 29192  013F3E                     l739:
 29193                           
 29194                           ; BSR set to: 0
 29195                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 29196                           
 29197                           ; BSR set to: 0
 29198  013F3E  0E00               	movlw	0
 29199  013F40                     L30:
 29200  013F40  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 29201                           
 29202                           ; BSR set to: 0
 29203                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 29204                           
 29205                           ; BSR set to: 0
 29206  013F42  0E02               	movlw	2
 29207  013F44  1824               	xorwf	_MSD_State,w,c
 29208  013F46  A4D8               	btfss	status,2,c
 29209  013F48  D014               	goto	l741
 29210                           
 29211                           ; BSR set to: 0
 29212                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 29213  013F4A  0E2A               	movlw	42
 29214  013F4C  1823               	xorwf	_MSDCommandState,w,c
 29215  013F4E  B4D8               	btfsc	status,2,c
 29216  013F50  D005               	goto	l742
 29217                           
 29218                           ; BSR set to: 0
 29219  013F52  516F               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 29220  013F54  A4D8               	btfss	status,2,c
 29221  013F56  D002               	goto	l742
 29222  013F58                     u20150:
 29223                           
 29224                           ; BSR set to: 0
 29225                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 29226  013F58  0E05               	movlw	5
 29227  013F5A  D01D               	goto	L33
 29228  013F5C                     l742:
 29229                           
 29230                           ; BSR set to: 0
 29231                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 29232                           
 29233                           ; BSR set to: 0
 29234  013F5C  0421               	decf	_MSDHostNoData,w,c
 29235  013F5E  B4D8               	btfsc	status,2,c
 29236  013F60  D00F               	goto	u20200
 29237                           
 29238                           ; BSR set to: 0
 29239                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 29240                           
 29241                           ; BSR set to: 0
 29242                           
 29243                           ; BSR set to: 0
 29244                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 29245  013F62  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 29246  013F64  B4D8               	btfsc	status,2,c
 29247  013F66  D003               	goto	u20180
 29248                           
 29249                           ; BSR set to: 0
 29250                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 29251                           
 29252                           ; BSR set to: 0
 29253                           
 29254                           ; BSR set to: 0
 29255                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 29256  013F68  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 29257  013F6A  A4D8               	btfss	status,2,c
 29258  013F6C  D7F5               	goto	u20150
 29259  013F6E                     u20180:
 29260                           
 29261                           ; BSR set to: 0
 29262                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 29263  013F6E  0E04               	movlw	4
 29264  013F70  D012               	goto	L33
 29265  013F72                     l741:
 29266                           
 29267                           ; BSR set to: 0
 29268                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 29269                           
 29270                           ; BSR set to: 0
 29271  013F72  0E2A               	movlw	42
 29272  013F74  1823               	xorwf	_MSDCommandState,w,c
 29273  013F76  B4D8               	btfsc	status,2,c
 29274  013F78  D00D               	goto	l757
 29275                           
 29276                           ; BSR set to: 0
 29277                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 29278                           
 29279                           ; BSR set to: 0
 29280                           
 29281                           ; BSR set to: 0
 29282                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 29283  013F7A  0421               	decf	_MSDHostNoData,w,c
 29284  013F7C  A4D8               	btfss	status,2,c
 29285  013F7E  D002               	goto	l753
 29286  013F80                     u20200:
 29287                           
 29288                           ; BSR set to: 0
 29289                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 29290  013F80  0E01               	movlw	1
 29291  013F82  D009               	goto	L33
 29292  013F84                     l753:
 29293                           
 29294                           ; BSR set to: 0
 29295                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 29296                           
 29297                           ; BSR set to: 0
 29298  013F84  056F               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 29299  013F86  B4D8               	btfsc	status,2,c
 29300  013F88  D003               	goto	u20220
 29301                           
 29302                           ; BSR set to: 0
 29303                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 29304                           
 29305                           ; BSR set to: 0
 29306                           
 29307                           ; BSR set to: 0
 29308                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 29309  013F8A  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 29310  013F8C  A4D8               	btfss	status,2,c
 29311  013F8E  D002               	goto	l757
 29312  013F90                     u20220:
 29313                           
 29314                           ; BSR set to: 0
 29315                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 29316  013F90  0E02               	movlw	2
 29317  013F92  D001               	goto	L33
 29318  013F94                     l757:
 29319                           
 29320                           ; BSR set to: 0
 29321                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 29322                           
 29323                           ; BSR set to: 0
 29324  013F94  0E03               	movlw	3
 29325  013F96                     L33:
 29326  013F96  6F70               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 29327                           
 29328                           ; BSR set to: 0
 29329                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 29330                           
 29331                           ; BSR set to: 0
 29332                           
 29333                           ; BSR set to: 0
 29334                           
 29335                           ; BSR set to: 0
 29336                           
 29337                           ; BSR set to: 0
 29338                           
 29339                           ; BSR set to: 0
 29340  013F98  5170               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 29341  013F9A  EC31  F098         	call	_MSDErrorHandler
 29342                           
 29343                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 29344  013F9E  0100               	movlb	0	; () banked
 29345  013FA0  5170               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 29346  013FA2  0012               	return	
 29347  013FA4                     __end_of_MSDCheckForErrorCases:
 29348                           	opt stack 0
 29349                           tosu	equ	0xFFF
 29350                           tosh	equ	0xFFE
 29351                           tosl	equ	0xFFD
 29352                           pclath	equ	0xFFA
 29353                           tblptru	equ	0xFF8
 29354                           tblptrh	equ	0xFF7
 29355                           tblptrl	equ	0xFF6
 29356                           tablat	equ	0xFF5
 29357                           prodh	equ	0xFF4
 29358                           prodl	equ	0xFF3
 29359                           intcon	equ	0xFF2
 29360                           intcon2	equ	0xFF1
 29361                           intcon3	equ	0xFF0
 29362                           postinc0	equ	0xFEE
 29363                           wreg	equ	0xFE8
 29364                           indf1	equ	0xFE7
 29365                           postdec1	equ	0xFE5
 29366                           plusw1	equ	0xFE3
 29367                           fsr1h	equ	0xFE2
 29368                           fsr1l	equ	0xFE1
 29369                           indf2	equ	0xFDF
 29370                           postinc2	equ	0xFDE
 29371                           postdec2	equ	0xFDD
 29372                           plusw2	equ	0xFDB
 29373                           fsr2h	equ	0xFDA
 29374                           fsr2l	equ	0xFD9
 29375                           status	equ	0xFD8
 29376                           
 29377 ;; *************** function _MSDErrorHandler *****************
 29378 ;; Defined at:
 29379 ;;		line 1577 in file "usb_device_msd.c"
 29380 ;; Parameters:    Size  Location     Type
 29381 ;;  ErrorCase       1    wreg     unsigned char 
 29382 ;; Auto vars:     Size  Location     Type
 29383 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 29384 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 29385 ;; Return value:  Size  Location     Type
 29386 ;;                  1    wreg      void 
 29387 ;; Registers used:
 29388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29389 ;; Tracked objects:
 29390 ;;		On entry : 0/0
 29391 ;;		On exit  : 0/0
 29392 ;;		Unchanged: 0/0
 29393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29395 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29397 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29398 ;;Total ram usage:        2 bytes
 29399 ;; Hardware stack levels used:    1
 29400 ;; Hardware stack levels required when called:   11
 29401 ;; This function calls:
 29402 ;;		_ResetSenseData
 29403 ;;		_USBStallEndpoint
 29404 ;; This function is called by:
 29405 ;;		_MSDProcessCommandMediaAbsent
 29406 ;;		_MSDProcessCommandMediaPresent
 29407 ;;		_MSDCheckForErrorCases
 29408 ;; This function uses a non-reentrant model
 29409 ;;
 29410                           
 29411                           	psect	text116
 29412  013062                     __ptext116:
 29413                           	opt stack 0
 29414  013062                     _MSDErrorHandler:
 29415                           	opt stack 13
 29416                           
 29417                           ;incstack = 0
 29418                           ;MSDErrorHandler@ErrorCase stored from wreg
 29419  013062  0100               	movlb	0	; () banked
 29420  013064  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 29421                           
 29422                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 29423  013066  5011               	movf	_USBMSDInHandle,w,c
 29424  013068  1012               	iorwf	_USBMSDInHandle+1,w,c
 29425  01306A  B4D8               	btfsc	status,2,c
 29426  01306C  D006               	goto	u19800
 29427  01306E  C011  FFD9         	movff	_USBMSDInHandle,fsr2l
 29428  013072  C012  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 29429  013076  BEDF               	btfsc	indf2,7,c
 29430  013078  0012               	return	
 29431  01307A                     u19800:
 29432  01307A  5013               	movf	_USBMSDOutHandle,w,c
 29433  01307C  1014               	iorwf	_USBMSDOutHandle+1,w,c
 29434  01307E  B4D8               	btfsc	status,2,c
 29435  013080  D006               	goto	l761
 29436  013082  C013  FFD9         	movff	_USBMSDOutHandle,fsr2l
 29437  013086  C014  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 29438  01308A  BEDF               	btfsc	indf2,7,c
 29439  01308C  0012               	return	
 29440  01308E                     l761:
 29441                           
 29442                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 29443  01308E  C024  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 29444                           
 29445                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 29446  013092  6823               	setf	_MSDCommandState,c
 29447                           
 29448                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 29449  013094  0E00               	movlw	0
 29450  013096  0101               	movlb	1	; () banked
 29451  013098  6FF6               	movwf	_MSDReadState& (0+255),b
 29452                           
 29453                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 29454  01309A  0E00               	movlw	0
 29455  01309C  6E22               	movwf	_MSDWriteState,c
 29456                           
 29457                           ; BSR set to: 1
 29458                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 29459  01309E  C250  FD88         	movff	_gblCBW+8,3464	;volatile
 29460  0130A2  C251  FD89         	movff	_gblCBW+9,3465	;volatile
 29461  0130A6  C252  FD8A         	movff	_gblCBW+10,3466	;volatile
 29462  0130AA  C253  FD8B         	movff	_gblCBW+11,3467	;volatile
 29463                           
 29464                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 29465  0130AE  0E01               	movlw	1
 29466  0130B0  010D               	movlb	13	; () banked
 29467  0130B2  6F8C               	movwf	140,b	;volatile
 29468                           
 29469                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 29470  0130B4  0E03               	movlw	3
 29471  0130B6  6E24               	movwf	_MSD_State,c
 29472                           
 29473                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 29474  0130B8  D04B               	goto	l767
 29475  0130BA                     
 29476                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 29477                           
 29478                           ; BSR set to: 13
 29479  0130BA  0E02               	movlw	2
 29480  0130BC  010D               	movlb	13	; () banked
 29481  0130BE  6F8C               	movwf	140,b	;volatile
 29482                           
 29483                           ;usb_device_msd.c: 1607: break;
 29484  0130C0  0012               	return	
 29485  0130C2                     
 29486                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 29487                           
 29488                           ; BSR set to: 13
 29489  0130C2  0E01               	movlw	1
 29490  0130C4  0100               	movlb	0	; () banked
 29491  0130C6  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29492  0130C8  0E02               	movlw	2
 29493  0130CA  EC52  F09A         	call	_USBStallEndpoint
 29494                           
 29495                           ;usb_device_msd.c: 1611: break;
 29496  0130CE  0012               	return	
 29497  0130D0                     
 29498                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 29499  0130D0  0E02               	movlw	2
 29500  0130D2  010D               	movlb	13	; () banked
 29501  0130D4  6F8C               	movwf	140,b	;volatile
 29502                           
 29503                           ; BSR set to: 13
 29504                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 29505  0130D6  0E01               	movlw	1
 29506  0130D8  0100               	movlb	0	; () banked
 29507  0130DA  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29508  0130DC  0E02               	movlw	2
 29509  0130DE  EC52  F09A         	call	_USBStallEndpoint
 29510                           
 29511                           ;usb_device_msd.c: 1616: break;
 29512  0130E2  0012               	return	
 29513  0130E4                     
 29514                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 29515  0130E4  0E00               	movlw	0
 29516  0130E6  0100               	movlb	0	; () banked
 29517  0130E8  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29518  0130EA  0E02               	movlw	2
 29519  0130EC  EC52  F09A         	call	_USBStallEndpoint
 29520                           
 29521                           ;usb_device_msd.c: 1620: break;
 29522  0130F0  0012               	return	
 29523  0130F2                     
 29524                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 29525  0130F2  0E02               	movlw	2
 29526  0130F4  010D               	movlb	13	; () banked
 29527  0130F6  6F8C               	movwf	140,b	;volatile
 29528                           
 29529                           ; BSR set to: 13
 29530                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 29531  0130F8  0E00               	movlw	0
 29532  0130FA  0100               	movlb	0	; () banked
 29533  0130FC  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29534  0130FE  0E02               	movlw	2
 29535  013100  EC52  F09A         	call	_USBStallEndpoint
 29536                           
 29537                           ;usb_device_msd.c: 1625: break;
 29538  013104  0012               	return	
 29539  013106                     
 29540                           ;usb_device_msd.c: 1628: ResetSenseData();
 29541  013106  EC35  F0BA         	call	_ResetSenseData	;wreg free
 29542                           
 29543                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 29544  01310A  0102               	movlb	2	; () banked
 29545  01310C  5169               	movf	(_gblSenseData+2)& (0+255),w,b
 29546  01310E  0BF0               	andlw	-16
 29547  013110  0905               	iorlw	5
 29548  013112  6F69               	movwf	(_gblSenseData+2)& (0+255),b
 29549                           
 29550                           ; BSR set to: 2
 29551                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 29552  013114  0E20               	movlw	32
 29553  013116  6F73               	movwf	(_gblSenseData+12)& (0+255),b
 29554                           
 29555                           ; BSR set to: 2
 29556                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 29557  013118  0E00               	movlw	0
 29558  01311A  6F74               	movwf	(_gblSenseData+13)& (0+255),b
 29559                           
 29560                           ; BSR set to: 2
 29561                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 29562  01311C  0E02               	movlw	2
 29563  01311E  0100               	movlb	0	; () banked
 29564  013120  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 29565  013122  A4D8               	btfss	status,2,c
 29566  013124  D00E               	goto	l775
 29567                           
 29568                           ; BSR set to: 0
 29569  013126  0102               	movlb	2	; () banked
 29570  013128  5150               	movf	(_gblCBW+8)& (0+255),w,b
 29571  01312A  1151               	iorwf	(_gblCBW+9)& (0+255),w,b
 29572  01312C  1152               	iorwf	(_gblCBW+10)& (0+255),w,b
 29573  01312E  1153               	iorwf	(_gblCBW+11)& (0+255),w,b
 29574  013130  B4D8               	btfsc	status,2,c
 29575  013132  D007               	goto	l775
 29576                           
 29577                           ; BSR set to: 2
 29578                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 29579  013134  0E00               	movlw	0
 29580  013136  0100               	movlb	0	; () banked
 29581  013138  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29582  01313A  0E02               	movlw	2
 29583  01313C  EC52  F09A         	call	_USBStallEndpoint
 29584                           
 29585                           ;usb_device_msd.c: 1636: }
 29586  013140  0012               	return	
 29587  013142                     l775:
 29588                           
 29589                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 29590  013142  0E01               	movlw	1
 29591  013144  0100               	movlb	0	; () banked
 29592  013146  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 29593  013148  0E02               	movlw	2
 29594  01314A  EC52  F09A         	call	_USBStallEndpoint
 29595                           
 29596                           ;usb_device_msd.c: 1644: }
 29597                           
 29598                           ;usb_device_msd.c: 1643: break;
 29599                           
 29600                           ;usb_device_msd.c: 1642: default:
 29601                           
 29602                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 29603  01314E  0012               	return	
 29604  013150                     l767:
 29605  013150  0100               	movlb	0	; () banked
 29606  013152  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 29607                           
 29608                           ; Switch size 1, requested type "space"
 29609                           ; Number of cases is 6, Range of values is 1 to 127
 29610                           ; switch strategies available:
 29611                           ; Name         Instructions Cycles
 29612                           ; simple_byte           19    10 (average)
 29613                           ;	Chosen strategy is simple_byte
 29614  013154  0A01               	xorlw	1	; case 1
 29615  013156  B4D8               	btfsc	status,2,c
 29616  013158  D7B0               	goto	l768
 29617  01315A  0A03               	xorlw	3	; case 2
 29618  01315C  B4D8               	btfsc	status,2,c
 29619  01315E  D7B1               	goto	l770
 29620  013160  0A01               	xorlw	1	; case 3
 29621  013162  B4D8               	btfsc	status,2,c
 29622  013164  D7B5               	goto	l771
 29623  013166  0A07               	xorlw	7	; case 4
 29624  013168  B4D8               	btfsc	status,2,c
 29625  01316A  D7BC               	goto	l772
 29626  01316C  0A01               	xorlw	1	; case 5
 29627  01316E  B4D8               	btfsc	status,2,c
 29628  013170  D7C0               	goto	l773
 29629  013172  0A7A               	xorlw	122	; case 127
 29630  013174  A4D8               	btfss	status,2,c
 29631  013176  0012               	return	
 29632  013178  D7C6               	goto	l774
 29633  01317A                     __end_of_MSDErrorHandler:
 29634                           	opt stack 0
 29635                           tosu	equ	0xFFF
 29636                           tosh	equ	0xFFE
 29637                           tosl	equ	0xFFD
 29638                           pclath	equ	0xFFA
 29639                           tblptru	equ	0xFF8
 29640                           tblptrh	equ	0xFF7
 29641                           tblptrl	equ	0xFF6
 29642                           tablat	equ	0xFF5
 29643                           prodh	equ	0xFF4
 29644                           prodl	equ	0xFF3
 29645                           intcon	equ	0xFF2
 29646                           intcon2	equ	0xFF1
 29647                           intcon3	equ	0xFF0
 29648                           postinc0	equ	0xFEE
 29649                           wreg	equ	0xFE8
 29650                           indf1	equ	0xFE7
 29651                           postdec1	equ	0xFE5
 29652                           plusw1	equ	0xFE3
 29653                           fsr1h	equ	0xFE2
 29654                           fsr1l	equ	0xFE1
 29655                           indf2	equ	0xFDF
 29656                           postinc2	equ	0xFDE
 29657                           postdec2	equ	0xFDD
 29658                           plusw2	equ	0xFDB
 29659                           fsr2h	equ	0xFDA
 29660                           fsr2l	equ	0xFD9
 29661                           status	equ	0xFD8
 29662                           
 29663 ;; *************** function _USBStallEndpoint *****************
 29664 ;; Defined at:
 29665 ;;		line 1073 in file "usb_device.c"
 29666 ;; Parameters:    Size  Location     Type
 29667 ;;  ep              1    wreg     unsigned char 
 29668 ;;  dir             1    0[BANK0 ] unsigned char 
 29669 ;; Auto vars:     Size  Location     Type
 29670 ;;  ep              1    5[BANK0 ] unsigned char 
 29671 ;;  p               2    6[BANK0 ] PTR struct __BDT
 29672 ;;		 -> BDT(48), 
 29673 ;; Return value:  Size  Location     Type
 29674 ;;                  1    wreg      void 
 29675 ;; Registers used:
 29676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29677 ;; Tracked objects:
 29678 ;;		On entry : 0/0
 29679 ;;		On exit  : 0/0
 29680 ;;		Unchanged: 0/0
 29681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29682 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29683 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29684 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29685 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29686 ;;Total ram usage:        8 bytes
 29687 ;; Hardware stack levels used:    1
 29688 ;; Hardware stack levels required when called:   10
 29689 ;; This function calls:
 29690 ;;		Nothing
 29691 ;; This function is called by:
 29692 ;;		_MSDTasks
 29693 ;;		_MSDReadHandler
 29694 ;;		_MSDWriteHandler
 29695 ;;		_MSDErrorHandler
 29696 ;; This function uses a non-reentrant model
 29697 ;;
 29698                           
 29699                           	psect	text117
 29700  0134A4                     __ptext117:
 29701                           	opt stack 0
 29702  0134A4                     _USBStallEndpoint:
 29703                           	opt stack 18
 29704                           
 29705                           ;incstack = 0
 29706                           ;USBStallEndpoint@ep stored from wreg
 29707  0134A4  0100               	movlb	0	; () banked
 29708  0134A6  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 29709                           
 29710                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 29711  0134A8  0100               	movlb	0	; () banked
 29712  0134AA  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 29713  0134AC  A4D8               	btfss	status,2,c
 29714  0134AE  D02B               	goto	l194
 29715                           
 29716                           ; BSR set to: 0
 29717                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 29718  0134B0  EE20 F001          	lfsr	2,1
 29719  0134B4  5015               	movf	_pBDTEntryEP0OutNext,w,c
 29720  0134B6  26D9               	addwf	fsr2l,f,c
 29721  0134B8  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 29722  0134BA  22DA               	addwfc	fsr2h,f,c
 29723  0134BC  0E08               	movlw	8
 29724  0134BE  6EDF               	movwf	indf2,c
 29725                           
 29726                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29727  0134C0  EE20 F002          	lfsr	2,2
 29728  0134C4  5015               	movf	_pBDTEntryEP0OutNext,w,c
 29729  0134C6  26D9               	addwf	fsr2l,f,c
 29730  0134C8  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 29731  0134CA  22DA               	addwfc	fsr2h,f,c
 29732  0134CC  0E30               	movlw	48
 29733  0134CE  6EDE               	movwf	postinc2,c
 29734  0134D0  0E0D               	movlw	13
 29735  0134D2  6EDD               	movwf	postdec2,c
 29736                           
 29737                           ; BSR set to: 0
 29738                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 29739  0134D4  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29740  0134D8  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29741  0134DC  0E0C               	movlw	12
 29742  0134DE  6EDF               	movwf	indf2,c
 29743                           
 29744                           ; BSR set to: 0
 29745                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29746  0134E0  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29747  0134E4  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29748  0134E8  0E00               	movlw	0
 29749  0134EA  8EDB               	bsf	plusw2,7,c
 29750                           
 29751                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 29752  0134EC  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 29753  0134F0  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29754  0134F4  0E04               	movlw	4
 29755  0134F6  6EDF               	movwf	indf2,c
 29756                           
 29757                           ; BSR set to: 0
 29758                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29759  0134F8  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 29760  0134FC  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29761  013500  0E00               	movlw	0
 29762  013502  8EDB               	bsf	plusw2,7,c
 29763                           
 29764                           ;usb_device.c: 1089: }
 29765  013504  0012               	return	
 29766  013506                     l194:
 29767                           
 29768                           ; BSR set to: 0
 29769                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 29770                           
 29771                           ; BSR set to: 0
 29772  013506  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 29773  013508  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 29774  01350A  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 29775  01350C  90D8               	bcf	status,0,c
 29776  01350E  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 29777  013510  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 29778  013512  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 29779  013514  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 29780  013516  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 29781  013518  90D8               	bcf	status,0,c
 29782  01351A  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 29783  01351C  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 29784  01351E  90D8               	bcf	status,0,c
 29785  013520  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 29786  013522  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 29787  013524  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 29788  013526  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 29789  013528  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 29790  01352A  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 29791  01352C  90D8               	bcf	status,0,c
 29792  01352E  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 29793  013530  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 29794  013532  90D8               	bcf	status,0,c
 29795  013534  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 29796  013536  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 29797  013538  0E00               	movlw	0
 29798  01353A  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 29799  01353C  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 29800  01353E  0E0D               	movlw	13
 29801  013540  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 29802  013542  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 29803                           
 29804                           ; BSR set to: 0
 29805                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 29806  013544  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 29807  013548  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 29808  01354C  0E00               	movlw	0
 29809  01354E  84DB               	bsf	plusw2,2,c
 29810                           
 29811                           ; BSR set to: 0
 29812                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 29813  013550  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 29814  013554  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 29815  013558  0E00               	movlw	0
 29816  01355A  8EDB               	bsf	plusw2,7,c
 29817                           
 29818                           ; BSR set to: 0
 29819                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 29820  01355C  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 29821  01355E  0D04               	mullw	4
 29822  013560  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 29823  013564  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 29824  013568  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 29825  01356A  0D02               	mullw	2
 29826  01356C  50F3               	movf	prodl,w,c
 29827  01356E  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 29828  013570  50F4               	movf	prodh,w,c
 29829  013572  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 29830  013574  90D8               	bcf	status,0,c
 29831  013576  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 29832  013578  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 29833  01357A  90D8               	bcf	status,0,c
 29834  01357C  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 29835  01357E  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 29836  013580  0E04               	movlw	4
 29837  013582  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 29838  013584  0E00               	movlw	0
 29839  013586  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 29840  013588  0E00               	movlw	0
 29841  01358A  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 29842  01358C  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 29843  01358E  0E0D               	movlw	13
 29844  013590  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 29845  013592  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 29846                           
 29847                           ; BSR set to: 0
 29848                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 29849  013594  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 29850  013598  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 29851  01359C  0E00               	movlw	0
 29852  01359E  84DB               	bsf	plusw2,2,c
 29853                           
 29854                           ; BSR set to: 0
 29855                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 29856  0135A0  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 29857  0135A4  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 29858  0135A8  0E00               	movlw	0
 29859  0135AA  8EDB               	bsf	plusw2,7,c
 29860  0135AC  0012               	return	
 29861  0135AE                     __end_of_USBStallEndpoint:
 29862                           	opt stack 0
 29863                           tosu	equ	0xFFF
 29864                           tosh	equ	0xFFE
 29865                           tosl	equ	0xFFD
 29866                           pclath	equ	0xFFA
 29867                           tblptru	equ	0xFF8
 29868                           tblptrh	equ	0xFF7
 29869                           tblptrl	equ	0xFF6
 29870                           tablat	equ	0xFF5
 29871                           prodh	equ	0xFF4
 29872                           prodl	equ	0xFF3
 29873                           intcon	equ	0xFF2
 29874                           intcon2	equ	0xFF1
 29875                           intcon3	equ	0xFF0
 29876                           postinc0	equ	0xFEE
 29877                           wreg	equ	0xFE8
 29878                           indf1	equ	0xFE7
 29879                           postdec1	equ	0xFE5
 29880                           plusw1	equ	0xFE3
 29881                           fsr1h	equ	0xFE2
 29882                           fsr1l	equ	0xFE1
 29883                           indf2	equ	0xFDF
 29884                           postinc2	equ	0xFDE
 29885                           postdec2	equ	0xFDD
 29886                           plusw2	equ	0xFDB
 29887                           fsr2h	equ	0xFDA
 29888                           fsr2l	equ	0xFD9
 29889                           status	equ	0xFD8
 29890                           
 29891 ;; *************** function _ResetSenseData *****************
 29892 ;; Defined at:
 29893 ;;		line 1373 in file "usb_device_msd.c"
 29894 ;; Parameters:    Size  Location     Type
 29895 ;;		None
 29896 ;; Auto vars:     Size  Location     Type
 29897 ;;		None
 29898 ;; Return value:  Size  Location     Type
 29899 ;;                  1    wreg      void 
 29900 ;; Registers used:
 29901 ;;		wreg, status,2
 29902 ;; Tracked objects:
 29903 ;;		On entry : 0/0
 29904 ;;		On exit  : 0/0
 29905 ;;		Unchanged: 0/0
 29906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29911 ;;Total ram usage:        0 bytes
 29912 ;; Hardware stack levels used:    1
 29913 ;; Hardware stack levels required when called:   10
 29914 ;; This function calls:
 29915 ;;		Nothing
 29916 ;; This function is called by:
 29917 ;;		_MSDProcessCommandMediaAbsent
 29918 ;;		_MSDProcessCommandMediaPresent
 29919 ;;		_MSDErrorHandler
 29920 ;; This function uses a non-reentrant model
 29921 ;;
 29922                           
 29923                           	psect	text118
 29924  01746A                     __ptext118:
 29925                           	opt stack 0
 29926  01746A                     _ResetSenseData:
 29927                           	opt stack 16
 29928                           
 29929                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 29930                           
 29931                           ; BSR set to: 0
 29932                           ;incstack = 0
 29933  01746A  0102               	movlb	2	; () banked
 29934  01746C  9167               	bcf	_gblSenseData& (0+255),0,b
 29935  01746E  9367               	bcf	_gblSenseData& (0+255),1,b
 29936  017470  9567               	bcf	_gblSenseData& (0+255),2,b
 29937  017472  9767               	bcf	_gblSenseData& (0+255),3,b
 29938  017474  8967               	bsf	_gblSenseData& (0+255),4,b
 29939  017476  8B67               	bsf	_gblSenseData& (0+255),5,b
 29940  017478  8D67               	bsf	_gblSenseData& (0+255),6,b
 29941                           
 29942                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 29943  01747A  9F67               	bcf	_gblSenseData& (0+255),7,b
 29944                           
 29945                           ; BSR set to: 2
 29946                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 29947  01747C  0E00               	movlw	0
 29948  01747E  6F68               	movwf	(_gblSenseData+1)& (0+255),b
 29949                           
 29950                           ; BSR set to: 2
 29951                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 29952  017480  9169               	bcf	(_gblSenseData+2)& (0+255),0,b
 29953  017482  9369               	bcf	(_gblSenseData+2)& (0+255),1,b
 29954  017484  9569               	bcf	(_gblSenseData+2)& (0+255),2,b
 29955  017486  9769               	bcf	(_gblSenseData+2)& (0+255),3,b
 29956                           
 29957                           ; BSR set to: 2
 29958                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 29959  017488  9B69               	bcf	(_gblSenseData+2)& (0+255),5,b
 29960                           
 29961                           ; BSR set to: 2
 29962                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 29963  01748A  9D69               	bcf	(_gblSenseData+2)& (0+255),6,b
 29964                           
 29965                           ; BSR set to: 2
 29966                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 29967  01748C  9F69               	bcf	(_gblSenseData+2)& (0+255),7,b
 29968                           
 29969                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 29970  01748E  0E00               	movlw	0
 29971  017490  6F6A               	movwf	(_gblSenseData+3)& (0+255),b
 29972                           
 29973                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 29974  017492  0E00               	movlw	0
 29975  017494  6F6B               	movwf	(_gblSenseData+4)& (0+255),b
 29976                           
 29977                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 29978  017496  0E00               	movlw	0
 29979  017498  6F6C               	movwf	(_gblSenseData+5)& (0+255),b
 29980                           
 29981                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 29982  01749A  0E00               	movlw	0
 29983  01749C  6F6D               	movwf	(_gblSenseData+6)& (0+255),b
 29984                           
 29985                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 29986  01749E  0E0A               	movlw	10
 29987  0174A0  6F6E               	movwf	(_gblSenseData+7)& (0+255),b
 29988                           
 29989                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 29990  0174A2  0E00               	movlw	0
 29991  0174A4  6F6F               	movwf	(_gblSenseData+8)& (0+255),b
 29992  0174A6  0E00               	movlw	0
 29993  0174A8  6F70               	movwf	(_gblSenseData+9)& (0+255),b
 29994  0174AA  0E00               	movlw	0
 29995  0174AC  6F71               	movwf	(_gblSenseData+10)& (0+255),b
 29996  0174AE  0E00               	movlw	0
 29997  0174B0  6F72               	movwf	(_gblSenseData+11)& (0+255),b
 29998                           
 29999                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 30000  0174B2  0E00               	movlw	0
 30001  0174B4  6F73               	movwf	(_gblSenseData+12)& (0+255),b
 30002                           
 30003                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 30004  0174B6  0E00               	movlw	0
 30005  0174B8  6F74               	movwf	(_gblSenseData+13)& (0+255),b
 30006                           
 30007                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 30008  0174BA  0E00               	movlw	0
 30009  0174BC  6F75               	movwf	(_gblSenseData+14)& (0+255),b
 30010                           
 30011                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 30012  0174BE  0E00               	movlw	0
 30013  0174C0  6F76               	movwf	(_gblSenseData+15)& (0+255),b
 30014                           
 30015                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 30016  0174C2  0E00               	movlw	0
 30017  0174C4  6F77               	movwf	(_gblSenseData+16)& (0+255),b
 30018                           
 30019                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 30020  0174C6  0E00               	movlw	0
 30021  0174C8  6F78               	movwf	(_gblSenseData+17)& (0+255),b
 30022                           
 30023                           ; BSR set to: 2
 30024  0174CA  0012               	return		;funcret
 30025  0174CC                     __end_of_ResetSenseData:
 30026                           	opt stack 0
 30027                           tosu	equ	0xFFF
 30028                           tosh	equ	0xFFE
 30029                           tosl	equ	0xFFD
 30030                           pclath	equ	0xFFA
 30031                           tblptru	equ	0xFF8
 30032                           tblptrh	equ	0xFF7
 30033                           tblptrl	equ	0xFF6
 30034                           tablat	equ	0xFF5
 30035                           prodh	equ	0xFF4
 30036                           prodl	equ	0xFF3
 30037                           intcon	equ	0xFF2
 30038                           intcon2	equ	0xFF1
 30039                           intcon3	equ	0xFF0
 30040                           postinc0	equ	0xFEE
 30041                           wreg	equ	0xFE8
 30042                           indf1	equ	0xFE7
 30043                           postdec1	equ	0xFE5
 30044                           plusw1	equ	0xFE3
 30045                           fsr1h	equ	0xFE2
 30046                           fsr1l	equ	0xFE1
 30047                           indf2	equ	0xFDF
 30048                           postinc2	equ	0xFDE
 30049                           postdec2	equ	0xFDD
 30050                           plusw2	equ	0xFDB
 30051                           fsr2h	equ	0xFDA
 30052                           fsr2l	equ	0xFD9
 30053                           status	equ	0xFD8
 30054                           
 30055 ;; *************** function _ExternalFlash_SectorRead *****************
 30056 ;; Defined at:
 30057 ;;		line 40 in file "external_flash.c"
 30058 ;; Parameters:    Size  Location     Type
 30059 ;;  config          2   43[BANK0 ] PTR void 
 30060 ;;		 -> NULL(0), 
 30061 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 30062 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 30063 ;;		 -> msd_buffer(512), 
 30064 ;; Auto vars:     Size  Location     Type
 30065 ;;  page            2   51[BANK0 ] unsigned int 
 30066 ;; Return value:  Size  Location     Type
 30067 ;;                  1    wreg      unsigned char 
 30068 ;; Registers used:
 30069 ;;		wreg, status,2, status,0, cstack
 30070 ;; Tracked objects:
 30071 ;;		On entry : 0/0
 30072 ;;		On exit  : 0/0
 30073 ;;		Unchanged: 0/0
 30074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30075 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30076 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30078 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30079 ;;Total ram usage:       10 bytes
 30080 ;; Hardware stack levels used:    1
 30081 ;; Hardware stack levels required when called:   15
 30082 ;; This function calls:
 30083 ;;		_flash_sector_read
 30084 ;; This function is called by:
 30085 ;;		_MSDReadHandler
 30086 ;; This function uses a non-reentrant model
 30087 ;;
 30088                           
 30089                           	psect	text119
 30090  0184D8                     __ptext119:
 30091                           	opt stack 0
 30092  0184D8                     _ExternalFlash_SectorRead:
 30093                           	opt stack 10
 30094                           
 30095                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 30096                           
 30097                           ; BSR set to: 2
 30098                           ;incstack = 0
 30099  0184D8  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 30100  0184DC  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 30101                           
 30102                           ;external_flash.c: 45: if(sector_addr >= 8192)
 30103  0184E0  0100               	movlb	0	; () banked
 30104  0184E2  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 30105  0184E4  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 30106  0184E6  E104               	bnz	u20250
 30107  0184E8  0E20               	movlw	32
 30108  0184EA  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 30109  0184EC  A0D8               	btfss	status,0,c
 30110  0184EE  D002               	goto	l2710
 30111  0184F0                     u20250:
 30112                           
 30113                           ; BSR set to: 0
 30114                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 30115  0184F0  0E00               	movlw	0
 30116                           
 30117                           ; BSR set to: 0
 30118  0184F2  0012               	return	
 30119  0184F4                     l2710:
 30120                           
 30121                           ; BSR set to: 0
 30122                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 30123                           
 30124                           ; BSR set to: 0
 30125  0184F4  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 30126  0184F8  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 30127  0184FC  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 30128  018500  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 30129  018504  EC86  F0C2         	call	_flash_sector_read	;wreg free
 30130                           
 30131                           ;external_flash.c: 53: return 1;
 30132  018508  0E01               	movlw	1
 30133  01850A  0012               	return	
 30134  01850C                     __end_of_ExternalFlash_SectorRead:
 30135                           	opt stack 0
 30136                           tosu	equ	0xFFF
 30137                           tosh	equ	0xFFE
 30138                           tosl	equ	0xFFD
 30139                           pclath	equ	0xFFA
 30140                           tblptru	equ	0xFF8
 30141                           tblptrh	equ	0xFF7
 30142                           tblptrl	equ	0xFF6
 30143                           tablat	equ	0xFF5
 30144                           prodh	equ	0xFF4
 30145                           prodl	equ	0xFF3
 30146                           intcon	equ	0xFF2
 30147                           intcon2	equ	0xFF1
 30148                           intcon3	equ	0xFF0
 30149                           postinc0	equ	0xFEE
 30150                           wreg	equ	0xFE8
 30151                           indf1	equ	0xFE7
 30152                           postdec1	equ	0xFE5
 30153                           plusw1	equ	0xFE3
 30154                           fsr1h	equ	0xFE2
 30155                           fsr1l	equ	0xFE1
 30156                           indf2	equ	0xFDF
 30157                           postinc2	equ	0xFDE
 30158                           postdec2	equ	0xFDD
 30159                           plusw2	equ	0xFDB
 30160                           fsr2h	equ	0xFDA
 30161                           fsr2l	equ	0xFD9
 30162                           status	equ	0xFD8
 30163                           
 30164 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 30165 ;; Defined at:
 30166 ;;		line 993 in file "usb_device_msd.c"
 30167 ;; Parameters:    Size  Location     Type
 30168 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 30169 ;; Auto vars:     Size  Location     Type
 30170 ;;		None
 30171 ;; Return value:  Size  Location     Type
 30172 ;;                  1    wreg      void 
 30173 ;; Registers used:
 30174 ;;		wreg, status,2, status,0
 30175 ;; Tracked objects:
 30176 ;;		On entry : 0/0
 30177 ;;		On exit  : 0/0
 30178 ;;		Unchanged: 0/0
 30179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30180 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30182 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30183 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30184 ;;Total ram usage:        6 bytes
 30185 ;; Hardware stack levels used:    1
 30186 ;; Hardware stack levels required when called:   10
 30187 ;; This function calls:
 30188 ;;		Nothing
 30189 ;; This function is called by:
 30190 ;;		_MSDProcessCommandMediaPresent
 30191 ;; This function uses a non-reentrant model
 30192 ;;
 30193                           
 30194                           	psect	text120
 30195  015BAA                     __ptext120:
 30196                           	opt stack 0
 30197  015BAA                     _MSDComputeDeviceInAndResidue:
 30198                           	opt stack 16
 30199                           
 30200                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 30201                           
 30202                           ;incstack = 0
 30203  015BAA  0100               	movlb	0	; () banked
 30204  015BAC  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 30205  015BAE  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 30206  015BB0  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 30207  015BB2  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 30208  015BB4  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 30209  015BB6  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 30210  015BB8  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 30211  015BBA  0102               	movlb	2	; () banked
 30212  015BBC  5D50               	subwf	(_gblCBW+8)& (0+255),w,b
 30213  015BBE  0100               	movlb	0	; () banked
 30214  015BC0  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 30215  015BC2  0102               	movlb	2	; () banked
 30216  015BC4  5951               	subwfb	(_gblCBW+9)& (0+255),w,b
 30217  015BC6  0100               	movlb	0	; () banked
 30218  015BC8  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 30219  015BCA  0102               	movlb	2	; () banked
 30220  015BCC  5952               	subwfb	(_gblCBW+10)& (0+255),w,b
 30221  015BCE  0100               	movlb	0	; () banked
 30222  015BD0  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 30223  015BD2  0102               	movlb	2	; () banked
 30224  015BD4  5953               	subwfb	(_gblCBW+11)& (0+255),w,b
 30225  015BD6  B0D8               	btfsc	status,0,c
 30226  015BD8  D00E               	goto	l679
 30227                           
 30228                           ; BSR set to: 2
 30229                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 30230  015BDA  0E00               	movlw	0
 30231  015BDC  010D               	movlb	13	; () banked
 30232  015BDE  6F88               	movwf	136,b	;volatile
 30233  015BE0  0E00               	movlw	0
 30234  015BE2  6F89               	movwf	137,b	;volatile
 30235  015BE4  0E00               	movlw	0
 30236  015BE6  6F8A               	movwf	138,b	;volatile
 30237  015BE8  0E00               	movlw	0
 30238  015BEA  6F8B               	movwf	139,b	;volatile
 30239                           
 30240                           ; BSR set to: 13
 30241                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 30242  015BEC  C250  F00F         	movff	_gblCBW+8,_TransferLength
 30243  015BF0  C251  F010         	movff	_gblCBW+9,_TransferLength+1
 30244                           
 30245                           ;usb_device_msd.c: 1002: }
 30246  015BF4  0012               	return	
 30247  015BF6                     l679:
 30248                           
 30249                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 30250                           
 30251                           ; BSR set to: 13
 30252  015BF6  500F               	movf	_TransferLength,w,c
 30253  015BF8  0100               	movlb	0	; () banked
 30254  015BFA  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 30255  015BFC  5010               	movf	_TransferLength+1,w,c
 30256  015BFE  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 30257  015C00  B0D8               	btfsc	status,0,c
 30258  015C02  D004               	goto	l681
 30259                           
 30260                           ; BSR set to: 0
 30261                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 30262  015C04  C060  F00F         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 30263  015C08  C061  F010         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 30264  015C0C                     l681:
 30265                           
 30266                           ; BSR set to: 0
 30267                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 30268                           
 30269                           ; BSR set to: 0
 30270  015C0C  500F               	movf	_TransferLength,w,c
 30271  015C0E  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 30272  015C10  5010               	movf	_TransferLength+1,w,c
 30273  015C12  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 30274  015C14  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 30275  015C16  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 30276  015C18  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 30277  015C1A  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 30278  015C1C  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 30279  015C1E  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 30280  015C20  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 30281  015C22  0E00               	movlw	0
 30282  015C24  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 30283  015C26  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 30284  015C28  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 30285  015C2A  0102               	movlb	2	; () banked
 30286  015C2C  5150               	movf	(_gblCBW+8)& (0+255),w,b
 30287  015C2E  0100               	movlb	0	; () banked
 30288  015C30  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 30289  015C32  010D               	movlb	13	; () banked
 30290  015C34  6F88               	movwf	136,b	;volatile
 30291  015C36  0102               	movlb	2	; () banked
 30292  015C38  5151               	movf	(_gblCBW+9)& (0+255),w,b
 30293  015C3A  0100               	movlb	0	; () banked
 30294  015C3C  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 30295  015C3E  010D               	movlb	13	; () banked
 30296  015C40  6F89               	movwf	137,b	;volatile
 30297  015C42  0102               	movlb	2	; () banked
 30298  015C44  5152               	movf	(_gblCBW+10)& (0+255),w,b
 30299  015C46  0100               	movlb	0	; () banked
 30300  015C48  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 30301  015C4A  010D               	movlb	13	; () banked
 30302  015C4C  6F8A               	movwf	138,b	;volatile
 30303  015C4E  0102               	movlb	2	; () banked
 30304  015C50  5153               	movf	(_gblCBW+11)& (0+255),w,b
 30305  015C52  0100               	movlb	0	; () banked
 30306  015C54  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 30307  015C56  010D               	movlb	13	; () banked
 30308  015C58  6F8B               	movwf	139,b	;volatile
 30309  015C5A  0012               	return	
 30310  015C5C                     __end_of_MSDComputeDeviceInAndResidue:
 30311                           	opt stack 0
 30312                           tosu	equ	0xFFF
 30313                           tosh	equ	0xFFE
 30314                           tosl	equ	0xFFD
 30315                           pclath	equ	0xFFA
 30316                           tblptru	equ	0xFF8
 30317                           tblptrh	equ	0xFF7
 30318                           tblptrl	equ	0xFF6
 30319                           tablat	equ	0xFF5
 30320                           prodh	equ	0xFF4
 30321                           prodl	equ	0xFF3
 30322                           intcon	equ	0xFF2
 30323                           intcon2	equ	0xFF1
 30324                           intcon3	equ	0xFF0
 30325                           postinc0	equ	0xFEE
 30326                           wreg	equ	0xFE8
 30327                           indf1	equ	0xFE7
 30328                           postdec1	equ	0xFE5
 30329                           plusw1	equ	0xFE3
 30330                           fsr1h	equ	0xFE2
 30331                           fsr1l	equ	0xFE1
 30332                           indf2	equ	0xFDF
 30333                           postinc2	equ	0xFDE
 30334                           postdec2	equ	0xFDD
 30335                           plusw2	equ	0xFDB
 30336                           fsr2h	equ	0xFDA
 30337                           fsr2l	equ	0xFD9
 30338                           status	equ	0xFD8
 30339                           
 30340 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 30341 ;; Defined at:
 30342 ;;		line 18 in file "external_flash.c"
 30343 ;; Parameters:    Size  Location     Type
 30344 ;;  config          2    0[BANK0 ] PTR void 
 30345 ;;		 -> NULL(0), 
 30346 ;; Auto vars:     Size  Location     Type
 30347 ;;		None
 30348 ;; Return value:  Size  Location     Type
 30349 ;;                  2    0[BANK0 ] unsigned int 
 30350 ;; Registers used:
 30351 ;;		wreg, status,2
 30352 ;; Tracked objects:
 30353 ;;		On entry : 0/0
 30354 ;;		On exit  : 0/0
 30355 ;;		Unchanged: 0/0
 30356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30357 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30360 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30361 ;;Total ram usage:        2 bytes
 30362 ;; Hardware stack levels used:    1
 30363 ;; Hardware stack levels required when called:   10
 30364 ;; This function calls:
 30365 ;;		Nothing
 30366 ;; This function is called by:
 30367 ;;		_MSDProcessCommandMediaPresent
 30368 ;; This function uses a non-reentrant model
 30369 ;;
 30370                           
 30371                           	psect	text121
 30372  0190B0                     __ptext121:
 30373                           	opt stack 0
 30374  0190B0                     _ExternalFlash_SectorSizeRead:
 30375                           	opt stack 16
 30376                           
 30377                           ;external_flash.c: 20: return 512;
 30378                           
 30379                           ; BSR set to: 13
 30380                           ;incstack = 0
 30381  0190B0  0E02               	movlw	2
 30382  0190B2  0100               	movlb	0	; () banked
 30383  0190B4  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 30384  0190B6  0E00               	movlw	0
 30385  0190B8  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 30386  0190BA  0012               	return	
 30387  0190BC                     __end_of_ExternalFlash_SectorSizeRead:
 30388                           	opt stack 0
 30389                           tosu	equ	0xFFF
 30390                           tosh	equ	0xFFE
 30391                           tosl	equ	0xFFD
 30392                           pclath	equ	0xFFA
 30393                           tblptru	equ	0xFF8
 30394                           tblptrh	equ	0xFF7
 30395                           tblptrl	equ	0xFF6
 30396                           tablat	equ	0xFF5
 30397                           prodh	equ	0xFF4
 30398                           prodl	equ	0xFF3
 30399                           intcon	equ	0xFF2
 30400                           intcon2	equ	0xFF1
 30401                           intcon3	equ	0xFF0
 30402                           postinc0	equ	0xFEE
 30403                           wreg	equ	0xFE8
 30404                           indf1	equ	0xFE7
 30405                           postdec1	equ	0xFE5
 30406                           plusw1	equ	0xFE3
 30407                           fsr1h	equ	0xFE2
 30408                           fsr1l	equ	0xFE1
 30409                           indf2	equ	0xFDF
 30410                           postinc2	equ	0xFDE
 30411                           postdec2	equ	0xFDD
 30412                           plusw2	equ	0xFDB
 30413                           fsr2h	equ	0xFDA
 30414                           fsr2l	equ	0xFD9
 30415                           status	equ	0xFD8
 30416                           
 30417 ;; *************** function _ExternalFlash_CapacityRead *****************
 30418 ;; Defined at:
 30419 ;;		line 23 in file "external_flash.c"
 30420 ;; Parameters:    Size  Location     Type
 30421 ;;  config          2    0[BANK0 ] PTR void 
 30422 ;;		 -> NULL(0), 
 30423 ;; Auto vars:     Size  Location     Type
 30424 ;;		None
 30425 ;; Return value:  Size  Location     Type
 30426 ;;                  4    0[BANK0 ] unsigned long 
 30427 ;; Registers used:
 30428 ;;		wreg, status,2
 30429 ;; Tracked objects:
 30430 ;;		On entry : 0/0
 30431 ;;		On exit  : 0/0
 30432 ;;		Unchanged: 0/0
 30433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30434 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30437 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30438 ;;Total ram usage:        4 bytes
 30439 ;; Hardware stack levels used:    1
 30440 ;; Hardware stack levels required when called:   10
 30441 ;; This function calls:
 30442 ;;		Nothing
 30443 ;; This function is called by:
 30444 ;;		_MSDProcessCommandMediaPresent
 30445 ;; This function uses a non-reentrant model
 30446 ;;
 30447                           
 30448                           	psect	text122
 30449  018F80                     __ptext122:
 30450                           	opt stack 0
 30451  018F80                     _ExternalFlash_CapacityRead:
 30452                           	opt stack 16
 30453                           
 30454                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 30455                           
 30456                           ; BSR set to: 0
 30457                           ;incstack = 0
 30458  018F80  0EFF               	movlw	255
 30459  018F82  0100               	movlb	0	; () banked
 30460  018F84  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 30461  018F86  0E1F               	movlw	31
 30462  018F88  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 30463  018F8A  0E00               	movlw	0
 30464  018F8C  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 30465  018F8E  0E00               	movlw	0
 30466  018F90  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 30467  018F92  0012               	return	
 30468  018F94                     __end_of_ExternalFlash_CapacityRead:
 30469                           	opt stack 0
 30470                           tosu	equ	0xFFF
 30471                           tosh	equ	0xFFE
 30472                           tosl	equ	0xFFD
 30473                           pclath	equ	0xFFA
 30474                           tblptru	equ	0xFF8
 30475                           tblptrh	equ	0xFF7
 30476                           tblptrl	equ	0xFF6
 30477                           tablat	equ	0xFF5
 30478                           prodh	equ	0xFF4
 30479                           prodl	equ	0xFF3
 30480                           intcon	equ	0xFF2
 30481                           intcon2	equ	0xFF1
 30482                           intcon3	equ	0xFF0
 30483                           postinc0	equ	0xFEE
 30484                           wreg	equ	0xFE8
 30485                           indf1	equ	0xFE7
 30486                           postdec1	equ	0xFE5
 30487                           plusw1	equ	0xFE3
 30488                           fsr1h	equ	0xFE2
 30489                           fsr1l	equ	0xFE1
 30490                           indf2	equ	0xFDF
 30491                           postinc2	equ	0xFDE
 30492                           postdec2	equ	0xFDD
 30493                           plusw2	equ	0xFDB
 30494                           fsr2h	equ	0xFDA
 30495                           fsr2l	equ	0xFD9
 30496                           status	equ	0xFD8
 30497                           
 30498 ;; *************** function _ExternalFlash_MediaInitialize *****************
 30499 ;; Defined at:
 30500 ;;		line 10 in file "external_flash.c"
 30501 ;; Parameters:    Size  Location     Type
 30502 ;;  config          2    0[BANK0 ] PTR void 
 30503 ;;		 -> NULL(0), 
 30504 ;; Auto vars:     Size  Location     Type
 30505 ;;		None
 30506 ;; Return value:  Size  Location     Type
 30507 ;;                  2    0[BANK0 ] PTR struct .
 30508 ;; Registers used:
 30509 ;;		wreg, status,2, status,0
 30510 ;; Tracked objects:
 30511 ;;		On entry : 0/0
 30512 ;;		On exit  : 0/0
 30513 ;;		Unchanged: 0/0
 30514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30515 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30518 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30519 ;;Total ram usage:        2 bytes
 30520 ;; Hardware stack levels used:    1
 30521 ;; Hardware stack levels required when called:   10
 30522 ;; This function calls:
 30523 ;;		Nothing
 30524 ;; This function is called by:
 30525 ;;		_USBMSDInit
 30526 ;;		_MSDProcessCommand
 30527 ;; This function uses a non-reentrant model
 30528 ;;
 30529                           
 30530                           	psect	text123
 30531  018C7C                     __ptext123:
 30532                           	opt stack 0
 30533  018C7C                     _ExternalFlash_MediaInitialize:
 30534                           	opt stack 0
 30535                           
 30536                           ; BSR set to: 0
 30537                           ;Skip over the trampoline to the duplicate function for level 2
 30538  018C7C  B25B               	btfsc	btemp,1,c
 30539  018C7E  EF1B  F0C7         	goto	i2_ExternalFlash_MediaInitialize
 30540  018C82                     _ExternalFlash_MediaInitialize$intlevel0:
 30541                           	opt stack 17
 30542                           
 30543                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 30544                           
 30545                           ;incstack = 0
 30546  018C82  0102               	movlb	2	; () banked
 30547  018C84  81CE               	bsf	(_mediaInformation+1)& (0+255),0,b
 30548                           
 30549                           ; BSR set to: 2
 30550                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 30551  018C86  0E02               	movlw	2
 30552  018C88  6FD0               	movwf	(_mediaInformation+3)& (0+255),b
 30553  018C8A  0E00               	movlw	0
 30554  018C8C  6FCF               	movwf	(_mediaInformation+2)& (0+255),b
 30555                           
 30556                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 30557  018C8E  0E00               	movlw	0
 30558  018C90  6FCD               	movwf	_mediaInformation& (0+255),b
 30559                           
 30560                           ; BSR set to: 2
 30561                           ;external_flash.c: 15: return &mediaInformation;
 30562  018C92  0ECD               	movlw	low _mediaInformation
 30563  018C94  0100               	movlb	0	; () banked
 30564  018C96  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 30565  018C98  0E02               	movlw	high _mediaInformation
 30566  018C9A  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 30567  018C9C  0012               	return	
 30568  018C9E                     __end_of_ExternalFlash_MediaInitialize:
 30569                           	opt stack 0
 30570                           tosu	equ	0xFFF
 30571                           tosh	equ	0xFFE
 30572                           tosl	equ	0xFFD
 30573                           pclath	equ	0xFFA
 30574                           tblptru	equ	0xFF8
 30575                           tblptrh	equ	0xFF7
 30576                           tblptrl	equ	0xFF6
 30577                           tablat	equ	0xFF5
 30578                           prodh	equ	0xFF4
 30579                           prodl	equ	0xFF3
 30580                           intcon	equ	0xFF2
 30581                           intcon2	equ	0xFF1
 30582                           intcon3	equ	0xFF0
 30583                           postinc0	equ	0xFEE
 30584                           wreg	equ	0xFE8
 30585                           indf1	equ	0xFE7
 30586                           postdec1	equ	0xFE5
 30587                           plusw1	equ	0xFE3
 30588                           fsr1h	equ	0xFE2
 30589                           fsr1l	equ	0xFE1
 30590                           indf2	equ	0xFDF
 30591                           postinc2	equ	0xFDE
 30592                           postdec2	equ	0xFDD
 30593                           plusw2	equ	0xFDB
 30594                           fsr2h	equ	0xFDA
 30595                           fsr2l	equ	0xFD9
 30596                           status	equ	0xFD8
 30597                           
 30598 ;; *************** function _ExternalFlash_MediaDetect *****************
 30599 ;; Defined at:
 30600 ;;		line 29 in file "external_flash.c"
 30601 ;; Parameters:    Size  Location     Type
 30602 ;;  config          2    0[BANK0 ] PTR void 
 30603 ;;		 -> NULL(0), 
 30604 ;; Auto vars:     Size  Location     Type
 30605 ;;		None
 30606 ;; Return value:  Size  Location     Type
 30607 ;;                  1    wreg      unsigned char 
 30608 ;; Registers used:
 30609 ;;		wreg
 30610 ;; Tracked objects:
 30611 ;;		On entry : 0/0
 30612 ;;		On exit  : 0/0
 30613 ;;		Unchanged: 0/0
 30614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30615 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30618 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30619 ;;Total ram usage:        2 bytes
 30620 ;; Hardware stack levels used:    1
 30621 ;; Hardware stack levels required when called:   10
 30622 ;; This function calls:
 30623 ;;		Nothing
 30624 ;; This function is called by:
 30625 ;;		_USBMSDInit
 30626 ;;		_MSDProcessCommand
 30627 ;; This function uses a non-reentrant model
 30628 ;;
 30629                           
 30630                           	psect	text124
 30631  0190DA                     __ptext124:
 30632                           	opt stack 0
 30633  0190DA                     _ExternalFlash_MediaDetect:
 30634                           	opt stack 0
 30635                           
 30636                           ; BSR set to: 0
 30637                           ;Skip over the trampoline to the duplicate function for level 2
 30638  0190DA  B25B               	btfsc	btemp,1,c
 30639  0190DC  EF8E  F0C8         	goto	i2_ExternalFlash_MediaDetect
 30640  0190E0                     _ExternalFlash_MediaDetect$intlevel0:
 30641                           	opt stack 17
 30642                           
 30643                           ;external_flash.c: 31: return 1;
 30644                           
 30645                           ;incstack = 0
 30646  0190E0  0E01               	movlw	1
 30647  0190E2  0012               	return	
 30648  0190E4                     __end_of_ExternalFlash_MediaDetect:
 30649                           	opt stack 0
 30650                           tosu	equ	0xFFF
 30651                           tosh	equ	0xFFE
 30652                           tosl	equ	0xFFD
 30653                           pclath	equ	0xFFA
 30654                           tblptru	equ	0xFF8
 30655                           tblptrh	equ	0xFF7
 30656                           tblptrl	equ	0xFF6
 30657                           tablat	equ	0xFF5
 30658                           prodh	equ	0xFF4
 30659                           prodl	equ	0xFF3
 30660                           intcon	equ	0xFF2
 30661                           intcon2	equ	0xFF1
 30662                           intcon3	equ	0xFF0
 30663                           postinc0	equ	0xFEE
 30664                           wreg	equ	0xFE8
 30665                           indf1	equ	0xFE7
 30666                           postdec1	equ	0xFE5
 30667                           plusw1	equ	0xFE3
 30668                           fsr1h	equ	0xFE2
 30669                           fsr1l	equ	0xFE1
 30670                           indf2	equ	0xFDF
 30671                           postinc2	equ	0xFDE
 30672                           postdec2	equ	0xFDD
 30673                           plusw2	equ	0xFDB
 30674                           fsr2h	equ	0xFDA
 30675                           fsr2l	equ	0xFD9
 30676                           status	equ	0xFD8
 30677                           
 30678 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 30679 ;; Defined at:
 30680 ;;		line 73 in file "app_device_custom_hid.c"
 30681 ;; Parameters:    Size  Location     Type
 30682 ;;		None
 30683 ;; Auto vars:     Size  Location     Type
 30684 ;;  idx             1    0        unsigned char 
 30685 ;; Return value:  Size  Location     Type
 30686 ;;                  1    wreg      void 
 30687 ;; Registers used:
 30688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30689 ;; Tracked objects:
 30690 ;;		On entry : 0/0
 30691 ;;		On exit  : 0/0
 30692 ;;		Unchanged: 0/0
 30693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30698 ;;Total ram usage:        0 bytes
 30699 ;; Hardware stack levels used:    1
 30700 ;; Hardware stack levels required when called:   22
 30701 ;; This function calls:
 30702 ;;		_USBTransferOnePacket
 30703 ;;		_api_parse
 30704 ;;		_api_prepare
 30705 ;; This function is called by:
 30706 ;;		_main
 30707 ;; This function uses a non-reentrant model
 30708 ;;
 30709                           
 30710                           	psect	text125
 30711  015DB4                     __ptext125:
 30712                           	opt stack 0
 30713  015DB4                     _APP_DeviceCustomHIDTasks:
 30714                           	opt stack 8
 30715                           
 30716                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 30717                           
 30718                           ;incstack = 0
 30719  015DB4  0E20               	movlw	32
 30720  015DB6  602B               	cpfslt	_USBDeviceState,c	;volatile
 30721  015DB8  D001               	goto	l989
 30722  015DBA  0012               	return	
 30723  015DBC                     l989:
 30724                           
 30725                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 30726  015DBC  B265               	btfsc	3941,1,c	;volatile
 30727  015DBE  0012               	return	
 30728                           
 30729                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 30730                           
 30731                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 30732  015DC0  0102               	movlb	2	; () banked
 30733  015DC2  51BF               	movf	_USBOutHandle& (0+255),w,b
 30734  015DC4  11C0               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 30735  015DC6  B4D8               	btfsc	status,2,c
 30736  015DC8  D006               	goto	u27360
 30737                           
 30738                           ; BSR set to: 2
 30739  015DCA  C2BF  FFD9         	movff	_USBOutHandle,fsr2l
 30740  015DCE  C2C0  FFDA         	movff	_USBOutHandle+1,fsr2h
 30741  015DD2  BEDF               	btfsc	indf2,7,c
 30742  015DD4  0012               	return	
 30743  015DD6                     u27360:
 30744                           
 30745                           ; BSR set to: 2
 30746                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 30747                           
 30748                           ; BSR set to: 2
 30749  015DD6  51BD               	movf	_USBInHandle& (0+255),w,b
 30750  015DD8  11BE               	iorwf	(_USBInHandle+1)& (0+255),w,b
 30751  015DDA  B4D8               	btfsc	status,2,c
 30752  015DDC  D006               	goto	u27380
 30753                           
 30754                           ; BSR set to: 2
 30755  015DDE  C2BD  FFD9         	movff	_USBInHandle,fsr2l
 30756  015DE2  C2BE  FFDA         	movff	_USBInHandle+1,fsr2h
 30757  015DE6  BEDF               	btfsc	indf2,7,c
 30758  015DE8  D01B               	goto	l995
 30759  015DEA                     u27380:
 30760                           
 30761                           ; BSR set to: 2
 30762                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 30763                           
 30764                           ; BSR set to: 2
 30765  015DEA  0EC0               	movlw	low _ReceivedDataBuffer
 30766  015DEC  0101               	movlb	1	; () banked
 30767  015DEE  6F14               	movwf	api_prepare@inBuffer& (0+255),b
 30768  015DF0  0E04               	movlw	high _ReceivedDataBuffer
 30769  015DF2  6F15               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 30770  015DF4  0E80               	movlw	low _ToSendDataBuffer
 30771  015DF6  6F16               	movwf	api_prepare@outBuffer& (0+255),b
 30772  015DF8  0E04               	movlw	high _ToSendDataBuffer
 30773  015DFA  6F17               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 30774  015DFC  EC11  F08E         	call	_api_prepare	;wreg free
 30775                           
 30776                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 30777  015E00  0E01               	movlw	1
 30778  015E02  0100               	movlb	0	; () banked
 30779  015E04  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 30780  015E06  0E80               	movlw	low _ToSendDataBuffer
 30781  015E08  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 30782  015E0A  0E04               	movlw	high _ToSendDataBuffer
 30783  015E0C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 30784  015E0E  0E40               	movlw	64
 30785  015E10  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 30786  015E12  0E01               	movlw	1
 30787  015E14  ECD7  F09A         	call	_USBTransferOnePacket
 30788  015E18  C060  F2BD         	movff	?_USBTransferOnePacket,_USBInHandle
 30789  015E1C  C061  F2BE         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 30790  015E20                     l995:
 30791                           
 30792                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 30793  015E20  0EC0               	movlw	low _ReceivedDataBuffer
 30794  015E22  0101               	movlb	1	; () banked
 30795  015E24  6F06               	movwf	api_parse@inBuffer& (0+255),b
 30796  015E26  0E04               	movlw	high _ReceivedDataBuffer
 30797  015E28  6F07               	movwf	(api_parse@inBuffer+1)& (0+255),b
 30798  015E2A  0E40               	movlw	64
 30799  015E2C  6F08               	movwf	api_parse@receivedDataLength& (0+255),b
 30800  015E2E  0E80               	movlw	low _ToSendDataBuffer
 30801  015E30  6F09               	movwf	api_parse@outBuffer& (0+255),b
 30802  015E32  0E04               	movlw	high _ToSendDataBuffer
 30803  015E34  6F0A               	movwf	(api_parse@outBuffer+1)& (0+255),b
 30804  015E36  EC59  F08D         	call	_api_parse	;wreg free
 30805                           
 30806                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 30807  015E3A  0E00               	movlw	0
 30808  015E3C  0100               	movlb	0	; () banked
 30809  015E3E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 30810  015E40  0EC0               	movlw	low _ReceivedDataBuffer
 30811  015E42  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 30812  015E44  0E04               	movlw	high _ReceivedDataBuffer
 30813  015E46  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 30814  015E48  0E40               	movlw	64
 30815  015E4A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 30816  015E4C  0E01               	movlw	1
 30817  015E4E  ECD7  F09A         	call	_USBTransferOnePacket
 30818  015E52  C060  F2BF         	movff	?_USBTransferOnePacket,_USBOutHandle
 30819  015E56  C061  F2C0         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 30820  015E5A  0012               	return	
 30821  015E5C                     __end_of_APP_DeviceCustomHIDTasks:
 30822                           	opt stack 0
 30823                           tosu	equ	0xFFF
 30824                           tosh	equ	0xFFE
 30825                           tosl	equ	0xFFD
 30826                           pclath	equ	0xFFA
 30827                           tblptru	equ	0xFF8
 30828                           tblptrh	equ	0xFF7
 30829                           tblptrl	equ	0xFF6
 30830                           tablat	equ	0xFF5
 30831                           prodh	equ	0xFF4
 30832                           prodl	equ	0xFF3
 30833                           intcon	equ	0xFF2
 30834                           intcon2	equ	0xFF1
 30835                           intcon3	equ	0xFF0
 30836                           postinc0	equ	0xFEE
 30837                           wreg	equ	0xFE8
 30838                           indf1	equ	0xFE7
 30839                           postdec1	equ	0xFE5
 30840                           plusw1	equ	0xFE3
 30841                           fsr1h	equ	0xFE2
 30842                           fsr1l	equ	0xFE1
 30843                           indf2	equ	0xFDF
 30844                           postinc2	equ	0xFDE
 30845                           postdec2	equ	0xFDD
 30846                           plusw2	equ	0xFDB
 30847                           fsr2h	equ	0xFDA
 30848                           fsr2l	equ	0xFD9
 30849                           status	equ	0xFD8
 30850                           
 30851 ;; *************** function _api_prepare *****************
 30852 ;; Defined at:
 30853 ;;		line 68 in file "api.c"
 30854 ;; Parameters:    Size  Location     Type
 30855 ;;  inBuffer        2   20[BANK1 ] PTR unsigned char 
 30856 ;;		 -> ReceivedDataBuffer(64), 
 30857 ;;  outBuffer       2   22[BANK1 ] PTR unsigned char 
 30858 ;;		 -> ToSendDataBuffer(64), 
 30859 ;; Auto vars:     Size  Location     Type
 30860 ;;  command         1  157[BANK0 ] enum E6998
 30861 ;; Return value:  Size  Location     Type
 30862 ;;                  1    wreg      void 
 30863 ;; Registers used:
 30864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30865 ;; Tracked objects:
 30866 ;;		On entry : 0/0
 30867 ;;		On exit  : 0/0
 30868 ;;		Unchanged: 0/0
 30869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30870 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30871 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30873 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30874 ;;Total ram usage:        5 bytes
 30875 ;; Hardware stack levels used:    1
 30876 ;; Hardware stack levels required when called:   20
 30877 ;; This function calls:
 30878 ;;		__fill_buffer_find_file
 30879 ;;		__fill_buffer_get_calibration1
 30880 ;;		__fill_buffer_get_calibration2
 30881 ;;		__fill_buffer_get_display
 30882 ;;		__fill_buffer_get_display1
 30883 ;;		__fill_buffer_get_file_details
 30884 ;;		__fill_buffer_get_status
 30885 ;;		__fill_buffer_read_buffer
 30886 ;;		__fill_buffer_read_file
 30887 ;;		_memcpy
 30888 ;; This function is called by:
 30889 ;;		_APP_DeviceCustomHIDTasks
 30890 ;; This function uses a non-reentrant model
 30891 ;;
 30892                           
 30893                           	psect	text126
 30894  011C22                     __ptext126:
 30895                           	opt stack 0
 30896  011C22                     _api_prepare:
 30897                           	opt stack 9
 30898                           
 30899                           ;api.c: 70: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 30900                           
 30901                           ;incstack = 0
 30902  011C22  C114  FFD9         	movff	api_prepare@inBuffer,fsr2l
 30903  011C26  C115  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 30904  011C2A  50DF               	movf	indf2,w,c
 30905  011C2C  0100               	movlb	0	; () banked
 30906  011C2E  6FFD               	movwf	api_prepare@command& (0+255),b
 30907                           
 30908                           ; BSR set to: 0
 30909                           ;api.c: 72: if(command>0x7F)
 30910  011C30  0E7F               	movlw	127
 30911  011C32  65FD               	cpfsgt	api_prepare@command& (0+255),b
 30912  011C34  D092               	goto	l3536
 30913  011C36  D03C               	goto	l3528
 30914  011C38                     
 30915                           ; BSR set to: 0
 30916                           ;api.c: 80: _fill_buffer_get_file_details(inBuffer, outBuffer);
 30917                           
 30918                           ; BSR set to: 0
 30919  011C38  C114  F097         	movff	api_prepare@inBuffer,__fill_buffer_get_file_details@inBuffer
 30920  011C3C  C115  F098         	movff	api_prepare@inBuffer+1,__fill_buffer_get_file_details@inBuffer+1
 30921  011C40  C116  F099         	movff	api_prepare@outBuffer,__fill_buffer_get_file_details@outBuffer
 30922  011C44  C117  F09A         	movff	api_prepare@outBuffer+1,__fill_buffer_get_file_details@outBuffer+1
 30923  011C48  EC6F  F0BD         	call	__fill_buffer_get_file_details	;wreg free
 30924                           
 30925                           ;api.c: 81: break;
 30926  011C4C  0012               	return	
 30927  011C4E                     
 30928                           ;api.c: 85: _fill_buffer_find_file(inBuffer, outBuffer);
 30929  011C4E  C114  F096         	movff	api_prepare@inBuffer,__fill_buffer_find_file@inBuffer
 30930  011C52  C115  F097         	movff	api_prepare@inBuffer+1,__fill_buffer_find_file@inBuffer+1
 30931  011C56  C116  F098         	movff	api_prepare@outBuffer,__fill_buffer_find_file@outBuffer
 30932  011C5A  C117  F099         	movff	api_prepare@outBuffer+1,__fill_buffer_find_file@outBuffer+1
 30933  011C5E  EC37  F0B4         	call	__fill_buffer_find_file	;wreg free
 30934                           
 30935                           ;api.c: 86: break;
 30936  011C62  0012               	return	
 30937  011C64                     
 30938                           ;api.c: 90: _fill_buffer_read_file(inBuffer, outBuffer);
 30939  011C64  C114  F100         	movff	api_prepare@inBuffer,__fill_buffer_read_file@inBuffer
 30940  011C68  C115  F101         	movff	api_prepare@inBuffer+1,__fill_buffer_read_file@inBuffer+1
 30941  011C6C  C116  F102         	movff	api_prepare@outBuffer,__fill_buffer_read_file@outBuffer
 30942  011C70  C117  F103         	movff	api_prepare@outBuffer+1,__fill_buffer_read_file@outBuffer+1
 30943  011C74  EC57  F085         	call	__fill_buffer_read_file	;wreg free
 30944                           
 30945                           ;api.c: 91: break;
 30946  011C78  0012               	return	
 30947  011C7A                     
 30948                           ;api.c: 95: _fill_buffer_read_buffer(inBuffer, outBuffer);
 30949  011C7A  C114  F08A         	movff	api_prepare@inBuffer,__fill_buffer_read_buffer@inBuffer
 30950  011C7E  C115  F08B         	movff	api_prepare@inBuffer+1,__fill_buffer_read_buffer@inBuffer+1
 30951  011C82  C116  F08C         	movff	api_prepare@outBuffer,__fill_buffer_read_buffer@outBuffer
 30952  011C86  C117  F08D         	movff	api_prepare@outBuffer+1,__fill_buffer_read_buffer@outBuffer+1
 30953  011C8A  EC3E  F0A5         	call	__fill_buffer_read_buffer	;wreg free
 30954                           
 30955                           ;api.c: 96: break;
 30956  011C8E  0012               	return	
 30957  011C90                     
 30958                           ;api.c: 99: outBuffer[0] = 0x99;
 30959  011C90  C116  FFD9         	movff	api_prepare@outBuffer,fsr2l
 30960  011C94  C117  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 30961  011C98  0E99               	movlw	153
 30962  011C9A  6EDF               	movwf	indf2,c
 30963                           
 30964                           ;api.c: 100: outBuffer[1] = 0x99;
 30965  011C9C  0101               	movlb	1	; () banked
 30966  011C9E  EE20 F001          	lfsr	2,1
 30967  011CA2  5116               	movf	api_prepare@outBuffer& (0+255),w,b
 30968  011CA4  26D9               	addwf	fsr2l,f,c
 30969  011CA6  5117               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 30970  011CA8  22DA               	addwfc	fsr2h,f,c
 30971  011CAA  0E99               	movlw	153
 30972  011CAC  6EDF               	movwf	indf2,c
 30973                           
 30974                           ;api.c: 101: }
 30975  011CAE  0012               	return	
 30976  011CB0                     l3528:
 30977                           
 30978                           ; BSR set to: 1
 30979  011CB0  0100               	movlb	0	; () banked
 30980  011CB2  51FD               	movf	api_prepare@command& (0+255),w,b
 30981                           
 30982                           ; Switch size 1, requested type "space"
 30983                           ; Number of cases is 4, Range of values is 128 to 131
 30984                           ; switch strategies available:
 30985                           ; Name         Instructions Cycles
 30986                           ; simple_byte           13     7 (average)
 30987                           ;	Chosen strategy is simple_byte
 30988  011CB4  0A80               	xorlw	128	; case 128
 30989  011CB6  B4D8               	btfsc	status,2,c
 30990  011CB8  D7BF               	goto	l3529
 30991  011CBA  0A01               	xorlw	1	; case 129
 30992  011CBC  B4D8               	btfsc	status,2,c
 30993  011CBE  D7C7               	goto	l3531
 30994  011CC0  0A03               	xorlw	3	; case 130
 30995  011CC2  B4D8               	btfsc	status,2,c
 30996  011CC4  D7CF               	goto	l3532
 30997  011CC6  0A01               	xorlw	1	; case 131
 30998  011CC8  B4D8               	btfsc	status,2,c
 30999  011CCA  D7D7               	goto	l3533
 31000  011CCC  D7E1               	goto	l3534
 31001  011CCE                     
 31002                           ; BSR set to: 0
 31003                           ;api.c: 114: _fill_buffer_get_status(outBuffer);
 31004                           
 31005                           ; BSR set to: 0
 31006  011CCE  C116  F061         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 31007  011CD2  C117  F062         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 31008  011CD6  ECA2  F067         	call	__fill_buffer_get_status	;wreg free
 31009                           
 31010                           ;api.c: 115: break;
 31011  011CDA  0012               	return	
 31012  011CDC                     
 31013                           ;api.c: 120: _fill_buffer_get_display1(outBuffer);
 31014  011CDC  C116  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display1@outBuffer
 31015  011CE0  C117  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display1@outBuffer+1
 31016  011CE4  EC9A  F0BD         	call	__fill_buffer_get_display1	;wreg free
 31017                           
 31018                           ;api.c: 121: break;
 31019  011CE8  0012               	return	
 31020  011CEA                     
 31021                           ;api.c: 125: _fill_buffer_get_display(outBuffer, 1);
 31022  011CEA  C116  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 31023  011CEE  C117  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 31024  011CF2  0E01               	movlw	1
 31025  011CF4  0100               	movlb	0	; () banked
 31026  011CF6  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 31027  011CF8  ECC1  F0B0         	call	__fill_buffer_get_display	;wreg free
 31028                           
 31029                           ;api.c: 126: break;
 31030  011CFC  0012               	return	
 31031  011CFE                     
 31032                           ;api.c: 130: _fill_buffer_get_calibration1(outBuffer);
 31033  011CFE  C116  F06B         	movff	api_prepare@outBuffer,__fill_buffer_get_calibration1@outBuffer
 31034  011D02  C117  F06C         	movff	api_prepare@outBuffer+1,__fill_buffer_get_calibration1@outBuffer+1
 31035  011D06  ECA5  F0B1         	call	__fill_buffer_get_calibration1	;wreg free
 31036                           
 31037                           ;api.c: 131: break;
 31038  011D0A  0012               	return	
 31039  011D0C                     
 31040                           ;api.c: 135: _fill_buffer_get_calibration2(outBuffer);
 31041  011D0C  C116  F06B         	movff	api_prepare@outBuffer,__fill_buffer_get_calibration2@outBuffer
 31042  011D10  C117  F06C         	movff	api_prepare@outBuffer+1,__fill_buffer_get_calibration2@outBuffer+1
 31043  011D14  ECEC  F0B7         	call	__fill_buffer_get_calibration2	;wreg free
 31044                           
 31045                           ;api.c: 136: break;
 31046  011D18  0012               	return	
 31047  011D1A                     
 31048                           ;api.c: 140: memcpy(outBuffer, inBuffer, 64);
 31049  011D1A  C116  F060         	movff	api_prepare@outBuffer,memcpy@d1
 31050  011D1E  C117  F061         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 31051  011D22  C114  F062         	movff	api_prepare@inBuffer,memcpy@s1
 31052  011D26  C115  F063         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 31053  011D2A  0E00               	movlw	0
 31054  011D2C  0100               	movlb	0	; () banked
 31055  011D2E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 31056  011D30  0E40               	movlw	64
 31057  011D32  6F64               	movwf	memcpy@n& (0+255),b
 31058  011D34  EC97  F0BA         	call	_memcpy	;wreg free
 31059                           
 31060                           ;api.c: 141: break;
 31061  011D38  0012               	return	
 31062  011D3A                     
 31063                           ;api.c: 144: outBuffer[0] = 0x99;
 31064  011D3A  C116  FFD9         	movff	api_prepare@outBuffer,fsr2l
 31065  011D3E  C117  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 31066  011D42  0E99               	movlw	153
 31067  011D44  6EDF               	movwf	indf2,c
 31068                           
 31069                           ;api.c: 145: outBuffer[1] = 0x99;
 31070  011D46  0101               	movlb	1	; () banked
 31071  011D48  EE20 F001          	lfsr	2,1
 31072  011D4C  5116               	movf	api_prepare@outBuffer& (0+255),w,b
 31073  011D4E  26D9               	addwf	fsr2l,f,c
 31074  011D50  5117               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 31075  011D52  22DA               	addwfc	fsr2h,f,c
 31076  011D54  0E99               	movlw	153
 31077  011D56  6EDF               	movwf	indf2,c
 31078                           
 31079                           ;api.c: 146: }
 31080  011D58  0012               	return	
 31081  011D5A                     l3536:
 31082                           
 31083                           ; BSR set to: 1
 31084  011D5A  0100               	movlb	0	; () banked
 31085  011D5C  51FD               	movf	api_prepare@command& (0+255),w,b
 31086                           
 31087                           ; Switch size 1, requested type "space"
 31088                           ; Number of cases is 7, Range of values is 0 to 32
 31089                           ; switch strategies available:
 31090                           ; Name         Instructions Cycles
 31091                           ; simple_byte           22    12 (average)
 31092                           ;	Chosen strategy is simple_byte
 31093  011D5E  0A00               	xorlw	0	; case 0
 31094  011D60  B4D8               	btfsc	status,2,c
 31095  011D62  0012               	return	
 31096  011D64  0A10               	xorlw	16	; case 16
 31097  011D66  B4D8               	btfsc	status,2,c
 31098  011D68  D7B2               	goto	l3539
 31099  011D6A  0A01               	xorlw	1	; case 17
 31100  011D6C  B4D8               	btfsc	status,2,c
 31101  011D6E  D7B6               	goto	l3540
 31102  011D70  0A03               	xorlw	3	; case 18
 31103  011D72  B4D8               	btfsc	status,2,c
 31104  011D74  D7BA               	goto	l3541
 31105  011D76  0A01               	xorlw	1	; case 19
 31106  011D78  B4D8               	btfsc	status,2,c
 31107  011D7A  D7C1               	goto	l3542
 31108  011D7C  0A07               	xorlw	7	; case 20
 31109  011D7E  B4D8               	btfsc	status,2,c
 31110  011D80  D7C5               	goto	l3543
 31111  011D82  0A34               	xorlw	52	; case 32
 31112  011D84  B4D8               	btfsc	status,2,c
 31113  011D86  D7C9               	goto	l3544
 31114  011D88  D7D8               	goto	l3545
 31115  011D8A                     __end_of_api_prepare:
 31116                           	opt stack 0
 31117                           tosu	equ	0xFFF
 31118                           tosh	equ	0xFFE
 31119                           tosl	equ	0xFFD
 31120                           pclath	equ	0xFFA
 31121                           tblptru	equ	0xFF8
 31122                           tblptrh	equ	0xFF7
 31123                           tblptrl	equ	0xFF6
 31124                           tablat	equ	0xFF5
 31125                           prodh	equ	0xFF4
 31126                           prodl	equ	0xFF3
 31127                           intcon	equ	0xFF2
 31128                           intcon2	equ	0xFF1
 31129                           intcon3	equ	0xFF0
 31130                           postinc0	equ	0xFEE
 31131                           wreg	equ	0xFE8
 31132                           indf1	equ	0xFE7
 31133                           postdec1	equ	0xFE5
 31134                           plusw1	equ	0xFE3
 31135                           fsr1h	equ	0xFE2
 31136                           fsr1l	equ	0xFE1
 31137                           indf2	equ	0xFDF
 31138                           postinc2	equ	0xFDE
 31139                           postdec2	equ	0xFDD
 31140                           plusw2	equ	0xFDB
 31141                           fsr2h	equ	0xFDA
 31142                           fsr2l	equ	0xFD9
 31143                           status	equ	0xFD8
 31144                           
 31145 ;; *************** function __fill_buffer_read_file *****************
 31146 ;; Defined at:
 31147 ;;		line 401 in file "api.c"
 31148 ;; Parameters:    Size  Location     Type
 31149 ;;  inBuffer        2    0[BANK1 ] PTR unsigned char 
 31150 ;;		 -> ReceivedDataBuffer(64), 
 31151 ;;  outBuffer       2    2[BANK1 ] PTR unsigned char 
 31152 ;;		 -> ToSendDataBuffer(64), 
 31153 ;; Auto vars:     Size  Location     Type
 31154 ;;  start           4   16[BANK1 ] unsigned long 
 31155 ;;  data_length     4   12[BANK1 ] unsigned long 
 31156 ;;  file_size       4    8[BANK1 ] unsigned long 
 31157 ;; Return value:  Size  Location     Type
 31158 ;;                  1    wreg      void 
 31159 ;; Registers used:
 31160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 31161 ;; Tracked objects:
 31162 ;;		On entry : 0/0
 31163 ;;		On exit  : 0/0
 31164 ;;		Unchanged: 0/0
 31165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31166 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31167 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31168 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31169 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31170 ;;Total ram usage:       20 bytes
 31171 ;; Hardware stack levels used:    1
 31172 ;; Hardware stack levels required when called:   19
 31173 ;; This function calls:
 31174 ;;		_fat_get_file_size
 31175 ;;		_fat_read_from_file
 31176 ;; This function is called by:
 31177 ;;		_api_prepare
 31178 ;; This function uses a non-reentrant model
 31179 ;;
 31180                           
 31181                           	psect	text127
 31182  010AAE                     __ptext127:
 31183                           	opt stack 0
 31184  010AAE                     __fill_buffer_read_file:
 31185                           	opt stack 9
 31186                           
 31187                           ;api.c: 403: uint32_t start;;api.c: 404: uint32_t file_size;;api.c: 405: uint32_t data_l
      +                          ength;;api.c: 408: outBuffer[0] = DATAREQUEST_READ_FILE;
 31188                           
 31189                           ;incstack = 0
 31190  010AAE  C102  FFD9         	movff	__fill_buffer_read_file@outBuffer,fsr2l
 31191  010AB2  C103  FFDA         	movff	__fill_buffer_read_file@outBuffer+1,fsr2h
 31192  010AB6  0E82               	movlw	130
 31193  010AB8  6EDF               	movwf	indf2,c
 31194                           
 31195                           ;api.c: 411: outBuffer[3] = inBuffer[1];
 31196  010ABA  0101               	movlb	1	; () banked
 31197  010ABC  EE20 F001          	lfsr	2,1
 31198  010AC0  5100               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 31199  010AC2  26D9               	addwf	fsr2l,f,c
 31200  010AC4  5101               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 31201  010AC6  22DA               	addwfc	fsr2h,f,c
 31202  010AC8  EE10 F003          	lfsr	1,3
 31203  010ACC  5102               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 31204  010ACE  26E1               	addwf	fsr1l,f,c
 31205  010AD0  5103               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 31206  010AD2  22E2               	addwfc	fsr1h,f,c
 31207  010AD4  CFDF FFE7          	movff	indf2,indf1
 31208                           
 31209                           ; BSR set to: 1
 31210                           ;api.c: 414: outBuffer[4] = inBuffer[2];
 31211  010AD8  EE20 F002          	lfsr	2,2
 31212  010ADC  5100               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 31213  010ADE  26D9               	addwf	fsr2l,f,c
 31214  010AE0  5101               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 31215  010AE2  22DA               	addwfc	fsr2h,f,c
 31216  010AE4  EE10 F004          	lfsr	1,4
 31217  010AE8  5102               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 31218  010AEA  26E1               	addwf	fsr1l,f,c
 31219  010AEC  5103               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 31220  010AEE  22E2               	addwfc	fsr1h,f,c
 31221  010AF0  CFDF FFE7          	movff	indf2,indf1
 31222                           
 31223                           ; BSR set to: 1
 31224                           ;api.c: 415: outBuffer[5] = inBuffer[3];
 31225  010AF4  EE20 F003          	lfsr	2,3
 31226  010AF8  5100               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 31227  010AFA  26D9               	addwf	fsr2l,f,c
 31228  010AFC  5101               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 31229  010AFE  22DA               	addwfc	fsr2h,f,c
 31230  010B00  EE10 F005          	lfsr	1,5
 31231  010B04  5102               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 31232  010B06  26E1               	addwf	fsr1l,f,c
 31233  010B08  5103               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 31234  010B0A  22E2               	addwfc	fsr1h,f,c
 31235  010B0C  CFDF FFE7          	movff	indf2,indf1
 31236                           
 31237                           ; BSR set to: 1
 31238                           ;api.c: 416: outBuffer[6] = inBuffer[4];
 31239  010B10  EE20 F004          	lfsr	2,4
 31240  010B14  5100               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 31241  010B16  26D9               	addwf	fsr2l,f,c
 31242  010B18  5101               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 31243  010B1A  22DA               	addwfc	fsr2h,f,c
 31244  010B1C  EE10 F006          	lfsr	1,6
 31245  010B20  5102               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 31246  010B22  26E1               	addwf	fsr1l,f,c
 31247  010B24  5103               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 31248  010B26  22E2               	addwfc	fsr1h,f,c
 31249  010B28  CFDF FFE7          	movff	indf2,indf1
 31250                           
 31251                           ; BSR set to: 1
 31252                           ;api.c: 417: outBuffer[7] = inBuffer[5];
 31253  010B2C  EE20 F005          	lfsr	2,5
 31254  010B30  5100               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 31255  010B32  26D9               	addwf	fsr2l,f,c
 31256  010B34  5101               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 31257  010B36  22DA               	addwfc	fsr2h,f,c
 31258  010B38  EE10 F007          	lfsr	1,7
 31259  010B3C  5102               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 31260  010B3E  26E1               	addwf	fsr1l,f,c
 31261  010B40  5103               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 31262  010B42  22E2               	addwfc	fsr1h,f,c
 31263  010B44  CFDF FFE7          	movff	indf2,indf1
 31264                           
 31265                           ; BSR set to: 1
 31266                           ;api.c: 420: start = inBuffer[2];
 31267  010B48  EE20 F002          	lfsr	2,2
 31268  010B4C  5100               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 31269  010B4E  26D9               	addwf	fsr2l,f,c
 31270  010B50  5101               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 31271  010B52  22DA               	addwfc	fsr2h,f,c
 31272  010B54  50DF               	movf	indf2,w,c
 31273  010B56  6F04               	movwf	??__fill_buffer_read_file& (0+255),b
 31274  010B58  5104               	movf	??__fill_buffer_read_file& (0+255),w,b
 31275  010B5A  6F10               	movwf	__fill_buffer_read_file@start& (0+255),b
 31276  010B5C  6B11               	clrf	(__fill_buffer_read_file@start+1)& (0+255),b
 31277  010B5E  6B12               	clrf	(__fill_buffer_read_file@start+2)& (0+255),b
 31278  010B60  6B13               	clrf	(__fill_buffer_read_file@start+3)& (0+255),b
 31279                           
 31280                           ; BSR set to: 1
 31281                           ;api.c: 421: start <<= 8;
 31282  010B62  C112  F113         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 31283  010B66  C111  F112         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 31284  010B6A  C110  F111         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 31285  010B6E  6B10               	clrf	__fill_buffer_read_file@start& (0+255),b
 31286                           
 31287                           ; BSR set to: 1
 31288                           ;api.c: 422: start |= inBuffer[3];
 31289  010B70  EE20 F003          	lfsr	2,3
 31290  010B74  5100               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 31291  010B76  26D9               	addwf	fsr2l,f,c
 31292  010B78  5101               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 31293  010B7A  22DA               	addwfc	fsr2h,f,c
 31294  010B7C  50DF               	movf	indf2,w,c
 31295  010B7E  6F04               	movwf	??__fill_buffer_read_file& (0+255),b
 31296  010B80  5104               	movf	??__fill_buffer_read_file& (0+255),w,b
 31297  010B82  1310               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 31298                           
 31299                           ; BSR set to: 1
 31300                           ;api.c: 423: start <<= 8;
 31301  010B84  C112  F113         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 31302  010B88  C111  F112         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 31303  010B8C  C110  F111         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 31304  010B90  6B10               	clrf	__fill_buffer_read_file@start& (0+255),b
 31305                           
 31306                           ; BSR set to: 1
 31307                           ;api.c: 424: start |= inBuffer[4];
 31308  010B92  EE20 F004          	lfsr	2,4
 31309  010B96  5100               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 31310  010B98  26D9               	addwf	fsr2l,f,c
 31311  010B9A  5101               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 31312  010B9C  22DA               	addwfc	fsr2h,f,c
 31313  010B9E  50DF               	movf	indf2,w,c
 31314  010BA0  6F04               	movwf	??__fill_buffer_read_file& (0+255),b
 31315  010BA2  5104               	movf	??__fill_buffer_read_file& (0+255),w,b
 31316  010BA4  1310               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 31317                           
 31318                           ; BSR set to: 1
 31319                           ;api.c: 425: start <<= 8;
 31320  010BA6  C112  F113         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 31321  010BAA  C111  F112         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 31322  010BAE  C110  F111         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 31323  010BB2  6B10               	clrf	__fill_buffer_read_file@start& (0+255),b
 31324                           
 31325                           ; BSR set to: 1
 31326                           ;api.c: 426: start |= inBuffer[5];
 31327  010BB4  EE20 F005          	lfsr	2,5
 31328  010BB8  5100               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 31329  010BBA  26D9               	addwf	fsr2l,f,c
 31330  010BBC  5101               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 31331  010BBE  22DA               	addwfc	fsr2h,f,c
 31332  010BC0  50DF               	movf	indf2,w,c
 31333  010BC2  6F04               	movwf	??__fill_buffer_read_file& (0+255),b
 31334  010BC4  5104               	movf	??__fill_buffer_read_file& (0+255),w,b
 31335  010BC6  1310               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 31336                           
 31337                           ; BSR set to: 1
 31338                           ;api.c: 429: file_size = fat_get_file_size(inBuffer[1]);
 31339  010BC8  EE20 F001          	lfsr	2,1
 31340  010BCC  5100               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 31341  010BCE  26D9               	addwf	fsr2l,f,c
 31342  010BD0  5101               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 31343  010BD2  22DA               	addwfc	fsr2h,f,c
 31344  010BD4  50DF               	movf	indf2,w,c
 31345  010BD6  ECFC  F0B6         	call	_fat_get_file_size
 31346  010BDA  C095  F108         	movff	?_fat_get_file_size,__fill_buffer_read_file@file_size
 31347  010BDE  C096  F109         	movff	?_fat_get_file_size+1,__fill_buffer_read_file@file_size+1
 31348  010BE2  C097  F10A         	movff	?_fat_get_file_size+2,__fill_buffer_read_file@file_size+2
 31349  010BE6  C098  F10B         	movff	?_fat_get_file_size+3,__fill_buffer_read_file@file_size+3
 31350                           
 31351                           ;api.c: 430: data_length = file_size - start;
 31352  010BEA  C110  F104         	movff	__fill_buffer_read_file@start,??__fill_buffer_read_file
 31353  010BEE  C111  F105         	movff	__fill_buffer_read_file@start+1,??__fill_buffer_read_file+1
 31354  010BF2  C112  F106         	movff	__fill_buffer_read_file@start+2,??__fill_buffer_read_file+2
 31355  010BF6  C113  F107         	movff	__fill_buffer_read_file@start+3,??__fill_buffer_read_file+3
 31356  010BFA  0101               	movlb	1	; () banked
 31357  010BFC  1F04               	comf	??__fill_buffer_read_file& (0+255),f,b
 31358  010BFE  1F05               	comf	(??__fill_buffer_read_file+1)& (0+255),f,b
 31359  010C00  1F06               	comf	(??__fill_buffer_read_file+2)& (0+255),f,b
 31360  010C02  1F07               	comf	(??__fill_buffer_read_file+3)& (0+255),f,b
 31361  010C04  2B04               	incf	??__fill_buffer_read_file& (0+255),f,b
 31362  010C06  0E00               	movlw	0
 31363  010C08  2305               	addwfc	(??__fill_buffer_read_file+1)& (0+255),f,b
 31364  010C0A  2306               	addwfc	(??__fill_buffer_read_file+2)& (0+255),f,b
 31365  010C0C  2307               	addwfc	(??__fill_buffer_read_file+3)& (0+255),f,b
 31366  010C0E  5108               	movf	__fill_buffer_read_file@file_size& (0+255),w,b
 31367  010C10  2504               	addwf	??__fill_buffer_read_file& (0+255),w,b
 31368  010C12  6F0C               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 31369  010C14  5109               	movf	(__fill_buffer_read_file@file_size+1)& (0+255),w,b
 31370  010C16  2105               	addwfc	(??__fill_buffer_read_file+1)& (0+255),w,b
 31371  010C18  6F0D               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 31372  010C1A  510A               	movf	(__fill_buffer_read_file@file_size+2)& (0+255),w,b
 31373  010C1C  2106               	addwfc	(??__fill_buffer_read_file+2)& (0+255),w,b
 31374  010C1E  6F0E               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 31375  010C20  510B               	movf	(__fill_buffer_read_file@file_size+3)& (0+255),w,b
 31376  010C22  2107               	addwfc	(??__fill_buffer_read_file+3)& (0+255),w,b
 31377  010C24  6F0F               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 31378                           
 31379                           ; BSR set to: 1
 31380                           ;api.c: 431: if(data_length>54)
 31381  010C26  510F               	movf	(__fill_buffer_read_file@data_length+3)& (0+255),w,b
 31382  010C28  110E               	iorwf	(__fill_buffer_read_file@data_length+2)& (0+255),w,b
 31383  010C2A  110D               	iorwf	(__fill_buffer_read_file@data_length+1)& (0+255),w,b
 31384  010C2C  E104               	bnz	u24220
 31385  010C2E  0E37               	movlw	55
 31386  010C30  5D0C               	subwf	__fill_buffer_read_file@data_length& (0+255),w,b
 31387  010C32  A0D8               	btfss	status,0,c
 31388  010C34  D008               	goto	l3597
 31389  010C36                     u24220:
 31390                           
 31391                           ; BSR set to: 1
 31392                           ;api.c: 432: {;api.c: 434: data_length = 54;
 31393  010C36  0E36               	movlw	54
 31394  010C38  6F0C               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 31395  010C3A  0E00               	movlw	0
 31396  010C3C  6F0D               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 31397  010C3E  0E00               	movlw	0
 31398  010C40  6F0E               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 31399  010C42  0E00               	movlw	0
 31400  010C44  6F0F               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 31401  010C46                     l3597:
 31402                           
 31403                           ; BSR set to: 1
 31404                           ;api.c: 435: };api.c: 438: outBuffer[8] = (uint8_t) data_length;
 31405                           
 31406                           ; BSR set to: 1
 31407  010C46  EE20 F008          	lfsr	2,8
 31408  010C4A  5102               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 31409  010C4C  26D9               	addwf	fsr2l,f,c
 31410  010C4E  5103               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 31411  010C50  22DA               	addwfc	fsr2h,f,c
 31412  010C52  C10C  FFDF         	movff	__fill_buffer_read_file@data_length,indf2
 31413                           
 31414                           ; BSR set to: 1
 31415                           ;api.c: 441: outBuffer[9] = fat_read_from_file(inBuffer[1], start, data_length, &outBuff
      +                          er[10]);
 31416  010C56  C110  F0C9         	movff	__fill_buffer_read_file@start,fat_read_from_file@start_byte
 31417  010C5A  C111  F0CA         	movff	__fill_buffer_read_file@start+1,fat_read_from_file@start_byte+1
 31418  010C5E  C112  F0CB         	movff	__fill_buffer_read_file@start+2,fat_read_from_file@start_byte+2
 31419  010C62  C113  F0CC         	movff	__fill_buffer_read_file@start+3,fat_read_from_file@start_byte+3
 31420  010C66  C10C  F0CD         	movff	__fill_buffer_read_file@data_length,fat_read_from_file@length
 31421  010C6A  C10D  F0CE         	movff	__fill_buffer_read_file@data_length+1,fat_read_from_file@length+1
 31422  010C6E  C10E  F0CF         	movff	__fill_buffer_read_file@data_length+2,fat_read_from_file@length+2
 31423  010C72  C10F  F0D0         	movff	__fill_buffer_read_file@data_length+3,fat_read_from_file@length+3
 31424  010C76  0E0A               	movlw	10
 31425  010C78  2502               	addwf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 31426  010C7A  0100               	movlb	0	; () banked
 31427  010C7C  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 31428  010C7E  0E00               	movlw	0
 31429  010C80  0101               	movlb	1	; () banked
 31430  010C82  2103               	addwfc	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 31431  010C84  0100               	movlb	0	; () banked
 31432  010C86  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 31433  010C88  0101               	movlb	1	; () banked
 31434  010C8A  EE20 F001          	lfsr	2,1
 31435  010C8E  5100               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 31436  010C90  26D9               	addwf	fsr2l,f,c
 31437  010C92  5101               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 31438  010C94  22DA               	addwfc	fsr2h,f,c
 31439  010C96  50DF               	movf	indf2,w,c
 31440  010C98  EC3E  F0A1         	call	_fat_read_from_file
 31441  010C9C  0101               	movlb	1	; () banked
 31442  010C9E  6F04               	movwf	??__fill_buffer_read_file& (0+255),b
 31443  010CA0  EE20 F009          	lfsr	2,9
 31444  010CA4  5102               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 31445  010CA6  26D9               	addwf	fsr2l,f,c
 31446  010CA8  5103               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 31447  010CAA  22DA               	addwfc	fsr2h,f,c
 31448  010CAC  C104  FFDF         	movff	??__fill_buffer_read_file,indf2
 31449                           
 31450                           ; BSR set to: 1
 31451  010CB0  0012               	return		;funcret
 31452  010CB2                     __end_of__fill_buffer_read_file:
 31453                           	opt stack 0
 31454                           tosu	equ	0xFFF
 31455                           tosh	equ	0xFFE
 31456                           tosl	equ	0xFFD
 31457                           pclath	equ	0xFFA
 31458                           tblptru	equ	0xFF8
 31459                           tblptrh	equ	0xFF7
 31460                           tblptrl	equ	0xFF6
 31461                           tablat	equ	0xFF5
 31462                           prodh	equ	0xFF4
 31463                           prodl	equ	0xFF3
 31464                           intcon	equ	0xFF2
 31465                           intcon2	equ	0xFF1
 31466                           intcon3	equ	0xFF0
 31467                           postinc0	equ	0xFEE
 31468                           wreg	equ	0xFE8
 31469                           indf1	equ	0xFE7
 31470                           postdec1	equ	0xFE5
 31471                           plusw1	equ	0xFE3
 31472                           fsr1h	equ	0xFE2
 31473                           fsr1l	equ	0xFE1
 31474                           indf2	equ	0xFDF
 31475                           postinc2	equ	0xFDE
 31476                           postdec2	equ	0xFDD
 31477                           plusw2	equ	0xFDB
 31478                           fsr2h	equ	0xFDA
 31479                           fsr2l	equ	0xFD9
 31480                           status	equ	0xFD8
 31481                           
 31482 ;; *************** function _fat_read_from_file *****************
 31483 ;; Defined at:
 31484 ;;		line 751 in file "fat16.c"
 31485 ;; Parameters:    Size  Location     Type
 31486 ;;  file_number     1    wreg     unsigned char 
 31487 ;;  start_byte      4  105[BANK0 ] unsigned long 
 31488 ;;  length          4  109[BANK0 ] unsigned long 
 31489 ;;  data            2  113[BANK0 ] PTR unsigned char 
 31490 ;;		 -> ToSendDataBuffer(64), 
 31491 ;; Auto vars:     Size  Location     Type
 31492 ;;  file_number     1  119[BANK0 ] unsigned char 
 31493 ;;  root           32  125[BANK0 ] struct .
 31494 ;;  cluster_numb    2  122[BANK0 ] unsigned int 
 31495 ;;  cluster         2  120[BANK0 ] unsigned int 
 31496 ;;  return_code     1  124[BANK0 ] unsigned char 
 31497 ;; Return value:  Size  Location     Type
 31498 ;;                  1    wreg      unsigned char 
 31499 ;; Registers used:
 31500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31501 ;; Tracked objects:
 31502 ;;		On entry : 0/0
 31503 ;;		On exit  : 0/0
 31504 ;;		Unchanged: 0/0
 31505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31506 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31507 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31508 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31509 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31510 ;;Total ram usage:       52 bytes
 31511 ;; Hardware stack levels used:    1
 31512 ;; Hardware stack levels required when called:   18
 31513 ;; This function calls:
 31514 ;;		_fat_get_file_information
 31515 ;;		_fat_read_from_file_fast
 31516 ;; This function is called by:
 31517 ;;		__fill_buffer_read_file
 31518 ;; This function uses a non-reentrant model
 31519 ;;
 31520                           
 31521                           	psect	text128
 31522  01427C                     __ptext128:
 31523                           	opt stack 0
 31524  01427C                     _fat_read_from_file:
 31525                           	opt stack 9
 31526                           
 31527                           ; BSR set to: 1
 31528                           ;incstack = 0
 31529                           ;fat_read_from_file@file_number stored from wreg
 31530  01427C  0100               	movlb	0	; () banked
 31531  01427E  6FD7               	movwf	fat_read_from_file@file_number& (0+255),b
 31532                           
 31533                           ;fat16.c: 753: rootEntry_t root;;fat16.c: 754: uint16_t cluster;;fat16.c: 755: uint16_t 
      +                          cluster_number;;fat16.c: 756: uint8_t return_code;;fat16.c: 759: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 31534  014280  0EDD               	movlw	low fat_read_from_file@root
 31535  014282  0100               	movlb	0	; () banked
 31536  014284  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 31537  014286  0E00               	movlw	high fat_read_from_file@root
 31538  014288  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 31539  01428A  51D7               	movf	fat_read_from_file@file_number& (0+255),w,b
 31540  01428C  ECBF  F0B6         	call	_fat_get_file_information
 31541  014290  0100               	movlb	0	; () banked
 31542  014292  6FDC               	movwf	fat_read_from_file@return_code& (0+255),b
 31543                           
 31544                           ; BSR set to: 0
 31545                           ;fat16.c: 760: if(return_code!=0x00)
 31546  014294  51DC               	movf	fat_read_from_file@return_code& (0+255),w,b
 31547  014296  B4D8               	btfsc	status,2,c
 31548  014298  D002               	goto	l2917
 31549                           
 31550                           ; BSR set to: 0
 31551                           ;fat16.c: 761: {;fat16.c: 763: return return_code;
 31552  01429A  51DC               	movf	fat_read_from_file@return_code& (0+255),w,b
 31553                           
 31554                           ; BSR set to: 0
 31555  01429C  0012               	return	
 31556  01429E                     l2917:
 31557                           
 31558                           ; BSR set to: 0
 31559                           ;fat16.c: 764: };fat16.c: 767: if(start_byte > root.fileSize)
 31560                           
 31561                           ; BSR set to: 0
 31562  01429E  51C9               	movf	fat_read_from_file@start_byte& (0+255),w,b
 31563  0142A0  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 31564  0142A2  51CA               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 31565  0142A4  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 31566  0142A6  51CB               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 31567  0142A8  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 31568  0142AA  51CC               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 31569  0142AC  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 31570  0142AE  B0D8               	btfsc	status,0,c
 31571  0142B0  D002               	goto	l2919
 31572                           
 31573                           ; BSR set to: 0
 31574                           ;fat16.c: 768: {;fat16.c: 770: return 0xFF;
 31575  0142B2  0EFF               	movlw	255
 31576                           
 31577                           ; BSR set to: 0
 31578  0142B4  0012               	return	
 31579  0142B6                     l2919:
 31580                           
 31581                           ; BSR set to: 0
 31582                           ;fat16.c: 771: };fat16.c: 773: if(start_byte+length > root.fileSize)
 31583                           
 31584                           ; BSR set to: 0
 31585  0142B6  51CD               	movf	fat_read_from_file@length& (0+255),w,b
 31586  0142B8  25C9               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 31587  0142BA  6FD3               	movwf	??_fat_read_from_file& (0+255),b
 31588  0142BC  51CE               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 31589  0142BE  21CA               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 31590  0142C0  6FD4               	movwf	(??_fat_read_from_file+1)& (0+255),b
 31591  0142C2  51CF               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 31592  0142C4  21CB               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 31593  0142C6  6FD5               	movwf	(??_fat_read_from_file+2)& (0+255),b
 31594  0142C8  51D0               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 31595  0142CA  21CC               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 31596  0142CC  6FD6               	movwf	(??_fat_read_from_file+3)& (0+255),b
 31597  0142CE  51D3               	movf	??_fat_read_from_file& (0+255),w,b
 31598  0142D0  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 31599  0142D2  51D4               	movf	(??_fat_read_from_file+1)& (0+255),w,b
 31600  0142D4  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 31601  0142D6  51D5               	movf	(??_fat_read_from_file+2)& (0+255),w,b
 31602  0142D8  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 31603  0142DA  51D6               	movf	(??_fat_read_from_file+3)& (0+255),w,b
 31604  0142DC  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 31605  0142DE  B0D8               	btfsc	status,0,c
 31606  0142E0  D01D               	goto	l2920
 31607                           
 31608                           ; BSR set to: 0
 31609                           ;fat16.c: 774: {;fat16.c: 776: length = root.fileSize - start_byte;
 31610  0142E2  C0C9  F0D3         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 31611  0142E6  C0CA  F0D4         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 31612  0142EA  C0CB  F0D5         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 31613  0142EE  C0CC  F0D6         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 31614  0142F2  1FD3               	comf	??_fat_read_from_file& (0+255),f,b
 31615  0142F4  1FD4               	comf	(??_fat_read_from_file+1)& (0+255),f,b
 31616  0142F6  1FD5               	comf	(??_fat_read_from_file+2)& (0+255),f,b
 31617  0142F8  1FD6               	comf	(??_fat_read_from_file+3)& (0+255),f,b
 31618  0142FA  2BD3               	incf	??_fat_read_from_file& (0+255),f,b
 31619  0142FC  0E00               	movlw	0
 31620  0142FE  23D4               	addwfc	(??_fat_read_from_file+1)& (0+255),f,b
 31621  014300  23D5               	addwfc	(??_fat_read_from_file+2)& (0+255),f,b
 31622  014302  23D6               	addwfc	(??_fat_read_from_file+3)& (0+255),f,b
 31623  014304  51F9               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 31624  014306  25D3               	addwf	??_fat_read_from_file& (0+255),w,b
 31625  014308  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 31626  01430A  51FA               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 31627  01430C  21D4               	addwfc	(??_fat_read_from_file+1)& (0+255),w,b
 31628  01430E  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 31629  014310  51FB               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 31630  014312  21D5               	addwfc	(??_fat_read_from_file+2)& (0+255),w,b
 31631  014314  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 31632  014316  51FC               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 31633  014318  21D6               	addwfc	(??_fat_read_from_file+3)& (0+255),w,b
 31634  01431A  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 31635  01431C                     l2920:
 31636                           
 31637                           ; BSR set to: 0
 31638                           ;fat16.c: 777: };fat16.c: 780: cluster = root.firstCluster;
 31639                           
 31640                           ; BSR set to: 0
 31641  01431C  C0F7  F0D8         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 31642  014320  C0F8  F0D9         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 31643                           
 31644                           ; BSR set to: 0
 31645                           ;fat16.c: 781: cluster_number = 0;
 31646  014324  0E00               	movlw	0
 31647  014326  6FDB               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 31648  014328  0E00               	movlw	0
 31649  01432A  6FDA               	movwf	fat_read_from_file@cluster_number& (0+255),b
 31650                           
 31651                           ; BSR set to: 0
 31652                           ;fat16.c: 784: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);
 31653  01432C  C0C9  F0A1         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 31654  014330  C0CA  F0A2         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 31655  014334  C0CB  F0A3         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 31656  014338  C0CC  F0A4         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 31657  01433C  C0CD  F0A5         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 31658  014340  C0CE  F0A6         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 31659  014344  C0CF  F0A7         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 31660  014348  C0D0  F0A8         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 31661  01434C  C0D1  F0A9         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 31662  014350  C0D2  F0AA         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 31663  014354  0ED8               	movlw	low fat_read_from_file@cluster
 31664  014356  6FAB               	movwf	fat_read_from_file_fast@cluster& (0+255),b
 31665  014358  0E00               	movlw	high fat_read_from_file@cluster
 31666  01435A  6FAC               	movwf	(fat_read_from_file_fast@cluster+1)& (0+255),b
 31667  01435C  0EDA               	movlw	low fat_read_from_file@cluster_number
 31668  01435E  6FAD               	movwf	fat_read_from_file_fast@cluster_number& (0+255),b
 31669  014360  0E00               	movlw	high fat_read_from_file@cluster_number
 31670  014362  6FAE               	movwf	(fat_read_from_file_fast@cluster_number+1)& (0+255),b
 31671  014364  EC21  F080         	call	_fat_read_from_file_fast	;wreg free
 31672  014368  0012               	return	
 31673  01436A                     __end_of_fat_read_from_file:
 31674                           	opt stack 0
 31675                           tosu	equ	0xFFF
 31676                           tosh	equ	0xFFE
 31677                           tosl	equ	0xFFD
 31678                           pclath	equ	0xFFA
 31679                           tblptru	equ	0xFF8
 31680                           tblptrh	equ	0xFF7
 31681                           tblptrl	equ	0xFF6
 31682                           tablat	equ	0xFF5
 31683                           prodh	equ	0xFF4
 31684                           prodl	equ	0xFF3
 31685                           intcon	equ	0xFF2
 31686                           intcon2	equ	0xFF1
 31687                           intcon3	equ	0xFF0
 31688                           postinc0	equ	0xFEE
 31689                           wreg	equ	0xFE8
 31690                           indf1	equ	0xFE7
 31691                           postdec1	equ	0xFE5
 31692                           plusw1	equ	0xFE3
 31693                           fsr1h	equ	0xFE2
 31694                           fsr1l	equ	0xFE1
 31695                           indf2	equ	0xFDF
 31696                           postinc2	equ	0xFDE
 31697                           postdec2	equ	0xFDD
 31698                           plusw2	equ	0xFDB
 31699                           fsr2h	equ	0xFDA
 31700                           fsr2l	equ	0xFD9
 31701                           status	equ	0xFD8
 31702                           
 31703 ;; *************** function _fat_read_from_file_fast *****************
 31704 ;; Defined at:
 31705 ;;		line 787 in file "fat16.c"
 31706 ;; Parameters:    Size  Location     Type
 31707 ;;  start_byte      4   65[BANK0 ] unsigned long 
 31708 ;;  length          4   69[BANK0 ] unsigned long 
 31709 ;;  data            2   73[BANK0 ] PTR unsigned char 
 31710 ;;		 -> ToSendDataBuffer(64), 
 31711 ;;  cluster         2   75[BANK0 ] PTR unsigned int 
 31712 ;;		 -> fat_read_from_file@cluster(2), 
 31713 ;;  cluster_numb    2   77[BANK0 ] PTR unsigned int 
 31714 ;;		 -> fat_read_from_file@cluster_number(2), 
 31715 ;; Auto vars:     Size  Location     Type
 31716 ;;  position        4  101[BANK0 ] unsigned long 
 31717 ;;  read_length     2   99[BANK0 ] unsigned int 
 31718 ;;  needed_clust    2   97[BANK0 ] unsigned int 
 31719 ;;  offset          2   95[BANK0 ] unsigned int 
 31720 ;;  working_clus    2   93[BANK0 ] unsigned int 
 31721 ;;  sector          2   91[BANK0 ] unsigned int 
 31722 ;; Return value:  Size  Location     Type
 31723 ;;                  1    wreg      unsigned char 
 31724 ;; Registers used:
 31725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31726 ;; Tracked objects:
 31727 ;;		On entry : 0/0
 31728 ;;		On exit  : 0/0
 31729 ;;		Unchanged: 0/0
 31730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31731 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31732 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31733 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31734 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31735 ;;Total ram usage:       40 bytes
 31736 ;; Hardware stack levels used:    1
 31737 ;; Hardware stack levels required when called:   17
 31738 ;; This function calls:
 31739 ;;		__data_sector_from_cluster
 31740 ;;		__find_nth_cluster
 31741 ;;		__read_fat
 31742 ;;		_flash_partial_read
 31743 ;; This function is called by:
 31744 ;;		_fat_read_from_file
 31745 ;; This function uses a non-reentrant model
 31746 ;;
 31747                           
 31748                           	psect	text129
 31749  010042                     __ptext129:
 31750                           	opt stack 0
 31751  010042                     _fat_read_from_file_fast:
 31752                           	opt stack 9
 31753                           
 31754                           ;fat16.c: 789: uint32_t position;;fat16.c: 790: uint16_t offset;;fat16.c: 791: uint16_t 
      +                          sector;;fat16.c: 792: uint16_t read_length;;fat16.c: 793: uint16_t working_cluster;;fat1
      +                          6.c: 794: uint16_t needed_cluster;;fat16.c: 797: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 31755                           
 31756                           ;incstack = 0
 31757  010042  C0A1  F0AF         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 31758  010046  C0A2  F0B0         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 31759  01004A  C0A3  F0B1         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 31760  01004E  C0A4  F0B2         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 31761  010052  0E0A               	movlw	10
 31762  010054  D006               	goto	u22120
 31763  010056                     u22125:
 31764  010056  0100               	movlb	0	; () banked
 31765  010058  90D8               	bcf	status,0,c
 31766  01005A  33B2               	rrcf	(??_fat_read_from_file_fast+3)& (0+255),f,b
 31767  01005C  33B1               	rrcf	(??_fat_read_from_file_fast+2)& (0+255),f,b
 31768  01005E  33B0               	rrcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 31769  010060  33AF               	rrcf	??_fat_read_from_file_fast& (0+255),f,b
 31770  010062                     u22120:
 31771  010062  2EE8               	decfsz	wreg,f,c
 31772  010064  D7F8               	goto	u22125
 31773  010066  C0AF  F0C1         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 31774  01006A  C0B0  F0C2         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 31775                           
 31776                           ; BSR set to: 0
 31777                           ;fat16.c: 800: if((*cluster_number) > needed_cluster)
 31778  01006E  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 31779  010072  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 31780  010076  50DE               	movf	postinc2,w,c
 31781  010078  5DC1               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 31782  01007A  50DE               	movf	postinc2,w,c
 31783  01007C  59C2               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 31784  01007E  B0D8               	btfsc	status,0,c
 31785  010080  D002               	goto	l2923
 31786                           
 31787                           ; BSR set to: 0
 31788                           ;fat16.c: 801: {;fat16.c: 802: return 0xFF;
 31789  010082  0EFF               	movlw	255
 31790                           
 31791                           ; BSR set to: 0
 31792  010084  0012               	return	
 31793  010086                     l2923:
 31794                           
 31795                           ; BSR set to: 0
 31796                           ;fat16.c: 803: };fat16.c: 806: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 31797                           
 31798                           ; BSR set to: 0
 31799  010086  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 31800  01008A  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 31801  01008E  CFDE F097          	movff	postinc2,__find_nth_cluster@cluster
 31802  010092  CFDD F098          	movff	postdec2,__find_nth_cluster@cluster+1
 31803  010096  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 31804  01009A  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 31805  01009E  CFDE F0AF          	movff	postinc2,??_fat_read_from_file_fast
 31806  0100A2  CFDD F0B0          	movff	postdec2,??_fat_read_from_file_fast+1
 31807  0100A6  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 31808  0100A8  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 31809  0100AA  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 31810  0100AC  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 31811  0100AE  51C1               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 31812  0100B0  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 31813  0100B2  6F99               	movwf	__find_nth_cluster@n& (0+255),b
 31814  0100B4  51C2               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 31815  0100B6  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 31816  0100B8  6F9A               	movwf	(__find_nth_cluster@n+1)& (0+255),b
 31817  0100BA  EC2E  F0AF         	call	__find_nth_cluster	;wreg free
 31818  0100BE  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 31819  0100C2  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 31820  0100C6  0100               	movlb	0	; () banked
 31821  0100C8  C097  FFDE         	movff	?__find_nth_cluster,postinc2
 31822  0100CC  C098  FFDD         	movff	?__find_nth_cluster+1,postdec2
 31823                           
 31824                           ; BSR set to: 0
 31825                           ;fat16.c: 809: (*cluster_number) = needed_cluster;
 31826  0100D0  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 31827  0100D4  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 31828  0100D8  C0C1  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 31829  0100DC  C0C2  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 31830                           
 31831                           ; BSR set to: 0
 31832                           ;fat16.c: 813: working_cluster = (*cluster);
 31833  0100E0  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 31834  0100E4  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 31835  0100E8  CFDE F0BD          	movff	postinc2,fat_read_from_file_fast@working_cluster
 31836  0100EC  CFDD F0BE          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 31837                           
 31838                           ; BSR set to: 0
 31839                           ;fat16.c: 816: position = (needed_cluster << 9);
 31840  0100F0  C0C1  F0AF         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 31841  0100F4  C0C2  F0B0         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 31842  0100F8  0E09               	movlw	9
 31843  0100FA                     u22145:
 31844  0100FA  90D8               	bcf	status,0,c
 31845  0100FC  37AF               	rlcf	??_fat_read_from_file_fast& (0+255),f,b
 31846  0100FE  37B0               	rlcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 31847  010100  2EE8               	decfsz	wreg,f,c
 31848  010102  D7FB               	goto	u22145
 31849  010104  C0AF  F0C5         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 31850  010108  C0B0  F0C6         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 31851  01010C  6BC7               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 31852  01010E  6BC8               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 31853                           
 31854                           ; BSR set to: 0
 31855                           ;fat16.c: 817: offset = start_byte - position;
 31856  010110  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 31857  010114  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 31858  010118  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 31859  01011A  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 31860  01011C  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 31861  01011E  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 31862  010120  51A1               	movf	fat_read_from_file_fast@start_byte& (0+255),w,b
 31863  010122  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 31864  010124  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 31865  010126  51A2               	movf	(fat_read_from_file_fast@start_byte+1)& (0+255),w,b
 31866  010128  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 31867  01012A  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 31868                           
 31869                           ; BSR set to: 0
 31870                           ;fat16.c: 820: position = 0;
 31871  01012C  0E00               	movlw	0
 31872  01012E  6FC5               	movwf	fat_read_from_file_fast@position& (0+255),b
 31873  010130  0E00               	movlw	0
 31874  010132  6FC6               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 31875  010134  0E00               	movlw	0
 31876  010136  6FC7               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 31877  010138  0E00               	movlw	0
 31878  01013A  6FC8               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 31879                           
 31880                           ;fat16.c: 821: while(position < length)
 31881  01013C  D089               	goto	l2925
 31882  01013E                     
 31883                           ; BSR set to: 0
 31884                           ;fat16.c: 822: {;fat16.c: 824: if(offset==512)
 31885                           
 31886                           ; BSR set to: 0
 31887  01013E  0E02               	movlw	2
 31888  010140  19C0               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 31889  010142  11BF               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 31890  010144  A4D8               	btfss	status,2,c
 31891  010146  D00F               	goto	l2927
 31892                           
 31893                           ; BSR set to: 0
 31894                           ;fat16.c: 825: {;fat16.c: 827: working_cluster = _read_fat(working_cluster);
 31895  010148  C0BD  F08F         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 31896  01014C  C0BE  F090         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 31897  010150  EC43  F0BD         	call	__read_fat	;wreg free
 31898  010154  C08F  F0BD         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 31899  010158  C090  F0BE         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 31900                           
 31901                           ;fat16.c: 828: offset = 0;
 31902  01015C  0E00               	movlw	0
 31903  01015E  0100               	movlb	0	; () banked
 31904  010160  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 31905  010162  0E00               	movlw	0
 31906  010164  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 31907  010166                     l2927:
 31908                           
 31909                           ; BSR set to: 0
 31910                           ;fat16.c: 829: };fat16.c: 832: sector = _data_sector_from_cluster(working_cluster);
 31911                           
 31912                           ; BSR set to: 0
 31913  010166  C0BD  F060         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 31914  01016A  C0BE  F061         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 31915  01016E  EC0B  F0C8         	call	__data_sector_from_cluster	;wreg free
 31916  010172  C060  F0BB         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 31917  010176  C061  F0BC         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 31918                           
 31919                           ;fat16.c: 835: read_length = 512 - offset;
 31920  01017A  C0BF  F0AF         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 31921  01017E  C0C0  F0B0         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 31922  010182  0100               	movlb	0	; () banked
 31923  010184  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 31924  010186  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 31925  010188  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 31926  01018A  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 31927  01018C  0E00               	movlw	0
 31928  01018E  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 31929  010190  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 31930  010192  0E02               	movlw	2
 31931  010194  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 31932  010196  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 31933                           
 31934                           ; BSR set to: 0
 31935                           ;fat16.c: 836: if(read_length > (length-position))
 31936  010198  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 31937  01019A  6FAF               	movwf	??_fat_read_from_file_fast& (0+255),b
 31938  01019C  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 31939  01019E  6FB0               	movwf	(??_fat_read_from_file_fast+1)& (0+255),b
 31940  0101A0  6BB1               	clrf	(??_fat_read_from_file_fast+2)& (0+255),b
 31941  0101A2  6BB2               	clrf	(??_fat_read_from_file_fast+3)& (0+255),b
 31942  0101A4  C0C5  F0B3         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 31943  0101A8  C0C6  F0B4         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 31944  0101AC  C0C7  F0B5         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 31945  0101B0  C0C8  F0B6         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 31946  0101B4  1FB3               	comf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 31947  0101B6  1FB4               	comf	(??_fat_read_from_file_fast+5)& (0+255),f,b
 31948  0101B8  1FB5               	comf	(??_fat_read_from_file_fast+6)& (0+255),f,b
 31949  0101BA  1FB6               	comf	(??_fat_read_from_file_fast+7)& (0+255),f,b
 31950  0101BC  2BB3               	incf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 31951  0101BE  0E00               	movlw	0
 31952  0101C0  23B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),f,b
 31953  0101C2  23B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),f,b
 31954  0101C4  23B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),f,b
 31955  0101C6  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 31956  0101C8  25B3               	addwf	(??_fat_read_from_file_fast+4)& (0+255),w,b
 31957  0101CA  6FB7               	movwf	(??_fat_read_from_file_fast+8)& (0+255),b
 31958  0101CC  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 31959  0101CE  21B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),w,b
 31960  0101D0  6FB8               	movwf	(??_fat_read_from_file_fast+9)& (0+255),b
 31961  0101D2  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 31962  0101D4  21B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),w,b
 31963  0101D6  6FB9               	movwf	(??_fat_read_from_file_fast+10)& (0+255),b
 31964  0101D8  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 31965  0101DA  21B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),w,b
 31966  0101DC  6FBA               	movwf	(??_fat_read_from_file_fast+11)& (0+255),b
 31967  0101DE  51AF               	movf	??_fat_read_from_file_fast& (0+255),w,b
 31968  0101E0  5DB7               	subwf	(??_fat_read_from_file_fast+8)& (0+255),w,b
 31969  0101E2  51B0               	movf	(??_fat_read_from_file_fast+1)& (0+255),w,b
 31970  0101E4  59B8               	subwfb	(??_fat_read_from_file_fast+9)& (0+255),w,b
 31971  0101E6  51B1               	movf	(??_fat_read_from_file_fast+2)& (0+255),w,b
 31972  0101E8  59B9               	subwfb	(??_fat_read_from_file_fast+10)& (0+255),w,b
 31973  0101EA  51B2               	movf	(??_fat_read_from_file_fast+3)& (0+255),w,b
 31974  0101EC  59BA               	subwfb	(??_fat_read_from_file_fast+11)& (0+255),w,b
 31975  0101EE  B0D8               	btfsc	status,0,c
 31976  0101F0  D00E               	goto	l2928
 31977                           
 31978                           ; BSR set to: 0
 31979                           ;fat16.c: 837: {;fat16.c: 839: read_length = length - position;
 31980  0101F2  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 31981  0101F6  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 31982  0101FA  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 31983  0101FC  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 31984  0101FE  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 31985  010200  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 31986  010202  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 31987  010204  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 31988  010206  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 31989  010208  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 31990  01020A  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 31991  01020C  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 31992  01020E                     l2928:
 31993                           
 31994                           ; BSR set to: 0
 31995                           ;fat16.c: 840: };fat16.c: 843: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 31996                           
 31997                           ; BSR set to: 0
 31998  01020E  C0BB  F087         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 31999  010212  C0BC  F088         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 32000  010216  C0BF  F089         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 32001  01021A  C0C0  F08A         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 32002  01021E  C0C3  F08B         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 32003  010222  C0C4  F08C         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 32004  010226  51C5               	movf	fat_read_from_file_fast@position& (0+255),w,b
 32005  010228  25A9               	addwf	fat_read_from_file_fast@data& (0+255),w,b
 32006  01022A  6F8D               	movwf	flash_partial_read@data& (0+255),b
 32007  01022C  51C6               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 32008  01022E  21AA               	addwfc	(fat_read_from_file_fast@data+1)& (0+255),w,b
 32009  010230  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 32010  010232  ECED  F0C2         	call	_flash_partial_read	;wreg free
 32011                           
 32012                           ;fat16.c: 846: position += read_length;
 32013  010236  0100               	movlb	0	; () banked
 32014  010238  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 32015  01023A  27C5               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 32016  01023C  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 32017  01023E  23C6               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 32018  010240  0E00               	movlw	0
 32019  010242  23C7               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 32020  010244  0E00               	movlw	0
 32021  010246  23C8               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 32022                           
 32023                           ; BSR set to: 0
 32024                           ;fat16.c: 847: offset += read_length;
 32025  010248  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 32026  01024A  27BF               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 32027  01024C  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 32028  01024E  23C0               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 32029  010250                     l2925:
 32030                           
 32031                           ; BSR set to: 0
 32032                           
 32033                           ; BSR set to: 0
 32034  010250  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 32035  010252  5DC5               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 32036  010254  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 32037  010256  59C6               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 32038  010258  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 32039  01025A  59C7               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 32040  01025C  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 32041  01025E  59C8               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 32042  010260  A0D8               	btfss	status,0,c
 32043  010262  D76D               	goto	l2926
 32044                           
 32045                           ; BSR set to: 0
 32046                           ;fat16.c: 848: };fat16.c: 851: return 0x00;
 32047                           
 32048                           ; BSR set to: 0
 32049  010264  0E00               	movlw	0
 32050  010266  0012               	return	
 32051  010268                     __end_of_fat_read_from_file_fast:
 32052                           	opt stack 0
 32053                           tosu	equ	0xFFF
 32054                           tosh	equ	0xFFE
 32055                           tosl	equ	0xFFD
 32056                           pclath	equ	0xFFA
 32057                           tblptru	equ	0xFF8
 32058                           tblptrh	equ	0xFF7
 32059                           tblptrl	equ	0xFF6
 32060                           tablat	equ	0xFF5
 32061                           prodh	equ	0xFF4
 32062                           prodl	equ	0xFF3
 32063                           intcon	equ	0xFF2
 32064                           intcon2	equ	0xFF1
 32065                           intcon3	equ	0xFF0
 32066                           postinc0	equ	0xFEE
 32067                           wreg	equ	0xFE8
 32068                           indf1	equ	0xFE7
 32069                           postdec1	equ	0xFE5
 32070                           plusw1	equ	0xFE3
 32071                           fsr1h	equ	0xFE2
 32072                           fsr1l	equ	0xFE1
 32073                           indf2	equ	0xFDF
 32074                           postinc2	equ	0xFDE
 32075                           postdec2	equ	0xFDD
 32076                           plusw2	equ	0xFDB
 32077                           fsr2h	equ	0xFDA
 32078                           fsr2l	equ	0xFD9
 32079                           status	equ	0xFD8
 32080                           
 32081 ;; *************** function __fill_buffer_read_buffer *****************
 32082 ;; Defined at:
 32083 ;;		line 444 in file "api.c"
 32084 ;; Parameters:    Size  Location     Type
 32085 ;;  inBuffer        2   42[BANK0 ] PTR unsigned char 
 32086 ;;		 -> ReceivedDataBuffer(64), 
 32087 ;;  outBuffer       2   44[BANK0 ] PTR unsigned char 
 32088 ;;		 -> ToSendDataBuffer(64), 
 32089 ;; Auto vars:     Size  Location     Type
 32090 ;;  data_length     2   50[BANK0 ] unsigned int 
 32091 ;;  start           2   48[BANK0 ] unsigned int 
 32092 ;; Return value:  Size  Location     Type
 32093 ;;                  1    wreg      void 
 32094 ;; Registers used:
 32095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32096 ;; Tracked objects:
 32097 ;;		On entry : 0/0
 32098 ;;		On exit  : 0/0
 32099 ;;		Unchanged: 0/0
 32100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32101 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32102 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32103 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32104 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32105 ;;Total ram usage:       10 bytes
 32106 ;; Hardware stack levels used:    1
 32107 ;; Hardware stack levels required when called:   16
 32108 ;; This function calls:
 32109 ;;		_fat_read_from_buffer
 32110 ;; This function is called by:
 32111 ;;		_api_prepare
 32112 ;; This function uses a non-reentrant model
 32113 ;;
 32114                           
 32115                           	psect	text130
 32116  014A7C                     __ptext130:
 32117                           	opt stack 0
 32118  014A7C                     __fill_buffer_read_buffer:
 32119                           	opt stack 12
 32120                           
 32121                           ;api.c: 446: uint16_t start;;api.c: 447: uint16_t data_length;;api.c: 450: outBuffer[0] 
      +                          = DATAREQUEST_READ_BUFFER;
 32122                           
 32123                           ; BSR set to: 0
 32124                           ;incstack = 0
 32125  014A7C  C08C  FFD9         	movff	__fill_buffer_read_buffer@outBuffer,fsr2l
 32126  014A80  C08D  FFDA         	movff	__fill_buffer_read_buffer@outBuffer+1,fsr2h
 32127  014A84  0E83               	movlw	131
 32128  014A86  6EDF               	movwf	indf2,c
 32129                           
 32130                           ;api.c: 453: outBuffer[3] = inBuffer[1];
 32131  014A88  0100               	movlb	0	; () banked
 32132  014A8A  EE20 F001          	lfsr	2,1
 32133  014A8E  518A               	movf	__fill_buffer_read_buffer@inBuffer& (0+255),w,b
 32134  014A90  26D9               	addwf	fsr2l,f,c
 32135  014A92  518B               	movf	(__fill_buffer_read_buffer@inBuffer+1)& (0+255),w,b
 32136  014A94  22DA               	addwfc	fsr2h,f,c
 32137  014A96  EE10 F003          	lfsr	1,3
 32138  014A9A  518C               	movf	__fill_buffer_read_buffer@outBuffer& (0+255),w,b
 32139  014A9C  26E1               	addwf	fsr1l,f,c
 32140  014A9E  518D               	movf	(__fill_buffer_read_buffer@outBuffer+1)& (0+255),w,b
 32141  014AA0  22E2               	addwfc	fsr1h,f,c
 32142  014AA2  CFDF FFE7          	movff	indf2,indf1
 32143                           
 32144                           ; BSR set to: 0
 32145                           ;api.c: 454: outBuffer[4] = inBuffer[2];
 32146  014AA6  EE20 F002          	lfsr	2,2
 32147  014AAA  518A               	movf	__fill_buffer_read_buffer@inBuffer& (0+255),w,b
 32148  014AAC  26D9               	addwf	fsr2l,f,c
 32149  014AAE  518B               	movf	(__fill_buffer_read_buffer@inBuffer+1)& (0+255),w,b
 32150  014AB0  22DA               	addwfc	fsr2h,f,c
 32151  014AB2  EE10 F004          	lfsr	1,4
 32152  014AB6  518C               	movf	__fill_buffer_read_buffer@outBuffer& (0+255),w,b
 32153  014AB8  26E1               	addwf	fsr1l,f,c
 32154  014ABA  518D               	movf	(__fill_buffer_read_buffer@outBuffer+1)& (0+255),w,b
 32155  014ABC  22E2               	addwfc	fsr1h,f,c
 32156  014ABE  CFDF FFE7          	movff	indf2,indf1
 32157                           
 32158                           ; BSR set to: 0
 32159                           ;api.c: 457: start = inBuffer[1];
 32160  014AC2  EE20 F001          	lfsr	2,1
 32161  014AC6  518A               	movf	__fill_buffer_read_buffer@inBuffer& (0+255),w,b
 32162  014AC8  26D9               	addwf	fsr2l,f,c
 32163  014ACA  518B               	movf	(__fill_buffer_read_buffer@inBuffer+1)& (0+255),w,b
 32164  014ACC  22DA               	addwfc	fsr2h,f,c
 32165  014ACE  50DF               	movf	indf2,w,c
 32166  014AD0  6F8E               	movwf	??__fill_buffer_read_buffer& (0+255),b
 32167  014AD2  518E               	movf	??__fill_buffer_read_buffer& (0+255),w,b
 32168  014AD4  6F90               	movwf	__fill_buffer_read_buffer@start& (0+255),b
 32169  014AD6  6B91               	clrf	(__fill_buffer_read_buffer@start+1)& (0+255),b
 32170                           
 32171                           ; BSR set to: 0
 32172                           ;api.c: 458: start <<= 8;
 32173  014AD8  5190               	movf	__fill_buffer_read_buffer@start& (0+255),w,b
 32174  014ADA  6F91               	movwf	(__fill_buffer_read_buffer@start+1)& (0+255),b
 32175  014ADC  6B90               	clrf	__fill_buffer_read_buffer@start& (0+255),b
 32176                           
 32177                           ; BSR set to: 0
 32178                           ;api.c: 459: start |= inBuffer[2];
 32179  014ADE  EE20 F002          	lfsr	2,2
 32180  014AE2  518A               	movf	__fill_buffer_read_buffer@inBuffer& (0+255),w,b
 32181  014AE4  26D9               	addwf	fsr2l,f,c
 32182  014AE6  518B               	movf	(__fill_buffer_read_buffer@inBuffer+1)& (0+255),w,b
 32183  014AE8  22DA               	addwfc	fsr2h,f,c
 32184  014AEA  50DF               	movf	indf2,w,c
 32185  014AEC  6F8E               	movwf	??__fill_buffer_read_buffer& (0+255),b
 32186  014AEE  518E               	movf	??__fill_buffer_read_buffer& (0+255),w,b
 32187  014AF0  1390               	iorwf	__fill_buffer_read_buffer@start& (0+255),f,b
 32188                           
 32189                           ; BSR set to: 0
 32190                           ;api.c: 462: data_length = 512 - start;
 32191  014AF2  C090  F08E         	movff	__fill_buffer_read_buffer@start,??__fill_buffer_read_buffer
 32192  014AF6  C091  F08F         	movff	__fill_buffer_read_buffer@start+1,??__fill_buffer_read_buffer+1
 32193  014AFA  1F8E               	comf	??__fill_buffer_read_buffer& (0+255),f,b
 32194  014AFC  1F8F               	comf	(??__fill_buffer_read_buffer+1)& (0+255),f,b
 32195  014AFE  4B8E               	infsnz	??__fill_buffer_read_buffer& (0+255),f,b
 32196  014B00  2B8F               	incf	(??__fill_buffer_read_buffer+1)& (0+255),f,b
 32197  014B02  0E00               	movlw	0
 32198  014B04  258E               	addwf	??__fill_buffer_read_buffer& (0+255),w,b
 32199  014B06  6F92               	movwf	__fill_buffer_read_buffer@data_length& (0+255),b
 32200  014B08  0E02               	movlw	2
 32201  014B0A  218F               	addwfc	(??__fill_buffer_read_buffer+1)& (0+255),w,b
 32202  014B0C  6F93               	movwf	(__fill_buffer_read_buffer@data_length+1)& (0+255),b
 32203                           
 32204                           ; BSR set to: 0
 32205                           ;api.c: 463: if(data_length>54)
 32206  014B0E  5193               	movf	(__fill_buffer_read_buffer@data_length+1)& (0+255),w,b
 32207  014B10  E104               	bnz	u24230
 32208  014B12  0E37               	movlw	55
 32209  014B14  5D92               	subwf	__fill_buffer_read_buffer@data_length& (0+255),w,b
 32210  014B16  A0D8               	btfss	status,0,c
 32211  014B18  D004               	goto	l3601
 32212  014B1A                     u24230:
 32213                           
 32214                           ; BSR set to: 0
 32215                           ;api.c: 464: {;api.c: 466: data_length = 58;
 32216  014B1A  0E00               	movlw	0
 32217  014B1C  6F93               	movwf	(__fill_buffer_read_buffer@data_length+1)& (0+255),b
 32218  014B1E  0E3A               	movlw	58
 32219  014B20  6F92               	movwf	__fill_buffer_read_buffer@data_length& (0+255),b
 32220  014B22                     l3601:
 32221                           
 32222                           ; BSR set to: 0
 32223                           ;api.c: 467: };api.c: 470: outBuffer[5] = (uint8_t) data_length;
 32224                           
 32225                           ; BSR set to: 0
 32226  014B22  EE20 F005          	lfsr	2,5
 32227  014B26  518C               	movf	__fill_buffer_read_buffer@outBuffer& (0+255),w,b
 32228  014B28  26D9               	addwf	fsr2l,f,c
 32229  014B2A  518D               	movf	(__fill_buffer_read_buffer@outBuffer+1)& (0+255),w,b
 32230  014B2C  22DA               	addwfc	fsr2h,f,c
 32231  014B2E  C092  FFDF         	movff	__fill_buffer_read_buffer@data_length,indf2
 32232                           
 32233                           ; BSR set to: 0
 32234                           ;api.c: 473: fat_read_from_buffer(start, data_length, &outBuffer[6]);
 32235  014B32  C090  F084         	movff	__fill_buffer_read_buffer@start,fat_read_from_buffer@start
 32236  014B36  C091  F085         	movff	__fill_buffer_read_buffer@start+1,fat_read_from_buffer@start+1
 32237  014B3A  C092  F086         	movff	__fill_buffer_read_buffer@data_length,fat_read_from_buffer@length
 32238  014B3E  C093  F087         	movff	__fill_buffer_read_buffer@data_length+1,fat_read_from_buffer@length+1
 32239  014B42  0E06               	movlw	6
 32240  014B44  258C               	addwf	__fill_buffer_read_buffer@outBuffer& (0+255),w,b
 32241  014B46  6F88               	movwf	fat_read_from_buffer@data& (0+255),b
 32242  014B48  0E00               	movlw	0
 32243  014B4A  218D               	addwfc	(__fill_buffer_read_buffer@outBuffer+1)& (0+255),w,b
 32244  014B4C  6F89               	movwf	(fat_read_from_buffer@data+1)& (0+255),b
 32245  014B4E  EC91  F0C6         	call	_fat_read_from_buffer	;wreg free
 32246  014B52  0012               	return		;funcret
 32247  014B54                     __end_of__fill_buffer_read_buffer:
 32248                           	opt stack 0
 32249                           tosu	equ	0xFFF
 32250                           tosh	equ	0xFFE
 32251                           tosl	equ	0xFFD
 32252                           pclath	equ	0xFFA
 32253                           tblptru	equ	0xFF8
 32254                           tblptrh	equ	0xFF7
 32255                           tblptrl	equ	0xFF6
 32256                           tablat	equ	0xFF5
 32257                           prodh	equ	0xFF4
 32258                           prodl	equ	0xFF3
 32259                           intcon	equ	0xFF2
 32260                           intcon2	equ	0xFF1
 32261                           intcon3	equ	0xFF0
 32262                           postinc0	equ	0xFEE
 32263                           wreg	equ	0xFE8
 32264                           indf1	equ	0xFE7
 32265                           postdec1	equ	0xFE5
 32266                           plusw1	equ	0xFE3
 32267                           fsr1h	equ	0xFE2
 32268                           fsr1l	equ	0xFE1
 32269                           indf2	equ	0xFDF
 32270                           postinc2	equ	0xFDE
 32271                           postdec2	equ	0xFDD
 32272                           plusw2	equ	0xFDB
 32273                           fsr2h	equ	0xFDA
 32274                           fsr2l	equ	0xFD9
 32275                           status	equ	0xFD8
 32276                           
 32277 ;; *************** function _fat_read_from_buffer *****************
 32278 ;; Defined at:
 32279 ;;		line 1498 in file "fat16.c"
 32280 ;; Parameters:    Size  Location     Type
 32281 ;;  start           2   36[BANK0 ] unsigned int 
 32282 ;;  length          2   38[BANK0 ] unsigned int 
 32283 ;;  data            2   40[BANK0 ] PTR unsigned char 
 32284 ;;		 -> ToSendDataBuffer(64), 
 32285 ;; Auto vars:     Size  Location     Type
 32286 ;;		None
 32287 ;; Return value:  Size  Location     Type
 32288 ;;                  1    wreg      void 
 32289 ;; Registers used:
 32290 ;;		wreg, status,2, status,0, cstack
 32291 ;; Tracked objects:
 32292 ;;		On entry : 0/0
 32293 ;;		On exit  : 0/0
 32294 ;;		Unchanged: 0/0
 32295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32296 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32299 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32300 ;;Total ram usage:        6 bytes
 32301 ;; Hardware stack levels used:    1
 32302 ;; Hardware stack levels required when called:   15
 32303 ;; This function calls:
 32304 ;;		_flash_read_from_buffer
 32305 ;; This function is called by:
 32306 ;;		__fill_buffer_read_buffer
 32307 ;; This function uses a non-reentrant model
 32308 ;;
 32309                           
 32310                           	psect	text131
 32311  018D22                     __ptext131:
 32312                           	opt stack 0
 32313  018D22                     _fat_read_from_buffer:
 32314                           	opt stack 12
 32315                           
 32316                           ;fat16.c: 1500: flash_read_from_buffer(start, length, data);
 32317                           
 32318                           ;incstack = 0
 32319  018D22  C084  F07E         	movff	fat_read_from_buffer@start,flash_read_from_buffer@start
 32320  018D26  C085  F07F         	movff	fat_read_from_buffer@start+1,flash_read_from_buffer@start+1
 32321  018D2A  C086  F080         	movff	fat_read_from_buffer@length,flash_read_from_buffer@length
 32322  018D2E  C087  F081         	movff	fat_read_from_buffer@length+1,flash_read_from_buffer@length+1
 32323  018D32  C088  F082         	movff	fat_read_from_buffer@data,flash_read_from_buffer@data
 32324  018D36  C089  F083         	movff	fat_read_from_buffer@data+1,flash_read_from_buffer@data+1
 32325  018D3A  EC36  F0C3         	call	_flash_read_from_buffer	;wreg free
 32326  018D3E  0012               	return		;funcret
 32327  018D40                     __end_of_fat_read_from_buffer:
 32328                           	opt stack 0
 32329                           tosu	equ	0xFFF
 32330                           tosh	equ	0xFFE
 32331                           tosl	equ	0xFFD
 32332                           pclath	equ	0xFFA
 32333                           tblptru	equ	0xFF8
 32334                           tblptrh	equ	0xFF7
 32335                           tblptrl	equ	0xFF6
 32336                           tablat	equ	0xFF5
 32337                           prodh	equ	0xFF4
 32338                           prodl	equ	0xFF3
 32339                           intcon	equ	0xFF2
 32340                           intcon2	equ	0xFF1
 32341                           intcon3	equ	0xFF0
 32342                           postinc0	equ	0xFEE
 32343                           wreg	equ	0xFE8
 32344                           indf1	equ	0xFE7
 32345                           postdec1	equ	0xFE5
 32346                           plusw1	equ	0xFE3
 32347                           fsr1h	equ	0xFE2
 32348                           fsr1l	equ	0xFE1
 32349                           indf2	equ	0xFDF
 32350                           postinc2	equ	0xFDE
 32351                           postdec2	equ	0xFDD
 32352                           plusw2	equ	0xFDB
 32353                           fsr2h	equ	0xFDA
 32354                           fsr2l	equ	0xFD9
 32355                           status	equ	0xFD8
 32356                           
 32357 ;; *************** function _flash_read_from_buffer *****************
 32358 ;; Defined at:
 32359 ;;		line 546 in file "flash.c"
 32360 ;; Parameters:    Size  Location     Type
 32361 ;;  start           2   30[BANK0 ] unsigned int 
 32362 ;;  length          2   32[BANK0 ] unsigned int 
 32363 ;;  data            2   34[BANK0 ] PTR unsigned char 
 32364 ;;		 -> ToSendDataBuffer(64), 
 32365 ;; Auto vars:     Size  Location     Type
 32366 ;;		None
 32367 ;; Return value:  Size  Location     Type
 32368 ;;                  1    wreg      void 
 32369 ;; Registers used:
 32370 ;;		wreg, status,2, status,0, cstack
 32371 ;; Tracked objects:
 32372 ;;		On entry : 0/0
 32373 ;;		On exit  : 0/0
 32374 ;;		Unchanged: 0/0
 32375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32376 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32379 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32380 ;;Total ram usage:        6 bytes
 32381 ;; Hardware stack levels used:    1
 32382 ;; Hardware stack levels required when called:   14
 32383 ;; This function calls:
 32384 ;;		__flash_buffer_read
 32385 ;;		_spi_set_configuration
 32386 ;; This function is called by:
 32387 ;;		_fat_read_from_buffer
 32388 ;; This function uses a non-reentrant model
 32389 ;;
 32390                           
 32391                           	psect	text132
 32392  01866C                     __ptext132:
 32393                           	opt stack 0
 32394  01866C                     _flash_read_from_buffer:
 32395                           	opt stack 12
 32396                           
 32397                           ;flash.c: 549: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 32398                           
 32399                           ;incstack = 0
 32400  01866C  0E00               	movlw	0
 32401  01866E  ECBD  F098         	call	_spi_set_configuration
 32402                           
 32403                           ;flash.c: 551: _flash_buffer_read(start, length, data, FLASH_BUFFER_2);
 32404  018672  C07E  F073         	movff	flash_read_from_buffer@start,__flash_buffer_read@start
 32405  018676  C07F  F074         	movff	flash_read_from_buffer@start+1,__flash_buffer_read@start+1
 32406  01867A  C080  F075         	movff	flash_read_from_buffer@length,__flash_buffer_read@length
 32407  01867E  C081  F076         	movff	flash_read_from_buffer@length+1,__flash_buffer_read@length+1
 32408  018682  C082  F077         	movff	flash_read_from_buffer@data,__flash_buffer_read@data
 32409  018686  C083  F078         	movff	flash_read_from_buffer@data+1,__flash_buffer_read@data+1
 32410  01868A  0E01               	movlw	1
 32411  01868C  0100               	movlb	0	; () banked
 32412  01868E  6F79               	movwf	__flash_buffer_read@buffer& (0+255),b
 32413  018690  ECC1  F0BE         	call	__flash_buffer_read	;wreg free
 32414                           
 32415                           ;flash.c: 554: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 32416  018694  0E01               	movlw	1
 32417  018696  ECBD  F098         	call	_spi_set_configuration
 32418  01869A  0012               	return		;funcret
 32419  01869C                     __end_of_flash_read_from_buffer:
 32420                           	opt stack 0
 32421                           tosu	equ	0xFFF
 32422                           tosh	equ	0xFFE
 32423                           tosl	equ	0xFFD
 32424                           pclath	equ	0xFFA
 32425                           tblptru	equ	0xFF8
 32426                           tblptrh	equ	0xFF7
 32427                           tblptrl	equ	0xFF6
 32428                           tablat	equ	0xFF5
 32429                           prodh	equ	0xFF4
 32430                           prodl	equ	0xFF3
 32431                           intcon	equ	0xFF2
 32432                           intcon2	equ	0xFF1
 32433                           intcon3	equ	0xFF0
 32434                           postinc0	equ	0xFEE
 32435                           wreg	equ	0xFE8
 32436                           indf1	equ	0xFE7
 32437                           postdec1	equ	0xFE5
 32438                           plusw1	equ	0xFE3
 32439                           fsr1h	equ	0xFE2
 32440                           fsr1l	equ	0xFE1
 32441                           indf2	equ	0xFDF
 32442                           postinc2	equ	0xFDE
 32443                           postdec2	equ	0xFDD
 32444                           plusw2	equ	0xFDB
 32445                           fsr2h	equ	0xFDA
 32446                           fsr2l	equ	0xFD9
 32447                           status	equ	0xFD8
 32448                           
 32449 ;; *************** function __flash_buffer_read *****************
 32450 ;; Defined at:
 32451 ;;		line 332 in file "flash.c"
 32452 ;; Parameters:    Size  Location     Type
 32453 ;;  start           2   19[BANK0 ] unsigned int 
 32454 ;;  length          2   21[BANK0 ] unsigned int 
 32455 ;;  data            2   23[BANK0 ] PTR unsigned char 
 32456 ;;		 -> ToSendDataBuffer(64), 
 32457 ;;  buffer          1   25[BANK0 ] enum E7021
 32458 ;; Auto vars:     Size  Location     Type
 32459 ;;  command         4   26[BANK0 ] unsigned char [4]
 32460 ;; Return value:  Size  Location     Type
 32461 ;;                  1    wreg      void 
 32462 ;; Registers used:
 32463 ;;		wreg, status,2, status,0, cstack
 32464 ;; Tracked objects:
 32465 ;;		On entry : 0/0
 32466 ;;		On exit  : 0/0
 32467 ;;		Unchanged: 0/0
 32468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32469 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32470 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32472 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32473 ;;Total ram usage:       11 bytes
 32474 ;; Hardware stack levels used:    1
 32475 ;; Hardware stack levels required when called:   13
 32476 ;; This function calls:
 32477 ;;		__flash_is_busy
 32478 ;;		_spi_tx_rx
 32479 ;; This function is called by:
 32480 ;;		_flash_read_from_buffer
 32481 ;; This function uses a non-reentrant model
 32482 ;;
 32483                           
 32484                           	psect	text133
 32485  017D82                     __ptext133:
 32486                           	opt stack 0
 32487  017D82                     __flash_buffer_read:
 32488                           	opt stack 12
 32489                           
 32490                           ;flash.c: 334: uint8_t command[4];;flash.c: 337: while(_flash_is_busy());
 32491                           
 32492                           ;incstack = 0
 32493  017D82  EC4F  F0C6         	call	__flash_is_busy	;wreg free
 32494  017D86  0900               	iorlw	0
 32495  017D88  A4D8               	btfss	status,2,c
 32496  017D8A  D7FB               	goto	__flash_buffer_read
 32497                           
 32498                           ;flash.c: 340: if(buffer==FLASH_BUFFER_1)
 32499  017D8C  0100               	movlb	0	; () banked
 32500  017D8E  5179               	movf	__flash_buffer_read@buffer& (0+255),w,b
 32501  017D90  A4D8               	btfss	status,2,c
 32502  017D92  D002               	goto	l2630
 32503                           
 32504                           ; BSR set to: 0
 32505                           ;flash.c: 341: command[0] = 0xD1;
 32506  017D94  0ED1               	movlw	209
 32507  017D96  6F7A               	movwf	__flash_buffer_read@command& (0+255),b
 32508  017D98                     l2630:
 32509                           
 32510                           ; BSR set to: 0
 32511                           ;flash.c: 342: if(buffer==FLASH_BUFFER_2)
 32512                           
 32513                           ; BSR set to: 0
 32514  017D98  0579               	decf	__flash_buffer_read@buffer& (0+255),w,b
 32515  017D9A  A4D8               	btfss	status,2,c
 32516  017D9C  D002               	goto	l2631
 32517                           
 32518                           ; BSR set to: 0
 32519                           ;flash.c: 343: command[0] = 0xD3;
 32520  017D9E  0ED3               	movlw	211
 32521  017DA0  6F7A               	movwf	__flash_buffer_read@command& (0+255),b
 32522  017DA2                     l2631:
 32523                           
 32524                           ; BSR set to: 0
 32525                           ;flash.c: 344: command[1] = 0x00;
 32526  017DA2  0E00               	movlw	0
 32527  017DA4  6F7B               	movwf	(__flash_buffer_read@command+1)& (0+255),b
 32528                           
 32529                           ;flash.c: 345: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 32530  017DA6  5174               	movf	(__flash_buffer_read@start+1)& (0+255),w,b
 32531  017DA8  6F7C               	movwf	(__flash_buffer_read@command+2)& (0+255),b
 32532                           
 32533                           ; BSR set to: 0
 32534                           ;flash.c: 346: command[3] = ((unsigned char)((start)&0xFF));
 32535  017DAA  C073  F07D         	movff	__flash_buffer_read@start,__flash_buffer_read@command+3
 32536                           
 32537                           ; BSR set to: 0
 32538                           ;flash.c: 349: spi_tx_rx(command, 4, data, length);
 32539  017DAE  0E7A               	movlw	low __flash_buffer_read@command
 32540  017DB0  6F60               	movwf	spi_tx_rx@command& (0+255),b
 32541  017DB2  0E00               	movlw	high __flash_buffer_read@command
 32542  017DB4  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 32543  017DB6  0E00               	movlw	0
 32544  017DB8  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 32545  017DBA  0E04               	movlw	4
 32546  017DBC  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 32547  017DBE  C077  F064         	movff	__flash_buffer_read@data,spi_tx_rx@data
 32548  017DC2  C078  F065         	movff	__flash_buffer_read@data+1,spi_tx_rx@data+1
 32549  017DC6  C075  F066         	movff	__flash_buffer_read@length,spi_tx_rx@data_length
 32550  017DCA  C076  F067         	movff	__flash_buffer_read@length+1,spi_tx_rx@data_length+1
 32551  017DCE  EC0D  F0B1         	call	_spi_tx_rx	;wreg free
 32552  017DD2  0012               	return		;funcret
 32553  017DD4                     __end_of__flash_buffer_read:
 32554                           	opt stack 0
 32555                           tosu	equ	0xFFF
 32556                           tosh	equ	0xFFE
 32557                           tosl	equ	0xFFD
 32558                           pclath	equ	0xFFA
 32559                           tblptru	equ	0xFF8
 32560                           tblptrh	equ	0xFF7
 32561                           tblptrl	equ	0xFF6
 32562                           tablat	equ	0xFF5
 32563                           prodh	equ	0xFF4
 32564                           prodl	equ	0xFF3
 32565                           intcon	equ	0xFF2
 32566                           intcon2	equ	0xFF1
 32567                           intcon3	equ	0xFF0
 32568                           postinc0	equ	0xFEE
 32569                           wreg	equ	0xFE8
 32570                           indf1	equ	0xFE7
 32571                           postdec1	equ	0xFE5
 32572                           plusw1	equ	0xFE3
 32573                           fsr1h	equ	0xFE2
 32574                           fsr1l	equ	0xFE1
 32575                           indf2	equ	0xFDF
 32576                           postinc2	equ	0xFDE
 32577                           postdec2	equ	0xFDD
 32578                           plusw2	equ	0xFDB
 32579                           fsr2h	equ	0xFDA
 32580                           fsr2l	equ	0xFD9
 32581                           status	equ	0xFD8
 32582                           
 32583 ;; *************** function __fill_buffer_get_status *****************
 32584 ;; Defined at:
 32585 ;;		line 231 in file "api.c"
 32586 ;; Parameters:    Size  Location     Type
 32587 ;;  outBuffer       2    1[BANK0 ] PTR unsigned char 
 32588 ;;		 -> ToSendDataBuffer(64), 
 32589 ;; Auto vars:     Size  Location     Type
 32590 ;;		None
 32591 ;; Return value:  Size  Location     Type
 32592 ;;                  1    wreg      void 
 32593 ;; Registers used:
 32594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32595 ;; Tracked objects:
 32596 ;;		On entry : 0/0
 32597 ;;		On exit  : 0/0
 32598 ;;		Unchanged: 0/0
 32599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32600 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32602 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32603 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32604 ;;Total ram usage:        6 bytes
 32605 ;; Hardware stack levels used:    1
 32606 ;; Hardware stack levels required when called:   11
 32607 ;; This function calls:
 32608 ;;		_buck_get_dutycycle
 32609 ;;		_buck_get_mode
 32610 ;;		_buck_remote_get_dutycycle
 32611 ;;		_buck_remote_get_status
 32612 ;;		_rtcc_get_day
 32613 ;;		_rtcc_get_hours
 32614 ;;		_rtcc_get_minutes
 32615 ;;		_rtcc_get_month
 32616 ;;		_rtcc_get_seconds
 32617 ;;		_rtcc_get_year
 32618 ;;		_ui_get_status
 32619 ;; This function is called by:
 32620 ;;		_api_prepare
 32621 ;; This function uses a non-reentrant model
 32622 ;;
 32623                           
 32624                           	psect	text134
 32625  00CF44                     __ptext134:
 32626                           	opt stack 0
 32627  00CF44                     __fill_buffer_get_status:
 32628                           	opt stack 17
 32629                           
 32630                           ;api.c: 234: outBuffer[0] = DATAREQUEST_GET_STATUS;
 32631                           
 32632                           ;incstack = 0
 32633  00CF44  C061  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 32634  00CF48  C062  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 32635  00CF4C  0E10               	movlw	16
 32636  00CF4E  6EDF               	movwf	indf2,c
 32637                           
 32638                           ;api.c: 236: outBuffer[1] = (uint8_t) os.input_voltage;
 32639  00CF50  0100               	movlb	0	; () banked
 32640  00CF52  EE20 F001          	lfsr	2,1
 32641  00CF56  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32642  00CF58  26D9               	addwf	fsr2l,f,c
 32643  00CF5A  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32644  00CF5C  22DA               	addwfc	fsr2h,f,c
 32645  00CF5E  C212  FFDF         	movff	_os+18,indf2	;volatile
 32646                           
 32647                           ; BSR set to: 0
 32648                           ;api.c: 237: outBuffer[2] = os.input_voltage >> 8;
 32649  00CF62  EE20 F002          	lfsr	2,2
 32650  00CF66  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32651  00CF68  26D9               	addwf	fsr2l,f,c
 32652  00CF6A  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32653  00CF6C  22DA               	addwfc	fsr2h,f,c
 32654  00CF6E  0102               	movlb	2	; () banked
 32655  00CF70  5113               	movf	(_os+19)& (0+255),w,b	;volatile
 32656  00CF72  6EDF               	movwf	indf2,c
 32657                           
 32658                           ; BSR set to: 2
 32659                           ;api.c: 239: outBuffer[3] = (uint8_t) os.output_voltage;
 32660  00CF74  0100               	movlb	0	; () banked
 32661  00CF76  EE20 F003          	lfsr	2,3
 32662  00CF7A  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32663  00CF7C  26D9               	addwf	fsr2l,f,c
 32664  00CF7E  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32665  00CF80  22DA               	addwfc	fsr2h,f,c
 32666  00CF82  C227  FFDF         	movff	_os+39,indf2	;volatile
 32667                           
 32668                           ; BSR set to: 0
 32669                           ;api.c: 240: outBuffer[4] = os.output_voltage >> 8;
 32670  00CF86  EE20 F004          	lfsr	2,4
 32671  00CF8A  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32672  00CF8C  26D9               	addwf	fsr2l,f,c
 32673  00CF8E  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32674  00CF90  22DA               	addwfc	fsr2h,f,c
 32675  00CF92  0102               	movlb	2	; () banked
 32676  00CF94  5128               	movf	(_os+40)& (0+255),w,b	;volatile
 32677  00CF96  6EDF               	movwf	indf2,c
 32678                           
 32679                           ; BSR set to: 2
 32680                           ;api.c: 242: outBuffer[5] = (uint8_t) os.input_current;
 32681  00CF98  0100               	movlb	0	; () banked
 32682  00CF9A  EE20 F005          	lfsr	2,5
 32683  00CF9E  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32684  00CFA0  26D9               	addwf	fsr2l,f,c
 32685  00CFA2  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32686  00CFA4  22DA               	addwfc	fsr2h,f,c
 32687  00CFA6  C21D  FFDF         	movff	_os+29,indf2	;volatile
 32688                           
 32689                           ; BSR set to: 0
 32690                           ;api.c: 243: outBuffer[6] = os.input_current >> 8;
 32691  00CFAA  EE20 F006          	lfsr	2,6
 32692  00CFAE  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32693  00CFB0  26D9               	addwf	fsr2l,f,c
 32694  00CFB2  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32695  00CFB4  22DA               	addwfc	fsr2h,f,c
 32696  00CFB6  0102               	movlb	2	; () banked
 32697  00CFB8  511E               	movf	(_os+30)& (0+255),w,b	;volatile
 32698  00CFBA  6EDF               	movwf	indf2,c
 32699                           
 32700                           ; BSR set to: 2
 32701                           ;api.c: 245: outBuffer[7] = (uint8_t) os.output_current;
 32702  00CFBC  0100               	movlb	0	; () banked
 32703  00CFBE  EE20 F007          	lfsr	2,7
 32704  00CFC2  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32705  00CFC4  26D9               	addwf	fsr2l,f,c
 32706  00CFC6  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32707  00CFC8  22DA               	addwfc	fsr2h,f,c
 32708  00CFCA  C232  FFDF         	movff	_os+50,indf2	;volatile
 32709                           
 32710                           ; BSR set to: 0
 32711                           ;api.c: 246: outBuffer[8] = os.output_current >> 8;
 32712  00CFCE  EE20 F008          	lfsr	2,8
 32713  00CFD2  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32714  00CFD4  26D9               	addwf	fsr2l,f,c
 32715  00CFD6  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32716  00CFD8  22DA               	addwfc	fsr2h,f,c
 32717  00CFDA  0102               	movlb	2	; () banked
 32718  00CFDC  5133               	movf	(_os+51)& (0+255),w,b	;volatile
 32719  00CFDE  6EDF               	movwf	indf2,c
 32720                           
 32721                           ; BSR set to: 2
 32722                           ;api.c: 248: outBuffer[9] = (uint8_t) os.temperature_onboard;
 32723  00CFE0  0100               	movlb	0	; () banked
 32724  00CFE2  EE20 F009          	lfsr	2,9
 32725  00CFE6  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32726  00CFE8  26D9               	addwf	fsr2l,f,c
 32727  00CFEA  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32728  00CFEC  22DA               	addwfc	fsr2h,f,c
 32729  00CFEE  C236  FFDF         	movff	_os+54,indf2	;volatile
 32730                           
 32731                           ; BSR set to: 0
 32732                           ;api.c: 249: outBuffer[10] = os.temperature_onboard >> 8;
 32733  00CFF2  EE20 F00A          	lfsr	2,10
 32734  00CFF6  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32735  00CFF8  26D9               	addwf	fsr2l,f,c
 32736  00CFFA  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32737  00CFFC  22DA               	addwfc	fsr2h,f,c
 32738  00CFFE  0102               	movlb	2	; () banked
 32739  00D000  5137               	movf	(_os+55)& (0+255),w,b	;volatile
 32740  00D002  6EDF               	movwf	indf2,c
 32741                           
 32742                           ; BSR set to: 2
 32743                           ;api.c: 251: outBuffer[11] = (uint8_t) os.temperature_external_1;
 32744  00D004  0100               	movlb	0	; () banked
 32745  00D006  EE20 F00B          	lfsr	2,11
 32746  00D00A  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32747  00D00C  26D9               	addwf	fsr2l,f,c
 32748  00D00E  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32749  00D010  22DA               	addwfc	fsr2h,f,c
 32750  00D012  C23A  FFDF         	movff	_os+58,indf2	;volatile
 32751                           
 32752                           ; BSR set to: 0
 32753                           ;api.c: 252: outBuffer[12] = os.temperature_external_1 >> 8;
 32754  00D016  EE20 F00C          	lfsr	2,12
 32755  00D01A  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32756  00D01C  26D9               	addwf	fsr2l,f,c
 32757  00D01E  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32758  00D020  22DA               	addwfc	fsr2h,f,c
 32759  00D022  0102               	movlb	2	; () banked
 32760  00D024  513B               	movf	(_os+59)& (0+255),w,b	;volatile
 32761  00D026  6EDF               	movwf	indf2,c
 32762                           
 32763                           ; BSR set to: 2
 32764                           ;api.c: 254: outBuffer[13] = (uint8_t) os.temperature_external_2;
 32765  00D028  0100               	movlb	0	; () banked
 32766  00D02A  EE20 F00D          	lfsr	2,13
 32767  00D02E  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32768  00D030  26D9               	addwf	fsr2l,f,c
 32769  00D032  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32770  00D034  22DA               	addwfc	fsr2h,f,c
 32771  00D036  C23E  FFDF         	movff	_os+62,indf2	;volatile
 32772                           
 32773                           ; BSR set to: 0
 32774                           ;api.c: 255: outBuffer[14] = os.temperature_external_2 >> 8;
 32775  00D03A  EE20 F00E          	lfsr	2,14
 32776  00D03E  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32777  00D040  26D9               	addwf	fsr2l,f,c
 32778  00D042  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32779  00D044  22DA               	addwfc	fsr2h,f,c
 32780  00D046  0102               	movlb	2	; () banked
 32781  00D048  513F               	movf	(_os+63)& (0+255),w,b	;volatile
 32782  00D04A  6EDF               	movwf	indf2,c
 32783                           
 32784                           ; BSR set to: 2
 32785                           ;api.c: 257: outBuffer[15] = os.outputs;
 32786  00D04C  0100               	movlb	0	; () banked
 32787  00D04E  EE20 F00F          	lfsr	2,15
 32788  00D052  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32789  00D054  26D9               	addwf	fsr2l,f,c
 32790  00D056  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32791  00D058  22DA               	addwfc	fsr2h,f,c
 32792  00D05A  C205  FFDF         	movff	_os+5,indf2	;volatile
 32793                           
 32794                           ; BSR set to: 0
 32795                           ;api.c: 259: outBuffer[16] = os.display_mode;
 32796  00D05E  EE20 F010          	lfsr	2,16
 32797  00D062  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32798  00D064  26D9               	addwf	fsr2l,f,c
 32799  00D066  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32800  00D068  22DA               	addwfc	fsr2h,f,c
 32801  00D06A  C240  FFDF         	movff	_os+64,indf2	;volatile
 32802                           
 32803                           ; BSR set to: 0
 32804                           ;api.c: 261: outBuffer[17] = rtcc_get_year();
 32805  00D06E  EE20 F011          	lfsr	2,17
 32806  00D072  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32807  00D074  26D9               	addwf	fsr2l,f,c
 32808  00D076  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32809  00D078  22DA               	addwfc	fsr2h,f,c
 32810  00D07A  EC37  F0C8         	call	_rtcc_get_year	;wreg free
 32811  00D07E  6EDF               	movwf	indf2,c
 32812                           
 32813                           ;api.c: 262: outBuffer[18] = rtcc_get_month();
 32814  00D080  0100               	movlb	0	; () banked
 32815  00D082  EE20 F012          	lfsr	2,18
 32816  00D086  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32817  00D088  26D9               	addwf	fsr2l,f,c
 32818  00D08A  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32819  00D08C  22DA               	addwfc	fsr2h,f,c
 32820  00D08E  EC3E  F0C8         	call	_rtcc_get_month	;wreg free
 32821  00D092  6EDF               	movwf	indf2,c
 32822                           
 32823                           ;api.c: 263: outBuffer[19] = rtcc_get_day();
 32824  00D094  0100               	movlb	0	; () banked
 32825  00D096  EE20 F013          	lfsr	2,19
 32826  00D09A  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32827  00D09C  26D9               	addwf	fsr2l,f,c
 32828  00D09E  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32829  00D0A0  22DA               	addwfc	fsr2h,f,c
 32830  00D0A2  EC45  F0C8         	call	_rtcc_get_day	;wreg free
 32831  00D0A6  6EDF               	movwf	indf2,c
 32832                           
 32833                           ;api.c: 264: outBuffer[20] = rtcc_get_hours();
 32834  00D0A8  0100               	movlb	0	; () banked
 32835  00D0AA  EE20 F014          	lfsr	2,20
 32836  00D0AE  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32837  00D0B0  26D9               	addwf	fsr2l,f,c
 32838  00D0B2  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32839  00D0B4  22DA               	addwfc	fsr2h,f,c
 32840  00D0B6  EC30  F0C8         	call	_rtcc_get_hours	;wreg free
 32841  00D0BA  6EDF               	movwf	indf2,c
 32842                           
 32843                           ;api.c: 265: outBuffer[21] = rtcc_get_minutes();
 32844  00D0BC  0100               	movlb	0	; () banked
 32845  00D0BE  EE20 F015          	lfsr	2,21
 32846  00D0C2  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32847  00D0C4  26D9               	addwf	fsr2l,f,c
 32848  00D0C6  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32849  00D0C8  22DA               	addwfc	fsr2h,f,c
 32850  00D0CA  EC29  F0C8         	call	_rtcc_get_minutes	;wreg free
 32851  00D0CE  6EDF               	movwf	indf2,c
 32852                           
 32853                           ;api.c: 266: outBuffer[22] = rtcc_get_seconds();
 32854  00D0D0  0100               	movlb	0	; () banked
 32855  00D0D2  EE20 F016          	lfsr	2,22
 32856  00D0D6  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32857  00D0D8  26D9               	addwf	fsr2l,f,c
 32858  00D0DA  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32859  00D0DC  22DA               	addwfc	fsr2h,f,c
 32860  00D0DE  EC22  F0C8         	call	_rtcc_get_seconds	;wreg free
 32861  00D0E2  6EDF               	movwf	indf2,c
 32862                           
 32863                           ;api.c: 268: outBuffer[23] = buck_get_mode();
 32864  00D0E4  0100               	movlb	0	; () banked
 32865  00D0E6  EE20 F017          	lfsr	2,23
 32866  00D0EA  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32867  00D0EC  26D9               	addwf	fsr2l,f,c
 32868  00D0EE  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32869  00D0F0  22DA               	addwfc	fsr2h,f,c
 32870  00D0F2  EC8C  F0C8         	call	_buck_get_mode	;wreg free
 32871  00D0F6  6EDF               	movwf	indf2,c
 32872                           
 32873                           ;api.c: 269: outBuffer[24] = buck_get_dutycycle();
 32874  00D0F8  0100               	movlb	0	; () banked
 32875  00D0FA  EE20 F018          	lfsr	2,24
 32876  00D0FE  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32877  00D100  26D9               	addwf	fsr2l,f,c
 32878  00D102  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32879  00D104  22DA               	addwfc	fsr2h,f,c
 32880  00D106  EC85  F0C8         	call	_buck_get_dutycycle	;wreg free
 32881  00D10A  6EDF               	movwf	indf2,c
 32882                           
 32883                           ;api.c: 270: outBuffer[25] = buck_remote_get_status();
 32884  00D10C  0100               	movlb	0	; () banked
 32885  00D10E  EE20 F019          	lfsr	2,25
 32886  00D112  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32887  00D114  26D9               	addwf	fsr2l,f,c
 32888  00D116  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32889  00D118  22DA               	addwfc	fsr2h,f,c
 32890  00D11A  ECF3  F0C3         	call	_buck_remote_get_status	;wreg free
 32891  00D11E  6EDF               	movwf	indf2,c
 32892                           
 32893                           ;api.c: 271: outBuffer[26] = buck_remote_get_dutycycle();
 32894  00D120  0100               	movlb	0	; () banked
 32895  00D122  EE20 F01A          	lfsr	2,26
 32896  00D126  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32897  00D128  26D9               	addwf	fsr2l,f,c
 32898  00D12A  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32899  00D12C  22DA               	addwfc	fsr2h,f,c
 32900  00D12E  EC8A  F0C8         	call	_buck_remote_get_dutycycle	;wreg free
 32901  00D132  6EDF               	movwf	indf2,c
 32902                           
 32903                           ;api.c: 273: outBuffer[27] = (uint8_t) os.temperature_onboard_adc;
 32904  00D134  0100               	movlb	0	; () banked
 32905  00D136  EE20 F01B          	lfsr	2,27
 32906  00D13A  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32907  00D13C  26D9               	addwf	fsr2l,f,c
 32908  00D13E  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32909  00D140  22DA               	addwfc	fsr2h,f,c
 32910  00D142  C234  FFDF         	movff	_os+52,indf2	;volatile
 32911                           
 32912                           ; BSR set to: 0
 32913                           ;api.c: 274: outBuffer[28] = os.temperature_onboard_adc >> 8;
 32914  00D146  EE20 F01C          	lfsr	2,28
 32915  00D14A  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32916  00D14C  26D9               	addwf	fsr2l,f,c
 32917  00D14E  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32918  00D150  22DA               	addwfc	fsr2h,f,c
 32919  00D152  0102               	movlb	2	; () banked
 32920  00D154  5135               	movf	(_os+53)& (0+255),w,b	;volatile
 32921  00D156  6EDF               	movwf	indf2,c
 32922                           
 32923                           ; BSR set to: 2
 32924                           ;api.c: 275: outBuffer[29] = (uint8_t) os.temperature_external_1_adc;
 32925  00D158  0100               	movlb	0	; () banked
 32926  00D15A  EE20 F01D          	lfsr	2,29
 32927  00D15E  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32928  00D160  26D9               	addwf	fsr2l,f,c
 32929  00D162  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32930  00D164  22DA               	addwfc	fsr2h,f,c
 32931  00D166  C238  FFDF         	movff	_os+56,indf2	;volatile
 32932                           
 32933                           ; BSR set to: 0
 32934                           ;api.c: 276: outBuffer[30] = os.temperature_external_1_adc >> 8;
 32935  00D16A  EE20 F01E          	lfsr	2,30
 32936  00D16E  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32937  00D170  26D9               	addwf	fsr2l,f,c
 32938  00D172  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32939  00D174  22DA               	addwfc	fsr2h,f,c
 32940  00D176  0102               	movlb	2	; () banked
 32941  00D178  5139               	movf	(_os+57)& (0+255),w,b	;volatile
 32942  00D17A  6EDF               	movwf	indf2,c
 32943                           
 32944                           ; BSR set to: 2
 32945                           ;api.c: 277: outBuffer[31] = (uint8_t) os.temperature_external_2_adc;
 32946  00D17C  0100               	movlb	0	; () banked
 32947  00D17E  EE20 F01F          	lfsr	2,31
 32948  00D182  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32949  00D184  26D9               	addwf	fsr2l,f,c
 32950  00D186  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32951  00D188  22DA               	addwfc	fsr2h,f,c
 32952  00D18A  C23C  FFDF         	movff	_os+60,indf2	;volatile
 32953                           
 32954                           ; BSR set to: 0
 32955                           ;api.c: 278: outBuffer[32] = os.temperature_external_2_adc >> 8;
 32956  00D18E  EE20 F020          	lfsr	2,32
 32957  00D192  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32958  00D194  26D9               	addwf	fsr2l,f,c
 32959  00D196  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32960  00D198  22DA               	addwfc	fsr2h,f,c
 32961  00D19A  0102               	movlb	2	; () banked
 32962  00D19C  513D               	movf	(_os+61)& (0+255),w,b	;volatile
 32963  00D19E  6EDF               	movwf	indf2,c
 32964                           
 32965                           ; BSR set to: 2
 32966                           ;api.c: 279: outBuffer[33] = (uint8_t) os.input_voltage_adc[(os.timeSlot&0b00110000)>>4]
      +                          ;
 32967  00D1A0  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 32968  00D1A2  0B0F               	andlw	15
 32969  00D1A4  0B03               	andlw	3
 32970  00D1A6  0100               	movlb	0	; () banked
 32971  00D1A8  6F63               	movwf	??__fill_buffer_get_status& (0+255),b
 32972  00D1AA  6B64               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 32973  00D1AC  90D8               	bcf	status,0,c
 32974  00D1AE  3763               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 32975  00D1B0  3764               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 32976  00D1B2  0E0A               	movlw	low (_os+10)
 32977  00D1B4  2563               	addwf	??__fill_buffer_get_status& (0+255),w,b
 32978  00D1B6  6ED9               	movwf	fsr2l,c
 32979  00D1B8  0E02               	movlw	high (_os+10)
 32980  00D1BA  2164               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 32981  00D1BC  6EDA               	movwf	fsr2h,c
 32982  00D1BE  EE10 F021          	lfsr	1,33
 32983  00D1C2  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32984  00D1C4  26E1               	addwf	fsr1l,f,c
 32985  00D1C6  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32986  00D1C8  22E2               	addwfc	fsr1h,f,c
 32987  00D1CA  CFDF FFE7          	movff	indf2,indf1
 32988                           
 32989                           ; BSR set to: 0
 32990                           ;api.c: 280: outBuffer[34] = os.input_voltage_adc[(os.timeSlot&0b00110000)>>4] >> 8;
 32991  00D1CE  EE20 F022          	lfsr	2,34
 32992  00D1D2  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 32993  00D1D4  26D9               	addwf	fsr2l,f,c
 32994  00D1D6  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 32995  00D1D8  22DA               	addwfc	fsr2h,f,c
 32996  00D1DA  0102               	movlb	2	; () banked
 32997  00D1DC  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 32998  00D1DE  0B0F               	andlw	15
 32999  00D1E0  0B03               	andlw	3
 33000  00D1E2  0100               	movlb	0	; () banked
 33001  00D1E4  6F63               	movwf	??__fill_buffer_get_status& (0+255),b
 33002  00D1E6  6B64               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 33003  00D1E8  90D8               	bcf	status,0,c
 33004  00D1EA  3763               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 33005  00D1EC  3764               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 33006  00D1EE  0E0A               	movlw	low (_os+10)
 33007  00D1F0  2563               	addwf	??__fill_buffer_get_status& (0+255),w,b
 33008  00D1F2  6EE1               	movwf	fsr1l,c
 33009  00D1F4  0E02               	movlw	high (_os+10)
 33010  00D1F6  2164               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 33011  00D1F8  6EE2               	movwf	fsr1h,c
 33012  00D1FA  CFE6 F065          	movff	postinc1,??__fill_buffer_get_status+2
 33013  00D1FE  CFE5 F066          	movff	postdec1,??__fill_buffer_get_status+3
 33014  00D202  C066  F065         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 33015  00D206  6B66               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 33016  00D208  BF65               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 33017  00D20A  6966               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 33018  00D20C  5165               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 33019  00D20E  6EDF               	movwf	indf2,c
 33020                           
 33021                           ; BSR set to: 0
 33022                           ;api.c: 281: outBuffer[35] = (uint8_t) os.output_voltage_adc[(os.timeSlot&0b00110000)>>4
      +                          ];
 33023  00D210  0102               	movlb	2	; () banked
 33024  00D212  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 33025  00D214  0B0F               	andlw	15
 33026  00D216  0B03               	andlw	3
 33027  00D218  0100               	movlb	0	; () banked
 33028  00D21A  6F63               	movwf	??__fill_buffer_get_status& (0+255),b
 33029  00D21C  6B64               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 33030  00D21E  90D8               	bcf	status,0,c
 33031  00D220  3763               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 33032  00D222  3764               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 33033  00D224  0E1F               	movlw	low (_os+31)
 33034  00D226  2563               	addwf	??__fill_buffer_get_status& (0+255),w,b
 33035  00D228  6ED9               	movwf	fsr2l,c
 33036  00D22A  0E02               	movlw	high (_os+31)
 33037  00D22C  2164               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 33038  00D22E  6EDA               	movwf	fsr2h,c
 33039  00D230  EE10 F023          	lfsr	1,35
 33040  00D234  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 33041  00D236  26E1               	addwf	fsr1l,f,c
 33042  00D238  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 33043  00D23A  22E2               	addwfc	fsr1h,f,c
 33044  00D23C  CFDF FFE7          	movff	indf2,indf1
 33045                           
 33046                           ; BSR set to: 0
 33047                           ;api.c: 282: outBuffer[36] = os.output_voltage_adc[(os.timeSlot&0b00110000)>>4] >> 8;
 33048  00D240  EE20 F024          	lfsr	2,36
 33049  00D244  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 33050  00D246  26D9               	addwf	fsr2l,f,c
 33051  00D248  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 33052  00D24A  22DA               	addwfc	fsr2h,f,c
 33053  00D24C  0102               	movlb	2	; () banked
 33054  00D24E  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 33055  00D250  0B0F               	andlw	15
 33056  00D252  0B03               	andlw	3
 33057  00D254  0100               	movlb	0	; () banked
 33058  00D256  6F63               	movwf	??__fill_buffer_get_status& (0+255),b
 33059  00D258  6B64               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 33060  00D25A  90D8               	bcf	status,0,c
 33061  00D25C  3763               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 33062  00D25E  3764               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 33063  00D260  0E1F               	movlw	low (_os+31)
 33064  00D262  2563               	addwf	??__fill_buffer_get_status& (0+255),w,b
 33065  00D264  6EE1               	movwf	fsr1l,c
 33066  00D266  0E02               	movlw	high (_os+31)
 33067  00D268  2164               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 33068  00D26A  6EE2               	movwf	fsr1h,c
 33069  00D26C  CFE6 F065          	movff	postinc1,??__fill_buffer_get_status+2
 33070  00D270  CFE5 F066          	movff	postdec1,??__fill_buffer_get_status+3
 33071  00D274  C066  F065         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 33072  00D278  6B66               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 33073  00D27A  BF65               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 33074  00D27C  6966               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 33075  00D27E  5165               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 33076  00D280  6EDF               	movwf	indf2,c
 33077                           
 33078                           ; BSR set to: 0
 33079                           ;api.c: 283: outBuffer[37] = (uint8_t) os.input_current_adc[(os.timeSlot&0b00110000) >>4
      +                          ];
 33080  00D282  0102               	movlb	2	; () banked
 33081  00D284  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 33082  00D286  0B0F               	andlw	15
 33083  00D288  0B03               	andlw	3
 33084  00D28A  0100               	movlb	0	; () banked
 33085  00D28C  6F63               	movwf	??__fill_buffer_get_status& (0+255),b
 33086  00D28E  6B64               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 33087  00D290  90D8               	bcf	status,0,c
 33088  00D292  3763               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 33089  00D294  3764               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 33090  00D296  0E14               	movlw	low (_os+20)
 33091  00D298  2563               	addwf	??__fill_buffer_get_status& (0+255),w,b
 33092  00D29A  6ED9               	movwf	fsr2l,c
 33093  00D29C  0E02               	movlw	high (_os+20)
 33094  00D29E  2164               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 33095  00D2A0  6EDA               	movwf	fsr2h,c
 33096  00D2A2  EE10 F025          	lfsr	1,37
 33097  00D2A6  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 33098  00D2A8  26E1               	addwf	fsr1l,f,c
 33099  00D2AA  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 33100  00D2AC  22E2               	addwfc	fsr1h,f,c
 33101  00D2AE  CFDF FFE7          	movff	indf2,indf1
 33102                           
 33103                           ; BSR set to: 0
 33104                           ;api.c: 284: outBuffer[38] = os.input_current_adc[(os.timeSlot&0b00110000)>>4] >> 8;
 33105  00D2B2  EE20 F026          	lfsr	2,38
 33106  00D2B6  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 33107  00D2B8  26D9               	addwf	fsr2l,f,c
 33108  00D2BA  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 33109  00D2BC  22DA               	addwfc	fsr2h,f,c
 33110  00D2BE  0102               	movlb	2	; () banked
 33111  00D2C0  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 33112  00D2C2  0B0F               	andlw	15
 33113  00D2C4  0B03               	andlw	3
 33114  00D2C6  0100               	movlb	0	; () banked
 33115  00D2C8  6F63               	movwf	??__fill_buffer_get_status& (0+255),b
 33116  00D2CA  6B64               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 33117  00D2CC  90D8               	bcf	status,0,c
 33118  00D2CE  3763               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 33119  00D2D0  3764               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 33120  00D2D2  0E14               	movlw	low (_os+20)
 33121  00D2D4  2563               	addwf	??__fill_buffer_get_status& (0+255),w,b
 33122  00D2D6  6EE1               	movwf	fsr1l,c
 33123  00D2D8  0E02               	movlw	high (_os+20)
 33124  00D2DA  2164               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 33125  00D2DC  6EE2               	movwf	fsr1h,c
 33126  00D2DE  CFE6 F065          	movff	postinc1,??__fill_buffer_get_status+2
 33127  00D2E2  CFE5 F066          	movff	postdec1,??__fill_buffer_get_status+3
 33128  00D2E6  C066  F065         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 33129  00D2EA  6B66               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 33130  00D2EC  BF65               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 33131  00D2EE  6966               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 33132  00D2F0  5165               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 33133  00D2F2  6EDF               	movwf	indf2,c
 33134                           
 33135                           ; BSR set to: 0
 33136                           ;api.c: 285: outBuffer[39] = (uint8_t) os.output_current_adc[(os.timeSlot&0b00110000)>>4
      +                          ];
 33137  00D2F4  0102               	movlb	2	; () banked
 33138  00D2F6  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 33139  00D2F8  0B0F               	andlw	15
 33140  00D2FA  0B03               	andlw	3
 33141  00D2FC  0100               	movlb	0	; () banked
 33142  00D2FE  6F63               	movwf	??__fill_buffer_get_status& (0+255),b
 33143  00D300  6B64               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 33144  00D302  90D8               	bcf	status,0,c
 33145  00D304  3763               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 33146  00D306  3764               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 33147  00D308  0E29               	movlw	low (_os+41)
 33148  00D30A  2563               	addwf	??__fill_buffer_get_status& (0+255),w,b
 33149  00D30C  6ED9               	movwf	fsr2l,c
 33150  00D30E  0E02               	movlw	high (_os+41)
 33151  00D310  2164               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 33152  00D312  6EDA               	movwf	fsr2h,c
 33153  00D314  EE10 F027          	lfsr	1,39
 33154  00D318  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 33155  00D31A  26E1               	addwf	fsr1l,f,c
 33156  00D31C  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 33157  00D31E  22E2               	addwfc	fsr1h,f,c
 33158  00D320  CFDF FFE7          	movff	indf2,indf1
 33159                           
 33160                           ; BSR set to: 0
 33161                           ;api.c: 286: outBuffer[40] = os.output_current_adc[(os.timeSlot&0b00110000)>>4]>> 8;
 33162  00D324  EE20 F028          	lfsr	2,40
 33163  00D328  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 33164  00D32A  26D9               	addwf	fsr2l,f,c
 33165  00D32C  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 33166  00D32E  22DA               	addwfc	fsr2h,f,c
 33167  00D330  0102               	movlb	2	; () banked
 33168  00D332  3908               	swapf	(_os+8)& (0+255),w,b	;volatile
 33169  00D334  0B0F               	andlw	15
 33170  00D336  0B03               	andlw	3
 33171  00D338  0100               	movlb	0	; () banked
 33172  00D33A  6F63               	movwf	??__fill_buffer_get_status& (0+255),b
 33173  00D33C  6B64               	clrf	(??__fill_buffer_get_status+1)& (0+255),b
 33174  00D33E  90D8               	bcf	status,0,c
 33175  00D340  3763               	rlcf	??__fill_buffer_get_status& (0+255),f,b
 33176  00D342  3764               	rlcf	(??__fill_buffer_get_status+1)& (0+255),f,b
 33177  00D344  0E29               	movlw	low (_os+41)
 33178  00D346  2563               	addwf	??__fill_buffer_get_status& (0+255),w,b
 33179  00D348  6EE1               	movwf	fsr1l,c
 33180  00D34A  0E02               	movlw	high (_os+41)
 33181  00D34C  2164               	addwfc	(??__fill_buffer_get_status+1)& (0+255),w,b
 33182  00D34E  6EE2               	movwf	fsr1h,c
 33183  00D350  CFE6 F065          	movff	postinc1,??__fill_buffer_get_status+2
 33184  00D354  CFE5 F066          	movff	postdec1,??__fill_buffer_get_status+3
 33185  00D358  C066  F065         	movff	??__fill_buffer_get_status+3,??__fill_buffer_get_status+2
 33186  00D35C  6B66               	clrf	(??__fill_buffer_get_status+3)& (0+255),b
 33187  00D35E  BF65               	btfsc	(??__fill_buffer_get_status+2)& (0+255),7,b
 33188  00D360  6966               	setf	(??__fill_buffer_get_status+3)& (0+255),b
 33189  00D362  5165               	movf	(??__fill_buffer_get_status+2)& (0+255),w,b
 33190  00D364  6EDF               	movwf	indf2,c
 33191                           
 33192                           ; BSR set to: 0
 33193                           ;api.c: 288: outBuffer[41] = ui_get_status();
 33194  00D366  EE20 F029          	lfsr	2,41
 33195  00D36A  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 33196  00D36C  26D9               	addwf	fsr2l,f,c
 33197  00D36E  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 33198  00D370  22DA               	addwfc	fsr2h,f,c
 33199  00D372  EC82  F0C8         	call	_ui_get_status	;wreg free
 33200  00D376  6EDF               	movwf	indf2,c
 33201                           
 33202                           ;api.c: 289: outBuffer[42] = os.timeSlot;
 33203  00D378  0100               	movlb	0	; () banked
 33204  00D37A  EE20 F02A          	lfsr	2,42
 33205  00D37E  5161               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 33206  00D380  26D9               	addwf	fsr2l,f,c
 33207  00D382  5162               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 33208  00D384  22DA               	addwfc	fsr2h,f,c
 33209  00D386  C208  FFDF         	movff	_os+8,indf2	;volatile
 33210                           
 33211                           ; BSR set to: 0
 33212  00D38A  0012               	return		;funcret
 33213  00D38C                     __end_of__fill_buffer_get_status:
 33214                           	opt stack 0
 33215                           tosu	equ	0xFFF
 33216                           tosh	equ	0xFFE
 33217                           tosl	equ	0xFFD
 33218                           pclath	equ	0xFFA
 33219                           tblptru	equ	0xFF8
 33220                           tblptrh	equ	0xFF7
 33221                           tblptrl	equ	0xFF6
 33222                           tablat	equ	0xFF5
 33223                           prodh	equ	0xFF4
 33224                           prodl	equ	0xFF3
 33225                           intcon	equ	0xFF2
 33226                           intcon2	equ	0xFF1
 33227                           intcon3	equ	0xFF0
 33228                           postinc0	equ	0xFEE
 33229                           wreg	equ	0xFE8
 33230                           indf1	equ	0xFE7
 33231                           postinc1	equ	0xFE6
 33232                           postdec1	equ	0xFE5
 33233                           plusw1	equ	0xFE3
 33234                           fsr1h	equ	0xFE2
 33235                           fsr1l	equ	0xFE1
 33236                           indf2	equ	0xFDF
 33237                           postinc2	equ	0xFDE
 33238                           postdec2	equ	0xFDD
 33239                           plusw2	equ	0xFDB
 33240                           fsr2h	equ	0xFDA
 33241                           fsr2l	equ	0xFD9
 33242                           status	equ	0xFD8
 33243                           
 33244 ;; *************** function _ui_get_status *****************
 33245 ;; Defined at:
 33246 ;;		line 13 in file "ui.c"
 33247 ;; Parameters:    Size  Location     Type
 33248 ;;		None
 33249 ;; Auto vars:     Size  Location     Type
 33250 ;;		None
 33251 ;; Return value:  Size  Location     Type
 33252 ;;                  1    wreg      enum E8061
 33253 ;; Registers used:
 33254 ;;		wreg, status,2
 33255 ;; Tracked objects:
 33256 ;;		On entry : 0/0
 33257 ;;		On exit  : 0/0
 33258 ;;		Unchanged: 0/0
 33259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33264 ;;Total ram usage:        0 bytes
 33265 ;; Hardware stack levels used:    1
 33266 ;; Hardware stack levels required when called:   10
 33267 ;; This function calls:
 33268 ;;		Nothing
 33269 ;; This function is called by:
 33270 ;;		_main
 33271 ;;		__fill_buffer_get_status
 33272 ;; This function uses a non-reentrant model
 33273 ;;
 33274                           
 33275                           	psect	text135
 33276  019104                     __ptext135:
 33277                           	opt stack 0
 33278  019104                     _ui_get_status:
 33279                           	opt stack 20
 33280                           
 33281                           ;ui.c: 15: return userInterfaceStatus;
 33282                           
 33283                           ; BSR set to: 0
 33284                           ;incstack = 0
 33285  019104  0101               	movlb	1	; () banked
 33286  019106  51F2               	movf	_userInterfaceStatus& (0+255),w,b
 33287  019108  0012               	return	
 33288  01910A                     __end_of_ui_get_status:
 33289                           	opt stack 0
 33290                           tosu	equ	0xFFF
 33291                           tosh	equ	0xFFE
 33292                           tosl	equ	0xFFD
 33293                           pclath	equ	0xFFA
 33294                           tblptru	equ	0xFF8
 33295                           tblptrh	equ	0xFF7
 33296                           tblptrl	equ	0xFF6
 33297                           tablat	equ	0xFF5
 33298                           prodh	equ	0xFF4
 33299                           prodl	equ	0xFF3
 33300                           intcon	equ	0xFF2
 33301                           intcon2	equ	0xFF1
 33302                           intcon3	equ	0xFF0
 33303                           postinc0	equ	0xFEE
 33304                           wreg	equ	0xFE8
 33305                           indf1	equ	0xFE7
 33306                           postinc1	equ	0xFE6
 33307                           postdec1	equ	0xFE5
 33308                           plusw1	equ	0xFE3
 33309                           fsr1h	equ	0xFE2
 33310                           fsr1l	equ	0xFE1
 33311                           indf2	equ	0xFDF
 33312                           postinc2	equ	0xFDE
 33313                           postdec2	equ	0xFDD
 33314                           plusw2	equ	0xFDB
 33315                           fsr2h	equ	0xFDA
 33316                           fsr2l	equ	0xFD9
 33317                           status	equ	0xFD8
 33318                           
 33319 ;; *************** function _buck_remote_get_status *****************
 33320 ;; Defined at:
 33321 ;;		line 650 in file "buck.c"
 33322 ;; Parameters:    Size  Location     Type
 33323 ;;		None
 33324 ;; Auto vars:     Size  Location     Type
 33325 ;;  retval          1    0[BANK0 ] unsigned char 
 33326 ;; Return value:  Size  Location     Type
 33327 ;;                  1    wreg      unsigned char 
 33328 ;; Registers used:
 33329 ;;		wreg, status,2, status,0
 33330 ;; Tracked objects:
 33331 ;;		On entry : 0/0
 33332 ;;		On exit  : 0/0
 33333 ;;		Unchanged: 0/0
 33334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33336 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33338 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33339 ;;Total ram usage:        1 bytes
 33340 ;; Hardware stack levels used:    1
 33341 ;; Hardware stack levels required when called:   10
 33342 ;; This function calls:
 33343 ;;		Nothing
 33344 ;; This function is called by:
 33345 ;;		__fill_buffer_get_status
 33346 ;; This function uses a non-reentrant model
 33347 ;;
 33348                           
 33349                           	psect	text136
 33350  0187E6                     __ptext136:
 33351                           	opt stack 0
 33352  0187E6                     _buck_remote_get_status:
 33353                           	opt stack 17
 33354                           
 33355                           ;buck.c: 652: uint8_t retval = 0x00;
 33356                           
 33357                           ; BSR set to: 1
 33358                           ;incstack = 0
 33359  0187E6  0E00               	movlw	0
 33360  0187E8  0100               	movlb	0	; () banked
 33361  0187EA  6F60               	movwf	buck_remote_get_status@retval& (0+255),b
 33362                           
 33363                           ;buck.c: 653: if(buck_remote_enable)
 33364  0187EC  0101               	movlb	1	; () banked
 33365  0187EE  51F0               	movf	_buck_remote_enable& (0+255),w,b
 33366  0187F0  B4D8               	btfsc	status,2,c
 33367  0187F2  D002               	goto	l2477
 33368                           
 33369                           ; BSR set to: 1
 33370                           ;buck.c: 654: retval |= 0x01;
 33371  0187F4  0100               	movlb	0	; () banked
 33372  0187F6  8160               	bsf	buck_remote_get_status@retval& (0+255),0,b
 33373  0187F8                     l2477:
 33374                           
 33375                           ;buck.c: 655: if(buck_remote_on)
 33376                           
 33377                           ; BSR set to: 0
 33378  0187F8  501D               	movf	_buck_remote_on,w,c
 33379  0187FA  B4D8               	btfsc	status,2,c
 33380  0187FC  D002               	goto	l2478
 33381                           
 33382                           ;buck.c: 656: retval |= 0x02;
 33383  0187FE  0100               	movlb	0	; () banked
 33384  018800  8360               	bsf	buck_remote_get_status@retval& (0+255),1,b
 33385  018802                     l2478:
 33386                           
 33387                           ;buck.c: 657: if(buck_remote_synchronous)
 33388                           
 33389                           ; BSR set to: 0
 33390  018802  501C               	movf	_buck_remote_synchronous,w,c
 33391  018804  B4D8               	btfsc	status,2,c
 33392  018806  D003               	goto	l2479
 33393                           
 33394                           ;buck.c: 658: retval |= 0x03;
 33395  018808  0E03               	movlw	3
 33396  01880A  0100               	movlb	0	; () banked
 33397  01880C  1360               	iorwf	buck_remote_get_status@retval& (0+255),f,b
 33398  01880E                     l2479:
 33399                           
 33400                           ;buck.c: 659: return retval;
 33401                           
 33402                           ; BSR set to: 0
 33403  01880E  0100               	movlb	0	; () banked
 33404  018810  5160               	movf	buck_remote_get_status@retval& (0+255),w,b
 33405  018812  0012               	return	
 33406  018814                     __end_of_buck_remote_get_status:
 33407                           	opt stack 0
 33408                           tosu	equ	0xFFF
 33409                           tosh	equ	0xFFE
 33410                           tosl	equ	0xFFD
 33411                           pclath	equ	0xFFA
 33412                           tblptru	equ	0xFF8
 33413                           tblptrh	equ	0xFF7
 33414                           tblptrl	equ	0xFF6
 33415                           tablat	equ	0xFF5
 33416                           prodh	equ	0xFF4
 33417                           prodl	equ	0xFF3
 33418                           intcon	equ	0xFF2
 33419                           intcon2	equ	0xFF1
 33420                           intcon3	equ	0xFF0
 33421                           postinc0	equ	0xFEE
 33422                           wreg	equ	0xFE8
 33423                           indf1	equ	0xFE7
 33424                           postinc1	equ	0xFE6
 33425                           postdec1	equ	0xFE5
 33426                           plusw1	equ	0xFE3
 33427                           fsr1h	equ	0xFE2
 33428                           fsr1l	equ	0xFE1
 33429                           indf2	equ	0xFDF
 33430                           postinc2	equ	0xFDE
 33431                           postdec2	equ	0xFDD
 33432                           plusw2	equ	0xFDB
 33433                           fsr2h	equ	0xFDA
 33434                           fsr2l	equ	0xFD9
 33435                           status	equ	0xFD8
 33436                           
 33437 ;; *************** function _buck_remote_get_dutycycle *****************
 33438 ;; Defined at:
 33439 ;;		line 662 in file "buck.c"
 33440 ;; Parameters:    Size  Location     Type
 33441 ;;		None
 33442 ;; Auto vars:     Size  Location     Type
 33443 ;;		None
 33444 ;; Return value:  Size  Location     Type
 33445 ;;                  1    wreg      unsigned char 
 33446 ;; Registers used:
 33447 ;;		wreg, status,2
 33448 ;; Tracked objects:
 33449 ;;		On entry : 0/0
 33450 ;;		On exit  : 0/0
 33451 ;;		Unchanged: 0/0
 33452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33457 ;;Total ram usage:        0 bytes
 33458 ;; Hardware stack levels used:    1
 33459 ;; Hardware stack levels required when called:   10
 33460 ;; This function calls:
 33461 ;;		Nothing
 33462 ;; This function is called by:
 33463 ;;		__fill_buffer_get_status
 33464 ;; This function uses a non-reentrant model
 33465 ;;
 33466                           
 33467                           	psect	text137
 33468  019114                     __ptext137:
 33469                           	opt stack 0
 33470  019114                     _buck_remote_get_dutycycle:
 33471                           	opt stack 17
 33472                           
 33473                           ;buck.c: 664: return buck_remote_dutycycle;
 33474                           
 33475                           ; BSR set to: 0
 33476                           ;incstack = 0
 33477  019114  501B               	movf	_buck_remote_dutycycle,w,c
 33478  019116  0012               	return	
 33479  019118                     __end_of_buck_remote_get_dutycycle:
 33480                           	opt stack 0
 33481                           tosu	equ	0xFFF
 33482                           tosh	equ	0xFFE
 33483                           tosl	equ	0xFFD
 33484                           pclath	equ	0xFFA
 33485                           tblptru	equ	0xFF8
 33486                           tblptrh	equ	0xFF7
 33487                           tblptrl	equ	0xFF6
 33488                           tablat	equ	0xFF5
 33489                           prodh	equ	0xFF4
 33490                           prodl	equ	0xFF3
 33491                           intcon	equ	0xFF2
 33492                           intcon2	equ	0xFF1
 33493                           intcon3	equ	0xFF0
 33494                           postinc0	equ	0xFEE
 33495                           wreg	equ	0xFE8
 33496                           indf1	equ	0xFE7
 33497                           postinc1	equ	0xFE6
 33498                           postdec1	equ	0xFE5
 33499                           plusw1	equ	0xFE3
 33500                           fsr1h	equ	0xFE2
 33501                           fsr1l	equ	0xFE1
 33502                           indf2	equ	0xFDF
 33503                           postinc2	equ	0xFDE
 33504                           postdec2	equ	0xFDD
 33505                           plusw2	equ	0xFDB
 33506                           fsr2h	equ	0xFDA
 33507                           fsr2l	equ	0xFD9
 33508                           status	equ	0xFD8
 33509                           
 33510 ;; *************** function _buck_get_mode *****************
 33511 ;; Defined at:
 33512 ;;		line 597 in file "buck.c"
 33513 ;; Parameters:    Size  Location     Type
 33514 ;;		None
 33515 ;; Auto vars:     Size  Location     Type
 33516 ;;		None
 33517 ;; Return value:  Size  Location     Type
 33518 ;;                  1    wreg      enum E8143
 33519 ;; Registers used:
 33520 ;;		wreg, status,2
 33521 ;; Tracked objects:
 33522 ;;		On entry : 0/0
 33523 ;;		On exit  : 0/0
 33524 ;;		Unchanged: 0/0
 33525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33530 ;;Total ram usage:        0 bytes
 33531 ;; Hardware stack levels used:    1
 33532 ;; Hardware stack levels required when called:   10
 33533 ;; This function calls:
 33534 ;;		Nothing
 33535 ;; This function is called by:
 33536 ;;		_main
 33537 ;;		_system_calculate_input_current
 33538 ;;		_system_calculate_output_current
 33539 ;;		__display_inout
 33540 ;;		__display_charger
 33541 ;;		_log_collect_data
 33542 ;;		__fill_buffer_get_status
 33543 ;; This function uses a non-reentrant model
 33544 ;;
 33545                           
 33546                           	psect	text138
 33547  019118                     __ptext138:
 33548                           	opt stack 0
 33549  019118                     _buck_get_mode:
 33550                           	opt stack 19
 33551                           
 33552                           ;buck.c: 599: return buck_status;
 33553                           
 33554                           ;incstack = 0
 33555  019118  501E               	movf	_buck_status,w,c
 33556  01911A  0012               	return	
 33557  01911C                     __end_of_buck_get_mode:
 33558                           	opt stack 0
 33559                           tosu	equ	0xFFF
 33560                           tosh	equ	0xFFE
 33561                           tosl	equ	0xFFD
 33562                           pclath	equ	0xFFA
 33563                           tblptru	equ	0xFF8
 33564                           tblptrh	equ	0xFF7
 33565                           tblptrl	equ	0xFF6
 33566                           tablat	equ	0xFF5
 33567                           prodh	equ	0xFF4
 33568                           prodl	equ	0xFF3
 33569                           intcon	equ	0xFF2
 33570                           intcon2	equ	0xFF1
 33571                           intcon3	equ	0xFF0
 33572                           postinc0	equ	0xFEE
 33573                           wreg	equ	0xFE8
 33574                           indf1	equ	0xFE7
 33575                           postinc1	equ	0xFE6
 33576                           postdec1	equ	0xFE5
 33577                           plusw1	equ	0xFE3
 33578                           fsr1h	equ	0xFE2
 33579                           fsr1l	equ	0xFE1
 33580                           indf2	equ	0xFDF
 33581                           postinc2	equ	0xFDE
 33582                           postdec2	equ	0xFDD
 33583                           plusw2	equ	0xFDB
 33584                           fsr2h	equ	0xFDA
 33585                           fsr2l	equ	0xFD9
 33586                           status	equ	0xFD8
 33587                           
 33588 ;; *************** function _buck_get_dutycycle *****************
 33589 ;; Defined at:
 33590 ;;		line 592 in file "buck.c"
 33591 ;; Parameters:    Size  Location     Type
 33592 ;;		None
 33593 ;; Auto vars:     Size  Location     Type
 33594 ;;		None
 33595 ;; Return value:  Size  Location     Type
 33596 ;;                  1    wreg      unsigned char 
 33597 ;; Registers used:
 33598 ;;		wreg, status,2
 33599 ;; Tracked objects:
 33600 ;;		On entry : 0/0
 33601 ;;		On exit  : 0/0
 33602 ;;		Unchanged: 0/0
 33603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33608 ;;Total ram usage:        0 bytes
 33609 ;; Hardware stack levels used:    1
 33610 ;; Hardware stack levels required when called:   10
 33611 ;; This function calls:
 33612 ;;		Nothing
 33613 ;; This function is called by:
 33614 ;;		__display_charger
 33615 ;;		__fill_buffer_get_status
 33616 ;; This function uses a non-reentrant model
 33617 ;;
 33618                           
 33619                           	psect	text139
 33620  01910A                     __ptext139:
 33621                           	opt stack 0
 33622  01910A                     _buck_get_dutycycle:
 33623                           	opt stack 18
 33624                           
 33625                           ;buck.c: 594: return buck_dutycycle;
 33626                           
 33627                           ;incstack = 0
 33628  01910A  0100               	movlb	0	; () banked
 33629  01910C  51FF               	movf	_buck_dutycycle& (0+255),w,b
 33630  01910E  0012               	return	
 33631  019110                     __end_of_buck_get_dutycycle:
 33632                           	opt stack 0
 33633                           tosu	equ	0xFFF
 33634                           tosh	equ	0xFFE
 33635                           tosl	equ	0xFFD
 33636                           pclath	equ	0xFFA
 33637                           tblptru	equ	0xFF8
 33638                           tblptrh	equ	0xFF7
 33639                           tblptrl	equ	0xFF6
 33640                           tablat	equ	0xFF5
 33641                           prodh	equ	0xFF4
 33642                           prodl	equ	0xFF3
 33643                           intcon	equ	0xFF2
 33644                           intcon2	equ	0xFF1
 33645                           intcon3	equ	0xFF0
 33646                           postinc0	equ	0xFEE
 33647                           wreg	equ	0xFE8
 33648                           indf1	equ	0xFE7
 33649                           postinc1	equ	0xFE6
 33650                           postdec1	equ	0xFE5
 33651                           plusw1	equ	0xFE3
 33652                           fsr1h	equ	0xFE2
 33653                           fsr1l	equ	0xFE1
 33654                           indf2	equ	0xFDF
 33655                           postinc2	equ	0xFDE
 33656                           postdec2	equ	0xFDD
 33657                           plusw2	equ	0xFDB
 33658                           fsr2h	equ	0xFDA
 33659                           fsr2l	equ	0xFD9
 33660                           status	equ	0xFD8
 33661                           
 33662 ;; *************** function __fill_buffer_get_file_details *****************
 33663 ;; Defined at:
 33664 ;;		line 370 in file "api.c"
 33665 ;; Parameters:    Size  Location     Type
 33666 ;;  inBuffer        2   55[BANK0 ] PTR unsigned char 
 33667 ;;		 -> ReceivedDataBuffer(64), 
 33668 ;;  outBuffer       2   57[BANK0 ] PTR unsigned char 
 33669 ;;		 -> ToSendDataBuffer(64), 
 33670 ;; Auto vars:     Size  Location     Type
 33671 ;;  file_number     1   60[BANK0 ] unsigned char 
 33672 ;; Return value:  Size  Location     Type
 33673 ;;                  1    wreg      void 
 33674 ;; Registers used:
 33675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33676 ;; Tracked objects:
 33677 ;;		On entry : 0/0
 33678 ;;		On exit  : 0/0
 33679 ;;		Unchanged: 0/0
 33680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33681 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33682 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33683 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33684 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33685 ;;Total ram usage:        6 bytes
 33686 ;; Hardware stack levels used:    1
 33687 ;; Hardware stack levels required when called:   16
 33688 ;; This function calls:
 33689 ;;		_fat_get_file_information
 33690 ;; This function is called by:
 33691 ;;		_api_prepare
 33692 ;; This function uses a non-reentrant model
 33693 ;;
 33694                           
 33695                           	psect	text140
 33696  017ADE                     __ptext140:
 33697                           	opt stack 0
 33698  017ADE                     __fill_buffer_get_file_details:
 33699                           	opt stack 12
 33700                           
 33701                           ;api.c: 372: uint8_t file_number = inBuffer[1];
 33702                           
 33703                           ; BSR set to: 0
 33704                           ;incstack = 0
 33705  017ADE  0100               	movlb	0	; () banked
 33706  017AE0  EE20 F001          	lfsr	2,1
 33707  017AE4  5197               	movf	__fill_buffer_get_file_details@inBuffer& (0+255),w,b
 33708  017AE6  26D9               	addwf	fsr2l,f,c
 33709  017AE8  5198               	movf	(__fill_buffer_get_file_details@inBuffer+1)& (0+255),w,b
 33710  017AEA  22DA               	addwfc	fsr2h,f,c
 33711  017AEC  50DF               	movf	indf2,w,c
 33712  017AEE  6F9C               	movwf	__fill_buffer_get_file_details@file_number& (0+255),b
 33713                           
 33714                           ; BSR set to: 0
 33715                           ;api.c: 375: outBuffer[0] = DATAREQUEST_GET_FILE_DETAILS;
 33716  017AF0  C099  FFD9         	movff	__fill_buffer_get_file_details@outBuffer,fsr2l
 33717  017AF4  C09A  FFDA         	movff	__fill_buffer_get_file_details@outBuffer+1,fsr2h
 33718  017AF8  0E80               	movlw	128
 33719  017AFA  6EDF               	movwf	indf2,c
 33720                           
 33721                           ; BSR set to: 0
 33722                           ;api.c: 378: outBuffer[3] = file_number;
 33723  017AFC  EE20 F003          	lfsr	2,3
 33724  017B00  5199               	movf	__fill_buffer_get_file_details@outBuffer& (0+255),w,b
 33725  017B02  26D9               	addwf	fsr2l,f,c
 33726  017B04  519A               	movf	(__fill_buffer_get_file_details@outBuffer+1)& (0+255),w,b
 33727  017B06  22DA               	addwfc	fsr2h,f,c
 33728  017B08  C09C  FFDF         	movff	__fill_buffer_get_file_details@file_number,indf2
 33729                           
 33730                           ; BSR set to: 0
 33731                           ;api.c: 381: outBuffer[4] = fat_get_file_information(file_number, (rootEntry_t*) &outBuf
      +                          fer[5]);
 33732  017B0C  0E05               	movlw	5
 33733  017B0E  2599               	addwf	__fill_buffer_get_file_details@outBuffer& (0+255),w,b
 33734  017B10  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 33735  017B12  0E00               	movlw	0
 33736  017B14  219A               	addwfc	(__fill_buffer_get_file_details@outBuffer+1)& (0+255),w,b
 33737  017B16  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 33738  017B18  519C               	movf	__fill_buffer_get_file_details@file_number& (0+255),w,b
 33739  017B1A  ECBF  F0B6         	call	_fat_get_file_information
 33740  017B1E  0100               	movlb	0	; () banked
 33741  017B20  6F9B               	movwf	??__fill_buffer_get_file_details& (0+255),b
 33742  017B22  EE20 F004          	lfsr	2,4
 33743  017B26  5199               	movf	__fill_buffer_get_file_details@outBuffer& (0+255),w,b
 33744  017B28  26D9               	addwf	fsr2l,f,c
 33745  017B2A  519A               	movf	(__fill_buffer_get_file_details@outBuffer+1)& (0+255),w,b
 33746  017B2C  22DA               	addwfc	fsr2h,f,c
 33747  017B2E  C09B  FFDF         	movff	??__fill_buffer_get_file_details,indf2
 33748                           
 33749                           ; BSR set to: 0
 33750  017B32  0012               	return		;funcret
 33751  017B34                     __end_of__fill_buffer_get_file_details:
 33752                           	opt stack 0
 33753                           tosu	equ	0xFFF
 33754                           tosh	equ	0xFFE
 33755                           tosl	equ	0xFFD
 33756                           pclath	equ	0xFFA
 33757                           tblptru	equ	0xFF8
 33758                           tblptrh	equ	0xFF7
 33759                           tblptrl	equ	0xFF6
 33760                           tablat	equ	0xFF5
 33761                           prodh	equ	0xFF4
 33762                           prodl	equ	0xFF3
 33763                           intcon	equ	0xFF2
 33764                           intcon2	equ	0xFF1
 33765                           intcon3	equ	0xFF0
 33766                           postinc0	equ	0xFEE
 33767                           wreg	equ	0xFE8
 33768                           indf1	equ	0xFE7
 33769                           postinc1	equ	0xFE6
 33770                           postdec1	equ	0xFE5
 33771                           plusw1	equ	0xFE3
 33772                           fsr1h	equ	0xFE2
 33773                           fsr1l	equ	0xFE1
 33774                           indf2	equ	0xFDF
 33775                           postinc2	equ	0xFDE
 33776                           postdec2	equ	0xFDD
 33777                           plusw2	equ	0xFDB
 33778                           fsr2h	equ	0xFDA
 33779                           fsr2l	equ	0xFD9
 33780                           status	equ	0xFD8
 33781                           
 33782 ;; *************** function __fill_buffer_get_display1 *****************
 33783 ;; Defined at:
 33784 ;;		line 331 in file "api.c"
 33785 ;; Parameters:    Size  Location     Type
 33786 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 33787 ;;		 -> ToSendDataBuffer(64), 
 33788 ;; Auto vars:     Size  Location     Type
 33789 ;;  position        1    9[BANK0 ] unsigned char 
 33790 ;;  line            1    8[BANK0 ] unsigned char 
 33791 ;;  cntr            1    7[BANK0 ] unsigned char 
 33792 ;; Return value:  Size  Location     Type
 33793 ;;                  1    wreg      void 
 33794 ;; Registers used:
 33795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33796 ;; Tracked objects:
 33797 ;;		On entry : 0/0
 33798 ;;		On exit  : 0/0
 33799 ;;		Unchanged: 0/0
 33800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33801 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33802 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33803 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33804 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33805 ;;Total ram usage:        6 bytes
 33806 ;; Hardware stack levels used:    1
 33807 ;; Hardware stack levels required when called:   11
 33808 ;; This function calls:
 33809 ;;		_display_get_character
 33810 ;; This function is called by:
 33811 ;;		_api_prepare
 33812 ;; This function uses a non-reentrant model
 33813 ;;
 33814                           
 33815                           	psect	text141
 33816  017B34                     __ptext141:
 33817                           	opt stack 0
 33818  017B34                     __fill_buffer_get_display1:
 33819                           	opt stack 17
 33820                           
 33821                           ;api.c: 333: uint8_t cntr;;api.c: 334: uint8_t line;;api.c: 335: uint8_t position;;api.c
      +                          : 338: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 33822                           
 33823                           ; BSR set to: 0
 33824                           ;incstack = 0
 33825  017B34  C064  FFD9         	movff	__fill_buffer_get_display1@outBuffer,fsr2l
 33826  017B38  C065  FFDA         	movff	__fill_buffer_get_display1@outBuffer+1,fsr2h
 33827  017B3C  0E11               	movlw	17
 33828  017B3E  6EDF               	movwf	indf2,c
 33829                           
 33830                           ;api.c: 341: cntr = 1;
 33831  017B40  0E01               	movlw	1
 33832  017B42  0100               	movlb	0	; () banked
 33833  017B44  6F67               	movwf	__fill_buffer_get_display1@cntr& (0+255),b
 33834                           
 33835                           ; BSR set to: 0
 33836                           ;api.c: 342: for(line=0; line<2; ++line)
 33837  017B46  0E00               	movlw	0
 33838  017B48  6F68               	movwf	__fill_buffer_get_display1@line& (0+255),b
 33839  017B4A                     l25807:
 33840                           
 33841                           ; BSR set to: 0
 33842  017B4A  0E01               	movlw	1
 33843  017B4C  6568               	cpfsgt	__fill_buffer_get_display1@line& (0+255),b
 33844  017B4E  D001               	goto	l3582
 33845  017B50  0012               	return	
 33846  017B52                     l3582:
 33847                           
 33848                           ; BSR set to: 0
 33849                           ;api.c: 343: {;api.c: 344: for(position=0; position<20; ++position)
 33850                           
 33851                           ; BSR set to: 0
 33852  017B52  0E00               	movlw	0
 33853  017B54  6F69               	movwf	__fill_buffer_get_display1@position& (0+255),b
 33854  017B56                     l25813:
 33855                           
 33856                           ; BSR set to: 0
 33857  017B56  0E13               	movlw	19
 33858  017B58  6569               	cpfsgt	__fill_buffer_get_display1@position& (0+255),b
 33859  017B5A  D001               	goto	l3584
 33860  017B5C  D014               	goto	u24260
 33861  017B5E                     l3584:
 33862                           
 33863                           ; BSR set to: 0
 33864                           ;api.c: 345: {;api.c: 346: outBuffer[cntr] = display_get_character(line, position);
 33865                           
 33866                           ; BSR set to: 0
 33867  017B5E  C069  F060         	movff	__fill_buffer_get_display1@position,display_get_character@position
 33868  017B62  5168               	movf	__fill_buffer_get_display1@line& (0+255),w,b
 33869  017B64  EC0A  F0C4         	call	_display_get_character
 33870  017B68  0100               	movlb	0	; () banked
 33871  017B6A  6F66               	movwf	??__fill_buffer_get_display1& (0+255),b
 33872  017B6C  5167               	movf	__fill_buffer_get_display1@cntr& (0+255),w,b
 33873  017B6E  0D01               	mullw	1
 33874  017B70  50F3               	movf	prodl,w,c
 33875  017B72  2564               	addwf	__fill_buffer_get_display1@outBuffer& (0+255),w,b
 33876  017B74  6ED9               	movwf	fsr2l,c
 33877  017B76  50F4               	movf	prodh,w,c
 33878  017B78  2165               	addwfc	(__fill_buffer_get_display1@outBuffer+1)& (0+255),w,b
 33879  017B7A  6EDA               	movwf	fsr2h,c
 33880  017B7C  C066  FFDF         	movff	??__fill_buffer_get_display1,indf2
 33881                           
 33882                           ; BSR set to: 0
 33883                           ;api.c: 347: ++cntr;
 33884  017B80  2B67               	incf	__fill_buffer_get_display1@cntr& (0+255),f,b
 33885                           
 33886                           ; BSR set to: 0
 33887  017B82  2B69               	incf	__fill_buffer_get_display1@position& (0+255),f,b
 33888  017B84  D7E8               	goto	l25813
 33889  017B86                     u24260:
 33890                           
 33891                           ; BSR set to: 0
 33892                           
 33893                           ; BSR set to: 0
 33894  017B86  2B68               	incf	__fill_buffer_get_display1@line& (0+255),f,b
 33895  017B88  D7E0               	goto	l25807
 33896  017B8A                     __end_of__fill_buffer_get_display1:
 33897                           	opt stack 0
 33898                           tosu	equ	0xFFF
 33899                           tosh	equ	0xFFE
 33900                           tosl	equ	0xFFD
 33901                           pclath	equ	0xFFA
 33902                           tblptru	equ	0xFF8
 33903                           tblptrh	equ	0xFF7
 33904                           tblptrl	equ	0xFF6
 33905                           tablat	equ	0xFF5
 33906                           prodh	equ	0xFF4
 33907                           prodl	equ	0xFF3
 33908                           intcon	equ	0xFF2
 33909                           intcon2	equ	0xFF1
 33910                           intcon3	equ	0xFF0
 33911                           postinc0	equ	0xFEE
 33912                           wreg	equ	0xFE8
 33913                           indf1	equ	0xFE7
 33914                           postinc1	equ	0xFE6
 33915                           postdec1	equ	0xFE5
 33916                           plusw1	equ	0xFE3
 33917                           fsr1h	equ	0xFE2
 33918                           fsr1l	equ	0xFE1
 33919                           indf2	equ	0xFDF
 33920                           postinc2	equ	0xFDE
 33921                           postdec2	equ	0xFDD
 33922                           plusw2	equ	0xFDB
 33923                           fsr2h	equ	0xFDA
 33924                           fsr2l	equ	0xFD9
 33925                           status	equ	0xFD8
 33926                           
 33927 ;; *************** function __fill_buffer_get_display *****************
 33928 ;; Defined at:
 33929 ;;		line 293 in file "api.c"
 33930 ;; Parameters:    Size  Location     Type
 33931 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 33932 ;;		 -> ToSendDataBuffer(64), 
 33933 ;;  secondHalf      1    6[BANK0 ] unsigned char 
 33934 ;; Auto vars:     Size  Location     Type
 33935 ;;  position        1   15[BANK0 ] unsigned char 
 33936 ;;  start_line      1   14[BANK0 ] unsigned char 
 33937 ;;  line            1   13[BANK0 ] unsigned char 
 33938 ;;  cntr            1   12[BANK0 ] unsigned char 
 33939 ;; Return value:  Size  Location     Type
 33940 ;;                  1    wreg      void 
 33941 ;; Registers used:
 33942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33943 ;; Tracked objects:
 33944 ;;		On entry : 0/0
 33945 ;;		On exit  : 0/0
 33946 ;;		Unchanged: 0/0
 33947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33948 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33949 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33950 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33951 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33952 ;;Total ram usage:       12 bytes
 33953 ;; Hardware stack levels used:    1
 33954 ;; Hardware stack levels required when called:   11
 33955 ;; This function calls:
 33956 ;;		_display_get_character
 33957 ;; This function is called by:
 33958 ;;		_api_prepare
 33959 ;; This function uses a non-reentrant model
 33960 ;;
 33961                           
 33962                           	psect	text142
 33963  016182                     __ptext142:
 33964                           	opt stack 0
 33965  016182                     __fill_buffer_get_display:
 33966                           	opt stack 17
 33967                           
 33968                           ;api.c: 295: uint8_t cntr;;api.c: 296: uint8_t line;;api.c: 297: uint8_t start_line;;api
      +                          .c: 298: uint8_t position;;api.c: 301: if(secondHalf)
 33969                           
 33970                           ; BSR set to: 0
 33971                           ;incstack = 0
 33972  016182  0100               	movlb	0	; () banked
 33973  016184  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 33974  016186  B4D8               	btfsc	status,2,c
 33975  016188  D006               	goto	l3570
 33976                           
 33977                           ; BSR set to: 0
 33978                           ;api.c: 302: {;api.c: 303: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 33979  01618A  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 33980  01618E  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 33981  016192  0E12               	movlw	18
 33982  016194  D005               	goto	L34
 33983  016196                     l3570:
 33984                           
 33985                           ; BSR set to: 0
 33986                           ;api.c: 305: else;api.c: 306: {;api.c: 307: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 33987                           
 33988                           ; BSR set to: 0
 33989  016196  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 33990  01619A  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 33991  01619E  0E11               	movlw	17
 33992  0161A0                     L34:
 33993  0161A0  6EDF               	movwf	indf2,c
 33994                           
 33995                           ; BSR set to: 0
 33996                           ;api.c: 308: };api.c: 311: cntr = 1;
 33997                           
 33998                           ; BSR set to: 0
 33999  0161A2  0E01               	movlw	1
 34000  0161A4  6F6C               	movwf	__fill_buffer_get_display@cntr& (0+255),b
 34001                           
 34002                           ; BSR set to: 0
 34003                           ;api.c: 312: if(secondHalf)
 34004  0161A6  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 34005  0161A8  B4D8               	btfsc	status,2,c
 34006  0161AA  D002               	goto	l3572
 34007                           
 34008                           ; BSR set to: 0
 34009                           ;api.c: 313: {;api.c: 314: start_line = 2;
 34010  0161AC  0E02               	movlw	2
 34011  0161AE  D001               	goto	L35
 34012  0161B0                     l3572:
 34013                           
 34014                           ; BSR set to: 0
 34015                           ;api.c: 316: else;api.c: 317: {;api.c: 318: start_line = 0;
 34016                           
 34017                           ; BSR set to: 0
 34018  0161B0  0E00               	movlw	0
 34019  0161B2                     L35:
 34020  0161B2  6F6E               	movwf	__fill_buffer_get_display@start_line& (0+255),b
 34021                           
 34022                           ; BSR set to: 0
 34023                           ;api.c: 319: };api.c: 320: for(line=start_line; line<start_line+2; ++line)
 34024                           
 34025                           ; BSR set to: 0
 34026  0161B4  C06E  F06D         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 34027  0161B8  D01B               	goto	l3574
 34028  0161BA                     
 34029                           ; BSR set to: 0
 34030                           ;api.c: 321: {;api.c: 322: for(position=0; position<20; ++position)
 34031                           
 34032                           ; BSR set to: 0
 34033  0161BA  0E00               	movlw	0
 34034  0161BC  6F6F               	movwf	__fill_buffer_get_display@position& (0+255),b
 34035  0161BE                     l25847:
 34036                           
 34037                           ; BSR set to: 0
 34038  0161BE  0E13               	movlw	19
 34039  0161C0  656F               	cpfsgt	__fill_buffer_get_display@position& (0+255),b
 34040  0161C2  D001               	goto	l3576
 34041  0161C4  D014               	goto	u24310
 34042  0161C6                     l3576:
 34043                           
 34044                           ; BSR set to: 0
 34045                           ;api.c: 323: {;api.c: 324: outBuffer[cntr] = display_get_character(line, position);
 34046                           
 34047                           ; BSR set to: 0
 34048  0161C6  C06F  F060         	movff	__fill_buffer_get_display@position,display_get_character@position
 34049  0161CA  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 34050  0161CC  EC0A  F0C4         	call	_display_get_character
 34051  0161D0  0100               	movlb	0	; () banked
 34052  0161D2  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 34053  0161D4  516C               	movf	__fill_buffer_get_display@cntr& (0+255),w,b
 34054  0161D6  0D01               	mullw	1
 34055  0161D8  50F3               	movf	prodl,w,c
 34056  0161DA  2564               	addwf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 34057  0161DC  6ED9               	movwf	fsr2l,c
 34058  0161DE  50F4               	movf	prodh,w,c
 34059  0161E0  2165               	addwfc	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 34060  0161E2  6EDA               	movwf	fsr2h,c
 34061  0161E4  C067  FFDF         	movff	??__fill_buffer_get_display,indf2
 34062                           
 34063                           ; BSR set to: 0
 34064                           ;api.c: 325: ++cntr;
 34065  0161E8  2B6C               	incf	__fill_buffer_get_display@cntr& (0+255),f,b
 34066                           
 34067                           ; BSR set to: 0
 34068  0161EA  2B6F               	incf	__fill_buffer_get_display@position& (0+255),f,b
 34069  0161EC  D7E8               	goto	l25847
 34070  0161EE                     u24310:
 34071                           
 34072                           ; BSR set to: 0
 34073                           
 34074                           ; BSR set to: 0
 34075  0161EE  2B6D               	incf	__fill_buffer_get_display@line& (0+255),f,b
 34076  0161F0                     l3574:
 34077                           
 34078                           ; BSR set to: 0
 34079                           
 34080                           ; BSR set to: 0
 34081  0161F0  516E               	movf	__fill_buffer_get_display@start_line& (0+255),w,b
 34082  0161F2  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 34083  0161F4  6B68               	clrf	(??__fill_buffer_get_display+1)& (0+255),b
 34084  0161F6  0E02               	movlw	2
 34085  0161F8  2767               	addwf	??__fill_buffer_get_display& (0+255),f,b
 34086  0161FA  0E00               	movlw	0
 34087  0161FC  2368               	addwfc	(??__fill_buffer_get_display+1)& (0+255),f,b
 34088  0161FE  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 34089  016200  6F69               	movwf	(??__fill_buffer_get_display+2)& (0+255),b
 34090  016202  6B6A               	clrf	(??__fill_buffer_get_display+3)& (0+255),b
 34091  016204  5167               	movf	??__fill_buffer_get_display& (0+255),w,b
 34092  016206  5D69               	subwf	(??__fill_buffer_get_display+2)& (0+255),w,b
 34093  016208  516A               	movf	(??__fill_buffer_get_display+3)& (0+255),w,b
 34094  01620A  0A80               	xorlw	128
 34095  01620C  6F6B               	movwf	(??__fill_buffer_get_display+4)& (0+255),b
 34096  01620E  5168               	movf	(??__fill_buffer_get_display+1)& (0+255),w,b
 34097  016210  0A80               	xorlw	128
 34098  016212  596B               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,b
 34099  016214  B0D8               	btfsc	status,0,c
 34100  016216  0012               	return	
 34101  016218  D7D0               	goto	l3575
 34102  01621A                     __end_of__fill_buffer_get_display:
 34103                           	opt stack 0
 34104                           tosu	equ	0xFFF
 34105                           tosh	equ	0xFFE
 34106                           tosl	equ	0xFFD
 34107                           pclath	equ	0xFFA
 34108                           tblptru	equ	0xFF8
 34109                           tblptrh	equ	0xFF7
 34110                           tblptrl	equ	0xFF6
 34111                           tablat	equ	0xFF5
 34112                           prodh	equ	0xFF4
 34113                           prodl	equ	0xFF3
 34114                           intcon	equ	0xFF2
 34115                           intcon2	equ	0xFF1
 34116                           intcon3	equ	0xFF0
 34117                           postinc0	equ	0xFEE
 34118                           wreg	equ	0xFE8
 34119                           indf1	equ	0xFE7
 34120                           postinc1	equ	0xFE6
 34121                           postdec1	equ	0xFE5
 34122                           plusw1	equ	0xFE3
 34123                           fsr1h	equ	0xFE2
 34124                           fsr1l	equ	0xFE1
 34125                           indf2	equ	0xFDF
 34126                           postinc2	equ	0xFDE
 34127                           postdec2	equ	0xFDD
 34128                           plusw2	equ	0xFDB
 34129                           fsr2h	equ	0xFDA
 34130                           fsr2l	equ	0xFD9
 34131                           status	equ	0xFD8
 34132                           
 34133 ;; *************** function _display_get_character *****************
 34134 ;; Defined at:
 34135 ;;		line 27 in file "display.c"
 34136 ;; Parameters:    Size  Location     Type
 34137 ;;  line            1    wreg     unsigned char 
 34138 ;;  position        1    0[BANK0 ] unsigned char 
 34139 ;; Auto vars:     Size  Location     Type
 34140 ;;  line            1    3[BANK0 ] unsigned char 
 34141 ;; Return value:  Size  Location     Type
 34142 ;;                  1    wreg      unsigned char 
 34143 ;; Registers used:
 34144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34145 ;; Tracked objects:
 34146 ;;		On entry : 0/0
 34147 ;;		On exit  : 0/0
 34148 ;;		Unchanged: 0/0
 34149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34150 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34151 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34152 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34153 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34154 ;;Total ram usage:        4 bytes
 34155 ;; Hardware stack levels used:    1
 34156 ;; Hardware stack levels required when called:   10
 34157 ;; This function calls:
 34158 ;;		Nothing
 34159 ;; This function is called by:
 34160 ;;		__fill_buffer_get_display
 34161 ;;		__fill_buffer_get_display1
 34162 ;; This function uses a non-reentrant model
 34163 ;;
 34164                           
 34165                           	psect	text143
 34166  018814                     __ptext143:
 34167                           	opt stack 0
 34168  018814                     _display_get_character:
 34169                           	opt stack 17
 34170                           
 34171                           ; BSR set to: 0
 34172                           ;incstack = 0
 34173                           ;display_get_character@line stored from wreg
 34174  018814  0100               	movlb	0	; () banked
 34175  018816  6F63               	movwf	display_get_character@line& (0+255),b
 34176                           
 34177                           ;display.c: 29: return display_content[line][position];
 34178  018818  0100               	movlb	0	; () banked
 34179  01881A  5163               	movf	display_get_character@line& (0+255),w,b
 34180  01881C  0D14               	mullw	20
 34181  01881E  0E6C               	movlw	low _display_content
 34182  018820  6F61               	movwf	??_display_get_character& (0+255),b
 34183  018822  0E03               	movlw	high _display_content
 34184  018824  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 34185  018826  50F3               	movf	prodl,w,c
 34186  018828  2761               	addwf	??_display_get_character& (0+255),f,b
 34187  01882A  50F4               	movf	prodh,w,c
 34188  01882C  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 34189  01882E  5160               	movf	display_get_character@position& (0+255),w,b
 34190  018830  0D01               	mullw	1
 34191  018832  50F3               	movf	prodl,w,c
 34192  018834  2561               	addwf	??_display_get_character& (0+255),w,b
 34193  018836  6ED9               	movwf	fsr2l,c
 34194  018838  50F4               	movf	prodh,w,c
 34195  01883A  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 34196  01883C  6EDA               	movwf	fsr2h,c
 34197  01883E  50DF               	movf	indf2,w,c
 34198  018840  0012               	return	
 34199  018842                     __end_of_display_get_character:
 34200                           	opt stack 0
 34201                           tosu	equ	0xFFF
 34202                           tosh	equ	0xFFE
 34203                           tosl	equ	0xFFD
 34204                           pclath	equ	0xFFA
 34205                           tblptru	equ	0xFF8
 34206                           tblptrh	equ	0xFF7
 34207                           tblptrl	equ	0xFF6
 34208                           tablat	equ	0xFF5
 34209                           prodh	equ	0xFF4
 34210                           prodl	equ	0xFF3
 34211                           intcon	equ	0xFF2
 34212                           intcon2	equ	0xFF1
 34213                           intcon3	equ	0xFF0
 34214                           postinc0	equ	0xFEE
 34215                           wreg	equ	0xFE8
 34216                           indf1	equ	0xFE7
 34217                           postinc1	equ	0xFE6
 34218                           postdec1	equ	0xFE5
 34219                           plusw1	equ	0xFE3
 34220                           fsr1h	equ	0xFE2
 34221                           fsr1l	equ	0xFE1
 34222                           indf2	equ	0xFDF
 34223                           postinc2	equ	0xFDE
 34224                           postdec2	equ	0xFDD
 34225                           plusw2	equ	0xFDB
 34226                           fsr2h	equ	0xFDA
 34227                           fsr2l	equ	0xFD9
 34228                           status	equ	0xFD8
 34229                           
 34230 ;; *************** function __fill_buffer_get_calibration2 *****************
 34231 ;; Defined at:
 34232 ;;		line 489 in file "api.c"
 34233 ;; Parameters:    Size  Location     Type
 34234 ;;  outBuffer       2   11[BANK0 ] PTR unsigned char 
 34235 ;;		 -> ToSendDataBuffer(64), 
 34236 ;; Auto vars:     Size  Location     Type
 34237 ;;		None
 34238 ;; Return value:  Size  Location     Type
 34239 ;;                  1    wreg      void 
 34240 ;; Registers used:
 34241 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34242 ;; Tracked objects:
 34243 ;;		On entry : 0/0
 34244 ;;		On exit  : 0/0
 34245 ;;		Unchanged: 0/0
 34246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34247 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34250 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34251 ;;Total ram usage:        2 bytes
 34252 ;; Hardware stack levels used:    1
 34253 ;; Hardware stack levels required when called:   11
 34254 ;; This function calls:
 34255 ;;		_memcpy
 34256 ;; This function is called by:
 34257 ;;		_api_prepare
 34258 ;; This function uses a non-reentrant model
 34259 ;;
 34260                           
 34261                           	psect	text144
 34262  016FD8                     __ptext144:
 34263                           	opt stack 0
 34264  016FD8                     __fill_buffer_get_calibration2:
 34265                           	opt stack 17
 34266                           
 34267                           ;api.c: 492: outBuffer[0] = DATAREQUEST_GET_CALIBRATION_2;
 34268                           
 34269                           ; BSR set to: 0
 34270                           ;incstack = 0
 34271  016FD8  C06B  FFD9         	movff	__fill_buffer_get_calibration2@outBuffer,fsr2l
 34272  016FDC  C06C  FFDA         	movff	__fill_buffer_get_calibration2@outBuffer+1,fsr2h
 34273  016FE0  0E14               	movlw	20
 34274  016FE2  6EDF               	movwf	indf2,c
 34275                           
 34276                           ;api.c: 494: memcpy(&outBuffer[1], &calibrationParameters[CALIBRATION_INDEX_ONBOARD_TEMP
      +                          ERATURE], 12);
 34277  016FE4  0E01               	movlw	1
 34278  016FE6  0100               	movlb	0	; () banked
 34279  016FE8  256B               	addwf	__fill_buffer_get_calibration2@outBuffer& (0+255),w,b
 34280  016FEA  6F60               	movwf	memcpy@d1& (0+255),b
 34281  016FEC  0E00               	movlw	0
 34282  016FEE  216C               	addwfc	(__fill_buffer_get_calibration2@outBuffer+1)& (0+255),w,b
 34283  016FF0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 34284  016FF2  0E48               	movlw	low (_calibrationParameters+48)
 34285  016FF4  6F62               	movwf	memcpy@s1& (0+255),b
 34286  016FF6  0E03               	movlw	high (_calibrationParameters+48)
 34287  016FF8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 34288  016FFA  0E00               	movlw	0
 34289  016FFC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 34290  016FFE  0E0C               	movlw	12
 34291  017000  6F64               	movwf	memcpy@n& (0+255),b
 34292  017002  EC97  F0BA         	call	_memcpy	;wreg free
 34293                           
 34294                           ;api.c: 495: memcpy(&outBuffer[13], &calibrationParameters[CALIBRATION_INDEX_EXTERNAL_TE
      +                          MPERATURE_1], 12);
 34295  017006  0E0D               	movlw	13
 34296  017008  0100               	movlb	0	; () banked
 34297  01700A  256B               	addwf	__fill_buffer_get_calibration2@outBuffer& (0+255),w,b
 34298  01700C  6F60               	movwf	memcpy@d1& (0+255),b
 34299  01700E  0E00               	movlw	0
 34300  017010  216C               	addwfc	(__fill_buffer_get_calibration2@outBuffer+1)& (0+255),w,b
 34301  017012  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 34302  017014  0E54               	movlw	low (_calibrationParameters+60)
 34303  017016  6F62               	movwf	memcpy@s1& (0+255),b
 34304  017018  0E03               	movlw	high (_calibrationParameters+60)
 34305  01701A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 34306  01701C  0E00               	movlw	0
 34307  01701E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 34308  017020  0E0C               	movlw	12
 34309  017022  6F64               	movwf	memcpy@n& (0+255),b
 34310  017024  EC97  F0BA         	call	_memcpy	;wreg free
 34311                           
 34312                           ;api.c: 496: memcpy(&outBuffer[25], &calibrationParameters[CALIBRATION_INDEX_EXTERNAL_TE
      +                          MPERATURE_2], 12);
 34313  017028  0E19               	movlw	25
 34314  01702A  0100               	movlb	0	; () banked
 34315  01702C  256B               	addwf	__fill_buffer_get_calibration2@outBuffer& (0+255),w,b
 34316  01702E  6F60               	movwf	memcpy@d1& (0+255),b
 34317  017030  0E00               	movlw	0
 34318  017032  216C               	addwfc	(__fill_buffer_get_calibration2@outBuffer+1)& (0+255),w,b
 34319  017034  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 34320  017036  0E60               	movlw	low (_calibrationParameters+72)
 34321  017038  6F62               	movwf	memcpy@s1& (0+255),b
 34322  01703A  0E03               	movlw	high (_calibrationParameters+72)
 34323  01703C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 34324  01703E  0E00               	movlw	0
 34325  017040  6F65               	movwf	(memcpy@n+1)& (0+255),b
 34326  017042  0E0C               	movlw	12
 34327  017044  6F64               	movwf	memcpy@n& (0+255),b
 34328  017046  EC97  F0BA         	call	_memcpy	;wreg free
 34329  01704A  0012               	return		;funcret
 34330  01704C                     __end_of__fill_buffer_get_calibration2:
 34331                           	opt stack 0
 34332                           tosu	equ	0xFFF
 34333                           tosh	equ	0xFFE
 34334                           tosl	equ	0xFFD
 34335                           pclath	equ	0xFFA
 34336                           tblptru	equ	0xFF8
 34337                           tblptrh	equ	0xFF7
 34338                           tblptrl	equ	0xFF6
 34339                           tablat	equ	0xFF5
 34340                           prodh	equ	0xFF4
 34341                           prodl	equ	0xFF3
 34342                           intcon	equ	0xFF2
 34343                           intcon2	equ	0xFF1
 34344                           intcon3	equ	0xFF0
 34345                           postinc0	equ	0xFEE
 34346                           wreg	equ	0xFE8
 34347                           indf1	equ	0xFE7
 34348                           postinc1	equ	0xFE6
 34349                           postdec1	equ	0xFE5
 34350                           plusw1	equ	0xFE3
 34351                           fsr1h	equ	0xFE2
 34352                           fsr1l	equ	0xFE1
 34353                           indf2	equ	0xFDF
 34354                           postinc2	equ	0xFDE
 34355                           postdec2	equ	0xFDD
 34356                           plusw2	equ	0xFDB
 34357                           fsr2h	equ	0xFDA
 34358                           fsr2l	equ	0xFD9
 34359                           status	equ	0xFD8
 34360                           
 34361 ;; *************** function __fill_buffer_get_calibration1 *****************
 34362 ;; Defined at:
 34363 ;;		line 477 in file "api.c"
 34364 ;; Parameters:    Size  Location     Type
 34365 ;;  outBuffer       2   11[BANK0 ] PTR unsigned char 
 34366 ;;		 -> ToSendDataBuffer(64), 
 34367 ;; Auto vars:     Size  Location     Type
 34368 ;;		None
 34369 ;; Return value:  Size  Location     Type
 34370 ;;                  1    wreg      void 
 34371 ;; Registers used:
 34372 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34373 ;; Tracked objects:
 34374 ;;		On entry : 0/0
 34375 ;;		On exit  : 0/0
 34376 ;;		Unchanged: 0/0
 34377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34378 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34381 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34382 ;;Total ram usage:        2 bytes
 34383 ;; Hardware stack levels used:    1
 34384 ;; Hardware stack levels required when called:   11
 34385 ;; This function calls:
 34386 ;;		_memcpy
 34387 ;; This function is called by:
 34388 ;;		_api_prepare
 34389 ;; This function uses a non-reentrant model
 34390 ;;
 34391                           
 34392                           	psect	text145
 34393  01634A                     __ptext145:
 34394                           	opt stack 0
 34395  01634A                     __fill_buffer_get_calibration1:
 34396                           	opt stack 17
 34397                           
 34398                           ;api.c: 480: outBuffer[0] = DATAREQUEST_GET_CALIBRATION_1;
 34399                           
 34400                           ;incstack = 0
 34401  01634A  C06B  FFD9         	movff	__fill_buffer_get_calibration1@outBuffer,fsr2l
 34402  01634E  C06C  FFDA         	movff	__fill_buffer_get_calibration1@outBuffer+1,fsr2h
 34403  016352  0E13               	movlw	19
 34404  016354  6EDF               	movwf	indf2,c
 34405                           
 34406                           ;api.c: 482: memcpy(&outBuffer[1], &calibrationParameters[CALIBRATION_INDEX_INPUT_VOLTAG
      +                          E], 12);
 34407  016356  0E01               	movlw	1
 34408  016358  0100               	movlb	0	; () banked
 34409  01635A  256B               	addwf	__fill_buffer_get_calibration1@outBuffer& (0+255),w,b
 34410  01635C  6F60               	movwf	memcpy@d1& (0+255),b
 34411  01635E  0E00               	movlw	0
 34412  016360  216C               	addwfc	(__fill_buffer_get_calibration1@outBuffer+1)& (0+255),w,b
 34413  016362  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 34414  016364  0E18               	movlw	low _calibrationParameters
 34415  016366  6F62               	movwf	memcpy@s1& (0+255),b
 34416  016368  0E03               	movlw	high _calibrationParameters
 34417  01636A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 34418  01636C  0E00               	movlw	0
 34419  01636E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 34420  016370  0E0C               	movlw	12
 34421  016372  6F64               	movwf	memcpy@n& (0+255),b
 34422  016374  EC97  F0BA         	call	_memcpy	;wreg free
 34423                           
 34424                           ;api.c: 483: memcpy(&outBuffer[13], &calibrationParameters[CALIBRATION_INDEX_OUTPUT_VOLT
      +                          AGE], 12);
 34425  016378  0E0D               	movlw	13
 34426  01637A  0100               	movlb	0	; () banked
 34427  01637C  256B               	addwf	__fill_buffer_get_calibration1@outBuffer& (0+255),w,b
 34428  01637E  6F60               	movwf	memcpy@d1& (0+255),b
 34429  016380  0E00               	movlw	0
 34430  016382  216C               	addwfc	(__fill_buffer_get_calibration1@outBuffer+1)& (0+255),w,b
 34431  016384  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 34432  016386  0E24               	movlw	low (_calibrationParameters+12)
 34433  016388  6F62               	movwf	memcpy@s1& (0+255),b
 34434  01638A  0E03               	movlw	high (_calibrationParameters+12)
 34435  01638C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 34436  01638E  0E00               	movlw	0
 34437  016390  6F65               	movwf	(memcpy@n+1)& (0+255),b
 34438  016392  0E0C               	movlw	12
 34439  016394  6F64               	movwf	memcpy@n& (0+255),b
 34440  016396  EC97  F0BA         	call	_memcpy	;wreg free
 34441                           
 34442                           ;api.c: 484: memcpy(&outBuffer[25], &calibrationParameters[CALIBRATION_INDEX_INPUT_CURRE
      +                          NT], 12);
 34443  01639A  0E19               	movlw	25
 34444  01639C  0100               	movlb	0	; () banked
 34445  01639E  256B               	addwf	__fill_buffer_get_calibration1@outBuffer& (0+255),w,b
 34446  0163A0  6F60               	movwf	memcpy@d1& (0+255),b
 34447  0163A2  0E00               	movlw	0
 34448  0163A4  216C               	addwfc	(__fill_buffer_get_calibration1@outBuffer+1)& (0+255),w,b
 34449  0163A6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 34450  0163A8  0E30               	movlw	low (_calibrationParameters+24)
 34451  0163AA  6F62               	movwf	memcpy@s1& (0+255),b
 34452  0163AC  0E03               	movlw	high (_calibrationParameters+24)
 34453  0163AE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 34454  0163B0  0E00               	movlw	0
 34455  0163B2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 34456  0163B4  0E0C               	movlw	12
 34457  0163B6  6F64               	movwf	memcpy@n& (0+255),b
 34458  0163B8  EC97  F0BA         	call	_memcpy	;wreg free
 34459                           
 34460                           ;api.c: 485: memcpy(&outBuffer[37], &calibrationParameters[CALIBRATION_INDEX_OUTPUT_CURR
      +                          ENT], 12);
 34461  0163BC  0E25               	movlw	37
 34462  0163BE  0100               	movlb	0	; () banked
 34463  0163C0  256B               	addwf	__fill_buffer_get_calibration1@outBuffer& (0+255),w,b
 34464  0163C2  6F60               	movwf	memcpy@d1& (0+255),b
 34465  0163C4  0E00               	movlw	0
 34466  0163C6  216C               	addwfc	(__fill_buffer_get_calibration1@outBuffer+1)& (0+255),w,b
 34467  0163C8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 34468  0163CA  0E3C               	movlw	low (_calibrationParameters+36)
 34469  0163CC  6F62               	movwf	memcpy@s1& (0+255),b
 34470  0163CE  0E03               	movlw	high (_calibrationParameters+36)
 34471  0163D0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 34472  0163D2  0E00               	movlw	0
 34473  0163D4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 34474  0163D6  0E0C               	movlw	12
 34475  0163D8  6F64               	movwf	memcpy@n& (0+255),b
 34476  0163DA  EC97  F0BA         	call	_memcpy	;wreg free
 34477  0163DE  0012               	return		;funcret
 34478  0163E0                     __end_of__fill_buffer_get_calibration1:
 34479                           	opt stack 0
 34480                           tosu	equ	0xFFF
 34481                           tosh	equ	0xFFE
 34482                           tosl	equ	0xFFD
 34483                           pclath	equ	0xFFA
 34484                           tblptru	equ	0xFF8
 34485                           tblptrh	equ	0xFF7
 34486                           tblptrl	equ	0xFF6
 34487                           tablat	equ	0xFF5
 34488                           prodh	equ	0xFF4
 34489                           prodl	equ	0xFF3
 34490                           intcon	equ	0xFF2
 34491                           intcon2	equ	0xFF1
 34492                           intcon3	equ	0xFF0
 34493                           postinc0	equ	0xFEE
 34494                           wreg	equ	0xFE8
 34495                           indf1	equ	0xFE7
 34496                           postinc1	equ	0xFE6
 34497                           postdec1	equ	0xFE5
 34498                           plusw1	equ	0xFE3
 34499                           fsr1h	equ	0xFE2
 34500                           fsr1l	equ	0xFE1
 34501                           indf2	equ	0xFDF
 34502                           postinc2	equ	0xFDE
 34503                           postdec2	equ	0xFDD
 34504                           plusw2	equ	0xFDB
 34505                           fsr2h	equ	0xFDA
 34506                           fsr2l	equ	0xFD9
 34507                           status	equ	0xFD8
 34508                           
 34509 ;; *************** function __fill_buffer_find_file *****************
 34510 ;; Defined at:
 34511 ;;		line 384 in file "api.c"
 34512 ;; Parameters:    Size  Location     Type
 34513 ;;  inBuffer        2   54[BANK0 ] PTR unsigned char 
 34514 ;;		 -> ReceivedDataBuffer(64), 
 34515 ;;  outBuffer       2   56[BANK0 ] PTR unsigned char 
 34516 ;;		 -> ToSendDataBuffer(64), 
 34517 ;; Auto vars:     Size  Location     Type
 34518 ;;  cntr            1   62[BANK0 ] unsigned char 
 34519 ;; Return value:  Size  Location     Type
 34520 ;;                  1    wreg      void 
 34521 ;; Registers used:
 34522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34523 ;; Tracked objects:
 34524 ;;		On entry : 0/0
 34525 ;;		On exit  : 0/0
 34526 ;;		Unchanged: 0/0
 34527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34528 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34529 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34530 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34531 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34532 ;;Total ram usage:        9 bytes
 34533 ;; Hardware stack levels used:    1
 34534 ;; Hardware stack levels required when called:   16
 34535 ;; This function calls:
 34536 ;;		_fat_find_file
 34537 ;; This function is called by:
 34538 ;;		_api_prepare
 34539 ;; This function uses a non-reentrant model
 34540 ;;
 34541                           
 34542                           	psect	text146
 34543  01686E                     __ptext146:
 34544                           	opt stack 0
 34545  01686E                     __fill_buffer_find_file:
 34546                           	opt stack 12
 34547                           
 34548                           ;api.c: 386: uint8_t cntr;;api.c: 389: outBuffer[0] = DATAREQUEST_FIND_FILE;
 34549                           
 34550                           ;incstack = 0
 34551  01686E  C098  FFD9         	movff	__fill_buffer_find_file@outBuffer,fsr2l
 34552  016872  C099  FFDA         	movff	__fill_buffer_find_file@outBuffer+1,fsr2h
 34553  016876  0E81               	movlw	129
 34554  016878  6EDF               	movwf	indf2,c
 34555                           
 34556                           ;api.c: 392: outBuffer[3] = fat_find_file(&inBuffer[1], &inBuffer[9]);
 34557  01687A  0E01               	movlw	1
 34558  01687C  0100               	movlb	0	; () banked
 34559  01687E  2596               	addwf	__fill_buffer_find_file@inBuffer& (0+255),w,b
 34560  016880  6F8B               	movwf	fat_find_file@name& (0+255),b
 34561  016882  0E00               	movlw	0
 34562  016884  2197               	addwfc	(__fill_buffer_find_file@inBuffer+1)& (0+255),w,b
 34563  016886  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 34564  016888  0E09               	movlw	9
 34565  01688A  2596               	addwf	__fill_buffer_find_file@inBuffer& (0+255),w,b
 34566  01688C  6F8D               	movwf	fat_find_file@extension& (0+255),b
 34567  01688E  0E00               	movlw	0
 34568  016890  2197               	addwfc	(__fill_buffer_find_file@inBuffer+1)& (0+255),w,b
 34569  016892  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 34570  016894  EC2B  F0A2         	call	_fat_find_file	;wreg free
 34571  016898  0100               	movlb	0	; () banked
 34572  01689A  6F9A               	movwf	??__fill_buffer_find_file& (0+255),b
 34573  01689C  EE20 F003          	lfsr	2,3
 34574  0168A0  5198               	movf	__fill_buffer_find_file@outBuffer& (0+255),w,b
 34575  0168A2  26D9               	addwf	fsr2l,f,c
 34576  0168A4  5199               	movf	(__fill_buffer_find_file@outBuffer+1)& (0+255),w,b
 34577  0168A6  22DA               	addwfc	fsr2h,f,c
 34578  0168A8  C09A  FFDF         	movff	??__fill_buffer_find_file,indf2
 34579                           
 34580                           ; BSR set to: 0
 34581                           ;api.c: 395: for(cntr=0; cntr<11; ++cntr)
 34582  0168AC  0E00               	movlw	0
 34583  0168AE  6F9E               	movwf	__fill_buffer_find_file@cntr& (0+255),b
 34584  0168B0                     l25645:
 34585                           
 34586                           ; BSR set to: 0
 34587  0168B0  0E0A               	movlw	10
 34588  0168B2  659E               	cpfsgt	__fill_buffer_find_file@cntr& (0+255),b
 34589  0168B4  D001               	goto	l3592
 34590  0168B6  0012               	return	
 34591  0168B8                     l3592:
 34592                           
 34593                           ; BSR set to: 0
 34594                           ;api.c: 396: {;api.c: 397: outBuffer[cntr+12] = inBuffer[cntr+1];
 34595                           
 34596                           ; BSR set to: 0
 34597  0168B8  519E               	movf	__fill_buffer_find_file@cntr& (0+255),w,b
 34598  0168BA  6F9A               	movwf	??__fill_buffer_find_file& (0+255),b
 34599  0168BC  6B9B               	clrf	(??__fill_buffer_find_file+1)& (0+255),b
 34600  0168BE  0E01               	movlw	1
 34601  0168C0  279A               	addwf	??__fill_buffer_find_file& (0+255),f,b
 34602  0168C2  0E00               	movlw	0
 34603  0168C4  239B               	addwfc	(??__fill_buffer_find_file+1)& (0+255),f,b
 34604  0168C6  519A               	movf	??__fill_buffer_find_file& (0+255),w,b
 34605  0168C8  2596               	addwf	__fill_buffer_find_file@inBuffer& (0+255),w,b
 34606  0168CA  6ED9               	movwf	fsr2l,c
 34607  0168CC  519B               	movf	(??__fill_buffer_find_file+1)& (0+255),w,b
 34608  0168CE  2197               	addwfc	(__fill_buffer_find_file@inBuffer+1)& (0+255),w,b
 34609  0168D0  6EDA               	movwf	fsr2h,c
 34610  0168D2  519E               	movf	__fill_buffer_find_file@cntr& (0+255),w,b
 34611  0168D4  6F9C               	movwf	(??__fill_buffer_find_file+2)& (0+255),b
 34612  0168D6  6B9D               	clrf	(??__fill_buffer_find_file+3)& (0+255),b
 34613  0168D8  0E0C               	movlw	12
 34614  0168DA  279C               	addwf	(??__fill_buffer_find_file+2)& (0+255),f,b
 34615  0168DC  0E00               	movlw	0
 34616  0168DE  239D               	addwfc	(??__fill_buffer_find_file+3)& (0+255),f,b
 34617  0168E0  519C               	movf	(??__fill_buffer_find_file+2)& (0+255),w,b
 34618  0168E2  2598               	addwf	__fill_buffer_find_file@outBuffer& (0+255),w,b
 34619  0168E4  6EE1               	movwf	fsr1l,c
 34620  0168E6  519D               	movf	(??__fill_buffer_find_file+3)& (0+255),w,b
 34621  0168E8  2199               	addwfc	(__fill_buffer_find_file@outBuffer+1)& (0+255),w,b
 34622  0168EA  6EE2               	movwf	fsr1h,c
 34623  0168EC  CFDF FFE7          	movff	indf2,indf1
 34624                           
 34625                           ; BSR set to: 0
 34626  0168F0  2B9E               	incf	__fill_buffer_find_file@cntr& (0+255),f,b
 34627  0168F2  D7DE               	goto	l25645
 34628  0168F4                     __end_of__fill_buffer_find_file:
 34629                           	opt stack 0
 34630                           tosu	equ	0xFFF
 34631                           tosh	equ	0xFFE
 34632                           tosl	equ	0xFFD
 34633                           pclath	equ	0xFFA
 34634                           tblptru	equ	0xFF8
 34635                           tblptrh	equ	0xFF7
 34636                           tblptrl	equ	0xFF6
 34637                           tablat	equ	0xFF5
 34638                           prodh	equ	0xFF4
 34639                           prodl	equ	0xFF3
 34640                           intcon	equ	0xFF2
 34641                           intcon2	equ	0xFF1
 34642                           intcon3	equ	0xFF0
 34643                           postinc0	equ	0xFEE
 34644                           wreg	equ	0xFE8
 34645                           indf1	equ	0xFE7
 34646                           postinc1	equ	0xFE6
 34647                           postdec1	equ	0xFE5
 34648                           plusw1	equ	0xFE3
 34649                           fsr1h	equ	0xFE2
 34650                           fsr1l	equ	0xFE1
 34651                           indf2	equ	0xFDF
 34652                           postinc2	equ	0xFDE
 34653                           postdec2	equ	0xFDD
 34654                           plusw2	equ	0xFDB
 34655                           fsr2h	equ	0xFDA
 34656                           fsr2l	equ	0xFD9
 34657                           status	equ	0xFD8
 34658                           
 34659 ;; *************** function _api_parse *****************
 34660 ;; Defined at:
 34661 ;;		line 150 in file "api.c"
 34662 ;; Parameters:    Size  Location     Type
 34663 ;;  inBuffer        2    6[BANK1 ] PTR unsigned char 
 34664 ;;		 -> ReceivedDataBuffer(64), 
 34665 ;;  receivedData    1    8[BANK1 ] unsigned char 
 34666 ;;  outBuffer       2    9[BANK1 ] PTR unsigned char 
 34667 ;;		 -> ToSendDataBuffer(64), 
 34668 ;; Auto vars:     Size  Location     Type
 34669 ;;  out_idx_ptr     2   11[BANK1 ] PTR unsigned char 
 34670 ;;		 -> api_parse@out_idx(1), 
 34671 ;;  out_idx         1   14[BANK1 ] unsigned char 
 34672 ;;  in_idx          1   13[BANK1 ] unsigned char 
 34673 ;; Return value:  Size  Location     Type
 34674 ;;                  1    wreg      void 
 34675 ;; Registers used:
 34676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34677 ;; Tracked objects:
 34678 ;;		On entry : 0/0
 34679 ;;		On exit  : 0/0
 34680 ;;		Unchanged: 0/0
 34681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34682 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34683 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34684 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34685 ;;      Totals:         0       2       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34686 ;;Total ram usage:       11 bytes
 34687 ;; Hardware stack levels used:    1
 34688 ;; Hardware stack levels required when called:   21
 34689 ;; This function calls:
 34690 ;;		__parse_command_long
 34691 ;;		__parse_command_short
 34692 ;; This function is called by:
 34693 ;;		_APP_DeviceCustomHIDTasks
 34694 ;; This function uses a non-reentrant model
 34695 ;;
 34696                           
 34697                           	psect	text147
 34698  011AB2                     __ptext147:
 34699                           	opt stack 0
 34700  011AB2                     _api_parse:
 34701                           	opt stack 8
 34702                           
 34703                           ;api.c: 154: uint8_t in_idx;;api.c: 155: uint8_t out_idx;;api.c: 156: uint8_t *out_idx_p
      +                          tr;;api.c: 158: out_idx = 0;
 34704                           
 34705                           ; BSR set to: 0
 34706                           ;incstack = 0
 34707  011AB2  0E00               	movlw	0
 34708  011AB4  0101               	movlb	1	; () banked
 34709  011AB6  6F0E               	movwf	api_parse@out_idx& (0+255),b
 34710                           
 34711                           ; BSR set to: 1
 34712                           ;api.c: 159: out_idx_ptr = &out_idx;
 34713  011AB8  0E0E               	movlw	low api_parse@out_idx
 34714  011ABA  6F0B               	movwf	api_parse@out_idx_ptr& (0+255),b
 34715  011ABC  0E01               	movlw	high api_parse@out_idx
 34716  011ABE  6F0C               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 34717                           
 34718                           ; BSR set to: 1
 34719                           ;api.c: 161: if(inBuffer[0]>0x7F)
 34720  011AC0  C106  FFD9         	movff	api_parse@inBuffer,fsr2l
 34721  011AC4  C107  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 34722  011AC8  0E7F               	movlw	127
 34723  011ACA  64DF               	cpfsgt	indf2,c
 34724  011ACC  D001               	goto	l3549
 34725  011ACE  0012               	return	
 34726  011AD0                     l3549:
 34727                           
 34728                           ; BSR set to: 1
 34729                           ;api.c: 166: };api.c: 168: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 34730                           
 34731                           ; BSR set to: 1
 34732  011AD0  C106  FFD9         	movff	api_parse@inBuffer,fsr2l
 34733  011AD4  C107  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 34734  011AD8  0E20               	movlw	32
 34735  011ADA  18DE               	xorwf	postinc2,w,c
 34736  011ADC  B4D8               	btfsc	status,2,c
 34737  011ADE  0012               	return	
 34738                           
 34739                           ; BSR set to: 1
 34740                           ;api.c: 173: };api.c: 175: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 34741                           
 34742                           ; BSR set to: 1
 34743                           
 34744                           ; BSR set to: 1
 34745                           ;api.c: 169: {;api.c: 172: return;
 34746  011AE0  C106  FFD9         	movff	api_parse@inBuffer,fsr2l
 34747  011AE4  C107  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 34748  011AE8  50DF               	movf	indf2,w,c
 34749  011AEA  A4D8               	btfss	status,2,c
 34750  011AEC  D008               	goto	l3552
 34751                           
 34752                           ; BSR set to: 1
 34753                           ;api.c: 176: {;api.c: 178: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 34754  011AEE  C109  FFD9         	movff	api_parse@outBuffer,fsr2l
 34755  011AF2  C10A  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 34756  011AF6  0E00               	movlw	0
 34757  011AF8  6EDF               	movwf	indf2,c
 34758                           
 34759                           ; BSR set to: 1
 34760                           ;api.c: 181: out_idx = 3;
 34761  011AFA  0E03               	movlw	3
 34762  011AFC  6F0E               	movwf	api_parse@out_idx& (0+255),b
 34763  011AFE                     l3552:
 34764                           
 34765                           ; BSR set to: 1
 34766                           ;api.c: 182: };api.c: 184: in_idx = 1;
 34767                           
 34768                           ; BSR set to: 1
 34769  011AFE  0E01               	movlw	1
 34770  011B00  6F0D               	movwf	api_parse@in_idx& (0+255),b
 34771                           
 34772                           ;api.c: 185: while(in_idx<receivedDataLength)
 34773  011B02  D089               	goto	l3558
 34774  011B04                     
 34775                           ; BSR set to: 1
 34776                           ;api.c: 186: {;api.c: 188: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 34777                           
 34778                           ; BSR set to: 1
 34779  011B04  510D               	movf	api_parse@in_idx& (0+255),w,b
 34780  011B06  0D01               	mullw	1
 34781  011B08  50F3               	movf	prodl,w,c
 34782  011B0A  2506               	addwf	api_parse@inBuffer& (0+255),w,b
 34783  011B0C  6ED9               	movwf	fsr2l,c
 34784  011B0E  50F4               	movf	prodh,w,c
 34785  011B10  2107               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 34786  011B12  6EDA               	movwf	fsr2h,c
 34787  011B14  0E99               	movlw	153
 34788  011B16  18DE               	xorwf	postinc2,w,c
 34789  011B18  B4D8               	btfsc	status,2,c
 34790  011B1A  0012               	return	
 34791  011B1C  D05A               	goto	l3556
 34792  011B1E                     
 34793                           ;api.c: 196: _parse_command_short(inBuffer[in_idx]);
 34794                           
 34795                           ; BSR set to: 1
 34796  011B1E  0101               	movlb	1	; () banked
 34797  011B20  510D               	movf	api_parse@in_idx& (0+255),w,b
 34798  011B22  0D01               	mullw	1
 34799  011B24  50F3               	movf	prodl,w,c
 34800  011B26  2506               	addwf	api_parse@inBuffer& (0+255),w,b
 34801  011B28  6ED9               	movwf	fsr2l,c
 34802  011B2A  50F4               	movf	prodh,w,c
 34803  011B2C  2107               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 34804  011B2E  6EDA               	movwf	fsr2h,c
 34805  011B30  50DF               	movf	indf2,w,c
 34806  011B32  ECC6  F0A0         	call	__parse_command_short
 34807  011B36  D00C               	goto	l26401
 34808  011B38                     
 34809                           ;api.c: 201: _parse_command_short(inBuffer[in_idx]);
 34810                           
 34811                           ; BSR set to: 1
 34812  011B38  0101               	movlb	1	; () banked
 34813  011B3A  510D               	movf	api_parse@in_idx& (0+255),w,b
 34814  011B3C  0D01               	mullw	1
 34815  011B3E  50F3               	movf	prodl,w,c
 34816  011B40  2506               	addwf	api_parse@inBuffer& (0+255),w,b
 34817  011B42  6ED9               	movwf	fsr2l,c
 34818  011B44  50F4               	movf	prodh,w,c
 34819  011B46  2107               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 34820  011B48  6EDA               	movwf	fsr2h,c
 34821  011B4A  50DF               	movf	indf2,w,c
 34822  011B4C  ECC6  F0A0         	call	__parse_command_short
 34823  011B50                     l26401:
 34824                           
 34825                           ;api.c: 202: ++in_idx;
 34826  011B50  0101               	movlb	1	; () banked
 34827  011B52  2B0D               	incf	api_parse@in_idx& (0+255),f,b
 34828                           
 34829                           ;api.c: 203: break;
 34830  011B54  D060               	goto	l3558
 34831  011B56                     
 34832                           ;api.c: 206: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 34833                           
 34834                           ; BSR set to: 1
 34835  011B56  0101               	movlb	1	; () banked
 34836  011B58  510D               	movf	api_parse@in_idx& (0+255),w,b
 34837  011B5A  0D01               	mullw	1
 34838  011B5C  50F3               	movf	prodl,w,c
 34839  011B5E  2506               	addwf	api_parse@inBuffer& (0+255),w,b
 34840  011B60  6F00               	movwf	__parse_command_long@data& (0+255),b
 34841  011B62  50F4               	movf	prodh,w,c
 34842  011B64  2107               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 34843  011B66  6F01               	movwf	(__parse_command_long@data+1)& (0+255),b
 34844  011B68  C109  F102         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 34845  011B6C  C10A  F103         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 34846  011B70  C10B  F104         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 34847  011B74  C10C  F105         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 34848  011B78  ECC6  F069         	call	__parse_command_long	;wreg free
 34849  011B7C  D027               	goto	L37
 34850  011B7E                     
 34851                           ;api.c: 210: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 34852                           
 34853                           ; BSR set to: 1
 34854  011B7E  0101               	movlb	1	; () banked
 34855  011B80  510D               	movf	api_parse@in_idx& (0+255),w,b
 34856  011B82  0D01               	mullw	1
 34857  011B84  50F3               	movf	prodl,w,c
 34858  011B86  2506               	addwf	api_parse@inBuffer& (0+255),w,b
 34859  011B88  6F00               	movwf	__parse_command_long@data& (0+255),b
 34860  011B8A  50F4               	movf	prodh,w,c
 34861  011B8C  2107               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 34862  011B8E  6F01               	movwf	(__parse_command_long@data+1)& (0+255),b
 34863  011B90  C109  F102         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 34864  011B94  C10A  F103         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 34865  011B98  C10B  F104         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 34866  011B9C  C10C  F105         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 34867  011BA0  ECC6  F069         	call	__parse_command_long	;wreg free
 34868  011BA4  D013               	goto	L37
 34869  011BA6                     
 34870                           ;api.c: 214: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 34871                           
 34872                           ; BSR set to: 1
 34873  011BA6  0101               	movlb	1	; () banked
 34874  011BA8  510D               	movf	api_parse@in_idx& (0+255),w,b
 34875  011BAA  0D01               	mullw	1
 34876  011BAC  50F3               	movf	prodl,w,c
 34877  011BAE  2506               	addwf	api_parse@inBuffer& (0+255),w,b
 34878  011BB0  6F00               	movwf	__parse_command_long@data& (0+255),b
 34879  011BB2  50F4               	movf	prodh,w,c
 34880  011BB4  2107               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 34881  011BB6  6F01               	movwf	(__parse_command_long@data+1)& (0+255),b
 34882  011BB8  C109  F102         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 34883  011BBC  C10A  F103         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 34884  011BC0  C10B  F104         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 34885  011BC4  C10C  F105         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 34886  011BC8  ECC6  F069         	call	__parse_command_long	;wreg free
 34887  011BCC                     L37:
 34888  011BCC  0101               	movlb	1	; () banked
 34889  011BCE  270D               	addwf	api_parse@in_idx& (0+255),f,b
 34890                           
 34891                           ;api.c: 215: break;
 34892  011BD0  D022               	goto	l3558
 34893  011BD2                     l3556:
 34894                           
 34895                           ; BSR set to: 1
 34896                           
 34897                           ; BSR set to: 1
 34898  011BD2  510D               	movf	api_parse@in_idx& (0+255),w,b
 34899  011BD4  0D01               	mullw	1
 34900  011BD6  50F3               	movf	prodl,w,c
 34901  011BD8  2506               	addwf	api_parse@inBuffer& (0+255),w,b
 34902  011BDA  6ED9               	movwf	fsr2l,c
 34903  011BDC  50F4               	movf	prodh,w,c
 34904  011BDE  2107               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 34905  011BE0  6EDA               	movwf	fsr2h,c
 34906  011BE2  50DF               	movf	indf2,w,c
 34907  011BE4  0BF0               	andlw	240
 34908  011BE6  0100               	movlb	0	; () banked
 34909  011BE8  6FFD               	movwf	??_api_parse& (0+255),b
 34910  011BEA  6BFE               	clrf	(??_api_parse+1)& (0+255),b
 34911                           
 34912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34913                           ; Switch size 1, requested type "space"
 34914                           ; Number of cases is 1, Range of values is 0 to 0
 34915                           ; switch strategies available:
 34916                           ; Name         Instructions Cycles
 34917                           ; simple_byte            4     3 (average)
 34918                           ;	Chosen strategy is simple_byte
 34919  011BEC  51FE               	movf	(??_api_parse+1)& (0+255),w,b
 34920  011BEE  0A00               	xorlw	0	; case 0
 34921  011BF0  A4D8               	btfss	status,2,c
 34922  011BF2  0012               	return	
 34923                           
 34924                           ; BSR set to: 0
 34925                           ; Switch size 1, requested type "space"
 34926                           ; Number of cases is 5, Range of values is 32 to 96
 34927                           ; switch strategies available:
 34928                           ; Name         Instructions Cycles
 34929                           ; simple_byte           16     9 (average)
 34930                           ;	Chosen strategy is simple_byte
 34931  011BF4  51FD               	movf	??_api_parse& (0+255),w,b
 34932  011BF6  0A20               	xorlw	32	; case 32
 34933  011BF8  B4D8               	btfsc	status,2,c
 34934  011BFA  D791               	goto	l3557
 34935  011BFC  0A10               	xorlw	16	; case 48
 34936  011BFE  B4D8               	btfsc	status,2,c
 34937  011C00  D79B               	goto	l3559
 34938  011C02  0A70               	xorlw	112	; case 64
 34939  011C04  B4D8               	btfsc	status,2,c
 34940  011C06  D7A7               	goto	l3560
 34941  011C08  0A10               	xorlw	16	; case 80
 34942  011C0A  B4D8               	btfsc	status,2,c
 34943  011C0C  D7B8               	goto	l3561
 34944  011C0E  0A30               	xorlw	48	; case 96
 34945  011C10  A4D8               	btfss	status,2,c
 34946  011C12  0012               	return	
 34947  011C14  D7C8               	goto	l3562
 34948  011C16                     l3558:
 34949                           
 34950                           ; BSR set to: 0
 34951                           
 34952                           ; BSR set to: 0
 34953  011C16  0101               	movlb	1	; () banked
 34954  011C18  5108               	movf	api_parse@receivedDataLength& (0+255),w,b
 34955  011C1A  5D0D               	subwf	api_parse@in_idx& (0+255),w,b
 34956  011C1C  B0D8               	btfsc	status,0,c
 34957  011C1E  0012               	return	
 34958  011C20  D771               	goto	l3554
 34959  011C22                     __end_of_api_parse:
 34960                           	opt stack 0
 34961                           tosu	equ	0xFFF
 34962                           tosh	equ	0xFFE
 34963                           tosl	equ	0xFFD
 34964                           pclath	equ	0xFFA
 34965                           tblptru	equ	0xFF8
 34966                           tblptrh	equ	0xFF7
 34967                           tblptrl	equ	0xFF6
 34968                           tablat	equ	0xFF5
 34969                           prodh	equ	0xFF4
 34970                           prodl	equ	0xFF3
 34971                           intcon	equ	0xFF2
 34972                           intcon2	equ	0xFF1
 34973                           intcon3	equ	0xFF0
 34974                           postinc0	equ	0xFEE
 34975                           wreg	equ	0xFE8
 34976                           indf1	equ	0xFE7
 34977                           postinc1	equ	0xFE6
 34978                           postdec1	equ	0xFE5
 34979                           plusw1	equ	0xFE3
 34980                           fsr1h	equ	0xFE2
 34981                           fsr1l	equ	0xFE1
 34982                           indf2	equ	0xFDF
 34983                           postinc2	equ	0xFDE
 34984                           postdec2	equ	0xFDD
 34985                           plusw2	equ	0xFDB
 34986                           fsr2h	equ	0xFDA
 34987                           fsr2l	equ	0xFD9
 34988                           status	equ	0xFD8
 34989                           
 34990 ;; *************** function __parse_command_short *****************
 34991 ;; Defined at:
 34992 ;;		line 499 in file "api.c"
 34993 ;; Parameters:    Size  Location     Type
 34994 ;;  cmd             1    wreg     unsigned char 
 34995 ;; Auto vars:     Size  Location     Type
 34996 ;;  cmd             1   43[BANK0 ] unsigned char 
 34997 ;; Return value:  Size  Location     Type
 34998 ;;                  1    wreg      void 
 34999 ;; Registers used:
 35000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35001 ;; Tracked objects:
 35002 ;;		On entry : 0/0
 35003 ;;		On exit  : 0/0
 35004 ;;		Unchanged: 0/0
 35005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35007 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35009 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35010 ;;Total ram usage:        1 bytes
 35011 ;; Hardware stack levels used:    1
 35012 ;; Hardware stack levels required when called:   14
 35013 ;; This function calls:
 35014 ;;		_reboot
 35015 ;;		_rtcc_write_eeprom
 35016 ;;		_system_output_off
 35017 ;;		_system_output_on
 35018 ;; This function is called by:
 35019 ;;		_api_parse
 35020 ;; This function uses a non-reentrant model
 35021 ;;
 35022                           
 35023                           	psect	text148
 35024  01418C                     __ptext148:
 35025                           	opt stack 0
 35026  01418C                     __parse_command_short:
 35027                           	opt stack 14
 35028                           
 35029                           ;incstack = 0
 35030                           ;__parse_command_short@cmd stored from wreg
 35031  01418C  0100               	movlb	0	; () banked
 35032  01418E  6F8B               	movwf	__parse_command_short@cmd& (0+255),b
 35033                           
 35034                           ;api.c: 501: switch(cmd)
 35035  014190  D03F               	goto	l3611
 35036  014192                     
 35037                           ;api.c: 504: reboot();
 35038  014192  EC90  F0C8         	call	_reboot	;wreg free
 35039                           
 35040                           ;api.c: 505: break;
 35041  014196  0012               	return	
 35042  014198                     
 35043                           ;api.c: 508: system_output_off(OUTPUT_1);
 35044  014198  0E01               	movlw	1
 35045  01419A  ECC5  F0BD         	call	_system_output_off
 35046                           
 35047                           ;api.c: 509: break;
 35048  01419E  0012               	return	
 35049  0141A0                     
 35050                           ;api.c: 512: system_output_on(OUTPUT_1);
 35051  0141A0  0E01               	movlw	1
 35052  0141A2  ECDD  F0BF         	call	_system_output_on
 35053                           
 35054                           ;api.c: 513: break;
 35055  0141A6  0012               	return	
 35056  0141A8                     
 35057                           ;api.c: 516: system_output_off(OUTPUT_2);
 35058  0141A8  0E02               	movlw	2
 35059  0141AA  ECC5  F0BD         	call	_system_output_off
 35060                           
 35061                           ;api.c: 517: break;
 35062  0141AE  0012               	return	
 35063  0141B0                     
 35064                           ;api.c: 520: system_output_on(OUTPUT_2);
 35065  0141B0  0E02               	movlw	2
 35066  0141B2  ECDD  F0BF         	call	_system_output_on
 35067                           
 35068                           ;api.c: 521: break;
 35069  0141B6  0012               	return	
 35070  0141B8                     
 35071                           ;api.c: 524: system_output_off(OUTPUT_3);
 35072  0141B8  0E04               	movlw	4
 35073  0141BA  ECC5  F0BD         	call	_system_output_off
 35074                           
 35075                           ;api.c: 525: break;
 35076  0141BE  0012               	return	
 35077  0141C0                     
 35078                           ;api.c: 528: system_output_on(OUTPUT_3);
 35079  0141C0  0E04               	movlw	4
 35080  0141C2  ECDD  F0BF         	call	_system_output_on
 35081                           
 35082                           ;api.c: 529: break;
 35083  0141C6  0012               	return	
 35084  0141C8                     
 35085                           ;api.c: 532: system_output_off(OUTPUT_4);
 35086  0141C8  0E08               	movlw	8
 35087  0141CA  ECC5  F0BD         	call	_system_output_off
 35088                           
 35089                           ;api.c: 533: break;
 35090  0141CE  0012               	return	
 35091  0141D0                     
 35092                           ;api.c: 536: system_output_on(OUTPUT_4);
 35093  0141D0  0E08               	movlw	8
 35094  0141D2  ECDD  F0BF         	call	_system_output_on
 35095                           
 35096                           ;api.c: 537: break;
 35097  0141D6  0012               	return	
 35098  0141D8                     
 35099                           ;api.c: 540: system_output_off(OUTPUT_USB);
 35100  0141D8  0E10               	movlw	16
 35101  0141DA  ECC5  F0BD         	call	_system_output_off
 35102                           
 35103                           ;api.c: 541: break;
 35104  0141DE  0012               	return	
 35105  0141E0                     
 35106                           ;api.c: 544: system_output_on(OUTPUT_USB);
 35107  0141E0  0E10               	movlw	16
 35108  0141E2  ECDD  F0BF         	call	_system_output_on
 35109                           
 35110                           ;api.c: 545: break;
 35111  0141E6  0012               	return	
 35112  0141E8                     
 35113                           ;api.c: 548: system_output_off(OUTPUT_FAN);
 35114  0141E8  0E20               	movlw	32
 35115  0141EA  ECC5  F0BD         	call	_system_output_off
 35116                           
 35117                           ;api.c: 549: break;
 35118  0141EE  0012               	return	
 35119  0141F0                     
 35120                           ;api.c: 552: system_output_on(OUTPUT_FAN);
 35121  0141F0  0E20               	movlw	32
 35122  0141F2  ECDD  F0BF         	call	_system_output_on
 35123                           
 35124                           ;api.c: 553: break;
 35125  0141F6  0012               	return	
 35126  0141F8                     
 35127                           ;api.c: 556: --os.encoderCount;
 35128  0141F8  0102               	movlb	2	; () banked
 35129  0141FA  0706               	decf	(_os+6)& (0+255),f,b	;volatile
 35130                           
 35131                           ;api.c: 557: break;
 35132  0141FC  0012               	return	
 35133  0141FE                     
 35134                           ;api.c: 560: ++os.encoderCount;
 35135                           
 35136                           ; BSR set to: 2
 35137  0141FE  0102               	movlb	2	; () banked
 35138  014200  2B06               	incf	(_os+6)& (0+255),f,b	;volatile
 35139                           
 35140                           ;api.c: 561: break;
 35141  014202  0012               	return	
 35142  014204                     
 35143                           ;api.c: 564: ++os.buttonCount;
 35144                           
 35145                           ; BSR set to: 2
 35146  014204  0102               	movlb	2	; () banked
 35147  014206  2B07               	incf	(_os+7)& (0+255),f,b	;volatile
 35148                           
 35149                           ;api.c: 565: break;
 35150  014208  0012               	return	
 35151  01420A                     
 35152                           ;api.c: 568: rtcc_write_eeprom();
 35153                           
 35154                           ; BSR set to: 2
 35155  01420A  EC4F  F0C0         	call	_rtcc_write_eeprom	;wreg free
 35156                           
 35157                           ;api.c: 570: }
 35158                           
 35159                           ;api.c: 569: break;
 35160  01420E  0012               	return	
 35161  014210                     l3611:
 35162  014210  0100               	movlb	0	; () banked
 35163  014212  518B               	movf	__parse_command_short@cmd& (0+255),w,b
 35164                           
 35165                           ; Switch size 1, requested type "space"
 35166                           ; Number of cases is 17, Range of values is 32 to 63
 35167                           ; switch strategies available:
 35168                           ; Name         Instructions Cycles
 35169                           ; simple_byte           52    27 (average)
 35170                           ;	Chosen strategy is simple_byte
 35171  014214  0A20               	xorlw	32	; case 32
 35172  014216  B4D8               	btfsc	status,2,c
 35173  014218  D7BC               	goto	l3612
 35174  01421A  0A10               	xorlw	16	; case 48
 35175  01421C  B4D8               	btfsc	status,2,c
 35176  01421E  D7BC               	goto	l3614
 35177  014220  0A01               	xorlw	1	; case 49
 35178  014222  B4D8               	btfsc	status,2,c
 35179  014224  D7BD               	goto	l3615
 35180  014226  0A03               	xorlw	3	; case 50
 35181  014228  B4D8               	btfsc	status,2,c
 35182  01422A  D7BE               	goto	l3616
 35183  01422C  0A01               	xorlw	1	; case 51
 35184  01422E  B4D8               	btfsc	status,2,c
 35185  014230  D7BF               	goto	l3617
 35186  014232  0A07               	xorlw	7	; case 52
 35187  014234  B4D8               	btfsc	status,2,c
 35188  014236  D7C0               	goto	l3618
 35189  014238  0A01               	xorlw	1	; case 53
 35190  01423A  B4D8               	btfsc	status,2,c
 35191  01423C  D7C1               	goto	l3619
 35192  01423E  0A03               	xorlw	3	; case 54
 35193  014240  B4D8               	btfsc	status,2,c
 35194  014242  D7C2               	goto	l3620
 35195  014244  0A01               	xorlw	1	; case 55
 35196  014246  B4D8               	btfsc	status,2,c
 35197  014248  D7C3               	goto	l3621
 35198  01424A  0A0F               	xorlw	15	; case 56
 35199  01424C  B4D8               	btfsc	status,2,c
 35200  01424E  D7C4               	goto	l3622
 35201  014250  0A01               	xorlw	1	; case 57
 35202  014252  B4D8               	btfsc	status,2,c
 35203  014254  D7C5               	goto	l3623
 35204  014256  0A03               	xorlw	3	; case 58
 35205  014258  B4D8               	btfsc	status,2,c
 35206  01425A  D7C6               	goto	l3624
 35207  01425C  0A01               	xorlw	1	; case 59
 35208  01425E  B4D8               	btfsc	status,2,c
 35209  014260  D7C7               	goto	l3625
 35210  014262  0A07               	xorlw	7	; case 60
 35211  014264  B4D8               	btfsc	status,2,c
 35212  014266  D7C8               	goto	l3626
 35213  014268  0A01               	xorlw	1	; case 61
 35214  01426A  B4D8               	btfsc	status,2,c
 35215  01426C  D7C8               	goto	l3627
 35216  01426E  0A03               	xorlw	3	; case 62
 35217  014270  B4D8               	btfsc	status,2,c
 35218  014272  D7C8               	goto	l3628
 35219  014274  0A01               	xorlw	1	; case 63
 35220  014276  A4D8               	btfss	status,2,c
 35221  014278  0012               	return	
 35222  01427A  D7C7               	goto	l3629
 35223  01427C                     __end_of__parse_command_short:
 35224                           	opt stack 0
 35225                           tosu	equ	0xFFF
 35226                           tosh	equ	0xFFE
 35227                           tosl	equ	0xFFD
 35228                           pclath	equ	0xFFA
 35229                           tblptru	equ	0xFF8
 35230                           tblptrh	equ	0xFF7
 35231                           tblptrl	equ	0xFF6
 35232                           tablat	equ	0xFF5
 35233                           prodh	equ	0xFF4
 35234                           prodl	equ	0xFF3
 35235                           intcon	equ	0xFF2
 35236                           intcon2	equ	0xFF1
 35237                           intcon3	equ	0xFF0
 35238                           postinc0	equ	0xFEE
 35239                           wreg	equ	0xFE8
 35240                           indf1	equ	0xFE7
 35241                           postinc1	equ	0xFE6
 35242                           postdec1	equ	0xFE5
 35243                           plusw1	equ	0xFE3
 35244                           fsr1h	equ	0xFE2
 35245                           fsr1l	equ	0xFE1
 35246                           indf2	equ	0xFDF
 35247                           postinc2	equ	0xFDE
 35248                           postdec2	equ	0xFDD
 35249                           plusw2	equ	0xFDB
 35250                           fsr2h	equ	0xFDA
 35251                           fsr2l	equ	0xFD9
 35252                           status	equ	0xFD8
 35253                           
 35254 ;; *************** function _system_output_on *****************
 35255 ;; Defined at:
 35256 ;;		line 508 in file "os.c"
 35257 ;; Parameters:    Size  Location     Type
 35258 ;;  output          1    wreg     enum E6793
 35259 ;; Auto vars:     Size  Location     Type
 35260 ;;  output          1    0[BANK0 ] enum E6793
 35261 ;; Return value:  Size  Location     Type
 35262 ;;                  1    wreg      void 
 35263 ;; Registers used:
 35264 ;;		wreg, status,2, status,0
 35265 ;; Tracked objects:
 35266 ;;		On entry : 0/0
 35267 ;;		On exit  : 0/0
 35268 ;;		Unchanged: 0/0
 35269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35271 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35273 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35274 ;;Total ram usage:        1 bytes
 35275 ;; Hardware stack levels used:    1
 35276 ;; Hardware stack levels required when called:   10
 35277 ;; This function calls:
 35278 ;;		Nothing
 35279 ;; This function is called by:
 35280 ;;		_system_output_toggle
 35281 ;;		__ui_encoder
 35282 ;;		__parse_command_short
 35283 ;; This function uses a non-reentrant model
 35284 ;;
 35285                           
 35286                           	psect	text149
 35287  017FBA                     __ptext149:
 35288                           	opt stack 0
 35289  017FBA                     _system_output_on:
 35290                           	opt stack 17
 35291                           
 35292                           ;incstack = 0
 35293                           ;system_output_on@output stored from wreg
 35294  017FBA  0100               	movlb	0	; () banked
 35295  017FBC  6F60               	movwf	system_output_on@output& (0+255),b
 35296                           
 35297                           ;os.c: 511: os.outputs |= output;
 35298  017FBE  0100               	movlb	0	; () banked
 35299  017FC0  5160               	movf	system_output_on@output& (0+255),w,b
 35300  017FC2  0102               	movlb	2	; () banked
 35301  017FC4  1305               	iorwf	(_os+5)& (0+255),f,b	;volatile
 35302                           
 35303                           ;os.c: 514: switch(output)
 35304  017FC6  D00E               	goto	l1206
 35305  017FC8                     l1207:
 35306                           
 35307                           ; BSR set to: 0
 35308                           ;os.c: 517: LATCbits.LC7 = 1;
 35309  017FC8  8E8B               	bsf	3979,7,c	;volatile
 35310                           
 35311                           ;os.c: 518: LATEbits.LE2 = 0;
 35312  017FCA  948D               	bcf	3981,2,c	;volatile
 35313                           
 35314                           ;os.c: 519: break;
 35315  017FCC  0012               	return	
 35316  017FCE                     l1209:
 35317                           
 35318                           ; BSR set to: 0
 35319                           ;os.c: 521: LATCbits.LC7 = 1;
 35320  017FCE  8E8B               	bsf	3979,7,c	;volatile
 35321                           
 35322                           ;os.c: 522: LATEbits.LE1 = 0;
 35323  017FD0  928D               	bcf	3981,1,c	;volatile
 35324                           
 35325                           ;os.c: 523: break;
 35326  017FD2  0012               	return	
 35327  017FD4                     l1210:
 35328                           
 35329                           ; BSR set to: 0
 35330                           ;os.c: 525: LATCbits.LC7 = 1;
 35331  017FD4  8E8B               	bsf	3979,7,c	;volatile
 35332                           
 35333                           ;os.c: 526: LATEbits.LE0 = 0;
 35334  017FD6  908D               	bcf	3981,0,c	;volatile
 35335                           
 35336                           ;os.c: 527: break;
 35337  017FD8  0012               	return	
 35338  017FDA                     l1211:
 35339                           
 35340                           ; BSR set to: 0
 35341                           ;os.c: 529: LATCbits.LC7 = 1;
 35342  017FDA  8E8B               	bsf	3979,7,c	;volatile
 35343                           
 35344                           ;os.c: 530: LATAbits.LA5 = 0;
 35345  017FDC  9A89               	bcf	3977,5,c	;volatile
 35346                           
 35347                           ;os.c: 531: break;
 35348  017FDE  0012               	return	
 35349  017FE0                     l1212:
 35350                           
 35351                           ; BSR set to: 0
 35352                           ;os.c: 533: LATDbits.LD3 = 1;
 35353  017FE0  868C               	bsf	3980,3,c	;volatile
 35354                           
 35355                           ; BSR set to: 0
 35356                           ;os.c: 535: }
 35357                           
 35358                           ;os.c: 534: break;
 35359  017FE2  0012               	return	
 35360  017FE4                     l1206:
 35361                           
 35362                           ; BSR set to: 0
 35363  017FE4  0100               	movlb	0	; () banked
 35364  017FE6  5160               	movf	system_output_on@output& (0+255),w,b
 35365                           
 35366                           ; Switch size 1, requested type "space"
 35367                           ; Number of cases is 5, Range of values is 1 to 16
 35368                           ; switch strategies available:
 35369                           ; Name         Instructions Cycles
 35370                           ; simple_byte           16     9 (average)
 35371                           ;	Chosen strategy is simple_byte
 35372  017FE8  0A01               	xorlw	1	; case 1
 35373  017FEA  B4D8               	btfsc	status,2,c
 35374  017FEC  D7ED               	goto	l1207
 35375  017FEE  0A03               	xorlw	3	; case 2
 35376  017FF0  B4D8               	btfsc	status,2,c
 35377  017FF2  D7ED               	goto	l1209
 35378  017FF4  0A06               	xorlw	6	; case 4
 35379  017FF6  B4D8               	btfsc	status,2,c
 35380  017FF8  D7ED               	goto	l1210
 35381  017FFA  0A0C               	xorlw	12	; case 8
 35382  017FFC  B4D8               	btfsc	status,2,c
 35383  017FFE  D7ED               	goto	l1211
 35384  018000  0A18               	xorlw	24	; case 16
 35385  018002  A4D8               	btfss	status,2,c
 35386  018004  0012               	return	
 35387  018006  D7EC               	goto	l1212
 35388  018008                     __end_of_system_output_on:
 35389                           	opt stack 0
 35390                           tosu	equ	0xFFF
 35391                           tosh	equ	0xFFE
 35392                           tosl	equ	0xFFD
 35393                           pclath	equ	0xFFA
 35394                           tblptru	equ	0xFF8
 35395                           tblptrh	equ	0xFF7
 35396                           tblptrl	equ	0xFF6
 35397                           tablat	equ	0xFF5
 35398                           prodh	equ	0xFF4
 35399                           prodl	equ	0xFF3
 35400                           intcon	equ	0xFF2
 35401                           intcon2	equ	0xFF1
 35402                           intcon3	equ	0xFF0
 35403                           postinc0	equ	0xFEE
 35404                           wreg	equ	0xFE8
 35405                           indf1	equ	0xFE7
 35406                           postinc1	equ	0xFE6
 35407                           postdec1	equ	0xFE5
 35408                           plusw1	equ	0xFE3
 35409                           fsr1h	equ	0xFE2
 35410                           fsr1l	equ	0xFE1
 35411                           indf2	equ	0xFDF
 35412                           postinc2	equ	0xFDE
 35413                           postdec2	equ	0xFDD
 35414                           plusw2	equ	0xFDB
 35415                           fsr2h	equ	0xFDA
 35416                           fsr2l	equ	0xFD9
 35417                           status	equ	0xFD8
 35418                           
 35419 ;; *************** function _system_output_off *****************
 35420 ;; Defined at:
 35421 ;;		line 538 in file "os.c"
 35422 ;; Parameters:    Size  Location     Type
 35423 ;;  output          1    wreg     enum E6793
 35424 ;; Auto vars:     Size  Location     Type
 35425 ;;  output          1    1[BANK0 ] enum E6793
 35426 ;; Return value:  Size  Location     Type
 35427 ;;                  1    wreg      void 
 35428 ;; Registers used:
 35429 ;;		wreg, status,2, status,0
 35430 ;; Tracked objects:
 35431 ;;		On entry : 0/0
 35432 ;;		On exit  : 0/0
 35433 ;;		Unchanged: 0/0
 35434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35436 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35437 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35438 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35439 ;;Total ram usage:        2 bytes
 35440 ;; Hardware stack levels used:    1
 35441 ;; Hardware stack levels required when called:   10
 35442 ;; This function calls:
 35443 ;;		Nothing
 35444 ;; This function is called by:
 35445 ;;		_main
 35446 ;;		_system_output_toggle
 35447 ;;		__ui_encoder
 35448 ;;		__parse_command_short
 35449 ;; This function uses a non-reentrant model
 35450 ;;
 35451                           
 35452                           	psect	text150
 35453  017B8A                     __ptext150:
 35454                           	opt stack 0
 35455  017B8A                     _system_output_off:
 35456                           	opt stack 17
 35457                           
 35458                           ; BSR set to: 0
 35459                           ;incstack = 0
 35460                           ;system_output_off@output stored from wreg
 35461  017B8A  0100               	movlb	0	; () banked
 35462  017B8C  6F61               	movwf	system_output_off@output& (0+255),b
 35463                           
 35464                           ;os.c: 541: os.outputs &= (~output);
 35465  017B8E  0100               	movlb	0	; () banked
 35466  017B90  5161               	movf	system_output_off@output& (0+255),w,b
 35467  017B92  0AFF               	xorlw	255
 35468  017B94  0102               	movlb	2	; () banked
 35469  017B96  1705               	andwf	(_os+5)& (0+255),f,b	;volatile
 35470                           
 35471                           ;os.c: 544: switch(output)
 35472  017B98  D00A               	goto	l1216
 35473  017B9A                     l1217:
 35474                           
 35475                           ; BSR set to: 0
 35476                           ;os.c: 547: LATEbits.LE2 = 1;
 35477  017B9A  848D               	bsf	3981,2,c	;volatile
 35478                           
 35479                           ;os.c: 548: break;
 35480  017B9C  D019               	goto	l1218
 35481  017B9E                     l1219:
 35482                           
 35483                           ; BSR set to: 0
 35484                           ;os.c: 550: LATEbits.LE1 = 1;
 35485  017B9E  828D               	bsf	3981,1,c	;volatile
 35486                           
 35487                           ;os.c: 551: break;
 35488  017BA0  D017               	goto	l1218
 35489  017BA2                     l1220:
 35490                           
 35491                           ; BSR set to: 0
 35492                           ;os.c: 553: LATEbits.LE0 = 1;
 35493  017BA2  808D               	bsf	3981,0,c	;volatile
 35494                           
 35495                           ;os.c: 554: break;
 35496  017BA4  D015               	goto	l1218
 35497  017BA6                     l1221:
 35498                           
 35499                           ; BSR set to: 0
 35500                           ;os.c: 556: LATAbits.LA5 = 1;
 35501  017BA6  8A89               	bsf	3977,5,c	;volatile
 35502                           
 35503                           ;os.c: 557: break;
 35504  017BA8  D013               	goto	l1218
 35505  017BAA                     l1222:
 35506                           
 35507                           ; BSR set to: 0
 35508                           ;os.c: 559: LATDbits.LD3 = 0;
 35509  017BAA  968C               	bcf	3980,3,c	;volatile
 35510                           
 35511                           ; BSR set to: 0
 35512                           ;os.c: 561: }
 35513                           
 35514                           ;os.c: 560: break;
 35515  017BAC  D011               	goto	l1218
 35516  017BAE                     l1216:
 35517                           
 35518                           ; BSR set to: 0
 35519  017BAE  0100               	movlb	0	; () banked
 35520  017BB0  5161               	movf	system_output_off@output& (0+255),w,b
 35521                           
 35522                           ; Switch size 1, requested type "space"
 35523                           ; Number of cases is 5, Range of values is 1 to 16
 35524                           ; switch strategies available:
 35525                           ; Name         Instructions Cycles
 35526                           ; simple_byte           16     9 (average)
 35527                           ;	Chosen strategy is simple_byte
 35528  017BB2  0A01               	xorlw	1	; case 1
 35529  017BB4  B4D8               	btfsc	status,2,c
 35530  017BB6  D7F1               	goto	l1217
 35531  017BB8  0A03               	xorlw	3	; case 2
 35532  017BBA  B4D8               	btfsc	status,2,c
 35533  017BBC  D7F0               	goto	l1219
 35534  017BBE  0A06               	xorlw	6	; case 4
 35535  017BC0  B4D8               	btfsc	status,2,c
 35536  017BC2  D7EF               	goto	l1220
 35537  017BC4  0A0C               	xorlw	12	; case 8
 35538  017BC6  B4D8               	btfsc	status,2,c
 35539  017BC8  D7EE               	goto	l1221
 35540  017BCA  0A18               	xorlw	24	; case 16
 35541  017BCC  B4D8               	btfsc	status,2,c
 35542  017BCE  D7ED               	goto	l1222
 35543  017BD0                     l1218:
 35544                           
 35545                           ; BSR set to: 0
 35546                           ;os.c: 564: if(!(os.outputs&(OUTPUT_1 | OUTPUT_2 | OUTPUT_3 | OUTPUT_4)))
 35547                           
 35548                           ; BSR set to: 0
 35549  017BD0  C205  F060         	movff	_os+5,??_system_output_off	;volatile
 35550  017BD4  0E0F               	movlw	15
 35551  017BD6  1760               	andwf	??_system_output_off& (0+255),f,b
 35552  017BD8  A4D8               	btfss	status,2,c
 35553  017BDA  0012               	return	
 35554                           
 35555                           ; BSR set to: 0
 35556                           ;os.c: 565: {;os.c: 566: LATCbits.LC7 = 0;
 35557  017BDC  9E8B               	bcf	3979,7,c	;volatile
 35558  017BDE  0012               	return	
 35559  017BE0                     __end_of_system_output_off:
 35560                           	opt stack 0
 35561                           tosu	equ	0xFFF
 35562                           tosh	equ	0xFFE
 35563                           tosl	equ	0xFFD
 35564                           pclath	equ	0xFFA
 35565                           tblptru	equ	0xFF8
 35566                           tblptrh	equ	0xFF7
 35567                           tblptrl	equ	0xFF6
 35568                           tablat	equ	0xFF5
 35569                           prodh	equ	0xFF4
 35570                           prodl	equ	0xFF3
 35571                           intcon	equ	0xFF2
 35572                           intcon2	equ	0xFF1
 35573                           intcon3	equ	0xFF0
 35574                           postinc0	equ	0xFEE
 35575                           wreg	equ	0xFE8
 35576                           indf1	equ	0xFE7
 35577                           postinc1	equ	0xFE6
 35578                           postdec1	equ	0xFE5
 35579                           plusw1	equ	0xFE3
 35580                           fsr1h	equ	0xFE2
 35581                           fsr1l	equ	0xFE1
 35582                           indf2	equ	0xFDF
 35583                           postinc2	equ	0xFDE
 35584                           postdec2	equ	0xFDD
 35585                           plusw2	equ	0xFDB
 35586                           fsr2h	equ	0xFDA
 35587                           fsr2l	equ	0xFD9
 35588                           status	equ	0xFD8
 35589                           
 35590 ;; *************** function _rtcc_write_eeprom *****************
 35591 ;; Defined at:
 35592 ;;		line 436 in file "rtcc.c"
 35593 ;; Parameters:    Size  Location     Type
 35594 ;;		None
 35595 ;; Auto vars:     Size  Location     Type
 35596 ;;  date            6   37[BANK0 ] unsigned char [6]
 35597 ;; Return value:  Size  Location     Type
 35598 ;;                  1    wreg      void 
 35599 ;; Registers used:
 35600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35601 ;; Tracked objects:
 35602 ;;		On entry : 0/0
 35603 ;;		On exit  : 0/0
 35604 ;;		Unchanged: 0/0
 35605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35607 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35609 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35610 ;;Total ram usage:        6 bytes
 35611 ;; Hardware stack levels used:    1
 35612 ;; Hardware stack levels required when called:   13
 35613 ;; This function calls:
 35614 ;;		_i2c_eeprom_write
 35615 ;;		_rtcc_get_day
 35616 ;;		_rtcc_get_hours
 35617 ;;		_rtcc_get_minutes
 35618 ;;		_rtcc_get_month
 35619 ;;		_rtcc_get_seconds
 35620 ;;		_rtcc_get_year
 35621 ;; This function is called by:
 35622 ;;		__ui_encoder
 35623 ;;		_rtcc_read_eeprom
 35624 ;;		__parse_command_short
 35625 ;; This function uses a non-reentrant model
 35626 ;;
 35627                           
 35628                           	psect	text151
 35629  01809E                     __ptext151:
 35630                           	opt stack 0
 35631  01809E                     _rtcc_write_eeprom:
 35632                           	opt stack 15
 35633                           
 35634                           ;rtcc.c: 438: uint8_t date[6];;rtcc.c: 439: date[0] = rtcc_get_year();
 35635                           
 35636                           ; BSR set to: 0
 35637                           ;incstack = 0
 35638  01809E  EC37  F0C8         	call	_rtcc_get_year	;wreg free
 35639  0180A2  0100               	movlb	0	; () banked
 35640  0180A4  6F85               	movwf	rtcc_write_eeprom@date& (0+255),b
 35641                           
 35642                           ;rtcc.c: 440: date[1] = rtcc_get_month();
 35643  0180A6  EC3E  F0C8         	call	_rtcc_get_month	;wreg free
 35644  0180AA  0100               	movlb	0	; () banked
 35645  0180AC  6F86               	movwf	(rtcc_write_eeprom@date+1)& (0+255),b
 35646                           
 35647                           ;rtcc.c: 441: date[2] = rtcc_get_day();
 35648  0180AE  EC45  F0C8         	call	_rtcc_get_day	;wreg free
 35649  0180B2  0100               	movlb	0	; () banked
 35650  0180B4  6F87               	movwf	(rtcc_write_eeprom@date+2)& (0+255),b
 35651                           
 35652                           ;rtcc.c: 442: date[3] = rtcc_get_hours();
 35653  0180B6  EC30  F0C8         	call	_rtcc_get_hours	;wreg free
 35654  0180BA  0100               	movlb	0	; () banked
 35655  0180BC  6F88               	movwf	(rtcc_write_eeprom@date+3)& (0+255),b
 35656                           
 35657                           ;rtcc.c: 443: date[4] = rtcc_get_minutes();
 35658  0180BE  EC29  F0C8         	call	_rtcc_get_minutes	;wreg free
 35659  0180C2  0100               	movlb	0	; () banked
 35660  0180C4  6F89               	movwf	(rtcc_write_eeprom@date+4)& (0+255),b
 35661                           
 35662                           ;rtcc.c: 444: date[5] = rtcc_get_seconds();
 35663  0180C6  EC22  F0C8         	call	_rtcc_get_seconds	;wreg free
 35664  0180CA  0100               	movlb	0	; () banked
 35665  0180CC  6F8A               	movwf	(rtcc_write_eeprom@date+5)& (0+255),b
 35666                           
 35667                           ; BSR set to: 0
 35668                           ;rtcc.c: 446: i2c_eeprom_write(0x040, &date[0], 6);
 35669  0180CE  0E00               	movlw	0
 35670  0180D0  6F6B               	movwf	(i2c_eeprom_write@address+1)& (0+255),b
 35671  0180D2  0E40               	movlw	64
 35672  0180D4  6F6A               	movwf	i2c_eeprom_write@address& (0+255),b
 35673  0180D6  0E85               	movlw	low rtcc_write_eeprom@date
 35674  0180D8  6F6C               	movwf	i2c_eeprom_write@data& (0+255),b
 35675  0180DA  0E00               	movlw	high rtcc_write_eeprom@date
 35676  0180DC  6F6D               	movwf	(i2c_eeprom_write@data+1)& (0+255),b
 35677  0180DE  0E06               	movlw	6
 35678  0180E0  6F6E               	movwf	i2c_eeprom_write@length& (0+255),b
 35679  0180E2  ECC3  F0B5         	call	_i2c_eeprom_write	;wreg free
 35680  0180E6  0012               	return		;funcret
 35681  0180E8                     __end_of_rtcc_write_eeprom:
 35682                           	opt stack 0
 35683                           tosu	equ	0xFFF
 35684                           tosh	equ	0xFFE
 35685                           tosl	equ	0xFFD
 35686                           pclath	equ	0xFFA
 35687                           tblptru	equ	0xFF8
 35688                           tblptrh	equ	0xFF7
 35689                           tblptrl	equ	0xFF6
 35690                           tablat	equ	0xFF5
 35691                           prodh	equ	0xFF4
 35692                           prodl	equ	0xFF3
 35693                           intcon	equ	0xFF2
 35694                           intcon2	equ	0xFF1
 35695                           intcon3	equ	0xFF0
 35696                           postinc0	equ	0xFEE
 35697                           wreg	equ	0xFE8
 35698                           indf1	equ	0xFE7
 35699                           postinc1	equ	0xFE6
 35700                           postdec1	equ	0xFE5
 35701                           plusw1	equ	0xFE3
 35702                           fsr1h	equ	0xFE2
 35703                           fsr1l	equ	0xFE1
 35704                           indf2	equ	0xFDF
 35705                           postinc2	equ	0xFDE
 35706                           postdec2	equ	0xFDD
 35707                           plusw2	equ	0xFDB
 35708                           fsr2h	equ	0xFDA
 35709                           fsr2l	equ	0xFD9
 35710                           status	equ	0xFD8
 35711                           
 35712 ;; *************** function _i2c_eeprom_write *****************
 35713 ;; Defined at:
 35714 ;;		line 410 in file "i2c.c"
 35715 ;; Parameters:    Size  Location     Type
 35716 ;;  address         2   10[BANK0 ] unsigned int 
 35717 ;;  data            2   12[BANK0 ] PTR unsigned char 
 35718 ;;		 -> rtcc_write_eeprom@date(6), _write_calibration@buffer(16), 
 35719 ;;  length          1   14[BANK0 ] unsigned char 
 35720 ;; Auto vars:     Size  Location     Type
 35721 ;;  dat            17   18[BANK0 ] unsigned char [17]
 35722 ;;  cntr            1   36[BANK0 ] unsigned char 
 35723 ;;  slave_addres    1   35[BANK0 ] unsigned char 
 35724 ;; Return value:  Size  Location     Type
 35725 ;;                  1    wreg      void 
 35726 ;; Registers used:
 35727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35728 ;; Tracked objects:
 35729 ;;		On entry : 0/0
 35730 ;;		On exit  : 0/0
 35731 ;;		Unchanged: 0/0
 35732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35733 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35734 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35735 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35736 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35737 ;;Total ram usage:       27 bytes
 35738 ;; Hardware stack levels used:    1
 35739 ;; Hardware stack levels required when called:   12
 35740 ;; This function calls:
 35741 ;;		__i2c_write
 35742 ;;		_i2c_set_frequency
 35743 ;; This function is called by:
 35744 ;;		__write_calibration
 35745 ;;		_rtcc_write_eeprom
 35746 ;; This function uses a non-reentrant model
 35747 ;;
 35748                           
 35749                           	psect	text152
 35750  016B86                     __ptext152:
 35751                           	opt stack 0
 35752  016B86                     _i2c_eeprom_write:
 35753                           	opt stack 15
 35754                           
 35755                           ;i2c.c: 412: uint8_t cntr;;i2c.c: 413: uint8_t slave_address;;i2c.c: 414: uint8_t dat[17
      +                          ];;i2c.c: 416: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 35756                           
 35757                           ;incstack = 0
 35758  016B86  C06A  F06F         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 35759  016B8A  C06B  F070         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 35760  016B8E  0E07               	movlw	7
 35761  016B90  0100               	movlb	0	; () banked
 35762  016B92  6F71               	movwf	(??_i2c_eeprom_write+2)& (0+255),b
 35763  016B94                     u21855:
 35764  016B94  90D8               	bcf	status,0,c
 35765  016B96  3370               	rrcf	(??_i2c_eeprom_write+1)& (0+255),f,b
 35766  016B98  336F               	rrcf	??_i2c_eeprom_write& (0+255),f,b
 35767  016B9A  2F71               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,b
 35768  016B9C  D7FB               	goto	u21855
 35769  016B9E  516F               	movf	??_i2c_eeprom_write& (0+255),w,b
 35770  016BA0  0B0E               	andlw	14
 35771  016BA2  09A0               	iorlw	160
 35772  016BA4  6F83               	movwf	i2c_eeprom_write@slave_address& (0+255),b
 35773                           
 35774                           ; BSR set to: 0
 35775                           ;i2c.c: 417: dat[0] = address & 0xFF;
 35776  016BA6  C06A  F072         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 35777                           
 35778                           ;i2c.c: 419: length &= 0b00001111;
 35779  016BAA  0E0F               	movlw	15
 35780  016BAC  176E               	andwf	i2c_eeprom_write@length& (0+255),f,b
 35781                           
 35782                           ; BSR set to: 0
 35783                           ;i2c.c: 420: for(cntr=0; cntr<length; ++cntr)
 35784  016BAE  0E00               	movlw	0
 35785  016BB0  6F84               	movwf	i2c_eeprom_write@cntr& (0+255),b
 35786  016BB2  D018               	goto	l1397
 35787  016BB4                     
 35788                           ; BSR set to: 0
 35789                           ;i2c.c: 421: {;i2c.c: 422: dat[cntr+1] = data[cntr];
 35790                           
 35791                           ; BSR set to: 0
 35792  016BB4  5184               	movf	i2c_eeprom_write@cntr& (0+255),w,b
 35793  016BB6  0D01               	mullw	1
 35794  016BB8  50F3               	movf	prodl,w,c
 35795  016BBA  256C               	addwf	i2c_eeprom_write@data& (0+255),w,b
 35796  016BBC  6ED9               	movwf	fsr2l,c
 35797  016BBE  50F4               	movf	prodh,w,c
 35798  016BC0  216D               	addwfc	(i2c_eeprom_write@data+1)& (0+255),w,b
 35799  016BC2  6EDA               	movwf	fsr2h,c
 35800  016BC4  5184               	movf	i2c_eeprom_write@cntr& (0+255),w,b
 35801  016BC6  6F6F               	movwf	??_i2c_eeprom_write& (0+255),b
 35802  016BC8  6B70               	clrf	(??_i2c_eeprom_write+1)& (0+255),b
 35803  016BCA  0E01               	movlw	1
 35804  016BCC  276F               	addwf	??_i2c_eeprom_write& (0+255),f,b
 35805  016BCE  0E00               	movlw	0
 35806  016BD0  2370               	addwfc	(??_i2c_eeprom_write+1)& (0+255),f,b
 35807  016BD2  0E72               	movlw	low i2c_eeprom_write@dat
 35808  016BD4  256F               	addwf	??_i2c_eeprom_write& (0+255),w,b
 35809  016BD6  6EE1               	movwf	fsr1l,c
 35810  016BD8  0E00               	movlw	high i2c_eeprom_write@dat
 35811  016BDA  2170               	addwfc	(??_i2c_eeprom_write+1)& (0+255),w,b
 35812  016BDC  6EE2               	movwf	fsr1h,c
 35813  016BDE  CFDF FFE7          	movff	indf2,indf1
 35814                           
 35815                           ; BSR set to: 0
 35816  016BE2  2B84               	incf	i2c_eeprom_write@cntr& (0+255),f,b
 35817  016BE4                     l1397:
 35818                           
 35819                           ; BSR set to: 0
 35820                           
 35821                           ; BSR set to: 0
 35822  016BE4  516E               	movf	i2c_eeprom_write@length& (0+255),w,b
 35823  016BE6  5D84               	subwf	i2c_eeprom_write@cntr& (0+255),w,b
 35824  016BE8  A0D8               	btfss	status,0,c
 35825  016BEA  D7E4               	goto	l1398
 35826                           
 35827                           ; BSR set to: 0
 35828                           ;i2c.c: 423: };i2c.c: 426: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 35829                           
 35830                           ; BSR set to: 0
 35831  016BEC  0E02               	movlw	2
 35832  016BEE  EC4E  F0C3         	call	_i2c_set_frequency
 35833                           
 35834                           ;i2c.c: 428: _i2c_write(slave_address, &dat[0], length+1);
 35835  016BF2  0E72               	movlw	low i2c_eeprom_write@dat
 35836  016BF4  0100               	movlb	0	; () banked
 35837  016BF6  6F65               	movwf	__i2c_write@data& (0+255),b
 35838  016BF8  0E00               	movlw	high i2c_eeprom_write@dat
 35839  016BFA  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 35840  016BFC  296E               	incf	i2c_eeprom_write@length& (0+255),w,b
 35841  016BFE  6F67               	movwf	__i2c_write@length& (0+255),b
 35842  016C00  5183               	movf	i2c_eeprom_write@slave_address& (0+255),w,b
 35843  016C02  EC65  F0BF         	call	__i2c_write
 35844  016C06  0012               	return		;funcret
 35845  016C08                     __end_of_i2c_eeprom_write:
 35846                           	opt stack 0
 35847                           tosu	equ	0xFFF
 35848                           tosh	equ	0xFFE
 35849                           tosl	equ	0xFFD
 35850                           pclath	equ	0xFFA
 35851                           tblptru	equ	0xFF8
 35852                           tblptrh	equ	0xFF7
 35853                           tblptrl	equ	0xFF6
 35854                           tablat	equ	0xFF5
 35855                           prodh	equ	0xFF4
 35856                           prodl	equ	0xFF3
 35857                           intcon	equ	0xFF2
 35858                           intcon2	equ	0xFF1
 35859                           intcon3	equ	0xFF0
 35860                           postinc0	equ	0xFEE
 35861                           wreg	equ	0xFE8
 35862                           indf1	equ	0xFE7
 35863                           postinc1	equ	0xFE6
 35864                           postdec1	equ	0xFE5
 35865                           plusw1	equ	0xFE3
 35866                           fsr1h	equ	0xFE2
 35867                           fsr1l	equ	0xFE1
 35868                           indf2	equ	0xFDF
 35869                           postinc2	equ	0xFDE
 35870                           postdec2	equ	0xFDD
 35871                           plusw2	equ	0xFDB
 35872                           fsr2h	equ	0xFDA
 35873                           fsr2l	equ	0xFD9
 35874                           status	equ	0xFD8
 35875                           
 35876 ;; *************** function _i2c_set_frequency *****************
 35877 ;; Defined at:
 35878 ;;		line 131 in file "i2c.c"
 35879 ;; Parameters:    Size  Location     Type
 35880 ;;  frequency       1    wreg     enum E6622
 35881 ;; Auto vars:     Size  Location     Type
 35882 ;;  frequency       1    0[BANK0 ] enum E6622
 35883 ;; Return value:  Size  Location     Type
 35884 ;;                  1    wreg      void 
 35885 ;; Registers used:
 35886 ;;		wreg, status,2, status,0
 35887 ;; Tracked objects:
 35888 ;;		On entry : 0/0
 35889 ;;		On exit  : 0/0
 35890 ;;		Unchanged: 0/0
 35891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35893 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35895 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35896 ;;Total ram usage:        1 bytes
 35897 ;; Hardware stack levels used:    1
 35898 ;; Hardware stack levels required when called:   10
 35899 ;; This function calls:
 35900 ;;		Nothing
 35901 ;; This function is called by:
 35902 ;;		_i2c_init
 35903 ;;		__ic2_display_set_address
 35904 ;;		_i2c_display_send_init_sequence
 35905 ;;		_i2c_display_cursor
 35906 ;;		_i2c_display_write_fixed
 35907 ;;		_i2c_digipot_reset_on
 35908 ;;		_i2c_digipot_reset_off
 35909 ;;		_i2c_digipot_backlight
 35910 ;;		_i2c_eeprom_write
 35911 ;;		_i2c_eeprom_read
 35912 ;;		_i2c_adc_start
 35913 ;;		_i2c_adc_read
 35914 ;;		_i2c_display_write
 35915 ;;		_i2c_digipot_set_defaults
 35916 ;;		_i2c_eeprom_writeByte
 35917 ;;		_i2c_eeprom_readByte
 35918 ;; This function uses a non-reentrant model
 35919 ;;
 35920                           
 35921                           	psect	text153
 35922  01869C                     __ptext153:
 35923                           	opt stack 0
 35924  01869C                     _i2c_set_frequency:
 35925                           	opt stack 18
 35926                           
 35927                           ;incstack = 0
 35928                           ;i2c_set_frequency@frequency stored from wreg
 35929  01869C  0100               	movlb	0	; () banked
 35930  01869E  6F60               	movwf	i2c_set_frequency@frequency& (0+255),b
 35931                           
 35932                           ;i2c.c: 133: switch(frequency)
 35933  0186A0  D007               	goto	l1336
 35934  0186A2                     
 35935                           ;i2c.c: 136: SSP1ADD = 119;
 35936  0186A2  0E77               	movlw	119
 35937  0186A4  D003               	goto	L39
 35938  0186A6                     
 35939                           ;i2c.c: 139: SSP1ADD = 59;
 35940  0186A6  0E3B               	movlw	59
 35941  0186A8  D001               	goto	L39
 35942  0186AA                     
 35943                           ;i2c.c: 142: SSP1ADD = 29;
 35944  0186AA  0E1D               	movlw	29
 35945  0186AC                     L39:
 35946  0186AC  6EC8               	movwf	4040,c	;volatile
 35947                           
 35948                           ;i2c.c: 144: }
 35949                           
 35950                           ;i2c.c: 143: break;
 35951  0186AE  D00B               	goto	l1338
 35952  0186B0                     l1336:
 35953  0186B0  0100               	movlb	0	; () banked
 35954  0186B2  5160               	movf	i2c_set_frequency@frequency& (0+255),w,b
 35955                           
 35956                           ; Switch size 1, requested type "space"
 35957                           ; Number of cases is 3, Range of values is 0 to 2
 35958                           ; switch strategies available:
 35959                           ; Name         Instructions Cycles
 35960                           ; simple_byte           10     6 (average)
 35961                           ;	Chosen strategy is simple_byte
 35962  0186B4  0A00               	xorlw	0	; case 0
 35963  0186B6  B4D8               	btfsc	status,2,c
 35964  0186B8  D7F4               	goto	l1337
 35965  0186BA  0A01               	xorlw	1	; case 1
 35966  0186BC  B4D8               	btfsc	status,2,c
 35967  0186BE  D7F3               	goto	l1339
 35968  0186C0  0A03               	xorlw	3	; case 2
 35969  0186C2  B4D8               	btfsc	status,2,c
 35970  0186C4  D7F2               	goto	l1340
 35971  0186C6                     l1338:
 35972                           
 35973                           ;i2c.c: 146: i2c_frequency = frequency;
 35974                           
 35975                           ; BSR set to: 0
 35976  0186C6  C060  F2CB         	movff	i2c_set_frequency@frequency,_i2c_frequency
 35977  0186CA  0012               	return		;funcret
 35978  0186CC                     __end_of_i2c_set_frequency:
 35979                           	opt stack 0
 35980                           tosu	equ	0xFFF
 35981                           tosh	equ	0xFFE
 35982                           tosl	equ	0xFFD
 35983                           pclath	equ	0xFFA
 35984                           tblptru	equ	0xFF8
 35985                           tblptrh	equ	0xFF7
 35986                           tblptrl	equ	0xFF6
 35987                           tablat	equ	0xFF5
 35988                           prodh	equ	0xFF4
 35989                           prodl	equ	0xFF3
 35990                           intcon	equ	0xFF2
 35991                           intcon2	equ	0xFF1
 35992                           intcon3	equ	0xFF0
 35993                           postinc0	equ	0xFEE
 35994                           wreg	equ	0xFE8
 35995                           indf1	equ	0xFE7
 35996                           postinc1	equ	0xFE6
 35997                           postdec1	equ	0xFE5
 35998                           plusw1	equ	0xFE3
 35999                           fsr1h	equ	0xFE2
 36000                           fsr1l	equ	0xFE1
 36001                           indf2	equ	0xFDF
 36002                           postinc2	equ	0xFDE
 36003                           postdec2	equ	0xFDD
 36004                           plusw2	equ	0xFDB
 36005                           fsr2h	equ	0xFDA
 36006                           fsr2l	equ	0xFD9
 36007                           status	equ	0xFD8
 36008                           
 36009 ;; *************** function __i2c_write *****************
 36010 ;; Defined at:
 36011 ;;		line 150 in file "i2c.c"
 36012 ;; Parameters:    Size  Location     Type
 36013 ;;  slave_addres    1    wreg     unsigned char 
 36014 ;;  data            2    5[BANK0 ] PTR unsigned char 
 36015 ;;		 -> i2c_adc_start@configuration_byte(1), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr
      +(1), 
 36016 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_digipot_set_defaults@data_array(2), i2c_digipot_backlight@data_array(2), i2c_di
      +gipot_reset_off@data_array(2), 
 36017 ;;		 -> i2c_digipot_reset_on@data_array(2), i2c_display_send_init_sequence@init_sequence(9), _ic2_display_set_address@da
      +ta_array(2), 
 36018 ;;  length          1    7[BANK0 ] unsigned char 
 36019 ;; Auto vars:     Size  Location     Type
 36020 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 36021 ;;  cntr            1    9[BANK0 ] unsigned char 
 36022 ;; Return value:  Size  Location     Type
 36023 ;;                  1    wreg      void 
 36024 ;; Registers used:
 36025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36026 ;; Tracked objects:
 36027 ;;		On entry : 0/0
 36028 ;;		On exit  : 0/0
 36029 ;;		Unchanged: 0/0
 36030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36031 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36032 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36034 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36035 ;;Total ram usage:        5 bytes
 36036 ;; Hardware stack levels used:    1
 36037 ;; Hardware stack levels required when called:   11
 36038 ;; This function calls:
 36039 ;;		__i2c_send
 36040 ;;		__i2c_start
 36041 ;;		__i2c_stop
 36042 ;;		__i2c_wait_idle
 36043 ;; This function is called by:
 36044 ;;		__ic2_display_set_address
 36045 ;;		_i2c_display_send_init_sequence
 36046 ;;		_i2c_digipot_reset_on
 36047 ;;		_i2c_digipot_reset_off
 36048 ;;		_i2c_digipot_backlight
 36049 ;;		_i2c_eeprom_write
 36050 ;;		_i2c_eeprom_read
 36051 ;;		_i2c_adc_start
 36052 ;;		_i2c_digipot_set_defaults
 36053 ;;		_i2c_eeprom_writeByte
 36054 ;;		_i2c_eeprom_readByte
 36055 ;; This function uses a non-reentrant model
 36056 ;;
 36057                           
 36058                           	psect	text154
 36059  017ECA                     __ptext154:
 36060                           	opt stack 0
 36061  017ECA                     __i2c_write:
 36062                           	opt stack 17
 36063                           
 36064                           ;incstack = 0
 36065                           ;__i2c_write@slave_address stored from wreg
 36066  017ECA  0100               	movlb	0	; () banked
 36067  017ECC  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 36068                           
 36069                           ;i2c.c: 152: uint8_t cntr;;i2c.c: 154: _i2c_wait_idle();
 36070  017ECE  EC03  F0BA         	call	__i2c_wait_idle	;wreg free
 36071                           
 36072                           ;i2c.c: 155: _i2c_start();
 36073  017ED2  EC7B  F0C8         	call	__i2c_start	;wreg free
 36074                           
 36075                           ;i2c.c: 156: _i2c_wait_idle();
 36076  017ED6  EC03  F0BA         	call	__i2c_wait_idle	;wreg free
 36077                           
 36078                           ;i2c.c: 157: _i2c_send(slave_address);
 36079  017EDA  0100               	movlb	0	; () banked
 36080  017EDC  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 36081  017EDE  EC72  F0C8         	call	__i2c_send
 36082                           
 36083                           ;i2c.c: 158: _i2c_wait_idle();
 36084  017EE2  EC03  F0BA         	call	__i2c_wait_idle	;wreg free
 36085                           
 36086                           ;i2c.c: 160: for(cntr=0; cntr<length; ++cntr)
 36087  017EE6  0E00               	movlw	0
 36088  017EE8  0100               	movlb	0	; () banked
 36089  017EEA  6F69               	movwf	__i2c_write@cntr& (0+255),b
 36090  017EEC  D00F               	goto	l1344
 36091  017EEE                     
 36092                           ; BSR set to: 0
 36093                           ;i2c.c: 161: {;i2c.c: 162: _i2c_send(data[cntr]);
 36094                           
 36095                           ; BSR set to: 0
 36096  017EEE  5169               	movf	__i2c_write@cntr& (0+255),w,b
 36097  017EF0  0D01               	mullw	1
 36098  017EF2  50F3               	movf	prodl,w,c
 36099  017EF4  2565               	addwf	__i2c_write@data& (0+255),w,b
 36100  017EF6  6ED9               	movwf	fsr2l,c
 36101  017EF8  50F4               	movf	prodh,w,c
 36102  017EFA  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 36103  017EFC  6EDA               	movwf	fsr2h,c
 36104  017EFE  50DF               	movf	indf2,w,c
 36105  017F00  EC72  F0C8         	call	__i2c_send
 36106                           
 36107                           ;i2c.c: 163: _i2c_wait_idle();
 36108  017F04  EC03  F0BA         	call	__i2c_wait_idle	;wreg free
 36109  017F08  0100               	movlb	0	; () banked
 36110  017F0A  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 36111  017F0C                     l1344:
 36112                           
 36113                           ; BSR set to: 0
 36114                           
 36115                           ; BSR set to: 0
 36116  017F0C  5167               	movf	__i2c_write@length& (0+255),w,b
 36117  017F0E  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 36118  017F10  A0D8               	btfss	status,0,c
 36119  017F12  D7ED               	goto	l1345
 36120                           
 36121                           ; BSR set to: 0
 36122                           ;i2c.c: 164: };i2c.c: 166: _i2c_stop();
 36123                           
 36124                           ; BSR set to: 0
 36125  017F14  EC77  F0C8         	call	__i2c_stop	;wreg free
 36126  017F18  0012               	return		;funcret
 36127  017F1A                     __end_of__i2c_write:
 36128                           	opt stack 0
 36129                           tosu	equ	0xFFF
 36130                           tosh	equ	0xFFE
 36131                           tosl	equ	0xFFD
 36132                           pclath	equ	0xFFA
 36133                           tblptru	equ	0xFF8
 36134                           tblptrh	equ	0xFF7
 36135                           tblptrl	equ	0xFF6
 36136                           tablat	equ	0xFF5
 36137                           prodh	equ	0xFF4
 36138                           prodl	equ	0xFF3
 36139                           intcon	equ	0xFF2
 36140                           intcon2	equ	0xFF1
 36141                           intcon3	equ	0xFF0
 36142                           postinc0	equ	0xFEE
 36143                           wreg	equ	0xFE8
 36144                           indf1	equ	0xFE7
 36145                           postinc1	equ	0xFE6
 36146                           postdec1	equ	0xFE5
 36147                           plusw1	equ	0xFE3
 36148                           fsr1h	equ	0xFE2
 36149                           fsr1l	equ	0xFE1
 36150                           indf2	equ	0xFDF
 36151                           postinc2	equ	0xFDE
 36152                           postdec2	equ	0xFDD
 36153                           plusw2	equ	0xFDB
 36154                           fsr2h	equ	0xFDA
 36155                           fsr2l	equ	0xFD9
 36156                           status	equ	0xFD8
 36157                           
 36158 ;; *************** function __i2c_wait_idle *****************
 36159 ;; Defined at:
 36160 ;;		line 56 in file "i2c.c"
 36161 ;; Parameters:    Size  Location     Type
 36162 ;;		None
 36163 ;; Auto vars:     Size  Location     Type
 36164 ;;		None
 36165 ;; Return value:  Size  Location     Type
 36166 ;;                  1    wreg      void 
 36167 ;; Registers used:
 36168 ;;		wreg, status,2, status,0
 36169 ;; Tracked objects:
 36170 ;;		On entry : 0/0
 36171 ;;		On exit  : 0/0
 36172 ;;		Unchanged: 0/0
 36173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36176 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36177 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36178 ;;Total ram usage:        5 bytes
 36179 ;; Hardware stack levels used:    1
 36180 ;; Hardware stack levels required when called:   10
 36181 ;; This function calls:
 36182 ;;		Nothing
 36183 ;; This function is called by:
 36184 ;;		__i2c_write
 36185 ;;		__i2c_read
 36186 ;;		_i2c_display_write_fixed
 36187 ;;		_i2c_adc_read
 36188 ;;		_i2c_display_write
 36189 ;; This function uses a non-reentrant model
 36190 ;;
 36191                           
 36192                           	psect	text155
 36193  017406                     __ptext155:
 36194                           	opt stack 0
 36195  017406                     __i2c_wait_idle:
 36196                           	opt stack 17
 36197                           
 36198                           ;i2c.c: 58: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 36199                           
 36200                           ;incstack = 0
 36201  017406  A4C7               	btfss	4039,2,c	;volatile
 36202  017408  D004               	goto	u10760
 36203  01740A  0100               	movlb	0	; () banked
 36204  01740C  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 36205  01740E  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 36206  017410  D002               	goto	u10768
 36207  017412                     u10760:
 36208  017412  0100               	movlb	0	; () banked
 36209  017414  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 36210  017416                     u10768:
 36211  017416  A0C5               	btfss	4037,0,c	;volatile
 36212  017418  D003               	goto	u10770
 36213  01741A  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 36214  01741C  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 36215  01741E  D002               	goto	u10778
 36216  017420                     u10770:
 36217  017420  0100               	movlb	0	; () banked
 36218  017422  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 36219  017424                     u10778:
 36220  017424  A2C5               	btfss	4037,1,c	;volatile
 36221  017426  D003               	goto	u10780
 36222  017428  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 36223  01742A  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 36224  01742C  D002               	goto	u10788
 36225  01742E                     u10780:
 36226  01742E  0100               	movlb	0	; () banked
 36227  017430  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 36228  017432                     u10788:
 36229  017432  A4C5               	btfss	4037,2,c	;volatile
 36230  017434  D003               	goto	u10790
 36231  017436  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 36232  017438  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 36233  01743A  D002               	goto	u10798
 36234  01743C                     u10790:
 36235  01743C  0100               	movlb	0	; () banked
 36236  01743E  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 36237  017440                     u10798:
 36238  017440  A6C5               	btfss	4037,3,c	;volatile
 36239  017442  D003               	goto	u10800
 36240  017444  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 36241  017446  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 36242  017448  D002               	goto	u10808
 36243  01744A                     u10800:
 36244  01744A  0100               	movlb	0	; () banked
 36245  01744C  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 36246  01744E                     u10808:
 36247  01744E  A8C5               	btfss	4037,4,c	;volatile
 36248  017450  D002               	goto	u10810
 36249  017452  0E01               	movlw	1
 36250  017454  D001               	goto	u10816
 36251  017456                     u10810:
 36252  017456  0E00               	movlw	0
 36253  017458                     u10816:
 36254  017458  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 36255  01745A  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 36256  01745C  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 36257  01745E  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 36258  017460  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 36259  017462  0900               	iorlw	0
 36260  017464  B4D8               	btfsc	status,2,c
 36261  017466  0012               	return	
 36262  017468  D7CE               	goto	__i2c_wait_idle
 36263  01746A                     __end_of__i2c_wait_idle:
 36264                           	opt stack 0
 36265                           tosu	equ	0xFFF
 36266                           tosh	equ	0xFFE
 36267                           tosl	equ	0xFFD
 36268                           pclath	equ	0xFFA
 36269                           tblptru	equ	0xFF8
 36270                           tblptrh	equ	0xFF7
 36271                           tblptrl	equ	0xFF6
 36272                           tablat	equ	0xFF5
 36273                           prodh	equ	0xFF4
 36274                           prodl	equ	0xFF3
 36275                           intcon	equ	0xFF2
 36276                           intcon2	equ	0xFF1
 36277                           intcon3	equ	0xFF0
 36278                           postinc0	equ	0xFEE
 36279                           wreg	equ	0xFE8
 36280                           indf1	equ	0xFE7
 36281                           postinc1	equ	0xFE6
 36282                           postdec1	equ	0xFE5
 36283                           plusw1	equ	0xFE3
 36284                           fsr1h	equ	0xFE2
 36285                           fsr1l	equ	0xFE1
 36286                           indf2	equ	0xFDF
 36287                           postinc2	equ	0xFDE
 36288                           postdec2	equ	0xFDD
 36289                           plusw2	equ	0xFDB
 36290                           fsr2h	equ	0xFDA
 36291                           fsr2l	equ	0xFD9
 36292                           status	equ	0xFD8
 36293                           
 36294 ;; *************** function __i2c_stop *****************
 36295 ;; Defined at:
 36296 ;;		line 83 in file "i2c.c"
 36297 ;; Parameters:    Size  Location     Type
 36298 ;;		None
 36299 ;; Auto vars:     Size  Location     Type
 36300 ;;		None
 36301 ;; Return value:  Size  Location     Type
 36302 ;;                  1    wreg      void 
 36303 ;; Registers used:
 36304 ;;		None
 36305 ;; Tracked objects:
 36306 ;;		On entry : 0/0
 36307 ;;		On exit  : 0/0
 36308 ;;		Unchanged: 0/0
 36309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36314 ;;Total ram usage:        0 bytes
 36315 ;; Hardware stack levels used:    1
 36316 ;; Hardware stack levels required when called:   10
 36317 ;; This function calls:
 36318 ;;		Nothing
 36319 ;; This function is called by:
 36320 ;;		__i2c_write
 36321 ;;		__i2c_read
 36322 ;;		_i2c_display_write_fixed
 36323 ;;		_i2c_adc_read
 36324 ;;		_i2c_display_write
 36325 ;; This function uses a non-reentrant model
 36326 ;;
 36327                           
 36328                           	psect	text156
 36329  0190EE                     __ptext156:
 36330                           	opt stack 0
 36331  0190EE                     __i2c_stop:
 36332                           	opt stack 17
 36333                           
 36334                           ;i2c.c: 85: SSP1CON2bits.PEN = 1;
 36335                           
 36336                           ; BSR set to: 0
 36337                           ;incstack = 0
 36338  0190EE  84C5               	bsf	4037,2,c	;volatile
 36339  0190F0  A4C5               	btfss	4037,2,c	;volatile
 36340  0190F2  0012               	return	
 36341  0190F4  D7FD               	goto	l1310
 36342  0190F6                     __end_of__i2c_stop:
 36343                           	opt stack 0
 36344                           tosu	equ	0xFFF
 36345                           tosh	equ	0xFFE
 36346                           tosl	equ	0xFFD
 36347                           pclath	equ	0xFFA
 36348                           tblptru	equ	0xFF8
 36349                           tblptrh	equ	0xFF7
 36350                           tblptrl	equ	0xFF6
 36351                           tablat	equ	0xFF5
 36352                           prodh	equ	0xFF4
 36353                           prodl	equ	0xFF3
 36354                           intcon	equ	0xFF2
 36355                           intcon2	equ	0xFF1
 36356                           intcon3	equ	0xFF0
 36357                           postinc0	equ	0xFEE
 36358                           wreg	equ	0xFE8
 36359                           indf1	equ	0xFE7
 36360                           postinc1	equ	0xFE6
 36361                           postdec1	equ	0xFE5
 36362                           plusw1	equ	0xFE3
 36363                           fsr1h	equ	0xFE2
 36364                           fsr1l	equ	0xFE1
 36365                           indf2	equ	0xFDF
 36366                           postinc2	equ	0xFDE
 36367                           postdec2	equ	0xFDD
 36368                           plusw2	equ	0xFDB
 36369                           fsr2h	equ	0xFDA
 36370                           fsr2l	equ	0xFD9
 36371                           status	equ	0xFD8
 36372                           
 36373 ;; *************** function __i2c_start *****************
 36374 ;; Defined at:
 36375 ;;		line 62 in file "i2c.c"
 36376 ;; Parameters:    Size  Location     Type
 36377 ;;		None
 36378 ;; Auto vars:     Size  Location     Type
 36379 ;;		None
 36380 ;; Return value:  Size  Location     Type
 36381 ;;                  1    wreg      void 
 36382 ;; Registers used:
 36383 ;;		None
 36384 ;; Tracked objects:
 36385 ;;		On entry : 0/0
 36386 ;;		On exit  : 0/0
 36387 ;;		Unchanged: 0/0
 36388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36393 ;;Total ram usage:        0 bytes
 36394 ;; Hardware stack levels used:    1
 36395 ;; Hardware stack levels required when called:   10
 36396 ;; This function calls:
 36397 ;;		Nothing
 36398 ;; This function is called by:
 36399 ;;		__i2c_write
 36400 ;;		__i2c_read
 36401 ;;		_i2c_display_write_fixed
 36402 ;;		_i2c_adc_read
 36403 ;;		_i2c_display_write
 36404 ;; This function uses a non-reentrant model
 36405 ;;
 36406                           
 36407                           	psect	text157
 36408  0190F6                     __ptext157:
 36409                           	opt stack 0
 36410  0190F6                     __i2c_start:
 36411                           	opt stack 17
 36412                           
 36413                           ;i2c.c: 64: SSP1CON2bits.SEN=1;
 36414                           
 36415                           ;incstack = 0
 36416  0190F6  80C5               	bsf	4037,0,c	;volatile
 36417  0190F8  A0C5               	btfss	4037,0,c	;volatile
 36418  0190FA  0012               	return	
 36419  0190FC  D7FD               	goto	l1295
 36420  0190FE                     __end_of__i2c_start:
 36421                           	opt stack 0
 36422                           tosu	equ	0xFFF
 36423                           tosh	equ	0xFFE
 36424                           tosl	equ	0xFFD
 36425                           pclath	equ	0xFFA
 36426                           tblptru	equ	0xFF8
 36427                           tblptrh	equ	0xFF7
 36428                           tblptrl	equ	0xFF6
 36429                           tablat	equ	0xFF5
 36430                           prodh	equ	0xFF4
 36431                           prodl	equ	0xFF3
 36432                           intcon	equ	0xFF2
 36433                           intcon2	equ	0xFF1
 36434                           intcon3	equ	0xFF0
 36435                           postinc0	equ	0xFEE
 36436                           wreg	equ	0xFE8
 36437                           indf1	equ	0xFE7
 36438                           postinc1	equ	0xFE6
 36439                           postdec1	equ	0xFE5
 36440                           plusw1	equ	0xFE3
 36441                           fsr1h	equ	0xFE2
 36442                           fsr1l	equ	0xFE1
 36443                           indf2	equ	0xFDF
 36444                           postinc2	equ	0xFDE
 36445                           postdec2	equ	0xFDD
 36446                           plusw2	equ	0xFDB
 36447                           fsr2h	equ	0xFDA
 36448                           fsr2l	equ	0xFD9
 36449                           status	equ	0xFD8
 36450                           
 36451 ;; *************** function __i2c_send *****************
 36452 ;; Defined at:
 36453 ;;		line 69 in file "i2c.c"
 36454 ;; Parameters:    Size  Location     Type
 36455 ;;  dat             1    wreg     unsigned char 
 36456 ;; Auto vars:     Size  Location     Type
 36457 ;;  dat             1    0[BANK0 ] unsigned char 
 36458 ;; Return value:  Size  Location     Type
 36459 ;;                  1    wreg      void 
 36460 ;; Registers used:
 36461 ;;		wreg
 36462 ;; Tracked objects:
 36463 ;;		On entry : 0/0
 36464 ;;		On exit  : 0/0
 36465 ;;		Unchanged: 0/0
 36466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36468 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36470 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36471 ;;Total ram usage:        1 bytes
 36472 ;; Hardware stack levels used:    1
 36473 ;; Hardware stack levels required when called:   10
 36474 ;; This function calls:
 36475 ;;		Nothing
 36476 ;; This function is called by:
 36477 ;;		__i2c_write
 36478 ;;		__i2c_read
 36479 ;;		_i2c_display_write_fixed
 36480 ;;		_i2c_adc_read
 36481 ;;		_i2c_display_write
 36482 ;; This function uses a non-reentrant model
 36483 ;;
 36484                           
 36485                           	psect	text158
 36486  0190E4                     __ptext158:
 36487                           	opt stack 0
 36488  0190E4                     __i2c_send:
 36489                           	opt stack 17
 36490                           
 36491                           ;incstack = 0
 36492                           ;__i2c_send@dat stored from wreg
 36493  0190E4  0100               	movlb	0	; () banked
 36494  0190E6  6F60               	movwf	__i2c_send@dat& (0+255),b
 36495                           
 36496                           ;i2c.c: 71: SSP1BUF = dat;
 36497  0190E8  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 36498  0190EC  0012               	return		;funcret
 36499  0190EE                     __end_of__i2c_send:
 36500                           	opt stack 0
 36501                           tosu	equ	0xFFF
 36502                           tosh	equ	0xFFE
 36503                           tosl	equ	0xFFD
 36504                           pclath	equ	0xFFA
 36505                           tblptru	equ	0xFF8
 36506                           tblptrh	equ	0xFF7
 36507                           tblptrl	equ	0xFF6
 36508                           tablat	equ	0xFF5
 36509                           prodh	equ	0xFF4
 36510                           prodl	equ	0xFF3
 36511                           intcon	equ	0xFF2
 36512                           intcon2	equ	0xFF1
 36513                           intcon3	equ	0xFF0
 36514                           postinc0	equ	0xFEE
 36515                           wreg	equ	0xFE8
 36516                           indf1	equ	0xFE7
 36517                           postinc1	equ	0xFE6
 36518                           postdec1	equ	0xFE5
 36519                           plusw1	equ	0xFE3
 36520                           fsr1h	equ	0xFE2
 36521                           fsr1l	equ	0xFE1
 36522                           indf2	equ	0xFDF
 36523                           postinc2	equ	0xFDE
 36524                           postdec2	equ	0xFDD
 36525                           plusw2	equ	0xFDB
 36526                           fsr2h	equ	0xFDA
 36527                           fsr2l	equ	0xFD9
 36528                           status	equ	0xFD8
 36529                           
 36530 ;; *************** function _reboot *****************
 36531 ;; Defined at:
 36532 ;;		line 647 in file "os.c"
 36533 ;; Parameters:    Size  Location     Type
 36534 ;;		None
 36535 ;; Auto vars:     Size  Location     Type
 36536 ;;		None
 36537 ;; Return value:  Size  Location     Type
 36538 ;;                  1    wreg      void 
 36539 ;; Registers used:
 36540 ;;		None
 36541 ;; Tracked objects:
 36542 ;;		On entry : 0/0
 36543 ;;		On exit  : 0/0
 36544 ;;		Unchanged: 0/0
 36545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36550 ;;Total ram usage:        0 bytes
 36551 ;; Hardware stack levels used:    1
 36552 ;; Hardware stack levels required when called:   10
 36553 ;; This function calls:
 36554 ;;		Nothing
 36555 ;; This function is called by:
 36556 ;;		__parse_command_short
 36557 ;; This function uses a non-reentrant model
 36558 ;;
 36559                           
 36560                           	psect	text159
 36561  019120                     __ptext159:
 36562                           	opt stack 0
 36563  019120                     _reboot:
 36564                           	opt stack 17
 36565                           
 36566                           ;incstack = 0
 36567                           ;os.c: 658: while(1);
 36568  019120  D7FF               	goto	_reboot
 36569  019122                     __end_of_reboot:
 36570                           	opt stack 0
 36571                           tosu	equ	0xFFF
 36572                           tosh	equ	0xFFE
 36573                           tosl	equ	0xFFD
 36574                           pclath	equ	0xFFA
 36575                           tblptru	equ	0xFF8
 36576                           tblptrh	equ	0xFF7
 36577                           tblptrl	equ	0xFF6
 36578                           tablat	equ	0xFF5
 36579                           prodh	equ	0xFF4
 36580                           prodl	equ	0xFF3
 36581                           intcon	equ	0xFF2
 36582                           intcon2	equ	0xFF1
 36583                           intcon3	equ	0xFF0
 36584                           postinc0	equ	0xFEE
 36585                           wreg	equ	0xFE8
 36586                           indf1	equ	0xFE7
 36587                           postinc1	equ	0xFE6
 36588                           postdec1	equ	0xFE5
 36589                           plusw1	equ	0xFE3
 36590                           fsr1h	equ	0xFE2
 36591                           fsr1l	equ	0xFE1
 36592                           indf2	equ	0xFDF
 36593                           postinc2	equ	0xFDE
 36594                           postdec2	equ	0xFDD
 36595                           plusw2	equ	0xFDB
 36596                           fsr2h	equ	0xFDA
 36597                           fsr2l	equ	0xFD9
 36598                           status	equ	0xFD8
 36599                           
 36600 ;; *************** function __parse_command_long *****************
 36601 ;; Defined at:
 36602 ;;		line 573 in file "api.c"
 36603 ;; Parameters:    Size  Location     Type
 36604 ;;  data            2    0[BANK1 ] PTR unsigned char 
 36605 ;;		 -> ReceivedDataBuffer(64), 
 36606 ;;  out_buffer      2    2[BANK1 ] PTR unsigned char 
 36607 ;;		 -> ToSendDataBuffer(64), 
 36608 ;;  out_idx_ptr     2    4[BANK1 ] PTR unsigned char 
 36609 ;;		 -> api_parse@out_idx(1), 
 36610 ;; Auto vars:     Size  Location     Type
 36611 ;;  length          1  156[BANK0 ] unsigned char 
 36612 ;; Return value:  Size  Location     Type
 36613 ;;                  1    wreg      unsigned char 
 36614 ;; Registers used:
 36615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36616 ;; Tracked objects:
 36617 ;;		On entry : 0/0
 36618 ;;		On exit  : 0/0
 36619 ;;		Unchanged: 0/0
 36620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36621 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36622 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36624 ;;      Totals:         0       1       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36625 ;;Total ram usage:        7 bytes
 36626 ;; Hardware stack levels used:    1
 36627 ;; Hardware stack levels required when called:   20
 36628 ;; This function calls:
 36629 ;;		__parse_buffer_to_sector
 36630 ;;		__parse_calibration
 36631 ;;		__parse_file_append
 36632 ;;		__parse_file_copy
 36633 ;;		__parse_file_create
 36634 ;;		__parse_file_delete
 36635 ;;		__parse_file_modify
 36636 ;;		__parse_file_rename
 36637 ;;		__parse_file_resize
 36638 ;;		__parse_format_drive
 36639 ;;		__parse_sector_to_buffer
 36640 ;;		__parse_settings_i2c_frequency
 36641 ;;		__parse_settings_i2c_masterModeSlaveAddress
 36642 ;;		__parse_settings_i2c_mode
 36643 ;;		__parse_settings_i2c_slaveModeSlaveAddress
 36644 ;;		__parse_settings_spi_frequency
 36645 ;;		__parse_settings_spi_mode
 36646 ;;		__parse_settings_spi_polarity
 36647 ;;		__parse_write_buffer
 36648 ;;		_buck_remote_change_dutycycle
 36649 ;;		_buck_remote_set_dutycycle
 36650 ;;		_buck_remote_set_enable
 36651 ;;		_buck_remote_set_on
 36652 ;;		_buck_remote_set_synchronous
 36653 ;;		_rtcc_set_day
 36654 ;;		_rtcc_set_hours
 36655 ;;		_rtcc_set_minutes
 36656 ;;		_rtcc_set_month
 36657 ;;		_rtcc_set_seconds
 36658 ;;		_rtcc_set_year
 36659 ;; This function is called by:
 36660 ;;		_api_parse
 36661 ;; This function uses a non-reentrant model
 36662 ;;
 36663                           
 36664                           	psect	text160
 36665  00D38C                     __ptext160:
 36666                           	opt stack 0
 36667  00D38C                     __parse_command_long:
 36668                           	opt stack 8
 36669                           
 36670                           ;api.c: 575: uint8_t length = 65;
 36671                           
 36672                           ;incstack = 0
 36673  00D38C  0E41               	movlw	65
 36674  00D38E  0100               	movlb	0	; () banked
 36675  00D390  6FFC               	movwf	__parse_command_long@length& (0+255),b
 36676                           
 36677                           ;api.c: 577: switch(data[0])
 36678  00D392  D18D               	goto	l3633
 36679  00D394                     
 36680                           ; BSR set to: 0
 36681                           ;api.c: 580: rtcc_set_year(data[1]);
 36682                           
 36683                           ; BSR set to: 0
 36684  00D394  0101               	movlb	1	; () banked
 36685  00D396  EE20 F001          	lfsr	2,1
 36686  00D39A  5100               	movf	__parse_command_long@data& (0+255),w,b
 36687  00D39C  26D9               	addwf	fsr2l,f,c
 36688  00D39E  5101               	movf	(__parse_command_long@data+1)& (0+255),w,b
 36689  00D3A0  22DA               	addwfc	fsr2h,f,c
 36690  00D3A2  50DF               	movf	indf2,w,c
 36691  00D3A4  EC40  F0C7         	call	_rtcc_set_year
 36692  00D3A8  D061               	goto	l25981
 36693  00D3AA                     
 36694                           ; BSR set to: 0
 36695                           ;api.c: 585: rtcc_set_month(data[1]);
 36696                           
 36697                           ; BSR set to: 0
 36698  00D3AA  0101               	movlb	1	; () banked
 36699  00D3AC  EE20 F001          	lfsr	2,1
 36700  00D3B0  5100               	movf	__parse_command_long@data& (0+255),w,b
 36701  00D3B2  26D9               	addwf	fsr2l,f,c
 36702  00D3B4  5101               	movf	(__parse_command_long@data+1)& (0+255),w,b
 36703  00D3B6  22DA               	addwfc	fsr2h,f,c
 36704  00D3B8  50DF               	movf	indf2,w,c
 36705  00D3BA  EC58  F0C7         	call	_rtcc_set_month
 36706  00D3BE  D056               	goto	l25981
 36707  00D3C0                     
 36708                           ; BSR set to: 0
 36709                           ;api.c: 590: rtcc_set_day(data[1]);
 36710                           
 36711                           ; BSR set to: 0
 36712  00D3C0  0101               	movlb	1	; () banked
 36713  00D3C2  EE20 F001          	lfsr	2,1
 36714  00D3C6  5100               	movf	__parse_command_long@data& (0+255),w,b
 36715  00D3C8  26D9               	addwf	fsr2l,f,c
 36716  00D3CA  5101               	movf	(__parse_command_long@data+1)& (0+255),w,b
 36717  00D3CC  22DA               	addwfc	fsr2h,f,c
 36718  00D3CE  50DF               	movf	indf2,w,c
 36719  00D3D0  EC7C  F0C7         	call	_rtcc_set_day
 36720  00D3D4  D04B               	goto	l25981
 36721  00D3D6                     
 36722                           ; BSR set to: 0
 36723                           ;api.c: 595: rtcc_set_hours(data[1]);
 36724                           
 36725                           ; BSR set to: 0
 36726  00D3D6  0101               	movlb	1	; () banked
 36727  00D3D8  EE20 F001          	lfsr	2,1
 36728  00D3DC  5100               	movf	__parse_command_long@data& (0+255),w,b
 36729  00D3DE  26D9               	addwf	fsr2l,f,c
 36730  00D3E0  5101               	movf	(__parse_command_long@data+1)& (0+255),w,b
 36731  00D3E2  22DA               	addwfc	fsr2h,f,c
 36732  00D3E4  50DF               	movf	indf2,w,c
 36733  00D3E6  EC70  F0C7         	call	_rtcc_set_hours
 36734  00D3EA  D040               	goto	l25981
 36735  00D3EC                     
 36736                           ; BSR set to: 0
 36737                           ;api.c: 600: rtcc_set_minutes(data[1]);
 36738                           
 36739                           ; BSR set to: 0
 36740  00D3EC  0101               	movlb	1	; () banked
 36741  00D3EE  EE20 F001          	lfsr	2,1
 36742  00D3F2  5100               	movf	__parse_command_long@data& (0+255),w,b
 36743  00D3F4  26D9               	addwf	fsr2l,f,c
 36744  00D3F6  5101               	movf	(__parse_command_long@data+1)& (0+255),w,b
 36745  00D3F8  22DA               	addwfc	fsr2h,f,c
 36746  00D3FA  50DF               	movf	indf2,w,c
 36747  00D3FC  EC64  F0C7         	call	_rtcc_set_minutes
 36748  00D400  D035               	goto	l25981
 36749  00D402                     
 36750                           ; BSR set to: 0
 36751                           ;api.c: 605: rtcc_set_seconds(data[1]);
 36752                           
 36753                           ; BSR set to: 0
 36754  00D402  0101               	movlb	1	; () banked
 36755  00D404  EE20 F001          	lfsr	2,1
 36756  00D408  5100               	movf	__parse_command_long@data& (0+255),w,b
 36757  00D40A  26D9               	addwf	fsr2l,f,c
 36758  00D40C  5101               	movf	(__parse_command_long@data+1)& (0+255),w,b
 36759  00D40E  22DA               	addwfc	fsr2h,f,c
 36760  00D410  50DF               	movf	indf2,w,c
 36761  00D412  EC4C  F0C7         	call	_rtcc_set_seconds
 36762  00D416  D02A               	goto	l25981
 36763  00D418                     
 36764                           ; BSR set to: 0
 36765                           ;api.c: 610: buck_remote_set_enable(1);
 36766                           
 36767                           ; BSR set to: 0
 36768  00D418  0E01               	movlw	1
 36769  00D41A  ECCC  F0C6         	call	_buck_remote_set_enable
 36770  00D41E  D026               	goto	l25981
 36771  00D420                     
 36772                           ; BSR set to: 0
 36773                           ;api.c: 615: buck_remote_set_enable(0);
 36774                           
 36775                           ; BSR set to: 0
 36776  00D420  0E00               	movlw	0
 36777  00D422  ECCC  F0C6         	call	_buck_remote_set_enable
 36778  00D426  D022               	goto	l25981
 36779  00D428                     
 36780                           ; BSR set to: 0
 36781                           ;api.c: 620: buck_remote_set_on(1);
 36782                           
 36783                           ; BSR set to: 0
 36784  00D428  0E01               	movlw	1
 36785  00D42A  EC94  F0C7         	call	_buck_remote_set_on
 36786  00D42E  D01E               	goto	l25981
 36787  00D430                     
 36788                           ; BSR set to: 0
 36789                           ;api.c: 625: buck_remote_set_on(0);
 36790                           
 36791                           ; BSR set to: 0
 36792  00D430  0E00               	movlw	0
 36793  00D432  EC94  F0C7         	call	_buck_remote_set_on
 36794  00D436  D01A               	goto	l25981
 36795  00D438                     
 36796                           ; BSR set to: 0
 36797                           ;api.c: 630: buck_remote_set_synchronous(0);
 36798                           
 36799                           ; BSR set to: 0
 36800  00D438  0E00               	movlw	0
 36801  00D43A  EC88  F0C7         	call	_buck_remote_set_synchronous
 36802  00D43E  D016               	goto	l25981
 36803  00D440                     
 36804                           ; BSR set to: 0
 36805                           ;api.c: 635: buck_remote_set_synchronous(1);
 36806                           
 36807                           ; BSR set to: 0
 36808  00D440  0E01               	movlw	1
 36809  00D442  EC88  F0C7         	call	_buck_remote_set_synchronous
 36810  00D446  D012               	goto	l25981
 36811  00D448                     
 36812                           ; BSR set to: 0
 36813                           ;api.c: 640: buck_remote_change_dutycycle(-1);
 36814                           
 36815                           ; BSR set to: 0
 36816  00D448  0EFF               	movlw	255
 36817  00D44A  EC74  F0C0         	call	_buck_remote_change_dutycycle
 36818  00D44E  D00E               	goto	l25981
 36819  00D450                     
 36820                           ; BSR set to: 0
 36821                           ;api.c: 645: buck_remote_change_dutycycle(1);
 36822                           
 36823                           ; BSR set to: 0
 36824  00D450  0E01               	movlw	1
 36825  00D452  EC74  F0C0         	call	_buck_remote_change_dutycycle
 36826  00D456  D00A               	goto	l25981
 36827  00D458                     
 36828                           ; BSR set to: 0
 36829                           ;api.c: 650: buck_remote_set_dutycycle(data[1]);
 36830                           
 36831                           ; BSR set to: 0
 36832  00D458  0101               	movlb	1	; () banked
 36833  00D45A  EE20 F001          	lfsr	2,1
 36834  00D45E  5100               	movf	__parse_command_long@data& (0+255),w,b
 36835  00D460  26D9               	addwf	fsr2l,f,c
 36836  00D462  5101               	movf	(__parse_command_long@data+1)& (0+255),w,b
 36837  00D464  22DA               	addwfc	fsr2h,f,c
 36838  00D466  50DF               	movf	indf2,w,c
 36839  00D468  EC82  F0C5         	call	_buck_remote_set_dutycycle
 36840  00D46C                     l25981:
 36841                           
 36842                           ;api.c: 651: length = 2;
 36843  00D46C  0E02               	movlw	2
 36844  00D46E  D11C               	goto	L58
 36845  00D470                     
 36846                           ; BSR set to: 0
 36847                           ;api.c: 655: length = _parse_calibration(data, out_buffer, out_idx_ptr);
 36848                           
 36849                           ; BSR set to: 0
 36850  00D470  C100  F063         	movff	__parse_command_long@data,__parse_calibration@data
 36851  00D474  C101  F064         	movff	__parse_command_long@data+1,__parse_calibration@data+1
 36852  00D478  C102  F065         	movff	__parse_command_long@out_buffer,__parse_calibration@out_buffer
 36853  00D47C  C103  F066         	movff	__parse_command_long@out_buffer+1,__parse_calibration@out_buffer+1
 36854  00D480  C104  F067         	movff	__parse_command_long@out_idx_ptr,__parse_calibration@out_idx_ptr
 36855  00D484  C105  F068         	movff	__parse_command_long@out_idx_ptr+1,__parse_calibration@out_idx_ptr+1
 36856  00D488  EC3F  F089         	call	__parse_calibration	;wreg free
 36857  00D48C  D10D               	goto	L58
 36858  00D48E                     
 36859                           ; BSR set to: 0
 36860                           ;api.c: 659: length = _parse_file_resize(data, out_buffer, out_idx_ptr);
 36861                           
 36862                           ; BSR set to: 0
 36863  00D48E  C100  F0DB         	movff	__parse_command_long@data,__parse_file_resize@data
 36864  00D492  C101  F0DC         	movff	__parse_command_long@data+1,__parse_file_resize@data+1
 36865  00D496  C102  F0DD         	movff	__parse_command_long@out_buffer,__parse_file_resize@out_buffer
 36866  00D49A  C103  F0DE         	movff	__parse_command_long@out_buffer+1,__parse_file_resize@out_buffer+1
 36867  00D49E  C104  F0DF         	movff	__parse_command_long@out_idx_ptr,__parse_file_resize@out_idx_ptr
 36868  00D4A2  C105  F0E0         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_resize@out_idx_ptr+1
 36869  00D4A6  EC54  F084         	call	__parse_file_resize	;wreg free
 36870  00D4AA  D0FE               	goto	L58
 36871  00D4AC                     
 36872                           ; BSR set to: 0
 36873                           ;api.c: 663: length = _parse_file_delete(data, out_buffer, out_idx_ptr);
 36874                           
 36875                           ; BSR set to: 0
 36876  00D4AC  C100  F0AF         	movff	__parse_command_long@data,__parse_file_delete@data
 36877  00D4B0  C101  F0B0         	movff	__parse_command_long@data+1,__parse_file_delete@data+1
 36878  00D4B4  C102  F0B1         	movff	__parse_command_long@out_buffer,__parse_file_delete@out_buffer
 36879  00D4B8  C103  F0B2         	movff	__parse_command_long@out_buffer+1,__parse_file_delete@out_buffer+1
 36880  00D4BC  C104  F0B3         	movff	__parse_command_long@out_idx_ptr,__parse_file_delete@out_idx_ptr
 36881  00D4C0  C105  F0B4         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_delete@out_idx_ptr+1
 36882  00D4C4  EC9F  F0A2         	call	__parse_file_delete	;wreg free
 36883  00D4C8  D0EF               	goto	L58
 36884  00D4CA                     
 36885                           ; BSR set to: 0
 36886                           ;api.c: 667: length = _parse_file_create(data, out_buffer, out_idx_ptr);
 36887                           
 36888                           ; BSR set to: 0
 36889  00D4CA  C100  F0DD         	movff	__parse_command_long@data,__parse_file_create@data
 36890  00D4CE  C101  F0DE         	movff	__parse_command_long@data+1,__parse_file_create@data+1
 36891  00D4D2  C102  F0DF         	movff	__parse_command_long@out_buffer,__parse_file_create@out_buffer
 36892  00D4D6  C103  F0E0         	movff	__parse_command_long@out_buffer+1,__parse_file_create@out_buffer+1
 36893  00D4DA  C104  F0E1         	movff	__parse_command_long@out_idx_ptr,__parse_file_create@out_idx_ptr
 36894  00D4DE  C105  F0E2         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_create@out_idx_ptr+1
 36895  00D4E2  ECD8  F090         	call	__parse_file_create	;wreg free
 36896  00D4E6  D0E0               	goto	L58
 36897  00D4E8                     
 36898                           ; BSR set to: 0
 36899                           ;api.c: 671: length = _parse_file_rename(data, out_buffer, out_idx_ptr);
 36900                           
 36901                           ; BSR set to: 0
 36902  00D4E8  C100  F0BE         	movff	__parse_command_long@data,__parse_file_rename@data
 36903  00D4EC  C101  F0BF         	movff	__parse_command_long@data+1,__parse_file_rename@data+1
 36904  00D4F0  C102  F0C0         	movff	__parse_command_long@out_buffer,__parse_file_rename@out_buffer
 36905  00D4F4  C103  F0C1         	movff	__parse_command_long@out_buffer+1,__parse_file_rename@out_buffer+1
 36906  00D4F8  C104  F0C2         	movff	__parse_command_long@out_idx_ptr,__parse_file_rename@out_idx_ptr
 36907  00D4FC  C105  F0C3         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_rename@out_idx_ptr+1
 36908  00D500  ECE0  F09C         	call	__parse_file_rename	;wreg free
 36909  00D504  D0D1               	goto	L58
 36910  00D506                     
 36911                           ; BSR set to: 0
 36912                           ;api.c: 675: length = _parse_file_append(data, out_buffer, out_idx_ptr);
 36913                           
 36914                           ; BSR set to: 0
 36915  00D506  C100  F0F1         	movff	__parse_command_long@data,__parse_file_append@data
 36916  00D50A  C101  F0F2         	movff	__parse_command_long@data+1,__parse_file_append@data+1
 36917  00D50E  C102  F0F3         	movff	__parse_command_long@out_buffer,__parse_file_append@out_buffer
 36918  00D512  C103  F0F4         	movff	__parse_command_long@out_buffer+1,__parse_file_append@out_buffer+1
 36919  00D516  C104  F0F5         	movff	__parse_command_long@out_idx_ptr,__parse_file_append@out_idx_ptr
 36920  00D51A  C105  F0F6         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_append@out_idx_ptr+1
 36921  00D51E  ECC5  F08E         	call	__parse_file_append	;wreg free
 36922  00D522  D0C2               	goto	L58
 36923  00D524                     
 36924                           ; BSR set to: 0
 36925                           ;api.c: 679: length = _parse_file_modify(data, out_buffer, out_idx_ptr);
 36926                           
 36927                           ; BSR set to: 0
 36928  00D524  C100  F0E3         	movff	__parse_command_long@data,__parse_file_modify@data
 36929  00D528  C101  F0E4         	movff	__parse_command_long@data+1,__parse_file_modify@data+1
 36930  00D52C  C102  F0E5         	movff	__parse_command_long@out_buffer,__parse_file_modify@out_buffer
 36931  00D530  C103  F0E6         	movff	__parse_command_long@out_buffer+1,__parse_file_modify@out_buffer+1
 36932  00D534  C104  F0E7         	movff	__parse_command_long@out_idx_ptr,__parse_file_modify@out_idx_ptr
 36933  00D538  C105  F0E8         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_modify@out_idx_ptr+1
 36934  00D53C  EC24  F07A         	call	__parse_file_modify	;wreg free
 36935  00D540  D0B3               	goto	L58
 36936  00D542                     
 36937                           ; BSR set to: 0
 36938                           ;api.c: 683: length = _parse_format_drive(data, out_buffer, out_idx_ptr);
 36939                           
 36940                           ; BSR set to: 0
 36941  00D542  C100  F086         	movff	__parse_command_long@data,__parse_format_drive@data
 36942  00D546  C101  F087         	movff	__parse_command_long@data+1,__parse_format_drive@data+1
 36943  00D54A  C102  F088         	movff	__parse_command_long@out_buffer,__parse_format_drive@out_buffer
 36944  00D54E  C103  F089         	movff	__parse_command_long@out_buffer+1,__parse_format_drive@out_buffer+1
 36945  00D552  C104  F08A         	movff	__parse_command_long@out_idx_ptr,__parse_format_drive@out_idx_ptr
 36946  00D556  C105  F08B         	movff	__parse_command_long@out_idx_ptr+1,__parse_format_drive@out_idx_ptr+1
 36947  00D55A  EC2E  F0AE         	call	__parse_format_drive	;wreg free
 36948  00D55E  D0A4               	goto	L58
 36949  00D560                     
 36950                           ; BSR set to: 0
 36951                           ;api.c: 687: length = _parse_sector_to_buffer(data, out_buffer, out_idx_ptr);
 36952                           
 36953                           ; BSR set to: 0
 36954  00D560  C100  F0B3         	movff	__parse_command_long@data,__parse_sector_to_buffer@data
 36955  00D564  C101  F0B4         	movff	__parse_command_long@data+1,__parse_sector_to_buffer@data+1
 36956  00D568  C102  F0B5         	movff	__parse_command_long@out_buffer,__parse_sector_to_buffer@out_buffer
 36957  00D56C  C103  F0B6         	movff	__parse_command_long@out_buffer+1,__parse_sector_to_buffer@out_buffer+1
 36958  00D570  C104  F0B7         	movff	__parse_command_long@out_idx_ptr,__parse_sector_to_buffer@out_idx_ptr
 36959  00D574  C105  F0B8         	movff	__parse_command_long@out_idx_ptr+1,__parse_sector_to_buffer@out_idx_ptr+1
 36960  00D578  ECA0  F08C         	call	__parse_sector_to_buffer	;wreg free
 36961  00D57C  D095               	goto	L58
 36962  00D57E                     
 36963                           ; BSR set to: 0
 36964                           ;api.c: 691: length = _parse_buffer_to_sector(data, out_buffer, out_idx_ptr);
 36965                           
 36966                           ; BSR set to: 0
 36967  00D57E  C100  F0B1         	movff	__parse_command_long@data,__parse_buffer_to_sector@data
 36968  00D582  C101  F0B2         	movff	__parse_command_long@data+1,__parse_buffer_to_sector@data+1
 36969  00D586  C102  F0B3         	movff	__parse_command_long@out_buffer,__parse_buffer_to_sector@out_buffer
 36970  00D58A  C103  F0B4         	movff	__parse_command_long@out_buffer+1,__parse_buffer_to_sector@out_buffer+1
 36971  00D58E  C104  F0B5         	movff	__parse_command_long@out_idx_ptr,__parse_buffer_to_sector@out_idx_ptr
 36972  00D592  C105  F0B6         	movff	__parse_command_long@out_idx_ptr+1,__parse_buffer_to_sector@out_idx_ptr+1
 36973  00D596  EC78  F08F         	call	__parse_buffer_to_sector	;wreg free
 36974  00D59A  D086               	goto	L58
 36975  00D59C                     
 36976                           ; BSR set to: 0
 36977                           ;api.c: 695: length = _parse_write_buffer(data, out_buffer, out_idx_ptr);
 36978                           
 36979                           ; BSR set to: 0
 36980  00D59C  C100  F08A         	movff	__parse_command_long@data,__parse_write_buffer@data
 36981  00D5A0  C101  F08B         	movff	__parse_command_long@data+1,__parse_write_buffer@data+1
 36982  00D5A4  C102  F08C         	movff	__parse_command_long@out_buffer,__parse_write_buffer@out_buffer
 36983  00D5A8  C103  F08D         	movff	__parse_command_long@out_buffer+1,__parse_write_buffer@out_buffer+1
 36984  00D5AC  C104  F08E         	movff	__parse_command_long@out_idx_ptr,__parse_write_buffer@out_idx_ptr
 36985  00D5B0  C105  F08F         	movff	__parse_command_long@out_idx_ptr+1,__parse_write_buffer@out_idx_ptr+1
 36986  00D5B4  EC2B  F090         	call	__parse_write_buffer	;wreg free
 36987  00D5B8  D077               	goto	L58
 36988  00D5BA                     
 36989                           ; BSR set to: 0
 36990                           ;api.c: 699: length = _parse_file_copy(data, out_buffer, out_idx_ptr);
 36991                           
 36992                           ; BSR set to: 0
 36993  00D5BA  C100  F0F0         	movff	__parse_command_long@data,__parse_file_copy@data
 36994  00D5BE  C101  F0F1         	movff	__parse_command_long@data+1,__parse_file_copy@data+1
 36995  00D5C2  C102  F0F2         	movff	__parse_command_long@out_buffer,__parse_file_copy@out_buffer
 36996  00D5C6  C103  F0F3         	movff	__parse_command_long@out_buffer+1,__parse_file_copy@out_buffer+1
 36997  00D5CA  C104  F0F4         	movff	__parse_command_long@out_idx_ptr,__parse_file_copy@out_idx_ptr
 36998  00D5CE  C105  F0F5         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_copy@out_idx_ptr+1
 36999  00D5D2  EC5F  F09D         	call	__parse_file_copy	;wreg free
 37000  00D5D6  D068               	goto	L58
 37001  00D5D8                     
 37002                           ; BSR set to: 0
 37003                           ;api.c: 703: length = _parse_settings_spi_mode(data, out_buffer, out_idx_ptr);
 37004                           
 37005                           ; BSR set to: 0
 37006  00D5D8  C100  F060         	movff	__parse_command_long@data,__parse_settings_spi_mode@data
 37007  00D5DC  C101  F061         	movff	__parse_command_long@data+1,__parse_settings_spi_mode@data+1
 37008  00D5E0  C102  F062         	movff	__parse_command_long@out_buffer,__parse_settings_spi_mode@out_buffer
 37009  00D5E4  C103  F063         	movff	__parse_command_long@out_buffer+1,__parse_settings_spi_mode@out_buffer+1
 37010  00D5E8  C104  F064         	movff	__parse_command_long@out_idx_ptr,__parse_settings_spi_mode@out_idx_ptr
 37011  00D5EC  C105  F065         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_spi_mode@out_idx_ptr+1
 37012  00D5F0  EC80  F0A8         	call	__parse_settings_spi_mode	;wreg free
 37013  00D5F4  D059               	goto	L58
 37014  00D5F6                     
 37015                           ; BSR set to: 0
 37016                           ;api.c: 707: length = _parse_settings_spi_frequency(data, out_buffer, out_idx_ptr);
 37017                           
 37018                           ; BSR set to: 0
 37019  00D5F6  C100  F060         	movff	__parse_command_long@data,__parse_settings_spi_frequency@data
 37020  00D5FA  C101  F061         	movff	__parse_command_long@data+1,__parse_settings_spi_frequency@data+1
 37021  00D5FE  C102  F062         	movff	__parse_command_long@out_buffer,__parse_settings_spi_frequency@out_buffer
 37022  00D602  C103  F063         	movff	__parse_command_long@out_buffer+1,__parse_settings_spi_frequency@out_buffer+1
 37023  00D606  C104  F064         	movff	__parse_command_long@out_idx_ptr,__parse_settings_spi_frequency@out_idx_ptr
 37024  00D60A  C105  F065         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_spi_frequency@out_idx_ptr+1
 37025  00D60E  ECE4  F0A8         	call	__parse_settings_spi_frequency	;wreg free
 37026  00D612  D04A               	goto	L58
 37027  00D614                     
 37028                           ; BSR set to: 0
 37029                           ;api.c: 711: length = _parse_settings_spi_polarity(data, out_buffer, out_idx_ptr);
 37030                           
 37031                           ; BSR set to: 0
 37032  00D614  C100  F060         	movff	__parse_command_long@data,__parse_settings_spi_polarity@data
 37033  00D618  C101  F061         	movff	__parse_command_long@data+1,__parse_settings_spi_polarity@data+1
 37034  00D61C  C102  F062         	movff	__parse_command_long@out_buffer,__parse_settings_spi_polarity@out_buffer
 37035  00D620  C103  F063         	movff	__parse_command_long@out_buffer+1,__parse_settings_spi_polarity@out_buffer+1
 37036  00D624  C104  F064         	movff	__parse_command_long@out_idx_ptr,__parse_settings_spi_polarity@out_idx_ptr
 37037  00D628  C105  F065         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_spi_polarity@out_idx_ptr+1
 37038  00D62C  EC1C  F0A8         	call	__parse_settings_spi_polarity	;wreg free
 37039  00D630  D03B               	goto	L58
 37040  00D632                     
 37041                           ; BSR set to: 0
 37042                           ;api.c: 715: length = _parse_settings_i2c_mode(data, out_buffer, out_idx_ptr);
 37043                           
 37044                           ; BSR set to: 0
 37045  00D632  C100  F060         	movff	__parse_command_long@data,__parse_settings_i2c_mode@data
 37046  00D636  C101  F061         	movff	__parse_command_long@data+1,__parse_settings_i2c_mode@data+1
 37047  00D63A  C102  F062         	movff	__parse_command_long@out_buffer,__parse_settings_i2c_mode@out_buffer
 37048  00D63E  C103  F063         	movff	__parse_command_long@out_buffer+1,__parse_settings_i2c_mode@out_buffer+1
 37049  00D642  C104  F064         	movff	__parse_command_long@out_idx_ptr,__parse_settings_i2c_mode@out_idx_ptr
 37050  00D646  C105  F065         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_i2c_mode@out_idx_ptr+1
 37051  00D64A  ECAC  F0A9         	call	__parse_settings_i2c_mode	;wreg free
 37052  00D64E  D02C               	goto	L58
 37053  00D650                     
 37054                           ; BSR set to: 0
 37055                           ;api.c: 719: length = _parse_settings_i2c_frequency(data, out_buffer, out_idx_ptr);
 37056                           
 37057                           ; BSR set to: 0
 37058  00D650  C100  F060         	movff	__parse_command_long@data,__parse_settings_i2c_frequency@data
 37059  00D654  C101  F061         	movff	__parse_command_long@data+1,__parse_settings_i2c_frequency@data+1
 37060  00D658  C102  F062         	movff	__parse_command_long@out_buffer,__parse_settings_i2c_frequency@out_buffer
 37061  00D65C  C103  F063         	movff	__parse_command_long@out_buffer+1,__parse_settings_i2c_frequency@out_buffer+1
 37062  00D660  C104  F064         	movff	__parse_command_long@out_idx_ptr,__parse_settings_i2c_frequency@out_idx_ptr
 37063  00D664  C105  F065         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_i2c_frequency@out_idx_ptr+1
 37064  00D668  EC74  F0AA         	call	__parse_settings_i2c_frequency	;wreg free
 37065  00D66C  D01D               	goto	L58
 37066  00D66E                     
 37067                           ; BSR set to: 0
 37068                           ;api.c: 723: length = _parse_settings_i2c_slaveModeSlaveAddress(data, out_buffer, out_id
      +                          x_ptr);
 37069                           
 37070                           ; BSR set to: 0
 37071  00D66E  C100  F060         	movff	__parse_command_long@data,__parse_settings_i2c_slaveModeSlaveAddress@data
 37072  00D672  C101  F061         	movff	__parse_command_long@data+1,__parse_settings_i2c_slaveModeSlaveAddress@data+1
 37073  00D676  C102  F062         	movff	__parse_command_long@out_buffer,__parse_settings_i2c_slaveModeSlaveAddress@out_bu
      +                          ffer
 37074  00D67A  C103  F063         	movff	__parse_command_long@out_buffer+1,__parse_settings_i2c_slaveModeSlaveAddress@out_
      +                          buffer+1
 37075  00D67E  C104  F064         	movff	__parse_command_long@out_idx_ptr,__parse_settings_i2c_slaveModeSlaveAddress@out_i
      +                          dx_ptr
 37076  00D682  C105  F065         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_i2c_slaveModeSlaveAddress@out
      +                          _idx_ptr+1
 37077  00D686  EC48  F0A9         	call	__parse_settings_i2c_slaveModeSlaveAddress	;wreg free
 37078  00D68A  D00E               	goto	L58
 37079  00D68C                     
 37080                           ; BSR set to: 0
 37081                           ;api.c: 727: length = _parse_settings_i2c_masterModeSlaveAddress(data, out_buffer, out_i
      +                          dx_ptr);
 37082                           
 37083                           ; BSR set to: 0
 37084  00D68C  C100  F060         	movff	__parse_command_long@data,__parse_settings_i2c_masterModeSlaveAddress@data
 37085  00D690  C101  F061         	movff	__parse_command_long@data+1,__parse_settings_i2c_masterModeSlaveAddress@data+1
 37086  00D694  C102  F062         	movff	__parse_command_long@out_buffer,__parse_settings_i2c_masterModeSlaveAddress@out_b
      +                          uffer
 37087  00D698  C103  F063         	movff	__parse_command_long@out_buffer+1,__parse_settings_i2c_masterModeSlaveAddress@out
      +                          _buffer+1
 37088  00D69C  C104  F064         	movff	__parse_command_long@out_idx_ptr,__parse_settings_i2c_masterModeSlaveAddress@out_
      +                          idx_ptr
 37089  00D6A0  C105  F065         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_i2c_masterModeSlaveAddress@ou
      +                          t_idx_ptr+1
 37090  00D6A4  EC10  F0AA         	call	__parse_settings_i2c_masterModeSlaveAddress	;wreg free
 37091  00D6A8                     L58:
 37092  00D6A8  0100               	movlb	0	; () banked
 37093  00D6AA  6FFC               	movwf	__parse_command_long@length& (0+255),b
 37094                           
 37095                           ; BSR set to: 0
 37096                           ;api.c: 729: }
 37097                           
 37098                           ;api.c: 728: break;
 37099  00D6AC  D06B               	goto	l3635
 37100  00D6AE                     l3633:
 37101                           
 37102                           ; BSR set to: 0
 37103                           
 37104                           ; BSR set to: 0
 37105  00D6AE  C100  FFD9         	movff	__parse_command_long@data,fsr2l
 37106  00D6B2  C101  FFDA         	movff	__parse_command_long@data+1,fsr2h
 37107  00D6B6  50DF               	movf	indf2,w,c
 37108                           
 37109                           ; Switch size 1, requested type "space"
 37110                           ; Number of cases is 34, Range of values is 64 to 118
 37111                           ; switch strategies available:
 37112                           ; Name         Instructions Cycles
 37113                           ; simple_byte          103    52 (average)
 37114                           ;	Chosen strategy is simple_byte
 37115  00D6B8  0A40               	xorlw	64	; case 64
 37116  00D6BA  B4D8               	btfsc	status,2,c
 37117  00D6BC  D66B               	goto	l3634
 37118  00D6BE  0A01               	xorlw	1	; case 65
 37119  00D6C0  B4D8               	btfsc	status,2,c
 37120  00D6C2  D673               	goto	l3636
 37121  00D6C4  0A03               	xorlw	3	; case 66
 37122  00D6C6  B4D8               	btfsc	status,2,c
 37123  00D6C8  D67B               	goto	l3637
 37124  00D6CA  0A01               	xorlw	1	; case 67
 37125  00D6CC  B4D8               	btfsc	status,2,c
 37126  00D6CE  D683               	goto	l3638
 37127  00D6D0  0A07               	xorlw	7	; case 68
 37128  00D6D2  B4D8               	btfsc	status,2,c
 37129  00D6D4  D68B               	goto	l3639
 37130  00D6D6  0A01               	xorlw	1	; case 69
 37131  00D6D8  B4D8               	btfsc	status,2,c
 37132  00D6DA  D693               	goto	l3640
 37133  00D6DC  0A03               	xorlw	3	; case 70
 37134  00D6DE  B4D8               	btfsc	status,2,c
 37135  00D6E0  D69B               	goto	l3641
 37136  00D6E2  0A01               	xorlw	1	; case 71
 37137  00D6E4  B4D8               	btfsc	status,2,c
 37138  00D6E6  D69C               	goto	l3642
 37139  00D6E8  0A0F               	xorlw	15	; case 72
 37140  00D6EA  B4D8               	btfsc	status,2,c
 37141  00D6EC  D69D               	goto	l3643
 37142  00D6EE  0A01               	xorlw	1	; case 73
 37143  00D6F0  B4D8               	btfsc	status,2,c
 37144  00D6F2  D69E               	goto	l3644
 37145  00D6F4  0A03               	xorlw	3	; case 74
 37146  00D6F6  B4D8               	btfsc	status,2,c
 37147  00D6F8  D6A3               	goto	l3646
 37148  00D6FA  0A01               	xorlw	1	; case 75
 37149  00D6FC  B4D8               	btfsc	status,2,c
 37150  00D6FE  D69C               	goto	l3645
 37151  00D700  0A07               	xorlw	7	; case 76
 37152  00D702  B4D8               	btfsc	status,2,c
 37153  00D704  D6A1               	goto	l3647
 37154  00D706  0A01               	xorlw	1	; case 77
 37155  00D708  B4D8               	btfsc	status,2,c
 37156  00D70A  D6A2               	goto	l3648
 37157  00D70C  0A03               	xorlw	3	; case 78
 37158  00D70E  B4D8               	btfsc	status,2,c
 37159  00D710  D6A3               	goto	l3649
 37160  00D712  0A1E               	xorlw	30	; case 80
 37161  00D714  B4D8               	btfsc	status,2,c
 37162  00D716  D6BB               	goto	l3651
 37163  00D718  0A01               	xorlw	1	; case 81
 37164  00D71A  B4D8               	btfsc	status,2,c
 37165  00D71C  D6C7               	goto	l3652
 37166  00D71E  0A03               	xorlw	3	; case 82
 37167  00D720  B4D8               	btfsc	status,2,c
 37168  00D722  D6D3               	goto	l3653
 37169  00D724  0A01               	xorlw	1	; case 83
 37170  00D726  B4D8               	btfsc	status,2,c
 37171  00D728  D6DF               	goto	l3654
 37172  00D72A  0A07               	xorlw	7	; case 84
 37173  00D72C  B4D8               	btfsc	status,2,c
 37174  00D72E  D6EB               	goto	l3655
 37175  00D730  0A01               	xorlw	1	; case 85
 37176  00D732  B4D8               	btfsc	status,2,c
 37177  00D734  D6F7               	goto	l3656
 37178  00D736  0A03               	xorlw	3	; case 86
 37179  00D738  B4D8               	btfsc	status,2,c
 37180  00D73A  D703               	goto	l3657
 37181  00D73C  0A01               	xorlw	1	; case 87
 37182  00D73E  B4D8               	btfsc	status,2,c
 37183  00D740  D70F               	goto	l3658
 37184  00D742  0A0F               	xorlw	15	; case 88
 37185  00D744  B4D8               	btfsc	status,2,c
 37186  00D746  D71B               	goto	l3659
 37187  00D748  0A01               	xorlw	1	; case 89
 37188  00D74A  B4D8               	btfsc	status,2,c
 37189  00D74C  D727               	goto	l3660
 37190  00D74E  0A03               	xorlw	3	; case 90
 37191  00D750  B4D8               	btfsc	status,2,c
 37192  00D752  D733               	goto	l3661
 37193  00D754  0A3A               	xorlw	58	; case 96
 37194  00D756  B4D8               	btfsc	status,2,c
 37195  00D758  D68B               	goto	l3650
 37196  00D75A  0A10               	xorlw	16	; case 112
 37197  00D75C  B4D8               	btfsc	status,2,c
 37198  00D75E  D73C               	goto	l3662
 37199  00D760  0A01               	xorlw	1	; case 113
 37200  00D762  B4D8               	btfsc	status,2,c
 37201  00D764  D748               	goto	l3663
 37202  00D766  0A03               	xorlw	3	; case 114
 37203  00D768  B4D8               	btfsc	status,2,c
 37204  00D76A  D754               	goto	l3664
 37205  00D76C  0A01               	xorlw	1	; case 115
 37206  00D76E  B4D8               	btfsc	status,2,c
 37207  00D770  D760               	goto	l3665
 37208  00D772  0A07               	xorlw	7	; case 116
 37209  00D774  B4D8               	btfsc	status,2,c
 37210  00D776  D76C               	goto	l3666
 37211  00D778  0A01               	xorlw	1	; case 117
 37212  00D77A  B4D8               	btfsc	status,2,c
 37213  00D77C  D778               	goto	l3667
 37214  00D77E  0A03               	xorlw	3	; case 118
 37215  00D780  B4D8               	btfsc	status,2,c
 37216  00D782  D784               	goto	l3668
 37217  00D784                     l3635:
 37218                           
 37219                           ; BSR set to: 0
 37220                           ;api.c: 731: return length;
 37221                           
 37222                           ; BSR set to: 0
 37223  00D784  51FC               	movf	__parse_command_long@length& (0+255),w,b
 37224  00D786  0012               	return	
 37225  00D788                     __end_of__parse_command_long:
 37226                           	opt stack 0
 37227                           tosu	equ	0xFFF
 37228                           tosh	equ	0xFFE
 37229                           tosl	equ	0xFFD
 37230                           pclath	equ	0xFFA
 37231                           tblptru	equ	0xFF8
 37232                           tblptrh	equ	0xFF7
 37233                           tblptrl	equ	0xFF6
 37234                           tablat	equ	0xFF5
 37235                           prodh	equ	0xFF4
 37236                           prodl	equ	0xFF3
 37237                           intcon	equ	0xFF2
 37238                           intcon2	equ	0xFF1
 37239                           intcon3	equ	0xFF0
 37240                           postinc0	equ	0xFEE
 37241                           wreg	equ	0xFE8
 37242                           indf1	equ	0xFE7
 37243                           postinc1	equ	0xFE6
 37244                           postdec1	equ	0xFE5
 37245                           plusw1	equ	0xFE3
 37246                           fsr1h	equ	0xFE2
 37247                           fsr1l	equ	0xFE1
 37248                           indf2	equ	0xFDF
 37249                           postinc2	equ	0xFDE
 37250                           postdec2	equ	0xFDD
 37251                           plusw2	equ	0xFDB
 37252                           fsr2h	equ	0xFDA
 37253                           fsr2l	equ	0xFD9
 37254                           status	equ	0xFD8
 37255                           
 37256 ;; *************** function _rtcc_set_year *****************
 37257 ;; Defined at:
 37258 ;;		line 141 in file "rtcc.c"
 37259 ;; Parameters:    Size  Location     Type
 37260 ;;  year            1    wreg     unsigned char 
 37261 ;; Auto vars:     Size  Location     Type
 37262 ;;  year            1    0[BANK0 ] unsigned char 
 37263 ;; Return value:  Size  Location     Type
 37264 ;;                  1    wreg      void 
 37265 ;; Registers used:
 37266 ;;		wreg, status,2, cstack
 37267 ;; Tracked objects:
 37268 ;;		On entry : 0/0
 37269 ;;		On exit  : 0/0
 37270 ;;		Unchanged: 0/0
 37271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37273 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37275 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37276 ;;Total ram usage:        1 bytes
 37277 ;; Hardware stack levels used:    1
 37278 ;; Hardware stack levels required when called:   11
 37279 ;; This function calls:
 37280 ;;		__rtcc_write_disable
 37281 ;;		__rtcc_write_enable
 37282 ;; This function is called by:
 37283 ;;		_rtcc_increment_year
 37284 ;;		_rtcc_decrement_year
 37285 ;;		_rtcc_read_eeprom
 37286 ;;		__parse_command_long
 37287 ;; This function uses a non-reentrant model
 37288 ;;
 37289                           
 37290                           	psect	text161
 37291  018E80                     __ptext161:
 37292                           	opt stack 0
 37293  018E80                     _rtcc_set_year:
 37294                           	opt stack 16
 37295                           
 37296                           ; BSR set to: 0
 37297                           ;incstack = 0
 37298                           ;rtcc_set_year@year stored from wreg
 37299  018E80  0100               	movlb	0	; () banked
 37300  018E82  6F60               	movwf	rtcc_set_year@year& (0+255),b
 37301                           
 37302                           ;rtcc.c: 143: _rtcc_write_enable();
 37303  018E84  ECA0  F0C7         	call	__rtcc_write_enable	;wreg free
 37304                           
 37305                           ;rtcc.c: 144: RTCCFGbits.RTCPTR1 = 1;
 37306  018E88  010F               	movlb	15	; () banked
 37307  018E8A  833F               	bsf	63,1,b	;volatile
 37308                           
 37309                           ; BSR set to: 15
 37310                           ;rtcc.c: 145: RTCCFGbits.RTCPTR0 = 1;
 37311  018E8C  813F               	bsf	63,0,b	;volatile
 37312                           
 37313                           ; BSR set to: 15
 37314                           ;rtcc.c: 146: RTCVALL = year;
 37315  018E8E  C060  FF3A         	movff	rtcc_set_year@year,3898	;volatile
 37316                           
 37317                           ;rtcc.c: 147: _rtcc_write_disable();
 37318  018E92  ECAB  F0C7         	call	__rtcc_write_disable	;wreg free
 37319  018E96  0012               	return		;funcret
 37320  018E98                     __end_of_rtcc_set_year:
 37321                           	opt stack 0
 37322                           tosu	equ	0xFFF
 37323                           tosh	equ	0xFFE
 37324                           tosl	equ	0xFFD
 37325                           pclath	equ	0xFFA
 37326                           tblptru	equ	0xFF8
 37327                           tblptrh	equ	0xFF7
 37328                           tblptrl	equ	0xFF6
 37329                           tablat	equ	0xFF5
 37330                           prodh	equ	0xFF4
 37331                           prodl	equ	0xFF3
 37332                           intcon	equ	0xFF2
 37333                           intcon2	equ	0xFF1
 37334                           intcon3	equ	0xFF0
 37335                           postinc0	equ	0xFEE
 37336                           wreg	equ	0xFE8
 37337                           indf1	equ	0xFE7
 37338                           postinc1	equ	0xFE6
 37339                           postdec1	equ	0xFE5
 37340                           plusw1	equ	0xFE3
 37341                           fsr1h	equ	0xFE2
 37342                           fsr1l	equ	0xFE1
 37343                           indf2	equ	0xFDF
 37344                           postinc2	equ	0xFDE
 37345                           postdec2	equ	0xFDD
 37346                           plusw2	equ	0xFDB
 37347                           fsr2h	equ	0xFDA
 37348                           fsr2l	equ	0xFD9
 37349                           status	equ	0xFD8
 37350                           
 37351 ;; *************** function _rtcc_set_seconds *****************
 37352 ;; Defined at:
 37353 ;;		line 331 in file "rtcc.c"
 37354 ;; Parameters:    Size  Location     Type
 37355 ;;  seconds         1    wreg     unsigned char 
 37356 ;; Auto vars:     Size  Location     Type
 37357 ;;  seconds         1    0[BANK0 ] unsigned char 
 37358 ;; Return value:  Size  Location     Type
 37359 ;;                  1    wreg      void 
 37360 ;; Registers used:
 37361 ;;		wreg, status,2, cstack
 37362 ;; Tracked objects:
 37363 ;;		On entry : 0/0
 37364 ;;		On exit  : 0/0
 37365 ;;		Unchanged: 0/0
 37366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37368 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37370 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37371 ;;Total ram usage:        1 bytes
 37372 ;; Hardware stack levels used:    1
 37373 ;; Hardware stack levels required when called:   11
 37374 ;; This function calls:
 37375 ;;		__rtcc_write_disable
 37376 ;;		__rtcc_write_enable
 37377 ;; This function is called by:
 37378 ;;		_rtcc_increment_seconds
 37379 ;;		_rtcc_decrement_seconds
 37380 ;;		_rtcc_read_eeprom
 37381 ;;		__parse_command_long
 37382 ;; This function uses a non-reentrant model
 37383 ;;
 37384                           
 37385                           	psect	text162
 37386  018E98                     __ptext162:
 37387                           	opt stack 0
 37388  018E98                     _rtcc_set_seconds:
 37389                           	opt stack 16
 37390                           
 37391                           ;incstack = 0
 37392                           ;rtcc_set_seconds@seconds stored from wreg
 37393  018E98  0100               	movlb	0	; () banked
 37394  018E9A  6F60               	movwf	rtcc_set_seconds@seconds& (0+255),b
 37395                           
 37396                           ;rtcc.c: 333: _rtcc_write_enable();
 37397  018E9C  ECA0  F0C7         	call	__rtcc_write_enable	;wreg free
 37398                           
 37399                           ;rtcc.c: 334: RTCCFGbits.RTCPTR1 = 0;
 37400  018EA0  010F               	movlb	15	; () banked
 37401  018EA2  933F               	bcf	63,1,b	;volatile
 37402                           
 37403                           ; BSR set to: 15
 37404                           ;rtcc.c: 335: RTCCFGbits.RTCPTR0 = 0;
 37405  018EA4  913F               	bcf	63,0,b	;volatile
 37406                           
 37407                           ; BSR set to: 15
 37408                           ;rtcc.c: 336: RTCVALL = seconds;
 37409  018EA6  C060  FF3A         	movff	rtcc_set_seconds@seconds,3898	;volatile
 37410                           
 37411                           ;rtcc.c: 337: _rtcc_write_disable();
 37412  018EAA  ECAB  F0C7         	call	__rtcc_write_disable	;wreg free
 37413  018EAE  0012               	return		;funcret
 37414  018EB0                     __end_of_rtcc_set_seconds:
 37415                           	opt stack 0
 37416                           tosu	equ	0xFFF
 37417                           tosh	equ	0xFFE
 37418                           tosl	equ	0xFFD
 37419                           pclath	equ	0xFFA
 37420                           tblptru	equ	0xFF8
 37421                           tblptrh	equ	0xFF7
 37422                           tblptrl	equ	0xFF6
 37423                           tablat	equ	0xFF5
 37424                           prodh	equ	0xFF4
 37425                           prodl	equ	0xFF3
 37426                           intcon	equ	0xFF2
 37427                           intcon2	equ	0xFF1
 37428                           intcon3	equ	0xFF0
 37429                           postinc0	equ	0xFEE
 37430                           wreg	equ	0xFE8
 37431                           indf1	equ	0xFE7
 37432                           postinc1	equ	0xFE6
 37433                           postdec1	equ	0xFE5
 37434                           plusw1	equ	0xFE3
 37435                           fsr1h	equ	0xFE2
 37436                           fsr1l	equ	0xFE1
 37437                           indf2	equ	0xFDF
 37438                           postinc2	equ	0xFDE
 37439                           postdec2	equ	0xFDD
 37440                           plusw2	equ	0xFDB
 37441                           fsr2h	equ	0xFDA
 37442                           fsr2l	equ	0xFD9
 37443                           status	equ	0xFD8
 37444                           
 37445 ;; *************** function _rtcc_set_month *****************
 37446 ;; Defined at:
 37447 ;;		line 179 in file "rtcc.c"
 37448 ;; Parameters:    Size  Location     Type
 37449 ;;  month           1    wreg     unsigned char 
 37450 ;; Auto vars:     Size  Location     Type
 37451 ;;  month           1    0[BANK0 ] unsigned char 
 37452 ;; Return value:  Size  Location     Type
 37453 ;;                  1    wreg      void 
 37454 ;; Registers used:
 37455 ;;		wreg, status,2, cstack
 37456 ;; Tracked objects:
 37457 ;;		On entry : 0/0
 37458 ;;		On exit  : 0/0
 37459 ;;		Unchanged: 0/0
 37460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37462 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37464 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37465 ;;Total ram usage:        1 bytes
 37466 ;; Hardware stack levels used:    1
 37467 ;; Hardware stack levels required when called:   11
 37468 ;; This function calls:
 37469 ;;		__rtcc_write_disable
 37470 ;;		__rtcc_write_enable
 37471 ;; This function is called by:
 37472 ;;		_rtcc_increment_month
 37473 ;;		_rtcc_decrement_month
 37474 ;;		_rtcc_read_eeprom
 37475 ;;		__parse_command_long
 37476 ;; This function uses a non-reentrant model
 37477 ;;
 37478                           
 37479                           	psect	text163
 37480  018EB0                     __ptext163:
 37481                           	opt stack 0
 37482  018EB0                     _rtcc_set_month:
 37483                           	opt stack 16
 37484                           
 37485                           ;incstack = 0
 37486                           ;rtcc_set_month@month stored from wreg
 37487  018EB0  0100               	movlb	0	; () banked
 37488  018EB2  6F60               	movwf	rtcc_set_month@month& (0+255),b
 37489                           
 37490                           ;rtcc.c: 181: _rtcc_write_enable();
 37491  018EB4  ECA0  F0C7         	call	__rtcc_write_enable	;wreg free
 37492                           
 37493                           ;rtcc.c: 182: RTCCFGbits.RTCPTR1 = 1;
 37494  018EB8  010F               	movlb	15	; () banked
 37495  018EBA  833F               	bsf	63,1,b	;volatile
 37496                           
 37497                           ; BSR set to: 15
 37498                           ;rtcc.c: 183: RTCCFGbits.RTCPTR0 = 0;
 37499  018EBC  913F               	bcf	63,0,b	;volatile
 37500                           
 37501                           ; BSR set to: 15
 37502                           ;rtcc.c: 184: RTCVALH = month;
 37503  018EBE  C060  FF3B         	movff	rtcc_set_month@month,3899	;volatile
 37504                           
 37505                           ;rtcc.c: 185: _rtcc_write_disable();
 37506  018EC2  ECAB  F0C7         	call	__rtcc_write_disable	;wreg free
 37507  018EC6  0012               	return		;funcret
 37508  018EC8                     __end_of_rtcc_set_month:
 37509                           	opt stack 0
 37510                           tosu	equ	0xFFF
 37511                           tosh	equ	0xFFE
 37512                           tosl	equ	0xFFD
 37513                           pclath	equ	0xFFA
 37514                           tblptru	equ	0xFF8
 37515                           tblptrh	equ	0xFF7
 37516                           tblptrl	equ	0xFF6
 37517                           tablat	equ	0xFF5
 37518                           prodh	equ	0xFF4
 37519                           prodl	equ	0xFF3
 37520                           intcon	equ	0xFF2
 37521                           intcon2	equ	0xFF1
 37522                           intcon3	equ	0xFF0
 37523                           postinc0	equ	0xFEE
 37524                           wreg	equ	0xFE8
 37525                           indf1	equ	0xFE7
 37526                           postinc1	equ	0xFE6
 37527                           postdec1	equ	0xFE5
 37528                           plusw1	equ	0xFE3
 37529                           fsr1h	equ	0xFE2
 37530                           fsr1l	equ	0xFE1
 37531                           indf2	equ	0xFDF
 37532                           postinc2	equ	0xFDE
 37533                           postdec2	equ	0xFDD
 37534                           plusw2	equ	0xFDB
 37535                           fsr2h	equ	0xFDA
 37536                           fsr2l	equ	0xFD9
 37537                           status	equ	0xFD8
 37538                           
 37539 ;; *************** function _rtcc_set_minutes *****************
 37540 ;; Defined at:
 37541 ;;		line 293 in file "rtcc.c"
 37542 ;; Parameters:    Size  Location     Type
 37543 ;;  minutes         1    wreg     unsigned char 
 37544 ;; Auto vars:     Size  Location     Type
 37545 ;;  minutes         1    0[BANK0 ] unsigned char 
 37546 ;; Return value:  Size  Location     Type
 37547 ;;                  1    wreg      void 
 37548 ;; Registers used:
 37549 ;;		wreg, status,2, cstack
 37550 ;; Tracked objects:
 37551 ;;		On entry : 0/0
 37552 ;;		On exit  : 0/0
 37553 ;;		Unchanged: 0/0
 37554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37556 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37558 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37559 ;;Total ram usage:        1 bytes
 37560 ;; Hardware stack levels used:    1
 37561 ;; Hardware stack levels required when called:   11
 37562 ;; This function calls:
 37563 ;;		__rtcc_write_disable
 37564 ;;		__rtcc_write_enable
 37565 ;; This function is called by:
 37566 ;;		_rtcc_increment_minutes
 37567 ;;		_rtcc_decrement_minutes
 37568 ;;		_rtcc_read_eeprom
 37569 ;;		__parse_command_long
 37570 ;; This function uses a non-reentrant model
 37571 ;;
 37572                           
 37573                           	psect	text164
 37574  018EC8                     __ptext164:
 37575                           	opt stack 0
 37576  018EC8                     _rtcc_set_minutes:
 37577                           	opt stack 16
 37578                           
 37579                           ;incstack = 0
 37580                           ;rtcc_set_minutes@minutes stored from wreg
 37581  018EC8  0100               	movlb	0	; () banked
 37582  018ECA  6F60               	movwf	rtcc_set_minutes@minutes& (0+255),b
 37583                           
 37584                           ;rtcc.c: 295: _rtcc_write_enable();
 37585  018ECC  ECA0  F0C7         	call	__rtcc_write_enable	;wreg free
 37586                           
 37587                           ;rtcc.c: 296: RTCCFGbits.RTCPTR1 = 0;
 37588  018ED0  010F               	movlb	15	; () banked
 37589  018ED2  933F               	bcf	63,1,b	;volatile
 37590                           
 37591                           ; BSR set to: 15
 37592                           ;rtcc.c: 297: RTCCFGbits.RTCPTR0 = 0;
 37593  018ED4  913F               	bcf	63,0,b	;volatile
 37594                           
 37595                           ; BSR set to: 15
 37596                           ;rtcc.c: 298: RTCVALH = minutes;
 37597  018ED6  C060  FF3B         	movff	rtcc_set_minutes@minutes,3899	;volatile
 37598                           
 37599                           ;rtcc.c: 299: _rtcc_write_disable();
 37600  018EDA  ECAB  F0C7         	call	__rtcc_write_disable	;wreg free
 37601  018EDE  0012               	return		;funcret
 37602  018EE0                     __end_of_rtcc_set_minutes:
 37603                           	opt stack 0
 37604                           tosu	equ	0xFFF
 37605                           tosh	equ	0xFFE
 37606                           tosl	equ	0xFFD
 37607                           pclath	equ	0xFFA
 37608                           tblptru	equ	0xFF8
 37609                           tblptrh	equ	0xFF7
 37610                           tblptrl	equ	0xFF6
 37611                           tablat	equ	0xFF5
 37612                           prodh	equ	0xFF4
 37613                           prodl	equ	0xFF3
 37614                           intcon	equ	0xFF2
 37615                           intcon2	equ	0xFF1
 37616                           intcon3	equ	0xFF0
 37617                           postinc0	equ	0xFEE
 37618                           wreg	equ	0xFE8
 37619                           indf1	equ	0xFE7
 37620                           postinc1	equ	0xFE6
 37621                           postdec1	equ	0xFE5
 37622                           plusw1	equ	0xFE3
 37623                           fsr1h	equ	0xFE2
 37624                           fsr1l	equ	0xFE1
 37625                           indf2	equ	0xFDF
 37626                           postinc2	equ	0xFDE
 37627                           postdec2	equ	0xFDD
 37628                           plusw2	equ	0xFDB
 37629                           fsr2h	equ	0xFDA
 37630                           fsr2l	equ	0xFD9
 37631                           status	equ	0xFD8
 37632                           
 37633 ;; *************** function _rtcc_set_hours *****************
 37634 ;; Defined at:
 37635 ;;		line 255 in file "rtcc.c"
 37636 ;; Parameters:    Size  Location     Type
 37637 ;;  hours           1    wreg     unsigned char 
 37638 ;; Auto vars:     Size  Location     Type
 37639 ;;  hours           1    0[BANK0 ] unsigned char 
 37640 ;; Return value:  Size  Location     Type
 37641 ;;                  1    wreg      void 
 37642 ;; Registers used:
 37643 ;;		wreg, status,2, cstack
 37644 ;; Tracked objects:
 37645 ;;		On entry : 0/0
 37646 ;;		On exit  : 0/0
 37647 ;;		Unchanged: 0/0
 37648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37650 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37652 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37653 ;;Total ram usage:        1 bytes
 37654 ;; Hardware stack levels used:    1
 37655 ;; Hardware stack levels required when called:   11
 37656 ;; This function calls:
 37657 ;;		__rtcc_write_disable
 37658 ;;		__rtcc_write_enable
 37659 ;; This function is called by:
 37660 ;;		_rtcc_increment_hours
 37661 ;;		_rtcc_decrement_hours
 37662 ;;		_rtcc_read_eeprom
 37663 ;;		__parse_command_long
 37664 ;; This function uses a non-reentrant model
 37665 ;;
 37666                           
 37667                           	psect	text165
 37668  018EE0                     __ptext165:
 37669                           	opt stack 0
 37670  018EE0                     _rtcc_set_hours:
 37671                           	opt stack 16
 37672                           
 37673                           ;incstack = 0
 37674                           ;rtcc_set_hours@hours stored from wreg
 37675  018EE0  0100               	movlb	0	; () banked
 37676  018EE2  6F60               	movwf	rtcc_set_hours@hours& (0+255),b
 37677                           
 37678                           ;rtcc.c: 257: _rtcc_write_enable();
 37679  018EE4  ECA0  F0C7         	call	__rtcc_write_enable	;wreg free
 37680                           
 37681                           ;rtcc.c: 258: RTCCFGbits.RTCPTR1 = 0;
 37682  018EE8  010F               	movlb	15	; () banked
 37683  018EEA  933F               	bcf	63,1,b	;volatile
 37684                           
 37685                           ; BSR set to: 15
 37686                           ;rtcc.c: 259: RTCCFGbits.RTCPTR0 = 1;
 37687  018EEC  813F               	bsf	63,0,b	;volatile
 37688                           
 37689                           ; BSR set to: 15
 37690                           ;rtcc.c: 260: RTCVALL = hours;
 37691  018EEE  C060  FF3A         	movff	rtcc_set_hours@hours,3898	;volatile
 37692                           
 37693                           ;rtcc.c: 261: _rtcc_write_disable();
 37694  018EF2  ECAB  F0C7         	call	__rtcc_write_disable	;wreg free
 37695  018EF6  0012               	return		;funcret
 37696  018EF8                     __end_of_rtcc_set_hours:
 37697                           	opt stack 0
 37698                           tosu	equ	0xFFF
 37699                           tosh	equ	0xFFE
 37700                           tosl	equ	0xFFD
 37701                           pclath	equ	0xFFA
 37702                           tblptru	equ	0xFF8
 37703                           tblptrh	equ	0xFF7
 37704                           tblptrl	equ	0xFF6
 37705                           tablat	equ	0xFF5
 37706                           prodh	equ	0xFF4
 37707                           prodl	equ	0xFF3
 37708                           intcon	equ	0xFF2
 37709                           intcon2	equ	0xFF1
 37710                           intcon3	equ	0xFF0
 37711                           postinc0	equ	0xFEE
 37712                           wreg	equ	0xFE8
 37713                           indf1	equ	0xFE7
 37714                           postinc1	equ	0xFE6
 37715                           postdec1	equ	0xFE5
 37716                           plusw1	equ	0xFE3
 37717                           fsr1h	equ	0xFE2
 37718                           fsr1l	equ	0xFE1
 37719                           indf2	equ	0xFDF
 37720                           postinc2	equ	0xFDE
 37721                           postdec2	equ	0xFDD
 37722                           plusw2	equ	0xFDB
 37723                           fsr2h	equ	0xFDA
 37724                           fsr2l	equ	0xFD9
 37725                           status	equ	0xFD8
 37726                           
 37727 ;; *************** function _rtcc_set_day *****************
 37728 ;; Defined at:
 37729 ;;		line 217 in file "rtcc.c"
 37730 ;; Parameters:    Size  Location     Type
 37731 ;;  day             1    wreg     unsigned char 
 37732 ;; Auto vars:     Size  Location     Type
 37733 ;;  day             1    0[BANK0 ] unsigned char 
 37734 ;; Return value:  Size  Location     Type
 37735 ;;                  1    wreg      void 
 37736 ;; Registers used:
 37737 ;;		wreg, status,2, cstack
 37738 ;; Tracked objects:
 37739 ;;		On entry : 0/0
 37740 ;;		On exit  : 0/0
 37741 ;;		Unchanged: 0/0
 37742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37744 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37746 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37747 ;;Total ram usage:        1 bytes
 37748 ;; Hardware stack levels used:    1
 37749 ;; Hardware stack levels required when called:   11
 37750 ;; This function calls:
 37751 ;;		__rtcc_write_disable
 37752 ;;		__rtcc_write_enable
 37753 ;; This function is called by:
 37754 ;;		_rtcc_correct_day
 37755 ;;		_rtcc_increment_day
 37756 ;;		_rtcc_decrement_day
 37757 ;;		_rtcc_read_eeprom
 37758 ;;		__parse_command_long
 37759 ;; This function uses a non-reentrant model
 37760 ;;
 37761                           
 37762                           	psect	text166
 37763  018EF8                     __ptext166:
 37764                           	opt stack 0
 37765  018EF8                     _rtcc_set_day:
 37766                           	opt stack 16
 37767                           
 37768                           ;incstack = 0
 37769                           ;rtcc_set_day@day stored from wreg
 37770  018EF8  0100               	movlb	0	; () banked
 37771  018EFA  6F60               	movwf	rtcc_set_day@day& (0+255),b
 37772                           
 37773                           ;rtcc.c: 219: _rtcc_write_enable();
 37774  018EFC  ECA0  F0C7         	call	__rtcc_write_enable	;wreg free
 37775                           
 37776                           ;rtcc.c: 220: RTCCFGbits.RTCPTR1 = 1;
 37777  018F00  010F               	movlb	15	; () banked
 37778  018F02  833F               	bsf	63,1,b	;volatile
 37779                           
 37780                           ; BSR set to: 15
 37781                           ;rtcc.c: 221: RTCCFGbits.RTCPTR0 = 0;
 37782  018F04  913F               	bcf	63,0,b	;volatile
 37783                           
 37784                           ; BSR set to: 15
 37785                           ;rtcc.c: 222: RTCVALL = day;
 37786  018F06  C060  FF3A         	movff	rtcc_set_day@day,3898	;volatile
 37787                           
 37788                           ;rtcc.c: 223: _rtcc_write_disable();
 37789  018F0A  ECAB  F0C7         	call	__rtcc_write_disable	;wreg free
 37790  018F0E  0012               	return		;funcret
 37791  018F10                     __end_of_rtcc_set_day:
 37792                           	opt stack 0
 37793                           tosu	equ	0xFFF
 37794                           tosh	equ	0xFFE
 37795                           tosl	equ	0xFFD
 37796                           pclath	equ	0xFFA
 37797                           tblptru	equ	0xFF8
 37798                           tblptrh	equ	0xFF7
 37799                           tblptrl	equ	0xFF6
 37800                           tablat	equ	0xFF5
 37801                           prodh	equ	0xFF4
 37802                           prodl	equ	0xFF3
 37803                           intcon	equ	0xFF2
 37804                           intcon2	equ	0xFF1
 37805                           intcon3	equ	0xFF0
 37806                           postinc0	equ	0xFEE
 37807                           wreg	equ	0xFE8
 37808                           indf1	equ	0xFE7
 37809                           postinc1	equ	0xFE6
 37810                           postdec1	equ	0xFE5
 37811                           plusw1	equ	0xFE3
 37812                           fsr1h	equ	0xFE2
 37813                           fsr1l	equ	0xFE1
 37814                           indf2	equ	0xFDF
 37815                           postinc2	equ	0xFDE
 37816                           postdec2	equ	0xFDD
 37817                           plusw2	equ	0xFDB
 37818                           fsr2h	equ	0xFDA
 37819                           fsr2l	equ	0xFD9
 37820                           status	equ	0xFD8
 37821                           
 37822 ;; *************** function __rtcc_write_enable *****************
 37823 ;; Defined at:
 37824 ;;		line 14 in file "rtcc.c"
 37825 ;; Parameters:    Size  Location     Type
 37826 ;;		None
 37827 ;; Auto vars:     Size  Location     Type
 37828 ;;		None
 37829 ;; Return value:  Size  Location     Type
 37830 ;;                  1    wreg      void 
 37831 ;; Registers used:
 37832 ;;		wreg, status,2
 37833 ;; Tracked objects:
 37834 ;;		On entry : 0/0
 37835 ;;		On exit  : 0/0
 37836 ;;		Unchanged: 0/0
 37837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37842 ;;Total ram usage:        0 bytes
 37843 ;; Hardware stack levels used:    1
 37844 ;; Hardware stack levels required when called:   10
 37845 ;; This function calls:
 37846 ;;		Nothing
 37847 ;; This function is called by:
 37848 ;;		_rtcc_set_year
 37849 ;;		_rtcc_set_month
 37850 ;;		_rtcc_set_day
 37851 ;;		_rtcc_set_hours
 37852 ;;		_rtcc_set_minutes
 37853 ;;		_rtcc_set_seconds
 37854 ;; This function uses a non-reentrant model
 37855 ;;
 37856                           
 37857                           	psect	text167
 37858  018F40                     __ptext167:
 37859                           	opt stack 0
 37860  018F40                     __rtcc_write_enable:
 37861                           	opt stack 16
 37862                           
 37863                           ;rtcc.c: 16: while(!RTCCFGbits.RTCWREN)
 37864                           
 37865                           ;incstack = 0
 37866  018F40  D006               	goto	l2071
 37867  018F42                     
 37868                           ;rtcc.c: 17: {;rtcc.c: 18: EECON2 = 0x55;
 37869  018F42  0E55               	movlw	85
 37870  018F44  6EA7               	movwf	4007,c	;volsfr
 37871                           
 37872                           ;rtcc.c: 19: EECON2 = 0xAA;
 37873  018F46  0EAA               	movlw	170
 37874  018F48  6EA7               	movwf	4007,c	;volsfr
 37875                           
 37876                           ;rtcc.c: 20: RTCCFGbits.RTCWREN = 1;
 37877  018F4A  010F               	movlb	15	; () banked
 37878  018F4C  8B3F               	bsf	63,5,b	;volatile
 37879  018F4E                     l2071:
 37880                           
 37881                           ; BSR set to: 15
 37882  018F4E  010F               	movlb	15	; () banked
 37883  018F50  BB3F               	btfsc	63,5,b	;volatile
 37884  018F52  0012               	return	
 37885  018F54  D7F6               	goto	l2072
 37886  018F56                     __end_of__rtcc_write_enable:
 37887                           	opt stack 0
 37888                           tosu	equ	0xFFF
 37889                           tosh	equ	0xFFE
 37890                           tosl	equ	0xFFD
 37891                           pclath	equ	0xFFA
 37892                           tblptru	equ	0xFF8
 37893                           tblptrh	equ	0xFF7
 37894                           tblptrl	equ	0xFF6
 37895                           tablat	equ	0xFF5
 37896                           prodh	equ	0xFF4
 37897                           prodl	equ	0xFF3
 37898                           intcon	equ	0xFF2
 37899                           intcon2	equ	0xFF1
 37900                           intcon3	equ	0xFF0
 37901                           postinc0	equ	0xFEE
 37902                           wreg	equ	0xFE8
 37903                           indf1	equ	0xFE7
 37904                           postinc1	equ	0xFE6
 37905                           postdec1	equ	0xFE5
 37906                           plusw1	equ	0xFE3
 37907                           fsr1h	equ	0xFE2
 37908                           fsr1l	equ	0xFE1
 37909                           indf2	equ	0xFDF
 37910                           postinc2	equ	0xFDE
 37911                           postdec2	equ	0xFDD
 37912                           plusw2	equ	0xFDB
 37913                           fsr2h	equ	0xFDA
 37914                           fsr2l	equ	0xFD9
 37915                           status	equ	0xFD8
 37916                           
 37917 ;; *************** function __rtcc_write_disable *****************
 37918 ;; Defined at:
 37919 ;;		line 24 in file "rtcc.c"
 37920 ;; Parameters:    Size  Location     Type
 37921 ;;		None
 37922 ;; Auto vars:     Size  Location     Type
 37923 ;;		None
 37924 ;; Return value:  Size  Location     Type
 37925 ;;                  1    wreg      void 
 37926 ;; Registers used:
 37927 ;;		wreg, status,2
 37928 ;; Tracked objects:
 37929 ;;		On entry : 0/0
 37930 ;;		On exit  : 0/0
 37931 ;;		Unchanged: 0/0
 37932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37937 ;;Total ram usage:        0 bytes
 37938 ;; Hardware stack levels used:    1
 37939 ;; Hardware stack levels required when called:   10
 37940 ;; This function calls:
 37941 ;;		Nothing
 37942 ;; This function is called by:
 37943 ;;		_rtcc_set_year
 37944 ;;		_rtcc_set_month
 37945 ;;		_rtcc_set_day
 37946 ;;		_rtcc_set_hours
 37947 ;;		_rtcc_set_minutes
 37948 ;;		_rtcc_set_seconds
 37949 ;; This function uses a non-reentrant model
 37950 ;;
 37951                           
 37952                           	psect	text168
 37953  018F56                     __ptext168:
 37954                           	opt stack 0
 37955  018F56                     __rtcc_write_disable:
 37956                           	opt stack 16
 37957                           
 37958                           ;rtcc.c: 26: while(RTCCFGbits.RTCWREN)
 37959                           
 37960                           ; BSR set to: 15
 37961                           ;incstack = 0
 37962  018F56  D006               	goto	l2077
 37963  018F58                     
 37964                           ;rtcc.c: 27: {;rtcc.c: 28: EECON2 = 0x55;
 37965  018F58  0E55               	movlw	85
 37966  018F5A  6EA7               	movwf	4007,c	;volsfr
 37967                           
 37968                           ;rtcc.c: 29: EECON2 = 0xAA;
 37969  018F5C  0EAA               	movlw	170
 37970  018F5E  6EA7               	movwf	4007,c	;volsfr
 37971                           
 37972                           ;rtcc.c: 30: RTCCFGbits.RTCWREN = 0;
 37973  018F60  010F               	movlb	15	; () banked
 37974  018F62  9B3F               	bcf	63,5,b	;volatile
 37975  018F64                     l2077:
 37976                           
 37977                           ; BSR set to: 15
 37978  018F64  010F               	movlb	15	; () banked
 37979  018F66  AB3F               	btfss	63,5,b	;volatile
 37980  018F68  0012               	return	
 37981  018F6A  D7F6               	goto	l2078
 37982  018F6C                     __end_of__rtcc_write_disable:
 37983                           	opt stack 0
 37984                           tosu	equ	0xFFF
 37985                           tosh	equ	0xFFE
 37986                           tosl	equ	0xFFD
 37987                           pclath	equ	0xFFA
 37988                           tblptru	equ	0xFF8
 37989                           tblptrh	equ	0xFF7
 37990                           tblptrl	equ	0xFF6
 37991                           tablat	equ	0xFF5
 37992                           prodh	equ	0xFF4
 37993                           prodl	equ	0xFF3
 37994                           intcon	equ	0xFF2
 37995                           intcon2	equ	0xFF1
 37996                           intcon3	equ	0xFF0
 37997                           postinc0	equ	0xFEE
 37998                           wreg	equ	0xFE8
 37999                           indf1	equ	0xFE7
 38000                           postinc1	equ	0xFE6
 38001                           postdec1	equ	0xFE5
 38002                           plusw1	equ	0xFE3
 38003                           fsr1h	equ	0xFE2
 38004                           fsr1l	equ	0xFE1
 38005                           indf2	equ	0xFDF
 38006                           postinc2	equ	0xFDE
 38007                           postdec2	equ	0xFDD
 38008                           plusw2	equ	0xFDB
 38009                           fsr2h	equ	0xFDA
 38010                           fsr2l	equ	0xFD9
 38011                           status	equ	0xFD8
 38012                           
 38013 ;; *************** function _buck_remote_set_synchronous *****************
 38014 ;; Defined at:
 38015 ;;		line 621 in file "buck.c"
 38016 ;; Parameters:    Size  Location     Type
 38017 ;;  synchronous     1    wreg     unsigned char 
 38018 ;; Auto vars:     Size  Location     Type
 38019 ;;  synchronous     1    0[BANK0 ] unsigned char 
 38020 ;; Return value:  Size  Location     Type
 38021 ;;                  1    wreg      void 
 38022 ;; Registers used:
 38023 ;;		wreg, status,2
 38024 ;; Tracked objects:
 38025 ;;		On entry : 0/0
 38026 ;;		On exit  : 0/0
 38027 ;;		Unchanged: 0/0
 38028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38030 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38032 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38033 ;;Total ram usage:        1 bytes
 38034 ;; Hardware stack levels used:    1
 38035 ;; Hardware stack levels required when called:   10
 38036 ;; This function calls:
 38037 ;;		Nothing
 38038 ;; This function is called by:
 38039 ;;		__parse_command_long
 38040 ;; This function uses a non-reentrant model
 38041 ;;
 38042                           
 38043                           	psect	text169
 38044  018F10                     __ptext169:
 38045                           	opt stack 0
 38046  018F10                     _buck_remote_set_synchronous:
 38047                           	opt stack 17
 38048                           
 38049                           ; BSR set to: 15
 38050                           ;incstack = 0
 38051                           ;buck_remote_set_synchronous@synchronous stored from wreg
 38052  018F10  0100               	movlb	0	; () banked
 38053  018F12  6F60               	movwf	buck_remote_set_synchronous@synchronous& (0+255),b
 38054                           
 38055                           ;buck.c: 623: if(synchronous)
 38056  018F14  0100               	movlb	0	; () banked
 38057  018F16  5160               	movf	buck_remote_set_synchronous@synchronous& (0+255),w,b
 38058  018F18  B4D8               	btfsc	status,2,c
 38059  018F1A  D003               	goto	l2458
 38060                           
 38061                           ; BSR set to: 0
 38062                           ;buck.c: 624: buck_remote_synchronous = 1;
 38063  018F1C  0E01               	movlw	1
 38064  018F1E  6E1C               	movwf	_buck_remote_synchronous,c
 38065  018F20  0012               	return	
 38066  018F22                     l2458:
 38067                           
 38068                           ; BSR set to: 0
 38069                           ;buck.c: 625: else;buck.c: 626: buck_remote_synchronous = 0;
 38070                           
 38071                           ; BSR set to: 0
 38072  018F22  0E00               	movlw	0
 38073  018F24  6E1C               	movwf	_buck_remote_synchronous,c
 38074  018F26  0012               	return	
 38075  018F28                     __end_of_buck_remote_set_synchronous:
 38076                           	opt stack 0
 38077                           tosu	equ	0xFFF
 38078                           tosh	equ	0xFFE
 38079                           tosl	equ	0xFFD
 38080                           pclath	equ	0xFFA
 38081                           tblptru	equ	0xFF8
 38082                           tblptrh	equ	0xFF7
 38083                           tblptrl	equ	0xFF6
 38084                           tablat	equ	0xFF5
 38085                           prodh	equ	0xFF4
 38086                           prodl	equ	0xFF3
 38087                           intcon	equ	0xFF2
 38088                           intcon2	equ	0xFF1
 38089                           intcon3	equ	0xFF0
 38090                           postinc0	equ	0xFEE
 38091                           wreg	equ	0xFE8
 38092                           indf1	equ	0xFE7
 38093                           postinc1	equ	0xFE6
 38094                           postdec1	equ	0xFE5
 38095                           plusw1	equ	0xFE3
 38096                           fsr1h	equ	0xFE2
 38097                           fsr1l	equ	0xFE1
 38098                           indf2	equ	0xFDF
 38099                           postinc2	equ	0xFDE
 38100                           postdec2	equ	0xFDD
 38101                           plusw2	equ	0xFDB
 38102                           fsr2h	equ	0xFDA
 38103                           fsr2l	equ	0xFD9
 38104                           status	equ	0xFD8
 38105                           
 38106 ;; *************** function _buck_remote_set_on *****************
 38107 ;; Defined at:
 38108 ;;		line 613 in file "buck.c"
 38109 ;; Parameters:    Size  Location     Type
 38110 ;;  on              1    wreg     unsigned char 
 38111 ;; Auto vars:     Size  Location     Type
 38112 ;;  on              1    0[BANK0 ] unsigned char 
 38113 ;; Return value:  Size  Location     Type
 38114 ;;                  1    wreg      void 
 38115 ;; Registers used:
 38116 ;;		wreg, status,2
 38117 ;; Tracked objects:
 38118 ;;		On entry : 0/0
 38119 ;;		On exit  : 0/0
 38120 ;;		Unchanged: 0/0
 38121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38123 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38125 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38126 ;;Total ram usage:        1 bytes
 38127 ;; Hardware stack levels used:    1
 38128 ;; Hardware stack levels required when called:   10
 38129 ;; This function calls:
 38130 ;;		Nothing
 38131 ;; This function is called by:
 38132 ;;		__parse_command_long
 38133 ;; This function uses a non-reentrant model
 38134 ;;
 38135                           
 38136                           	psect	text170
 38137  018F28                     __ptext170:
 38138                           	opt stack 0
 38139  018F28                     _buck_remote_set_on:
 38140                           	opt stack 17
 38141                           
 38142                           ; BSR set to: 0
 38143                           ;incstack = 0
 38144                           ;buck_remote_set_on@on stored from wreg
 38145  018F28  0100               	movlb	0	; () banked
 38146  018F2A  6F60               	movwf	buck_remote_set_on@on& (0+255),b
 38147                           
 38148                           ;buck.c: 615: if(on)
 38149  018F2C  0100               	movlb	0	; () banked
 38150  018F2E  5160               	movf	buck_remote_set_on@on& (0+255),w,b
 38151  018F30  B4D8               	btfsc	status,2,c
 38152  018F32  D003               	goto	l2453
 38153                           
 38154                           ; BSR set to: 0
 38155                           ;buck.c: 616: buck_remote_on = 1;
 38156  018F34  0E01               	movlw	1
 38157  018F36  6E1D               	movwf	_buck_remote_on,c
 38158  018F38  0012               	return	
 38159  018F3A                     l2453:
 38160                           
 38161                           ; BSR set to: 0
 38162                           ;buck.c: 617: else;buck.c: 618: buck_remote_on = 0;
 38163                           
 38164                           ; BSR set to: 0
 38165  018F3A  0E00               	movlw	0
 38166  018F3C  6E1D               	movwf	_buck_remote_on,c
 38167  018F3E  0012               	return	
 38168  018F40                     __end_of_buck_remote_set_on:
 38169                           	opt stack 0
 38170                           tosu	equ	0xFFF
 38171                           tosh	equ	0xFFE
 38172                           tosl	equ	0xFFD
 38173                           pclath	equ	0xFFA
 38174                           tblptru	equ	0xFF8
 38175                           tblptrh	equ	0xFF7
 38176                           tblptrl	equ	0xFF6
 38177                           tablat	equ	0xFF5
 38178                           prodh	equ	0xFF4
 38179                           prodl	equ	0xFF3
 38180                           intcon	equ	0xFF2
 38181                           intcon2	equ	0xFF1
 38182                           intcon3	equ	0xFF0
 38183                           postinc0	equ	0xFEE
 38184                           wreg	equ	0xFE8
 38185                           indf1	equ	0xFE7
 38186                           postinc1	equ	0xFE6
 38187                           postdec1	equ	0xFE5
 38188                           plusw1	equ	0xFE3
 38189                           fsr1h	equ	0xFE2
 38190                           fsr1l	equ	0xFE1
 38191                           indf2	equ	0xFDF
 38192                           postinc2	equ	0xFDE
 38193                           postdec2	equ	0xFDD
 38194                           plusw2	equ	0xFDB
 38195                           fsr2h	equ	0xFDA
 38196                           fsr2l	equ	0xFD9
 38197                           status	equ	0xFD8
 38198                           
 38199 ;; *************** function _buck_remote_set_enable *****************
 38200 ;; Defined at:
 38201 ;;		line 605 in file "buck.c"
 38202 ;; Parameters:    Size  Location     Type
 38203 ;;  remote          1    wreg     unsigned char 
 38204 ;; Auto vars:     Size  Location     Type
 38205 ;;  remote          1    0[BANK0 ] unsigned char 
 38206 ;; Return value:  Size  Location     Type
 38207 ;;                  1    wreg      void 
 38208 ;; Registers used:
 38209 ;;		wreg, status,2
 38210 ;; Tracked objects:
 38211 ;;		On entry : 0/0
 38212 ;;		On exit  : 0/0
 38213 ;;		Unchanged: 0/0
 38214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38218 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38219 ;;Total ram usage:        1 bytes
 38220 ;; Hardware stack levels used:    1
 38221 ;; Hardware stack levels required when called:   10
 38222 ;; This function calls:
 38223 ;;		Nothing
 38224 ;; This function is called by:
 38225 ;;		__parse_command_long
 38226 ;; This function uses a non-reentrant model
 38227 ;;
 38228                           
 38229                           	psect	text171
 38230  018D98                     __ptext171:
 38231                           	opt stack 0
 38232  018D98                     _buck_remote_set_enable:
 38233                           	opt stack 17
 38234                           
 38235                           ; BSR set to: 0
 38236                           ;incstack = 0
 38237                           ;buck_remote_set_enable@remote stored from wreg
 38238  018D98  0100               	movlb	0	; () banked
 38239  018D9A  6F60               	movwf	buck_remote_set_enable@remote& (0+255),b
 38240                           
 38241                           ;buck.c: 607: if(remote)
 38242  018D9C  0100               	movlb	0	; () banked
 38243  018D9E  5160               	movf	buck_remote_set_enable@remote& (0+255),w,b
 38244  018DA0  B4D8               	btfsc	status,2,c
 38245  018DA2  D004               	goto	l2448
 38246                           
 38247                           ; BSR set to: 0
 38248                           ;buck.c: 608: buck_remote_enable = 1;
 38249  018DA4  0E01               	movlw	1
 38250  018DA6  0101               	movlb	1	; () banked
 38251  018DA8  6FF0               	movwf	_buck_remote_enable& (0+255),b
 38252  018DAA  0012               	return	
 38253  018DAC                     l2448:
 38254                           
 38255                           ;buck.c: 609: else;buck.c: 610: buck_remote_enable = 0;
 38256                           
 38257                           ; BSR set to: 1
 38258  018DAC  0E00               	movlw	0
 38259  018DAE  0101               	movlb	1	; () banked
 38260  018DB0  6FF0               	movwf	_buck_remote_enable& (0+255),b
 38261  018DB2  0012               	return	
 38262  018DB4                     __end_of_buck_remote_set_enable:
 38263                           	opt stack 0
 38264                           tosu	equ	0xFFF
 38265                           tosh	equ	0xFFE
 38266                           tosl	equ	0xFFD
 38267                           pclath	equ	0xFFA
 38268                           tblptru	equ	0xFF8
 38269                           tblptrh	equ	0xFF7
 38270                           tblptrl	equ	0xFF6
 38271                           tablat	equ	0xFF5
 38272                           prodh	equ	0xFF4
 38273                           prodl	equ	0xFF3
 38274                           intcon	equ	0xFF2
 38275                           intcon2	equ	0xFF1
 38276                           intcon3	equ	0xFF0
 38277                           postinc0	equ	0xFEE
 38278                           wreg	equ	0xFE8
 38279                           indf1	equ	0xFE7
 38280                           postinc1	equ	0xFE6
 38281                           postdec1	equ	0xFE5
 38282                           plusw1	equ	0xFE3
 38283                           fsr1h	equ	0xFE2
 38284                           fsr1l	equ	0xFE1
 38285                           indf2	equ	0xFDF
 38286                           postinc2	equ	0xFDE
 38287                           postdec2	equ	0xFDD
 38288                           plusw2	equ	0xFDB
 38289                           fsr2h	equ	0xFDA
 38290                           fsr2l	equ	0xFD9
 38291                           status	equ	0xFD8
 38292                           
 38293 ;; *************** function _buck_remote_set_dutycycle *****************
 38294 ;; Defined at:
 38295 ;;		line 629 in file "buck.c"
 38296 ;; Parameters:    Size  Location     Type
 38297 ;;  dutycycle       1    wreg     unsigned char 
 38298 ;; Auto vars:     Size  Location     Type
 38299 ;;  dutycycle       1    0[BANK0 ] unsigned char 
 38300 ;; Return value:  Size  Location     Type
 38301 ;;                  1    wreg      void 
 38302 ;; Registers used:
 38303 ;;		wreg, status,2, status,0
 38304 ;; Tracked objects:
 38305 ;;		On entry : 0/0
 38306 ;;		On exit  : 0/0
 38307 ;;		Unchanged: 0/0
 38308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38310 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38312 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38313 ;;Total ram usage:        1 bytes
 38314 ;; Hardware stack levels used:    1
 38315 ;; Hardware stack levels required when called:   10
 38316 ;; This function calls:
 38317 ;;		Nothing
 38318 ;; This function is called by:
 38319 ;;		__parse_command_long
 38320 ;; This function uses a non-reentrant model
 38321 ;;
 38322                           
 38323                           	psect	text172
 38324  018B04                     __ptext172:
 38325                           	opt stack 0
 38326  018B04                     _buck_remote_set_dutycycle:
 38327                           	opt stack 17
 38328                           
 38329                           ; BSR set to: 1
 38330                           ;incstack = 0
 38331                           ;buck_remote_set_dutycycle@dutycycle stored from wreg
 38332  018B04  0100               	movlb	0	; () banked
 38333  018B06  6F60               	movwf	buck_remote_set_dutycycle@dutycycle& (0+255),b
 38334                           
 38335                           ;buck.c: 631: if(dutycycle>242)
 38336  018B08  0EF2               	movlw	242
 38337  018B0A  0100               	movlb	0	; () banked
 38338  018B0C  6560               	cpfsgt	buck_remote_set_dutycycle@dutycycle& (0+255),b
 38339  018B0E  D003               	goto	l2463
 38340                           
 38341                           ; BSR set to: 0
 38342                           ;buck.c: 632: buck_remote_dutycycle = 242;
 38343  018B10  0EF2               	movlw	242
 38344  018B12  6E1B               	movwf	_buck_remote_dutycycle,c
 38345  018B14  0012               	return	
 38346  018B16                     l2463:
 38347                           
 38348                           ; BSR set to: 0
 38349                           ;buck.c: 633: else if(dutycycle<40)
 38350                           
 38351                           ; BSR set to: 0
 38352  018B16  0E28               	movlw	40
 38353  018B18  6160               	cpfslt	buck_remote_set_dutycycle@dutycycle& (0+255),b
 38354  018B1A  D003               	goto	l2465
 38355                           
 38356                           ; BSR set to: 0
 38357                           ;buck.c: 634: buck_remote_dutycycle = 40;
 38358  018B1C  0E28               	movlw	40
 38359  018B1E  6E1B               	movwf	_buck_remote_dutycycle,c
 38360  018B20  0012               	return	
 38361  018B22                     l2465:
 38362                           
 38363                           ; BSR set to: 0
 38364                           ;buck.c: 635: else;buck.c: 636: buck_remote_dutycycle = (uint8_t) dutycycle;
 38365  018B22  C060  F01B         	movff	buck_remote_set_dutycycle@dutycycle,_buck_remote_dutycycle
 38366                           
 38367                           ; BSR set to: 0
 38368  018B26  0012               	return	
 38369  018B28                     __end_of_buck_remote_set_dutycycle:
 38370                           	opt stack 0
 38371                           tosu	equ	0xFFF
 38372                           tosh	equ	0xFFE
 38373                           tosl	equ	0xFFD
 38374                           pclath	equ	0xFFA
 38375                           tblptru	equ	0xFF8
 38376                           tblptrh	equ	0xFF7
 38377                           tblptrl	equ	0xFF6
 38378                           tablat	equ	0xFF5
 38379                           prodh	equ	0xFF4
 38380                           prodl	equ	0xFF3
 38381                           intcon	equ	0xFF2
 38382                           intcon2	equ	0xFF1
 38383                           intcon3	equ	0xFF0
 38384                           postinc0	equ	0xFEE
 38385                           wreg	equ	0xFE8
 38386                           indf1	equ	0xFE7
 38387                           postinc1	equ	0xFE6
 38388                           postdec1	equ	0xFE5
 38389                           plusw1	equ	0xFE3
 38390                           fsr1h	equ	0xFE2
 38391                           fsr1l	equ	0xFE1
 38392                           indf2	equ	0xFDF
 38393                           postinc2	equ	0xFDE
 38394                           postdec2	equ	0xFDD
 38395                           plusw2	equ	0xFDB
 38396                           fsr2h	equ	0xFDA
 38397                           fsr2l	equ	0xFD9
 38398                           status	equ	0xFD8
 38399                           
 38400 ;; *************** function _buck_remote_change_dutycycle *****************
 38401 ;; Defined at:
 38402 ;;		line 639 in file "buck.c"
 38403 ;; Parameters:    Size  Location     Type
 38404 ;;  change          1    wreg     char 
 38405 ;; Auto vars:     Size  Location     Type
 38406 ;;  change          1    0[BANK0 ] char 
 38407 ;;  new_dutycycl    2    1[BANK0 ] int 
 38408 ;; Return value:  Size  Location     Type
 38409 ;;                  1    wreg      void 
 38410 ;; Registers used:
 38411 ;;		wreg, status,2, status,0
 38412 ;; Tracked objects:
 38413 ;;		On entry : 0/0
 38414 ;;		On exit  : 0/0
 38415 ;;		Unchanged: 0/0
 38416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38418 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38420 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38421 ;;Total ram usage:        3 bytes
 38422 ;; Hardware stack levels used:    1
 38423 ;; Hardware stack levels required when called:   10
 38424 ;; This function calls:
 38425 ;;		Nothing
 38426 ;; This function is called by:
 38427 ;;		__parse_command_long
 38428 ;; This function uses a non-reentrant model
 38429 ;;
 38430                           
 38431                           	psect	text173
 38432  0180E8                     __ptext173:
 38433                           	opt stack 0
 38434  0180E8                     _buck_remote_change_dutycycle:
 38435                           	opt stack 17
 38436                           
 38437                           ; BSR set to: 0
 38438                           ;incstack = 0
 38439                           ;buck_remote_change_dutycycle@change stored from wreg
 38440  0180E8  0100               	movlb	0	; () banked
 38441  0180EA  6F60               	movwf	buck_remote_change_dutycycle@change& (0+255),b
 38442                           
 38443                           ;buck.c: 641: int16_t new_dutycycle = buck_dutycycle + change;
 38444  0180EC  0100               	movlb	0	; () banked
 38445  0180EE  51FF               	movf	_buck_dutycycle& (0+255),w,b
 38446  0180F0  2560               	addwf	buck_remote_change_dutycycle@change& (0+255),w,b
 38447  0180F2  6F61               	movwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),b
 38448  0180F4  6AE8               	clrf	wreg,c
 38449  0180F6  B0D8               	btfsc	status,0,c
 38450  0180F8  2AE8               	incf	wreg,f,c
 38451  0180FA  BF60               	btfsc	buck_remote_change_dutycycle@change& (0+255),7,b
 38452  0180FC  06E8               	decf	wreg,f,c
 38453  0180FE  6F62               	movwf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),b
 38454                           
 38455                           ;buck.c: 642: if(new_dutycycle>242)
 38456  018100  BF62               	btfsc	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),7,b
 38457  018102  D009               	goto	l2470
 38458  018104  5162               	movf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),w,b
 38459  018106  E104               	bnz	u22720
 38460  018108  0EF3               	movlw	243
 38461  01810A  5D61               	subwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),w,b
 38462  01810C  A0D8               	btfss	status,0,c
 38463  01810E  D003               	goto	l2470
 38464  018110                     u22720:
 38465                           
 38466                           ; BSR set to: 0
 38467                           ;buck.c: 643: buck_remote_dutycycle = 242;
 38468  018110  0EF2               	movlw	242
 38469  018112  6E1B               	movwf	_buck_remote_dutycycle,c
 38470  018114  0012               	return	
 38471  018116                     l2470:
 38472                           
 38473                           ; BSR set to: 0
 38474                           ;buck.c: 644: else if(new_dutycycle<40)
 38475                           
 38476                           ; BSR set to: 0
 38477  018116  BF62               	btfsc	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),7,b
 38478  018118  D006               	goto	u22730
 38479  01811A  5162               	movf	(buck_remote_change_dutycycle@new_dutycycle+1)& (0+255),w,b
 38480  01811C  E107               	bnz	l2472
 38481  01811E  0E28               	movlw	40
 38482  018120  5D61               	subwf	buck_remote_change_dutycycle@new_dutycycle& (0+255),w,b
 38483  018122  B0D8               	btfsc	status,0,c
 38484  018124  D003               	goto	l2472
 38485  018126                     u22730:
 38486                           
 38487                           ; BSR set to: 0
 38488                           ;buck.c: 645: buck_remote_dutycycle = 40;
 38489  018126  0E28               	movlw	40
 38490  018128  6E1B               	movwf	_buck_remote_dutycycle,c
 38491  01812A  0012               	return	
 38492  01812C                     l2472:
 38493                           
 38494                           ; BSR set to: 0
 38495                           ;buck.c: 646: else;buck.c: 647: buck_remote_dutycycle = (uint8_t) new_dutycycle;
 38496  01812C  C061  F01B         	movff	buck_remote_change_dutycycle@new_dutycycle,_buck_remote_dutycycle
 38497                           
 38498                           ; BSR set to: 0
 38499  018130  0012               	return	
 38500  018132                     __end_of_buck_remote_change_dutycycle:
 38501                           	opt stack 0
 38502                           tosu	equ	0xFFF
 38503                           tosh	equ	0xFFE
 38504                           tosl	equ	0xFFD
 38505                           pclath	equ	0xFFA
 38506                           tblptru	equ	0xFF8
 38507                           tblptrh	equ	0xFF7
 38508                           tblptrl	equ	0xFF6
 38509                           tablat	equ	0xFF5
 38510                           prodh	equ	0xFF4
 38511                           prodl	equ	0xFF3
 38512                           intcon	equ	0xFF2
 38513                           intcon2	equ	0xFF1
 38514                           intcon3	equ	0xFF0
 38515                           postinc0	equ	0xFEE
 38516                           wreg	equ	0xFE8
 38517                           indf1	equ	0xFE7
 38518                           postinc1	equ	0xFE6
 38519                           postdec1	equ	0xFE5
 38520                           plusw1	equ	0xFE3
 38521                           fsr1h	equ	0xFE2
 38522                           fsr1l	equ	0xFE1
 38523                           indf2	equ	0xFDF
 38524                           postinc2	equ	0xFDE
 38525                           postdec2	equ	0xFDD
 38526                           plusw2	equ	0xFDB
 38527                           fsr2h	equ	0xFDA
 38528                           fsr2l	equ	0xFD9
 38529                           status	equ	0xFD8
 38530                           
 38531 ;; *************** function __parse_write_buffer *****************
 38532 ;; Defined at:
 38533 ;;		line 1046 in file "api.c"
 38534 ;; Parameters:    Size  Location     Type
 38535 ;;  data            2   42[BANK0 ] PTR unsigned char 
 38536 ;;		 -> ReceivedDataBuffer(64), 
 38537 ;;  out_buffer      2   44[BANK0 ] PTR unsigned char 
 38538 ;;		 -> ToSendDataBuffer(64), 
 38539 ;;  out_idx_ptr     2   46[BANK0 ] PTR unsigned char 
 38540 ;;		 -> api_parse@out_idx(1), 
 38541 ;; Auto vars:     Size  Location     Type
 38542 ;;  start_byte      2   51[BANK0 ] unsigned int 
 38543 ;;  number_of_by    2   49[BANK0 ] unsigned int 
 38544 ;; Return value:  Size  Location     Type
 38545 ;;                  1    wreg      unsigned char 
 38546 ;; Registers used:
 38547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38548 ;; Tracked objects:
 38549 ;;		On entry : 0/0
 38550 ;;		On exit  : 0/0
 38551 ;;		Unchanged: 0/0
 38552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38553 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38554 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38555 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38556 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38557 ;;Total ram usage:       11 bytes
 38558 ;; Hardware stack levels used:    1
 38559 ;; Hardware stack levels required when called:   16
 38560 ;; This function calls:
 38561 ;;		_fat_write_to_buffer
 38562 ;; This function is called by:
 38563 ;;		__parse_command_long
 38564 ;; This function uses a non-reentrant model
 38565 ;;
 38566                           
 38567                           	psect	text174
 38568  012056                     __ptext174:
 38569                           	opt stack 0
 38570  012056                     __parse_write_buffer:
 38571                           	opt stack 11
 38572                           
 38573                           ;api.c: 1048: uint16_t start_byte;;api.c: 1049: uint16_t number_of_bytes;;api.c: 1052: i
      +                          f((data[0]!=COMMAND_WRITE_BUFFER) || (data[4]!=0xE2) || (data[5]!=0x30))
 38574                           
 38575                           ; BSR set to: 0
 38576                           ;incstack = 0
 38577  012056  C08A  FFD9         	movff	__parse_write_buffer@data,fsr2l
 38578  01205A  C08B  FFDA         	movff	__parse_write_buffer@data+1,fsr2h
 38579  01205E  0E59               	movlw	89
 38580  012060  18DE               	xorwf	postinc2,w,c
 38581  012062  A4D8               	btfss	status,2,c
 38582  012064  D015               	goto	u23290
 38583  012066  0100               	movlb	0	; () banked
 38584  012068  EE20 F004          	lfsr	2,4
 38585  01206C  518A               	movf	__parse_write_buffer@data& (0+255),w,b
 38586  01206E  26D9               	addwf	fsr2l,f,c
 38587  012070  518B               	movf	(__parse_write_buffer@data+1)& (0+255),w,b
 38588  012072  22DA               	addwfc	fsr2h,f,c
 38589  012074  0EE2               	movlw	226
 38590  012076  18DE               	xorwf	postinc2,w,c
 38591  012078  A4D8               	btfss	status,2,c
 38592  01207A  D00A               	goto	u23290
 38593                           
 38594                           ; BSR set to: 0
 38595  01207C  EE20 F005          	lfsr	2,5
 38596  012080  518A               	movf	__parse_write_buffer@data& (0+255),w,b
 38597  012082  26D9               	addwf	fsr2l,f,c
 38598  012084  518B               	movf	(__parse_write_buffer@data+1)& (0+255),w,b
 38599  012086  22DA               	addwfc	fsr2h,f,c
 38600  012088  0E30               	movlw	48
 38601  01208A  18DE               	xorwf	postinc2,w,c
 38602  01208C  B4D8               	btfsc	status,2,c
 38603  01208E  D002               	goto	l3735
 38604  012090                     u23290:
 38605                           
 38606                           ;api.c: 1053: {;api.c: 1055: return 65;
 38607                           
 38608                           ; BSR set to: 0
 38609  012090  0E41               	movlw	65
 38610  012092  0012               	return	
 38611  012094                     l3735:
 38612                           
 38613                           ;api.c: 1056: };api.c: 1059: start_byte |= data[1];
 38614  012094  0100               	movlb	0	; () banked
 38615  012096  EE20 F001          	lfsr	2,1
 38616  01209A  518A               	movf	__parse_write_buffer@data& (0+255),w,b
 38617  01209C  26D9               	addwf	fsr2l,f,c
 38618  01209E  518B               	movf	(__parse_write_buffer@data+1)& (0+255),w,b
 38619  0120A0  22DA               	addwfc	fsr2h,f,c
 38620  0120A2  50DF               	movf	indf2,w,c
 38621  0120A4  6F90               	movwf	??__parse_write_buffer& (0+255),b
 38622  0120A6  5190               	movf	??__parse_write_buffer& (0+255),w,b
 38623  0120A8  1393               	iorwf	__parse_write_buffer@start_byte& (0+255),f,b
 38624                           
 38625                           ; BSR set to: 0
 38626                           ;api.c: 1060: start_byte <<= 8;
 38627  0120AA  5193               	movf	__parse_write_buffer@start_byte& (0+255),w,b
 38628  0120AC  6F94               	movwf	(__parse_write_buffer@start_byte+1)& (0+255),b
 38629  0120AE  6B93               	clrf	__parse_write_buffer@start_byte& (0+255),b
 38630                           
 38631                           ; BSR set to: 0
 38632                           ;api.c: 1061: start_byte |= data[2];
 38633  0120B0  EE20 F002          	lfsr	2,2
 38634  0120B4  518A               	movf	__parse_write_buffer@data& (0+255),w,b
 38635  0120B6  26D9               	addwf	fsr2l,f,c
 38636  0120B8  518B               	movf	(__parse_write_buffer@data+1)& (0+255),w,b
 38637  0120BA  22DA               	addwfc	fsr2h,f,c
 38638  0120BC  50DF               	movf	indf2,w,c
 38639  0120BE  6F90               	movwf	??__parse_write_buffer& (0+255),b
 38640  0120C0  5190               	movf	??__parse_write_buffer& (0+255),w,b
 38641  0120C2  1393               	iorwf	__parse_write_buffer@start_byte& (0+255),f,b
 38642                           
 38643                           ; BSR set to: 0
 38644                           ;api.c: 1064: number_of_bytes = data[3];
 38645  0120C4  EE20 F003          	lfsr	2,3
 38646  0120C8  518A               	movf	__parse_write_buffer@data& (0+255),w,b
 38647  0120CA  26D9               	addwf	fsr2l,f,c
 38648  0120CC  518B               	movf	(__parse_write_buffer@data+1)& (0+255),w,b
 38649  0120CE  22DA               	addwfc	fsr2h,f,c
 38650  0120D0  50DF               	movf	indf2,w,c
 38651  0120D2  6F90               	movwf	??__parse_write_buffer& (0+255),b
 38652  0120D4  5190               	movf	??__parse_write_buffer& (0+255),w,b
 38653  0120D6  6F91               	movwf	__parse_write_buffer@number_of_bytes& (0+255),b
 38654  0120D8  6B92               	clrf	(__parse_write_buffer@number_of_bytes+1)& (0+255),b
 38655                           
 38656                           ; BSR set to: 0
 38657                           ;api.c: 1067: fat_write_to_buffer(start_byte, number_of_bytes, &data[6]);
 38658  0120DA  C093  F084         	movff	__parse_write_buffer@start_byte,fat_write_to_buffer@start
 38659  0120DE  C094  F085         	movff	__parse_write_buffer@start_byte+1,fat_write_to_buffer@start+1
 38660  0120E2  C091  F086         	movff	__parse_write_buffer@number_of_bytes,fat_write_to_buffer@length
 38661  0120E6  C092  F087         	movff	__parse_write_buffer@number_of_bytes+1,fat_write_to_buffer@length+1
 38662  0120EA  0E06               	movlw	6
 38663  0120EC  258A               	addwf	__parse_write_buffer@data& (0+255),w,b
 38664  0120EE  6F88               	movwf	fat_write_to_buffer@data& (0+255),b
 38665  0120F0  0E00               	movlw	0
 38666  0120F2  218B               	addwfc	(__parse_write_buffer@data+1)& (0+255),w,b
 38667  0120F4  6F89               	movwf	(fat_write_to_buffer@data+1)& (0+255),b
 38668  0120F6  ECA0  F0C6         	call	_fat_write_to_buffer	;wreg free
 38669                           
 38670                           ;api.c: 1070: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<61))
 38671  0120FA  C08E  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 38672  0120FE  C08F  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 38673  012102  50DF               	movf	indf2,w,c
 38674  012104  B4D8               	btfsc	status,2,c
 38675  012106  D050               	goto	l3739
 38676  012108  C08E  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 38677  01210C  C08F  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 38678  012110  0E3D               	movlw	61
 38679  012112  60DF               	cpfslt	indf2,c
 38680  012114  D049               	goto	l3739
 38681                           
 38682                           ;api.c: 1071: {;api.c: 1072: out_buffer[(*out_idx_ptr)++] = COMMAND_WRITE_BUFFER;
 38683  012116  C08E  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 38684  01211A  C08F  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 38685  01211E  CFDF F090          	movff	indf2,??__parse_write_buffer
 38686  012122  0E01               	movlw	1
 38687  012124  26DF               	addwf	indf2,f,c
 38688  012126  0100               	movlb	0	; () banked
 38689  012128  5190               	movf	??__parse_write_buffer& (0+255),w,b
 38690  01212A  0D01               	mullw	1
 38691  01212C  50F3               	movf	prodl,w,c
 38692  01212E  258C               	addwf	__parse_write_buffer@out_buffer& (0+255),w,b
 38693  012130  6ED9               	movwf	fsr2l,c
 38694  012132  50F4               	movf	prodh,w,c
 38695  012134  218D               	addwfc	(__parse_write_buffer@out_buffer+1)& (0+255),w,b
 38696  012136  6EDA               	movwf	fsr2h,c
 38697  012138  0E59               	movlw	89
 38698  01213A  6EDF               	movwf	indf2,c
 38699                           
 38700                           ;api.c: 1073: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((start_byte)>>8)&0xFF));
 38701  01213C  C08E  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 38702  012140  C08F  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 38703  012144  CFDF F090          	movff	indf2,??__parse_write_buffer
 38704  012148  0E01               	movlw	1
 38705  01214A  26DF               	addwf	indf2,f,c
 38706  01214C  5190               	movf	??__parse_write_buffer& (0+255),w,b
 38707  01214E  0D01               	mullw	1
 38708  012150  50F3               	movf	prodl,w,c
 38709  012152  258C               	addwf	__parse_write_buffer@out_buffer& (0+255),w,b
 38710  012154  6ED9               	movwf	fsr2l,c
 38711  012156  50F4               	movf	prodh,w,c
 38712  012158  218D               	addwfc	(__parse_write_buffer@out_buffer+1)& (0+255),w,b
 38713  01215A  6EDA               	movwf	fsr2h,c
 38714  01215C  5194               	movf	(__parse_write_buffer@start_byte+1)& (0+255),w,b
 38715  01215E  6EDF               	movwf	indf2,c
 38716                           
 38717                           ;api.c: 1074: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((start_byte)&0xFF));
 38718  012160  C08E  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 38719  012164  C08F  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 38720  012168  CFDF F090          	movff	indf2,??__parse_write_buffer
 38721  01216C  0E01               	movlw	1
 38722  01216E  26DF               	addwf	indf2,f,c
 38723  012170  5190               	movf	??__parse_write_buffer& (0+255),w,b
 38724  012172  0D01               	mullw	1
 38725  012174  50F3               	movf	prodl,w,c
 38726  012176  258C               	addwf	__parse_write_buffer@out_buffer& (0+255),w,b
 38727  012178  6ED9               	movwf	fsr2l,c
 38728  01217A  50F4               	movf	prodh,w,c
 38729  01217C  218D               	addwfc	(__parse_write_buffer@out_buffer+1)& (0+255),w,b
 38730  01217E  6EDA               	movwf	fsr2h,c
 38731  012180  C093  FFDF         	movff	__parse_write_buffer@start_byte,indf2
 38732                           
 38733                           ;api.c: 1075: out_buffer[(*out_idx_ptr)++] = number_of_bytes;
 38734  012184  C08E  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 38735  012188  C08F  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 38736  01218C  CFDF F090          	movff	indf2,??__parse_write_buffer
 38737  012190  0E01               	movlw	1
 38738  012192  26DF               	addwf	indf2,f,c
 38739  012194  5190               	movf	??__parse_write_buffer& (0+255),w,b
 38740  012196  0D01               	mullw	1
 38741  012198  50F3               	movf	prodl,w,c
 38742  01219A  258C               	addwf	__parse_write_buffer@out_buffer& (0+255),w,b
 38743  01219C  6ED9               	movwf	fsr2l,c
 38744  01219E  50F4               	movf	prodh,w,c
 38745  0121A0  218D               	addwfc	(__parse_write_buffer@out_buffer+1)& (0+255),w,b
 38746  0121A2  6EDA               	movwf	fsr2h,c
 38747  0121A4  C091  FFDF         	movff	__parse_write_buffer@number_of_bytes,indf2
 38748  0121A8                     l3739:
 38749                           
 38750                           ;api.c: 1076: };api.c: 1079: return 6 + number_of_bytes;
 38751                           
 38752                           ; BSR set to: 0
 38753  0121A8  0100               	movlb	0	; () banked
 38754  0121AA  5191               	movf	__parse_write_buffer@number_of_bytes& (0+255),w,b
 38755  0121AC  0F06               	addlw	6
 38756  0121AE  0012               	return	
 38757  0121B0                     __end_of__parse_write_buffer:
 38758                           	opt stack 0
 38759                           tosu	equ	0xFFF
 38760                           tosh	equ	0xFFE
 38761                           tosl	equ	0xFFD
 38762                           pclath	equ	0xFFA
 38763                           tblptru	equ	0xFF8
 38764                           tblptrh	equ	0xFF7
 38765                           tblptrl	equ	0xFF6
 38766                           tablat	equ	0xFF5
 38767                           prodh	equ	0xFF4
 38768                           prodl	equ	0xFF3
 38769                           intcon	equ	0xFF2
 38770                           intcon2	equ	0xFF1
 38771                           intcon3	equ	0xFF0
 38772                           postinc0	equ	0xFEE
 38773                           wreg	equ	0xFE8
 38774                           indf1	equ	0xFE7
 38775                           postinc1	equ	0xFE6
 38776                           postdec1	equ	0xFE5
 38777                           plusw1	equ	0xFE3
 38778                           fsr1h	equ	0xFE2
 38779                           fsr1l	equ	0xFE1
 38780                           indf2	equ	0xFDF
 38781                           postinc2	equ	0xFDE
 38782                           postdec2	equ	0xFDD
 38783                           plusw2	equ	0xFDB
 38784                           fsr2h	equ	0xFDA
 38785                           fsr2l	equ	0xFD9
 38786                           status	equ	0xFD8
 38787                           
 38788 ;; *************** function _fat_write_to_buffer *****************
 38789 ;; Defined at:
 38790 ;;		line 1503 in file "fat16.c"
 38791 ;; Parameters:    Size  Location     Type
 38792 ;;  start           2   36[BANK0 ] unsigned int 
 38793 ;;  length          2   38[BANK0 ] unsigned int 
 38794 ;;  data            2   40[BANK0 ] PTR unsigned char 
 38795 ;;		 -> ReceivedDataBuffer(64), 
 38796 ;; Auto vars:     Size  Location     Type
 38797 ;;		None
 38798 ;; Return value:  Size  Location     Type
 38799 ;;                  1    wreg      void 
 38800 ;; Registers used:
 38801 ;;		wreg, status,2, status,0, cstack
 38802 ;; Tracked objects:
 38803 ;;		On entry : 0/0
 38804 ;;		On exit  : 0/0
 38805 ;;		Unchanged: 0/0
 38806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38807 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38810 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38811 ;;Total ram usage:        6 bytes
 38812 ;; Hardware stack levels used:    1
 38813 ;; Hardware stack levels required when called:   15
 38814 ;; This function calls:
 38815 ;;		_flash_write_to_buffer
 38816 ;; This function is called by:
 38817 ;;		__parse_write_buffer
 38818 ;; This function uses a non-reentrant model
 38819 ;;
 38820                           
 38821                           	psect	text175
 38822  018D40                     __ptext175:
 38823                           	opt stack 0
 38824  018D40                     _fat_write_to_buffer:
 38825                           	opt stack 11
 38826                           
 38827                           ;fat16.c: 1505: flash_write_to_buffer(start, length, data);
 38828                           
 38829                           ;incstack = 0
 38830  018D40  C084  F07E         	movff	fat_write_to_buffer@start,flash_write_to_buffer@start
 38831  018D44  C085  F07F         	movff	fat_write_to_buffer@start+1,flash_write_to_buffer@start+1
 38832  018D48  C086  F080         	movff	fat_write_to_buffer@length,flash_write_to_buffer@length
 38833  018D4C  C087  F081         	movff	fat_write_to_buffer@length+1,flash_write_to_buffer@length+1
 38834  018D50  C088  F082         	movff	fat_write_to_buffer@data,flash_write_to_buffer@data
 38835  018D54  C089  F083         	movff	fat_write_to_buffer@data+1,flash_write_to_buffer@data+1
 38836  018D58  EC66  F0C3         	call	_flash_write_to_buffer	;wreg free
 38837  018D5C  0012               	return		;funcret
 38838  018D5E                     __end_of_fat_write_to_buffer:
 38839                           	opt stack 0
 38840                           tosu	equ	0xFFF
 38841                           tosh	equ	0xFFE
 38842                           tosl	equ	0xFFD
 38843                           pclath	equ	0xFFA
 38844                           tblptru	equ	0xFF8
 38845                           tblptrh	equ	0xFF7
 38846                           tblptrl	equ	0xFF6
 38847                           tablat	equ	0xFF5
 38848                           prodh	equ	0xFF4
 38849                           prodl	equ	0xFF3
 38850                           intcon	equ	0xFF2
 38851                           intcon2	equ	0xFF1
 38852                           intcon3	equ	0xFF0
 38853                           postinc0	equ	0xFEE
 38854                           wreg	equ	0xFE8
 38855                           indf1	equ	0xFE7
 38856                           postinc1	equ	0xFE6
 38857                           postdec1	equ	0xFE5
 38858                           plusw1	equ	0xFE3
 38859                           fsr1h	equ	0xFE2
 38860                           fsr1l	equ	0xFE1
 38861                           indf2	equ	0xFDF
 38862                           postinc2	equ	0xFDE
 38863                           postdec2	equ	0xFDD
 38864                           plusw2	equ	0xFDB
 38865                           fsr2h	equ	0xFDA
 38866                           fsr2l	equ	0xFD9
 38867                           status	equ	0xFD8
 38868                           
 38869 ;; *************** function _flash_write_to_buffer *****************
 38870 ;; Defined at:
 38871 ;;		line 557 in file "flash.c"
 38872 ;; Parameters:    Size  Location     Type
 38873 ;;  start           2   30[BANK0 ] unsigned int 
 38874 ;;  length          2   32[BANK0 ] unsigned int 
 38875 ;;  data            2   34[BANK0 ] PTR unsigned char 
 38876 ;;		 -> ReceivedDataBuffer(64), 
 38877 ;; Auto vars:     Size  Location     Type
 38878 ;;		None
 38879 ;; Return value:  Size  Location     Type
 38880 ;;                  1    wreg      void 
 38881 ;; Registers used:
 38882 ;;		wreg, status,2, status,0, cstack
 38883 ;; Tracked objects:
 38884 ;;		On entry : 0/0
 38885 ;;		On exit  : 0/0
 38886 ;;		Unchanged: 0/0
 38887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38888 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38891 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38892 ;;Total ram usage:        6 bytes
 38893 ;; Hardware stack levels used:    1
 38894 ;; Hardware stack levels required when called:   14
 38895 ;; This function calls:
 38896 ;;		__flash_write_to_buffer
 38897 ;;		_spi_set_configuration
 38898 ;; This function is called by:
 38899 ;;		_fat_write_to_buffer
 38900 ;; This function uses a non-reentrant model
 38901 ;;
 38902                           
 38903                           	psect	text176
 38904  0186CC                     __ptext176:
 38905                           	opt stack 0
 38906  0186CC                     _flash_write_to_buffer:
 38907                           	opt stack 11
 38908                           
 38909                           ;flash.c: 560: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 38910                           
 38911                           ;incstack = 0
 38912  0186CC  0E00               	movlw	0
 38913  0186CE  ECBD  F098         	call	_spi_set_configuration
 38914                           
 38915                           ;flash.c: 562: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_2);
 38916  0186D2  C07E  F073         	movff	flash_write_to_buffer@start,__flash_write_to_buffer@start
 38917  0186D6  C07F  F074         	movff	flash_write_to_buffer@start+1,__flash_write_to_buffer@start+1
 38918  0186DA  C082  F075         	movff	flash_write_to_buffer@data,__flash_write_to_buffer@data
 38919  0186DE  C083  F076         	movff	flash_write_to_buffer@data+1,__flash_write_to_buffer@data+1
 38920  0186E2  C080  F077         	movff	flash_write_to_buffer@length,__flash_write_to_buffer@data_length
 38921  0186E6  C081  F078         	movff	flash_write_to_buffer@length+1,__flash_write_to_buffer@data_length+1
 38922  0186EA  0E01               	movlw	1
 38923  0186EC  0100               	movlb	0	; () banked
 38924  0186EE  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 38925  0186F0  EC13  F0BF         	call	__flash_write_to_buffer	;wreg free
 38926                           
 38927                           ;flash.c: 565: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 38928  0186F4  0E01               	movlw	1
 38929  0186F6  ECBD  F098         	call	_spi_set_configuration
 38930  0186FA  0012               	return		;funcret
 38931  0186FC                     __end_of_flash_write_to_buffer:
 38932                           	opt stack 0
 38933                           tosu	equ	0xFFF
 38934                           tosh	equ	0xFFE
 38935                           tosl	equ	0xFFD
 38936                           pclath	equ	0xFFA
 38937                           tblptru	equ	0xFF8
 38938                           tblptrh	equ	0xFF7
 38939                           tblptrl	equ	0xFF6
 38940                           tablat	equ	0xFF5
 38941                           prodh	equ	0xFF4
 38942                           prodl	equ	0xFF3
 38943                           intcon	equ	0xFF2
 38944                           intcon2	equ	0xFF1
 38945                           intcon3	equ	0xFF0
 38946                           postinc0	equ	0xFEE
 38947                           wreg	equ	0xFE8
 38948                           indf1	equ	0xFE7
 38949                           postinc1	equ	0xFE6
 38950                           postdec1	equ	0xFE5
 38951                           plusw1	equ	0xFE3
 38952                           fsr1h	equ	0xFE2
 38953                           fsr1l	equ	0xFE1
 38954                           indf2	equ	0xFDF
 38955                           postinc2	equ	0xFDE
 38956                           postdec2	equ	0xFDD
 38957                           plusw2	equ	0xFDB
 38958                           fsr2h	equ	0xFDA
 38959                           fsr2l	equ	0xFD9
 38960                           status	equ	0xFD8
 38961                           
 38962 ;; *************** function __parse_settings_spi_polarity *****************
 38963 ;; Defined at:
 38964 ;;		line 1228 in file "api.c"
 38965 ;; Parameters:    Size  Location     Type
 38966 ;;  data            2    0[BANK0 ] PTR unsigned char 
 38967 ;;		 -> ReceivedDataBuffer(64), 
 38968 ;;  out_buffer      2    2[BANK0 ] PTR unsigned char 
 38969 ;;		 -> ToSendDataBuffer(64), 
 38970 ;;  out_idx_ptr     2    4[BANK0 ] PTR unsigned char 
 38971 ;;		 -> api_parse@out_idx(1), 
 38972 ;; Auto vars:     Size  Location     Type
 38973 ;;		None
 38974 ;; Return value:  Size  Location     Type
 38975 ;;                  1    wreg      unsigned char 
 38976 ;; Registers used:
 38977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38978 ;; Tracked objects:
 38979 ;;		On entry : 0/0
 38980 ;;		On exit  : 0/0
 38981 ;;		Unchanged: 0/0
 38982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38983 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38985 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38986 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38987 ;;Total ram usage:        7 bytes
 38988 ;; Hardware stack levels used:    1
 38989 ;; Hardware stack levels required when called:   10
 38990 ;; This function calls:
 38991 ;;		Nothing
 38992 ;; This function is called by:
 38993 ;;		__parse_command_long
 38994 ;; This function uses a non-reentrant model
 38995 ;;
 38996                           
 38997                           	psect	text177
 38998  015038                     __ptext177:
 38999                           	opt stack 0
 39000  015038                     __parse_settings_spi_polarity:
 39001                           	opt stack 17
 39002                           
 39003                           ;api.c: 1232: if((data[0]!=COMMAND_SET_SPI_POLARITY) || (data[2]!=0x0D) || (data[3]!=0xB
      +                          B))
 39004                           
 39005                           ;incstack = 0
 39006  015038  C060  FFD9         	movff	__parse_settings_spi_polarity@data,fsr2l
 39007  01503C  C061  FFDA         	movff	__parse_settings_spi_polarity@data+1,fsr2h
 39008  015040  0E72               	movlw	114
 39009  015042  18DE               	xorwf	postinc2,w,c
 39010  015044  A4D8               	btfss	status,2,c
 39011  015046  D015               	goto	u23490
 39012  015048  0100               	movlb	0	; () banked
 39013  01504A  EE20 F002          	lfsr	2,2
 39014  01504E  5160               	movf	__parse_settings_spi_polarity@data& (0+255),w,b
 39015  015050  26D9               	addwf	fsr2l,f,c
 39016  015052  5161               	movf	(__parse_settings_spi_polarity@data+1)& (0+255),w,b
 39017  015054  22DA               	addwfc	fsr2h,f,c
 39018  015056  0E0D               	movlw	13
 39019  015058  18DE               	xorwf	postinc2,w,c
 39020  01505A  A4D8               	btfss	status,2,c
 39021  01505C  D00A               	goto	u23490
 39022                           
 39023                           ; BSR set to: 0
 39024  01505E  EE20 F003          	lfsr	2,3
 39025  015062  5160               	movf	__parse_settings_spi_polarity@data& (0+255),w,b
 39026  015064  26D9               	addwf	fsr2l,f,c
 39027  015066  5161               	movf	(__parse_settings_spi_polarity@data+1)& (0+255),w,b
 39028  015068  22DA               	addwfc	fsr2h,f,c
 39029  01506A  0EBB               	movlw	187
 39030  01506C  18DE               	xorwf	postinc2,w,c
 39031  01506E  B4D8               	btfsc	status,2,c
 39032  015070  D002               	goto	l3780
 39033  015072                     u23490:
 39034                           
 39035                           ;api.c: 1233: {;api.c: 1234: return 4;
 39036                           
 39037                           ; BSR set to: 0
 39038  015072  0E04               	movlw	4
 39039  015074  0012               	return	
 39040  015076                     l3780:
 39041                           
 39042                           ;api.c: 1235: };api.c: 1238: os.communicationSettings.spiFrequency = (spiFrequency_t) da
      +                          ta[1];
 39043  015076  0100               	movlb	0	; () banked
 39044  015078  EE20 F001          	lfsr	2,1
 39045  01507C  5160               	movf	__parse_settings_spi_polarity@data& (0+255),w,b
 39046  01507E  26D9               	addwf	fsr2l,f,c
 39047  015080  5161               	movf	(__parse_settings_spi_polarity@data+1)& (0+255),w,b
 39048  015082  22DA               	addwfc	fsr2h,f,c
 39049  015084  50DF               	movf	indf2,w,c
 39050  015086  0102               	movlb	2	; () banked
 39051  015088  6F42               	movwf	(_os+66)& (0+255),b	;volatile
 39052                           
 39053                           ; BSR set to: 2
 39054                           ;api.c: 1241: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 39055  01508A  C064  FFD9         	movff	__parse_settings_spi_polarity@out_idx_ptr,fsr2l
 39056  01508E  C065  FFDA         	movff	__parse_settings_spi_polarity@out_idx_ptr+1,fsr2h
 39057  015092  50DF               	movf	indf2,w,c
 39058  015094  B4D8               	btfsc	status,2,c
 39059  015096  D032               	goto	l3784
 39060                           
 39061                           ; BSR set to: 2
 39062  015098  C064  FFD9         	movff	__parse_settings_spi_polarity@out_idx_ptr,fsr2l
 39063  01509C  C065  FFDA         	movff	__parse_settings_spi_polarity@out_idx_ptr+1,fsr2h
 39064  0150A0  0E3F               	movlw	63
 39065  0150A2  60DF               	cpfslt	indf2,c
 39066  0150A4  D02B               	goto	l3784
 39067                           
 39068                           ; BSR set to: 2
 39069                           ;api.c: 1242: {;api.c: 1243: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_SPI_POLARITY;
 39070  0150A6  C064  FFD9         	movff	__parse_settings_spi_polarity@out_idx_ptr,fsr2l
 39071  0150AA  C065  FFDA         	movff	__parse_settings_spi_polarity@out_idx_ptr+1,fsr2h
 39072  0150AE  CFDF F066          	movff	indf2,??__parse_settings_spi_polarity
 39073  0150B2  0E01               	movlw	1
 39074  0150B4  26DF               	addwf	indf2,f,c
 39075  0150B6  0100               	movlb	0	; () banked
 39076  0150B8  5166               	movf	??__parse_settings_spi_polarity& (0+255),w,b
 39077  0150BA  0D01               	mullw	1
 39078  0150BC  50F3               	movf	prodl,w,c
 39079  0150BE  2562               	addwf	__parse_settings_spi_polarity@out_buffer& (0+255),w,b
 39080  0150C0  6ED9               	movwf	fsr2l,c
 39081  0150C2  50F4               	movf	prodh,w,c
 39082  0150C4  2163               	addwfc	(__parse_settings_spi_polarity@out_buffer+1)& (0+255),w,b
 39083  0150C6  6EDA               	movwf	fsr2h,c
 39084  0150C8  0E72               	movlw	114
 39085  0150CA  6EDF               	movwf	indf2,c
 39086                           
 39087                           ; BSR set to: 0
 39088                           ;api.c: 1244: out_buffer[(*out_idx_ptr)++] = data[1];
 39089  0150CC  EE20 F001          	lfsr	2,1
 39090  0150D0  5160               	movf	__parse_settings_spi_polarity@data& (0+255),w,b
 39091  0150D2  26D9               	addwf	fsr2l,f,c
 39092  0150D4  5161               	movf	(__parse_settings_spi_polarity@data+1)& (0+255),w,b
 39093  0150D6  22DA               	addwfc	fsr2h,f,c
 39094  0150D8  C064  FFE1         	movff	__parse_settings_spi_polarity@out_idx_ptr,fsr1l
 39095  0150DC  C065  FFE2         	movff	__parse_settings_spi_polarity@out_idx_ptr+1,fsr1h
 39096  0150E0  CFE7 F066          	movff	indf1,??__parse_settings_spi_polarity
 39097  0150E4  0E01               	movlw	1
 39098  0150E6  26E7               	addwf	indf1,f,c
 39099  0150E8  5166               	movf	??__parse_settings_spi_polarity& (0+255),w,b
 39100  0150EA  0D01               	mullw	1
 39101  0150EC  50F3               	movf	prodl,w,c
 39102  0150EE  2562               	addwf	__parse_settings_spi_polarity@out_buffer& (0+255),w,b
 39103  0150F0  6EE1               	movwf	fsr1l,c
 39104  0150F2  50F4               	movf	prodh,w,c
 39105  0150F4  2163               	addwfc	(__parse_settings_spi_polarity@out_buffer+1)& (0+255),w,b
 39106  0150F6  6EE2               	movwf	fsr1h,c
 39107  0150F8  CFDF FFE7          	movff	indf2,indf1
 39108  0150FC                     l3784:
 39109                           
 39110                           ;api.c: 1245: };api.c: 1247: return 4;
 39111                           
 39112                           ; BSR set to: 0
 39113  0150FC  0E04               	movlw	4
 39114  0150FE  0012               	return	
 39115  015100                     __end_of__parse_settings_spi_polarity:
 39116                           	opt stack 0
 39117                           tosu	equ	0xFFF
 39118                           tosh	equ	0xFFE
 39119                           tosl	equ	0xFFD
 39120                           pclath	equ	0xFFA
 39121                           tblptru	equ	0xFF8
 39122                           tblptrh	equ	0xFF7
 39123                           tblptrl	equ	0xFF6
 39124                           tablat	equ	0xFF5
 39125                           prodh	equ	0xFF4
 39126                           prodl	equ	0xFF3
 39127                           intcon	equ	0xFF2
 39128                           intcon2	equ	0xFF1
 39129                           intcon3	equ	0xFF0
 39130                           postinc0	equ	0xFEE
 39131                           wreg	equ	0xFE8
 39132                           indf1	equ	0xFE7
 39133                           postinc1	equ	0xFE6
 39134                           postdec1	equ	0xFE5
 39135                           plusw1	equ	0xFE3
 39136                           fsr1h	equ	0xFE2
 39137                           fsr1l	equ	0xFE1
 39138                           indf2	equ	0xFDF
 39139                           postinc2	equ	0xFDE
 39140                           postdec2	equ	0xFDD
 39141                           plusw2	equ	0xFDB
 39142                           fsr2h	equ	0xFDA
 39143                           fsr2l	equ	0xFD9
 39144                           status	equ	0xFD8
 39145                           
 39146 ;; *************** function __parse_settings_spi_mode *****************
 39147 ;; Defined at:
 39148 ;;		line 1183 in file "api.c"
 39149 ;; Parameters:    Size  Location     Type
 39150 ;;  data            2    0[BANK0 ] PTR unsigned char 
 39151 ;;		 -> ReceivedDataBuffer(64), 
 39152 ;;  out_buffer      2    2[BANK0 ] PTR unsigned char 
 39153 ;;		 -> ToSendDataBuffer(64), 
 39154 ;;  out_idx_ptr     2    4[BANK0 ] PTR unsigned char 
 39155 ;;		 -> api_parse@out_idx(1), 
 39156 ;; Auto vars:     Size  Location     Type
 39157 ;;		None
 39158 ;; Return value:  Size  Location     Type
 39159 ;;                  1    wreg      unsigned char 
 39160 ;; Registers used:
 39161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39162 ;; Tracked objects:
 39163 ;;		On entry : 0/0
 39164 ;;		On exit  : 0/0
 39165 ;;		Unchanged: 0/0
 39166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39167 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39169 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39170 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39171 ;;Total ram usage:        7 bytes
 39172 ;; Hardware stack levels used:    1
 39173 ;; Hardware stack levels required when called:   10
 39174 ;; This function calls:
 39175 ;;		Nothing
 39176 ;; This function is called by:
 39177 ;;		__parse_command_long
 39178 ;; This function uses a non-reentrant model
 39179 ;;
 39180                           
 39181                           	psect	text178
 39182  015100                     __ptext178:
 39183                           	opt stack 0
 39184  015100                     __parse_settings_spi_mode:
 39185                           	opt stack 17
 39186                           
 39187                           ;api.c: 1187: if((data[0]!=COMMAND_SET_SPI_MODE) || (data[2]!=0x88) || (data[3]!=0xE2))
 39188                           
 39189                           ;incstack = 0
 39190  015100  C060  FFD9         	movff	__parse_settings_spi_mode@data,fsr2l
 39191  015104  C061  FFDA         	movff	__parse_settings_spi_mode@data+1,fsr2h
 39192  015108  0E70               	movlw	112
 39193  01510A  18DE               	xorwf	postinc2,w,c
 39194  01510C  A4D8               	btfss	status,2,c
 39195  01510E  D015               	goto	u23390
 39196  015110  0100               	movlb	0	; () banked
 39197  015112  EE20 F002          	lfsr	2,2
 39198  015116  5160               	movf	__parse_settings_spi_mode@data& (0+255),w,b
 39199  015118  26D9               	addwf	fsr2l,f,c
 39200  01511A  5161               	movf	(__parse_settings_spi_mode@data+1)& (0+255),w,b
 39201  01511C  22DA               	addwfc	fsr2h,f,c
 39202  01511E  0E88               	movlw	136
 39203  015120  18DE               	xorwf	postinc2,w,c
 39204  015122  A4D8               	btfss	status,2,c
 39205  015124  D00A               	goto	u23390
 39206                           
 39207                           ; BSR set to: 0
 39208  015126  EE20 F003          	lfsr	2,3
 39209  01512A  5160               	movf	__parse_settings_spi_mode@data& (0+255),w,b
 39210  01512C  26D9               	addwf	fsr2l,f,c
 39211  01512E  5161               	movf	(__parse_settings_spi_mode@data+1)& (0+255),w,b
 39212  015130  22DA               	addwfc	fsr2h,f,c
 39213  015132  0EE2               	movlw	226
 39214  015134  18DE               	xorwf	postinc2,w,c
 39215  015136  B4D8               	btfsc	status,2,c
 39216  015138  D002               	goto	l3766
 39217  01513A                     u23390:
 39218                           
 39219                           ;api.c: 1188: {;api.c: 1189: return 4;
 39220                           
 39221                           ; BSR set to: 0
 39222  01513A  0E04               	movlw	4
 39223  01513C  0012               	return	
 39224  01513E                     l3766:
 39225                           
 39226                           ;api.c: 1190: };api.c: 1193: os.communicationSettings.spiMode = (externalMode_t) data[1]
      +                          ;
 39227  01513E  0100               	movlb	0	; () banked
 39228  015140  EE20 F001          	lfsr	2,1
 39229  015144  5160               	movf	__parse_settings_spi_mode@data& (0+255),w,b
 39230  015146  26D9               	addwf	fsr2l,f,c
 39231  015148  5161               	movf	(__parse_settings_spi_mode@data+1)& (0+255),w,b
 39232  01514A  22DA               	addwfc	fsr2h,f,c
 39233  01514C  50DF               	movf	indf2,w,c
 39234  01514E  0102               	movlb	2	; () banked
 39235  015150  6F41               	movwf	(_os+65)& (0+255),b	;volatile
 39236                           
 39237                           ; BSR set to: 2
 39238                           ;api.c: 1196: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 39239  015152  C064  FFD9         	movff	__parse_settings_spi_mode@out_idx_ptr,fsr2l
 39240  015156  C065  FFDA         	movff	__parse_settings_spi_mode@out_idx_ptr+1,fsr2h
 39241  01515A  50DF               	movf	indf2,w,c
 39242  01515C  B4D8               	btfsc	status,2,c
 39243  01515E  D032               	goto	l3770
 39244                           
 39245                           ; BSR set to: 2
 39246  015160  C064  FFD9         	movff	__parse_settings_spi_mode@out_idx_ptr,fsr2l
 39247  015164  C065  FFDA         	movff	__parse_settings_spi_mode@out_idx_ptr+1,fsr2h
 39248  015168  0E3F               	movlw	63
 39249  01516A  60DF               	cpfslt	indf2,c
 39250  01516C  D02B               	goto	l3770
 39251                           
 39252                           ; BSR set to: 2
 39253                           ;api.c: 1197: {;api.c: 1198: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_SPI_MODE;
 39254  01516E  C064  FFD9         	movff	__parse_settings_spi_mode@out_idx_ptr,fsr2l
 39255  015172  C065  FFDA         	movff	__parse_settings_spi_mode@out_idx_ptr+1,fsr2h
 39256  015176  CFDF F066          	movff	indf2,??__parse_settings_spi_mode
 39257  01517A  0E01               	movlw	1
 39258  01517C  26DF               	addwf	indf2,f,c
 39259  01517E  0100               	movlb	0	; () banked
 39260  015180  5166               	movf	??__parse_settings_spi_mode& (0+255),w,b
 39261  015182  0D01               	mullw	1
 39262  015184  50F3               	movf	prodl,w,c
 39263  015186  2562               	addwf	__parse_settings_spi_mode@out_buffer& (0+255),w,b
 39264  015188  6ED9               	movwf	fsr2l,c
 39265  01518A  50F4               	movf	prodh,w,c
 39266  01518C  2163               	addwfc	(__parse_settings_spi_mode@out_buffer+1)& (0+255),w,b
 39267  01518E  6EDA               	movwf	fsr2h,c
 39268  015190  0E70               	movlw	112
 39269  015192  6EDF               	movwf	indf2,c
 39270                           
 39271                           ; BSR set to: 0
 39272                           ;api.c: 1199: out_buffer[(*out_idx_ptr)++] = data[1];
 39273  015194  EE20 F001          	lfsr	2,1
 39274  015198  5160               	movf	__parse_settings_spi_mode@data& (0+255),w,b
 39275  01519A  26D9               	addwf	fsr2l,f,c
 39276  01519C  5161               	movf	(__parse_settings_spi_mode@data+1)& (0+255),w,b
 39277  01519E  22DA               	addwfc	fsr2h,f,c
 39278  0151A0  C064  FFE1         	movff	__parse_settings_spi_mode@out_idx_ptr,fsr1l
 39279  0151A4  C065  FFE2         	movff	__parse_settings_spi_mode@out_idx_ptr+1,fsr1h
 39280  0151A8  CFE7 F066          	movff	indf1,??__parse_settings_spi_mode
 39281  0151AC  0E01               	movlw	1
 39282  0151AE  26E7               	addwf	indf1,f,c
 39283  0151B0  5166               	movf	??__parse_settings_spi_mode& (0+255),w,b
 39284  0151B2  0D01               	mullw	1
 39285  0151B4  50F3               	movf	prodl,w,c
 39286  0151B6  2562               	addwf	__parse_settings_spi_mode@out_buffer& (0+255),w,b
 39287  0151B8  6EE1               	movwf	fsr1l,c
 39288  0151BA  50F4               	movf	prodh,w,c
 39289  0151BC  2163               	addwfc	(__parse_settings_spi_mode@out_buffer+1)& (0+255),w,b
 39290  0151BE  6EE2               	movwf	fsr1h,c
 39291  0151C0  CFDF FFE7          	movff	indf2,indf1
 39292  0151C4                     l3770:
 39293                           
 39294                           ;api.c: 1200: };api.c: 1202: return 4;
 39295                           
 39296                           ; BSR set to: 0
 39297  0151C4  0E04               	movlw	4
 39298  0151C6  0012               	return	
 39299  0151C8                     __end_of__parse_settings_spi_mode:
 39300                           	opt stack 0
 39301                           tosu	equ	0xFFF
 39302                           tosh	equ	0xFFE
 39303                           tosl	equ	0xFFD
 39304                           pclath	equ	0xFFA
 39305                           tblptru	equ	0xFF8
 39306                           tblptrh	equ	0xFF7
 39307                           tblptrl	equ	0xFF6
 39308                           tablat	equ	0xFF5
 39309                           prodh	equ	0xFF4
 39310                           prodl	equ	0xFF3
 39311                           intcon	equ	0xFF2
 39312                           intcon2	equ	0xFF1
 39313                           intcon3	equ	0xFF0
 39314                           postinc0	equ	0xFEE
 39315                           wreg	equ	0xFE8
 39316                           indf1	equ	0xFE7
 39317                           postinc1	equ	0xFE6
 39318                           postdec1	equ	0xFE5
 39319                           plusw1	equ	0xFE3
 39320                           fsr1h	equ	0xFE2
 39321                           fsr1l	equ	0xFE1
 39322                           indf2	equ	0xFDF
 39323                           postinc2	equ	0xFDE
 39324                           postdec2	equ	0xFDD
 39325                           plusw2	equ	0xFDB
 39326                           fsr2h	equ	0xFDA
 39327                           fsr2l	equ	0xFD9
 39328                           status	equ	0xFD8
 39329                           
 39330 ;; *************** function __parse_settings_spi_frequency *****************
 39331 ;; Defined at:
 39332 ;;		line 1205 in file "api.c"
 39333 ;; Parameters:    Size  Location     Type
 39334 ;;  data            2    0[BANK0 ] PTR unsigned char 
 39335 ;;		 -> ReceivedDataBuffer(64), 
 39336 ;;  out_buffer      2    2[BANK0 ] PTR unsigned char 
 39337 ;;		 -> ToSendDataBuffer(64), 
 39338 ;;  out_idx_ptr     2    4[BANK0 ] PTR unsigned char 
 39339 ;;		 -> api_parse@out_idx(1), 
 39340 ;; Auto vars:     Size  Location     Type
 39341 ;;		None
 39342 ;; Return value:  Size  Location     Type
 39343 ;;                  1    wreg      unsigned char 
 39344 ;; Registers used:
 39345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39346 ;; Tracked objects:
 39347 ;;		On entry : 0/0
 39348 ;;		On exit  : 0/0
 39349 ;;		Unchanged: 0/0
 39350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39351 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39353 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39354 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39355 ;;Total ram usage:        7 bytes
 39356 ;; Hardware stack levels used:    1
 39357 ;; Hardware stack levels required when called:   10
 39358 ;; This function calls:
 39359 ;;		Nothing
 39360 ;; This function is called by:
 39361 ;;		__parse_command_long
 39362 ;; This function uses a non-reentrant model
 39363 ;;
 39364                           
 39365                           	psect	text179
 39366  0151C8                     __ptext179:
 39367                           	opt stack 0
 39368  0151C8                     __parse_settings_spi_frequency:
 39369                           	opt stack 17
 39370                           
 39371                           ;api.c: 1210: if((data[0]!=COMMAND_SET_SPI_FREQUENCY) || (data[2]!=0xAE) || (data[3]!=0x
      +                          A8))
 39372                           
 39373                           ;incstack = 0
 39374  0151C8  C060  FFD9         	movff	__parse_settings_spi_frequency@data,fsr2l
 39375  0151CC  C061  FFDA         	movff	__parse_settings_spi_frequency@data+1,fsr2h
 39376  0151D0  0E71               	movlw	113
 39377  0151D2  18DE               	xorwf	postinc2,w,c
 39378  0151D4  A4D8               	btfss	status,2,c
 39379  0151D6  D015               	goto	u23440
 39380  0151D8  0100               	movlb	0	; () banked
 39381  0151DA  EE20 F002          	lfsr	2,2
 39382  0151DE  5160               	movf	__parse_settings_spi_frequency@data& (0+255),w,b
 39383  0151E0  26D9               	addwf	fsr2l,f,c
 39384  0151E2  5161               	movf	(__parse_settings_spi_frequency@data+1)& (0+255),w,b
 39385  0151E4  22DA               	addwfc	fsr2h,f,c
 39386  0151E6  0EAE               	movlw	174
 39387  0151E8  18DE               	xorwf	postinc2,w,c
 39388  0151EA  A4D8               	btfss	status,2,c
 39389  0151EC  D00A               	goto	u23440
 39390                           
 39391                           ; BSR set to: 0
 39392  0151EE  EE20 F003          	lfsr	2,3
 39393  0151F2  5160               	movf	__parse_settings_spi_frequency@data& (0+255),w,b
 39394  0151F4  26D9               	addwf	fsr2l,f,c
 39395  0151F6  5161               	movf	(__parse_settings_spi_frequency@data+1)& (0+255),w,b
 39396  0151F8  22DA               	addwfc	fsr2h,f,c
 39397  0151FA  0EA8               	movlw	168
 39398  0151FC  18DE               	xorwf	postinc2,w,c
 39399  0151FE  B4D8               	btfsc	status,2,c
 39400  015200  D002               	goto	l3773
 39401  015202                     u23440:
 39402                           
 39403                           ;api.c: 1211: {;api.c: 1212: return 4;
 39404                           
 39405                           ; BSR set to: 0
 39406  015202  0E04               	movlw	4
 39407  015204  0012               	return	
 39408  015206                     l3773:
 39409                           
 39410                           ;api.c: 1213: };api.c: 1216: os.communicationSettings.spiFrequency = (spiFrequency_t) da
      +                          ta[1];
 39411  015206  0100               	movlb	0	; () banked
 39412  015208  EE20 F001          	lfsr	2,1
 39413  01520C  5160               	movf	__parse_settings_spi_frequency@data& (0+255),w,b
 39414  01520E  26D9               	addwf	fsr2l,f,c
 39415  015210  5161               	movf	(__parse_settings_spi_frequency@data+1)& (0+255),w,b
 39416  015212  22DA               	addwfc	fsr2h,f,c
 39417  015214  50DF               	movf	indf2,w,c
 39418  015216  0102               	movlb	2	; () banked
 39419  015218  6F42               	movwf	(_os+66)& (0+255),b	;volatile
 39420                           
 39421                           ; BSR set to: 2
 39422                           ;api.c: 1219: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 39423  01521A  C064  FFD9         	movff	__parse_settings_spi_frequency@out_idx_ptr,fsr2l
 39424  01521E  C065  FFDA         	movff	__parse_settings_spi_frequency@out_idx_ptr+1,fsr2h
 39425  015222  50DF               	movf	indf2,w,c
 39426  015224  B4D8               	btfsc	status,2,c
 39427  015226  D032               	goto	l3777
 39428                           
 39429                           ; BSR set to: 2
 39430  015228  C064  FFD9         	movff	__parse_settings_spi_frequency@out_idx_ptr,fsr2l
 39431  01522C  C065  FFDA         	movff	__parse_settings_spi_frequency@out_idx_ptr+1,fsr2h
 39432  015230  0E3F               	movlw	63
 39433  015232  60DF               	cpfslt	indf2,c
 39434  015234  D02B               	goto	l3777
 39435                           
 39436                           ; BSR set to: 2
 39437                           ;api.c: 1220: {;api.c: 1221: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_SPI_FREQUENCY;
 39438  015236  C064  FFD9         	movff	__parse_settings_spi_frequency@out_idx_ptr,fsr2l
 39439  01523A  C065  FFDA         	movff	__parse_settings_spi_frequency@out_idx_ptr+1,fsr2h
 39440  01523E  CFDF F066          	movff	indf2,??__parse_settings_spi_frequency
 39441  015242  0E01               	movlw	1
 39442  015244  26DF               	addwf	indf2,f,c
 39443  015246  0100               	movlb	0	; () banked
 39444  015248  5166               	movf	??__parse_settings_spi_frequency& (0+255),w,b
 39445  01524A  0D01               	mullw	1
 39446  01524C  50F3               	movf	prodl,w,c
 39447  01524E  2562               	addwf	__parse_settings_spi_frequency@out_buffer& (0+255),w,b
 39448  015250  6ED9               	movwf	fsr2l,c
 39449  015252  50F4               	movf	prodh,w,c
 39450  015254  2163               	addwfc	(__parse_settings_spi_frequency@out_buffer+1)& (0+255),w,b
 39451  015256  6EDA               	movwf	fsr2h,c
 39452  015258  0E71               	movlw	113
 39453  01525A  6EDF               	movwf	indf2,c
 39454                           
 39455                           ; BSR set to: 0
 39456                           ;api.c: 1222: out_buffer[(*out_idx_ptr)++] = data[1];
 39457  01525C  EE20 F001          	lfsr	2,1
 39458  015260  5160               	movf	__parse_settings_spi_frequency@data& (0+255),w,b
 39459  015262  26D9               	addwf	fsr2l,f,c
 39460  015264  5161               	movf	(__parse_settings_spi_frequency@data+1)& (0+255),w,b
 39461  015266  22DA               	addwfc	fsr2h,f,c
 39462  015268  C064  FFE1         	movff	__parse_settings_spi_frequency@out_idx_ptr,fsr1l
 39463  01526C  C065  FFE2         	movff	__parse_settings_spi_frequency@out_idx_ptr+1,fsr1h
 39464  015270  CFE7 F066          	movff	indf1,??__parse_settings_spi_frequency
 39465  015274  0E01               	movlw	1
 39466  015276  26E7               	addwf	indf1,f,c
 39467  015278  5166               	movf	??__parse_settings_spi_frequency& (0+255),w,b
 39468  01527A  0D01               	mullw	1
 39469  01527C  50F3               	movf	prodl,w,c
 39470  01527E  2562               	addwf	__parse_settings_spi_frequency@out_buffer& (0+255),w,b
 39471  015280  6EE1               	movwf	fsr1l,c
 39472  015282  50F4               	movf	prodh,w,c
 39473  015284  2163               	addwfc	(__parse_settings_spi_frequency@out_buffer+1)& (0+255),w,b
 39474  015286  6EE2               	movwf	fsr1h,c
 39475  015288  CFDF FFE7          	movff	indf2,indf1
 39476  01528C                     l3777:
 39477                           
 39478                           ;api.c: 1223: };api.c: 1225: return 4;
 39479                           
 39480                           ; BSR set to: 0
 39481  01528C  0E04               	movlw	4
 39482  01528E  0012               	return	
 39483  015290                     __end_of__parse_settings_spi_frequency:
 39484                           	opt stack 0
 39485                           tosu	equ	0xFFF
 39486                           tosh	equ	0xFFE
 39487                           tosl	equ	0xFFD
 39488                           pclath	equ	0xFFA
 39489                           tblptru	equ	0xFF8
 39490                           tblptrh	equ	0xFF7
 39491                           tblptrl	equ	0xFF6
 39492                           tablat	equ	0xFF5
 39493                           prodh	equ	0xFF4
 39494                           prodl	equ	0xFF3
 39495                           intcon	equ	0xFF2
 39496                           intcon2	equ	0xFF1
 39497                           intcon3	equ	0xFF0
 39498                           postinc0	equ	0xFEE
 39499                           wreg	equ	0xFE8
 39500                           indf1	equ	0xFE7
 39501                           postinc1	equ	0xFE6
 39502                           postdec1	equ	0xFE5
 39503                           plusw1	equ	0xFE3
 39504                           fsr1h	equ	0xFE2
 39505                           fsr1l	equ	0xFE1
 39506                           indf2	equ	0xFDF
 39507                           postinc2	equ	0xFDE
 39508                           postdec2	equ	0xFDD
 39509                           plusw2	equ	0xFDB
 39510                           fsr2h	equ	0xFDA
 39511                           fsr2l	equ	0xFD9
 39512                           status	equ	0xFD8
 39513                           
 39514 ;; *************** function __parse_settings_i2c_slaveModeSlaveAddress *****************
 39515 ;; Defined at:
 39516 ;;		line 1294 in file "api.c"
 39517 ;; Parameters:    Size  Location     Type
 39518 ;;  data            2    0[BANK0 ] PTR unsigned char 
 39519 ;;		 -> ReceivedDataBuffer(64), 
 39520 ;;  out_buffer      2    2[BANK0 ] PTR unsigned char 
 39521 ;;		 -> ToSendDataBuffer(64), 
 39522 ;;  out_idx_ptr     2    4[BANK0 ] PTR unsigned char 
 39523 ;;		 -> api_parse@out_idx(1), 
 39524 ;; Auto vars:     Size  Location     Type
 39525 ;;		None
 39526 ;; Return value:  Size  Location     Type
 39527 ;;                  1    wreg      unsigned char 
 39528 ;; Registers used:
 39529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39530 ;; Tracked objects:
 39531 ;;		On entry : 0/0
 39532 ;;		On exit  : 0/0
 39533 ;;		Unchanged: 0/0
 39534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39535 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39537 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39538 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39539 ;;Total ram usage:        7 bytes
 39540 ;; Hardware stack levels used:    1
 39541 ;; Hardware stack levels required when called:   10
 39542 ;; This function calls:
 39543 ;;		Nothing
 39544 ;; This function is called by:
 39545 ;;		__parse_command_long
 39546 ;; This function uses a non-reentrant model
 39547 ;;
 39548                           
 39549                           	psect	text180
 39550  015290                     __ptext180:
 39551                           	opt stack 0
 39552  015290                     __parse_settings_i2c_slaveModeSlaveAddress:
 39553                           	opt stack 17
 39554                           
 39555                           ;api.c: 1298: if((data[0]!=COMMAND_SET_I2C_SLAVE_MODE_ADDRESS) || (data[2]!=0x88) || (da
      +                          ta[3]!=0xE2))
 39556                           
 39557                           ;incstack = 0
 39558  015290  C060  FFD9         	movff	__parse_settings_i2c_slaveModeSlaveAddress@data,fsr2l
 39559  015294  C061  FFDA         	movff	__parse_settings_i2c_slaveModeSlaveAddress@data+1,fsr2h
 39560  015298  0E75               	movlw	117
 39561  01529A  18DE               	xorwf	postinc2,w,c
 39562  01529C  A4D8               	btfss	status,2,c
 39563  01529E  D015               	goto	u23640
 39564  0152A0  0100               	movlb	0	; () banked
 39565  0152A2  EE20 F002          	lfsr	2,2
 39566  0152A6  5160               	movf	__parse_settings_i2c_slaveModeSlaveAddress@data& (0+255),w,b
 39567  0152A8  26D9               	addwf	fsr2l,f,c
 39568  0152AA  5161               	movf	(__parse_settings_i2c_slaveModeSlaveAddress@data+1)& (0+255),w,b
 39569  0152AC  22DA               	addwfc	fsr2h,f,c
 39570  0152AE  0E88               	movlw	136
 39571  0152B0  18DE               	xorwf	postinc2,w,c
 39572  0152B2  A4D8               	btfss	status,2,c
 39573  0152B4  D00A               	goto	u23640
 39574                           
 39575                           ; BSR set to: 0
 39576  0152B6  EE20 F003          	lfsr	2,3
 39577  0152BA  5160               	movf	__parse_settings_i2c_slaveModeSlaveAddress@data& (0+255),w,b
 39578  0152BC  26D9               	addwf	fsr2l,f,c
 39579  0152BE  5161               	movf	(__parse_settings_i2c_slaveModeSlaveAddress@data+1)& (0+255),w,b
 39580  0152C0  22DA               	addwfc	fsr2h,f,c
 39581  0152C2  0EE2               	movlw	226
 39582  0152C4  18DE               	xorwf	postinc2,w,c
 39583  0152C6  B4D8               	btfsc	status,2,c
 39584  0152C8  D002               	goto	l3801
 39585  0152CA                     u23640:
 39586                           
 39587                           ;api.c: 1299: {;api.c: 1300: return 4;
 39588                           
 39589                           ; BSR set to: 0
 39590  0152CA  0E04               	movlw	4
 39591  0152CC  0012               	return	
 39592  0152CE                     l3801:
 39593                           
 39594                           ;api.c: 1301: };api.c: 1304: os.communicationSettings.i2cSlaveModeSlaveAddress = data[1]
      +                          ;
 39595  0152CE  0100               	movlb	0	; () banked
 39596  0152D0  EE20 F001          	lfsr	2,1
 39597  0152D4  5160               	movf	__parse_settings_i2c_slaveModeSlaveAddress@data& (0+255),w,b
 39598  0152D6  26D9               	addwf	fsr2l,f,c
 39599  0152D8  5161               	movf	(__parse_settings_i2c_slaveModeSlaveAddress@data+1)& (0+255),w,b
 39600  0152DA  22DA               	addwfc	fsr2h,f,c
 39601  0152DC  50DF               	movf	indf2,w,c
 39602  0152DE  0102               	movlb	2	; () banked
 39603  0152E0  6F46               	movwf	(_os+70)& (0+255),b	;volatile
 39604                           
 39605                           ; BSR set to: 2
 39606                           ;api.c: 1307: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 39607  0152E2  C064  FFD9         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr,fsr2l
 39608  0152E6  C065  FFDA         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr+1,fsr2h
 39609  0152EA  50DF               	movf	indf2,w,c
 39610  0152EC  B4D8               	btfsc	status,2,c
 39611  0152EE  D032               	goto	l3805
 39612                           
 39613                           ; BSR set to: 2
 39614  0152F0  C064  FFD9         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr,fsr2l
 39615  0152F4  C065  FFDA         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr+1,fsr2h
 39616  0152F8  0E3F               	movlw	63
 39617  0152FA  60DF               	cpfslt	indf2,c
 39618  0152FC  D02B               	goto	l3805
 39619                           
 39620                           ; BSR set to: 2
 39621                           ;api.c: 1308: {;api.c: 1309: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_I2C_SLAVE_MODE_A
      +                          DDRESS;
 39622  0152FE  C064  FFD9         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr,fsr2l
 39623  015302  C065  FFDA         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr+1,fsr2h
 39624  015306  CFDF F066          	movff	indf2,??__parse_settings_i2c_slaveModeSlaveAddress
 39625  01530A  0E01               	movlw	1
 39626  01530C  26DF               	addwf	indf2,f,c
 39627  01530E  0100               	movlb	0	; () banked
 39628  015310  5166               	movf	??__parse_settings_i2c_slaveModeSlaveAddress& (0+255),w,b
 39629  015312  0D01               	mullw	1
 39630  015314  50F3               	movf	prodl,w,c
 39631  015316  2562               	addwf	__parse_settings_i2c_slaveModeSlaveAddress@out_buffer& (0+255),w,b
 39632  015318  6ED9               	movwf	fsr2l,c
 39633  01531A  50F4               	movf	prodh,w,c
 39634  01531C  2163               	addwfc	(__parse_settings_i2c_slaveModeSlaveAddress@out_buffer+1)& (0+255),w,b
 39635  01531E  6EDA               	movwf	fsr2h,c
 39636  015320  0E75               	movlw	117
 39637  015322  6EDF               	movwf	indf2,c
 39638                           
 39639                           ; BSR set to: 0
 39640                           ;api.c: 1310: out_buffer[(*out_idx_ptr)++] = data[1];
 39641  015324  EE20 F001          	lfsr	2,1
 39642  015328  5160               	movf	__parse_settings_i2c_slaveModeSlaveAddress@data& (0+255),w,b
 39643  01532A  26D9               	addwf	fsr2l,f,c
 39644  01532C  5161               	movf	(__parse_settings_i2c_slaveModeSlaveAddress@data+1)& (0+255),w,b
 39645  01532E  22DA               	addwfc	fsr2h,f,c
 39646  015330  C064  FFE1         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr,fsr1l
 39647  015334  C065  FFE2         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr+1,fsr1h
 39648  015338  CFE7 F066          	movff	indf1,??__parse_settings_i2c_slaveModeSlaveAddress
 39649  01533C  0E01               	movlw	1
 39650  01533E  26E7               	addwf	indf1,f,c
 39651  015340  5166               	movf	??__parse_settings_i2c_slaveModeSlaveAddress& (0+255),w,b
 39652  015342  0D01               	mullw	1
 39653  015344  50F3               	movf	prodl,w,c
 39654  015346  2562               	addwf	__parse_settings_i2c_slaveModeSlaveAddress@out_buffer& (0+255),w,b
 39655  015348  6EE1               	movwf	fsr1l,c
 39656  01534A  50F4               	movf	prodh,w,c
 39657  01534C  2163               	addwfc	(__parse_settings_i2c_slaveModeSlaveAddress@out_buffer+1)& (0+255),w,b
 39658  01534E  6EE2               	movwf	fsr1h,c
 39659  015350  CFDF FFE7          	movff	indf2,indf1
 39660  015354                     l3805:
 39661                           
 39662                           ;api.c: 1311: };api.c: 1313: return 4;
 39663                           
 39664                           ; BSR set to: 0
 39665  015354  0E04               	movlw	4
 39666  015356  0012               	return	
 39667  015358                     __end_of__parse_settings_i2c_slaveModeSlaveAddress:
 39668                           	opt stack 0
 39669                           tosu	equ	0xFFF
 39670                           tosh	equ	0xFFE
 39671                           tosl	equ	0xFFD
 39672                           pclath	equ	0xFFA
 39673                           tblptru	equ	0xFF8
 39674                           tblptrh	equ	0xFF7
 39675                           tblptrl	equ	0xFF6
 39676                           tablat	equ	0xFF5
 39677                           prodh	equ	0xFF4
 39678                           prodl	equ	0xFF3
 39679                           intcon	equ	0xFF2
 39680                           intcon2	equ	0xFF1
 39681                           intcon3	equ	0xFF0
 39682                           postinc0	equ	0xFEE
 39683                           wreg	equ	0xFE8
 39684                           indf1	equ	0xFE7
 39685                           postinc1	equ	0xFE6
 39686                           postdec1	equ	0xFE5
 39687                           plusw1	equ	0xFE3
 39688                           fsr1h	equ	0xFE2
 39689                           fsr1l	equ	0xFE1
 39690                           indf2	equ	0xFDF
 39691                           postinc2	equ	0xFDE
 39692                           postdec2	equ	0xFDD
 39693                           plusw2	equ	0xFDB
 39694                           fsr2h	equ	0xFDA
 39695                           fsr2l	equ	0xFD9
 39696                           status	equ	0xFD8
 39697                           
 39698 ;; *************** function __parse_settings_i2c_mode *****************
 39699 ;; Defined at:
 39700 ;;		line 1250 in file "api.c"
 39701 ;; Parameters:    Size  Location     Type
 39702 ;;  data            2    0[BANK0 ] PTR unsigned char 
 39703 ;;		 -> ReceivedDataBuffer(64), 
 39704 ;;  out_buffer      2    2[BANK0 ] PTR unsigned char 
 39705 ;;		 -> ToSendDataBuffer(64), 
 39706 ;;  out_idx_ptr     2    4[BANK0 ] PTR unsigned char 
 39707 ;;		 -> api_parse@out_idx(1), 
 39708 ;; Auto vars:     Size  Location     Type
 39709 ;;		None
 39710 ;; Return value:  Size  Location     Type
 39711 ;;                  1    wreg      unsigned char 
 39712 ;; Registers used:
 39713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39714 ;; Tracked objects:
 39715 ;;		On entry : 0/0
 39716 ;;		On exit  : 0/0
 39717 ;;		Unchanged: 0/0
 39718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39719 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39721 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39722 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39723 ;;Total ram usage:        7 bytes
 39724 ;; Hardware stack levels used:    1
 39725 ;; Hardware stack levels required when called:   10
 39726 ;; This function calls:
 39727 ;;		Nothing
 39728 ;; This function is called by:
 39729 ;;		__parse_command_long
 39730 ;; This function uses a non-reentrant model
 39731 ;;
 39732                           
 39733                           	psect	text181
 39734  015358                     __ptext181:
 39735                           	opt stack 0
 39736  015358                     __parse_settings_i2c_mode:
 39737                           	opt stack 17
 39738                           
 39739                           ;api.c: 1254: if((data[0]!=COMMAND_SET_I2C_MODE) || (data[2]!=0xB6) || (data[3]!=0xB9))
 39740                           
 39741                           ;incstack = 0
 39742  015358  C060  FFD9         	movff	__parse_settings_i2c_mode@data,fsr2l
 39743  01535C  C061  FFDA         	movff	__parse_settings_i2c_mode@data+1,fsr2h
 39744  015360  0E73               	movlw	115
 39745  015362  18DE               	xorwf	postinc2,w,c
 39746  015364  A4D8               	btfss	status,2,c
 39747  015366  D015               	goto	u23540
 39748  015368  0100               	movlb	0	; () banked
 39749  01536A  EE20 F002          	lfsr	2,2
 39750  01536E  5160               	movf	__parse_settings_i2c_mode@data& (0+255),w,b
 39751  015370  26D9               	addwf	fsr2l,f,c
 39752  015372  5161               	movf	(__parse_settings_i2c_mode@data+1)& (0+255),w,b
 39753  015374  22DA               	addwfc	fsr2h,f,c
 39754  015376  0EB6               	movlw	182
 39755  015378  18DE               	xorwf	postinc2,w,c
 39756  01537A  A4D8               	btfss	status,2,c
 39757  01537C  D00A               	goto	u23540
 39758                           
 39759                           ; BSR set to: 0
 39760  01537E  EE20 F003          	lfsr	2,3
 39761  015382  5160               	movf	__parse_settings_i2c_mode@data& (0+255),w,b
 39762  015384  26D9               	addwf	fsr2l,f,c
 39763  015386  5161               	movf	(__parse_settings_i2c_mode@data+1)& (0+255),w,b
 39764  015388  22DA               	addwfc	fsr2h,f,c
 39765  01538A  0EB9               	movlw	185
 39766  01538C  18DE               	xorwf	postinc2,w,c
 39767  01538E  B4D8               	btfsc	status,2,c
 39768  015390  D002               	goto	l3787
 39769  015392                     u23540:
 39770                           
 39771                           ;api.c: 1255: {;api.c: 1256: return 4;
 39772                           
 39773                           ; BSR set to: 0
 39774  015392  0E04               	movlw	4
 39775  015394  0012               	return	
 39776  015396                     l3787:
 39777                           
 39778                           ;api.c: 1257: };api.c: 1260: os.communicationSettings.i2cMode = (externalMode_t) data[1]
      +                          ;
 39779  015396  0100               	movlb	0	; () banked
 39780  015398  EE20 F001          	lfsr	2,1
 39781  01539C  5160               	movf	__parse_settings_i2c_mode@data& (0+255),w,b
 39782  01539E  26D9               	addwf	fsr2l,f,c
 39783  0153A0  5161               	movf	(__parse_settings_i2c_mode@data+1)& (0+255),w,b
 39784  0153A2  22DA               	addwfc	fsr2h,f,c
 39785  0153A4  50DF               	movf	indf2,w,c
 39786  0153A6  0102               	movlb	2	; () banked
 39787  0153A8  6F44               	movwf	(_os+68)& (0+255),b	;volatile
 39788                           
 39789                           ; BSR set to: 2
 39790                           ;api.c: 1263: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 39791  0153AA  C064  FFD9         	movff	__parse_settings_i2c_mode@out_idx_ptr,fsr2l
 39792  0153AE  C065  FFDA         	movff	__parse_settings_i2c_mode@out_idx_ptr+1,fsr2h
 39793  0153B2  50DF               	movf	indf2,w,c
 39794  0153B4  B4D8               	btfsc	status,2,c
 39795  0153B6  D032               	goto	l3791
 39796                           
 39797                           ; BSR set to: 2
 39798  0153B8  C064  FFD9         	movff	__parse_settings_i2c_mode@out_idx_ptr,fsr2l
 39799  0153BC  C065  FFDA         	movff	__parse_settings_i2c_mode@out_idx_ptr+1,fsr2h
 39800  0153C0  0E3F               	movlw	63
 39801  0153C2  60DF               	cpfslt	indf2,c
 39802  0153C4  D02B               	goto	l3791
 39803                           
 39804                           ; BSR set to: 2
 39805                           ;api.c: 1264: {;api.c: 1265: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_I2C_MODE;
 39806  0153C6  C064  FFD9         	movff	__parse_settings_i2c_mode@out_idx_ptr,fsr2l
 39807  0153CA  C065  FFDA         	movff	__parse_settings_i2c_mode@out_idx_ptr+1,fsr2h
 39808  0153CE  CFDF F066          	movff	indf2,??__parse_settings_i2c_mode
 39809  0153D2  0E01               	movlw	1
 39810  0153D4  26DF               	addwf	indf2,f,c
 39811  0153D6  0100               	movlb	0	; () banked
 39812  0153D8  5166               	movf	??__parse_settings_i2c_mode& (0+255),w,b
 39813  0153DA  0D01               	mullw	1
 39814  0153DC  50F3               	movf	prodl,w,c
 39815  0153DE  2562               	addwf	__parse_settings_i2c_mode@out_buffer& (0+255),w,b
 39816  0153E0  6ED9               	movwf	fsr2l,c
 39817  0153E2  50F4               	movf	prodh,w,c
 39818  0153E4  2163               	addwfc	(__parse_settings_i2c_mode@out_buffer+1)& (0+255),w,b
 39819  0153E6  6EDA               	movwf	fsr2h,c
 39820  0153E8  0E73               	movlw	115
 39821  0153EA  6EDF               	movwf	indf2,c
 39822                           
 39823                           ; BSR set to: 0
 39824                           ;api.c: 1266: out_buffer[(*out_idx_ptr)++] = data[1];
 39825  0153EC  EE20 F001          	lfsr	2,1
 39826  0153F0  5160               	movf	__parse_settings_i2c_mode@data& (0+255),w,b
 39827  0153F2  26D9               	addwf	fsr2l,f,c
 39828  0153F4  5161               	movf	(__parse_settings_i2c_mode@data+1)& (0+255),w,b
 39829  0153F6  22DA               	addwfc	fsr2h,f,c
 39830  0153F8  C064  FFE1         	movff	__parse_settings_i2c_mode@out_idx_ptr,fsr1l
 39831  0153FC  C065  FFE2         	movff	__parse_settings_i2c_mode@out_idx_ptr+1,fsr1h
 39832  015400  CFE7 F066          	movff	indf1,??__parse_settings_i2c_mode
 39833  015404  0E01               	movlw	1
 39834  015406  26E7               	addwf	indf1,f,c
 39835  015408  5166               	movf	??__parse_settings_i2c_mode& (0+255),w,b
 39836  01540A  0D01               	mullw	1
 39837  01540C  50F3               	movf	prodl,w,c
 39838  01540E  2562               	addwf	__parse_settings_i2c_mode@out_buffer& (0+255),w,b
 39839  015410  6EE1               	movwf	fsr1l,c
 39840  015412  50F4               	movf	prodh,w,c
 39841  015414  2163               	addwfc	(__parse_settings_i2c_mode@out_buffer+1)& (0+255),w,b
 39842  015416  6EE2               	movwf	fsr1h,c
 39843  015418  CFDF FFE7          	movff	indf2,indf1
 39844  01541C                     l3791:
 39845                           
 39846                           ;api.c: 1267: };api.c: 1269: return 4;
 39847                           
 39848                           ; BSR set to: 0
 39849  01541C  0E04               	movlw	4
 39850  01541E  0012               	return	
 39851  015420                     __end_of__parse_settings_i2c_mode:
 39852                           	opt stack 0
 39853                           tosu	equ	0xFFF
 39854                           tosh	equ	0xFFE
 39855                           tosl	equ	0xFFD
 39856                           pclath	equ	0xFFA
 39857                           tblptru	equ	0xFF8
 39858                           tblptrh	equ	0xFF7
 39859                           tblptrl	equ	0xFF6
 39860                           tablat	equ	0xFF5
 39861                           prodh	equ	0xFF4
 39862                           prodl	equ	0xFF3
 39863                           intcon	equ	0xFF2
 39864                           intcon2	equ	0xFF1
 39865                           intcon3	equ	0xFF0
 39866                           postinc0	equ	0xFEE
 39867                           wreg	equ	0xFE8
 39868                           indf1	equ	0xFE7
 39869                           postinc1	equ	0xFE6
 39870                           postdec1	equ	0xFE5
 39871                           plusw1	equ	0xFE3
 39872                           fsr1h	equ	0xFE2
 39873                           fsr1l	equ	0xFE1
 39874                           indf2	equ	0xFDF
 39875                           postinc2	equ	0xFDE
 39876                           postdec2	equ	0xFDD
 39877                           plusw2	equ	0xFDB
 39878                           fsr2h	equ	0xFDA
 39879                           fsr2l	equ	0xFD9
 39880                           status	equ	0xFD8
 39881                           
 39882 ;; *************** function __parse_settings_i2c_masterModeSlaveAddress *****************
 39883 ;; Defined at:
 39884 ;;		line 1316 in file "api.c"
 39885 ;; Parameters:    Size  Location     Type
 39886 ;;  data            2    0[BANK0 ] PTR unsigned char 
 39887 ;;		 -> ReceivedDataBuffer(64), 
 39888 ;;  out_buffer      2    2[BANK0 ] PTR unsigned char 
 39889 ;;		 -> ToSendDataBuffer(64), 
 39890 ;;  out_idx_ptr     2    4[BANK0 ] PTR unsigned char 
 39891 ;;		 -> api_parse@out_idx(1), 
 39892 ;; Auto vars:     Size  Location     Type
 39893 ;;		None
 39894 ;; Return value:  Size  Location     Type
 39895 ;;                  1    wreg      unsigned char 
 39896 ;; Registers used:
 39897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39898 ;; Tracked objects:
 39899 ;;		On entry : 0/0
 39900 ;;		On exit  : 0/0
 39901 ;;		Unchanged: 0/0
 39902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39903 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39905 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39906 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39907 ;;Total ram usage:        7 bytes
 39908 ;; Hardware stack levels used:    1
 39909 ;; Hardware stack levels required when called:   10
 39910 ;; This function calls:
 39911 ;;		Nothing
 39912 ;; This function is called by:
 39913 ;;		__parse_command_long
 39914 ;; This function uses a non-reentrant model
 39915 ;;
 39916                           
 39917                           	psect	text182
 39918  015420                     __ptext182:
 39919                           	opt stack 0
 39920  015420                     __parse_settings_i2c_masterModeSlaveAddress:
 39921                           	opt stack 17
 39922                           
 39923                           ;api.c: 1320: if((data[0]!=COMMAND_SET_I2C_MASTER_MODE_ADDRESS) || (data[2]!=0x54) || (d
      +                          ata[3]!=0x0D))
 39924                           
 39925                           ;incstack = 0
 39926  015420  C060  FFD9         	movff	__parse_settings_i2c_masterModeSlaveAddress@data,fsr2l
 39927  015424  C061  FFDA         	movff	__parse_settings_i2c_masterModeSlaveAddress@data+1,fsr2h
 39928  015428  0E76               	movlw	118
 39929  01542A  18DE               	xorwf	postinc2,w,c
 39930  01542C  A4D8               	btfss	status,2,c
 39931  01542E  D015               	goto	u23690
 39932  015430  0100               	movlb	0	; () banked
 39933  015432  EE20 F002          	lfsr	2,2
 39934  015436  5160               	movf	__parse_settings_i2c_masterModeSlaveAddress@data& (0+255),w,b
 39935  015438  26D9               	addwf	fsr2l,f,c
 39936  01543A  5161               	movf	(__parse_settings_i2c_masterModeSlaveAddress@data+1)& (0+255),w,b
 39937  01543C  22DA               	addwfc	fsr2h,f,c
 39938  01543E  0E54               	movlw	84
 39939  015440  18DE               	xorwf	postinc2,w,c
 39940  015442  A4D8               	btfss	status,2,c
 39941  015444  D00A               	goto	u23690
 39942                           
 39943                           ; BSR set to: 0
 39944  015446  EE20 F003          	lfsr	2,3
 39945  01544A  5160               	movf	__parse_settings_i2c_masterModeSlaveAddress@data& (0+255),w,b
 39946  01544C  26D9               	addwf	fsr2l,f,c
 39947  01544E  5161               	movf	(__parse_settings_i2c_masterModeSlaveAddress@data+1)& (0+255),w,b
 39948  015450  22DA               	addwfc	fsr2h,f,c
 39949  015452  0E0D               	movlw	13
 39950  015454  18DE               	xorwf	postinc2,w,c
 39951  015456  B4D8               	btfsc	status,2,c
 39952  015458  D002               	goto	l3808
 39953  01545A                     u23690:
 39954                           
 39955                           ;api.c: 1321: {;api.c: 1322: return 4;
 39956                           
 39957                           ; BSR set to: 0
 39958  01545A  0E04               	movlw	4
 39959  01545C  0012               	return	
 39960  01545E                     l3808:
 39961                           
 39962                           ;api.c: 1323: };api.c: 1326: os.communicationSettings.i2cMasterModeSlaveAddress = data[1
      +                          ];
 39963  01545E  0100               	movlb	0	; () banked
 39964  015460  EE20 F001          	lfsr	2,1
 39965  015464  5160               	movf	__parse_settings_i2c_masterModeSlaveAddress@data& (0+255),w,b
 39966  015466  26D9               	addwf	fsr2l,f,c
 39967  015468  5161               	movf	(__parse_settings_i2c_masterModeSlaveAddress@data+1)& (0+255),w,b
 39968  01546A  22DA               	addwfc	fsr2h,f,c
 39969  01546C  50DF               	movf	indf2,w,c
 39970  01546E  0102               	movlb	2	; () banked
 39971  015470  6F47               	movwf	(_os+71)& (0+255),b	;volatile
 39972                           
 39973                           ; BSR set to: 2
 39974                           ;api.c: 1329: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 39975  015472  C064  FFD9         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr,fsr2l
 39976  015476  C065  FFDA         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr+1,fsr2h
 39977  01547A  50DF               	movf	indf2,w,c
 39978  01547C  B4D8               	btfsc	status,2,c
 39979  01547E  D032               	goto	l3812
 39980                           
 39981                           ; BSR set to: 2
 39982  015480  C064  FFD9         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr,fsr2l
 39983  015484  C065  FFDA         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr+1,fsr2h
 39984  015488  0E3F               	movlw	63
 39985  01548A  60DF               	cpfslt	indf2,c
 39986  01548C  D02B               	goto	l3812
 39987                           
 39988                           ; BSR set to: 2
 39989                           ;api.c: 1330: {;api.c: 1331: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_I2C_MASTER_MODE_
      +                          ADDRESS;
 39990  01548E  C064  FFD9         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr,fsr2l
 39991  015492  C065  FFDA         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr+1,fsr2h
 39992  015496  CFDF F066          	movff	indf2,??__parse_settings_i2c_masterModeSlaveAddress
 39993  01549A  0E01               	movlw	1
 39994  01549C  26DF               	addwf	indf2,f,c
 39995  01549E  0100               	movlb	0	; () banked
 39996  0154A0  5166               	movf	??__parse_settings_i2c_masterModeSlaveAddress& (0+255),w,b
 39997  0154A2  0D01               	mullw	1
 39998  0154A4  50F3               	movf	prodl,w,c
 39999  0154A6  2562               	addwf	__parse_settings_i2c_masterModeSlaveAddress@out_buffer& (0+255),w,b
 40000  0154A8  6ED9               	movwf	fsr2l,c
 40001  0154AA  50F4               	movf	prodh,w,c
 40002  0154AC  2163               	addwfc	(__parse_settings_i2c_masterModeSlaveAddress@out_buffer+1)& (0+255),w,b
 40003  0154AE  6EDA               	movwf	fsr2h,c
 40004  0154B0  0E76               	movlw	118
 40005  0154B2  6EDF               	movwf	indf2,c
 40006                           
 40007                           ; BSR set to: 0
 40008                           ;api.c: 1332: out_buffer[(*out_idx_ptr)++] = data[1];
 40009  0154B4  EE20 F001          	lfsr	2,1
 40010  0154B8  5160               	movf	__parse_settings_i2c_masterModeSlaveAddress@data& (0+255),w,b
 40011  0154BA  26D9               	addwf	fsr2l,f,c
 40012  0154BC  5161               	movf	(__parse_settings_i2c_masterModeSlaveAddress@data+1)& (0+255),w,b
 40013  0154BE  22DA               	addwfc	fsr2h,f,c
 40014  0154C0  C064  FFE1         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr,fsr1l
 40015  0154C4  C065  FFE2         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr+1,fsr1h
 40016  0154C8  CFE7 F066          	movff	indf1,??__parse_settings_i2c_masterModeSlaveAddress
 40017  0154CC  0E01               	movlw	1
 40018  0154CE  26E7               	addwf	indf1,f,c
 40019  0154D0  5166               	movf	??__parse_settings_i2c_masterModeSlaveAddress& (0+255),w,b
 40020  0154D2  0D01               	mullw	1
 40021  0154D4  50F3               	movf	prodl,w,c
 40022  0154D6  2562               	addwf	__parse_settings_i2c_masterModeSlaveAddress@out_buffer& (0+255),w,b
 40023  0154D8  6EE1               	movwf	fsr1l,c
 40024  0154DA  50F4               	movf	prodh,w,c
 40025  0154DC  2163               	addwfc	(__parse_settings_i2c_masterModeSlaveAddress@out_buffer+1)& (0+255),w,b
 40026  0154DE  6EE2               	movwf	fsr1h,c
 40027  0154E0  CFDF FFE7          	movff	indf2,indf1
 40028  0154E4                     l3812:
 40029                           
 40030                           ;api.c: 1333: };api.c: 1335: return 4;
 40031                           
 40032                           ; BSR set to: 0
 40033  0154E4  0E04               	movlw	4
 40034  0154E6  0012               	return	
 40035  0154E8                     __end_of__parse_settings_i2c_masterModeSlaveAddress:
 40036                           	opt stack 0
 40037                           tosu	equ	0xFFF
 40038                           tosh	equ	0xFFE
 40039                           tosl	equ	0xFFD
 40040                           pclath	equ	0xFFA
 40041                           tblptru	equ	0xFF8
 40042                           tblptrh	equ	0xFF7
 40043                           tblptrl	equ	0xFF6
 40044                           tablat	equ	0xFF5
 40045                           prodh	equ	0xFF4
 40046                           prodl	equ	0xFF3
 40047                           intcon	equ	0xFF2
 40048                           intcon2	equ	0xFF1
 40049                           intcon3	equ	0xFF0
 40050                           postinc0	equ	0xFEE
 40051                           wreg	equ	0xFE8
 40052                           indf1	equ	0xFE7
 40053                           postinc1	equ	0xFE6
 40054                           postdec1	equ	0xFE5
 40055                           plusw1	equ	0xFE3
 40056                           fsr1h	equ	0xFE2
 40057                           fsr1l	equ	0xFE1
 40058                           indf2	equ	0xFDF
 40059                           postinc2	equ	0xFDE
 40060                           postdec2	equ	0xFDD
 40061                           plusw2	equ	0xFDB
 40062                           fsr2h	equ	0xFDA
 40063                           fsr2l	equ	0xFD9
 40064                           status	equ	0xFD8
 40065                           
 40066 ;; *************** function __parse_settings_i2c_frequency *****************
 40067 ;; Defined at:
 40068 ;;		line 1272 in file "api.c"
 40069 ;; Parameters:    Size  Location     Type
 40070 ;;  data            2    0[BANK0 ] PTR unsigned char 
 40071 ;;		 -> ReceivedDataBuffer(64), 
 40072 ;;  out_buffer      2    2[BANK0 ] PTR unsigned char 
 40073 ;;		 -> ToSendDataBuffer(64), 
 40074 ;;  out_idx_ptr     2    4[BANK0 ] PTR unsigned char 
 40075 ;;		 -> api_parse@out_idx(1), 
 40076 ;; Auto vars:     Size  Location     Type
 40077 ;;		None
 40078 ;; Return value:  Size  Location     Type
 40079 ;;                  1    wreg      unsigned char 
 40080 ;; Registers used:
 40081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 40082 ;; Tracked objects:
 40083 ;;		On entry : 0/0
 40084 ;;		On exit  : 0/0
 40085 ;;		Unchanged: 0/0
 40086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40087 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40089 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40090 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40091 ;;Total ram usage:        7 bytes
 40092 ;; Hardware stack levels used:    1
 40093 ;; Hardware stack levels required when called:   10
 40094 ;; This function calls:
 40095 ;;		Nothing
 40096 ;; This function is called by:
 40097 ;;		__parse_command_long
 40098 ;; This function uses a non-reentrant model
 40099 ;;
 40100                           
 40101                           	psect	text183
 40102  0154E8                     __ptext183:
 40103                           	opt stack 0
 40104  0154E8                     __parse_settings_i2c_frequency:
 40105                           	opt stack 17
 40106                           
 40107                           ;api.c: 1276: if((data[0]!=COMMAND_SET_I2C_FREQUENCY) || (data[2]!=0x4E) || (data[3]!=0x
      +                          03))
 40108                           
 40109                           ;incstack = 0
 40110  0154E8  C060  FFD9         	movff	__parse_settings_i2c_frequency@data,fsr2l
 40111  0154EC  C061  FFDA         	movff	__parse_settings_i2c_frequency@data+1,fsr2h
 40112  0154F0  0E74               	movlw	116
 40113  0154F2  18DE               	xorwf	postinc2,w,c
 40114  0154F4  A4D8               	btfss	status,2,c
 40115  0154F6  D015               	goto	u23590
 40116  0154F8  0100               	movlb	0	; () banked
 40117  0154FA  EE20 F002          	lfsr	2,2
 40118  0154FE  5160               	movf	__parse_settings_i2c_frequency@data& (0+255),w,b
 40119  015500  26D9               	addwf	fsr2l,f,c
 40120  015502  5161               	movf	(__parse_settings_i2c_frequency@data+1)& (0+255),w,b
 40121  015504  22DA               	addwfc	fsr2h,f,c
 40122  015506  0E4E               	movlw	78
 40123  015508  18DE               	xorwf	postinc2,w,c
 40124  01550A  A4D8               	btfss	status,2,c
 40125  01550C  D00A               	goto	u23590
 40126                           
 40127                           ; BSR set to: 0
 40128  01550E  EE20 F003          	lfsr	2,3
 40129  015512  5160               	movf	__parse_settings_i2c_frequency@data& (0+255),w,b
 40130  015514  26D9               	addwf	fsr2l,f,c
 40131  015516  5161               	movf	(__parse_settings_i2c_frequency@data+1)& (0+255),w,b
 40132  015518  22DA               	addwfc	fsr2h,f,c
 40133  01551A  0E03               	movlw	3
 40134  01551C  18DE               	xorwf	postinc2,w,c
 40135  01551E  B4D8               	btfsc	status,2,c
 40136  015520  D002               	goto	l3794
 40137  015522                     u23590:
 40138                           
 40139                           ;api.c: 1277: {;api.c: 1278: return 4;
 40140                           
 40141                           ; BSR set to: 0
 40142  015522  0E04               	movlw	4
 40143  015524  0012               	return	
 40144  015526                     l3794:
 40145                           
 40146                           ;api.c: 1279: };api.c: 1282: os.communicationSettings.i2cFrequency = (i2cFrequency_t) da
      +                          ta[1];
 40147  015526  0100               	movlb	0	; () banked
 40148  015528  EE20 F001          	lfsr	2,1
 40149  01552C  5160               	movf	__parse_settings_i2c_frequency@data& (0+255),w,b
 40150  01552E  26D9               	addwf	fsr2l,f,c
 40151  015530  5161               	movf	(__parse_settings_i2c_frequency@data+1)& (0+255),w,b
 40152  015532  22DA               	addwfc	fsr2h,f,c
 40153  015534  50DF               	movf	indf2,w,c
 40154  015536  0102               	movlb	2	; () banked
 40155  015538  6F45               	movwf	(_os+69)& (0+255),b	;volatile
 40156                           
 40157                           ; BSR set to: 2
 40158                           ;api.c: 1285: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 40159  01553A  C064  FFD9         	movff	__parse_settings_i2c_frequency@out_idx_ptr,fsr2l
 40160  01553E  C065  FFDA         	movff	__parse_settings_i2c_frequency@out_idx_ptr+1,fsr2h
 40161  015542  50DF               	movf	indf2,w,c
 40162  015544  B4D8               	btfsc	status,2,c
 40163  015546  D032               	goto	l3798
 40164                           
 40165                           ; BSR set to: 2
 40166  015548  C064  FFD9         	movff	__parse_settings_i2c_frequency@out_idx_ptr,fsr2l
 40167  01554C  C065  FFDA         	movff	__parse_settings_i2c_frequency@out_idx_ptr+1,fsr2h
 40168  015550  0E3F               	movlw	63
 40169  015552  60DF               	cpfslt	indf2,c
 40170  015554  D02B               	goto	l3798
 40171                           
 40172                           ; BSR set to: 2
 40173                           ;api.c: 1286: {;api.c: 1287: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_I2C_FREQUENCY;
 40174  015556  C064  FFD9         	movff	__parse_settings_i2c_frequency@out_idx_ptr,fsr2l
 40175  01555A  C065  FFDA         	movff	__parse_settings_i2c_frequency@out_idx_ptr+1,fsr2h
 40176  01555E  CFDF F066          	movff	indf2,??__parse_settings_i2c_frequency
 40177  015562  0E01               	movlw	1
 40178  015564  26DF               	addwf	indf2,f,c
 40179  015566  0100               	movlb	0	; () banked
 40180  015568  5166               	movf	??__parse_settings_i2c_frequency& (0+255),w,b
 40181  01556A  0D01               	mullw	1
 40182  01556C  50F3               	movf	prodl,w,c
 40183  01556E  2562               	addwf	__parse_settings_i2c_frequency@out_buffer& (0+255),w,b
 40184  015570  6ED9               	movwf	fsr2l,c
 40185  015572  50F4               	movf	prodh,w,c
 40186  015574  2163               	addwfc	(__parse_settings_i2c_frequency@out_buffer+1)& (0+255),w,b
 40187  015576  6EDA               	movwf	fsr2h,c
 40188  015578  0E74               	movlw	116
 40189  01557A  6EDF               	movwf	indf2,c
 40190                           
 40191                           ; BSR set to: 0
 40192                           ;api.c: 1288: out_buffer[(*out_idx_ptr)++] = data[1];
 40193  01557C  EE20 F001          	lfsr	2,1
 40194  015580  5160               	movf	__parse_settings_i2c_frequency@data& (0+255),w,b
 40195  015582  26D9               	addwf	fsr2l,f,c
 40196  015584  5161               	movf	(__parse_settings_i2c_frequency@data+1)& (0+255),w,b
 40197  015586  22DA               	addwfc	fsr2h,f,c
 40198  015588  C064  FFE1         	movff	__parse_settings_i2c_frequency@out_idx_ptr,fsr1l
 40199  01558C  C065  FFE2         	movff	__parse_settings_i2c_frequency@out_idx_ptr+1,fsr1h
 40200  015590  CFE7 F066          	movff	indf1,??__parse_settings_i2c_frequency
 40201  015594  0E01               	movlw	1
 40202  015596  26E7               	addwf	indf1,f,c
 40203  015598  5166               	movf	??__parse_settings_i2c_frequency& (0+255),w,b
 40204  01559A  0D01               	mullw	1
 40205  01559C  50F3               	movf	prodl,w,c
 40206  01559E  2562               	addwf	__parse_settings_i2c_frequency@out_buffer& (0+255),w,b
 40207  0155A0  6EE1               	movwf	fsr1l,c
 40208  0155A2  50F4               	movf	prodh,w,c
 40209  0155A4  2163               	addwfc	(__parse_settings_i2c_frequency@out_buffer+1)& (0+255),w,b
 40210  0155A6  6EE2               	movwf	fsr1h,c
 40211  0155A8  CFDF FFE7          	movff	indf2,indf1
 40212  0155AC                     l3798:
 40213                           
 40214                           ;api.c: 1289: };api.c: 1291: return 4;
 40215                           
 40216                           ; BSR set to: 0
 40217  0155AC  0E04               	movlw	4
 40218  0155AE  0012               	return	
 40219  0155B0                     __end_of__parse_settings_i2c_frequency:
 40220                           	opt stack 0
 40221                           tosu	equ	0xFFF
 40222                           tosh	equ	0xFFE
 40223                           tosl	equ	0xFFD
 40224                           pclath	equ	0xFFA
 40225                           tblptru	equ	0xFF8
 40226                           tblptrh	equ	0xFF7
 40227                           tblptrl	equ	0xFF6
 40228                           tablat	equ	0xFF5
 40229                           prodh	equ	0xFF4
 40230                           prodl	equ	0xFF3
 40231                           intcon	equ	0xFF2
 40232                           intcon2	equ	0xFF1
 40233                           intcon3	equ	0xFF0
 40234                           postinc0	equ	0xFEE
 40235                           wreg	equ	0xFE8
 40236                           indf1	equ	0xFE7
 40237                           postinc1	equ	0xFE6
 40238                           postdec1	equ	0xFE5
 40239                           plusw1	equ	0xFE3
 40240                           fsr1h	equ	0xFE2
 40241                           fsr1l	equ	0xFE1
 40242                           indf2	equ	0xFDF
 40243                           postinc2	equ	0xFDE
 40244                           postdec2	equ	0xFDD
 40245                           plusw2	equ	0xFDB
 40246                           fsr2h	equ	0xFDA
 40247                           fsr2l	equ	0xFD9
 40248                           status	equ	0xFD8
 40249                           
 40250 ;; *************** function __parse_sector_to_buffer *****************
 40251 ;; Defined at:
 40252 ;;		line 974 in file "api.c"
 40253 ;; Parameters:    Size  Location     Type
 40254 ;;  data            2   83[BANK0 ] PTR unsigned char 
 40255 ;;		 -> ReceivedDataBuffer(64), 
 40256 ;;  out_buffer      2   85[BANK0 ] PTR unsigned char 
 40257 ;;		 -> ToSendDataBuffer(64), 
 40258 ;;  out_idx_ptr     2   87[BANK0 ] PTR unsigned char 
 40259 ;;		 -> api_parse@out_idx(1), 
 40260 ;; Auto vars:     Size  Location     Type
 40261 ;;  sector          2   92[BANK0 ] unsigned int 
 40262 ;;  return_value    1   91[BANK0 ] unsigned char 
 40263 ;;  file_number     1   90[BANK0 ] unsigned char 
 40264 ;; Return value:  Size  Location     Type
 40265 ;;                  1    wreg      unsigned char 
 40266 ;; Registers used:
 40267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40268 ;; Tracked objects:
 40269 ;;		On entry : 0/0
 40270 ;;		On exit  : 0/0
 40271 ;;		Unchanged: 0/0
 40272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40273 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40274 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40275 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40276 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40277 ;;Total ram usage:       11 bytes
 40278 ;; Hardware stack levels used:    1
 40279 ;; Hardware stack levels required when called:   18
 40280 ;; This function calls:
 40281 ;;		_fat_copy_sector_to_buffer
 40282 ;; This function is called by:
 40283 ;;		__parse_command_long
 40284 ;; This function uses a non-reentrant model
 40285 ;;
 40286                           
 40287                           	psect	text184
 40288  011940                     __ptext184:
 40289                           	opt stack 0
 40290  011940                     __parse_sector_to_buffer:
 40291                           	opt stack 9
 40292                           
 40293                           ;api.c: 977: uint8_t file_number;;api.c: 978: uint16_t sector;;api.c: 979: uint8_t retur
      +                          n_value;;api.c: 981: if((data[0]!=COMMAND_SECTOR_TO_BUFFER) || (data[4]!=0x1B) || (data[
      +                          5]!=0x35))
 40294                           
 40295                           ;incstack = 0
 40296  011940  C0B3  FFD9         	movff	__parse_sector_to_buffer@data,fsr2l
 40297  011944  C0B4  FFDA         	movff	__parse_sector_to_buffer@data+1,fsr2h
 40298  011948  0E57               	movlw	87
 40299  01194A  18DE               	xorwf	postinc2,w,c
 40300  01194C  A4D8               	btfss	status,2,c
 40301  01194E  D015               	goto	u23190
 40302  011950  0100               	movlb	0	; () banked
 40303  011952  EE20 F004          	lfsr	2,4
 40304  011956  51B3               	movf	__parse_sector_to_buffer@data& (0+255),w,b
 40305  011958  26D9               	addwf	fsr2l,f,c
 40306  01195A  51B4               	movf	(__parse_sector_to_buffer@data+1)& (0+255),w,b
 40307  01195C  22DA               	addwfc	fsr2h,f,c
 40308  01195E  0E1B               	movlw	27
 40309  011960  18DE               	xorwf	postinc2,w,c
 40310  011962  A4D8               	btfss	status,2,c
 40311  011964  D00A               	goto	u23190
 40312                           
 40313                           ; BSR set to: 0
 40314  011966  EE20 F005          	lfsr	2,5
 40315  01196A  51B3               	movf	__parse_sector_to_buffer@data& (0+255),w,b
 40316  01196C  26D9               	addwf	fsr2l,f,c
 40317  01196E  51B4               	movf	(__parse_sector_to_buffer@data+1)& (0+255),w,b
 40318  011970  22DA               	addwfc	fsr2h,f,c
 40319  011972  0E35               	movlw	53
 40320  011974  18DE               	xorwf	postinc2,w,c
 40321  011976  B4D8               	btfsc	status,2,c
 40322  011978  D002               	goto	l3721
 40323  01197A                     u23190:
 40324                           
 40325                           ;api.c: 982: {;api.c: 983: return 6;
 40326                           
 40327                           ; BSR set to: 0
 40328  01197A  0E06               	movlw	6
 40329  01197C  0012               	return	
 40330  01197E                     l3721:
 40331                           
 40332                           ;api.c: 984: };api.c: 987: file_number = data[1];
 40333  01197E  0100               	movlb	0	; () banked
 40334  011980  EE20 F001          	lfsr	2,1
 40335  011984  51B3               	movf	__parse_sector_to_buffer@data& (0+255),w,b
 40336  011986  26D9               	addwf	fsr2l,f,c
 40337  011988  51B4               	movf	(__parse_sector_to_buffer@data+1)& (0+255),w,b
 40338  01198A  22DA               	addwfc	fsr2h,f,c
 40339  01198C  50DF               	movf	indf2,w,c
 40340  01198E  6FBA               	movwf	__parse_sector_to_buffer@file_number& (0+255),b
 40341                           
 40342                           ;api.c: 990: sector = data[2];
 40343  011990  EE20 F002          	lfsr	2,2
 40344  011994  51B3               	movf	__parse_sector_to_buffer@data& (0+255),w,b
 40345  011996  26D9               	addwf	fsr2l,f,c
 40346  011998  51B4               	movf	(__parse_sector_to_buffer@data+1)& (0+255),w,b
 40347  01199A  22DA               	addwfc	fsr2h,f,c
 40348  01199C  50DF               	movf	indf2,w,c
 40349  01199E  6FB9               	movwf	??__parse_sector_to_buffer& (0+255),b
 40350  0119A0  51B9               	movf	??__parse_sector_to_buffer& (0+255),w,b
 40351  0119A2  6FBC               	movwf	__parse_sector_to_buffer@sector& (0+255),b
 40352  0119A4  6BBD               	clrf	(__parse_sector_to_buffer@sector+1)& (0+255),b
 40353                           
 40354                           ; BSR set to: 0
 40355                           ;api.c: 991: sector <<= 8;
 40356  0119A6  51BC               	movf	__parse_sector_to_buffer@sector& (0+255),w,b
 40357  0119A8  6FBD               	movwf	(__parse_sector_to_buffer@sector+1)& (0+255),b
 40358  0119AA  6BBC               	clrf	__parse_sector_to_buffer@sector& (0+255),b
 40359                           
 40360                           ; BSR set to: 0
 40361                           ;api.c: 992: sector |= data[3];
 40362  0119AC  EE20 F003          	lfsr	2,3
 40363  0119B0  51B3               	movf	__parse_sector_to_buffer@data& (0+255),w,b
 40364  0119B2  26D9               	addwf	fsr2l,f,c
 40365  0119B4  51B4               	movf	(__parse_sector_to_buffer@data+1)& (0+255),w,b
 40366  0119B6  22DA               	addwfc	fsr2h,f,c
 40367  0119B8  50DF               	movf	indf2,w,c
 40368  0119BA  6FB9               	movwf	??__parse_sector_to_buffer& (0+255),b
 40369  0119BC  51B9               	movf	??__parse_sector_to_buffer& (0+255),w,b
 40370  0119BE  13BC               	iorwf	__parse_sector_to_buffer@sector& (0+255),f,b
 40371                           
 40372                           ; BSR set to: 0
 40373                           ;api.c: 995: return_value = fat_copy_sector_to_buffer(data[1], sector);
 40374  0119C0  C0BC  F0A2         	movff	__parse_sector_to_buffer@sector,fat_copy_sector_to_buffer@sector
 40375  0119C4  C0BD  F0A3         	movff	__parse_sector_to_buffer@sector+1,fat_copy_sector_to_buffer@sector+1
 40376  0119C8  EE20 F001          	lfsr	2,1
 40377  0119CC  51B3               	movf	__parse_sector_to_buffer@data& (0+255),w,b
 40378  0119CE  26D9               	addwf	fsr2l,f,c
 40379  0119D0  51B4               	movf	(__parse_sector_to_buffer@data+1)& (0+255),w,b
 40380  0119D2  22DA               	addwfc	fsr2h,f,c
 40381  0119D4  50DF               	movf	indf2,w,c
 40382  0119D6  EC00  F0AC         	call	_fat_copy_sector_to_buffer
 40383  0119DA  0100               	movlb	0	; () banked
 40384  0119DC  6FBB               	movwf	__parse_sector_to_buffer@return_value& (0+255),b
 40385                           
 40386                           ; BSR set to: 0
 40387                           ;api.c: 998: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<60))
 40388  0119DE  C0B7  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 40389  0119E2  C0B8  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 40390  0119E6  50DF               	movf	indf2,w,c
 40391  0119E8  B4D8               	btfsc	status,2,c
 40392  0119EA  D061               	goto	l3725
 40393                           
 40394                           ; BSR set to: 0
 40395  0119EC  C0B7  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 40396  0119F0  C0B8  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 40397  0119F4  0E3C               	movlw	60
 40398  0119F6  60DF               	cpfslt	indf2,c
 40399  0119F8  D05A               	goto	l3725
 40400                           
 40401                           ; BSR set to: 0
 40402                           ;api.c: 999: {;api.c: 1000: out_buffer[(*out_idx_ptr)++] = COMMAND_SECTOR_TO_BUFFER;
 40403  0119FA  C0B7  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 40404  0119FE  C0B8  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 40405  011A02  CFDF F0B9          	movff	indf2,??__parse_sector_to_buffer
 40406  011A06  0E01               	movlw	1
 40407  011A08  26DF               	addwf	indf2,f,c
 40408  011A0A  51B9               	movf	??__parse_sector_to_buffer& (0+255),w,b
 40409  011A0C  0D01               	mullw	1
 40410  011A0E  50F3               	movf	prodl,w,c
 40411  011A10  25B5               	addwf	__parse_sector_to_buffer@out_buffer& (0+255),w,b
 40412  011A12  6ED9               	movwf	fsr2l,c
 40413  011A14  50F4               	movf	prodh,w,c
 40414  011A16  21B6               	addwfc	(__parse_sector_to_buffer@out_buffer+1)& (0+255),w,b
 40415  011A18  6EDA               	movwf	fsr2h,c
 40416  011A1A  0E57               	movlw	87
 40417  011A1C  6EDF               	movwf	indf2,c
 40418                           
 40419                           ;api.c: 1001: out_buffer[(*out_idx_ptr)++] = file_number;
 40420  011A1E  C0B7  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 40421  011A22  C0B8  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 40422  011A26  CFDF F0B9          	movff	indf2,??__parse_sector_to_buffer
 40423  011A2A  0E01               	movlw	1
 40424  011A2C  26DF               	addwf	indf2,f,c
 40425  011A2E  51B9               	movf	??__parse_sector_to_buffer& (0+255),w,b
 40426  011A30  0D01               	mullw	1
 40427  011A32  50F3               	movf	prodl,w,c
 40428  011A34  25B5               	addwf	__parse_sector_to_buffer@out_buffer& (0+255),w,b
 40429  011A36  6ED9               	movwf	fsr2l,c
 40430  011A38  50F4               	movf	prodh,w,c
 40431  011A3A  21B6               	addwfc	(__parse_sector_to_buffer@out_buffer+1)& (0+255),w,b
 40432  011A3C  6EDA               	movwf	fsr2h,c
 40433  011A3E  C0BA  FFDF         	movff	__parse_sector_to_buffer@file_number,indf2
 40434                           
 40435                           ;api.c: 1002: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((sector)>>8)&0xFF));
 40436  011A42  C0B7  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 40437  011A46  C0B8  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 40438  011A4A  CFDF F0B9          	movff	indf2,??__parse_sector_to_buffer
 40439  011A4E  0E01               	movlw	1
 40440  011A50  26DF               	addwf	indf2,f,c
 40441  011A52  51B9               	movf	??__parse_sector_to_buffer& (0+255),w,b
 40442  011A54  0D01               	mullw	1
 40443  011A56  50F3               	movf	prodl,w,c
 40444  011A58  25B5               	addwf	__parse_sector_to_buffer@out_buffer& (0+255),w,b
 40445  011A5A  6ED9               	movwf	fsr2l,c
 40446  011A5C  50F4               	movf	prodh,w,c
 40447  011A5E  21B6               	addwfc	(__parse_sector_to_buffer@out_buffer+1)& (0+255),w,b
 40448  011A60  6EDA               	movwf	fsr2h,c
 40449  011A62  51BD               	movf	(__parse_sector_to_buffer@sector+1)& (0+255),w,b
 40450  011A64  6EDF               	movwf	indf2,c
 40451                           
 40452                           ;api.c: 1003: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((sector)&0xFF));
 40453  011A66  C0B7  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 40454  011A6A  C0B8  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 40455  011A6E  CFDF F0B9          	movff	indf2,??__parse_sector_to_buffer
 40456  011A72  0E01               	movlw	1
 40457  011A74  26DF               	addwf	indf2,f,c
 40458  011A76  51B9               	movf	??__parse_sector_to_buffer& (0+255),w,b
 40459  011A78  0D01               	mullw	1
 40460  011A7A  50F3               	movf	prodl,w,c
 40461  011A7C  25B5               	addwf	__parse_sector_to_buffer@out_buffer& (0+255),w,b
 40462  011A7E  6ED9               	movwf	fsr2l,c
 40463  011A80  50F4               	movf	prodh,w,c
 40464  011A82  21B6               	addwfc	(__parse_sector_to_buffer@out_buffer+1)& (0+255),w,b
 40465  011A84  6EDA               	movwf	fsr2h,c
 40466  011A86  C0BC  FFDF         	movff	__parse_sector_to_buffer@sector,indf2
 40467                           
 40468                           ;api.c: 1004: out_buffer[(*out_idx_ptr)++] = return_value;
 40469  011A8A  C0B7  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 40470  011A8E  C0B8  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 40471  011A92  CFDF F0B9          	movff	indf2,??__parse_sector_to_buffer
 40472  011A96  0E01               	movlw	1
 40473  011A98  26DF               	addwf	indf2,f,c
 40474  011A9A  51B9               	movf	??__parse_sector_to_buffer& (0+255),w,b
 40475  011A9C  0D01               	mullw	1
 40476  011A9E  50F3               	movf	prodl,w,c
 40477  011AA0  25B5               	addwf	__parse_sector_to_buffer@out_buffer& (0+255),w,b
 40478  011AA2  6ED9               	movwf	fsr2l,c
 40479  011AA4  50F4               	movf	prodh,w,c
 40480  011AA6  21B6               	addwfc	(__parse_sector_to_buffer@out_buffer+1)& (0+255),w,b
 40481  011AA8  6EDA               	movwf	fsr2h,c
 40482  011AAA  C0BB  FFDF         	movff	__parse_sector_to_buffer@return_value,indf2
 40483  011AAE                     l3725:
 40484                           
 40485                           ; BSR set to: 0
 40486                           ;api.c: 1005: };api.c: 1007: return 6;
 40487                           
 40488                           ; BSR set to: 0
 40489  011AAE  0E06               	movlw	6
 40490  011AB0  0012               	return	
 40491  011AB2                     __end_of__parse_sector_to_buffer:
 40492                           	opt stack 0
 40493                           tosu	equ	0xFFF
 40494                           tosh	equ	0xFFE
 40495                           tosl	equ	0xFFD
 40496                           pclath	equ	0xFFA
 40497                           tblptru	equ	0xFF8
 40498                           tblptrh	equ	0xFF7
 40499                           tblptrl	equ	0xFF6
 40500                           tablat	equ	0xFF5
 40501                           prodh	equ	0xFF4
 40502                           prodl	equ	0xFF3
 40503                           intcon	equ	0xFF2
 40504                           intcon2	equ	0xFF1
 40505                           intcon3	equ	0xFF0
 40506                           postinc0	equ	0xFEE
 40507                           wreg	equ	0xFE8
 40508                           indf1	equ	0xFE7
 40509                           postinc1	equ	0xFE6
 40510                           postdec1	equ	0xFE5
 40511                           plusw1	equ	0xFE3
 40512                           fsr1h	equ	0xFE2
 40513                           fsr1l	equ	0xFE1
 40514                           indf2	equ	0xFDF
 40515                           postinc2	equ	0xFDE
 40516                           postdec2	equ	0xFDD
 40517                           plusw2	equ	0xFDB
 40518                           fsr2h	equ	0xFDA
 40519                           fsr2l	equ	0xFD9
 40520                           status	equ	0xFD8
 40521                           
 40522 ;; *************** function __parse_format_drive *****************
 40523 ;; Defined at:
 40524 ;;		line 951 in file "api.c"
 40525 ;; Parameters:    Size  Location     Type
 40526 ;;  data            2   38[BANK0 ] PTR unsigned char 
 40527 ;;		 -> ReceivedDataBuffer(64), 
 40528 ;;  out_buffer      2   40[BANK0 ] PTR unsigned char 
 40529 ;;		 -> ToSendDataBuffer(64), 
 40530 ;;  out_idx_ptr     2   42[BANK0 ] PTR unsigned char 
 40531 ;;		 -> api_parse@out_idx(1), 
 40532 ;; Auto vars:     Size  Location     Type
 40533 ;;  return_value    1   45[BANK0 ] unsigned char 
 40534 ;; Return value:  Size  Location     Type
 40535 ;;                  1    wreg      unsigned char 
 40536 ;; Registers used:
 40537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40538 ;; Tracked objects:
 40539 ;;		On entry : 0/0
 40540 ;;		On exit  : 0/0
 40541 ;;		Unchanged: 0/0
 40542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40543 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40544 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40545 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40546 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40547 ;;Total ram usage:        8 bytes
 40548 ;; Hardware stack levels used:    1
 40549 ;; Hardware stack levels required when called:   16
 40550 ;; This function calls:
 40551 ;;		_fat_format
 40552 ;; This function is called by:
 40553 ;;		__parse_command_long
 40554 ;; This function uses a non-reentrant model
 40555 ;;
 40556                           
 40557                           	psect	text185
 40558  015C5C                     __ptext185:
 40559                           	opt stack 0
 40560  015C5C                     __parse_format_drive:
 40561                           	opt stack 11
 40562                           
 40563                           ;api.c: 955: uint8_t return_value;;api.c: 957: if((data[0]!=COMMAND_FORMAT_DRIVE) || (da
      +                          ta[1]!=0xDA) || (data[2]!=0x22))
 40564                           
 40565                           ;incstack = 0
 40566  015C5C  C086  FFD9         	movff	__parse_format_drive@data,fsr2l
 40567  015C60  C087  FFDA         	movff	__parse_format_drive@data+1,fsr2h
 40568  015C64  0E56               	movlw	86
 40569  015C66  18DE               	xorwf	postinc2,w,c
 40570  015C68  A4D8               	btfss	status,2,c
 40571  015C6A  D015               	goto	u23140
 40572  015C6C  0100               	movlb	0	; () banked
 40573  015C6E  EE20 F001          	lfsr	2,1
 40574  015C72  5186               	movf	__parse_format_drive@data& (0+255),w,b
 40575  015C74  26D9               	addwf	fsr2l,f,c
 40576  015C76  5187               	movf	(__parse_format_drive@data+1)& (0+255),w,b
 40577  015C78  22DA               	addwfc	fsr2h,f,c
 40578  015C7A  0EDA               	movlw	218
 40579  015C7C  18DE               	xorwf	postinc2,w,c
 40580  015C7E  A4D8               	btfss	status,2,c
 40581  015C80  D00A               	goto	u23140
 40582                           
 40583                           ; BSR set to: 0
 40584  015C82  EE20 F002          	lfsr	2,2
 40585  015C86  5186               	movf	__parse_format_drive@data& (0+255),w,b
 40586  015C88  26D9               	addwf	fsr2l,f,c
 40587  015C8A  5187               	movf	(__parse_format_drive@data+1)& (0+255),w,b
 40588  015C8C  22DA               	addwfc	fsr2h,f,c
 40589  015C8E  0E22               	movlw	34
 40590  015C90  18DE               	xorwf	postinc2,w,c
 40591  015C92  B4D8               	btfsc	status,2,c
 40592  015C94  D002               	goto	l3714
 40593  015C96                     u23140:
 40594                           
 40595                           ;api.c: 958: {;api.c: 959: return 3;
 40596                           
 40597                           ; BSR set to: 0
 40598  015C96  0E03               	movlw	3
 40599  015C98  0012               	return	
 40600  015C9A                     l3714:
 40601                           
 40602                           ;api.c: 960: };api.c: 962: return_value = fat_format();
 40603  015C9A  EC45  F082         	call	_fat_format	;wreg free
 40604  015C9E  0100               	movlb	0	; () banked
 40605  015CA0  6F8D               	movwf	__parse_format_drive@return_value& (0+255),b
 40606                           
 40607                           ; BSR set to: 0
 40608                           ;api.c: 965: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 40609  015CA2  C08A  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 40610  015CA6  C08B  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 40611  015CAA  50DF               	movf	indf2,w,c
 40612  015CAC  B4D8               	btfsc	status,2,c
 40613  015CAE  D02B               	goto	l3718
 40614                           
 40615                           ; BSR set to: 0
 40616  015CB0  C08A  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 40617  015CB4  C08B  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 40618  015CB8  0E3F               	movlw	63
 40619  015CBA  60DF               	cpfslt	indf2,c
 40620  015CBC  D024               	goto	l3718
 40621                           
 40622                           ; BSR set to: 0
 40623                           ;api.c: 966: {;api.c: 967: out_buffer[(*out_idx_ptr)++] = COMMAND_FORMAT_DRIVE;
 40624  015CBE  C08A  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 40625  015CC2  C08B  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 40626  015CC6  CFDF F08C          	movff	indf2,??__parse_format_drive
 40627  015CCA  0E01               	movlw	1
 40628  015CCC  26DF               	addwf	indf2,f,c
 40629  015CCE  518C               	movf	??__parse_format_drive& (0+255),w,b
 40630  015CD0  0D01               	mullw	1
 40631  015CD2  50F3               	movf	prodl,w,c
 40632  015CD4  2588               	addwf	__parse_format_drive@out_buffer& (0+255),w,b
 40633  015CD6  6ED9               	movwf	fsr2l,c
 40634  015CD8  50F4               	movf	prodh,w,c
 40635  015CDA  2189               	addwfc	(__parse_format_drive@out_buffer+1)& (0+255),w,b
 40636  015CDC  6EDA               	movwf	fsr2h,c
 40637  015CDE  0E56               	movlw	86
 40638  015CE0  6EDF               	movwf	indf2,c
 40639                           
 40640                           ;api.c: 968: out_buffer[(*out_idx_ptr)++] = return_value;
 40641  015CE2  C08A  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 40642  015CE6  C08B  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 40643  015CEA  CFDF F08C          	movff	indf2,??__parse_format_drive
 40644  015CEE  0E01               	movlw	1
 40645  015CF0  26DF               	addwf	indf2,f,c
 40646  015CF2  518C               	movf	??__parse_format_drive& (0+255),w,b
 40647  015CF4  0D01               	mullw	1
 40648  015CF6  50F3               	movf	prodl,w,c
 40649  015CF8  2588               	addwf	__parse_format_drive@out_buffer& (0+255),w,b
 40650  015CFA  6ED9               	movwf	fsr2l,c
 40651  015CFC  50F4               	movf	prodh,w,c
 40652  015CFE  2189               	addwfc	(__parse_format_drive@out_buffer+1)& (0+255),w,b
 40653  015D00  6EDA               	movwf	fsr2h,c
 40654  015D02  C08D  FFDF         	movff	__parse_format_drive@return_value,indf2
 40655  015D06                     l3718:
 40656                           
 40657                           ; BSR set to: 0
 40658                           ;api.c: 969: };api.c: 971: return 3;
 40659                           
 40660                           ; BSR set to: 0
 40661  015D06  0E03               	movlw	3
 40662  015D08  0012               	return	
 40663  015D0A                     __end_of__parse_format_drive:
 40664                           	opt stack 0
 40665                           tosu	equ	0xFFF
 40666                           tosh	equ	0xFFE
 40667                           tosl	equ	0xFFD
 40668                           pclath	equ	0xFFA
 40669                           tblptru	equ	0xFF8
 40670                           tblptrh	equ	0xFF7
 40671                           tblptrl	equ	0xFF6
 40672                           tablat	equ	0xFF5
 40673                           prodh	equ	0xFF4
 40674                           prodl	equ	0xFF3
 40675                           intcon	equ	0xFF2
 40676                           intcon2	equ	0xFF1
 40677                           intcon3	equ	0xFF0
 40678                           postinc0	equ	0xFEE
 40679                           wreg	equ	0xFE8
 40680                           indf1	equ	0xFE7
 40681                           postinc1	equ	0xFE6
 40682                           postdec1	equ	0xFE5
 40683                           plusw1	equ	0xFE3
 40684                           fsr1h	equ	0xFE2
 40685                           fsr1l	equ	0xFE1
 40686                           indf2	equ	0xFDF
 40687                           postinc2	equ	0xFDE
 40688                           postdec2	equ	0xFDD
 40689                           plusw2	equ	0xFDB
 40690                           fsr2h	equ	0xFDA
 40691                           fsr2l	equ	0xFD9
 40692                           status	equ	0xFD8
 40693                           
 40694 ;; *************** function _fat_format *****************
 40695 ;; Defined at:
 40696 ;;		line 1320 in file "fat16.c"
 40697 ;; Parameters:    Size  Location     Type
 40698 ;;		None
 40699 ;; Auto vars:     Size  Location     Type
 40700 ;;  cntr            2   36[BANK0 ] unsigned int 
 40701 ;; Return value:  Size  Location     Type
 40702 ;;                  1    wreg      unsigned char 
 40703 ;; Registers used:
 40704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 40705 ;; Tracked objects:
 40706 ;;		On entry : 0/0
 40707 ;;		On exit  : 0/0
 40708 ;;		Unchanged: 0/0
 40709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40711 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40713 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40714 ;;Total ram usage:        2 bytes
 40715 ;; Hardware stack levels used:    1
 40716 ;; Hardware stack levels required when called:   15
 40717 ;; This function calls:
 40718 ;;		__get_data
 40719 ;;		__get_fat
 40720 ;;		__get_fbr
 40721 ;;		__get_mbr
 40722 ;;		__get_root
 40723 ;;		_flash_sector_write
 40724 ;; This function is called by:
 40725 ;;		__parse_format_drive
 40726 ;;		_fat_init
 40727 ;; This function uses a non-reentrant model
 40728 ;;
 40729                           
 40730                           	psect	text186
 40731  01048A                     __ptext186:
 40732                           	opt stack 0
 40733  01048A                     _fat_format:
 40734                           	opt stack 11
 40735                           
 40736                           ;fat16.c: 1322: uint16_t cntr;;fat16.c: 1325: for(cntr=0; cntr<512; ++cntr)
 40737                           
 40738                           ;incstack = 0
 40739  01048A  0E00               	movlw	0
 40740  01048C  0100               	movlb	0	; () banked
 40741  01048E  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
 40742  010490  0E00               	movlw	0
 40743  010492  6F84               	movwf	fat_format@cntr& (0+255),b
 40744  010494                     l24011:
 40745                           
 40746                           ; BSR set to: 0
 40747  010494  0E02               	movlw	2
 40748  010496  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
 40749  010498  B0D8               	btfsc	status,0,c
 40750  01049A  D011               	goto	u22260
 40751                           
 40752                           ; BSR set to: 0
 40753                           ;fat16.c: 1326: {;fat16.c: 1327: buffer[cntr] = _get_mbr(cntr);
 40754                           
 40755                           ; BSR set to: 0
 40756                           
 40757                           ; BSR set to: 0
 40758  01049C  0E00               	movlw	low _buffer
 40759  01049E  2584               	addwf	fat_format@cntr& (0+255),w,b
 40760  0104A0  6ED9               	movwf	fsr2l,c
 40761  0104A2  0E08               	movlw	high _buffer
 40762  0104A4  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
 40763  0104A6  6EDA               	movwf	fsr2h,c
 40764  0104A8  C084  F060         	movff	fat_format@cntr,__get_mbr@idx
 40765  0104AC  C085  F061         	movff	fat_format@cntr+1,__get_mbr@idx+1
 40766  0104B0  EC16  F0A6         	call	__get_mbr	;wreg free
 40767  0104B4  6EDF               	movwf	indf2,c
 40768  0104B6  0100               	movlb	0	; () banked
 40769  0104B8  4B84               	infsnz	fat_format@cntr& (0+255),f,b
 40770  0104BA  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
 40771  0104BC  D7EB               	goto	l24011
 40772  0104BE                     u22260:
 40773                           
 40774                           ; BSR set to: 0
 40775                           ;fat16.c: 1328: };fat16.c: 1329: flash_sector_write(0, buffer);
 40776                           
 40777                           ; BSR set to: 0
 40778  0104BE  0E00               	movlw	0
 40779  0104C0  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
 40780  0104C2  0E00               	movlw	0
 40781  0104C4  6F7F               	movwf	flash_sector_write@page& (0+255),b
 40782  0104C6  0E00               	movlw	low _buffer
 40783  0104C8  6F81               	movwf	flash_sector_write@data& (0+255),b
 40784  0104CA  0E08               	movlw	high _buffer
 40785  0104CC  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 40786  0104CE  EC54  F0BB         	call	_flash_sector_write	;wreg free
 40787                           
 40788                           ;fat16.c: 1332: for(cntr=0; cntr<512; ++cntr)
 40789  0104D2  0E00               	movlw	0
 40790  0104D4  0100               	movlb	0	; () banked
 40791  0104D6  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
 40792  0104D8  0E00               	movlw	0
 40793  0104DA  6F84               	movwf	fat_format@cntr& (0+255),b
 40794  0104DC                     l24025:
 40795                           
 40796                           ; BSR set to: 0
 40797  0104DC  0E02               	movlw	2
 40798  0104DE  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
 40799  0104E0  B0D8               	btfsc	status,0,c
 40800  0104E2  D011               	goto	u22280
 40801                           
 40802                           ; BSR set to: 0
 40803                           ;fat16.c: 1333: {;fat16.c: 1334: buffer[cntr] = _get_fbr(cntr);
 40804                           
 40805                           ; BSR set to: 0
 40806                           
 40807                           ; BSR set to: 0
 40808  0104E4  0E00               	movlw	low _buffer
 40809  0104E6  2584               	addwf	fat_format@cntr& (0+255),w,b
 40810  0104E8  6ED9               	movwf	fsr2l,c
 40811  0104EA  0E08               	movlw	high _buffer
 40812  0104EC  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
 40813  0104EE  6EDA               	movwf	fsr2h,c
 40814  0104F0  C084  F060         	movff	fat_format@cntr,__get_fbr@idx
 40815  0104F4  C085  F061         	movff	fat_format@cntr+1,__get_fbr@idx+1
 40816  0104F8  EC9D  F07C         	call	__get_fbr	;wreg free
 40817  0104FC  6EDF               	movwf	indf2,c
 40818  0104FE  0100               	movlb	0	; () banked
 40819  010500  4B84               	infsnz	fat_format@cntr& (0+255),f,b
 40820  010502  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
 40821  010504  D7EB               	goto	l24025
 40822  010506                     u22280:
 40823                           
 40824                           ; BSR set to: 0
 40825                           ;fat16.c: 1335: };fat16.c: 1336: flash_sector_write(1, buffer);
 40826                           
 40827                           ; BSR set to: 0
 40828  010506  0E00               	movlw	0
 40829  010508  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
 40830  01050A  0E01               	movlw	1
 40831  01050C  6F7F               	movwf	flash_sector_write@page& (0+255),b
 40832  01050E  0E00               	movlw	low _buffer
 40833  010510  6F81               	movwf	flash_sector_write@data& (0+255),b
 40834  010512  0E08               	movlw	high _buffer
 40835  010514  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 40836  010516  EC54  F0BB         	call	_flash_sector_write	;wreg free
 40837                           
 40838                           ;fat16.c: 1339: for(cntr=0; cntr<512; ++cntr)
 40839  01051A  0E00               	movlw	0
 40840  01051C  0100               	movlb	0	; () banked
 40841  01051E  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
 40842  010520  0E00               	movlw	0
 40843  010522  6F84               	movwf	fat_format@cntr& (0+255),b
 40844  010524                     l24039:
 40845                           
 40846                           ; BSR set to: 0
 40847  010524  0E02               	movlw	2
 40848  010526  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
 40849  010528  B0D8               	btfsc	status,0,c
 40850  01052A  D011               	goto	u22300
 40851                           
 40852                           ; BSR set to: 0
 40853                           ;fat16.c: 1340: {;fat16.c: 1341: buffer[cntr] = _get_fat(cntr);
 40854                           
 40855                           ; BSR set to: 0
 40856                           
 40857                           ; BSR set to: 0
 40858  01052C  0E00               	movlw	low _buffer
 40859  01052E  2584               	addwf	fat_format@cntr& (0+255),w,b
 40860  010530  6ED9               	movwf	fsr2l,c
 40861  010532  0E08               	movlw	high _buffer
 40862  010534  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
 40863  010536  6EDA               	movwf	fsr2h,c
 40864  010538  C084  F060         	movff	fat_format@cntr,__get_fat@idx
 40865  01053C  C085  F061         	movff	fat_format@cntr+1,__get_fat@idx+1
 40866  010540  EC17  F0BD         	call	__get_fat	;wreg free
 40867  010544  6EDF               	movwf	indf2,c
 40868  010546  0100               	movlb	0	; () banked
 40869  010548  4B84               	infsnz	fat_format@cntr& (0+255),f,b
 40870  01054A  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
 40871  01054C  D7EB               	goto	l24039
 40872  01054E                     u22300:
 40873                           
 40874                           ; BSR set to: 0
 40875                           ;fat16.c: 1342: };fat16.c: 1343: flash_sector_write(2, buffer);
 40876                           
 40877                           ; BSR set to: 0
 40878  01054E  0E00               	movlw	0
 40879  010550  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
 40880  010552  0E02               	movlw	2
 40881  010554  6F7F               	movwf	flash_sector_write@page& (0+255),b
 40882  010556  0E00               	movlw	low _buffer
 40883  010558  6F81               	movwf	flash_sector_write@data& (0+255),b
 40884  01055A  0E08               	movlw	high _buffer
 40885  01055C  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 40886  01055E  EC54  F0BB         	call	_flash_sector_write	;wreg free
 40887                           
 40888                           ;fat16.c: 1346: for(cntr=0; cntr<512; ++cntr)
 40889  010562  0E00               	movlw	0
 40890  010564  0100               	movlb	0	; () banked
 40891  010566  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
 40892  010568  0E00               	movlw	0
 40893  01056A  6F84               	movwf	fat_format@cntr& (0+255),b
 40894  01056C                     l24053:
 40895                           
 40896                           ; BSR set to: 0
 40897  01056C  0E02               	movlw	2
 40898  01056E  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
 40899  010570  B0D8               	btfsc	status,0,c
 40900  010572  D00B               	goto	u22320
 40901                           
 40902                           ; BSR set to: 0
 40903                           ;fat16.c: 1347: {;fat16.c: 1348: buffer[cntr] = 0x00;
 40904                           
 40905                           ; BSR set to: 0
 40906                           
 40907                           ; BSR set to: 0
 40908  010574  0E00               	movlw	low _buffer
 40909  010576  2584               	addwf	fat_format@cntr& (0+255),w,b
 40910  010578  6ED9               	movwf	fsr2l,c
 40911  01057A  0E08               	movlw	high _buffer
 40912  01057C  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
 40913  01057E  6EDA               	movwf	fsr2h,c
 40914  010580  0E00               	movlw	0
 40915  010582  6EDF               	movwf	indf2,c
 40916                           
 40917                           ; BSR set to: 0
 40918  010584  4B84               	infsnz	fat_format@cntr& (0+255),f,b
 40919  010586  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
 40920  010588  D7F1               	goto	l24053
 40921  01058A                     u22320:
 40922                           
 40923                           ; BSR set to: 0
 40924                           ;fat16.c: 1349: };fat16.c: 1350: for(cntr=2+1; cntr<=33; ++cntr)
 40925                           
 40926                           ; BSR set to: 0
 40927  01058A  0E00               	movlw	0
 40928  01058C  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
 40929  01058E  0E03               	movlw	3
 40930  010590  6F84               	movwf	fat_format@cntr& (0+255),b
 40931  010592                     l24065:
 40932                           
 40933                           ; BSR set to: 0
 40934  010592  5185               	movf	(fat_format@cntr+1)& (0+255),w,b
 40935  010594  E112               	bnz	l24075
 40936  010596  0E22               	movlw	34
 40937  010598  5D84               	subwf	fat_format@cntr& (0+255),w,b
 40938  01059A  B0D8               	btfsc	status,0,c
 40939  01059C  D00E               	goto	u22340
 40940                           
 40941                           ; BSR set to: 0
 40942                           ;fat16.c: 1351: {;fat16.c: 1352: flash_sector_write(cntr, buffer);
 40943                           
 40944                           ; BSR set to: 0
 40945                           
 40946                           ; BSR set to: 0
 40947  01059E  C084  F07F         	movff	fat_format@cntr,flash_sector_write@page
 40948  0105A2  C085  F080         	movff	fat_format@cntr+1,flash_sector_write@page+1
 40949  0105A6  0E00               	movlw	low _buffer
 40950  0105A8  6F81               	movwf	flash_sector_write@data& (0+255),b
 40951  0105AA  0E08               	movlw	high _buffer
 40952  0105AC  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 40953  0105AE  EC54  F0BB         	call	_flash_sector_write	;wreg free
 40954  0105B2  0100               	movlb	0	; () banked
 40955  0105B4  4B84               	infsnz	fat_format@cntr& (0+255),f,b
 40956  0105B6  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
 40957  0105B8  D7EC               	goto	l24065
 40958  0105BA                     u22340:
 40959  0105BA                     l24075:
 40960                           
 40961                           ; BSR set to: 0
 40962                           ;fat16.c: 1353: };fat16.c: 1356: for(cntr=0; cntr<512; ++cntr)
 40963  0105BA  0E00               	movlw	0
 40964  0105BC  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
 40965  0105BE  0E00               	movlw	0
 40966  0105C0  6F84               	movwf	fat_format@cntr& (0+255),b
 40967  0105C2                     l24077:
 40968                           
 40969                           ; BSR set to: 0
 40970  0105C2  0E02               	movlw	2
 40971  0105C4  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
 40972  0105C6  B0D8               	btfsc	status,0,c
 40973  0105C8  D011               	goto	u22360
 40974                           
 40975                           ; BSR set to: 0
 40976                           ;fat16.c: 1357: {;fat16.c: 1358: buffer[cntr] = _get_root(cntr);
 40977                           
 40978                           ; BSR set to: 0
 40979                           
 40980                           ; BSR set to: 0
 40981  0105CA  0E00               	movlw	low _buffer
 40982  0105CC  2584               	addwf	fat_format@cntr& (0+255),w,b
 40983  0105CE  6ED9               	movwf	fsr2l,c
 40984  0105D0  0E08               	movlw	high _buffer
 40985  0105D2  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
 40986  0105D4  6EDA               	movwf	fsr2h,c
 40987  0105D6  C084  F060         	movff	fat_format@cntr,__get_root@idx
 40988  0105DA  C085  F061         	movff	fat_format@cntr+1,__get_root@idx+1
 40989  0105DE  EC0B  F08B         	call	__get_root	;wreg free
 40990  0105E2  6EDF               	movwf	indf2,c
 40991  0105E4  0100               	movlb	0	; () banked
 40992  0105E6  4B84               	infsnz	fat_format@cntr& (0+255),f,b
 40993  0105E8  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
 40994  0105EA  D7EB               	goto	l24077
 40995  0105EC                     u22360:
 40996                           
 40997                           ; BSR set to: 0
 40998                           ;fat16.c: 1359: };fat16.c: 1360: flash_sector_write(34, buffer);
 40999                           
 41000                           ; BSR set to: 0
 41001  0105EC  0E00               	movlw	0
 41002  0105EE  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
 41003  0105F0  0E22               	movlw	34
 41004  0105F2  6F7F               	movwf	flash_sector_write@page& (0+255),b
 41005  0105F4  0E00               	movlw	low _buffer
 41006  0105F6  6F81               	movwf	flash_sector_write@data& (0+255),b
 41007  0105F8  0E08               	movlw	high _buffer
 41008  0105FA  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 41009  0105FC  EC54  F0BB         	call	_flash_sector_write	;wreg free
 41010                           
 41011                           ;fat16.c: 1363: for(cntr=0; cntr<512; ++cntr)
 41012  010600  0E00               	movlw	0
 41013  010602  0100               	movlb	0	; () banked
 41014  010604  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
 41015  010606  0E00               	movlw	0
 41016  010608  6F84               	movwf	fat_format@cntr& (0+255),b
 41017  01060A                     l24091:
 41018                           
 41019                           ; BSR set to: 0
 41020  01060A  0E02               	movlw	2
 41021  01060C  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
 41022  01060E  B0D8               	btfsc	status,0,c
 41023  010610  D00B               	goto	u22380
 41024                           
 41025                           ; BSR set to: 0
 41026                           ;fat16.c: 1364: {;fat16.c: 1365: buffer[cntr] = 0x00;
 41027                           
 41028                           ; BSR set to: 0
 41029                           
 41030                           ; BSR set to: 0
 41031  010612  0E00               	movlw	low _buffer
 41032  010614  2584               	addwf	fat_format@cntr& (0+255),w,b
 41033  010616  6ED9               	movwf	fsr2l,c
 41034  010618  0E08               	movlw	high _buffer
 41035  01061A  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
 41036  01061C  6EDA               	movwf	fsr2h,c
 41037  01061E  0E00               	movlw	0
 41038  010620  6EDF               	movwf	indf2,c
 41039                           
 41040                           ; BSR set to: 0
 41041  010622  4B84               	infsnz	fat_format@cntr& (0+255),f,b
 41042  010624  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
 41043  010626  D7F1               	goto	l24091
 41044  010628                     u22380:
 41045                           
 41046                           ; BSR set to: 0
 41047                           ;fat16.c: 1366: };fat16.c: 1367: for(cntr=34+1; cntr<=37; ++cntr)
 41048                           
 41049                           ; BSR set to: 0
 41050  010628  0E00               	movlw	0
 41051  01062A  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
 41052  01062C  0E23               	movlw	35
 41053  01062E  6F84               	movwf	fat_format@cntr& (0+255),b
 41054  010630                     l24103:
 41055                           
 41056                           ; BSR set to: 0
 41057  010630  5185               	movf	(fat_format@cntr+1)& (0+255),w,b
 41058  010632  E112               	bnz	l24113
 41059  010634  0E26               	movlw	38
 41060  010636  5D84               	subwf	fat_format@cntr& (0+255),w,b
 41061  010638  B0D8               	btfsc	status,0,c
 41062  01063A  D00E               	goto	u22400
 41063                           
 41064                           ; BSR set to: 0
 41065                           ;fat16.c: 1368: {;fat16.c: 1369: flash_sector_write(cntr, buffer);
 41066                           
 41067                           ; BSR set to: 0
 41068                           
 41069                           ; BSR set to: 0
 41070  01063C  C084  F07F         	movff	fat_format@cntr,flash_sector_write@page
 41071  010640  C085  F080         	movff	fat_format@cntr+1,flash_sector_write@page+1
 41072  010644  0E00               	movlw	low _buffer
 41073  010646  6F81               	movwf	flash_sector_write@data& (0+255),b
 41074  010648  0E08               	movlw	high _buffer
 41075  01064A  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 41076  01064C  EC54  F0BB         	call	_flash_sector_write	;wreg free
 41077  010650  0100               	movlb	0	; () banked
 41078  010652  4B84               	infsnz	fat_format@cntr& (0+255),f,b
 41079  010654  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
 41080  010656  D7EC               	goto	l24103
 41081  010658                     u22400:
 41082  010658                     l24113:
 41083                           
 41084                           ; BSR set to: 0
 41085                           ;fat16.c: 1370: };fat16.c: 1373: for(cntr=0; cntr<512; ++cntr)
 41086  010658  0E00               	movlw	0
 41087  01065A  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
 41088  01065C  0E00               	movlw	0
 41089  01065E  6F84               	movwf	fat_format@cntr& (0+255),b
 41090  010660                     l24115:
 41091                           
 41092                           ; BSR set to: 0
 41093  010660  0E02               	movlw	2
 41094  010662  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
 41095  010664  B0D8               	btfsc	status,0,c
 41096  010666  D011               	goto	u22420
 41097                           
 41098                           ; BSR set to: 0
 41099                           ;fat16.c: 1374: {;fat16.c: 1375: buffer[cntr] = _get_data(cntr);
 41100                           
 41101                           ; BSR set to: 0
 41102                           
 41103                           ; BSR set to: 0
 41104  010668  0E00               	movlw	low _buffer
 41105  01066A  2584               	addwf	fat_format@cntr& (0+255),w,b
 41106  01066C  6ED9               	movwf	fsr2l,c
 41107  01066E  0E08               	movlw	high _buffer
 41108  010670  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
 41109  010672  6EDA               	movwf	fsr2h,c
 41110  010674  C084  F060         	movff	fat_format@cntr,__get_data@idx
 41111  010678  C085  F061         	movff	fat_format@cntr+1,__get_data@idx+1
 41112  01067C  ECD0  F0C4         	call	__get_data	;wreg free
 41113  010680  6EDF               	movwf	indf2,c
 41114  010682  0100               	movlb	0	; () banked
 41115  010684  4B84               	infsnz	fat_format@cntr& (0+255),f,b
 41116  010686  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
 41117  010688  D7EB               	goto	l24115
 41118  01068A                     u22420:
 41119                           
 41120                           ; BSR set to: 0
 41121                           ;fat16.c: 1376: };fat16.c: 1377: flash_sector_write(38, buffer);
 41122                           
 41123                           ; BSR set to: 0
 41124  01068A  0E00               	movlw	0
 41125  01068C  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
 41126  01068E  0E26               	movlw	38
 41127  010690  6F7F               	movwf	flash_sector_write@page& (0+255),b
 41128  010692  0E00               	movlw	low _buffer
 41129  010694  6F81               	movwf	flash_sector_write@data& (0+255),b
 41130  010696  0E08               	movlw	high _buffer
 41131  010698  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 41132  01069A  EC54  F0BB         	call	_flash_sector_write	;wreg free
 41133                           
 41134                           ;fat16.c: 1379: return 0x00;
 41135  01069E  0E00               	movlw	0
 41136  0106A0  0012               	return	
 41137  0106A2                     __end_of_fat_format:
 41138                           	opt stack 0
 41139                           tosu	equ	0xFFF
 41140                           tosh	equ	0xFFE
 41141                           tosl	equ	0xFFD
 41142                           pclath	equ	0xFFA
 41143                           tblptru	equ	0xFF8
 41144                           tblptrh	equ	0xFF7
 41145                           tblptrl	equ	0xFF6
 41146                           tablat	equ	0xFF5
 41147                           prodh	equ	0xFF4
 41148                           prodl	equ	0xFF3
 41149                           intcon	equ	0xFF2
 41150                           intcon2	equ	0xFF1
 41151                           intcon3	equ	0xFF0
 41152                           postinc0	equ	0xFEE
 41153                           wreg	equ	0xFE8
 41154                           indf1	equ	0xFE7
 41155                           postinc1	equ	0xFE6
 41156                           postdec1	equ	0xFE5
 41157                           plusw1	equ	0xFE3
 41158                           fsr1h	equ	0xFE2
 41159                           fsr1l	equ	0xFE1
 41160                           indf2	equ	0xFDF
 41161                           postinc2	equ	0xFDE
 41162                           postdec2	equ	0xFDD
 41163                           plusw2	equ	0xFDB
 41164                           fsr2h	equ	0xFDA
 41165                           fsr2l	equ	0xFD9
 41166                           status	equ	0xFD8
 41167                           
 41168 ;; *************** function __get_root *****************
 41169 ;; Defined at:
 41170 ;;		line 1210 in file "fat16.c"
 41171 ;; Parameters:    Size  Location     Type
 41172 ;;  idx             2    0[BANK0 ] unsigned int 
 41173 ;; Auto vars:     Size  Location     Type
 41174 ;;		None
 41175 ;; Return value:  Size  Location     Type
 41176 ;;                  1    wreg      unsigned char 
 41177 ;; Registers used:
 41178 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 41179 ;; Tracked objects:
 41180 ;;		On entry : 0/0
 41181 ;;		On exit  : 0/0
 41182 ;;		Unchanged: 0/0
 41183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41184 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41186 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41187 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41188 ;;Total ram usage:        6 bytes
 41189 ;; Hardware stack levels used:    1
 41190 ;; Hardware stack levels required when called:   10
 41191 ;; This function calls:
 41192 ;;		Nothing
 41193 ;; This function is called by:
 41194 ;;		_fat_format
 41195 ;; This function uses a non-reentrant model
 41196 ;;
 41197                           
 41198                           	psect	text187
 41199  011616                     __ptext187:
 41200                           	opt stack 0
 41201  011616                     __get_root:
 41202                           	opt stack 15
 41203                           
 41204                           ;fat16.c: 1212: if(idx < 0x20)
 41205                           
 41206                           ;incstack = 0
 41207  011616  0100               	movlb	0	; () banked
 41208  011618  5161               	movf	(__get_root@idx+1)& (0+255),w,b
 41209  01161A  E11D               	bnz	l23257
 41210  01161C  0E20               	movlw	32
 41211  01161E  5D60               	subwf	__get_root@idx& (0+255),w,b
 41212  011620  B0D8               	btfsc	status,0,c
 41213  011622  D019               	goto	l3054
 41214                           
 41215                           ; BSR set to: 0
 41216                           ;fat16.c: 1213: {;fat16.c: 1214: if(idx < 11)
 41217  011624  5161               	movf	(__get_root@idx+1)& (0+255),w,b
 41218  011626  E110               	bnz	l23251
 41219  011628  0E0B               	movlw	11
 41220  01162A  5D60               	subwf	__get_root@idx& (0+255),w,b
 41221  01162C  B0D8               	btfsc	status,0,c
 41222  01162E  D00C               	goto	l3052
 41223                           
 41224                           ; BSR set to: 0
 41225                           ;fat16.c: 1215: {;fat16.c: 1216: return "SolarChargr"[idx];
 41226  011630  0E6F               	movlw	low STR_9
 41227  011632  2560               	addwf	__get_root@idx& (0+255),w,b
 41228  011634  6EF6               	movwf	tblptrl,c
 41229  011636  0EC4               	movlw	high STR_9
 41230  011638  2161               	addwfc	(__get_root@idx+1)& (0+255),w,b
 41231  01163A  6EF7               	movwf	tblptrh,c
 41232  01163C                     	if	1	;There are 3 active tblptr bytes
 41233  01163C  6AF8               	clrf	tblptru,c
 41234  01163E  0E00               	movlw	low (__mediumconst shr (0+16))
 41235  011640  22F8               	addwfc	tblptru,f,c
 41236  011642                     	endif
 41237  011642  0008               	tblrd		*
 41238  011644  50F5               	movf	tablat,w,c
 41239                           
 41240                           ; BSR set to: 0
 41241  011646  0012               	return	
 41242  011648                     l3052:
 41243  011648                     l23251:
 41244                           
 41245                           ; BSR set to: 0
 41246                           ;fat16.c: 1217: };fat16.c: 1218: if(idx==11)
 41247  011648  0E0B               	movlw	11
 41248  01164A  1960               	xorwf	__get_root@idx& (0+255),w,b
 41249  01164C  1161               	iorwf	(__get_root@idx+1)& (0+255),w,b
 41250  01164E  A4D8               	btfss	status,2,c
 41251  011650  D002               	goto	l3054
 41252                           
 41253                           ; BSR set to: 0
 41254                           ;fat16.c: 1219: {;fat16.c: 1220: return 0x08;
 41255  011652  0E08               	movlw	8
 41256                           
 41257                           ; BSR set to: 0
 41258  011654  0012               	return	
 41259  011656                     l3054:
 41260  011656                     l23257:
 41261                           
 41262                           ; BSR set to: 0
 41263                           ;fat16.c: 1221: };fat16.c: 1222: };fat16.c: 1223: if(idx < 0x40)
 41264  011656  5161               	movf	(__get_root@idx+1)& (0+255),w,b
 41265  011658  E103               	bnz	u21321
 41266  01165A  0E40               	movlw	64
 41267  01165C  5D60               	subwf	__get_root@idx& (0+255),w,b
 41268  01165E  B0D8               	btfsc	status,0,c
 41269  011660                     u21321:
 41270  011660  D0A4               	goto	l3080
 41271                           
 41272                           ; BSR set to: 0
 41273                           ;fat16.c: 1224: {;fat16.c: 1225: idx -= 0x20;
 41274  011662  0E20               	movlw	32
 41275  011664  5F60               	subwf	__get_root@idx& (0+255),f,b
 41276  011666  0E00               	movlw	0
 41277  011668  5B61               	subwfb	(__get_root@idx+1)& (0+255),f,b
 41278                           
 41279                           ;fat16.c: 1226: if(idx < 0+8)
 41280  01166A  5161               	movf	(__get_root@idx+1)& (0+255),w,b
 41281  01166C  E110               	bnz	l23265
 41282  01166E  0E08               	movlw	8
 41283  011670  5D60               	subwf	__get_root@idx& (0+255),w,b
 41284  011672  B0D8               	btfsc	status,0,c
 41285  011674  D00C               	goto	l3056
 41286                           
 41287                           ; BSR set to: 0
 41288                           ;fat16.c: 1227: {;fat16.c: 1228: return "FILE    "[idx];
 41289  011676  0E7B               	movlw	low STR_10
 41290  011678  2560               	addwf	__get_root@idx& (0+255),w,b
 41291  01167A  6EF6               	movwf	tblptrl,c
 41292  01167C  0EC4               	movlw	high STR_10
 41293  01167E  2161               	addwfc	(__get_root@idx+1)& (0+255),w,b
 41294  011680  6EF7               	movwf	tblptrh,c
 41295  011682                     	if	1	;There are 3 active tblptr bytes
 41296  011682  6AF8               	clrf	tblptru,c
 41297  011684  0E00               	movlw	low (__mediumconst shr (0+16))
 41298  011686  22F8               	addwfc	tblptru,f,c
 41299  011688                     	endif
 41300  011688  0008               	tblrd		*
 41301  01168A  50F5               	movf	tablat,w,c
 41302                           
 41303                           ; BSR set to: 0
 41304  01168C  0012               	return	
 41305  01168E                     l3056:
 41306  01168E                     l23265:
 41307                           
 41308                           ; BSR set to: 0
 41309                           ;fat16.c: 1229: };fat16.c: 1230: if(idx < 11)
 41310  01168E  5161               	movf	(__get_root@idx+1)& (0+255),w,b
 41311  011690  E146               	bnz	l23357
 41312  011692  0E0B               	movlw	11
 41313  011694  5D60               	subwf	__get_root@idx& (0+255),w,b
 41314  011696  B0D8               	btfsc	status,0,c
 41315  011698  D042               	goto	l3058
 41316                           
 41317                           ; BSR set to: 0
 41318                           ;fat16.c: 1231: {;fat16.c: 1232: return "TXT"[idx-8];
 41319  01169A  0EF8               	movlw	248
 41320  01169C  6F62               	movwf	??__get_root& (0+255),b
 41321  01169E  0EFF               	movlw	255
 41322  0116A0  6F63               	movwf	(??__get_root+1)& (0+255),b
 41323  0116A2  C060  F064         	movff	__get_root@idx,??__get_root+2
 41324  0116A6  C061  F065         	movff	__get_root@idx+1,??__get_root+3
 41325  0116AA  5162               	movf	??__get_root& (0+255),w,b
 41326  0116AC  2764               	addwf	(??__get_root+2)& (0+255),f,b
 41327  0116AE  5163               	movf	(??__get_root+1)& (0+255),w,b
 41328  0116B0  2365               	addwfc	(??__get_root+3)& (0+255),f,b
 41329  0116B2  0E8D               	movlw	low STR_11
 41330  0116B4  2564               	addwf	(??__get_root+2)& (0+255),w,b
 41331  0116B6  6EF6               	movwf	tblptrl,c
 41332  0116B8  0EC4               	movlw	high STR_11
 41333  0116BA  2165               	addwfc	(??__get_root+3)& (0+255),w,b
 41334  0116BC  6EF7               	movwf	tblptrh,c
 41335  0116BE                     	if	1	;There are 3 active tblptr bytes
 41336  0116BE  6AF8               	clrf	tblptru,c
 41337  0116C0  0E00               	movlw	low (__mediumconst shr (0+16))
 41338  0116C2  22F8               	addwfc	tblptru,f,c
 41339  0116C4                     	endif
 41340  0116C4  0008               	tblrd		*
 41341  0116C6  50F5               	movf	tablat,w,c
 41342                           
 41343                           ; BSR set to: 0
 41344  0116C8  0012               	return	
 41345  0116CA                     
 41346                           ; BSR set to: 0
 41347                           ;fat16.c: 1237: return 0x20;
 41348                           
 41349                           ; BSR set to: 0
 41350  0116CA  0E20               	movlw	32
 41351                           
 41352                           ; BSR set to: 0
 41353  0116CC  0012               	return	
 41354  0116CE                     
 41355                           ; BSR set to: 0
 41356                           ;fat16.c: 1239: return 0x06;
 41357                           
 41358                           ; BSR set to: 0
 41359  0116CE  0E06               	movlw	6
 41360                           
 41361                           ; BSR set to: 0
 41362  0116D0  0012               	return	
 41363  0116D2                     
 41364                           ; BSR set to: 0
 41365                           ;fat16.c: 1241: return 0x28;
 41366                           
 41367                           ; BSR set to: 0
 41368  0116D2  0E28               	movlw	40
 41369                           
 41370                           ; BSR set to: 0
 41371  0116D4  0012               	return	
 41372  0116D6                     
 41373                           ; BSR set to: 0
 41374                           ;fat16.c: 1243: return 0x78;
 41375                           
 41376                           ; BSR set to: 0
 41377  0116D6  0E78               	movlw	120
 41378                           
 41379                           ; BSR set to: 0
 41380  0116D8  0012               	return	
 41381  0116DA                     
 41382                           ; BSR set to: 0
 41383                           ;fat16.c: 1245: return 0xDE;
 41384                           
 41385                           ; BSR set to: 0
 41386  0116DA  0EDE               	movlw	222
 41387                           
 41388                           ; BSR set to: 0
 41389  0116DC  0012               	return	
 41390  0116DE                     
 41391                           ; BSR set to: 0
 41392                           ;fat16.c: 1247: return 0x38;
 41393                           
 41394                           ; BSR set to: 0
 41395  0116DE  0E38               	movlw	56
 41396                           
 41397                           ; BSR set to: 0
 41398  0116E0  0012               	return	
 41399  0116E2                     
 41400                           ; BSR set to: 0
 41401                           ;fat16.c: 1249: return 0x5F;
 41402                           
 41403                           ; BSR set to: 0
 41404  0116E2  0E5F               	movlw	95
 41405                           
 41406                           ; BSR set to: 0
 41407  0116E4  0012               	return	
 41408  0116E6                     
 41409                           ; BSR set to: 0
 41410                           ;fat16.c: 1251: return 0x4B;
 41411                           
 41412                           ; BSR set to: 0
 41413  0116E6  0E4B               	movlw	75
 41414                           
 41415                           ; BSR set to: 0
 41416  0116E8  0012               	return	
 41417  0116EA                     
 41418                           ; BSR set to: 0
 41419                           ;fat16.c: 1253: return 0x00;
 41420                           
 41421                           ; BSR set to: 0
 41422  0116EA  0E00               	movlw	0
 41423                           
 41424                           ; BSR set to: 0
 41425  0116EC  0012               	return	
 41426  0116EE                     
 41427                           ; BSR set to: 0
 41428                           ;fat16.c: 1255: return 0x00;
 41429                           
 41430                           ; BSR set to: 0
 41431  0116EE  0E00               	movlw	0
 41432                           
 41433                           ; BSR set to: 0
 41434  0116F0  0012               	return	
 41435  0116F2                     
 41436                           ; BSR set to: 0
 41437                           ;fat16.c: 1257: return 0x04;
 41438                           
 41439                           ; BSR set to: 0
 41440  0116F2  0E04               	movlw	4
 41441                           
 41442                           ; BSR set to: 0
 41443  0116F4  0012               	return	
 41444  0116F6                     
 41445                           ; BSR set to: 0
 41446                           ;fat16.c: 1259: return 0x77;
 41447                           
 41448                           ; BSR set to: 0
 41449  0116F6  0E77               	movlw	119
 41450                           
 41451                           ; BSR set to: 0
 41452  0116F8  0012               	return	
 41453  0116FA                     
 41454                           ; BSR set to: 0
 41455                           ;fat16.c: 1261: return 0xDE;
 41456                           
 41457                           ; BSR set to: 0
 41458  0116FA  0EDE               	movlw	222
 41459                           
 41460                           ; BSR set to: 0
 41461  0116FC  0012               	return	
 41462  0116FE                     
 41463                           ; BSR set to: 0
 41464                           ;fat16.c: 1263: return 0x38;
 41465                           
 41466                           ; BSR set to: 0
 41467  0116FE  0E38               	movlw	56
 41468                           
 41469                           ; BSR set to: 0
 41470  011700  0012               	return	
 41471  011702                     
 41472                           ; BSR set to: 0
 41473                           ;fat16.c: 1265: return ((unsigned char)((((uint16_t)2))&0xFF));
 41474                           
 41475                           ; BSR set to: 0
 41476  011702  0E02               	movlw	2
 41477                           
 41478                           ; BSR set to: 0
 41479  011704  0012               	return	
 41480  011706                     
 41481                           ; BSR set to: 0
 41482                           ;fat16.c: 1267: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
 41483                           
 41484                           ; BSR set to: 0
 41485  011706  0E00               	movlw	0
 41486                           
 41487                           ; BSR set to: 0
 41488  011708  0012               	return	
 41489  01170A                     
 41490                           ; BSR set to: 0
 41491                           ;fat16.c: 1269: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
 41492                           
 41493                           ; BSR set to: 0
 41494  01170A  0E0C               	movlw	12
 41495                           
 41496                           ; BSR set to: 0
 41497  01170C  0012               	return	
 41498  01170E                     
 41499                           ; BSR set to: 0
 41500                           ;fat16.c: 1271: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
 41501                           
 41502                           ; BSR set to: 0
 41503  01170E  0E00               	movlw	0
 41504                           
 41505                           ; BSR set to: 0
 41506  011710  0012               	return	
 41507  011712                     
 41508                           ; BSR set to: 0
 41509                           ;fat16.c: 1273: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
 41510                           
 41511                           ; BSR set to: 0
 41512  011712  0E00               	movlw	0
 41513                           
 41514                           ; BSR set to: 0
 41515  011714  0012               	return	
 41516  011716                     
 41517                           ; BSR set to: 0
 41518                           ;fat16.c: 1275: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 41519                           
 41520                           ; BSR set to: 0
 41521  011716  0E00               	movlw	0
 41522                           
 41523                           ; BSR set to: 0
 41524  011718  0012               	return	
 41525  01171A                     
 41526                           ; BSR set to: 0
 41527                           ;fat16.c: 1277: return 0x00;
 41528                           
 41529                           ; BSR set to: 0
 41530  01171A  0E00               	movlw	0
 41531                           
 41532                           ; BSR set to: 0
 41533  01171C  0012               	return	
 41534  01171E                     l3058:
 41535  01171E                     l23357:
 41536                           
 41537                           ; BSR set to: 0
 41538  01171E  C060  F062         	movff	__get_root@idx,??__get_root
 41539  011722  C061  F063         	movff	__get_root@idx+1,??__get_root+1
 41540                           
 41541                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41542                           ; Switch size 1, requested type "space"
 41543                           ; Number of cases is 1, Range of values is 0 to 0
 41544                           ; switch strategies available:
 41545                           ; Name         Instructions Cycles
 41546                           ; simple_byte            4     3 (average)
 41547                           ;	Chosen strategy is simple_byte
 41548  011726  5163               	movf	(??__get_root+1)& (0+255),w,b
 41549  011728  0A00               	xorlw	0	; case 0
 41550  01172A  A4D8               	btfss	status,2,c
 41551  01172C  D7F6               	goto	l3079
 41552                           
 41553                           ; BSR set to: 0
 41554                           ; Switch size 1, requested type "space"
 41555                           ; Number of cases is 20, Range of values is 11 to 31
 41556                           ; switch strategies available:
 41557                           ; Name         Instructions Cycles
 41558                           ; simple_byte           61    31 (average)
 41559                           ;	Chosen strategy is simple_byte
 41560  01172E  5162               	movf	??__get_root& (0+255),w,b
 41561  011730  0A0B               	xorlw	11	; case 11
 41562  011732  B4D8               	btfsc	status,2,c
 41563  011734  D7CA               	goto	l3059
 41564  011736  0A06               	xorlw	6	; case 13
 41565  011738  B4D8               	btfsc	status,2,c
 41566  01173A  D7C9               	goto	l3060
 41567  01173C  0A03               	xorlw	3	; case 14
 41568  01173E  B4D8               	btfsc	status,2,c
 41569  011740  D7C8               	goto	l3061
 41570  011742  0A01               	xorlw	1	; case 15
 41571  011744  B4D8               	btfsc	status,2,c
 41572  011746  D7C7               	goto	l3062
 41573  011748  0A1F               	xorlw	31	; case 16
 41574  01174A  B4D8               	btfsc	status,2,c
 41575  01174C  D7C6               	goto	l3063
 41576  01174E  0A01               	xorlw	1	; case 17
 41577  011750  B4D8               	btfsc	status,2,c
 41578  011752  D7C5               	goto	l3064
 41579  011754  0A03               	xorlw	3	; case 18
 41580  011756  B4D8               	btfsc	status,2,c
 41581  011758  D7C4               	goto	l3065
 41582  01175A  0A01               	xorlw	1	; case 19
 41583  01175C  B4D8               	btfsc	status,2,c
 41584  01175E  D7C3               	goto	l3066
 41585  011760  0A07               	xorlw	7	; case 20
 41586  011762  B4D8               	btfsc	status,2,c
 41587  011764  D7C2               	goto	l3067
 41588  011766  0A01               	xorlw	1	; case 21
 41589  011768  B4D8               	btfsc	status,2,c
 41590  01176A  D7C1               	goto	l3068
 41591  01176C  0A03               	xorlw	3	; case 22
 41592  01176E  B4D8               	btfsc	status,2,c
 41593  011770  D7C0               	goto	l3069
 41594  011772  0A01               	xorlw	1	; case 23
 41595  011774  B4D8               	btfsc	status,2,c
 41596  011776  D7BF               	goto	l3070
 41597  011778  0A0F               	xorlw	15	; case 24
 41598  01177A  B4D8               	btfsc	status,2,c
 41599  01177C  D7BE               	goto	l3071
 41600  01177E  0A01               	xorlw	1	; case 25
 41601  011780  B4D8               	btfsc	status,2,c
 41602  011782  D7BD               	goto	l3072
 41603  011784  0A03               	xorlw	3	; case 26
 41604  011786  B4D8               	btfsc	status,2,c
 41605  011788  D7BC               	goto	l3073
 41606  01178A  0A01               	xorlw	1	; case 27
 41607  01178C  B4D8               	btfsc	status,2,c
 41608  01178E  D7BB               	goto	l3074
 41609  011790  0A07               	xorlw	7	; case 28
 41610  011792  B4D8               	btfsc	status,2,c
 41611  011794  D7BA               	goto	l3075
 41612  011796  0A01               	xorlw	1	; case 29
 41613  011798  B4D8               	btfsc	status,2,c
 41614  01179A  D7B9               	goto	l3076
 41615  01179C  0A03               	xorlw	3	; case 30
 41616  01179E  B4D8               	btfsc	status,2,c
 41617  0117A0  D7B8               	goto	l3077
 41618  0117A2  0A01               	xorlw	1	; case 31
 41619  0117A4  B4D8               	btfsc	status,2,c
 41620  0117A6  D7B7               	goto	l3078
 41621  0117A8  D7B8               	goto	l3079
 41622  0117AA                     l3080:
 41623                           
 41624                           ; BSR set to: 0
 41625                           ;fat16.c: 1279: };fat16.c: 1280: return 0X00;
 41626                           
 41627                           ; BSR set to: 0
 41628                           
 41629                           ; BSR set to: 0
 41630  0117AA  0E00               	movlw	0
 41631  0117AC  0012               	return	
 41632  0117AE                     __end_of__get_root:
 41633                           	opt stack 0
 41634                           tosu	equ	0xFFF
 41635                           tosh	equ	0xFFE
 41636                           tosl	equ	0xFFD
 41637                           pclath	equ	0xFFA
 41638                           tblptru	equ	0xFF8
 41639                           tblptrh	equ	0xFF7
 41640                           tblptrl	equ	0xFF6
 41641                           tablat	equ	0xFF5
 41642                           prodh	equ	0xFF4
 41643                           prodl	equ	0xFF3
 41644                           intcon	equ	0xFF2
 41645                           intcon2	equ	0xFF1
 41646                           intcon3	equ	0xFF0
 41647                           postinc0	equ	0xFEE
 41648                           wreg	equ	0xFE8
 41649                           indf1	equ	0xFE7
 41650                           postinc1	equ	0xFE6
 41651                           postdec1	equ	0xFE5
 41652                           plusw1	equ	0xFE3
 41653                           fsr1h	equ	0xFE2
 41654                           fsr1l	equ	0xFE1
 41655                           indf2	equ	0xFDF
 41656                           postinc2	equ	0xFDE
 41657                           postdec2	equ	0xFDD
 41658                           plusw2	equ	0xFDB
 41659                           fsr2h	equ	0xFDA
 41660                           fsr2l	equ	0xFD9
 41661                           status	equ	0xFD8
 41662                           
 41663 ;; *************** function __get_mbr *****************
 41664 ;; Defined at:
 41665 ;;		line 1037 in file "fat16.c"
 41666 ;; Parameters:    Size  Location     Type
 41667 ;;  idx             2    0[BANK0 ] unsigned int 
 41668 ;; Auto vars:     Size  Location     Type
 41669 ;;		None
 41670 ;; Return value:  Size  Location     Type
 41671 ;;                  1    wreg      unsigned char 
 41672 ;; Registers used:
 41673 ;;		wreg, status,2, status,0
 41674 ;; Tracked objects:
 41675 ;;		On entry : 0/0
 41676 ;;		On exit  : 0/0
 41677 ;;		Unchanged: 0/0
 41678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41679 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41681 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41682 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41683 ;;Total ram usage:        4 bytes
 41684 ;; Hardware stack levels used:    1
 41685 ;; Hardware stack levels required when called:   10
 41686 ;; This function calls:
 41687 ;;		Nothing
 41688 ;; This function is called by:
 41689 ;;		_fat_format
 41690 ;;		_fat_get_format_status
 41691 ;; This function uses a non-reentrant model
 41692 ;;
 41693                           
 41694                           	psect	text188
 41695  014C2C                     __ptext188:
 41696                           	opt stack 0
 41697  014C2C                     __get_mbr:
 41698                           	opt stack 15
 41699                           
 41700                           ;fat16.c: 1039: switch (idx)
 41701                           
 41702                           ; BSR set to: 0
 41703                           ;incstack = 0
 41704  014C2C  D026               	goto	l2961
 41705  014C2E                     
 41706                           ;fat16.c: 1042: return 0x80;
 41707  014C2E  0E80               	movlw	128
 41708  014C30  0012               	return	
 41709  014C32                     
 41710                           ;fat16.c: 1044: return 0;
 41711  014C32  0E00               	movlw	0
 41712  014C34  0012               	return	
 41713  014C36                     
 41714                           ;fat16.c: 1046: return 2;
 41715  014C36  0E02               	movlw	2
 41716  014C38  0012               	return	
 41717  014C3A                     
 41718                           ;fat16.c: 1048: return 0;
 41719  014C3A  0E00               	movlw	0
 41720  014C3C  0012               	return	
 41721  014C3E                     
 41722                           ;fat16.c: 1050: return 0x04;
 41723  014C3E  0E04               	movlw	4
 41724  014C40  0012               	return	
 41725  014C42                     
 41726                           ;fat16.c: 1052: return 2;
 41727  014C42  0E02               	movlw	2
 41728  014C44  0012               	return	
 41729  014C46                     
 41730                           ;fat16.c: 1054: return 3;
 41731  014C46  0E03               	movlw	3
 41732  014C48  0012               	return	
 41733  014C4A                     
 41734                           ;fat16.c: 1056: return 8;
 41735  014C4A  0E08               	movlw	8
 41736  014C4C  0012               	return	
 41737  014C4E                     
 41738                           ;fat16.c: 1058: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
 41739  014C4E  0E01               	movlw	1
 41740  014C50  0012               	return	
 41741  014C52                     
 41742                           ;fat16.c: 1060: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
 41743  014C52  0E00               	movlw	0
 41744  014C54  0012               	return	
 41745  014C56                     
 41746                           ;fat16.c: 1062: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
 41747  014C56  0E00               	movlw	0
 41748  014C58  0012               	return	
 41749  014C5A                     
 41750                           ;fat16.c: 1064: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 41751  014C5A  0E00               	movlw	0
 41752  014C5C  0012               	return	
 41753  014C5E                     
 41754                           ;fat16.c: 1066: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
 41755  014C5E  0EFF               	movlw	255
 41756  014C60  0012               	return	
 41757  014C62                     
 41758                           ;fat16.c: 1068: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
 41759  014C62  0E1F               	movlw	31
 41760  014C64  0012               	return	
 41761  014C66                     
 41762                           ;fat16.c: 1070: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
 41763  014C66  0E00               	movlw	0
 41764  014C68  0012               	return	
 41765  014C6A                     
 41766                           ;fat16.c: 1072: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
 41767  014C6A  0E00               	movlw	0
 41768  014C6C  0012               	return	
 41769  014C6E                     
 41770                           ;fat16.c: 1074: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
 41771  014C6E  0E55               	movlw	85
 41772  014C70  0012               	return	
 41773  014C72                     
 41774                           ;fat16.c: 1076: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
 41775  014C72  0EAA               	movlw	170
 41776  014C74  0012               	return	
 41777  014C76                     
 41778                           ;fat16.c: 1078: return 0X00;
 41779  014C76  0E00               	movlw	0
 41780                           
 41781                           ;fat16.c: 1079: }
 41782  014C78  0012               	return	
 41783  014C7A                     l2961:
 41784  014C7A  C060  F062         	movff	__get_mbr@idx,??__get_mbr
 41785  014C7E  C061  F063         	movff	__get_mbr@idx+1,??__get_mbr+1
 41786                           
 41787                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41788                           ; Switch size 1, requested type "space"
 41789                           ; Number of cases is 1, Range of values is 1 to 1
 41790                           ; switch strategies available:
 41791                           ; Name         Instructions Cycles
 41792                           ; simple_byte            4     3 (average)
 41793                           ;	Chosen strategy is simple_byte
 41794  014C82  0100               	movlb	0	; () banked
 41795  014C84  5163               	movf	(??__get_mbr+1)& (0+255),w,b
 41796  014C86  0A01               	xorlw	1	; case 1
 41797  014C88  A4D8               	btfss	status,2,c
 41798  014C8A  D7F5               	goto	l2981
 41799                           
 41800                           ; BSR set to: 0
 41801                           ; Switch size 1, requested type "space"
 41802                           ; Number of cases is 18, Range of values is 190 to 255
 41803                           ; switch strategies available:
 41804                           ; Name         Instructions Cycles
 41805                           ; simple_byte           55    28 (average)
 41806                           ;	Chosen strategy is simple_byte
 41807  014C8C  5162               	movf	??__get_mbr& (0+255),w,b
 41808  014C8E  0ABE               	xorlw	190	; case 190
 41809  014C90  B4D8               	btfsc	status,2,c
 41810  014C92  D7CD               	goto	l2962
 41811  014C94  0A01               	xorlw	1	; case 191
 41812  014C96  B4D8               	btfsc	status,2,c
 41813  014C98  D7CC               	goto	l2964
 41814  014C9A  0A7F               	xorlw	127	; case 192
 41815  014C9C  B4D8               	btfsc	status,2,c
 41816  014C9E  D7CB               	goto	l2965
 41817  014CA0  0A01               	xorlw	1	; case 193
 41818  014CA2  B4D8               	btfsc	status,2,c
 41819  014CA4  D7CA               	goto	l2966
 41820  014CA6  0A03               	xorlw	3	; case 194
 41821  014CA8  B4D8               	btfsc	status,2,c
 41822  014CAA  D7C9               	goto	l2967
 41823  014CAC  0A01               	xorlw	1	; case 195
 41824  014CAE  B4D8               	btfsc	status,2,c
 41825  014CB0  D7C8               	goto	l2968
 41826  014CB2  0A07               	xorlw	7	; case 196
 41827  014CB4  B4D8               	btfsc	status,2,c
 41828  014CB6  D7C7               	goto	l2969
 41829  014CB8  0A01               	xorlw	1	; case 197
 41830  014CBA  B4D8               	btfsc	status,2,c
 41831  014CBC  D7C6               	goto	l2970
 41832  014CBE  0A03               	xorlw	3	; case 198
 41833  014CC0  B4D8               	btfsc	status,2,c
 41834  014CC2  D7C5               	goto	l2971
 41835  014CC4  0A01               	xorlw	1	; case 199
 41836  014CC6  B4D8               	btfsc	status,2,c
 41837  014CC8  D7C4               	goto	l2972
 41838  014CCA  0A0F               	xorlw	15	; case 200
 41839  014CCC  B4D8               	btfsc	status,2,c
 41840  014CCE  D7C3               	goto	l2973
 41841  014CD0  0A01               	xorlw	1	; case 201
 41842  014CD2  B4D8               	btfsc	status,2,c
 41843  014CD4  D7C2               	goto	l2974
 41844  014CD6  0A03               	xorlw	3	; case 202
 41845  014CD8  B4D8               	btfsc	status,2,c
 41846  014CDA  D7C1               	goto	l2975
 41847  014CDC  0A01               	xorlw	1	; case 203
 41848  014CDE  B4D8               	btfsc	status,2,c
 41849  014CE0  D7C0               	goto	l2976
 41850  014CE2  0A07               	xorlw	7	; case 204
 41851  014CE4  B4D8               	btfsc	status,2,c
 41852  014CE6  D7BF               	goto	l2977
 41853  014CE8  0A01               	xorlw	1	; case 205
 41854  014CEA  B4D8               	btfsc	status,2,c
 41855  014CEC  D7BE               	goto	l2978
 41856  014CEE  0A33               	xorlw	51	; case 254
 41857  014CF0  B4D8               	btfsc	status,2,c
 41858  014CF2  D7BD               	goto	l2979
 41859  014CF4  0A01               	xorlw	1	; case 255
 41860  014CF6  B4D8               	btfsc	status,2,c
 41861  014CF8  D7BC               	goto	l2980
 41862  014CFA  D7BD               	goto	l2981
 41863  014CFC                     __end_of__get_mbr:
 41864                           	opt stack 0
 41865                           tosu	equ	0xFFF
 41866                           tosh	equ	0xFFE
 41867                           tosl	equ	0xFFD
 41868                           pclath	equ	0xFFA
 41869                           tblptru	equ	0xFF8
 41870                           tblptrh	equ	0xFF7
 41871                           tblptrl	equ	0xFF6
 41872                           tablat	equ	0xFF5
 41873                           prodh	equ	0xFF4
 41874                           prodl	equ	0xFF3
 41875                           intcon	equ	0xFF2
 41876                           intcon2	equ	0xFF1
 41877                           intcon3	equ	0xFF0
 41878                           postinc0	equ	0xFEE
 41879                           wreg	equ	0xFE8
 41880                           indf1	equ	0xFE7
 41881                           postinc1	equ	0xFE6
 41882                           postdec1	equ	0xFE5
 41883                           plusw1	equ	0xFE3
 41884                           fsr1h	equ	0xFE2
 41885                           fsr1l	equ	0xFE1
 41886                           indf2	equ	0xFDF
 41887                           postinc2	equ	0xFDE
 41888                           postdec2	equ	0xFDD
 41889                           plusw2	equ	0xFDB
 41890                           fsr2h	equ	0xFDA
 41891                           fsr2l	equ	0xFD9
 41892                           status	equ	0xFD8
 41893                           
 41894 ;; *************** function __get_fbr *****************
 41895 ;; Defined at:
 41896 ;;		line 1082 in file "fat16.c"
 41897 ;; Parameters:    Size  Location     Type
 41898 ;;  idx             2    0[BANK0 ] unsigned int 
 41899 ;; Auto vars:     Size  Location     Type
 41900 ;;		None
 41901 ;; Return value:  Size  Location     Type
 41902 ;;                  1    wreg      unsigned char 
 41903 ;; Registers used:
 41904 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 41905 ;; Tracked objects:
 41906 ;;		On entry : 0/0
 41907 ;;		On exit  : 0/0
 41908 ;;		Unchanged: 0/0
 41909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41910 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41912 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41913 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41914 ;;Total ram usage:        4 bytes
 41915 ;; Hardware stack levels used:    1
 41916 ;; Hardware stack levels required when called:   10
 41917 ;; This function calls:
 41918 ;;		Nothing
 41919 ;; This function is called by:
 41920 ;;		_fat_format
 41921 ;;		_fat_get_format_status
 41922 ;; This function uses a non-reentrant model
 41923 ;;
 41924                           
 41925                           	psect	text189
 41926  00F93A                     __ptext189:
 41927                           	opt stack 0
 41928  00F93A                     __get_fbr:
 41929                           	opt stack 15
 41930                           
 41931                           ;fat16.c: 1084: switch (idx)
 41932                           
 41933                           ;incstack = 0
 41934  00F93A  D098               	goto	l2985
 41935  00F93C                     
 41936                           ;fat16.c: 1087: return 0xEB;
 41937  00F93C  0EEB               	movlw	235
 41938  00F93E  0012               	return	
 41939  00F940                     
 41940                           ;fat16.c: 1089: return 0x3C;
 41941  00F940  0E3C               	movlw	60
 41942  00F942  0012               	return	
 41943  00F944                     
 41944                           ;fat16.c: 1091: return 0x90;
 41945  00F944  0E90               	movlw	144
 41946  00F946  0012               	return	
 41947  00F948                     
 41948                           ;fat16.c: 1093: return "MSDOS5.0"[0];
 41949  00F948  0E84               	movlw	low STR_1
 41950  00F94A  6EF6               	movwf	tblptrl,c
 41951  00F94C                     	if	1	;There is more than 1 active tblptr byte
 41952  00F94C  0EC4               	movlw	high STR_1
 41953  00F94E  6EF7               	movwf	tblptrh,c
 41954  00F950                     	endif
 41955  00F950                     	if	1	;There are 3 active tblptr bytes
 41956  00F950  0E00               	movlw	low (STR_1 shr (0+16))
 41957  00F952  6EF8               	movwf	tblptru,c
 41958  00F954                     	endif
 41959  00F954  0008               	tblrd		*
 41960  00F956  50F5               	movf	tablat,w,c
 41961  00F958  0012               	return	
 41962  00F95A                     
 41963                           ;fat16.c: 1095: return "MSDOS5.0"[1];
 41964  00F95A  0E85               	movlw	low (STR_1+1)
 41965  00F95C  6EF6               	movwf	tblptrl,c
 41966  00F95E  0EC4               	movlw	high (STR_1+1)
 41967  00F960  6EF7               	movwf	tblptrh,c
 41968  00F962                     	if	0	;tblptru may be non-zero
 41969  00F962                     	endif
 41970  00F962                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41971  00F962  0E00               	movlw	low (__mediumconst shr (0+16))
 41972  00F964  6EF8               	movwf	tblptru,c
 41973  00F966                     	endif
 41974  00F966  0008               	tblrd		*
 41975  00F968  50F5               	movf	tablat,w,c
 41976  00F96A  0012               	return	
 41977  00F96C                     
 41978                           ;fat16.c: 1097: return "MSDOS5.0"[2];
 41979  00F96C  0E86               	movlw	low (STR_1+2)
 41980  00F96E  6EF6               	movwf	tblptrl,c
 41981  00F970  0EC4               	movlw	high (STR_1+2)
 41982  00F972  6EF7               	movwf	tblptrh,c
 41983  00F974                     	if	0	;tblptru may be non-zero
 41984  00F974                     	endif
 41985  00F974                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 41986  00F974  0E00               	movlw	low (__mediumconst shr (0+16))
 41987  00F976  6EF8               	movwf	tblptru,c
 41988  00F978                     	endif
 41989  00F978  0008               	tblrd		*
 41990  00F97A  50F5               	movf	tablat,w,c
 41991  00F97C  0012               	return	
 41992  00F97E                     
 41993                           ;fat16.c: 1099: return "MSDOS5.0"[3];
 41994  00F97E  0E87               	movlw	low (STR_1+3)
 41995  00F980  6EF6               	movwf	tblptrl,c
 41996  00F982  0EC4               	movlw	high (STR_1+3)
 41997  00F984  6EF7               	movwf	tblptrh,c
 41998  00F986                     	if	0	;tblptru may be non-zero
 41999  00F986                     	endif
 42000  00F986                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 42001  00F986  0E00               	movlw	low (__mediumconst shr (0+16))
 42002  00F988  6EF8               	movwf	tblptru,c
 42003  00F98A                     	endif
 42004  00F98A  0008               	tblrd		*
 42005  00F98C  50F5               	movf	tablat,w,c
 42006  00F98E  0012               	return	
 42007  00F990                     
 42008                           ;fat16.c: 1101: return "MSDOS5.0"[4];
 42009  00F990  0E88               	movlw	low (STR_1+4)
 42010  00F992  6EF6               	movwf	tblptrl,c
 42011  00F994  0EC4               	movlw	high (STR_1+4)
 42012  00F996  6EF7               	movwf	tblptrh,c
 42013  00F998                     	if	0	;tblptru may be non-zero
 42014  00F998                     	endif
 42015  00F998                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 42016  00F998  0E00               	movlw	low (__mediumconst shr (0+16))
 42017  00F99A  6EF8               	movwf	tblptru,c
 42018  00F99C                     	endif
 42019  00F99C  0008               	tblrd		*
 42020  00F99E  50F5               	movf	tablat,w,c
 42021  00F9A0  0012               	return	
 42022  00F9A2                     
 42023                           ;fat16.c: 1103: return "MSDOS5.0"[5];
 42024  00F9A2  0E89               	movlw	low (STR_1+5)
 42025  00F9A4  6EF6               	movwf	tblptrl,c
 42026  00F9A6  0EC4               	movlw	high (STR_1+5)
 42027  00F9A8  6EF7               	movwf	tblptrh,c
 42028  00F9AA                     	if	0	;tblptru may be non-zero
 42029  00F9AA                     	endif
 42030  00F9AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 42031  00F9AA  0E00               	movlw	low (__mediumconst shr (0+16))
 42032  00F9AC  6EF8               	movwf	tblptru,c
 42033  00F9AE                     	endif
 42034  00F9AE  0008               	tblrd		*
 42035  00F9B0  50F5               	movf	tablat,w,c
 42036  00F9B2  0012               	return	
 42037  00F9B4                     
 42038                           ;fat16.c: 1105: return "MSDOS5.0"[6];
 42039  00F9B4  0E8A               	movlw	low (STR_1+6)
 42040  00F9B6  6EF6               	movwf	tblptrl,c
 42041  00F9B8  0EC4               	movlw	high (STR_1+6)
 42042  00F9BA  6EF7               	movwf	tblptrh,c
 42043  00F9BC                     	if	0	;tblptru may be non-zero
 42044  00F9BC                     	endif
 42045  00F9BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 42046  00F9BC  0E00               	movlw	low (__mediumconst shr (0+16))
 42047  00F9BE  6EF8               	movwf	tblptru,c
 42048  00F9C0                     	endif
 42049  00F9C0  0008               	tblrd		*
 42050  00F9C2  50F5               	movf	tablat,w,c
 42051  00F9C4  0012               	return	
 42052  00F9C6                     
 42053                           ;fat16.c: 1107: return "MSDOS5.0"[7];
 42054  00F9C6  0E8B               	movlw	low (STR_1+7)
 42055  00F9C8  6EF6               	movwf	tblptrl,c
 42056  00F9CA  0EC4               	movlw	high (STR_1+7)
 42057  00F9CC  6EF7               	movwf	tblptrh,c
 42058  00F9CE                     	if	0	;tblptru may be non-zero
 42059  00F9CE                     	endif
 42060  00F9CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 42061  00F9CE  0E00               	movlw	low (__mediumconst shr (0+16))
 42062  00F9D0  6EF8               	movwf	tblptru,c
 42063  00F9D2                     	endif
 42064  00F9D2  0008               	tblrd		*
 42065  00F9D4  50F5               	movf	tablat,w,c
 42066  00F9D6  0012               	return	
 42067  00F9D8                     
 42068                           ;fat16.c: 1109: return ((unsigned char)((((uint16_t)512))&0xFF));
 42069  00F9D8  0E00               	movlw	0
 42070  00F9DA  0012               	return	
 42071  00F9DC                     
 42072                           ;fat16.c: 1111: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
 42073  00F9DC  0E02               	movlw	2
 42074  00F9DE  0012               	return	
 42075  00F9E0                     
 42076                           ;fat16.c: 1113: return 1;
 42077  00F9E0  0E01               	movlw	1
 42078  00F9E2  0012               	return	
 42079  00F9E4                     
 42080                           ;fat16.c: 1115: return ((unsigned char)((((uint16_t)1))&0xFF));
 42081  00F9E4  0E01               	movlw	1
 42082  00F9E6  0012               	return	
 42083  00F9E8                     
 42084                           ;fat16.c: 1117: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
 42085  00F9E8  0E00               	movlw	0
 42086  00F9EA  0012               	return	
 42087  00F9EC                     
 42088                           ;fat16.c: 1119: return 1;
 42089  00F9EC  0E01               	movlw	1
 42090  00F9EE  0012               	return	
 42091  00F9F0                     
 42092                           ;fat16.c: 1121: return ((unsigned char)((((uint16_t)64))&0xFF));
 42093  00F9F0  0E40               	movlw	64
 42094  00F9F2  0012               	return	
 42095  00F9F4                     
 42096                           ;fat16.c: 1123: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
 42097  00F9F4  0E00               	movlw	0
 42098  00F9F6  0012               	return	
 42099  00F9F8                     
 42100                           ;fat16.c: 1125: return ((unsigned char)((((uint16_t)8191))&0xFF));
 42101  00F9F8  0EFF               	movlw	255
 42102  00F9FA  0012               	return	
 42103  00F9FC                     
 42104                           ;fat16.c: 1127: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
 42105  00F9FC  0E1F               	movlw	31
 42106  00F9FE  0012               	return	
 42107  00FA00                     
 42108                           ;fat16.c: 1129: return 0XF8;
 42109  00FA00  0EF8               	movlw	248
 42110  00FA02  0012               	return	
 42111  00FA04                     
 42112                           ;fat16.c: 1131: return ((unsigned char)((((uint16_t)32))&0xFF));
 42113  00FA04  0E20               	movlw	32
 42114  00FA06  0012               	return	
 42115  00FA08                     
 42116                           ;fat16.c: 1133: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
 42117  00FA08  0E00               	movlw	0
 42118  00FA0A  0012               	return	
 42119  00FA0C                     
 42120                           ;fat16.c: 1135: return ((unsigned char)((((uint16_t)63))&0xFF));
 42121  00FA0C  0E3F               	movlw	63
 42122  00FA0E  0012               	return	
 42123  00FA10                     
 42124                           ;fat16.c: 1137: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
 42125  00FA10  0E00               	movlw	0
 42126  00FA12  0012               	return	
 42127  00FA14                     
 42128                           ;fat16.c: 1139: return ((unsigned char)((((uint16_t)16))&0xFF));
 42129  00FA14  0E10               	movlw	16
 42130  00FA16  0012               	return	
 42131  00FA18                     
 42132                           ;fat16.c: 1141: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
 42133  00FA18  0E00               	movlw	0
 42134  00FA1A  0012               	return	
 42135  00FA1C                     
 42136                           ;fat16.c: 1143: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
 42137  00FA1C  0E00               	movlw	0
 42138  00FA1E  0012               	return	
 42139  00FA20                     
 42140                           ;fat16.c: 1145: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
 42141  00FA20  0E00               	movlw	0
 42142  00FA22  0012               	return	
 42143  00FA24                     
 42144                           ;fat16.c: 1147: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
 42145  00FA24  0E00               	movlw	0
 42146  00FA26  0012               	return	
 42147  00FA28                     
 42148                           ;fat16.c: 1149: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 42149  00FA28  0E00               	movlw	0
 42150  00FA2A  0012               	return	
 42151  00FA2C                     
 42152                           ;fat16.c: 1151: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
 42153  00FA2C  0E01               	movlw	1
 42154  00FA2E  0012               	return	
 42155  00FA30                     
 42156                           ;fat16.c: 1153: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
 42157  00FA30  0E00               	movlw	0
 42158  00FA32  0012               	return	
 42159  00FA34                     
 42160                           ;fat16.c: 1155: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
 42161  00FA34  0E22               	movlw	34
 42162  00FA36  0012               	return	
 42163  00FA38                     
 42164                           ;fat16.c: 1157: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
 42165  00FA38  0E00               	movlw	0
 42166  00FA3A  0012               	return	
 42167  00FA3C                     
 42168                           ;fat16.c: 1161: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 42169                           
 42170                           ;fat16.c: 1160: case 0x2F:
 42171  00FA3C  0E00               	movlw	0
 42172  00FA3E  0012               	return	
 42173  00FA40                     
 42174                           ;fat16.c: 1163: return 'F';
 42175  00FA40  0E46               	movlw	70
 42176  00FA42  0012               	return	
 42177  00FA44                     
 42178                           ;fat16.c: 1165: return 'A';
 42179  00FA44  0E41               	movlw	65
 42180  00FA46  0012               	return	
 42181  00FA48                     
 42182                           ;fat16.c: 1167: return 'T';
 42183  00FA48  0E54               	movlw	84
 42184  00FA4A  0012               	return	
 42185  00FA4C                     
 42186                           ;fat16.c: 1169: return '1';
 42187  00FA4C  0E31               	movlw	49
 42188  00FA4E  0012               	return	
 42189  00FA50                     
 42190                           ;fat16.c: 1171: return '6';
 42191  00FA50  0E36               	movlw	54
 42192  00FA52  0012               	return	
 42193  00FA54                     
 42194                           ;fat16.c: 1173: return ' ';
 42195  00FA54  0E20               	movlw	32
 42196  00FA56  0012               	return	
 42197  00FA58                     
 42198                           ;fat16.c: 1175: return ' ';
 42199  00FA58  0E20               	movlw	32
 42200  00FA5A  0012               	return	
 42201  00FA5C                     
 42202                           ;fat16.c: 1177: return ' ';
 42203  00FA5C  0E20               	movlw	32
 42204  00FA5E  0012               	return	
 42205  00FA60                     
 42206                           ;fat16.c: 1179: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
 42207  00FA60  0E55               	movlw	85
 42208  00FA62  0012               	return	
 42209  00FA64                     
 42210                           ;fat16.c: 1181: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
 42211  00FA64  0EAA               	movlw	170
 42212  00FA66  0012               	return	
 42213  00FA68                     
 42214                           ;fat16.c: 1183: return 0X00;
 42215  00FA68  0E00               	movlw	0
 42216                           
 42217                           ;fat16.c: 1184: }
 42218  00FA6A  0012               	return	
 42219  00FA6C                     l2985:
 42220  00FA6C  C060  F062         	movff	__get_fbr@idx,??__get_fbr
 42221  00FA70  C061  F063         	movff	__get_fbr@idx+1,??__get_fbr+1
 42222                           
 42223                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 42224                           ; Switch size 1, requested type "space"
 42225                           ; Number of cases is 2, Range of values is 0 to 1
 42226                           ; switch strategies available:
 42227                           ; Name         Instructions Cycles
 42228                           ; simple_byte            7     4 (average)
 42229                           ;	Chosen strategy is simple_byte
 42230  00FA74  0100               	movlb	0	; () banked
 42231  00FA76  5163               	movf	(??__get_fbr+1)& (0+255),w,b
 42232  00FA78  0A00               	xorlw	0	; case 0
 42233  00FA7A  B4D8               	btfsc	status,2,c
 42234  00FA7C  D004               	goto	l28831
 42235  00FA7E  0A01               	xorlw	1	; case 1
 42236  00FA80  B4D8               	btfsc	status,2,c
 42237  00FA82  D08D               	goto	l28833
 42238  00FA84  D7F1               	goto	l3035
 42239  00FA86                     l28831:
 42240                           
 42241                           ; BSR set to: 0
 42242                           ; Switch size 1, requested type "space"
 42243                           ; Number of cases is 46, Range of values is 0 to 61
 42244                           ; switch strategies available:
 42245                           ; Name         Instructions Cycles
 42246                           ; simple_byte          139    70 (average)
 42247                           ;	Chosen strategy is simple_byte
 42248  00FA86  5162               	movf	??__get_fbr& (0+255),w,b
 42249  00FA88  0A00               	xorlw	0	; case 0
 42250  00FA8A  B4D8               	btfsc	status,2,c
 42251  00FA8C  D757               	goto	l2986
 42252  00FA8E  0A01               	xorlw	1	; case 1
 42253  00FA90  B4D8               	btfsc	status,2,c
 42254  00FA92  D756               	goto	l2988
 42255  00FA94  0A03               	xorlw	3	; case 2
 42256  00FA96  B4D8               	btfsc	status,2,c
 42257  00FA98  D755               	goto	l2989
 42258  00FA9A  0A01               	xorlw	1	; case 3
 42259  00FA9C  B4D8               	btfsc	status,2,c
 42260  00FA9E  D754               	goto	l2990
 42261  00FAA0  0A07               	xorlw	7	; case 4
 42262  00FAA2  B4D8               	btfsc	status,2,c
 42263  00FAA4  D75A               	goto	l2991
 42264  00FAA6  0A01               	xorlw	1	; case 5
 42265  00FAA8  B4D8               	btfsc	status,2,c
 42266  00FAAA  D760               	goto	l2992
 42267  00FAAC  0A03               	xorlw	3	; case 6
 42268  00FAAE  B4D8               	btfsc	status,2,c
 42269  00FAB0  D766               	goto	l2993
 42270  00FAB2  0A01               	xorlw	1	; case 7
 42271  00FAB4  B4D8               	btfsc	status,2,c
 42272  00FAB6  D76C               	goto	l2994
 42273  00FAB8  0A0F               	xorlw	15	; case 8
 42274  00FABA  B4D8               	btfsc	status,2,c
 42275  00FABC  D772               	goto	l2995
 42276  00FABE  0A01               	xorlw	1	; case 9
 42277  00FAC0  B4D8               	btfsc	status,2,c
 42278  00FAC2  D778               	goto	l2996
 42279  00FAC4  0A03               	xorlw	3	; case 10
 42280  00FAC6  B4D8               	btfsc	status,2,c
 42281  00FAC8  D77E               	goto	l2997
 42282  00FACA  0A01               	xorlw	1	; case 11
 42283  00FACC  B4D8               	btfsc	status,2,c
 42284  00FACE  D784               	goto	l2998
 42285  00FAD0  0A07               	xorlw	7	; case 12
 42286  00FAD2  B4D8               	btfsc	status,2,c
 42287  00FAD4  D783               	goto	l2999
 42288  00FAD6  0A01               	xorlw	1	; case 13
 42289  00FAD8  B4D8               	btfsc	status,2,c
 42290  00FADA  D782               	goto	l3000
 42291  00FADC  0A03               	xorlw	3	; case 14
 42292  00FADE  B4D8               	btfsc	status,2,c
 42293  00FAE0  D781               	goto	l3001
 42294  00FAE2  0A01               	xorlw	1	; case 15
 42295  00FAE4  B4D8               	btfsc	status,2,c
 42296  00FAE6  D780               	goto	l3002
 42297  00FAE8  0A1F               	xorlw	31	; case 16
 42298  00FAEA  B4D8               	btfsc	status,2,c
 42299  00FAEC  D77F               	goto	l3003
 42300  00FAEE  0A01               	xorlw	1	; case 17
 42301  00FAF0  B4D8               	btfsc	status,2,c
 42302  00FAF2  D77E               	goto	l3004
 42303  00FAF4  0A03               	xorlw	3	; case 18
 42304  00FAF6  B4D8               	btfsc	status,2,c
 42305  00FAF8  D77D               	goto	l3005
 42306  00FAFA  0A01               	xorlw	1	; case 19
 42307  00FAFC  B4D8               	btfsc	status,2,c
 42308  00FAFE  D77C               	goto	l3006
 42309  00FB00  0A07               	xorlw	7	; case 20
 42310  00FB02  B4D8               	btfsc	status,2,c
 42311  00FB04  D77B               	goto	l3007
 42312  00FB06  0A01               	xorlw	1	; case 21
 42313  00FB08  B4D8               	btfsc	status,2,c
 42314  00FB0A  D77A               	goto	l3008
 42315  00FB0C  0A03               	xorlw	3	; case 22
 42316  00FB0E  B4D8               	btfsc	status,2,c
 42317  00FB10  D779               	goto	l3009
 42318  00FB12  0A01               	xorlw	1	; case 23
 42319  00FB14  B4D8               	btfsc	status,2,c
 42320  00FB16  D778               	goto	l3010
 42321  00FB18  0A0F               	xorlw	15	; case 24
 42322  00FB1A  B4D8               	btfsc	status,2,c
 42323  00FB1C  D777               	goto	l3011
 42324  00FB1E  0A01               	xorlw	1	; case 25
 42325  00FB20  B4D8               	btfsc	status,2,c
 42326  00FB22  D776               	goto	l3012
 42327  00FB24  0A03               	xorlw	3	; case 26
 42328  00FB26  B4D8               	btfsc	status,2,c
 42329  00FB28  D775               	goto	l3013
 42330  00FB2A  0A01               	xorlw	1	; case 27
 42331  00FB2C  B4D8               	btfsc	status,2,c
 42332  00FB2E  D774               	goto	l3014
 42333  00FB30  0A07               	xorlw	7	; case 28
 42334  00FB32  B4D8               	btfsc	status,2,c
 42335  00FB34  D773               	goto	l3015
 42336  00FB36  0A01               	xorlw	1	; case 29
 42337  00FB38  B4D8               	btfsc	status,2,c
 42338  00FB3A  D772               	goto	l3016
 42339  00FB3C  0A03               	xorlw	3	; case 30
 42340  00FB3E  B4D8               	btfsc	status,2,c
 42341  00FB40  D771               	goto	l3017
 42342  00FB42  0A01               	xorlw	1	; case 31
 42343  00FB44  B4D8               	btfsc	status,2,c
 42344  00FB46  D770               	goto	l3018
 42345  00FB48  0A37               	xorlw	55	; case 40
 42346  00FB4A  B4D8               	btfsc	status,2,c
 42347  00FB4C  D76F               	goto	l3019
 42348  00FB4E  0A01               	xorlw	1	; case 41
 42349  00FB50  B4D8               	btfsc	status,2,c
 42350  00FB52  D76E               	goto	l3020
 42351  00FB54  0A05               	xorlw	5	; case 44
 42352  00FB56  B4D8               	btfsc	status,2,c
 42353  00FB58  D76D               	goto	l3021
 42354  00FB5A  0A01               	xorlw	1	; case 45
 42355  00FB5C  B4D8               	btfsc	status,2,c
 42356  00FB5E  D76C               	goto	l3022
 42357  00FB60  0A03               	xorlw	3	; case 46
 42358  00FB62  B4D8               	btfsc	status,2,c
 42359  00FB64  D76B               	goto	l3023
 42360  00FB66  0A01               	xorlw	1	; case 47
 42361  00FB68  B4D8               	btfsc	status,2,c
 42362  00FB6A  D768               	goto	l3023
 42363  00FB6C  0A19               	xorlw	25	; case 54
 42364  00FB6E  B4D8               	btfsc	status,2,c
 42365  00FB70  D767               	goto	l3025
 42366  00FB72  0A01               	xorlw	1	; case 55
 42367  00FB74  B4D8               	btfsc	status,2,c
 42368  00FB76  D766               	goto	l3026
 42369  00FB78  0A0F               	xorlw	15	; case 56
 42370  00FB7A  B4D8               	btfsc	status,2,c
 42371  00FB7C  D765               	goto	l3027
 42372  00FB7E  0A01               	xorlw	1	; case 57
 42373  00FB80  B4D8               	btfsc	status,2,c
 42374  00FB82  D764               	goto	l3028
 42375  00FB84  0A03               	xorlw	3	; case 58
 42376  00FB86  B4D8               	btfsc	status,2,c
 42377  00FB88  D763               	goto	l3029
 42378  00FB8A  0A01               	xorlw	1	; case 59
 42379  00FB8C  B4D8               	btfsc	status,2,c
 42380  00FB8E  D762               	goto	l3030
 42381  00FB90  0A07               	xorlw	7	; case 60
 42382  00FB92  B4D8               	btfsc	status,2,c
 42383  00FB94  D761               	goto	l3031
 42384  00FB96  0A01               	xorlw	1	; case 61
 42385  00FB98  B4D8               	btfsc	status,2,c
 42386  00FB9A  D760               	goto	l3032
 42387  00FB9C  D765               	goto	l3035
 42388  00FB9E                     l28833:
 42389                           
 42390                           ; BSR set to: 0
 42391                           ; Switch size 1, requested type "space"
 42392                           ; Number of cases is 2, Range of values is 254 to 255
 42393                           ; switch strategies available:
 42394                           ; Name         Instructions Cycles
 42395                           ; simple_byte            7     4 (average)
 42396                           ;	Chosen strategy is simple_byte
 42397  00FB9E  5162               	movf	??__get_fbr& (0+255),w,b
 42398  00FBA0  0AFE               	xorlw	254	; case 254
 42399  00FBA2  B4D8               	btfsc	status,2,c
 42400  00FBA4  D75D               	goto	l3033
 42401  00FBA6  0A01               	xorlw	1	; case 255
 42402  00FBA8  B4D8               	btfsc	status,2,c
 42403  00FBAA  D75C               	goto	l3034
 42404  00FBAC  D75D               	goto	l3035
 42405  00FBAE                     __end_of__get_fbr:
 42406                           	opt stack 0
 42407                           tosu	equ	0xFFF
 42408                           tosh	equ	0xFFE
 42409                           tosl	equ	0xFFD
 42410                           pclath	equ	0xFFA
 42411                           tblptru	equ	0xFF8
 42412                           tblptrh	equ	0xFF7
 42413                           tblptrl	equ	0xFF6
 42414                           tablat	equ	0xFF5
 42415                           prodh	equ	0xFF4
 42416                           prodl	equ	0xFF3
 42417                           intcon	equ	0xFF2
 42418                           intcon2	equ	0xFF1
 42419                           intcon3	equ	0xFF0
 42420                           postinc0	equ	0xFEE
 42421                           wreg	equ	0xFE8
 42422                           indf1	equ	0xFE7
 42423                           postinc1	equ	0xFE6
 42424                           postdec1	equ	0xFE5
 42425                           plusw1	equ	0xFE3
 42426                           fsr1h	equ	0xFE2
 42427                           fsr1l	equ	0xFE1
 42428                           indf2	equ	0xFDF
 42429                           postinc2	equ	0xFDE
 42430                           postdec2	equ	0xFDD
 42431                           plusw2	equ	0xFDB
 42432                           fsr2h	equ	0xFDA
 42433                           fsr2l	equ	0xFD9
 42434                           status	equ	0xFD8
 42435                           
 42436 ;; *************** function __get_fat *****************
 42437 ;; Defined at:
 42438 ;;		line 1187 in file "fat16.c"
 42439 ;; Parameters:    Size  Location     Type
 42440 ;;  idx             2    0[BANK0 ] unsigned int 
 42441 ;; Auto vars:     Size  Location     Type
 42442 ;;		None
 42443 ;; Return value:  Size  Location     Type
 42444 ;;                  1    wreg      unsigned char 
 42445 ;; Registers used:
 42446 ;;		wreg, status,2, status,0
 42447 ;; Tracked objects:
 42448 ;;		On entry : 0/0
 42449 ;;		On exit  : 0/0
 42450 ;;		Unchanged: 0/0
 42451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42452 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42454 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42455 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42456 ;;Total ram usage:        4 bytes
 42457 ;; Hardware stack levels used:    1
 42458 ;; Hardware stack levels required when called:   10
 42459 ;; This function calls:
 42460 ;;		Nothing
 42461 ;; This function is called by:
 42462 ;;		_fat_format
 42463 ;; This function uses a non-reentrant model
 42464 ;;
 42465                           
 42466                           	psect	text190
 42467  017A2E                     __ptext190:
 42468                           	opt stack 0
 42469  017A2E                     __get_fat:
 42470                           	opt stack 15
 42471                           
 42472                           ;fat16.c: 1189: switch (idx)
 42473                           
 42474                           ;incstack = 0
 42475  017A2E  D00E               	goto	l3039
 42476  017A30                     
 42477                           ;fat16.c: 1193: return 0xF8;
 42478  017A30  0EF8               	movlw	248
 42479  017A32  0012               	return	
 42480  017A34                     
 42481                           ;fat16.c: 1195: return 0xFF;
 42482  017A34  0EFF               	movlw	255
 42483  017A36  0012               	return	
 42484  017A38                     
 42485                           ;fat16.c: 1197: return 0xFF;
 42486  017A38  0EFF               	movlw	255
 42487  017A3A  0012               	return	
 42488  017A3C                     
 42489                           ;fat16.c: 1199: return 0xFF;
 42490  017A3C  0EFF               	movlw	255
 42491  017A3E  0012               	return	
 42492  017A40                     
 42493                           ;fat16.c: 1202: return 0xFF;
 42494  017A40  0EFF               	movlw	255
 42495  017A42  0012               	return	
 42496  017A44                     
 42497                           ;fat16.c: 1204: return 0xFF;
 42498  017A44  0EFF               	movlw	255
 42499  017A46  0012               	return	
 42500  017A48                     
 42501                           ;fat16.c: 1206: return 0X00;
 42502  017A48  0E00               	movlw	0
 42503                           
 42504                           ;fat16.c: 1207: }
 42505  017A4A  0012               	return	
 42506  017A4C                     l3039:
 42507  017A4C  C060  F062         	movff	__get_fat@idx,??__get_fat
 42508  017A50  C061  F063         	movff	__get_fat@idx+1,??__get_fat+1
 42509                           
 42510                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42511                           ; Switch size 1, requested type "space"
 42512                           ; Number of cases is 1, Range of values is 0 to 0
 42513                           ; switch strategies available:
 42514                           ; Name         Instructions Cycles
 42515                           ; simple_byte            4     3 (average)
 42516                           ;	Chosen strategy is simple_byte
 42517  017A54  0100               	movlb	0	; () banked
 42518  017A56  5163               	movf	(??__get_fat+1)& (0+255),w,b
 42519  017A58  0A00               	xorlw	0	; case 0
 42520  017A5A  A4D8               	btfss	status,2,c
 42521  017A5C  D7F5               	goto	l3047
 42522                           
 42523                           ; BSR set to: 0
 42524                           ; Switch size 1, requested type "space"
 42525                           ; Number of cases is 6, Range of values is 0 to 5
 42526                           ; switch strategies available:
 42527                           ; Name         Instructions Cycles
 42528                           ; simple_byte           19    10 (average)
 42529                           ;	Chosen strategy is simple_byte
 42530  017A5E  5162               	movf	??__get_fat& (0+255),w,b
 42531  017A60  0A00               	xorlw	0	; case 0
 42532  017A62  B4D8               	btfsc	status,2,c
 42533  017A64  D7E5               	goto	l3040
 42534  017A66  0A01               	xorlw	1	; case 1
 42535  017A68  B4D8               	btfsc	status,2,c
 42536  017A6A  D7E4               	goto	l3042
 42537  017A6C  0A03               	xorlw	3	; case 2
 42538  017A6E  B4D8               	btfsc	status,2,c
 42539  017A70  D7E3               	goto	l3043
 42540  017A72  0A01               	xorlw	1	; case 3
 42541  017A74  B4D8               	btfsc	status,2,c
 42542  017A76  D7E2               	goto	l3044
 42543  017A78  0A07               	xorlw	7	; case 4
 42544  017A7A  B4D8               	btfsc	status,2,c
 42545  017A7C  D7E1               	goto	l3045
 42546  017A7E  0A01               	xorlw	1	; case 5
 42547  017A80  B4D8               	btfsc	status,2,c
 42548  017A82  D7E0               	goto	l3046
 42549  017A84  D7E1               	goto	l3047
 42550  017A86                     __end_of__get_fat:
 42551                           	opt stack 0
 42552                           tosu	equ	0xFFF
 42553                           tosh	equ	0xFFE
 42554                           tosl	equ	0xFFD
 42555                           pclath	equ	0xFFA
 42556                           tblptru	equ	0xFF8
 42557                           tblptrh	equ	0xFF7
 42558                           tblptrl	equ	0xFF6
 42559                           tablat	equ	0xFF5
 42560                           prodh	equ	0xFF4
 42561                           prodl	equ	0xFF3
 42562                           intcon	equ	0xFF2
 42563                           intcon2	equ	0xFF1
 42564                           intcon3	equ	0xFF0
 42565                           postinc0	equ	0xFEE
 42566                           wreg	equ	0xFE8
 42567                           indf1	equ	0xFE7
 42568                           postinc1	equ	0xFE6
 42569                           postdec1	equ	0xFE5
 42570                           plusw1	equ	0xFE3
 42571                           fsr1h	equ	0xFE2
 42572                           fsr1l	equ	0xFE1
 42573                           indf2	equ	0xFDF
 42574                           postinc2	equ	0xFDE
 42575                           postdec2	equ	0xFDD
 42576                           plusw2	equ	0xFDB
 42577                           fsr2h	equ	0xFDA
 42578                           fsr2l	equ	0xFD9
 42579                           status	equ	0xFD8
 42580                           
 42581 ;; *************** function __get_data *****************
 42582 ;; Defined at:
 42583 ;;		line 1283 in file "fat16.c"
 42584 ;; Parameters:    Size  Location     Type
 42585 ;;  idx             2    0[BANK0 ] unsigned int 
 42586 ;; Auto vars:     Size  Location     Type
 42587 ;;		None
 42588 ;; Return value:  Size  Location     Type
 42589 ;;                  1    wreg      unsigned char 
 42590 ;; Registers used:
 42591 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 42592 ;; Tracked objects:
 42593 ;;		On entry : 0/0
 42594 ;;		On exit  : 0/0
 42595 ;;		Unchanged: 0/0
 42596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42597 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42600 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42601 ;;Total ram usage:        2 bytes
 42602 ;; Hardware stack levels used:    1
 42603 ;; Hardware stack levels required when called:   10
 42604 ;; This function calls:
 42605 ;;		Nothing
 42606 ;; This function is called by:
 42607 ;;		_fat_format
 42608 ;; This function uses a non-reentrant model
 42609 ;;
 42610                           
 42611                           	psect	text191
 42612  0189A0                     __ptext191:
 42613                           	opt stack 0
 42614  0189A0                     __get_data:
 42615                           	opt stack 15
 42616                           
 42617                           ;fat16.c: 1285: if(idx < 12)
 42618                           
 42619                           ;incstack = 0
 42620  0189A0  0100               	movlb	0	; () banked
 42621  0189A2  5161               	movf	(__get_data@idx+1)& (0+255),w,b
 42622  0189A4  E110               	bnz	l23375
 42623  0189A6  0E0C               	movlw	12
 42624  0189A8  5D60               	subwf	__get_data@idx& (0+255),w,b
 42625  0189AA  B0D8               	btfsc	status,0,c
 42626  0189AC  D00C               	goto	l3083
 42627                           
 42628                           ; BSR set to: 0
 42629                           ;fat16.c: 1286: {;fat16.c: 1287: return "hello world!"[idx];
 42630  0189AE  0E62               	movlw	low STR_12
 42631  0189B0  2560               	addwf	__get_data@idx& (0+255),w,b
 42632  0189B2  6EF6               	movwf	tblptrl,c
 42633  0189B4  0EC4               	movlw	high STR_12
 42634  0189B6  2161               	addwfc	(__get_data@idx+1)& (0+255),w,b
 42635  0189B8  6EF7               	movwf	tblptrh,c
 42636  0189BA                     	if	1	;There are 3 active tblptr bytes
 42637  0189BA  6AF8               	clrf	tblptru,c
 42638  0189BC  0E00               	movlw	low (__mediumconst shr (0+16))
 42639  0189BE  22F8               	addwfc	tblptru,f,c
 42640  0189C0                     	endif
 42641  0189C0  0008               	tblrd		*
 42642  0189C2  50F5               	movf	tablat,w,c
 42643                           
 42644                           ; BSR set to: 0
 42645  0189C4  0012               	return	
 42646  0189C6                     l3083:
 42647  0189C6                     l23375:
 42648                           
 42649                           ; BSR set to: 0
 42650                           ;fat16.c: 1288: };fat16.c: 1289: return 0X00;
 42651  0189C6  0E00               	movlw	0
 42652  0189C8  0012               	return	
 42653  0189CA                     __end_of__get_data:
 42654                           	opt stack 0
 42655                           tosu	equ	0xFFF
 42656                           tosh	equ	0xFFE
 42657                           tosl	equ	0xFFD
 42658                           pclath	equ	0xFFA
 42659                           tblptru	equ	0xFF8
 42660                           tblptrh	equ	0xFF7
 42661                           tblptrl	equ	0xFF6
 42662                           tablat	equ	0xFF5
 42663                           prodh	equ	0xFF4
 42664                           prodl	equ	0xFF3
 42665                           intcon	equ	0xFF2
 42666                           intcon2	equ	0xFF1
 42667                           intcon3	equ	0xFF0
 42668                           postinc0	equ	0xFEE
 42669                           wreg	equ	0xFE8
 42670                           indf1	equ	0xFE7
 42671                           postinc1	equ	0xFE6
 42672                           postdec1	equ	0xFE5
 42673                           plusw1	equ	0xFE3
 42674                           fsr1h	equ	0xFE2
 42675                           fsr1l	equ	0xFE1
 42676                           indf2	equ	0xFDF
 42677                           postinc2	equ	0xFDE
 42678                           postdec2	equ	0xFDD
 42679                           plusw2	equ	0xFDB
 42680                           fsr2h	equ	0xFDA
 42681                           fsr2l	equ	0xFD9
 42682                           status	equ	0xFD8
 42683                           
 42684 ;; *************** function __parse_file_resize *****************
 42685 ;; Defined at:
 42686 ;;		line 734 in file "api.c"
 42687 ;; Parameters:    Size  Location     Type
 42688 ;;  data            2  123[BANK0 ] PTR unsigned char 
 42689 ;;		 -> ReceivedDataBuffer(64), 
 42690 ;;  out_buffer      2  125[BANK0 ] PTR unsigned char 
 42691 ;;		 -> ToSendDataBuffer(64), 
 42692 ;;  out_idx_ptr     2  127[BANK0 ] PTR unsigned char 
 42693 ;;		 -> api_parse@out_idx(1), 
 42694 ;; Auto vars:     Size  Location     Type
 42695 ;;  file_size       4  132[BANK0 ] unsigned long 
 42696 ;;  file_number     1  131[BANK0 ] unsigned char 
 42697 ;;  return_value    1  130[BANK0 ] unsigned char 
 42698 ;; Return value:  Size  Location     Type
 42699 ;;                  1    wreg      unsigned char 
 42700 ;; Registers used:
 42701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42702 ;; Tracked objects:
 42703 ;;		On entry : 0/0
 42704 ;;		On exit  : 0/0
 42705 ;;		Unchanged: 0/0
 42706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42707 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42708 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42709 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42710 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42711 ;;Total ram usage:       13 bytes
 42712 ;; Hardware stack levels used:    1
 42713 ;; Hardware stack levels required when called:   18
 42714 ;; This function calls:
 42715 ;;		_fat_resize_file
 42716 ;; This function is called by:
 42717 ;;		__parse_command_long
 42718 ;; This function uses a non-reentrant model
 42719 ;;
 42720                           
 42721                           	psect	text192
 42722  0108A8                     __ptext192:
 42723                           	opt stack 0
 42724  0108A8                     __parse_file_resize:
 42725                           	opt stack 9
 42726                           
 42727                           ;api.c: 737: uint32_t file_size;;api.c: 738: uint8_t return_value;;api.c: 739: uint8_t f
      +                          ile_number;;api.c: 741: if((data[0]!=COMMAND_FILE_RESIZE) || (data[6]!=0x4C) || (data[7]
      +                          !=0xEA))
 42728                           
 42729                           ; BSR set to: 0
 42730                           ;incstack = 0
 42731  0108A8  C0DB  FFD9         	movff	__parse_file_resize@data,fsr2l
 42732  0108AC  C0DC  FFDA         	movff	__parse_file_resize@data+1,fsr2h
 42733  0108B0  0E50               	movlw	80
 42734  0108B2  18DE               	xorwf	postinc2,w,c
 42735  0108B4  A4D8               	btfss	status,2,c
 42736  0108B6  D015               	goto	u22840
 42737  0108B8  0100               	movlb	0	; () banked
 42738  0108BA  EE20 F006          	lfsr	2,6
 42739  0108BE  51DB               	movf	__parse_file_resize@data& (0+255),w,b
 42740  0108C0  26D9               	addwf	fsr2l,f,c
 42741  0108C2  51DC               	movf	(__parse_file_resize@data+1)& (0+255),w,b
 42742  0108C4  22DA               	addwfc	fsr2h,f,c
 42743  0108C6  0E4C               	movlw	76
 42744  0108C8  18DE               	xorwf	postinc2,w,c
 42745  0108CA  A4D8               	btfss	status,2,c
 42746  0108CC  D00A               	goto	u22840
 42747                           
 42748                           ; BSR set to: 0
 42749  0108CE  EE20 F007          	lfsr	2,7
 42750  0108D2  51DB               	movf	__parse_file_resize@data& (0+255),w,b
 42751  0108D4  26D9               	addwf	fsr2l,f,c
 42752  0108D6  51DC               	movf	(__parse_file_resize@data+1)& (0+255),w,b
 42753  0108D8  22DA               	addwfc	fsr2h,f,c
 42754  0108DA  0EEA               	movlw	234
 42755  0108DC  18DE               	xorwf	postinc2,w,c
 42756  0108DE  B4D8               	btfsc	status,2,c
 42757  0108E0  D002               	goto	l3672
 42758  0108E2                     u22840:
 42759                           
 42760                           ;api.c: 742: {;api.c: 743: return 8;
 42761                           
 42762                           ; BSR set to: 0
 42763  0108E2  0E08               	movlw	8
 42764  0108E4  0012               	return	
 42765  0108E6                     l3672:
 42766                           
 42767                           ;api.c: 744: };api.c: 747: file_number = data[1];
 42768  0108E6  0100               	movlb	0	; () banked
 42769  0108E8  EE20 F001          	lfsr	2,1
 42770  0108EC  51DB               	movf	__parse_file_resize@data& (0+255),w,b
 42771  0108EE  26D9               	addwf	fsr2l,f,c
 42772  0108F0  51DC               	movf	(__parse_file_resize@data+1)& (0+255),w,b
 42773  0108F2  22DA               	addwfc	fsr2h,f,c
 42774  0108F4  50DF               	movf	indf2,w,c
 42775  0108F6  6FE3               	movwf	__parse_file_resize@file_number& (0+255),b
 42776                           
 42777                           ;api.c: 750: file_size = data[2];
 42778  0108F8  EE20 F002          	lfsr	2,2
 42779  0108FC  51DB               	movf	__parse_file_resize@data& (0+255),w,b
 42780  0108FE  26D9               	addwf	fsr2l,f,c
 42781  010900  51DC               	movf	(__parse_file_resize@data+1)& (0+255),w,b
 42782  010902  22DA               	addwfc	fsr2h,f,c
 42783  010904  50DF               	movf	indf2,w,c
 42784  010906  6FE1               	movwf	??__parse_file_resize& (0+255),b
 42785  010908  51E1               	movf	??__parse_file_resize& (0+255),w,b
 42786  01090A  6FE4               	movwf	__parse_file_resize@file_size& (0+255),b
 42787  01090C  6BE5               	clrf	(__parse_file_resize@file_size+1)& (0+255),b
 42788  01090E  6BE6               	clrf	(__parse_file_resize@file_size+2)& (0+255),b
 42789  010910  6BE7               	clrf	(__parse_file_resize@file_size+3)& (0+255),b
 42790                           
 42791                           ; BSR set to: 0
 42792                           ;api.c: 751: file_size <<= 8;
 42793  010912  C0E6  F0E7         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 42794  010916  C0E5  F0E6         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 42795  01091A  C0E4  F0E5         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 42796  01091E  6BE4               	clrf	__parse_file_resize@file_size& (0+255),b
 42797                           
 42798                           ; BSR set to: 0
 42799                           ;api.c: 752: file_size |= data[3];
 42800  010920  EE20 F003          	lfsr	2,3
 42801  010924  51DB               	movf	__parse_file_resize@data& (0+255),w,b
 42802  010926  26D9               	addwf	fsr2l,f,c
 42803  010928  51DC               	movf	(__parse_file_resize@data+1)& (0+255),w,b
 42804  01092A  22DA               	addwfc	fsr2h,f,c
 42805  01092C  50DF               	movf	indf2,w,c
 42806  01092E  6FE1               	movwf	??__parse_file_resize& (0+255),b
 42807  010930  51E1               	movf	??__parse_file_resize& (0+255),w,b
 42808  010932  13E4               	iorwf	__parse_file_resize@file_size& (0+255),f,b
 42809                           
 42810                           ;api.c: 753: file_size <<= 8;
 42811  010934  C0E6  F0E7         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 42812  010938  C0E5  F0E6         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 42813  01093C  C0E4  F0E5         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 42814  010940  6BE4               	clrf	__parse_file_resize@file_size& (0+255),b
 42815                           
 42816                           ; BSR set to: 0
 42817                           ;api.c: 754: file_size |= data[4];
 42818  010942  EE20 F004          	lfsr	2,4
 42819  010946  51DB               	movf	__parse_file_resize@data& (0+255),w,b
 42820  010948  26D9               	addwf	fsr2l,f,c
 42821  01094A  51DC               	movf	(__parse_file_resize@data+1)& (0+255),w,b
 42822  01094C  22DA               	addwfc	fsr2h,f,c
 42823  01094E  50DF               	movf	indf2,w,c
 42824  010950  6FE1               	movwf	??__parse_file_resize& (0+255),b
 42825  010952  51E1               	movf	??__parse_file_resize& (0+255),w,b
 42826  010954  13E4               	iorwf	__parse_file_resize@file_size& (0+255),f,b
 42827                           
 42828                           ; BSR set to: 0
 42829                           ;api.c: 755: file_size <<= 8;
 42830  010956  C0E6  F0E7         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 42831  01095A  C0E5  F0E6         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 42832  01095E  C0E4  F0E5         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 42833  010962  6BE4               	clrf	__parse_file_resize@file_size& (0+255),b
 42834                           
 42835                           ;api.c: 756: file_size |= data[5];
 42836  010964  EE20 F005          	lfsr	2,5
 42837  010968  51DB               	movf	__parse_file_resize@data& (0+255),w,b
 42838  01096A  26D9               	addwf	fsr2l,f,c
 42839  01096C  51DC               	movf	(__parse_file_resize@data+1)& (0+255),w,b
 42840  01096E  22DA               	addwfc	fsr2h,f,c
 42841  010970  50DF               	movf	indf2,w,c
 42842  010972  6FE1               	movwf	??__parse_file_resize& (0+255),b
 42843  010974  51E1               	movf	??__parse_file_resize& (0+255),w,b
 42844  010976  13E4               	iorwf	__parse_file_resize@file_size& (0+255),f,b
 42845                           
 42846                           ; BSR set to: 0
 42847                           ;api.c: 759: return_value = fat_resize_file(file_number, file_size);
 42848  010978  C0E4  F0AC         	movff	__parse_file_resize@file_size,fat_resize_file@new_file_size
 42849  01097C  C0E5  F0AD         	movff	__parse_file_resize@file_size+1,fat_resize_file@new_file_size+1
 42850  010980  C0E6  F0AE         	movff	__parse_file_resize@file_size+2,fat_resize_file@new_file_size+2
 42851  010984  C0E7  F0AF         	movff	__parse_file_resize@file_size+3,fat_resize_file@new_file_size+3
 42852  010988  51E3               	movf	__parse_file_resize@file_number& (0+255),w,b
 42853  01098A  ECDE  F09D         	call	_fat_resize_file
 42854  01098E  0100               	movlb	0	; () banked
 42855  010990  6FE2               	movwf	__parse_file_resize@return_value& (0+255),b
 42856                           
 42857                           ; BSR set to: 0
 42858                           ;api.c: 762: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<58))
 42859  010992  C0DF  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 42860  010996  C0E0  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 42861  01099A  50DF               	movf	indf2,w,c
 42862  01099C  B4D8               	btfsc	status,2,c
 42863  01099E  D085               	goto	l3676
 42864                           
 42865                           ; BSR set to: 0
 42866  0109A0  C0DF  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 42867  0109A4  C0E0  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 42868  0109A8  0E3A               	movlw	58
 42869  0109AA  60DF               	cpfslt	indf2,c
 42870  0109AC  D07E               	goto	l3676
 42871                           
 42872                           ; BSR set to: 0
 42873                           ;api.c: 763: {;api.c: 764: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_RESIZE;
 42874  0109AE  C0DF  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 42875  0109B2  C0E0  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 42876  0109B6  CFDF F0E1          	movff	indf2,??__parse_file_resize
 42877  0109BA  0E01               	movlw	1
 42878  0109BC  26DF               	addwf	indf2,f,c
 42879  0109BE  51E1               	movf	??__parse_file_resize& (0+255),w,b
 42880  0109C0  0D01               	mullw	1
 42881  0109C2  50F3               	movf	prodl,w,c
 42882  0109C4  25DD               	addwf	__parse_file_resize@out_buffer& (0+255),w,b
 42883  0109C6  6ED9               	movwf	fsr2l,c
 42884  0109C8  50F4               	movf	prodh,w,c
 42885  0109CA  21DE               	addwfc	(__parse_file_resize@out_buffer+1)& (0+255),w,b
 42886  0109CC  6EDA               	movwf	fsr2h,c
 42887  0109CE  0E50               	movlw	80
 42888  0109D0  6EDF               	movwf	indf2,c
 42889                           
 42890                           ;api.c: 765: out_buffer[(*out_idx_ptr)++] = file_number;
 42891  0109D2  C0DF  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 42892  0109D6  C0E0  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 42893  0109DA  CFDF F0E1          	movff	indf2,??__parse_file_resize
 42894  0109DE  0E01               	movlw	1
 42895  0109E0  26DF               	addwf	indf2,f,c
 42896  0109E2  51E1               	movf	??__parse_file_resize& (0+255),w,b
 42897  0109E4  0D01               	mullw	1
 42898  0109E6  50F3               	movf	prodl,w,c
 42899  0109E8  25DD               	addwf	__parse_file_resize@out_buffer& (0+255),w,b
 42900  0109EA  6ED9               	movwf	fsr2l,c
 42901  0109EC  50F4               	movf	prodh,w,c
 42902  0109EE  21DE               	addwfc	(__parse_file_resize@out_buffer+1)& (0+255),w,b
 42903  0109F0  6EDA               	movwf	fsr2h,c
 42904  0109F2  C0E3  FFDF         	movff	__parse_file_resize@file_number,indf2
 42905                           
 42906                           ;api.c: 766: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((((unsigned short)(((file_
      +                          size)>>16)&0xFFFF)))>>8)&0xFF));
 42907  0109F6  C0DF  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 42908  0109FA  C0E0  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 42909  0109FE  CFDF F0E1          	movff	indf2,??__parse_file_resize
 42910  010A02  0E01               	movlw	1
 42911  010A04  26DF               	addwf	indf2,f,c
 42912  010A06  51E1               	movf	??__parse_file_resize& (0+255),w,b
 42913  010A08  0D01               	mullw	1
 42914  010A0A  50F3               	movf	prodl,w,c
 42915  010A0C  25DD               	addwf	__parse_file_resize@out_buffer& (0+255),w,b
 42916  010A0E  6ED9               	movwf	fsr2l,c
 42917  010A10  50F4               	movf	prodh,w,c
 42918  010A12  21DE               	addwfc	(__parse_file_resize@out_buffer+1)& (0+255),w,b
 42919  010A14  6EDA               	movwf	fsr2h,c
 42920  010A16  51E7               	movf	(__parse_file_resize@file_size+3)& (0+255),w,b
 42921  010A18  6EDF               	movwf	indf2,c
 42922                           
 42923                           ;api.c: 767: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((((unsigned short)(((file_s
      +                          ize)>>16)&0xFFFF)))&0xFF));
 42924  010A1A  C0DF  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 42925  010A1E  C0E0  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 42926  010A22  CFDF F0E1          	movff	indf2,??__parse_file_resize
 42927  010A26  0E01               	movlw	1
 42928  010A28  26DF               	addwf	indf2,f,c
 42929  010A2A  51E1               	movf	??__parse_file_resize& (0+255),w,b
 42930  010A2C  0D01               	mullw	1
 42931  010A2E  50F3               	movf	prodl,w,c
 42932  010A30  25DD               	addwf	__parse_file_resize@out_buffer& (0+255),w,b
 42933  010A32  6ED9               	movwf	fsr2l,c
 42934  010A34  50F4               	movf	prodh,w,c
 42935  010A36  21DE               	addwfc	(__parse_file_resize@out_buffer+1)& (0+255),w,b
 42936  010A38  6EDA               	movwf	fsr2h,c
 42937  010A3A  C0E6  FFDF         	movff	__parse_file_resize@file_size+2,indf2
 42938                           
 42939                           ;api.c: 768: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((((unsigned short)((file_s
      +                          ize)&0xFFFF)))>>8)&0xFF));
 42940  010A3E  C0DF  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 42941  010A42  C0E0  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 42942  010A46  CFDF F0E1          	movff	indf2,??__parse_file_resize
 42943  010A4A  0E01               	movlw	1
 42944  010A4C  26DF               	addwf	indf2,f,c
 42945  010A4E  51E1               	movf	??__parse_file_resize& (0+255),w,b
 42946  010A50  0D01               	mullw	1
 42947  010A52  50F3               	movf	prodl,w,c
 42948  010A54  25DD               	addwf	__parse_file_resize@out_buffer& (0+255),w,b
 42949  010A56  6ED9               	movwf	fsr2l,c
 42950  010A58  50F4               	movf	prodh,w,c
 42951  010A5A  21DE               	addwfc	(__parse_file_resize@out_buffer+1)& (0+255),w,b
 42952  010A5C  6EDA               	movwf	fsr2h,c
 42953  010A5E  51E5               	movf	(__parse_file_resize@file_size+1)& (0+255),w,b
 42954  010A60  6EDF               	movwf	indf2,c
 42955                           
 42956                           ;api.c: 769: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((((unsigned short)((file_si
      +                          ze)&0xFFFF)))&0xFF));
 42957  010A62  C0DF  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 42958  010A66  C0E0  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 42959  010A6A  CFDF F0E1          	movff	indf2,??__parse_file_resize
 42960  010A6E  0E01               	movlw	1
 42961  010A70  26DF               	addwf	indf2,f,c
 42962  010A72  51E1               	movf	??__parse_file_resize& (0+255),w,b
 42963  010A74  0D01               	mullw	1
 42964  010A76  50F3               	movf	prodl,w,c
 42965  010A78  25DD               	addwf	__parse_file_resize@out_buffer& (0+255),w,b
 42966  010A7A  6ED9               	movwf	fsr2l,c
 42967  010A7C  50F4               	movf	prodh,w,c
 42968  010A7E  21DE               	addwfc	(__parse_file_resize@out_buffer+1)& (0+255),w,b
 42969  010A80  6EDA               	movwf	fsr2h,c
 42970  010A82  C0E4  FFDF         	movff	__parse_file_resize@file_size,indf2
 42971                           
 42972                           ;api.c: 770: out_buffer[(*out_idx_ptr)++] = return_value;
 42973  010A86  C0DF  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 42974  010A8A  C0E0  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 42975  010A8E  CFDF F0E1          	movff	indf2,??__parse_file_resize
 42976  010A92  0E01               	movlw	1
 42977  010A94  26DF               	addwf	indf2,f,c
 42978  010A96  51E1               	movf	??__parse_file_resize& (0+255),w,b
 42979  010A98  0D01               	mullw	1
 42980  010A9A  50F3               	movf	prodl,w,c
 42981  010A9C  25DD               	addwf	__parse_file_resize@out_buffer& (0+255),w,b
 42982  010A9E  6ED9               	movwf	fsr2l,c
 42983  010AA0  50F4               	movf	prodh,w,c
 42984  010AA2  21DE               	addwfc	(__parse_file_resize@out_buffer+1)& (0+255),w,b
 42985  010AA4  6EDA               	movwf	fsr2h,c
 42986  010AA6  C0E2  FFDF         	movff	__parse_file_resize@return_value,indf2
 42987  010AAA                     l3676:
 42988                           
 42989                           ; BSR set to: 0
 42990                           ;api.c: 771: };api.c: 773: return 8;
 42991                           
 42992                           ; BSR set to: 0
 42993  010AAA  0E08               	movlw	8
 42994  010AAC  0012               	return	
 42995  010AAE                     __end_of__parse_file_resize:
 42996                           	opt stack 0
 42997                           tosu	equ	0xFFF
 42998                           tosh	equ	0xFFE
 42999                           tosl	equ	0xFFD
 43000                           pclath	equ	0xFFA
 43001                           tblptru	equ	0xFF8
 43002                           tblptrh	equ	0xFF7
 43003                           tblptrl	equ	0xFF6
 43004                           tablat	equ	0xFF5
 43005                           prodh	equ	0xFF4
 43006                           prodl	equ	0xFF3
 43007                           intcon	equ	0xFF2
 43008                           intcon2	equ	0xFF1
 43009                           intcon3	equ	0xFF0
 43010                           postinc0	equ	0xFEE
 43011                           wreg	equ	0xFE8
 43012                           indf1	equ	0xFE7
 43013                           postinc1	equ	0xFE6
 43014                           postdec1	equ	0xFE5
 43015                           plusw1	equ	0xFE3
 43016                           fsr1h	equ	0xFE2
 43017                           fsr1l	equ	0xFE1
 43018                           indf2	equ	0xFDF
 43019                           postinc2	equ	0xFDE
 43020                           postdec2	equ	0xFDD
 43021                           plusw2	equ	0xFDB
 43022                           fsr2h	equ	0xFDA
 43023                           fsr2l	equ	0xFD9
 43024                           status	equ	0xFD8
 43025                           
 43026 ;; *************** function __parse_file_rename *****************
 43027 ;; Defined at:
 43028 ;;		line 838 in file "api.c"
 43029 ;; Parameters:    Size  Location     Type
 43030 ;;  data            2   94[BANK0 ] PTR unsigned char 
 43031 ;;		 -> ReceivedDataBuffer(64), 
 43032 ;;  out_buffer      2   96[BANK0 ] PTR unsigned char 
 43033 ;;		 -> ToSendDataBuffer(64), 
 43034 ;;  out_idx_ptr     2   98[BANK0 ] PTR unsigned char 
 43035 ;;		 -> api_parse@out_idx(1), 
 43036 ;; Auto vars:     Size  Location     Type
 43037 ;;  file_number     1  102[BANK0 ] unsigned char 
 43038 ;;  return_value    1  101[BANK0 ] unsigned char 
 43039 ;; Return value:  Size  Location     Type
 43040 ;;                  1    wreg      unsigned char 
 43041 ;; Registers used:
 43042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43043 ;; Tracked objects:
 43044 ;;		On entry : 0/0
 43045 ;;		On exit  : 0/0
 43046 ;;		Unchanged: 0/0
 43047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43048 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43049 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43050 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43051 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43052 ;;Total ram usage:        9 bytes
 43053 ;; Hardware stack levels used:    1
 43054 ;; Hardware stack levels required when called:   17
 43055 ;; This function calls:
 43056 ;;		_fat_rename_file
 43057 ;; This function is called by:
 43058 ;;		__parse_command_long
 43059 ;; This function uses a non-reentrant model
 43060 ;;
 43061                           
 43062                           	psect	text193
 43063  0139C0                     __ptext193:
 43064                           	opt stack 0
 43065  0139C0                     __parse_file_rename:
 43066                           	opt stack 10
 43067                           
 43068                           ;api.c: 842: uint8_t file_number;;api.c: 843: uint8_t return_value;;api.c: 845: if((data
      +                          [0]!=COMMAND_FILE_RENAME) || (data[13]!=0x7E) || (data[14]!=0x18))
 43069                           
 43070                           ;incstack = 0
 43071  0139C0  C0BE  FFD9         	movff	__parse_file_rename@data,fsr2l
 43072  0139C4  C0BF  FFDA         	movff	__parse_file_rename@data+1,fsr2h
 43073  0139C8  0E53               	movlw	83
 43074  0139CA  18DE               	xorwf	postinc2,w,c
 43075  0139CC  A4D8               	btfss	status,2,c
 43076  0139CE  D015               	goto	u22990
 43077  0139D0  0100               	movlb	0	; () banked
 43078  0139D2  EE20 F00D          	lfsr	2,13
 43079  0139D6  51BE               	movf	__parse_file_rename@data& (0+255),w,b
 43080  0139D8  26D9               	addwf	fsr2l,f,c
 43081  0139DA  51BF               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 43082  0139DC  22DA               	addwfc	fsr2h,f,c
 43083  0139DE  0E7E               	movlw	126
 43084  0139E0  18DE               	xorwf	postinc2,w,c
 43085  0139E2  A4D8               	btfss	status,2,c
 43086  0139E4  D00A               	goto	u22990
 43087                           
 43088                           ; BSR set to: 0
 43089  0139E6  EE20 F00E          	lfsr	2,14
 43090  0139EA  51BE               	movf	__parse_file_rename@data& (0+255),w,b
 43091  0139EC  26D9               	addwf	fsr2l,f,c
 43092  0139EE  51BF               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 43093  0139F0  22DA               	addwfc	fsr2h,f,c
 43094  0139F2  0E18               	movlw	24
 43095  0139F4  18DE               	xorwf	postinc2,w,c
 43096  0139F6  B4D8               	btfsc	status,2,c
 43097  0139F8  D002               	goto	l3693
 43098  0139FA                     u22990:
 43099                           
 43100                           ;api.c: 846: {;api.c: 847: return 15;
 43101                           
 43102                           ; BSR set to: 0
 43103  0139FA  0E0F               	movlw	15
 43104  0139FC  0012               	return	
 43105  0139FE                     l3693:
 43106                           
 43107                           ;api.c: 848: };api.c: 851: file_number = data[1];
 43108  0139FE  0100               	movlb	0	; () banked
 43109  013A00  EE20 F001          	lfsr	2,1
 43110  013A04  51BE               	movf	__parse_file_rename@data& (0+255),w,b
 43111  013A06  26D9               	addwf	fsr2l,f,c
 43112  013A08  51BF               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 43113  013A0A  22DA               	addwfc	fsr2h,f,c
 43114  013A0C  50DF               	movf	indf2,w,c
 43115  013A0E  6FC6               	movwf	__parse_file_rename@file_number& (0+255),b
 43116                           
 43117                           ; BSR set to: 0
 43118                           ;api.c: 854: return_value = fat_rename_file(file_number, &data[2], &data[10]);
 43119  013A10  0E02               	movlw	2
 43120  013A12  25BE               	addwf	__parse_file_rename@data& (0+255),w,b
 43121  013A14  6F97               	movwf	fat_rename_file@name& (0+255),b
 43122  013A16  0E00               	movlw	0
 43123  013A18  21BF               	addwfc	(__parse_file_rename@data+1)& (0+255),w,b
 43124  013A1A  6F98               	movwf	(fat_rename_file@name+1)& (0+255),b
 43125  013A1C  0E0A               	movlw	10
 43126  013A1E  25BE               	addwf	__parse_file_rename@data& (0+255),w,b
 43127  013A20  6F99               	movwf	fat_rename_file@extension& (0+255),b
 43128  013A22  0E00               	movlw	0
 43129  013A24  21BF               	addwfc	(__parse_file_rename@data+1)& (0+255),w,b
 43130  013A26  6F9A               	movwf	(fat_rename_file@extension+1)& (0+255),b
 43131  013A28  51C6               	movf	__parse_file_rename@file_number& (0+255),w,b
 43132  013A2A  EC81  F0AF         	call	_fat_rename_file
 43133  013A2E  0100               	movlb	0	; () banked
 43134  013A30  6FC5               	movwf	__parse_file_rename@return_value& (0+255),b
 43135                           
 43136                           ; BSR set to: 0
 43137                           ;api.c: 857: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 43138  013A32  C0C2  FFD9         	movff	__parse_file_rename@out_idx_ptr,fsr2l
 43139  013A36  C0C3  FFDA         	movff	__parse_file_rename@out_idx_ptr+1,fsr2h
 43140  013A3A  50DF               	movf	indf2,w,c
 43141  013A3C  B4D8               	btfsc	status,2,c
 43142  013A3E  D03D               	goto	l3697
 43143                           
 43144                           ; BSR set to: 0
 43145  013A40  C0C2  FFD9         	movff	__parse_file_rename@out_idx_ptr,fsr2l
 43146  013A44  C0C3  FFDA         	movff	__parse_file_rename@out_idx_ptr+1,fsr2h
 43147  013A48  0E3E               	movlw	62
 43148  013A4A  60DF               	cpfslt	indf2,c
 43149  013A4C  D036               	goto	l3697
 43150                           
 43151                           ; BSR set to: 0
 43152                           ;api.c: 858: {;api.c: 859: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_RENAME;
 43153  013A4E  C0C2  FFD9         	movff	__parse_file_rename@out_idx_ptr,fsr2l
 43154  013A52  C0C3  FFDA         	movff	__parse_file_rename@out_idx_ptr+1,fsr2h
 43155  013A56  CFDF F0C4          	movff	indf2,??__parse_file_rename
 43156  013A5A  0E01               	movlw	1
 43157  013A5C  26DF               	addwf	indf2,f,c
 43158  013A5E  51C4               	movf	??__parse_file_rename& (0+255),w,b
 43159  013A60  0D01               	mullw	1
 43160  013A62  50F3               	movf	prodl,w,c
 43161  013A64  25C0               	addwf	__parse_file_rename@out_buffer& (0+255),w,b
 43162  013A66  6ED9               	movwf	fsr2l,c
 43163  013A68  50F4               	movf	prodh,w,c
 43164  013A6A  21C1               	addwfc	(__parse_file_rename@out_buffer+1)& (0+255),w,b
 43165  013A6C  6EDA               	movwf	fsr2h,c
 43166  013A6E  0E53               	movlw	83
 43167  013A70  6EDF               	movwf	indf2,c
 43168                           
 43169                           ;api.c: 860: out_buffer[(*out_idx_ptr)++] = file_number;
 43170  013A72  C0C2  FFD9         	movff	__parse_file_rename@out_idx_ptr,fsr2l
 43171  013A76  C0C3  FFDA         	movff	__parse_file_rename@out_idx_ptr+1,fsr2h
 43172  013A7A  CFDF F0C4          	movff	indf2,??__parse_file_rename
 43173  013A7E  0E01               	movlw	1
 43174  013A80  26DF               	addwf	indf2,f,c
 43175  013A82  51C4               	movf	??__parse_file_rename& (0+255),w,b
 43176  013A84  0D01               	mullw	1
 43177  013A86  50F3               	movf	prodl,w,c
 43178  013A88  25C0               	addwf	__parse_file_rename@out_buffer& (0+255),w,b
 43179  013A8A  6ED9               	movwf	fsr2l,c
 43180  013A8C  50F4               	movf	prodh,w,c
 43181  013A8E  21C1               	addwfc	(__parse_file_rename@out_buffer+1)& (0+255),w,b
 43182  013A90  6EDA               	movwf	fsr2h,c
 43183  013A92  C0C6  FFDF         	movff	__parse_file_rename@file_number,indf2
 43184                           
 43185                           ;api.c: 861: out_buffer[(*out_idx_ptr)++] = return_value;
 43186  013A96  C0C2  FFD9         	movff	__parse_file_rename@out_idx_ptr,fsr2l
 43187  013A9A  C0C3  FFDA         	movff	__parse_file_rename@out_idx_ptr+1,fsr2h
 43188  013A9E  CFDF F0C4          	movff	indf2,??__parse_file_rename
 43189  013AA2  0E01               	movlw	1
 43190  013AA4  26DF               	addwf	indf2,f,c
 43191  013AA6  51C4               	movf	??__parse_file_rename& (0+255),w,b
 43192  013AA8  0D01               	mullw	1
 43193  013AAA  50F3               	movf	prodl,w,c
 43194  013AAC  25C0               	addwf	__parse_file_rename@out_buffer& (0+255),w,b
 43195  013AAE  6ED9               	movwf	fsr2l,c
 43196  013AB0  50F4               	movf	prodh,w,c
 43197  013AB2  21C1               	addwfc	(__parse_file_rename@out_buffer+1)& (0+255),w,b
 43198  013AB4  6EDA               	movwf	fsr2h,c
 43199  013AB6  C0C5  FFDF         	movff	__parse_file_rename@return_value,indf2
 43200  013ABA                     l3697:
 43201                           
 43202                           ; BSR set to: 0
 43203                           ;api.c: 862: };api.c: 864: return 15;
 43204                           
 43205                           ; BSR set to: 0
 43206  013ABA  0E0F               	movlw	15
 43207  013ABC  0012               	return	
 43208  013ABE                     __end_of__parse_file_rename:
 43209                           	opt stack 0
 43210                           tosu	equ	0xFFF
 43211                           tosh	equ	0xFFE
 43212                           tosl	equ	0xFFD
 43213                           pclath	equ	0xFFA
 43214                           tblptru	equ	0xFF8
 43215                           tblptrh	equ	0xFF7
 43216                           tblptrl	equ	0xFF6
 43217                           tablat	equ	0xFF5
 43218                           prodh	equ	0xFF4
 43219                           prodl	equ	0xFF3
 43220                           intcon	equ	0xFF2
 43221                           intcon2	equ	0xFF1
 43222                           intcon3	equ	0xFF0
 43223                           postinc0	equ	0xFEE
 43224                           wreg	equ	0xFE8
 43225                           indf1	equ	0xFE7
 43226                           postinc1	equ	0xFE6
 43227                           postdec1	equ	0xFE5
 43228                           plusw1	equ	0xFE3
 43229                           fsr1h	equ	0xFE2
 43230                           fsr1l	equ	0xFE1
 43231                           indf2	equ	0xFDF
 43232                           postinc2	equ	0xFDE
 43233                           postdec2	equ	0xFDD
 43234                           plusw2	equ	0xFDB
 43235                           fsr2h	equ	0xFDA
 43236                           fsr2l	equ	0xFD9
 43237                           status	equ	0xFD8
 43238                           
 43239 ;; *************** function _fat_rename_file *****************
 43240 ;; Defined at:
 43241 ;;		line 719 in file "fat16.c"
 43242 ;; Parameters:    Size  Location     Type
 43243 ;;  file_number     1    wreg     unsigned char 
 43244 ;;  name            2   55[BANK0 ] PTR unsigned char 
 43245 ;;		 -> ReceivedDataBuffer(64), 
 43246 ;;  extension       2   57[BANK0 ] PTR unsigned char 
 43247 ;;		 -> ReceivedDataBuffer(64), 
 43248 ;; Auto vars:     Size  Location     Type
 43249 ;;  file_number     1   59[BANK0 ] unsigned char 
 43250 ;;  root           32   61[BANK0 ] struct .
 43251 ;;  cntr            1   93[BANK0 ] unsigned char 
 43252 ;;  return_code     1   60[BANK0 ] unsigned char 
 43253 ;; Return value:  Size  Location     Type
 43254 ;;                  1    wreg      unsigned char 
 43255 ;; Registers used:
 43256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43257 ;; Tracked objects:
 43258 ;;		On entry : 0/0
 43259 ;;		On exit  : 0/0
 43260 ;;		Unchanged: 0/0
 43261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43262 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43263 ;;      Locals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43265 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43266 ;;Total ram usage:       39 bytes
 43267 ;; Hardware stack levels used:    1
 43268 ;; Hardware stack levels required when called:   16
 43269 ;; This function calls:
 43270 ;;		__write_root
 43271 ;;		_fat_get_file_information
 43272 ;; This function is called by:
 43273 ;;		__parse_file_rename
 43274 ;; This function uses a non-reentrant model
 43275 ;;
 43276                           
 43277                           	psect	text194
 43278  015F02                     __ptext194:
 43279                           	opt stack 0
 43280  015F02                     _fat_rename_file:
 43281                           	opt stack 10
 43282                           
 43283                           ;incstack = 0
 43284                           ;fat_rename_file@file_number stored from wreg
 43285  015F02  0100               	movlb	0	; () banked
 43286  015F04  6F9B               	movwf	fat_rename_file@file_number& (0+255),b
 43287                           
 43288                           ;fat16.c: 721: rootEntry_t root;;fat16.c: 722: uint8_t cntr;;fat16.c: 723: uint8_t retur
      +                          n_code;;fat16.c: 726: return_code = fat_get_file_information(file_number, &root);
 43289  015F06  0E9D               	movlw	low fat_rename_file@root
 43290  015F08  0100               	movlb	0	; () banked
 43291  015F0A  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 43292  015F0C  0E00               	movlw	high fat_rename_file@root
 43293  015F0E  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 43294  015F10  519B               	movf	fat_rename_file@file_number& (0+255),w,b
 43295  015F12  ECBF  F0B6         	call	_fat_get_file_information
 43296  015F16  0100               	movlb	0	; () banked
 43297  015F18  6F9C               	movwf	fat_rename_file@return_code& (0+255),b
 43298                           
 43299                           ; BSR set to: 0
 43300                           ;fat16.c: 727: if(return_code!=0x00)
 43301  015F1A  519C               	movf	fat_rename_file@return_code& (0+255),w,b
 43302  015F1C  B4D8               	btfsc	status,2,c
 43303  015F1E  D002               	goto	l2909
 43304                           
 43305                           ; BSR set to: 0
 43306                           ;fat16.c: 728: {;fat16.c: 730: return return_code;
 43307  015F20  519C               	movf	fat_rename_file@return_code& (0+255),w,b
 43308                           
 43309                           ; BSR set to: 0
 43310  015F22  0012               	return	
 43311  015F24                     l2909:
 43312                           
 43313                           ; BSR set to: 0
 43314                           ;fat16.c: 731: };fat16.c: 734: for(cntr=0; cntr<8; ++cntr)
 43315                           
 43316                           ; BSR set to: 0
 43317  015F24  0E00               	movlw	0
 43318  015F26  6FBD               	movwf	fat_rename_file@cntr& (0+255),b
 43319  015F28                     l23885:
 43320                           
 43321                           ; BSR set to: 0
 43322  015F28  0E07               	movlw	7
 43323  015F2A  65BD               	cpfsgt	fat_rename_file@cntr& (0+255),b
 43324  015F2C  D001               	goto	l2911
 43325  015F2E  D014               	goto	u22090
 43326  015F30                     l2911:
 43327                           
 43328                           ; BSR set to: 0
 43329                           ;fat16.c: 735: {;fat16.c: 736: root.fileName[cntr] = name[cntr];
 43330                           
 43331                           ; BSR set to: 0
 43332  015F30  51BD               	movf	fat_rename_file@cntr& (0+255),w,b
 43333  015F32  0D01               	mullw	1
 43334  015F34  50F3               	movf	prodl,w,c
 43335  015F36  2597               	addwf	fat_rename_file@name& (0+255),w,b
 43336  015F38  6ED9               	movwf	fsr2l,c
 43337  015F3A  50F4               	movf	prodh,w,c
 43338  015F3C  2198               	addwfc	(fat_rename_file@name+1)& (0+255),w,b
 43339  015F3E  6EDA               	movwf	fsr2h,c
 43340  015F40  51BD               	movf	fat_rename_file@cntr& (0+255),w,b
 43341  015F42  0D01               	mullw	1
 43342  015F44  0E9D               	movlw	low fat_rename_file@root
 43343  015F46  24F3               	addwf	prodl,w,c
 43344  015F48  6EE1               	movwf	fsr1l,c
 43345  015F4A  0E00               	movlw	high fat_rename_file@root
 43346  015F4C  20F4               	addwfc	prodh,w,c
 43347  015F4E  6EE2               	movwf	fsr1h,c
 43348  015F50  CFDF FFE7          	movff	indf2,indf1
 43349                           
 43350                           ; BSR set to: 0
 43351  015F54  2BBD               	incf	fat_rename_file@cntr& (0+255),f,b
 43352  015F56  D7E8               	goto	l23885
 43353  015F58                     u22090:
 43354                           
 43355                           ; BSR set to: 0
 43356                           ;fat16.c: 737: };fat16.c: 740: for(cntr=0; cntr<3; ++cntr)
 43357                           
 43358                           ; BSR set to: 0
 43359  015F58  0E00               	movlw	0
 43360  015F5A  6FBD               	movwf	fat_rename_file@cntr& (0+255),b
 43361  015F5C                     l23897:
 43362                           
 43363                           ; BSR set to: 0
 43364  015F5C  0E02               	movlw	2
 43365  015F5E  65BD               	cpfsgt	fat_rename_file@cntr& (0+255),b
 43366  015F60  D001               	goto	l2913
 43367  015F62  D018               	goto	u22110
 43368  015F64                     l2913:
 43369                           
 43370                           ; BSR set to: 0
 43371                           ;fat16.c: 741: {;fat16.c: 742: root.fileExtension[cntr] = extension[cntr];
 43372                           
 43373                           ; BSR set to: 0
 43374  015F64  51BD               	movf	fat_rename_file@cntr& (0+255),w,b
 43375  015F66  0D01               	mullw	1
 43376  015F68  50F3               	movf	prodl,w,c
 43377  015F6A  2599               	addwf	fat_rename_file@extension& (0+255),w,b
 43378  015F6C  6ED9               	movwf	fsr2l,c
 43379  015F6E  50F4               	movf	prodh,w,c
 43380  015F70  219A               	addwfc	(fat_rename_file@extension+1)& (0+255),w,b
 43381  015F72  6EDA               	movwf	fsr2h,c
 43382  015F74  51BD               	movf	fat_rename_file@cntr& (0+255),w,b
 43383  015F76  0D01               	mullw	1
 43384  015F78  0E08               	movlw	8
 43385  015F7A  26F3               	addwf	prodl,f,c
 43386  015F7C  0E00               	movlw	0
 43387  015F7E  22F4               	addwfc	prodh,f,c
 43388  015F80  0E9D               	movlw	low fat_rename_file@root
 43389  015F82  24F3               	addwf	prodl,w,c
 43390  015F84  6EE1               	movwf	fsr1l,c
 43391  015F86  0E00               	movlw	high fat_rename_file@root
 43392  015F88  20F4               	addwfc	prodh,w,c
 43393  015F8A  6EE2               	movwf	fsr1h,c
 43394  015F8C  CFDF FFE7          	movff	indf2,indf1
 43395                           
 43396                           ; BSR set to: 0
 43397  015F90  2BBD               	incf	fat_rename_file@cntr& (0+255),f,b
 43398  015F92  D7E4               	goto	l23897
 43399  015F94                     u22110:
 43400                           
 43401                           ; BSR set to: 0
 43402                           ;fat16.c: 743: };fat16.c: 746: _write_root(file_number, &root);
 43403                           
 43404                           ; BSR set to: 0
 43405  015F94  0E9D               	movlw	low fat_rename_file@root
 43406  015F96  6F88               	movwf	__write_root@data& (0+255),b
 43407  015F98  0E00               	movlw	high fat_rename_file@root
 43408  015F9A  6F89               	movwf	(__write_root@data+1)& (0+255),b
 43409  015F9C  519B               	movf	fat_rename_file@file_number& (0+255),w,b
 43410  015F9E  EC04  F0C0         	call	__write_root
 43411                           
 43412                           ;fat16.c: 748: return 0x00;
 43413  015FA2  0E00               	movlw	0
 43414  015FA4  0012               	return	
 43415  015FA6                     __end_of_fat_rename_file:
 43416                           	opt stack 0
 43417                           tosu	equ	0xFFF
 43418                           tosh	equ	0xFFE
 43419                           tosl	equ	0xFFD
 43420                           pclath	equ	0xFFA
 43421                           tblptru	equ	0xFF8
 43422                           tblptrh	equ	0xFF7
 43423                           tblptrl	equ	0xFF6
 43424                           tablat	equ	0xFF5
 43425                           prodh	equ	0xFF4
 43426                           prodl	equ	0xFF3
 43427                           intcon	equ	0xFF2
 43428                           intcon2	equ	0xFF1
 43429                           intcon3	equ	0xFF0
 43430                           postinc0	equ	0xFEE
 43431                           wreg	equ	0xFE8
 43432                           indf1	equ	0xFE7
 43433                           postinc1	equ	0xFE6
 43434                           postdec1	equ	0xFE5
 43435                           plusw1	equ	0xFE3
 43436                           fsr1h	equ	0xFE2
 43437                           fsr1l	equ	0xFE1
 43438                           indf2	equ	0xFDF
 43439                           postinc2	equ	0xFDE
 43440                           postdec2	equ	0xFDD
 43441                           plusw2	equ	0xFDB
 43442                           fsr2h	equ	0xFDA
 43443                           fsr2l	equ	0xFD9
 43444                           status	equ	0xFD8
 43445                           
 43446 ;; *************** function __parse_file_modify *****************
 43447 ;; Defined at:
 43448 ;;		line 903 in file "api.c"
 43449 ;; Parameters:    Size  Location     Type
 43450 ;;  data            2  131[BANK0 ] PTR unsigned char 
 43451 ;;		 -> ReceivedDataBuffer(64), 
 43452 ;;  out_buffer      2  133[BANK0 ] PTR unsigned char 
 43453 ;;		 -> ToSendDataBuffer(64), 
 43454 ;;  out_idx_ptr     2  135[BANK0 ] PTR unsigned char 
 43455 ;;		 -> api_parse@out_idx(1), 
 43456 ;; Auto vars:     Size  Location     Type
 43457 ;;  start_byte      4  142[BANK0 ] unsigned long 
 43458 ;;  number_of_by    2  140[BANK0 ] unsigned int 
 43459 ;;  file_number     1  139[BANK0 ] unsigned char 
 43460 ;;  return_value    1  138[BANK0 ] unsigned char 
 43461 ;; Return value:  Size  Location     Type
 43462 ;;                  1    wreg      unsigned char 
 43463 ;; Registers used:
 43464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43465 ;; Tracked objects:
 43466 ;;		On entry : 0/0
 43467 ;;		On exit  : 0/0
 43468 ;;		Unchanged: 0/0
 43469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43470 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43471 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43472 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43473 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43474 ;;Total ram usage:       15 bytes
 43475 ;; Hardware stack levels used:    1
 43476 ;; Hardware stack levels required when called:   18
 43477 ;; This function calls:
 43478 ;;		_fat_modify_file
 43479 ;; This function is called by:
 43480 ;;		__parse_command_long
 43481 ;; This function uses a non-reentrant model
 43482 ;;
 43483                           
 43484                           	psect	text195
 43485  00F448                     __ptext195:
 43486                           	opt stack 0
 43487  00F448                     __parse_file_modify:
 43488                           	opt stack 9
 43489                           
 43490                           ;api.c: 905: uint16_t number_of_bytes;;api.c: 906: uint32_t start_byte;;api.c: 907: uint
      +                          8_t file_number;;api.c: 908: uint8_t return_value;;api.c: 911: if((data[0]!=COMMAND_FILE
      +                          _MODIFY) || (data[7]!=0x0F) || (data[8]!=0x9B))
 43491                           
 43492                           ;incstack = 0
 43493  00F448  C0E3  FFD9         	movff	__parse_file_modify@data,fsr2l
 43494  00F44C  C0E4  FFDA         	movff	__parse_file_modify@data+1,fsr2h
 43495  00F450  0E55               	movlw	85
 43496  00F452  18DE               	xorwf	postinc2,w,c
 43497  00F454  A4D8               	btfss	status,2,c
 43498  00F456  D015               	goto	u23090
 43499  00F458  0100               	movlb	0	; () banked
 43500  00F45A  EE20 F007          	lfsr	2,7
 43501  00F45E  51E3               	movf	__parse_file_modify@data& (0+255),w,b
 43502  00F460  26D9               	addwf	fsr2l,f,c
 43503  00F462  51E4               	movf	(__parse_file_modify@data+1)& (0+255),w,b
 43504  00F464  22DA               	addwfc	fsr2h,f,c
 43505  00F466  0E0F               	movlw	15
 43506  00F468  18DE               	xorwf	postinc2,w,c
 43507  00F46A  A4D8               	btfss	status,2,c
 43508  00F46C  D00A               	goto	u23090
 43509                           
 43510                           ; BSR set to: 0
 43511  00F46E  EE20 F008          	lfsr	2,8
 43512  00F472  51E3               	movf	__parse_file_modify@data& (0+255),w,b
 43513  00F474  26D9               	addwf	fsr2l,f,c
 43514  00F476  51E4               	movf	(__parse_file_modify@data+1)& (0+255),w,b
 43515  00F478  22DA               	addwfc	fsr2h,f,c
 43516  00F47A  0E9B               	movlw	155
 43517  00F47C  18DE               	xorwf	postinc2,w,c
 43518  00F47E  B4D8               	btfsc	status,2,c
 43519  00F480  D002               	goto	l3707
 43520  00F482                     u23090:
 43521                           
 43522                           ;api.c: 912: {;api.c: 914: return 65;
 43523                           
 43524                           ; BSR set to: 0
 43525  00F482  0E41               	movlw	65
 43526  00F484  0012               	return	
 43527  00F486                     l3707:
 43528                           
 43529                           ;api.c: 915: };api.c: 918: file_number = data[1];
 43530  00F486  0100               	movlb	0	; () banked
 43531  00F488  EE20 F001          	lfsr	2,1
 43532  00F48C  51E3               	movf	__parse_file_modify@data& (0+255),w,b
 43533  00F48E  26D9               	addwf	fsr2l,f,c
 43534  00F490  51E4               	movf	(__parse_file_modify@data+1)& (0+255),w,b
 43535  00F492  22DA               	addwfc	fsr2h,f,c
 43536  00F494  50DF               	movf	indf2,w,c
 43537  00F496  6FEB               	movwf	__parse_file_modify@file_number& (0+255),b
 43538                           
 43539                           ;api.c: 921: number_of_bytes = data[6];
 43540  00F498  EE20 F006          	lfsr	2,6
 43541  00F49C  51E3               	movf	__parse_file_modify@data& (0+255),w,b
 43542  00F49E  26D9               	addwf	fsr2l,f,c
 43543  00F4A0  51E4               	movf	(__parse_file_modify@data+1)& (0+255),w,b
 43544  00F4A2  22DA               	addwfc	fsr2h,f,c
 43545  00F4A4  50DF               	movf	indf2,w,c
 43546  00F4A6  6FE9               	movwf	??__parse_file_modify& (0+255),b
 43547  00F4A8  51E9               	movf	??__parse_file_modify& (0+255),w,b
 43548  00F4AA  6FEC               	movwf	__parse_file_modify@number_of_bytes& (0+255),b
 43549  00F4AC  6BED               	clrf	(__parse_file_modify@number_of_bytes+1)& (0+255),b
 43550                           
 43551                           ;api.c: 924: start_byte = data[2];
 43552  00F4AE  EE20 F002          	lfsr	2,2
 43553  00F4B2  51E3               	movf	__parse_file_modify@data& (0+255),w,b
 43554  00F4B4  26D9               	addwf	fsr2l,f,c
 43555  00F4B6  51E4               	movf	(__parse_file_modify@data+1)& (0+255),w,b
 43556  00F4B8  22DA               	addwfc	fsr2h,f,c
 43557  00F4BA  50DF               	movf	indf2,w,c
 43558  00F4BC  6FE9               	movwf	??__parse_file_modify& (0+255),b
 43559  00F4BE  51E9               	movf	??__parse_file_modify& (0+255),w,b
 43560  00F4C0  6FEE               	movwf	__parse_file_modify@start_byte& (0+255),b
 43561  00F4C2  6BEF               	clrf	(__parse_file_modify@start_byte+1)& (0+255),b
 43562  00F4C4  6BF0               	clrf	(__parse_file_modify@start_byte+2)& (0+255),b
 43563  00F4C6  6BF1               	clrf	(__parse_file_modify@start_byte+3)& (0+255),b
 43564                           
 43565                           ; BSR set to: 0
 43566                           ;api.c: 925: start_byte <<= 8;
 43567  00F4C8  C0F0  F0F1         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 43568  00F4CC  C0EF  F0F0         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 43569  00F4D0  C0EE  F0EF         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 43570  00F4D4  6BEE               	clrf	__parse_file_modify@start_byte& (0+255),b
 43571                           
 43572                           ; BSR set to: 0
 43573                           ;api.c: 926: start_byte |= data[3];
 43574  00F4D6  EE20 F003          	lfsr	2,3
 43575  00F4DA  51E3               	movf	__parse_file_modify@data& (0+255),w,b
 43576  00F4DC  26D9               	addwf	fsr2l,f,c
 43577  00F4DE  51E4               	movf	(__parse_file_modify@data+1)& (0+255),w,b
 43578  00F4E0  22DA               	addwfc	fsr2h,f,c
 43579  00F4E2  50DF               	movf	indf2,w,c
 43580  00F4E4  6FE9               	movwf	??__parse_file_modify& (0+255),b
 43581  00F4E6  51E9               	movf	??__parse_file_modify& (0+255),w,b
 43582  00F4E8  13EE               	iorwf	__parse_file_modify@start_byte& (0+255),f,b
 43583                           
 43584                           ;api.c: 927: start_byte <<= 8;
 43585  00F4EA  C0F0  F0F1         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 43586  00F4EE  C0EF  F0F0         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 43587  00F4F2  C0EE  F0EF         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 43588  00F4F6  6BEE               	clrf	__parse_file_modify@start_byte& (0+255),b
 43589                           
 43590                           ; BSR set to: 0
 43591                           ;api.c: 928: start_byte |= data[4];
 43592  00F4F8  EE20 F004          	lfsr	2,4
 43593  00F4FC  51E3               	movf	__parse_file_modify@data& (0+255),w,b
 43594  00F4FE  26D9               	addwf	fsr2l,f,c
 43595  00F500  51E4               	movf	(__parse_file_modify@data+1)& (0+255),w,b
 43596  00F502  22DA               	addwfc	fsr2h,f,c
 43597  00F504  50DF               	movf	indf2,w,c
 43598  00F506  6FE9               	movwf	??__parse_file_modify& (0+255),b
 43599  00F508  51E9               	movf	??__parse_file_modify& (0+255),w,b
 43600  00F50A  13EE               	iorwf	__parse_file_modify@start_byte& (0+255),f,b
 43601                           
 43602                           ; BSR set to: 0
 43603                           ;api.c: 929: start_byte <<= 8;
 43604  00F50C  C0F0  F0F1         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 43605  00F510  C0EF  F0F0         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 43606  00F514  C0EE  F0EF         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 43607  00F518  6BEE               	clrf	__parse_file_modify@start_byte& (0+255),b
 43608                           
 43609                           ;api.c: 930: start_byte |= data[5];
 43610  00F51A  EE20 F005          	lfsr	2,5
 43611  00F51E  51E3               	movf	__parse_file_modify@data& (0+255),w,b
 43612  00F520  26D9               	addwf	fsr2l,f,c
 43613  00F522  51E4               	movf	(__parse_file_modify@data+1)& (0+255),w,b
 43614  00F524  22DA               	addwfc	fsr2h,f,c
 43615  00F526  50DF               	movf	indf2,w,c
 43616  00F528  6FE9               	movwf	??__parse_file_modify& (0+255),b
 43617  00F52A  51E9               	movf	??__parse_file_modify& (0+255),w,b
 43618  00F52C  13EE               	iorwf	__parse_file_modify@start_byte& (0+255),f,b
 43619                           
 43620                           ; BSR set to: 0
 43621                           ;api.c: 932: return_value = fat_modify_file(file_number, start_byte, number_of_bytes, &d
      +                          ata[9]);
 43622  00F52E  C0EE  F0A1         	movff	__parse_file_modify@start_byte,fat_modify_file@start_byte
 43623  00F532  C0EF  F0A2         	movff	__parse_file_modify@start_byte+1,fat_modify_file@start_byte+1
 43624  00F536  C0F0  F0A3         	movff	__parse_file_modify@start_byte+2,fat_modify_file@start_byte+2
 43625  00F53A  C0F1  F0A4         	movff	__parse_file_modify@start_byte+3,fat_modify_file@start_byte+3
 43626  00F53E  C0EC  F0A5         	movff	__parse_file_modify@number_of_bytes,fat_modify_file@length
 43627  00F542  C0ED  F0A6         	movff	__parse_file_modify@number_of_bytes+1,fat_modify_file@length+1
 43628  00F546  0E09               	movlw	9
 43629  00F548  25E3               	addwf	__parse_file_modify@data& (0+255),w,b
 43630  00F54A  6FA7               	movwf	fat_modify_file@data& (0+255),b
 43631  00F54C  0E00               	movlw	0
 43632  00F54E  21E4               	addwfc	(__parse_file_modify@data+1)& (0+255),w,b
 43633  00F550  6FA8               	movwf	(fat_modify_file@data+1)& (0+255),b
 43634  00F552  51EB               	movf	__parse_file_modify@file_number& (0+255),w,b
 43635  00F554  EC02  F07F         	call	_fat_modify_file
 43636  00F558  0100               	movlb	0	; () banked
 43637  00F55A  6FEA               	movwf	__parse_file_modify@return_value& (0+255),b
 43638                           
 43639                           ; BSR set to: 0
 43640                           ;api.c: 935: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<56))
 43641  00F55C  C0E7  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 43642  00F560  C0E8  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 43643  00F564  50DF               	movf	indf2,w,c
 43644  00F566  B4D8               	btfsc	status,2,c
 43645  00F568  D0A9               	goto	l3711
 43646                           
 43647                           ; BSR set to: 0
 43648  00F56A  C0E7  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 43649  00F56E  C0E8  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 43650  00F572  0E38               	movlw	56
 43651  00F574  60DF               	cpfslt	indf2,c
 43652  00F576  D0A2               	goto	l3711
 43653                           
 43654                           ; BSR set to: 0
 43655                           ;api.c: 936: {;api.c: 937: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_MODIFY;
 43656  00F578  C0E7  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 43657  00F57C  C0E8  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 43658  00F580  CFDF F0E9          	movff	indf2,??__parse_file_modify
 43659  00F584  0E01               	movlw	1
 43660  00F586  26DF               	addwf	indf2,f,c
 43661  00F588  51E9               	movf	??__parse_file_modify& (0+255),w,b
 43662  00F58A  0D01               	mullw	1
 43663  00F58C  50F3               	movf	prodl,w,c
 43664  00F58E  25E5               	addwf	__parse_file_modify@out_buffer& (0+255),w,b
 43665  00F590  6ED9               	movwf	fsr2l,c
 43666  00F592  50F4               	movf	prodh,w,c
 43667  00F594  21E6               	addwfc	(__parse_file_modify@out_buffer+1)& (0+255),w,b
 43668  00F596  6EDA               	movwf	fsr2h,c
 43669  00F598  0E55               	movlw	85
 43670  00F59A  6EDF               	movwf	indf2,c
 43671                           
 43672                           ;api.c: 938: out_buffer[(*out_idx_ptr)++] = file_number;
 43673  00F59C  C0E7  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 43674  00F5A0  C0E8  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 43675  00F5A4  CFDF F0E9          	movff	indf2,??__parse_file_modify
 43676  00F5A8  0E01               	movlw	1
 43677  00F5AA  26DF               	addwf	indf2,f,c
 43678  00F5AC  51E9               	movf	??__parse_file_modify& (0+255),w,b
 43679  00F5AE  0D01               	mullw	1
 43680  00F5B0  50F3               	movf	prodl,w,c
 43681  00F5B2  25E5               	addwf	__parse_file_modify@out_buffer& (0+255),w,b
 43682  00F5B4  6ED9               	movwf	fsr2l,c
 43683  00F5B6  50F4               	movf	prodh,w,c
 43684  00F5B8  21E6               	addwfc	(__parse_file_modify@out_buffer+1)& (0+255),w,b
 43685  00F5BA  6EDA               	movwf	fsr2h,c
 43686  00F5BC  C0EB  FFDF         	movff	__parse_file_modify@file_number,indf2
 43687                           
 43688                           ;api.c: 939: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((((unsigned short)(((start
      +                          _byte)>>16)&0xFFFF)))>>8)&0xFF));
 43689  00F5C0  C0E7  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 43690  00F5C4  C0E8  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 43691  00F5C8  CFDF F0E9          	movff	indf2,??__parse_file_modify
 43692  00F5CC  0E01               	movlw	1
 43693  00F5CE  26DF               	addwf	indf2,f,c
 43694  00F5D0  51E9               	movf	??__parse_file_modify& (0+255),w,b
 43695  00F5D2  0D01               	mullw	1
 43696  00F5D4  50F3               	movf	prodl,w,c
 43697  00F5D6  25E5               	addwf	__parse_file_modify@out_buffer& (0+255),w,b
 43698  00F5D8  6ED9               	movwf	fsr2l,c
 43699  00F5DA  50F4               	movf	prodh,w,c
 43700  00F5DC  21E6               	addwfc	(__parse_file_modify@out_buffer+1)& (0+255),w,b
 43701  00F5DE  6EDA               	movwf	fsr2h,c
 43702  00F5E0  51F1               	movf	(__parse_file_modify@start_byte+3)& (0+255),w,b
 43703  00F5E2  6EDF               	movwf	indf2,c
 43704                           
 43705                           ;api.c: 940: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((((unsigned short)(((start_
      +                          byte)>>16)&0xFFFF)))&0xFF));
 43706  00F5E4  C0E7  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 43707  00F5E8  C0E8  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 43708  00F5EC  CFDF F0E9          	movff	indf2,??__parse_file_modify
 43709  00F5F0  0E01               	movlw	1
 43710  00F5F2  26DF               	addwf	indf2,f,c
 43711  00F5F4  51E9               	movf	??__parse_file_modify& (0+255),w,b
 43712  00F5F6  0D01               	mullw	1
 43713  00F5F8  50F3               	movf	prodl,w,c
 43714  00F5FA  25E5               	addwf	__parse_file_modify@out_buffer& (0+255),w,b
 43715  00F5FC  6ED9               	movwf	fsr2l,c
 43716  00F5FE  50F4               	movf	prodh,w,c
 43717  00F600  21E6               	addwfc	(__parse_file_modify@out_buffer+1)& (0+255),w,b
 43718  00F602  6EDA               	movwf	fsr2h,c
 43719  00F604  C0F0  FFDF         	movff	__parse_file_modify@start_byte+2,indf2
 43720                           
 43721                           ;api.c: 941: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((((unsigned short)((start_
      +                          byte)&0xFFFF)))>>8)&0xFF));
 43722  00F608  C0E7  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 43723  00F60C  C0E8  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 43724  00F610  CFDF F0E9          	movff	indf2,??__parse_file_modify
 43725  00F614  0E01               	movlw	1
 43726  00F616  26DF               	addwf	indf2,f,c
 43727  00F618  51E9               	movf	??__parse_file_modify& (0+255),w,b
 43728  00F61A  0D01               	mullw	1
 43729  00F61C  50F3               	movf	prodl,w,c
 43730  00F61E  25E5               	addwf	__parse_file_modify@out_buffer& (0+255),w,b
 43731  00F620  6ED9               	movwf	fsr2l,c
 43732  00F622  50F4               	movf	prodh,w,c
 43733  00F624  21E6               	addwfc	(__parse_file_modify@out_buffer+1)& (0+255),w,b
 43734  00F626  6EDA               	movwf	fsr2h,c
 43735  00F628  51EF               	movf	(__parse_file_modify@start_byte+1)& (0+255),w,b
 43736  00F62A  6EDF               	movwf	indf2,c
 43737                           
 43738                           ;api.c: 942: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((((unsigned short)((start_b
      +                          yte)&0xFFFF)))&0xFF));
 43739  00F62C  C0E7  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 43740  00F630  C0E8  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 43741  00F634  CFDF F0E9          	movff	indf2,??__parse_file_modify
 43742  00F638  0E01               	movlw	1
 43743  00F63A  26DF               	addwf	indf2,f,c
 43744  00F63C  51E9               	movf	??__parse_file_modify& (0+255),w,b
 43745  00F63E  0D01               	mullw	1
 43746  00F640  50F3               	movf	prodl,w,c
 43747  00F642  25E5               	addwf	__parse_file_modify@out_buffer& (0+255),w,b
 43748  00F644  6ED9               	movwf	fsr2l,c
 43749  00F646  50F4               	movf	prodh,w,c
 43750  00F648  21E6               	addwfc	(__parse_file_modify@out_buffer+1)& (0+255),w,b
 43751  00F64A  6EDA               	movwf	fsr2h,c
 43752  00F64C  C0EE  FFDF         	movff	__parse_file_modify@start_byte,indf2
 43753                           
 43754                           ;api.c: 943: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((number_of_bytes)>>8)&0xFF
      +                          ));
 43755  00F650  C0E7  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 43756  00F654  C0E8  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 43757  00F658  CFDF F0E9          	movff	indf2,??__parse_file_modify
 43758  00F65C  0E01               	movlw	1
 43759  00F65E  26DF               	addwf	indf2,f,c
 43760  00F660  51E9               	movf	??__parse_file_modify& (0+255),w,b
 43761  00F662  0D01               	mullw	1
 43762  00F664  50F3               	movf	prodl,w,c
 43763  00F666  25E5               	addwf	__parse_file_modify@out_buffer& (0+255),w,b
 43764  00F668  6ED9               	movwf	fsr2l,c
 43765  00F66A  50F4               	movf	prodh,w,c
 43766  00F66C  21E6               	addwfc	(__parse_file_modify@out_buffer+1)& (0+255),w,b
 43767  00F66E  6EDA               	movwf	fsr2h,c
 43768  00F670  51ED               	movf	(__parse_file_modify@number_of_bytes+1)& (0+255),w,b
 43769  00F672  6EDF               	movwf	indf2,c
 43770                           
 43771                           ;api.c: 944: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((number_of_bytes)&0xFF));
 43772  00F674  C0E7  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 43773  00F678  C0E8  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 43774  00F67C  CFDF F0E9          	movff	indf2,??__parse_file_modify
 43775  00F680  0E01               	movlw	1
 43776  00F682  26DF               	addwf	indf2,f,c
 43777  00F684  51E9               	movf	??__parse_file_modify& (0+255),w,b
 43778  00F686  0D01               	mullw	1
 43779  00F688  50F3               	movf	prodl,w,c
 43780  00F68A  25E5               	addwf	__parse_file_modify@out_buffer& (0+255),w,b
 43781  00F68C  6ED9               	movwf	fsr2l,c
 43782  00F68E  50F4               	movf	prodh,w,c
 43783  00F690  21E6               	addwfc	(__parse_file_modify@out_buffer+1)& (0+255),w,b
 43784  00F692  6EDA               	movwf	fsr2h,c
 43785  00F694  C0EC  FFDF         	movff	__parse_file_modify@number_of_bytes,indf2
 43786                           
 43787                           ;api.c: 945: out_buffer[(*out_idx_ptr)++] = return_value;
 43788  00F698  C0E7  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 43789  00F69C  C0E8  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 43790  00F6A0  CFDF F0E9          	movff	indf2,??__parse_file_modify
 43791  00F6A4  0E01               	movlw	1
 43792  00F6A6  26DF               	addwf	indf2,f,c
 43793  00F6A8  51E9               	movf	??__parse_file_modify& (0+255),w,b
 43794  00F6AA  0D01               	mullw	1
 43795  00F6AC  50F3               	movf	prodl,w,c
 43796  00F6AE  25E5               	addwf	__parse_file_modify@out_buffer& (0+255),w,b
 43797  00F6B0  6ED9               	movwf	fsr2l,c
 43798  00F6B2  50F4               	movf	prodh,w,c
 43799  00F6B4  21E6               	addwfc	(__parse_file_modify@out_buffer+1)& (0+255),w,b
 43800  00F6B6  6EDA               	movwf	fsr2h,c
 43801  00F6B8  C0EA  FFDF         	movff	__parse_file_modify@return_value,indf2
 43802  00F6BC                     l3711:
 43803                           
 43804                           ; BSR set to: 0
 43805                           ;api.c: 946: };api.c: 948: return number_of_bytes + 9;
 43806                           
 43807                           ; BSR set to: 0
 43808  00F6BC  51EC               	movf	__parse_file_modify@number_of_bytes& (0+255),w,b
 43809  00F6BE  0F09               	addlw	9
 43810  00F6C0  0012               	return	
 43811  00F6C2                     __end_of__parse_file_modify:
 43812                           	opt stack 0
 43813                           tosu	equ	0xFFF
 43814                           tosh	equ	0xFFE
 43815                           tosl	equ	0xFFD
 43816                           pclath	equ	0xFFA
 43817                           tblptru	equ	0xFF8
 43818                           tblptrh	equ	0xFF7
 43819                           tblptrl	equ	0xFF6
 43820                           tablat	equ	0xFF5
 43821                           prodh	equ	0xFF4
 43822                           prodl	equ	0xFF3
 43823                           intcon	equ	0xFF2
 43824                           intcon2	equ	0xFF1
 43825                           intcon3	equ	0xFF0
 43826                           postinc0	equ	0xFEE
 43827                           wreg	equ	0xFE8
 43828                           indf1	equ	0xFE7
 43829                           postinc1	equ	0xFE6
 43830                           postdec1	equ	0xFE5
 43831                           plusw1	equ	0xFE3
 43832                           fsr1h	equ	0xFE2
 43833                           fsr1l	equ	0xFE1
 43834                           indf2	equ	0xFDF
 43835                           postinc2	equ	0xFDE
 43836                           postdec2	equ	0xFDD
 43837                           plusw2	equ	0xFDB
 43838                           fsr2h	equ	0xFDA
 43839                           fsr2l	equ	0xFD9
 43840                           status	equ	0xFD8
 43841                           
 43842 ;; *************** function __parse_file_delete *****************
 43843 ;; Defined at:
 43844 ;;		line 776 in file "api.c"
 43845 ;; Parameters:    Size  Location     Type
 43846 ;;  data            2   79[BANK0 ] PTR unsigned char 
 43847 ;;		 -> ReceivedDataBuffer(64), 
 43848 ;;  out_buffer      2   81[BANK0 ] PTR unsigned char 
 43849 ;;		 -> ToSendDataBuffer(64), 
 43850 ;;  out_idx_ptr     2   83[BANK0 ] PTR unsigned char 
 43851 ;;		 -> api_parse@out_idx(1), 
 43852 ;; Auto vars:     Size  Location     Type
 43853 ;;  file_number     1   87[BANK0 ] unsigned char 
 43854 ;;  return_value    1   86[BANK0 ] unsigned char 
 43855 ;; Return value:  Size  Location     Type
 43856 ;;                  1    wreg      unsigned char 
 43857 ;; Registers used:
 43858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43859 ;; Tracked objects:
 43860 ;;		On entry : 0/0
 43861 ;;		On exit  : 0/0
 43862 ;;		Unchanged: 0/0
 43863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43864 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43865 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43866 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43867 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43868 ;;Total ram usage:        9 bytes
 43869 ;; Hardware stack levels used:    1
 43870 ;; Hardware stack levels required when called:   18
 43871 ;; This function calls:
 43872 ;;		_fat_delete_file
 43873 ;; This function is called by:
 43874 ;;		__parse_command_long
 43875 ;; This function uses a non-reentrant model
 43876 ;;
 43877                           
 43878                           	psect	text196
 43879  01453E                     __ptext196:
 43880                           	opt stack 0
 43881  01453E                     __parse_file_delete:
 43882                           	opt stack 9
 43883                           
 43884                           ;api.c: 780: uint8_t return_value;;api.c: 781: uint8_t file_number;;api.c: 783: if((data
      +                          [0]!=COMMAND_FILE_DELETE) || (data[2]!=0x66) || (data[3]!=0xA0))
 43885                           
 43886                           ;incstack = 0
 43887  01453E  C0AF  FFD9         	movff	__parse_file_delete@data,fsr2l
 43888  014542  C0B0  FFDA         	movff	__parse_file_delete@data+1,fsr2h
 43889  014546  0E51               	movlw	81
 43890  014548  18DE               	xorwf	postinc2,w,c
 43891  01454A  A4D8               	btfss	status,2,c
 43892  01454C  D015               	goto	u22890
 43893  01454E  0100               	movlb	0	; () banked
 43894  014550  EE20 F002          	lfsr	2,2
 43895  014554  51AF               	movf	__parse_file_delete@data& (0+255),w,b
 43896  014556  26D9               	addwf	fsr2l,f,c
 43897  014558  51B0               	movf	(__parse_file_delete@data+1)& (0+255),w,b
 43898  01455A  22DA               	addwfc	fsr2h,f,c
 43899  01455C  0E66               	movlw	102
 43900  01455E  18DE               	xorwf	postinc2,w,c
 43901  014560  A4D8               	btfss	status,2,c
 43902  014562  D00A               	goto	u22890
 43903                           
 43904                           ; BSR set to: 0
 43905  014564  EE20 F003          	lfsr	2,3
 43906  014568  51AF               	movf	__parse_file_delete@data& (0+255),w,b
 43907  01456A  26D9               	addwf	fsr2l,f,c
 43908  01456C  51B0               	movf	(__parse_file_delete@data+1)& (0+255),w,b
 43909  01456E  22DA               	addwfc	fsr2h,f,c
 43910  014570  0EA0               	movlw	160
 43911  014572  18DE               	xorwf	postinc2,w,c
 43912  014574  B4D8               	btfsc	status,2,c
 43913  014576  D002               	goto	l3679
 43914  014578                     u22890:
 43915                           
 43916                           ;api.c: 784: {;api.c: 785: return 4;
 43917                           
 43918                           ; BSR set to: 0
 43919  014578  0E04               	movlw	4
 43920  01457A  0012               	return	
 43921  01457C                     l3679:
 43922                           
 43923                           ;api.c: 786: };api.c: 789: file_number = data[1];
 43924  01457C  0100               	movlb	0	; () banked
 43925  01457E  EE20 F001          	lfsr	2,1
 43926  014582  51AF               	movf	__parse_file_delete@data& (0+255),w,b
 43927  014584  26D9               	addwf	fsr2l,f,c
 43928  014586  51B0               	movf	(__parse_file_delete@data+1)& (0+255),w,b
 43929  014588  22DA               	addwfc	fsr2h,f,c
 43930  01458A  50DF               	movf	indf2,w,c
 43931  01458C  6FB7               	movwf	__parse_file_delete@file_number& (0+255),b
 43932                           
 43933                           ; BSR set to: 0
 43934                           ;api.c: 792: return_value = fat_delete_file(file_number);
 43935  01458E  51B7               	movf	__parse_file_delete@file_number& (0+255),w,b
 43936  014590  ECEA  F0BE         	call	_fat_delete_file
 43937  014594  0100               	movlb	0	; () banked
 43938  014596  6FB6               	movwf	__parse_file_delete@return_value& (0+255),b
 43939                           
 43940                           ; BSR set to: 0
 43941                           ;api.c: 795: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 43942  014598  C0B3  FFD9         	movff	__parse_file_delete@out_idx_ptr,fsr2l
 43943  01459C  C0B4  FFDA         	movff	__parse_file_delete@out_idx_ptr+1,fsr2h
 43944  0145A0  50DF               	movf	indf2,w,c
 43945  0145A2  B4D8               	btfsc	status,2,c
 43946  0145A4  D03D               	goto	l3683
 43947                           
 43948                           ; BSR set to: 0
 43949  0145A6  C0B3  FFD9         	movff	__parse_file_delete@out_idx_ptr,fsr2l
 43950  0145AA  C0B4  FFDA         	movff	__parse_file_delete@out_idx_ptr+1,fsr2h
 43951  0145AE  0E3E               	movlw	62
 43952  0145B0  60DF               	cpfslt	indf2,c
 43953  0145B2  D036               	goto	l3683
 43954                           
 43955                           ; BSR set to: 0
 43956                           ;api.c: 796: {;api.c: 797: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_DELETE;
 43957  0145B4  C0B3  FFD9         	movff	__parse_file_delete@out_idx_ptr,fsr2l
 43958  0145B8  C0B4  FFDA         	movff	__parse_file_delete@out_idx_ptr+1,fsr2h
 43959  0145BC  CFDF F0B5          	movff	indf2,??__parse_file_delete
 43960  0145C0  0E01               	movlw	1
 43961  0145C2  26DF               	addwf	indf2,f,c
 43962  0145C4  51B5               	movf	??__parse_file_delete& (0+255),w,b
 43963  0145C6  0D01               	mullw	1
 43964  0145C8  50F3               	movf	prodl,w,c
 43965  0145CA  25B1               	addwf	__parse_file_delete@out_buffer& (0+255),w,b
 43966  0145CC  6ED9               	movwf	fsr2l,c
 43967  0145CE  50F4               	movf	prodh,w,c
 43968  0145D0  21B2               	addwfc	(__parse_file_delete@out_buffer+1)& (0+255),w,b
 43969  0145D2  6EDA               	movwf	fsr2h,c
 43970  0145D4  0E51               	movlw	81
 43971  0145D6  6EDF               	movwf	indf2,c
 43972                           
 43973                           ;api.c: 798: out_buffer[(*out_idx_ptr)++] = file_number;
 43974  0145D8  C0B3  FFD9         	movff	__parse_file_delete@out_idx_ptr,fsr2l
 43975  0145DC  C0B4  FFDA         	movff	__parse_file_delete@out_idx_ptr+1,fsr2h
 43976  0145E0  CFDF F0B5          	movff	indf2,??__parse_file_delete
 43977  0145E4  0E01               	movlw	1
 43978  0145E6  26DF               	addwf	indf2,f,c
 43979  0145E8  51B5               	movf	??__parse_file_delete& (0+255),w,b
 43980  0145EA  0D01               	mullw	1
 43981  0145EC  50F3               	movf	prodl,w,c
 43982  0145EE  25B1               	addwf	__parse_file_delete@out_buffer& (0+255),w,b
 43983  0145F0  6ED9               	movwf	fsr2l,c
 43984  0145F2  50F4               	movf	prodh,w,c
 43985  0145F4  21B2               	addwfc	(__parse_file_delete@out_buffer+1)& (0+255),w,b
 43986  0145F6  6EDA               	movwf	fsr2h,c
 43987  0145F8  C0B7  FFDF         	movff	__parse_file_delete@file_number,indf2
 43988                           
 43989                           ;api.c: 799: out_buffer[(*out_idx_ptr)++] = return_value;
 43990  0145FC  C0B3  FFD9         	movff	__parse_file_delete@out_idx_ptr,fsr2l
 43991  014600  C0B4  FFDA         	movff	__parse_file_delete@out_idx_ptr+1,fsr2h
 43992  014604  CFDF F0B5          	movff	indf2,??__parse_file_delete
 43993  014608  0E01               	movlw	1
 43994  01460A  26DF               	addwf	indf2,f,c
 43995  01460C  51B5               	movf	??__parse_file_delete& (0+255),w,b
 43996  01460E  0D01               	mullw	1
 43997  014610  50F3               	movf	prodl,w,c
 43998  014612  25B1               	addwf	__parse_file_delete@out_buffer& (0+255),w,b
 43999  014614  6ED9               	movwf	fsr2l,c
 44000  014616  50F4               	movf	prodh,w,c
 44001  014618  21B2               	addwfc	(__parse_file_delete@out_buffer+1)& (0+255),w,b
 44002  01461A  6EDA               	movwf	fsr2h,c
 44003  01461C  C0B6  FFDF         	movff	__parse_file_delete@return_value,indf2
 44004  014620                     l3683:
 44005                           
 44006                           ; BSR set to: 0
 44007                           ;api.c: 800: };api.c: 802: return 4;
 44008                           
 44009                           ; BSR set to: 0
 44010  014620  0E04               	movlw	4
 44011  014622  0012               	return	
 44012  014624                     __end_of__parse_file_delete:
 44013                           	opt stack 0
 44014                           tosu	equ	0xFFF
 44015                           tosh	equ	0xFFE
 44016                           tosl	equ	0xFFD
 44017                           pclath	equ	0xFFA
 44018                           tblptru	equ	0xFF8
 44019                           tblptrh	equ	0xFF7
 44020                           tblptrl	equ	0xFF6
 44021                           tablat	equ	0xFF5
 44022                           prodh	equ	0xFF4
 44023                           prodl	equ	0xFF3
 44024                           intcon	equ	0xFF2
 44025                           intcon2	equ	0xFF1
 44026                           intcon3	equ	0xFF0
 44027                           postinc0	equ	0xFEE
 44028                           wreg	equ	0xFE8
 44029                           indf1	equ	0xFE7
 44030                           postinc1	equ	0xFE6
 44031                           postdec1	equ	0xFE5
 44032                           plusw1	equ	0xFE3
 44033                           fsr1h	equ	0xFE2
 44034                           fsr1l	equ	0xFE1
 44035                           indf2	equ	0xFDF
 44036                           postinc2	equ	0xFDE
 44037                           postdec2	equ	0xFDD
 44038                           plusw2	equ	0xFDB
 44039                           fsr2h	equ	0xFDA
 44040                           fsr2l	equ	0xFD9
 44041                           status	equ	0xFD8
 44042                           
 44043 ;; *************** function _fat_delete_file *****************
 44044 ;; Defined at:
 44045 ;;		line 647 in file "fat16.c"
 44046 ;; Parameters:    Size  Location     Type
 44047 ;;  file_number     1    wreg     unsigned char 
 44048 ;; Auto vars:     Size  Location     Type
 44049 ;;  file_number     1   78[BANK0 ] unsigned char 
 44050 ;;  first_cluste    2   76[BANK0 ] unsigned int 
 44051 ;; Return value:  Size  Location     Type
 44052 ;;                  1    wreg      unsigned char 
 44053 ;; Registers used:
 44054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 44055 ;; Tracked objects:
 44056 ;;		On entry : 0/0
 44057 ;;		On exit  : 0/0
 44058 ;;		Unchanged: 0/0
 44059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44061 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44063 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44064 ;;Total ram usage:        3 bytes
 44065 ;; Hardware stack levels used:    1
 44066 ;; Hardware stack levels required when called:   17
 44067 ;; This function calls:
 44068 ;;		__delete_root
 44069 ;;		__get_first_cluster
 44070 ;;		__make_cluster_chain
 44071 ;;		__root_is_available
 44072 ;; This function is called by:
 44073 ;;		__parse_file_delete
 44074 ;; This function uses a non-reentrant model
 44075 ;;
 44076                           
 44077                           	psect	text197
 44078  017DD4                     __ptext197:
 44079                           	opt stack 0
 44080  017DD4                     _fat_delete_file:
 44081                           	opt stack 9
 44082                           
 44083                           ;incstack = 0
 44084                           ;fat_delete_file@file_number stored from wreg
 44085  017DD4  0100               	movlb	0	; () banked
 44086  017DD6  6FAE               	movwf	fat_delete_file@file_number& (0+255),b
 44087                           
 44088                           ;fat16.c: 649: uint16_t first_cluster;;fat16.c: 652: if(file_number>=64)
 44089  017DD8  0E3F               	movlw	63
 44090  017DDA  0100               	movlb	0	; () banked
 44091  017DDC  65AE               	cpfsgt	fat_delete_file@file_number& (0+255),b
 44092  017DDE  D002               	goto	l2898
 44093                           
 44094                           ; BSR set to: 0
 44095                           ;fat16.c: 653: {;fat16.c: 655: return 0xFF;
 44096  017DE0  0EFF               	movlw	255
 44097                           
 44098                           ; BSR set to: 0
 44099  017DE2  0012               	return	
 44100  017DE4                     l2898:
 44101                           
 44102                           ; BSR set to: 0
 44103                           ;fat16.c: 656: };fat16.c: 659: if(_root_is_available(file_number))
 44104                           
 44105                           ; BSR set to: 0
 44106  017DE4  51AE               	movf	fat_delete_file@file_number& (0+255),w,b
 44107  017DE6  EC95  F0B8         	call	__root_is_available
 44108  017DEA  0900               	iorlw	0
 44109  017DEC  B4D8               	btfsc	status,2,c
 44110  017DEE  D002               	goto	l2900
 44111                           
 44112                           ;fat16.c: 660: {;fat16.c: 662: return 0xFE;
 44113  017DF0  0EFE               	movlw	254
 44114  017DF2  0012               	return	
 44115  017DF4                     l2900:
 44116                           
 44117                           ;fat16.c: 663: };fat16.c: 666: first_cluster = _get_first_cluster(file_number);
 44118  017DF4  0100               	movlb	0	; () banked
 44119  017DF6  51AE               	movf	fat_delete_file@file_number& (0+255),w,b
 44120  017DF8  EC82  F0BB         	call	__get_first_cluster
 44121  017DFC  C08F  F0AC         	movff	?__get_first_cluster,fat_delete_file@first_cluster
 44122  017E00  C090  F0AD         	movff	?__get_first_cluster+1,fat_delete_file@first_cluster+1
 44123                           
 44124                           ;fat16.c: 669: _make_cluster_chain(first_cluster, 0);
 44125  017E04  C0AC  F095         	movff	fat_delete_file@first_cluster,__make_cluster_chain@first_cluster
 44126  017E08  C0AD  F096         	movff	fat_delete_file@first_cluster+1,__make_cluster_chain@first_cluster+1
 44127  017E0C  0E00               	movlw	0
 44128  017E0E  0100               	movlb	0	; () banked
 44129  017E10  6F98               	movwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),b
 44130  017E12  0E00               	movlw	0
 44131  017E14  6F97               	movwf	__make_cluster_chain@number_of_clusters& (0+255),b
 44132  017E16  EC6A  F077         	call	__make_cluster_chain	;wreg free
 44133                           
 44134                           ;fat16.c: 673: _delete_root(file_number);
 44135  017E1A  0100               	movlb	0	; () banked
 44136  017E1C  51AE               	movf	fat_delete_file@file_number& (0+255),w,b
 44137  017E1E  EC8D  F0BF         	call	__delete_root
 44138                           
 44139                           ;fat16.c: 675: return 0x00;
 44140  017E22  0E00               	movlw	0
 44141  017E24  0012               	return	
 44142  017E26                     __end_of_fat_delete_file:
 44143                           	opt stack 0
 44144                           tosu	equ	0xFFF
 44145                           tosh	equ	0xFFE
 44146                           tosl	equ	0xFFD
 44147                           pclath	equ	0xFFA
 44148                           tblptru	equ	0xFF8
 44149                           tblptrh	equ	0xFF7
 44150                           tblptrl	equ	0xFF6
 44151                           tablat	equ	0xFF5
 44152                           prodh	equ	0xFF4
 44153                           prodl	equ	0xFF3
 44154                           intcon	equ	0xFF2
 44155                           intcon2	equ	0xFF1
 44156                           intcon3	equ	0xFF0
 44157                           postinc0	equ	0xFEE
 44158                           wreg	equ	0xFE8
 44159                           indf1	equ	0xFE7
 44160                           postinc1	equ	0xFE6
 44161                           postdec1	equ	0xFE5
 44162                           plusw1	equ	0xFE3
 44163                           fsr1h	equ	0xFE2
 44164                           fsr1l	equ	0xFE1
 44165                           indf2	equ	0xFDF
 44166                           postinc2	equ	0xFDE
 44167                           postdec2	equ	0xFDD
 44168                           plusw2	equ	0xFDB
 44169                           fsr2h	equ	0xFDA
 44170                           fsr2l	equ	0xFD9
 44171                           status	equ	0xFD8
 44172                           
 44173 ;; *************** function __delete_root *****************
 44174 ;; Defined at:
 44175 ;;		line 486 in file "fat16.c"
 44176 ;; Parameters:    Size  Location     Type
 44177 ;;  file_number     1    wreg     unsigned char 
 44178 ;; Auto vars:     Size  Location     Type
 44179 ;;  file_number     1   45[BANK0 ] unsigned char 
 44180 ;;  offset          2   42[BANK0 ] unsigned int 
 44181 ;;  sector          2   40[BANK0 ] unsigned int 
 44182 ;;  deleted_valu    1   44[BANK0 ] unsigned char 
 44183 ;; Return value:  Size  Location     Type
 44184 ;;                  1    wreg      void 
 44185 ;; Registers used:
 44186 ;;		wreg, status,2, status,0, cstack
 44187 ;; Tracked objects:
 44188 ;;		On entry : 0/0
 44189 ;;		On exit  : 0/0
 44190 ;;		Unchanged: 0/0
 44191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44193 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44195 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44196 ;;Total ram usage:        6 bytes
 44197 ;; Hardware stack levels used:    1
 44198 ;; Hardware stack levels required when called:   15
 44199 ;; This function calls:
 44200 ;;		__offset_from_file_number
 44201 ;;		__sector_from_file_number
 44202 ;;		_flash_partial_write
 44203 ;; This function is called by:
 44204 ;;		_fat_delete_file
 44205 ;; This function uses a non-reentrant model
 44206 ;;
 44207                           
 44208                           	psect	text198
 44209  017F1A                     __ptext198:
 44210                           	opt stack 0
 44211  017F1A                     __delete_root:
 44212                           	opt stack 10
 44213                           
 44214                           ;incstack = 0
 44215                           ;__delete_root@file_number stored from wreg
 44216  017F1A  0100               	movlb	0	; () banked
 44217  017F1C  6F8D               	movwf	__delete_root@file_number& (0+255),b
 44218                           
 44219                           ;fat16.c: 488: uint16_t sector;;fat16.c: 489: uint16_t offset;;fat16.c: 490: uint8_t del
      +                          eted_value;;fat16.c: 493: sector = _sector_from_file_number(file_number);
 44220  017F1E  0100               	movlb	0	; () banked
 44221  017F20  518D               	movf	__delete_root@file_number& (0+255),w,b
 44222  017F22  EC7E  F0C3         	call	__sector_from_file_number
 44223  017F26  C060  F088         	movff	?__sector_from_file_number,__delete_root@sector
 44224  017F2A  C061  F089         	movff	?__sector_from_file_number+1,__delete_root@sector+1
 44225                           
 44226                           ;fat16.c: 494: offset = _offset_from_file_number(file_number);
 44227  017F2E  0100               	movlb	0	; () banked
 44228  017F30  518D               	movf	__delete_root@file_number& (0+255),w,b
 44229  017F32  ECFA  F0C4         	call	__offset_from_file_number
 44230  017F36  C060  F08A         	movff	?__offset_from_file_number,__delete_root@offset
 44231  017F3A  C061  F08B         	movff	?__offset_from_file_number+1,__delete_root@offset+1
 44232                           
 44233                           ;fat16.c: 497: deleted_value = 0xE5;
 44234  017F3E  0EE5               	movlw	229
 44235  017F40  0100               	movlb	0	; () banked
 44236  017F42  6F8C               	movwf	__delete_root@deleted_value& (0+255),b
 44237                           
 44238                           ; BSR set to: 0
 44239                           ;fat16.c: 498: flash_partial_write(sector, offset, 1, &deleted_value);
 44240  017F44  C088  F07F         	movff	__delete_root@sector,flash_partial_write@page
 44241  017F48  C089  F080         	movff	__delete_root@sector+1,flash_partial_write@page+1
 44242  017F4C  C08A  F081         	movff	__delete_root@offset,flash_partial_write@start
 44243  017F50  C08B  F082         	movff	__delete_root@offset+1,flash_partial_write@start+1
 44244  017F54  0E00               	movlw	0
 44245  017F56  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 44246  017F58  0E01               	movlw	1
 44247  017F5A  6F83               	movwf	flash_partial_write@length& (0+255),b
 44248  017F5C  0E8C               	movlw	low __delete_root@deleted_value
 44249  017F5E  6F85               	movwf	flash_partial_write@data& (0+255),b
 44250  017F60  0E00               	movlw	high __delete_root@deleted_value
 44251  017F62  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 44252  017F64  EC76  F0B7         	call	_flash_partial_write	;wreg free
 44253  017F68  0012               	return		;funcret
 44254  017F6A                     __end_of__delete_root:
 44255                           	opt stack 0
 44256                           tosu	equ	0xFFF
 44257                           tosh	equ	0xFFE
 44258                           tosl	equ	0xFFD
 44259                           pclath	equ	0xFFA
 44260                           tblptru	equ	0xFF8
 44261                           tblptrh	equ	0xFF7
 44262                           tblptrl	equ	0xFF6
 44263                           tablat	equ	0xFF5
 44264                           prodh	equ	0xFF4
 44265                           prodl	equ	0xFF3
 44266                           intcon	equ	0xFF2
 44267                           intcon2	equ	0xFF1
 44268                           intcon3	equ	0xFF0
 44269                           postinc0	equ	0xFEE
 44270                           wreg	equ	0xFE8
 44271                           indf1	equ	0xFE7
 44272                           postinc1	equ	0xFE6
 44273                           postdec1	equ	0xFE5
 44274                           plusw1	equ	0xFE3
 44275                           fsr1h	equ	0xFE2
 44276                           fsr1l	equ	0xFE1
 44277                           indf2	equ	0xFDF
 44278                           postinc2	equ	0xFDE
 44279                           postdec2	equ	0xFDD
 44280                           plusw2	equ	0xFDB
 44281                           fsr2h	equ	0xFDA
 44282                           fsr2l	equ	0xFD9
 44283                           status	equ	0xFD8
 44284                           
 44285 ;; *************** function __parse_file_create *****************
 44286 ;; Defined at:
 44287 ;;		line 805 in file "api.c"
 44288 ;; Parameters:    Size  Location     Type
 44289 ;;  data            2  125[BANK0 ] PTR unsigned char 
 44290 ;;		 -> ReceivedDataBuffer(64), 
 44291 ;;  out_buffer      2  127[BANK0 ] PTR unsigned char 
 44292 ;;		 -> ToSendDataBuffer(64), 
 44293 ;;  out_idx_ptr     2  129[BANK0 ] PTR unsigned char 
 44294 ;;		 -> api_parse@out_idx(1), 
 44295 ;; Auto vars:     Size  Location     Type
 44296 ;;  file_size       4  133[BANK0 ] unsigned long 
 44297 ;;  file_number     1  132[BANK0 ] unsigned char 
 44298 ;; Return value:  Size  Location     Type
 44299 ;;                  1    wreg      unsigned char 
 44300 ;; Registers used:
 44301 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44302 ;; Tracked objects:
 44303 ;;		On entry : 0/0
 44304 ;;		On exit  : 0/0
 44305 ;;		Unchanged: 0/0
 44306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44307 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44308 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44309 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44310 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44311 ;;Total ram usage:       12 bytes
 44312 ;; Hardware stack levels used:    1
 44313 ;; Hardware stack levels required when called:   18
 44314 ;; This function calls:
 44315 ;;		_fat_create_file
 44316 ;; This function is called by:
 44317 ;;		__parse_command_long
 44318 ;; This function uses a non-reentrant model
 44319 ;;
 44320                           
 44321                           	psect	text199
 44322  0121B0                     __ptext199:
 44323                           	opt stack 0
 44324  0121B0                     __parse_file_create:
 44325                           	opt stack 9
 44326                           
 44327                           ;api.c: 808: uint8_t file_number;;api.c: 810: uint32_t file_size;;api.c: 811: if((data[0
      +                          ]!=COMMAND_FILE_CREATE) || (data[16]!=0xBD) || (data[17]!=0x4F))
 44328                           
 44329                           ;incstack = 0
 44330  0121B0  C0DD  FFD9         	movff	__parse_file_create@data,fsr2l
 44331  0121B4  C0DE  FFDA         	movff	__parse_file_create@data+1,fsr2h
 44332  0121B8  0E52               	movlw	82
 44333  0121BA  18DE               	xorwf	postinc2,w,c
 44334  0121BC  A4D8               	btfss	status,2,c
 44335  0121BE  D015               	goto	u22940
 44336  0121C0  0100               	movlb	0	; () banked
 44337  0121C2  EE20 F010          	lfsr	2,16
 44338  0121C6  51DD               	movf	__parse_file_create@data& (0+255),w,b
 44339  0121C8  26D9               	addwf	fsr2l,f,c
 44340  0121CA  51DE               	movf	(__parse_file_create@data+1)& (0+255),w,b
 44341  0121CC  22DA               	addwfc	fsr2h,f,c
 44342  0121CE  0EBD               	movlw	189
 44343  0121D0  18DE               	xorwf	postinc2,w,c
 44344  0121D2  A4D8               	btfss	status,2,c
 44345  0121D4  D00A               	goto	u22940
 44346                           
 44347                           ; BSR set to: 0
 44348  0121D6  EE20 F011          	lfsr	2,17
 44349  0121DA  51DD               	movf	__parse_file_create@data& (0+255),w,b
 44350  0121DC  26D9               	addwf	fsr2l,f,c
 44351  0121DE  51DE               	movf	(__parse_file_create@data+1)& (0+255),w,b
 44352  0121E0  22DA               	addwfc	fsr2h,f,c
 44353  0121E2  0E4F               	movlw	79
 44354  0121E4  18DE               	xorwf	postinc2,w,c
 44355  0121E6  B4D8               	btfsc	status,2,c
 44356  0121E8  D002               	goto	l3686
 44357  0121EA                     u22940:
 44358                           
 44359                           ;api.c: 812: {;api.c: 813: return 18;
 44360                           
 44361                           ; BSR set to: 0
 44362  0121EA  0E12               	movlw	18
 44363  0121EC  0012               	return	
 44364  0121EE                     l3686:
 44365                           
 44366                           ;api.c: 814: };api.c: 817: file_size = data[12];
 44367  0121EE  0100               	movlb	0	; () banked
 44368  0121F0  EE20 F00C          	lfsr	2,12
 44369  0121F4  51DD               	movf	__parse_file_create@data& (0+255),w,b
 44370  0121F6  26D9               	addwf	fsr2l,f,c
 44371  0121F8  51DE               	movf	(__parse_file_create@data+1)& (0+255),w,b
 44372  0121FA  22DA               	addwfc	fsr2h,f,c
 44373  0121FC  50DF               	movf	indf2,w,c
 44374  0121FE  6FE3               	movwf	??__parse_file_create& (0+255),b
 44375  012200  51E3               	movf	??__parse_file_create& (0+255),w,b
 44376  012202  6FE5               	movwf	__parse_file_create@file_size& (0+255),b
 44377  012204  6BE6               	clrf	(__parse_file_create@file_size+1)& (0+255),b
 44378  012206  6BE7               	clrf	(__parse_file_create@file_size+2)& (0+255),b
 44379  012208  6BE8               	clrf	(__parse_file_create@file_size+3)& (0+255),b
 44380                           
 44381                           ; BSR set to: 0
 44382                           ;api.c: 818: file_size <<= 8;
 44383  01220A  C0E7  F0E8         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 44384  01220E  C0E6  F0E7         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 44385  012212  C0E5  F0E6         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 44386  012216  6BE5               	clrf	__parse_file_create@file_size& (0+255),b
 44387                           
 44388                           ; BSR set to: 0
 44389                           ;api.c: 819: file_size |= data[13];
 44390  012218  EE20 F00D          	lfsr	2,13
 44391  01221C  51DD               	movf	__parse_file_create@data& (0+255),w,b
 44392  01221E  26D9               	addwf	fsr2l,f,c
 44393  012220  51DE               	movf	(__parse_file_create@data+1)& (0+255),w,b
 44394  012222  22DA               	addwfc	fsr2h,f,c
 44395  012224  50DF               	movf	indf2,w,c
 44396  012226  6FE3               	movwf	??__parse_file_create& (0+255),b
 44397  012228  51E3               	movf	??__parse_file_create& (0+255),w,b
 44398  01222A  13E5               	iorwf	__parse_file_create@file_size& (0+255),f,b
 44399                           
 44400                           ;api.c: 820: file_size <<= 8;
 44401  01222C  C0E7  F0E8         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 44402  012230  C0E6  F0E7         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 44403  012234  C0E5  F0E6         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 44404  012238  6BE5               	clrf	__parse_file_create@file_size& (0+255),b
 44405                           
 44406                           ; BSR set to: 0
 44407                           ;api.c: 821: file_size |= data[14];
 44408  01223A  EE20 F00E          	lfsr	2,14
 44409  01223E  51DD               	movf	__parse_file_create@data& (0+255),w,b
 44410  012240  26D9               	addwf	fsr2l,f,c
 44411  012242  51DE               	movf	(__parse_file_create@data+1)& (0+255),w,b
 44412  012244  22DA               	addwfc	fsr2h,f,c
 44413  012246  50DF               	movf	indf2,w,c
 44414  012248  6FE3               	movwf	??__parse_file_create& (0+255),b
 44415  01224A  51E3               	movf	??__parse_file_create& (0+255),w,b
 44416  01224C  13E5               	iorwf	__parse_file_create@file_size& (0+255),f,b
 44417                           
 44418                           ; BSR set to: 0
 44419                           ;api.c: 822: file_size <<= 8;
 44420  01224E  C0E7  F0E8         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 44421  012252  C0E6  F0E7         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 44422  012256  C0E5  F0E6         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 44423  01225A  6BE5               	clrf	__parse_file_create@file_size& (0+255),b
 44424                           
 44425                           ;api.c: 823: file_size |= data[15];
 44426  01225C  EE20 F00F          	lfsr	2,15
 44427  012260  51DD               	movf	__parse_file_create@data& (0+255),w,b
 44428  012262  26D9               	addwf	fsr2l,f,c
 44429  012264  51DE               	movf	(__parse_file_create@data+1)& (0+255),w,b
 44430  012266  22DA               	addwfc	fsr2h,f,c
 44431  012268  50DF               	movf	indf2,w,c
 44432  01226A  6FE3               	movwf	??__parse_file_create& (0+255),b
 44433  01226C  51E3               	movf	??__parse_file_create& (0+255),w,b
 44434  01226E  13E5               	iorwf	__parse_file_create@file_size& (0+255),f,b
 44435                           
 44436                           ; BSR set to: 0
 44437                           ;api.c: 826: file_number = fat_create_file(&data[1], &data[9], file_size);
 44438  012270  0E01               	movlw	1
 44439  012272  25DD               	addwf	__parse_file_create@data& (0+255),w,b
 44440  012274  6FAC               	movwf	fat_create_file@name& (0+255),b
 44441  012276  0E00               	movlw	0
 44442  012278  21DE               	addwfc	(__parse_file_create@data+1)& (0+255),w,b
 44443  01227A  6FAD               	movwf	(fat_create_file@name+1)& (0+255),b
 44444  01227C  0E09               	movlw	9
 44445  01227E  25DD               	addwf	__parse_file_create@data& (0+255),w,b
 44446  012280  6FAE               	movwf	fat_create_file@extension& (0+255),b
 44447  012282  0E00               	movlw	0
 44448  012284  21DE               	addwfc	(__parse_file_create@data+1)& (0+255),w,b
 44449  012286  6FAF               	movwf	(fat_create_file@extension+1)& (0+255),b
 44450  012288  C0E5  F0B0         	movff	__parse_file_create@file_size,fat_create_file@size
 44451  01228C  C0E6  F0B1         	movff	__parse_file_create@file_size+1,fat_create_file@size+1
 44452  012290  C0E7  F0B2         	movff	__parse_file_create@file_size+2,fat_create_file@size+2
 44453  012294  C0E8  F0B3         	movff	__parse_file_create@file_size+3,fat_create_file@size+3
 44454  012298  ECB2  F094         	call	_fat_create_file	;wreg free
 44455  01229C  0100               	movlb	0	; () banked
 44456  01229E  6FE4               	movwf	__parse_file_create@file_number& (0+255),b
 44457                           
 44458                           ; BSR set to: 0
 44459                           ;api.c: 829: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 44460  0122A0  C0E1  FFD9         	movff	__parse_file_create@out_idx_ptr,fsr2l
 44461  0122A4  C0E2  FFDA         	movff	__parse_file_create@out_idx_ptr+1,fsr2h
 44462  0122A8  50DF               	movf	indf2,w,c
 44463  0122AA  B4D8               	btfsc	status,2,c
 44464  0122AC  D02B               	goto	l3690
 44465                           
 44466                           ; BSR set to: 0
 44467  0122AE  C0E1  FFD9         	movff	__parse_file_create@out_idx_ptr,fsr2l
 44468  0122B2  C0E2  FFDA         	movff	__parse_file_create@out_idx_ptr+1,fsr2h
 44469  0122B6  0E3F               	movlw	63
 44470  0122B8  60DF               	cpfslt	indf2,c
 44471  0122BA  D024               	goto	l3690
 44472                           
 44473                           ; BSR set to: 0
 44474                           ;api.c: 830: {;api.c: 831: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_CREATE;
 44475  0122BC  C0E1  FFD9         	movff	__parse_file_create@out_idx_ptr,fsr2l
 44476  0122C0  C0E2  FFDA         	movff	__parse_file_create@out_idx_ptr+1,fsr2h
 44477  0122C4  CFDF F0E3          	movff	indf2,??__parse_file_create
 44478  0122C8  0E01               	movlw	1
 44479  0122CA  26DF               	addwf	indf2,f,c
 44480  0122CC  51E3               	movf	??__parse_file_create& (0+255),w,b
 44481  0122CE  0D01               	mullw	1
 44482  0122D0  50F3               	movf	prodl,w,c
 44483  0122D2  25DF               	addwf	__parse_file_create@out_buffer& (0+255),w,b
 44484  0122D4  6ED9               	movwf	fsr2l,c
 44485  0122D6  50F4               	movf	prodh,w,c
 44486  0122D8  21E0               	addwfc	(__parse_file_create@out_buffer+1)& (0+255),w,b
 44487  0122DA  6EDA               	movwf	fsr2h,c
 44488  0122DC  0E52               	movlw	82
 44489  0122DE  6EDF               	movwf	indf2,c
 44490                           
 44491                           ;api.c: 832: out_buffer[(*out_idx_ptr)++] = file_number;
 44492  0122E0  C0E1  FFD9         	movff	__parse_file_create@out_idx_ptr,fsr2l
 44493  0122E4  C0E2  FFDA         	movff	__parse_file_create@out_idx_ptr+1,fsr2h
 44494  0122E8  CFDF F0E3          	movff	indf2,??__parse_file_create
 44495  0122EC  0E01               	movlw	1
 44496  0122EE  26DF               	addwf	indf2,f,c
 44497  0122F0  51E3               	movf	??__parse_file_create& (0+255),w,b
 44498  0122F2  0D01               	mullw	1
 44499  0122F4  50F3               	movf	prodl,w,c
 44500  0122F6  25DF               	addwf	__parse_file_create@out_buffer& (0+255),w,b
 44501  0122F8  6ED9               	movwf	fsr2l,c
 44502  0122FA  50F4               	movf	prodh,w,c
 44503  0122FC  21E0               	addwfc	(__parse_file_create@out_buffer+1)& (0+255),w,b
 44504  0122FE  6EDA               	movwf	fsr2h,c
 44505  012300  C0E4  FFDF         	movff	__parse_file_create@file_number,indf2
 44506  012304                     l3690:
 44507                           
 44508                           ; BSR set to: 0
 44509                           ;api.c: 833: };api.c: 835: return 18;
 44510                           
 44511                           ; BSR set to: 0
 44512  012304  0E12               	movlw	18
 44513  012306  0012               	return	
 44514  012308                     __end_of__parse_file_create:
 44515                           	opt stack 0
 44516                           tosu	equ	0xFFF
 44517                           tosh	equ	0xFFE
 44518                           tosl	equ	0xFFD
 44519                           pclath	equ	0xFFA
 44520                           tblptru	equ	0xFF8
 44521                           tblptrh	equ	0xFF7
 44522                           tblptrl	equ	0xFF6
 44523                           tablat	equ	0xFF5
 44524                           prodh	equ	0xFF4
 44525                           prodl	equ	0xFF3
 44526                           intcon	equ	0xFF2
 44527                           intcon2	equ	0xFF1
 44528                           intcon3	equ	0xFF0
 44529                           postinc0	equ	0xFEE
 44530                           wreg	equ	0xFE8
 44531                           indf1	equ	0xFE7
 44532                           postinc1	equ	0xFE6
 44533                           postdec1	equ	0xFE5
 44534                           plusw1	equ	0xFE3
 44535                           fsr1h	equ	0xFE2
 44536                           fsr1l	equ	0xFE1
 44537                           indf2	equ	0xFDF
 44538                           postinc2	equ	0xFDE
 44539                           postdec2	equ	0xFDD
 44540                           plusw2	equ	0xFDB
 44541                           fsr2h	equ	0xFDA
 44542                           fsr2l	equ	0xFD9
 44543                           status	equ	0xFD8
 44544                           
 44545 ;; *************** function __parse_file_copy *****************
 44546 ;; Defined at:
 44547 ;;		line 1082 in file "api.c"
 44548 ;; Parameters:    Size  Location     Type
 44549 ;;  data            2  144[BANK0 ] PTR unsigned char 
 44550 ;;		 -> ReceivedDataBuffer(64), 
 44551 ;;  out_buffer      2  146[BANK0 ] PTR unsigned char 
 44552 ;;		 -> ToSendDataBuffer(64), 
 44553 ;;  out_idx_ptr     2  148[BANK0 ] PTR unsigned char 
 44554 ;;		 -> api_parse@out_idx(1), 
 44555 ;; Auto vars:     Size  Location     Type
 44556 ;;  file_number     1  152[BANK0 ] unsigned char 
 44557 ;;  return_value    1  151[BANK0 ] unsigned char 
 44558 ;; Return value:  Size  Location     Type
 44559 ;;                  1    wreg      unsigned char 
 44560 ;; Registers used:
 44561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44562 ;; Tracked objects:
 44563 ;;		On entry : 0/0
 44564 ;;		On exit  : 0/0
 44565 ;;		Unchanged: 0/0
 44566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44567 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44568 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44569 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44570 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44571 ;;Total ram usage:        9 bytes
 44572 ;; Hardware stack levels used:    1
 44573 ;; Hardware stack levels required when called:   19
 44574 ;; This function calls:
 44575 ;;		_fat_copy_file
 44576 ;; This function is called by:
 44577 ;;		__parse_command_long
 44578 ;; This function uses a non-reentrant model
 44579 ;;
 44580                           
 44581                           	psect	text200
 44582  013ABE                     __ptext200:
 44583                           	opt stack 0
 44584  013ABE                     __parse_file_copy:
 44585                           	opt stack 8
 44586                           
 44587                           ;api.c: 1086: uint8_t file_number;;api.c: 1087: uint8_t return_value;;api.c: 1089: if((d
      +                          ata[0]!=COMMAND_FILE_COPY) || (data[13]!=0x54) || (data[14]!=0xD9))
 44588                           
 44589                           ;incstack = 0
 44590  013ABE  C0F0  FFD9         	movff	__parse_file_copy@data,fsr2l
 44591  013AC2  C0F1  FFDA         	movff	__parse_file_copy@data+1,fsr2h
 44592  013AC6  0E5A               	movlw	90
 44593  013AC8  18DE               	xorwf	postinc2,w,c
 44594  013ACA  A4D8               	btfss	status,2,c
 44595  013ACC  D015               	goto	u23340
 44596  013ACE  0100               	movlb	0	; () banked
 44597  013AD0  EE20 F00D          	lfsr	2,13
 44598  013AD4  51F0               	movf	__parse_file_copy@data& (0+255),w,b
 44599  013AD6  26D9               	addwf	fsr2l,f,c
 44600  013AD8  51F1               	movf	(__parse_file_copy@data+1)& (0+255),w,b
 44601  013ADA  22DA               	addwfc	fsr2h,f,c
 44602  013ADC  0E54               	movlw	84
 44603  013ADE  18DE               	xorwf	postinc2,w,c
 44604  013AE0  A4D8               	btfss	status,2,c
 44605  013AE2  D00A               	goto	u23340
 44606                           
 44607                           ; BSR set to: 0
 44608  013AE4  EE20 F00E          	lfsr	2,14
 44609  013AE8  51F0               	movf	__parse_file_copy@data& (0+255),w,b
 44610  013AEA  26D9               	addwf	fsr2l,f,c
 44611  013AEC  51F1               	movf	(__parse_file_copy@data+1)& (0+255),w,b
 44612  013AEE  22DA               	addwfc	fsr2h,f,c
 44613  013AF0  0ED9               	movlw	217
 44614  013AF2  18DE               	xorwf	postinc2,w,c
 44615  013AF4  B4D8               	btfsc	status,2,c
 44616  013AF6  D002               	goto	l3742
 44617  013AF8                     u23340:
 44618                           
 44619                           ;api.c: 1090: {;api.c: 1091: return 15;
 44620                           
 44621                           ; BSR set to: 0
 44622  013AF8  0E0F               	movlw	15
 44623  013AFA  0012               	return	
 44624  013AFC                     l3742:
 44625                           
 44626                           ;api.c: 1092: };api.c: 1095: file_number = data[1];
 44627  013AFC  0100               	movlb	0	; () banked
 44628  013AFE  EE20 F001          	lfsr	2,1
 44629  013B02  51F0               	movf	__parse_file_copy@data& (0+255),w,b
 44630  013B04  26D9               	addwf	fsr2l,f,c
 44631  013B06  51F1               	movf	(__parse_file_copy@data+1)& (0+255),w,b
 44632  013B08  22DA               	addwfc	fsr2h,f,c
 44633  013B0A  50DF               	movf	indf2,w,c
 44634  013B0C  6FF8               	movwf	__parse_file_copy@file_number& (0+255),b
 44635                           
 44636                           ; BSR set to: 0
 44637                           ;api.c: 1098: return_value = fat_copy_file(file_number, &data[2], &data[10]);
 44638  013B0E  0E02               	movlw	2
 44639  013B10  25F0               	addwf	__parse_file_copy@data& (0+255),w,b
 44640  013B12  6FDD               	movwf	fat_copy_file@name& (0+255),b
 44641  013B14  0E00               	movlw	0
 44642  013B16  21F1               	addwfc	(__parse_file_copy@data+1)& (0+255),w,b
 44643  013B18  6FDE               	movwf	(fat_copy_file@name+1)& (0+255),b
 44644  013B1A  0E0A               	movlw	10
 44645  013B1C  25F0               	addwf	__parse_file_copy@data& (0+255),w,b
 44646  013B1E  6FDF               	movwf	fat_copy_file@extension& (0+255),b
 44647  013B20  0E00               	movlw	0
 44648  013B22  21F1               	addwfc	(__parse_file_copy@data+1)& (0+255),w,b
 44649  013B24  6FE0               	movwf	(fat_copy_file@extension+1)& (0+255),b
 44650  013B26  51F8               	movf	__parse_file_copy@file_number& (0+255),w,b
 44651  013B28  EC4D  F0A0         	call	_fat_copy_file
 44652  013B2C  0100               	movlb	0	; () banked
 44653  013B2E  6FF7               	movwf	__parse_file_copy@return_value& (0+255),b
 44654                           
 44655                           ; BSR set to: 0
 44656                           ;api.c: 1101: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 44657  013B30  C0F4  FFD9         	movff	__parse_file_copy@out_idx_ptr,fsr2l
 44658  013B34  C0F5  FFDA         	movff	__parse_file_copy@out_idx_ptr+1,fsr2h
 44659  013B38  50DF               	movf	indf2,w,c
 44660  013B3A  B4D8               	btfsc	status,2,c
 44661  013B3C  D03D               	goto	l3746
 44662                           
 44663                           ; BSR set to: 0
 44664  013B3E  C0F4  FFD9         	movff	__parse_file_copy@out_idx_ptr,fsr2l
 44665  013B42  C0F5  FFDA         	movff	__parse_file_copy@out_idx_ptr+1,fsr2h
 44666  013B46  0E3E               	movlw	62
 44667  013B48  60DF               	cpfslt	indf2,c
 44668  013B4A  D036               	goto	l3746
 44669                           
 44670                           ; BSR set to: 0
 44671                           ;api.c: 1102: {;api.c: 1103: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_COPY;
 44672  013B4C  C0F4  FFD9         	movff	__parse_file_copy@out_idx_ptr,fsr2l
 44673  013B50  C0F5  FFDA         	movff	__parse_file_copy@out_idx_ptr+1,fsr2h
 44674  013B54  CFDF F0F6          	movff	indf2,??__parse_file_copy
 44675  013B58  0E01               	movlw	1
 44676  013B5A  26DF               	addwf	indf2,f,c
 44677  013B5C  51F6               	movf	??__parse_file_copy& (0+255),w,b
 44678  013B5E  0D01               	mullw	1
 44679  013B60  50F3               	movf	prodl,w,c
 44680  013B62  25F2               	addwf	__parse_file_copy@out_buffer& (0+255),w,b
 44681  013B64  6ED9               	movwf	fsr2l,c
 44682  013B66  50F4               	movf	prodh,w,c
 44683  013B68  21F3               	addwfc	(__parse_file_copy@out_buffer+1)& (0+255),w,b
 44684  013B6A  6EDA               	movwf	fsr2h,c
 44685  013B6C  0E5A               	movlw	90
 44686  013B6E  6EDF               	movwf	indf2,c
 44687                           
 44688                           ;api.c: 1104: out_buffer[(*out_idx_ptr)++] = file_number;
 44689  013B70  C0F4  FFD9         	movff	__parse_file_copy@out_idx_ptr,fsr2l
 44690  013B74  C0F5  FFDA         	movff	__parse_file_copy@out_idx_ptr+1,fsr2h
 44691  013B78  CFDF F0F6          	movff	indf2,??__parse_file_copy
 44692  013B7C  0E01               	movlw	1
 44693  013B7E  26DF               	addwf	indf2,f,c
 44694  013B80  51F6               	movf	??__parse_file_copy& (0+255),w,b
 44695  013B82  0D01               	mullw	1
 44696  013B84  50F3               	movf	prodl,w,c
 44697  013B86  25F2               	addwf	__parse_file_copy@out_buffer& (0+255),w,b
 44698  013B88  6ED9               	movwf	fsr2l,c
 44699  013B8A  50F4               	movf	prodh,w,c
 44700  013B8C  21F3               	addwfc	(__parse_file_copy@out_buffer+1)& (0+255),w,b
 44701  013B8E  6EDA               	movwf	fsr2h,c
 44702  013B90  C0F8  FFDF         	movff	__parse_file_copy@file_number,indf2
 44703                           
 44704                           ;api.c: 1105: out_buffer[(*out_idx_ptr)++] = return_value;
 44705  013B94  C0F4  FFD9         	movff	__parse_file_copy@out_idx_ptr,fsr2l
 44706  013B98  C0F5  FFDA         	movff	__parse_file_copy@out_idx_ptr+1,fsr2h
 44707  013B9C  CFDF F0F6          	movff	indf2,??__parse_file_copy
 44708  013BA0  0E01               	movlw	1
 44709  013BA2  26DF               	addwf	indf2,f,c
 44710  013BA4  51F6               	movf	??__parse_file_copy& (0+255),w,b
 44711  013BA6  0D01               	mullw	1
 44712  013BA8  50F3               	movf	prodl,w,c
 44713  013BAA  25F2               	addwf	__parse_file_copy@out_buffer& (0+255),w,b
 44714  013BAC  6ED9               	movwf	fsr2l,c
 44715  013BAE  50F4               	movf	prodh,w,c
 44716  013BB0  21F3               	addwfc	(__parse_file_copy@out_buffer+1)& (0+255),w,b
 44717  013BB2  6EDA               	movwf	fsr2h,c
 44718  013BB4  C0F7  FFDF         	movff	__parse_file_copy@return_value,indf2
 44719  013BB8                     l3746:
 44720                           
 44721                           ; BSR set to: 0
 44722                           ;api.c: 1106: };api.c: 1108: return 15;
 44723                           
 44724                           ; BSR set to: 0
 44725  013BB8  0E0F               	movlw	15
 44726  013BBA  0012               	return	
 44727  013BBC                     __end_of__parse_file_copy:
 44728                           	opt stack 0
 44729                           tosu	equ	0xFFF
 44730                           tosh	equ	0xFFE
 44731                           tosl	equ	0xFFD
 44732                           pclath	equ	0xFFA
 44733                           tblptru	equ	0xFF8
 44734                           tblptrh	equ	0xFF7
 44735                           tblptrl	equ	0xFF6
 44736                           tablat	equ	0xFF5
 44737                           prodh	equ	0xFF4
 44738                           prodl	equ	0xFF3
 44739                           intcon	equ	0xFF2
 44740                           intcon2	equ	0xFF1
 44741                           intcon3	equ	0xFF0
 44742                           postinc0	equ	0xFEE
 44743                           wreg	equ	0xFE8
 44744                           indf1	equ	0xFE7
 44745                           postinc1	equ	0xFE6
 44746                           postdec1	equ	0xFE5
 44747                           plusw1	equ	0xFE3
 44748                           fsr1h	equ	0xFE2
 44749                           fsr1l	equ	0xFE1
 44750                           indf2	equ	0xFDF
 44751                           postinc2	equ	0xFDE
 44752                           postdec2	equ	0xFDD
 44753                           plusw2	equ	0xFDB
 44754                           fsr2h	equ	0xFDA
 44755                           fsr2l	equ	0xFD9
 44756                           status	equ	0xFD8
 44757                           
 44758 ;; *************** function _fat_copy_file *****************
 44759 ;; Defined at:
 44760 ;;		line 854 in file "fat16.c"
 44761 ;; Parameters:    Size  Location     Type
 44762 ;;  file_number     1    wreg     unsigned char 
 44763 ;;  name            2  125[BANK0 ] PTR unsigned char 
 44764 ;;		 -> ReceivedDataBuffer(64), 
 44765 ;;  extension       2  127[BANK0 ] PTR unsigned char 
 44766 ;;		 -> ReceivedDataBuffer(64), 
 44767 ;; Auto vars:     Size  Location     Type
 44768 ;;  file_number     1  143[BANK0 ] unsigned char 
 44769 ;;  file_size       4  135[BANK0 ] unsigned long 
 44770 ;;  sector          2  141[BANK0 ] unsigned int 
 44771 ;;  number_of_cl    2  133[BANK0 ] unsigned int 
 44772 ;;  return_value    1  140[BANK0 ] unsigned char 
 44773 ;;  new_file_num    1  139[BANK0 ] unsigned char 
 44774 ;; Return value:  Size  Location     Type
 44775 ;;                  1    wreg      unsigned char 
 44776 ;; Registers used:
 44777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44778 ;; Tracked objects:
 44779 ;;		On entry : 0/0
 44780 ;;		On exit  : 0/0
 44781 ;;		Unchanged: 0/0
 44782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44783 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44784 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44785 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44786 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44787 ;;Total ram usage:       19 bytes
 44788 ;; Hardware stack levels used:    1
 44789 ;; Hardware stack levels required when called:   18
 44790 ;; This function calls:
 44791 ;;		__root_is_available
 44792 ;;		_fat_copy_sector_to_buffer
 44793 ;;		_fat_create_file
 44794 ;;		_fat_get_file_size
 44795 ;;		_fat_write_sector_from_buffer
 44796 ;; This function is called by:
 44797 ;;		__parse_file_copy
 44798 ;; This function uses a non-reentrant model
 44799 ;;
 44800                           
 44801                           	psect	text201
 44802  01409A                     __ptext201:
 44803                           	opt stack 0
 44804  01409A                     _fat_copy_file:
 44805                           	opt stack 8
 44806                           
 44807                           ;incstack = 0
 44808                           ;fat_copy_file@file_number stored from wreg
 44809  01409A  0100               	movlb	0	; () banked
 44810  01409C  6FEF               	movwf	fat_copy_file@file_number& (0+255),b
 44811                           
 44812                           ;fat16.c: 856: uint32_t file_size;;fat16.c: 857: uint8_t new_file_number;;fat16.c: 858: 
      +                          uint16_t number_of_clusters;;fat16.c: 859: uint16_t sector;;fat16.c: 860: uint8_t return
      +                          _value;;fat16.c: 863: if(file_number>=64)
 44813  01409E  0E3F               	movlw	63
 44814  0140A0  0100               	movlb	0	; () banked
 44815  0140A2  65EF               	cpfsgt	fat_copy_file@file_number& (0+255),b
 44816  0140A4  D002               	goto	l2932
 44817                           
 44818                           ; BSR set to: 0
 44819                           ;fat16.c: 864: {;fat16.c: 866: return 0xFF;
 44820  0140A6  0EFF               	movlw	255
 44821                           
 44822                           ; BSR set to: 0
 44823  0140A8  0012               	return	
 44824  0140AA                     l2932:
 44825                           
 44826                           ; BSR set to: 0
 44827                           ;fat16.c: 867: };fat16.c: 870: if(_root_is_available(file_number))
 44828                           
 44829                           ; BSR set to: 0
 44830  0140AA  51EF               	movf	fat_copy_file@file_number& (0+255),w,b
 44831  0140AC  EC95  F0B8         	call	__root_is_available
 44832  0140B0  0900               	iorlw	0
 44833  0140B2  B4D8               	btfsc	status,2,c
 44834  0140B4  D002               	goto	l2934
 44835                           
 44836                           ;fat16.c: 871: {;fat16.c: 873: return 0xFE;
 44837  0140B6  0EFE               	movlw	254
 44838  0140B8  0012               	return	
 44839  0140BA                     l2934:
 44840                           
 44841                           ;fat16.c: 874: };fat16.c: 877: file_size = fat_get_file_size(file_number);
 44842  0140BA  0100               	movlb	0	; () banked
 44843  0140BC  51EF               	movf	fat_copy_file@file_number& (0+255),w,b
 44844  0140BE  ECFC  F0B6         	call	_fat_get_file_size
 44845  0140C2  C095  F0E7         	movff	?_fat_get_file_size,fat_copy_file@file_size
 44846  0140C6  C096  F0E8         	movff	?_fat_get_file_size+1,fat_copy_file@file_size+1
 44847  0140CA  C097  F0E9         	movff	?_fat_get_file_size+2,fat_copy_file@file_size+2
 44848  0140CE  C098  F0EA         	movff	?_fat_get_file_size+3,fat_copy_file@file_size+3
 44849                           
 44850                           ;fat16.c: 880: new_file_number = fat_create_file(name, extension, file_size);
 44851  0140D2  C0DD  F0AC         	movff	fat_copy_file@name,fat_create_file@name
 44852  0140D6  C0DE  F0AD         	movff	fat_copy_file@name+1,fat_create_file@name+1
 44853  0140DA  C0DF  F0AE         	movff	fat_copy_file@extension,fat_create_file@extension
 44854  0140DE  C0E0  F0AF         	movff	fat_copy_file@extension+1,fat_create_file@extension+1
 44855  0140E2  C0E7  F0B0         	movff	fat_copy_file@file_size,fat_create_file@size
 44856  0140E6  C0E8  F0B1         	movff	fat_copy_file@file_size+1,fat_create_file@size+1
 44857  0140EA  C0E9  F0B2         	movff	fat_copy_file@file_size+2,fat_create_file@size+2
 44858  0140EE  C0EA  F0B3         	movff	fat_copy_file@file_size+3,fat_create_file@size+3
 44859  0140F2  ECB2  F094         	call	_fat_create_file	;wreg free
 44860  0140F6  0100               	movlb	0	; () banked
 44861  0140F8  6FEB               	movwf	fat_copy_file@new_file_number& (0+255),b
 44862                           
 44863                           ; BSR set to: 0
 44864                           ;fat16.c: 883: if(new_file_number>=64)
 44865  0140FA  0E3F               	movlw	63
 44866  0140FC  65EB               	cpfsgt	fat_copy_file@new_file_number& (0+255),b
 44867  0140FE  D002               	goto	l2935
 44868                           
 44869                           ; BSR set to: 0
 44870                           ;fat16.c: 884: {;fat16.c: 886: return 0xFD;
 44871  014100  0EFD               	movlw	253
 44872                           
 44873                           ; BSR set to: 0
 44874  014102  0012               	return	
 44875  014104                     l2935:
 44876                           
 44877                           ; BSR set to: 0
 44878                           ;fat16.c: 887: };fat16.c: 890: number_of_clusters = (file_size + 512 - 1) >> 9;
 44879                           
 44880                           ; BSR set to: 0
 44881  014104  0EFF               	movlw	255
 44882  014106  25E7               	addwf	fat_copy_file@file_size& (0+255),w,b
 44883  014108  6FE1               	movwf	??_fat_copy_file& (0+255),b
 44884  01410A  0E01               	movlw	1
 44885  01410C  21E8               	addwfc	(fat_copy_file@file_size+1)& (0+255),w,b
 44886  01410E  6FE2               	movwf	(??_fat_copy_file+1)& (0+255),b
 44887  014110  0E00               	movlw	0
 44888  014112  21E9               	addwfc	(fat_copy_file@file_size+2)& (0+255),w,b
 44889  014114  6FE3               	movwf	(??_fat_copy_file+2)& (0+255),b
 44890  014116  0E00               	movlw	0
 44891  014118  21EA               	addwfc	(fat_copy_file@file_size+3)& (0+255),w,b
 44892  01411A  6FE4               	movwf	(??_fat_copy_file+3)& (0+255),b
 44893  01411C  0E0A               	movlw	10
 44894  01411E  D005               	goto	u22210
 44895  014120                     u22215:
 44896  014120  90D8               	bcf	status,0,c
 44897  014122  33E4               	rrcf	(??_fat_copy_file+3)& (0+255),f,b
 44898  014124  33E3               	rrcf	(??_fat_copy_file+2)& (0+255),f,b
 44899  014126  33E2               	rrcf	(??_fat_copy_file+1)& (0+255),f,b
 44900  014128  33E1               	rrcf	??_fat_copy_file& (0+255),f,b
 44901  01412A                     u22210:
 44902  01412A  2EE8               	decfsz	wreg,f,c
 44903  01412C  D7F9               	goto	u22215
 44904  01412E  C0E1  F0E5         	movff	??_fat_copy_file,fat_copy_file@number_of_clusters
 44905  014132  C0E2  F0E6         	movff	??_fat_copy_file+1,fat_copy_file@number_of_clusters+1
 44906                           
 44907                           ; BSR set to: 0
 44908                           ;fat16.c: 893: for(sector=0; sector<number_of_clusters; ++sector)
 44909  014136  0E00               	movlw	0
 44910  014138  6FEE               	movwf	(fat_copy_file@sector+1)& (0+255),b
 44911  01413A  0E00               	movlw	0
 44912  01413C  6FED               	movwf	fat_copy_file@sector& (0+255),b
 44913  01413E  D01E               	goto	l2936
 44914  014140                     
 44915                           ; BSR set to: 0
 44916                           ;fat16.c: 894: {;fat16.c: 895: return_value = fat_copy_sector_to_buffer(file_number, sec
      +                          tor);
 44917                           
 44918                           ; BSR set to: 0
 44919  014140  C0ED  F0A2         	movff	fat_copy_file@sector,fat_copy_sector_to_buffer@sector
 44920  014144  C0EE  F0A3         	movff	fat_copy_file@sector+1,fat_copy_sector_to_buffer@sector+1
 44921  014148  51EF               	movf	fat_copy_file@file_number& (0+255),w,b
 44922  01414A  EC00  F0AC         	call	_fat_copy_sector_to_buffer
 44923  01414E  0100               	movlb	0	; () banked
 44924  014150  6FEC               	movwf	fat_copy_file@return_value& (0+255),b
 44925                           
 44926                           ; BSR set to: 0
 44927                           ;fat16.c: 896: if(return_value!=0x00)
 44928  014152  51EC               	movf	fat_copy_file@return_value& (0+255),w,b
 44929  014154  B4D8               	btfsc	status,2,c
 44930  014156  D002               	goto	l2938
 44931                           
 44932                           ; BSR set to: 0
 44933                           ;fat16.c: 897: {;fat16.c: 898: return 0xFC;
 44934  014158  0EFC               	movlw	252
 44935                           
 44936                           ; BSR set to: 0
 44937  01415A  0012               	return	
 44938  01415C                     l2938:
 44939                           
 44940                           ; BSR set to: 0
 44941                           ;fat16.c: 899: };fat16.c: 900: return_value = fat_write_sector_from_buffer(new_file_numb
      +                          er, sector);
 44942                           
 44943                           ; BSR set to: 0
 44944  01415C  C0ED  F0A2         	movff	fat_copy_file@sector,fat_write_sector_from_buffer@sector
 44945  014160  C0EE  F0A3         	movff	fat_copy_file@sector+1,fat_write_sector_from_buffer@sector+1
 44946  014164  51EB               	movf	fat_copy_file@new_file_number& (0+255),w,b
 44947  014166  ECFF  F0B4         	call	_fat_write_sector_from_buffer
 44948  01416A  0100               	movlb	0	; () banked
 44949  01416C  6FEC               	movwf	fat_copy_file@return_value& (0+255),b
 44950                           
 44951                           ; BSR set to: 0
 44952                           ;fat16.c: 901: if(return_value!=0x00)
 44953  01416E  51EC               	movf	fat_copy_file@return_value& (0+255),w,b
 44954  014170  B4D8               	btfsc	status,2,c
 44955  014172  D002               	goto	l2939
 44956                           
 44957                           ; BSR set to: 0
 44958                           ;fat16.c: 902: {;fat16.c: 903: return 0xFB;
 44959  014174  0EFB               	movlw	251
 44960                           
 44961                           ; BSR set to: 0
 44962  014176  0012               	return	
 44963  014178                     l2939:
 44964                           
 44965                           ; BSR set to: 0
 44966                           
 44967                           ; BSR set to: 0
 44968  014178  4BED               	infsnz	fat_copy_file@sector& (0+255),f,b
 44969  01417A  2BEE               	incf	(fat_copy_file@sector+1)& (0+255),f,b
 44970  01417C                     l2936:
 44971                           
 44972                           ; BSR set to: 0
 44973                           
 44974                           ; BSR set to: 0
 44975  01417C  51E5               	movf	fat_copy_file@number_of_clusters& (0+255),w,b
 44976  01417E  5DED               	subwf	fat_copy_file@sector& (0+255),w,b
 44977  014180  51E6               	movf	(fat_copy_file@number_of_clusters+1)& (0+255),w,b
 44978  014182  59EE               	subwfb	(fat_copy_file@sector+1)& (0+255),w,b
 44979  014184  A0D8               	btfss	status,0,c
 44980  014186  D7DC               	goto	l2937
 44981                           
 44982                           ; BSR set to: 0
 44983                           ;fat16.c: 904: };fat16.c: 905: };fat16.c: 907: return 0x00;
 44984                           
 44985                           ; BSR set to: 0
 44986  014188  0E00               	movlw	0
 44987  01418A  0012               	return	
 44988  01418C                     __end_of_fat_copy_file:
 44989                           	opt stack 0
 44990                           tosu	equ	0xFFF
 44991                           tosh	equ	0xFFE
 44992                           tosl	equ	0xFFD
 44993                           pclath	equ	0xFFA
 44994                           tblptru	equ	0xFF8
 44995                           tblptrh	equ	0xFF7
 44996                           tblptrl	equ	0xFF6
 44997                           tablat	equ	0xFF5
 44998                           prodh	equ	0xFF4
 44999                           prodl	equ	0xFF3
 45000                           intcon	equ	0xFF2
 45001                           intcon2	equ	0xFF1
 45002                           intcon3	equ	0xFF0
 45003                           postinc0	equ	0xFEE
 45004                           wreg	equ	0xFE8
 45005                           indf1	equ	0xFE7
 45006                           postinc1	equ	0xFE6
 45007                           postdec1	equ	0xFE5
 45008                           plusw1	equ	0xFE3
 45009                           fsr1h	equ	0xFE2
 45010                           fsr1l	equ	0xFE1
 45011                           indf2	equ	0xFDF
 45012                           postinc2	equ	0xFDE
 45013                           postdec2	equ	0xFDD
 45014                           plusw2	equ	0xFDB
 45015                           fsr2h	equ	0xFDA
 45016                           fsr2l	equ	0xFD9
 45017                           status	equ	0xFD8
 45018                           
 45019 ;; *************** function _fat_create_file *****************
 45020 ;; Defined at:
 45021 ;;		line 586 in file "fat16.c"
 45022 ;; Parameters:    Size  Location     Type
 45023 ;;  name            2   76[BANK0 ] PTR unsigned char 
 45024 ;;		 -> filename(9), ReceivedDataBuffer(64), 
 45025 ;;  extension       2   78[BANK0 ] PTR unsigned char 
 45026 ;;		 -> extension(4), ReceivedDataBuffer(64), 
 45027 ;;  size            4   80[BANK0 ] unsigned long 
 45028 ;; Auto vars:     Size  Location     Type
 45029 ;;  root_entry     32   93[BANK0 ] struct .
 45030 ;;  first_cluste    2   90[BANK0 ] unsigned int 
 45031 ;;  number_of_cl    2   88[BANK0 ] unsigned int 
 45032 ;;  file_number     1   92[BANK0 ] unsigned char 
 45033 ;; Return value:  Size  Location     Type
 45034 ;;                  1    wreg      unsigned char 
 45035 ;; Registers used:
 45036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45037 ;; Tracked objects:
 45038 ;;		On entry : 0/0
 45039 ;;		On exit  : 0/0
 45040 ;;		Unchanged: 0/0
 45041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45042 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45043 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45044 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45045 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45046 ;;Total ram usage:       49 bytes
 45047 ;; Hardware stack levels used:    1
 45048 ;; Hardware stack levels required when called:   17
 45049 ;; This function calls:
 45050 ;;		__get_available_root_entry
 45051 ;;		__get_date
 45052 ;;		__get_time
 45053 ;;		__make_cluster_chain
 45054 ;;		__write_root
 45055 ;;		_fat_find_file
 45056 ;;		_memcpy
 45057 ;; This function is called by:
 45058 ;;		_fat_copy_file
 45059 ;;		__parse_file_create
 45060 ;;		_log_write_to_disk
 45061 ;; This function uses a non-reentrant model
 45062 ;;
 45063                           
 45064                           	psect	text202
 45065  012964                     __ptext202:
 45066                           	opt stack 0
 45067  012964                     _fat_create_file:
 45068                           	opt stack 9
 45069                           
 45070                           ;fat16.c: 588: rootEntry_t root_entry;;fat16.c: 589: uint8_t file_number;;fat16.c: 590: 
      +                          uint16_t number_of_clusters;;fat16.c: 591: uint16_t first_cluster;;fat16.c: 595: if(fat_
      +                          find_file(name, extension) != 0xFF)
 45071                           
 45072                           ;incstack = 0
 45073  012964  C0AC  F08B         	movff	fat_create_file@name,fat_find_file@name
 45074  012968  C0AD  F08C         	movff	fat_create_file@name+1,fat_find_file@name+1
 45075  01296C  C0AE  F08D         	movff	fat_create_file@extension,fat_find_file@extension
 45076  012970  C0AF  F08E         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 45077  012974  EC2B  F0A2         	call	_fat_find_file	;wreg free
 45078  012978  0AFF               	xorlw	255
 45079  01297A  B4D8               	btfsc	status,2,c
 45080  01297C  D002               	goto	l2892
 45081                           
 45082                           ;fat16.c: 596: {;fat16.c: 599: return 0xFF;
 45083  01297E  0EFF               	movlw	255
 45084  012980  0012               	return	
 45085  012982                     l2892:
 45086                           
 45087                           ;fat16.c: 600: };fat16.c: 604: file_number = _get_available_root_entry();
 45088  012982  ECE5  F0C4         	call	__get_available_root_entry	;wreg free
 45089  012986  0100               	movlb	0	; () banked
 45090  012988  6FBC               	movwf	fat_create_file@file_number& (0+255),b
 45091                           
 45092                           ; BSR set to: 0
 45093                           ;fat16.c: 605: if(file_number == 0xFF)
 45094  01298A  29BC               	incf	fat_create_file@file_number& (0+255),w,b
 45095  01298C  A4D8               	btfss	status,2,c
 45096  01298E  D002               	goto	l2894
 45097                           
 45098                           ; BSR set to: 0
 45099                           ;fat16.c: 606: {;fat16.c: 609: return 0xFE;
 45100  012990  0EFE               	movlw	254
 45101                           
 45102                           ; BSR set to: 0
 45103  012992  0012               	return	
 45104  012994                     l2894:
 45105                           
 45106                           ; BSR set to: 0
 45107                           ;fat16.c: 610: };fat16.c: 613: number_of_clusters = (size + 512 - 1) >> 9;
 45108                           
 45109                           ; BSR set to: 0
 45110  012994  0EFF               	movlw	255
 45111  012996  25B0               	addwf	fat_create_file@size& (0+255),w,b
 45112  012998  6FB4               	movwf	??_fat_create_file& (0+255),b
 45113  01299A  0E01               	movlw	1
 45114  01299C  21B1               	addwfc	(fat_create_file@size+1)& (0+255),w,b
 45115  01299E  6FB5               	movwf	(??_fat_create_file+1)& (0+255),b
 45116  0129A0  0E00               	movlw	0
 45117  0129A2  21B2               	addwfc	(fat_create_file@size+2)& (0+255),w,b
 45118  0129A4  6FB6               	movwf	(??_fat_create_file+2)& (0+255),b
 45119  0129A6  0E00               	movlw	0
 45120  0129A8  21B3               	addwfc	(fat_create_file@size+3)& (0+255),w,b
 45121  0129AA  6FB7               	movwf	(??_fat_create_file+3)& (0+255),b
 45122  0129AC  0E0A               	movlw	10
 45123  0129AE  D005               	goto	u21080
 45124  0129B0                     u21085:
 45125  0129B0  90D8               	bcf	status,0,c
 45126  0129B2  33B7               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 45127  0129B4  33B6               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 45128  0129B6  33B5               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 45129  0129B8  33B4               	rrcf	??_fat_create_file& (0+255),f,b
 45130  0129BA                     u21080:
 45131  0129BA  2EE8               	decfsz	wreg,f,c
 45132  0129BC  D7F9               	goto	u21085
 45133  0129BE  C0B4  F0B8         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 45134  0129C2  C0B5  F0B9         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 45135                           
 45136                           ; BSR set to: 0
 45137                           ;fat16.c: 616: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 45138  0129C6  0E00               	movlw	0
 45139  0129C8  6F96               	movwf	(__make_cluster_chain@first_cluster+1)& (0+255),b
 45140  0129CA  0E00               	movlw	0
 45141  0129CC  6F95               	movwf	__make_cluster_chain@first_cluster& (0+255),b
 45142  0129CE  C0B8  F097         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 45143  0129D2  C0B9  F098         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 45144  0129D6  EC6A  F077         	call	__make_cluster_chain	;wreg free
 45145  0129DA  C095  F0BA         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 45146  0129DE  C096  F0BB         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 45147                           
 45148                           ;fat16.c: 619: if(first_cluster == 0xFFFF)
 45149  0129E2  0100               	movlb	0	; () banked
 45150  0129E4  29BA               	incf	fat_create_file@first_cluster& (0+255),w,b
 45151  0129E6  E105               	bnz	l22747
 45152  0129E8  29BB               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 45153  0129EA  A4D8               	btfss	status,2,c
 45154  0129EC  D002               	goto	l2895
 45155                           
 45156                           ; BSR set to: 0
 45157                           ;fat16.c: 620: {;fat16.c: 623: return 0xFD;
 45158  0129EE  0EFD               	movlw	253
 45159                           
 45160                           ; BSR set to: 0
 45161  0129F0  0012               	return	
 45162  0129F2                     l2895:
 45163  0129F2                     l22747:
 45164                           
 45165                           ; BSR set to: 0
 45166                           ;fat16.c: 624: };fat16.c: 627: memcpy(root_entry.fileName, name, 8);
 45167  0129F2  0EBD               	movlw	low fat_create_file@root_entry
 45168  0129F4  6F60               	movwf	memcpy@d1& (0+255),b
 45169  0129F6  0E00               	movlw	high fat_create_file@root_entry
 45170  0129F8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 45171  0129FA  C0AC  F062         	movff	fat_create_file@name,memcpy@s1
 45172  0129FE  C0AD  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 45173  012A02  0E00               	movlw	0
 45174  012A04  6F65               	movwf	(memcpy@n+1)& (0+255),b
 45175  012A06  0E08               	movlw	8
 45176  012A08  6F64               	movwf	memcpy@n& (0+255),b
 45177  012A0A  EC97  F0BA         	call	_memcpy	;wreg free
 45178                           
 45179                           ;fat16.c: 628: memcpy(root_entry.fileExtension, extension, 3);
 45180  012A0E  0EC5               	movlw	low (fat_create_file@root_entry+8)
 45181  012A10  0100               	movlb	0	; () banked
 45182  012A12  6F60               	movwf	memcpy@d1& (0+255),b
 45183  012A14  0E00               	movlw	high (fat_create_file@root_entry+8)
 45184  012A16  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 45185  012A18  C0AE  F062         	movff	fat_create_file@extension,memcpy@s1
 45186  012A1C  C0AF  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 45187  012A20  0E00               	movlw	0
 45188  012A22  6F65               	movwf	(memcpy@n+1)& (0+255),b
 45189  012A24  0E03               	movlw	3
 45190  012A26  6F64               	movwf	memcpy@n& (0+255),b
 45191  012A28  EC97  F0BA         	call	_memcpy	;wreg free
 45192                           
 45193                           ;fat16.c: 629: root_entry.attributes = 0x00;
 45194  012A2C  0E00               	movlw	0
 45195  012A2E  0100               	movlb	0	; () banked
 45196  012A30  6FC8               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 45197                           
 45198                           ; BSR set to: 0
 45199                           ;fat16.c: 630: root_entry.reserved1 = 0x00;
 45200  012A32  0E00               	movlw	0
 45201  012A34  6FC9               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 45202                           
 45203                           ; BSR set to: 0
 45204                           ;fat16.c: 631: root_entry.secondFractions = 0x00;
 45205  012A36  0E00               	movlw	0
 45206  012A38  6FCA               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 45207                           
 45208                           ; BSR set to: 0
 45209                           ;fat16.c: 632: root_entry.createdTime = _get_time();
 45210  012A3A  EC00  F0B9         	call	__get_time	;wreg free
 45211  012A3E  C064  F0CB         	movff	?__get_time,fat_create_file@root_entry+14
 45212  012A42  C065  F0CC         	movff	?__get_time+1,fat_create_file@root_entry+15
 45213                           
 45214                           ;fat16.c: 633: root_entry.createdDate = _get_date();
 45215  012A46  EC9D  F0B9         	call	__get_date	;wreg free
 45216  012A4A  C064  F0CD         	movff	?__get_date,fat_create_file@root_entry+16
 45217  012A4E  C065  F0CE         	movff	?__get_date+1,fat_create_file@root_entry+17
 45218                           
 45219                           ;fat16.c: 634: root_entry.lastAccessDate = root_entry.createdDate;
 45220  012A52  C0CD  F0CF         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 45221  012A56  C0CE  F0D0         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 45222                           
 45223                           ;fat16.c: 635: root_entry.reserved2 = 0x00;
 45224  012A5A  0E00               	movlw	0
 45225  012A5C  0100               	movlb	0	; () banked
 45226  012A5E  6FD2               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 45227  012A60  0E00               	movlw	0
 45228  012A62  6FD1               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 45229                           
 45230                           ; BSR set to: 0
 45231                           ;fat16.c: 636: root_entry.modifiedTime = root_entry.createdTime;
 45232  012A64  C0CB  F0D3         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 45233  012A68  C0CC  F0D4         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 45234                           
 45235                           ; BSR set to: 0
 45236                           ;fat16.c: 637: root_entry.modifiedDate = root_entry.createdDate;
 45237  012A6C  C0CD  F0D5         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 45238  012A70  C0CE  F0D6         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 45239                           
 45240                           ; BSR set to: 0
 45241                           ;fat16.c: 638: root_entry.firstCluster = first_cluster;
 45242  012A74  C0BA  F0D7         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 45243  012A78  C0BB  F0D8         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 45244                           
 45245                           ; BSR set to: 0
 45246                           ;fat16.c: 639: root_entry.fileSize = size;
 45247  012A7C  C0B0  F0D9         	movff	fat_create_file@size,fat_create_file@root_entry+28
 45248  012A80  C0B1  F0DA         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 45249  012A84  C0B2  F0DB         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 45250  012A88  C0B3  F0DC         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 45251                           
 45252                           ; BSR set to: 0
 45253                           ;fat16.c: 642: _write_root(file_number, &root_entry);
 45254  012A8C  0EBD               	movlw	low fat_create_file@root_entry
 45255  012A8E  6F88               	movwf	__write_root@data& (0+255),b
 45256  012A90  0E00               	movlw	high fat_create_file@root_entry
 45257  012A92  6F89               	movwf	(__write_root@data+1)& (0+255),b
 45258  012A94  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 45259  012A96  EC04  F0C0         	call	__write_root
 45260                           
 45261                           ;fat16.c: 644: return file_number;
 45262  012A9A  0100               	movlb	0	; () banked
 45263  012A9C  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 45264  012A9E  0012               	return	
 45265  012AA0                     __end_of_fat_create_file:
 45266                           	opt stack 0
 45267                           tosu	equ	0xFFF
 45268                           tosh	equ	0xFFE
 45269                           tosl	equ	0xFFD
 45270                           pclath	equ	0xFFA
 45271                           tblptru	equ	0xFF8
 45272                           tblptrh	equ	0xFF7
 45273                           tblptrl	equ	0xFF6
 45274                           tablat	equ	0xFF5
 45275                           prodh	equ	0xFF4
 45276                           prodl	equ	0xFF3
 45277                           intcon	equ	0xFF2
 45278                           intcon2	equ	0xFF1
 45279                           intcon3	equ	0xFF0
 45280                           postinc0	equ	0xFEE
 45281                           wreg	equ	0xFE8
 45282                           indf1	equ	0xFE7
 45283                           postinc1	equ	0xFE6
 45284                           postdec1	equ	0xFE5
 45285                           plusw1	equ	0xFE3
 45286                           fsr1h	equ	0xFE2
 45287                           fsr1l	equ	0xFE1
 45288                           indf2	equ	0xFDF
 45289                           postinc2	equ	0xFDE
 45290                           postdec2	equ	0xFDD
 45291                           plusw2	equ	0xFDB
 45292                           fsr2h	equ	0xFDA
 45293                           fsr2l	equ	0xFD9
 45294                           status	equ	0xFD8
 45295                           
 45296 ;; *************** function _memcpy *****************
 45297 ;; Defined at:
 45298 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 45299 ;; Parameters:    Size  Location     Type
 45300 ;;  d1              2    0[BANK0 ] PTR void 
 45301 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 45302 ;;		 -> SetupPkt(8), 
 45303 ;;  s1              2    2[BANK0 ] PTR const void 
 45304 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 45305 ;;		 -> calibrationParameters(84), ReceivedDataBuffer(64), inq_resp(36), RAM(3759), 
 45306 ;;  n               2    4[BANK0 ] unsigned int 
 45307 ;; Auto vars:     Size  Location     Type
 45308 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 45309 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 45310 ;;		 -> calibrationParameters(84), ReceivedDataBuffer(64), inq_resp(36), RAM(3759), 
 45311 ;;  d               2    7[BANK0 ] PTR unsigned char 
 45312 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 45313 ;;		 -> SetupPkt(8), 
 45314 ;;  tmp             1    6[BANK0 ] unsigned char 
 45315 ;; Return value:  Size  Location     Type
 45316 ;;                  2    0[BANK0 ] PTR void 
 45317 ;; Registers used:
 45318 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 45319 ;; Tracked objects:
 45320 ;;		On entry : 0/0
 45321 ;;		On exit  : 0/0
 45322 ;;		Unchanged: 0/0
 45323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45324 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45325 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45327 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45328 ;;Total ram usage:       11 bytes
 45329 ;; Hardware stack levels used:    1
 45330 ;; Hardware stack levels required when called:   10
 45331 ;; This function calls:
 45332 ;;		Nothing
 45333 ;; This function is called by:
 45334 ;;		_MSDProcessCommandMediaPresent
 45335 ;;		__flash_set_page_size
 45336 ;;		_fat_create_file
 45337 ;;		_api_prepare
 45338 ;;		__fill_buffer_get_calibration1
 45339 ;;		__fill_buffer_get_calibration2
 45340 ;; This function uses a non-reentrant model
 45341 ;;
 45342                           
 45343                           	psect	text203
 45344  01752E                     __ptext203:
 45345                           	opt stack 0
 45346  01752E                     _memcpy:
 45347                           	opt stack 17
 45348                           
 45349                           ;incstack = 0
 45350  01752E  C062  F069         	movff	memcpy@s1,memcpy@s
 45351  017532  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 45352  017536  C060  F067         	movff	memcpy@d1,memcpy@d
 45353  01753A  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 45354  01753E  D01D               	goto	l4491
 45355  017540                     l22031:
 45356  017540  C069  FFF6         	movff	memcpy@s,tblptrl
 45357  017544  C06A  FFF7         	movff	memcpy@s+1,tblptrh
 45358  017548  0E00               	movlw	low (__mediumconst shr (0+16))
 45359  01754A  6EF8               	movwf	tblptru,c
 45360  01754C  0E0E               	movlw	(high __ramtop+-1)
 45361  01754E  64F7               	cpfsgt	tblptrh,c
 45362  017550  D003               	bra	u20037
 45363  017552  0008               	tblrd		*
 45364  017554  50F5               	movf	tablat,w,c
 45365  017556  D005               	bra	u20030
 45366  017558                     u20037:
 45367  017558  CFF6 FFE9          	movff	tblptrl,fsr0l
 45368  01755C  CFF7 FFEA          	movff	tblptrh,fsr0h
 45369  017560  50EF               	movf	indf0,w,c
 45370  017562                     u20030:
 45371  017562  0100               	movlb	0	; () banked
 45372  017564  6F66               	movwf	memcpy@tmp& (0+255),b
 45373                           
 45374                           ; BSR set to: 0
 45375  017566  4B69               	infsnz	memcpy@s& (0+255),f,b
 45376  017568  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 45377                           
 45378                           ; BSR set to: 0
 45379  01756A  C067  FFD9         	movff	memcpy@d,fsr2l
 45380  01756E  C068  FFDA         	movff	memcpy@d+1,fsr2h
 45381  017572  C066  FFDF         	movff	memcpy@tmp,indf2
 45382                           
 45383                           ; BSR set to: 0
 45384  017576  4B67               	infsnz	memcpy@d& (0+255),f,b
 45385  017578  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 45386  01757A                     l4491:
 45387                           
 45388                           ; BSR set to: 0
 45389  01757A  0100               	movlb	0	; () banked
 45390  01757C  0764               	decf	memcpy@n& (0+255),f,b
 45391  01757E  A0D8               	btfss	status,0,c
 45392  017580  0765               	decf	(memcpy@n+1)& (0+255),f,b
 45393  017582  2964               	incf	memcpy@n& (0+255),w,b
 45394  017584  E1DD               	bnz	l22031
 45395  017586  2965               	incf	(memcpy@n+1)& (0+255),w,b
 45396  017588  B4D8               	btfsc	status,2,c
 45397  01758A  0012               	return	
 45398  01758C  D7D9               	goto	l4492
 45399  01758E                     __end_of_memcpy:
 45400                           	opt stack 0
 45401                           tosu	equ	0xFFF
 45402                           tosh	equ	0xFFE
 45403                           tosl	equ	0xFFD
 45404                           pclath	equ	0xFFA
 45405                           tblptru	equ	0xFF8
 45406                           tblptrh	equ	0xFF7
 45407                           tblptrl	equ	0xFF6
 45408                           tablat	equ	0xFF5
 45409                           prodh	equ	0xFF4
 45410                           prodl	equ	0xFF3
 45411                           intcon	equ	0xFF2
 45412                           intcon2	equ	0xFF1
 45413                           intcon3	equ	0xFF0
 45414                           indf0	equ	0xFEF
 45415                           postinc0	equ	0xFEE
 45416                           fsr0h	equ	0xFEA
 45417                           fsr0l	equ	0xFE9
 45418                           wreg	equ	0xFE8
 45419                           indf1	equ	0xFE7
 45420                           postinc1	equ	0xFE6
 45421                           postdec1	equ	0xFE5
 45422                           plusw1	equ	0xFE3
 45423                           fsr1h	equ	0xFE2
 45424                           fsr1l	equ	0xFE1
 45425                           indf2	equ	0xFDF
 45426                           postinc2	equ	0xFDE
 45427                           postdec2	equ	0xFDD
 45428                           plusw2	equ	0xFDB
 45429                           fsr2h	equ	0xFDA
 45430                           fsr2l	equ	0xFD9
 45431                           status	equ	0xFD8
 45432                           
 45433 ;; *************** function _fat_find_file *****************
 45434 ;; Defined at:
 45435 ;;		line 517 in file "fat16.c"
 45436 ;; Parameters:    Size  Location     Type
 45437 ;;  name            2   43[BANK0 ] PTR unsigned char 
 45438 ;;		 -> filename(9), ReceivedDataBuffer(64), 
 45439 ;;  extension       2   45[BANK0 ] PTR unsigned char 
 45440 ;;		 -> extension(4), ReceivedDataBuffer(64), 
 45441 ;; Auto vars:     Size  Location     Type
 45442 ;;  offset          2   52[BANK0 ] unsigned int 
 45443 ;;  sector          2   50[BANK0 ] unsigned int 
 45444 ;;  file_number     1   49[BANK0 ] unsigned char 
 45445 ;; Return value:  Size  Location     Type
 45446 ;;                  1    wreg      unsigned char 
 45447 ;; Registers used:
 45448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 45449 ;; Tracked objects:
 45450 ;;		On entry : 0/0
 45451 ;;		On exit  : 0/0
 45452 ;;		Unchanged: 0/0
 45453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45454 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45455 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45456 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45457 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45458 ;;Total ram usage:       11 bytes
 45459 ;; Hardware stack levels used:    1
 45460 ;; Hardware stack levels required when called:   15
 45461 ;; This function calls:
 45462 ;;		_flash_sector_read
 45463 ;;		_strncmp
 45464 ;; This function is called by:
 45465 ;;		_fat_create_file
 45466 ;;		__fill_buffer_find_file
 45467 ;;		_log_write_to_disk
 45468 ;; This function uses a non-reentrant model
 45469 ;;
 45470                           
 45471                           	psect	text204
 45472  014456                     __ptext204:
 45473                           	opt stack 0
 45474  014456                     _fat_find_file:
 45475                           	opt stack 12
 45476                           
 45477                           ;fat16.c: 519: uint8_t file_number = 0;
 45478                           
 45479                           ; BSR set to: 0
 45480                           ;incstack = 0
 45481  014456  0E00               	movlw	0
 45482  014458  0100               	movlb	0	; () banked
 45483  01445A  6F91               	movwf	fat_find_file@file_number& (0+255),b
 45484                           
 45485                           ;fat16.c: 520: uint16_t sector;;fat16.c: 521: uint16_t offset;;fat16.c: 523: for(sector 
      +                          = 34; sector <= 37; ++sector)
 45486  01445C  0E00               	movlw	0
 45487  01445E  6F93               	movwf	(fat_find_file@sector+1)& (0+255),b
 45488  014460  0E22               	movlw	34
 45489  014462  6F92               	movwf	fat_find_file@sector& (0+255),b
 45490                           
 45491                           ; BSR set to: 0
 45492  014464  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 45493  014466  E169               	bnz	l2876
 45494  014468  0E26               	movlw	38
 45495  01446A  5D92               	subwf	fat_find_file@sector& (0+255),w,b
 45496  01446C  B0D8               	btfsc	status,0,c
 45497  01446E  D065               	goto	u20610
 45498                           
 45499                           ; BSR set to: 0
 45500                           ;fat16.c: 524: {;fat16.c: 526: flash_sector_read(sector, buffer);
 45501                           
 45502                           ; BSR set to: 0
 45503                           
 45504                           ; BSR set to: 0
 45505  014470  C092  F087         	movff	fat_find_file@sector,flash_sector_read@page
 45506  014474  C093  F088         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 45507  014478  0E00               	movlw	low _buffer
 45508  01447A  6F89               	movwf	flash_sector_read@data& (0+255),b
 45509  01447C  0E08               	movlw	high _buffer
 45510  01447E  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 45511  014480  EC86  F0C2         	call	_flash_sector_read	;wreg free
 45512                           
 45513                           ;fat16.c: 528: for(offset = 0; offset<512; offset += 32)
 45514  014484  0E00               	movlw	0
 45515  014486  0100               	movlb	0	; () banked
 45516  014488  6F95               	movwf	(fat_find_file@offset+1)& (0+255),b
 45517  01448A  0E00               	movlw	0
 45518  01448C  6F94               	movwf	fat_find_file@offset& (0+255),b
 45519  01448E                     l22355:
 45520                           
 45521                           ; BSR set to: 0
 45522  01448E  0E02               	movlw	2
 45523  014490  5D95               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 45524  014492  B0D8               	btfsc	status,0,c
 45525  014494  D04D               	goto	u20600
 45526                           
 45527                           ; BSR set to: 0
 45528                           ;fat16.c: 529: {;fat16.c: 530: if(buffer[offset]==0x00)
 45529                           
 45530                           ; BSR set to: 0
 45531                           
 45532                           ; BSR set to: 0
 45533  014496  0E00               	movlw	low _buffer
 45534  014498  2594               	addwf	fat_find_file@offset& (0+255),w,b
 45535  01449A  6ED9               	movwf	fsr2l,c
 45536  01449C  0E08               	movlw	high _buffer
 45537  01449E  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 45538  0144A0  6EDA               	movwf	fsr2h,c
 45539  0144A2  50DF               	movf	indf2,w,c
 45540  0144A4  A4D8               	btfss	status,2,c
 45541  0144A6  D002               	goto	l2879
 45542                           
 45543                           ; BSR set to: 0
 45544                           ;fat16.c: 531: {;fat16.c: 534: return 0xFF;
 45545  0144A8  0EFF               	movlw	255
 45546                           
 45547                           ; BSR set to: 0
 45548  0144AA  0012               	return	
 45549  0144AC                     l2879:
 45550                           
 45551                           ; BSR set to: 0
 45552                           ;fat16.c: 536: else if(buffer[offset]==0xE5)
 45553                           
 45554                           ; BSR set to: 0
 45555  0144AC  0E00               	movlw	low _buffer
 45556  0144AE  2594               	addwf	fat_find_file@offset& (0+255),w,b
 45557  0144B0  6ED9               	movwf	fsr2l,c
 45558  0144B2  0E08               	movlw	high _buffer
 45559  0144B4  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 45560  0144B6  6EDA               	movwf	fsr2h,c
 45561  0144B8  0EE5               	movlw	229
 45562  0144BA  18DE               	xorwf	postinc2,w,c
 45563  0144BC  B4D8               	btfsc	status,2,c
 45564  0144BE  D032               	goto	l2885
 45565                           
 45566                           ; BSR set to: 0
 45567                           ;fat16.c: 542: else;fat16.c: 543: {;fat16.c: 545: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 45568                           
 45569                           ; BSR set to: 0
 45570                           
 45571                           ; BSR set to: 0
 45572                           ;fat16.c: 537: {;fat16.c: 541: }
 45573  0144C0  C08B  F060         	movff	fat_find_file@name,strncmp@s1
 45574  0144C4  C08C  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 45575  0144C8  0E00               	movlw	low _buffer
 45576  0144CA  2594               	addwf	fat_find_file@offset& (0+255),w,b
 45577  0144CC  6F62               	movwf	strncmp@s2& (0+255),b
 45578  0144CE  0E08               	movlw	high _buffer
 45579  0144D0  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 45580  0144D2  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 45581  0144D4  0E00               	movlw	0
 45582  0144D6  6F65               	movwf	(strncmp@len+1)& (0+255),b
 45583  0144D8  0E08               	movlw	8
 45584  0144DA  6F64               	movwf	strncmp@len& (0+255),b
 45585  0144DC  EC04  F0B6         	call	_strncmp	;wreg free
 45586  0144E0  0100               	movlb	0	; () banked
 45587  0144E2  5160               	movf	?_strncmp& (0+255),w,b
 45588  0144E4  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 45589  0144E6  A4D8               	btfss	status,2,c
 45590  0144E8  D01D               	goto	l2885
 45591                           
 45592                           ; BSR set to: 0
 45593                           ;fat16.c: 546: {;fat16.c: 548: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 45594  0144EA  C08D  F060         	movff	fat_find_file@extension,strncmp@s1
 45595  0144EE  C08E  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 45596  0144F2  0E08               	movlw	8
 45597  0144F4  2594               	addwf	fat_find_file@offset& (0+255),w,b
 45598  0144F6  6F8F               	movwf	??_fat_find_file& (0+255),b
 45599  0144F8  0E00               	movlw	0
 45600  0144FA  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 45601  0144FC  6F90               	movwf	(??_fat_find_file+1)& (0+255),b
 45602  0144FE  0E00               	movlw	low _buffer
 45603  014500  258F               	addwf	??_fat_find_file& (0+255),w,b
 45604  014502  6F62               	movwf	strncmp@s2& (0+255),b
 45605  014504  0E08               	movlw	high _buffer
 45606  014506  2190               	addwfc	(??_fat_find_file+1)& (0+255),w,b
 45607  014508  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 45608  01450A  0E00               	movlw	0
 45609  01450C  6F65               	movwf	(strncmp@len+1)& (0+255),b
 45610  01450E  0E03               	movlw	3
 45611  014510  6F64               	movwf	strncmp@len& (0+255),b
 45612  014512  EC04  F0B6         	call	_strncmp	;wreg free
 45613  014516  0100               	movlb	0	; () banked
 45614  014518  5160               	movf	?_strncmp& (0+255),w,b
 45615  01451A  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 45616  01451C  A4D8               	btfss	status,2,c
 45617  01451E  D002               	goto	l2885
 45618                           
 45619                           ; BSR set to: 0
 45620                           ;fat16.c: 549: {;fat16.c: 552: return file_number;
 45621  014520  5191               	movf	fat_find_file@file_number& (0+255),w,b
 45622                           
 45623                           ; BSR set to: 0
 45624  014522  0012               	return	
 45625  014524                     l2885:
 45626                           
 45627                           ; BSR set to: 0
 45628                           ;fat16.c: 553: };fat16.c: 554: };fat16.c: 555: };fat16.c: 556: ++file_number;
 45629                           
 45630                           ; BSR set to: 0
 45631                           
 45632                           ; BSR set to: 0
 45633                           
 45634                           ; BSR set to: 0
 45635                           
 45636                           ; BSR set to: 0
 45637  014524  2B91               	incf	fat_find_file@file_number& (0+255),f,b
 45638                           
 45639                           ; BSR set to: 0
 45640  014526  0E20               	movlw	32
 45641  014528  2794               	addwf	fat_find_file@offset& (0+255),f,b
 45642  01452A  0E00               	movlw	0
 45643  01452C  2395               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 45644  01452E  D7AF               	goto	l22355
 45645  014530                     u20600:
 45646                           
 45647                           ; BSR set to: 0
 45648                           
 45649                           ; BSR set to: 0
 45650  014530  4B92               	infsnz	fat_find_file@sector& (0+255),f,b
 45651  014532  2B93               	incf	(fat_find_file@sector+1)& (0+255),f,b
 45652                           
 45653                           ; BSR set to: 0
 45654  014534  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 45655  014536  E101               	bnz	l22389
 45656  014538  D797               	goto	L59
 45657  01453A                     u20610:
 45658  01453A                     l2876:
 45659  01453A                     l22389:
 45660                           
 45661                           ; BSR set to: 0
 45662                           ;fat16.c: 557: };fat16.c: 558: };fat16.c: 559: return 0xFF;
 45663  01453A  0EFF               	movlw	255
 45664  01453C  0012               	return	
 45665  01453E                     __end_of_fat_find_file:
 45666                           	opt stack 0
 45667                           tosu	equ	0xFFF
 45668                           tosh	equ	0xFFE
 45669                           tosl	equ	0xFFD
 45670                           pclath	equ	0xFFA
 45671                           tblptru	equ	0xFF8
 45672                           tblptrh	equ	0xFF7
 45673                           tblptrl	equ	0xFF6
 45674                           tablat	equ	0xFF5
 45675                           prodh	equ	0xFF4
 45676                           prodl	equ	0xFF3
 45677                           intcon	equ	0xFF2
 45678                           intcon2	equ	0xFF1
 45679                           intcon3	equ	0xFF0
 45680                           indf0	equ	0xFEF
 45681                           postinc0	equ	0xFEE
 45682                           fsr0h	equ	0xFEA
 45683                           fsr0l	equ	0xFE9
 45684                           wreg	equ	0xFE8
 45685                           indf1	equ	0xFE7
 45686                           postinc1	equ	0xFE6
 45687                           postdec1	equ	0xFE5
 45688                           plusw1	equ	0xFE3
 45689                           fsr1h	equ	0xFE2
 45690                           fsr1l	equ	0xFE1
 45691                           indf2	equ	0xFDF
 45692                           postinc2	equ	0xFDE
 45693                           postdec2	equ	0xFDD
 45694                           plusw2	equ	0xFDB
 45695                           fsr2h	equ	0xFDA
 45696                           fsr2l	equ	0xFD9
 45697                           status	equ	0xFD8
 45698                           
 45699 ;; *************** function _strncmp *****************
 45700 ;; Defined at:
 45701 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 45702 ;; Parameters:    Size  Location     Type
 45703 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 45704 ;;		 -> extension(4), filename(9), ReceivedDataBuffer(64), 
 45705 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 45706 ;;		 -> buffer(512), 
 45707 ;;  len             2    4[BANK0 ] unsigned int 
 45708 ;; Auto vars:     Size  Location     Type
 45709 ;;		None
 45710 ;; Return value:  Size  Location     Type
 45711 ;;                  2    0[BANK0 ] int 
 45712 ;; Registers used:
 45713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 45714 ;; Tracked objects:
 45715 ;;		On entry : 0/0
 45716 ;;		On exit  : 0/0
 45717 ;;		Unchanged: 0/0
 45718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45719 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45721 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45722 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45723 ;;Total ram usage:        9 bytes
 45724 ;; Hardware stack levels used:    1
 45725 ;; Hardware stack levels required when called:   10
 45726 ;; This function calls:
 45727 ;;		Nothing
 45728 ;; This function is called by:
 45729 ;;		_fat_find_file
 45730 ;; This function uses a non-reentrant model
 45731 ;;
 45732                           
 45733                           	psect	text205
 45734  016C08                     __ptext205:
 45735                           	opt stack 0
 45736  016C08                     _strncmp:
 45737                           	opt stack 16
 45738                           
 45739                           ; BSR set to: 0
 45740                           ;incstack = 0
 45741  016C08  D031               	goto	l4509
 45742  016C0A                     l21983:
 45743  016C0A  C060  FFD9         	movff	strncmp@s1,fsr2l
 45744  016C0E  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 45745  016C12  50DF               	movf	indf2,w,c
 45746  016C14  B4D8               	btfsc	status,2,c
 45747  016C16  D00C               	goto	u19980
 45748  016C18  C062  FFD9         	movff	strncmp@s2,fsr2l
 45749  016C1C  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 45750  016C20  C060  FFE1         	movff	strncmp@s1,fsr1l
 45751  016C24  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 45752  016C28  50DE               	movf	postinc2,w,c
 45753  016C2A  18E6               	xorwf	postinc1,w,c
 45754  016C2C  B4D8               	btfsc	status,2,c
 45755  016C2E  D019               	goto	l4511
 45756  016C30                     u19980:
 45757  016C30  C062  FFD9         	movff	strncmp@s2,fsr2l
 45758  016C34  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 45759  016C38  50DF               	movf	indf2,w,c
 45760  016C3A  0100               	movlb	0	; () banked
 45761  016C3C  6F66               	movwf	??_strncmp& (0+255),b
 45762  016C3E  6B67               	clrf	(??_strncmp+1)& (0+255),b
 45763  016C40  1F66               	comf	??_strncmp& (0+255),f,b
 45764  016C42  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 45765  016C44  4B66               	infsnz	??_strncmp& (0+255),f,b
 45766  016C46  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 45767  016C48  C060  FFD9         	movff	strncmp@s1,fsr2l
 45768  016C4C  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 45769  016C50  50DF               	movf	indf2,w,c
 45770  016C52  6F68               	movwf	(??_strncmp+2)& (0+255),b
 45771  016C54  5168               	movf	(??_strncmp+2)& (0+255),w,b
 45772  016C56  2566               	addwf	??_strncmp& (0+255),w,b
 45773  016C58  6F60               	movwf	?_strncmp& (0+255),b
 45774  016C5A  0E00               	movlw	0
 45775  016C5C  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 45776  016C5E  6F61               	movwf	(?_strncmp+1)& (0+255),b
 45777                           
 45778                           ; BSR set to: 0
 45779  016C60  0012               	return	
 45780  016C62                     l4511:
 45781                           
 45782                           ; BSR set to: 0
 45783  016C62  0100               	movlb	0	; () banked
 45784  016C64  4B60               	infsnz	strncmp@s1& (0+255),f,b
 45785  016C66  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 45786  016C68  4B62               	infsnz	strncmp@s2& (0+255),f,b
 45787  016C6A  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 45788  016C6C                     l4509:
 45789                           
 45790                           ; BSR set to: 0
 45791  016C6C  0100               	movlb	0	; () banked
 45792  016C6E  0764               	decf	strncmp@len& (0+255),f,b
 45793  016C70  A0D8               	btfss	status,0,c
 45794  016C72  0765               	decf	(strncmp@len+1)& (0+255),f,b
 45795  016C74  2964               	incf	strncmp@len& (0+255),w,b
 45796  016C76  E1C9               	bnz	l21983
 45797  016C78  2965               	incf	(strncmp@len+1)& (0+255),w,b
 45798  016C7A  A4D8               	btfss	status,2,c
 45799  016C7C  D7C6               	goto	l4510
 45800                           
 45801                           ; BSR set to: 0
 45802                           
 45803                           ; BSR set to: 0
 45804  016C7E  0E00               	movlw	0
 45805  016C80  6F61               	movwf	(?_strncmp+1)& (0+255),b
 45806  016C82  0E00               	movlw	0
 45807  016C84  6F60               	movwf	?_strncmp& (0+255),b
 45808  016C86  0012               	return	
 45809  016C88                     __end_of_strncmp:
 45810                           	opt stack 0
 45811                           tosu	equ	0xFFF
 45812                           tosh	equ	0xFFE
 45813                           tosl	equ	0xFFD
 45814                           pclath	equ	0xFFA
 45815                           tblptru	equ	0xFF8
 45816                           tblptrh	equ	0xFF7
 45817                           tblptrl	equ	0xFF6
 45818                           tablat	equ	0xFF5
 45819                           prodh	equ	0xFF4
 45820                           prodl	equ	0xFF3
 45821                           intcon	equ	0xFF2
 45822                           intcon2	equ	0xFF1
 45823                           intcon3	equ	0xFF0
 45824                           indf0	equ	0xFEF
 45825                           postinc0	equ	0xFEE
 45826                           fsr0h	equ	0xFEA
 45827                           fsr0l	equ	0xFE9
 45828                           wreg	equ	0xFE8
 45829                           indf1	equ	0xFE7
 45830                           postinc1	equ	0xFE6
 45831                           postdec1	equ	0xFE5
 45832                           plusw1	equ	0xFE3
 45833                           fsr1h	equ	0xFE2
 45834                           fsr1l	equ	0xFE1
 45835                           indf2	equ	0xFDF
 45836                           postinc2	equ	0xFDE
 45837                           postdec2	equ	0xFDD
 45838                           plusw2	equ	0xFDB
 45839                           fsr2h	equ	0xFDA
 45840                           fsr2l	equ	0xFD9
 45841                           status	equ	0xFD8
 45842                           
 45843 ;; *************** function __get_time *****************
 45844 ;; Defined at:
 45845 ;;		line 376 in file "fat16.c"
 45846 ;; Parameters:    Size  Location     Type
 45847 ;;		None
 45848 ;; Auto vars:     Size  Location     Type
 45849 ;;  time            2   11[BANK0 ] unsigned int 
 45850 ;;  seconds         1   10[BANK0 ] unsigned char 
 45851 ;;  minutes         1    9[BANK0 ] unsigned char 
 45852 ;;  hours           1    8[BANK0 ] unsigned char 
 45853 ;; Return value:  Size  Location     Type
 45854 ;;                  2    4[BANK0 ] unsigned int 
 45855 ;; Registers used:
 45856 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 45857 ;; Tracked objects:
 45858 ;;		On entry : 0/0
 45859 ;;		On exit  : 0/0
 45860 ;;		Unchanged: 0/0
 45861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45862 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45863 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45864 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45865 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45866 ;;Total ram usage:        9 bytes
 45867 ;; Hardware stack levels used:    1
 45868 ;; Hardware stack levels required when called:   12
 45869 ;; This function calls:
 45870 ;;		_rtcc_get_hours_decimal
 45871 ;;		_rtcc_get_minutes_decimal
 45872 ;;		_rtcc_get_seconds_decimal
 45873 ;; This function is called by:
 45874 ;;		_fat_create_file
 45875 ;; This function uses a non-reentrant model
 45876 ;;
 45877                           
 45878                           	psect	text206
 45879  017200                     __ptext206:
 45880                           	opt stack 0
 45881  017200                     __get_time:
 45882                           	opt stack 13
 45883                           
 45884                           ;fat16.c: 379: uint16_t time;;fat16.c: 380: uint8_t hours = rtcc_get_hours_decimal();
 45885                           
 45886                           ; BSR set to: 0
 45887                           ;incstack = 0
 45888  017200  ECEB  F0C7         	call	_rtcc_get_hours_decimal	;wreg free
 45889  017204  0100               	movlb	0	; () banked
 45890  017206  6F68               	movwf	__get_time@hours& (0+255),b
 45891                           
 45892                           ;fat16.c: 381: uint8_t minutes = rtcc_get_minutes_decimal();
 45893  017208  ECE3  F0C7         	call	_rtcc_get_minutes_decimal	;wreg free
 45894  01720C  0100               	movlb	0	; () banked
 45895  01720E  6F69               	movwf	__get_time@minutes& (0+255),b
 45896                           
 45897                           ;fat16.c: 382: uint8_t seconds = rtcc_get_seconds_decimal();
 45898  017210  ECDB  F0C7         	call	_rtcc_get_seconds_decimal	;wreg free
 45899  017214  0100               	movlb	0	; () banked
 45900  017216  6F6A               	movwf	__get_time@seconds& (0+255),b
 45901                           
 45902                           ; BSR set to: 0
 45903                           ;fat16.c: 383: time = ((hours&0b11111) << 11);
 45904  017218  5168               	movf	__get_time@hours& (0+255),w,b
 45905  01721A  0B1F               	andlw	31
 45906  01721C  6F66               	movwf	??__get_time& (0+255),b
 45907  01721E  6B67               	clrf	(??__get_time+1)& (0+255),b
 45908  017220  0E0B               	movlw	11
 45909  017222                     u20475:
 45910  017222  90D8               	bcf	status,0,c
 45911  017224  3766               	rlcf	??__get_time& (0+255),f,b
 45912  017226  3767               	rlcf	(??__get_time+1)& (0+255),f,b
 45913  017228  2EE8               	decfsz	wreg,f,c
 45914  01722A  D7FB               	goto	u20475
 45915  01722C  C066  F06B         	movff	??__get_time,__get_time@time
 45916  017230  C067  F06C         	movff	??__get_time+1,__get_time@time+1
 45917                           
 45918                           ; BSR set to: 0
 45919                           ;fat16.c: 384: time |= ((minutes&0b111111) << 5);
 45920  017234  5169               	movf	__get_time@minutes& (0+255),w,b
 45921  017236  0B3F               	andlw	63
 45922  017238  6F66               	movwf	??__get_time& (0+255),b
 45923  01723A  6B67               	clrf	(??__get_time+1)& (0+255),b
 45924  01723C  0E05               	movlw	5
 45925  01723E                     u20485:
 45926  01723E  90D8               	bcf	status,0,c
 45927  017240  3766               	rlcf	??__get_time& (0+255),f,b
 45928  017242  3767               	rlcf	(??__get_time+1)& (0+255),f,b
 45929  017244  2EE8               	decfsz	wreg,f,c
 45930  017246  D7FB               	goto	u20485
 45931  017248  5166               	movf	??__get_time& (0+255),w,b
 45932  01724A  136B               	iorwf	__get_time@time& (0+255),f,b
 45933  01724C  5167               	movf	(??__get_time+1)& (0+255),w,b
 45934  01724E  136C               	iorwf	(__get_time@time+1)& (0+255),f,b
 45935                           
 45936                           ; BSR set to: 0
 45937                           ;fat16.c: 385: time |= ((seconds>>1)&0b11111);
 45938  017250  C06A  F066         	movff	__get_time@seconds,??__get_time
 45939  017254  90D8               	bcf	status,0,c
 45940  017256  3366               	rrcf	??__get_time& (0+255),f,b
 45941  017258  0E1F               	movlw	31
 45942  01725A  1766               	andwf	??__get_time& (0+255),f,b
 45943  01725C  5166               	movf	??__get_time& (0+255),w,b
 45944  01725E  136B               	iorwf	__get_time@time& (0+255),f,b
 45945                           
 45946                           ; BSR set to: 0
 45947                           ;fat16.c: 386: return time;
 45948  017260  C06B  F064         	movff	__get_time@time,?__get_time
 45949  017264  C06C  F065         	movff	__get_time@time+1,?__get_time+1
 45950  017268  0012               	return	
 45951  01726A                     __end_of__get_time:
 45952                           	opt stack 0
 45953                           tosu	equ	0xFFF
 45954                           tosh	equ	0xFFE
 45955                           tosl	equ	0xFFD
 45956                           pclath	equ	0xFFA
 45957                           tblptru	equ	0xFF8
 45958                           tblptrh	equ	0xFF7
 45959                           tblptrl	equ	0xFF6
 45960                           tablat	equ	0xFF5
 45961                           prodh	equ	0xFF4
 45962                           prodl	equ	0xFF3
 45963                           intcon	equ	0xFF2
 45964                           intcon2	equ	0xFF1
 45965                           intcon3	equ	0xFF0
 45966                           indf0	equ	0xFEF
 45967                           postinc0	equ	0xFEE
 45968                           fsr0h	equ	0xFEA
 45969                           fsr0l	equ	0xFE9
 45970                           wreg	equ	0xFE8
 45971                           indf1	equ	0xFE7
 45972                           postinc1	equ	0xFE6
 45973                           postdec1	equ	0xFE5
 45974                           plusw1	equ	0xFE3
 45975                           fsr1h	equ	0xFE2
 45976                           fsr1l	equ	0xFE1
 45977                           indf2	equ	0xFDF
 45978                           postinc2	equ	0xFDE
 45979                           postdec2	equ	0xFDD
 45980                           plusw2	equ	0xFDB
 45981                           fsr2h	equ	0xFDA
 45982                           fsr2l	equ	0xFD9
 45983                           status	equ	0xFD8
 45984                           
 45985 ;; *************** function _rtcc_get_seconds_decimal *****************
 45986 ;; Defined at:
 45987 ;;		line 325 in file "rtcc.c"
 45988 ;; Parameters:    Size  Location     Type
 45989 ;;		None
 45990 ;; Auto vars:     Size  Location     Type
 45991 ;;  bcd_seconds     1    3[BANK0 ] unsigned char 
 45992 ;; Return value:  Size  Location     Type
 45993 ;;                  1    wreg      unsigned char 
 45994 ;; Registers used:
 45995 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 45996 ;; Tracked objects:
 45997 ;;		On entry : 0/0
 45998 ;;		On exit  : 0/0
 45999 ;;		Unchanged: 0/0
 46000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46002 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46004 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46005 ;;Total ram usage:        1 bytes
 46006 ;; Hardware stack levels used:    1
 46007 ;; Hardware stack levels required when called:   11
 46008 ;; This function calls:
 46009 ;;		__rtcc_bcd_to_decimal
 46010 ;;		_rtcc_get_seconds
 46011 ;; This function is called by:
 46012 ;;		__get_time
 46013 ;;		_log_start_new
 46014 ;;		_log_collect_data
 46015 ;;		__get_dateTime
 46016 ;; This function uses a non-reentrant model
 46017 ;;
 46018                           
 46019                           	psect	text207
 46020  018FB6                     __ptext207:
 46021                           	opt stack 0
 46022  018FB6                     _rtcc_get_seconds_decimal:
 46023                           	opt stack 17
 46024                           
 46025                           ;rtcc.c: 327: uint8_t bcd_seconds = rtcc_get_seconds();
 46026                           
 46027                           ; BSR set to: 0
 46028                           ;incstack = 0
 46029  018FB6  EC22  F0C8         	call	_rtcc_get_seconds	;wreg free
 46030  018FBA  0100               	movlb	0	; () banked
 46031  018FBC  6F63               	movwf	rtcc_get_seconds_decimal@bcd_seconds& (0+255),b
 46032                           
 46033                           ; BSR set to: 0
 46034                           ;rtcc.c: 328: return _rtcc_bcd_to_decimal(bcd_seconds);
 46035  018FBE  5163               	movf	rtcc_get_seconds_decimal@bcd_seconds& (0+255),w,b
 46036  018FC0  ECAF  F0C6         	call	__rtcc_bcd_to_decimal
 46037  018FC4  0012               	return	
 46038  018FC6                     __end_of_rtcc_get_seconds_decimal:
 46039                           	opt stack 0
 46040                           tosu	equ	0xFFF
 46041                           tosh	equ	0xFFE
 46042                           tosl	equ	0xFFD
 46043                           pclath	equ	0xFFA
 46044                           tblptru	equ	0xFF8
 46045                           tblptrh	equ	0xFF7
 46046                           tblptrl	equ	0xFF6
 46047                           tablat	equ	0xFF5
 46048                           prodh	equ	0xFF4
 46049                           prodl	equ	0xFF3
 46050                           intcon	equ	0xFF2
 46051                           intcon2	equ	0xFF1
 46052                           intcon3	equ	0xFF0
 46053                           indf0	equ	0xFEF
 46054                           postinc0	equ	0xFEE
 46055                           fsr0h	equ	0xFEA
 46056                           fsr0l	equ	0xFE9
 46057                           wreg	equ	0xFE8
 46058                           indf1	equ	0xFE7
 46059                           postinc1	equ	0xFE6
 46060                           postdec1	equ	0xFE5
 46061                           plusw1	equ	0xFE3
 46062                           fsr1h	equ	0xFE2
 46063                           fsr1l	equ	0xFE1
 46064                           indf2	equ	0xFDF
 46065                           postinc2	equ	0xFDE
 46066                           postdec2	equ	0xFDD
 46067                           plusw2	equ	0xFDB
 46068                           fsr2h	equ	0xFDA
 46069                           fsr2l	equ	0xFD9
 46070                           status	equ	0xFD8
 46071                           
 46072 ;; *************** function _rtcc_get_seconds *****************
 46073 ;; Defined at:
 46074 ;;		line 317 in file "rtcc.c"
 46075 ;; Parameters:    Size  Location     Type
 46076 ;;		None
 46077 ;; Auto vars:     Size  Location     Type
 46078 ;;		None
 46079 ;; Return value:  Size  Location     Type
 46080 ;;                  1    wreg      unsigned char 
 46081 ;; Registers used:
 46082 ;;		wreg, status,2
 46083 ;; Tracked objects:
 46084 ;;		On entry : 0/0
 46085 ;;		On exit  : 0/0
 46086 ;;		Unchanged: 0/0
 46087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46092 ;;Total ram usage:        0 bytes
 46093 ;; Hardware stack levels used:    1
 46094 ;; Hardware stack levels required when called:   10
 46095 ;; This function calls:
 46096 ;;		Nothing
 46097 ;; This function is called by:
 46098 ;;		__display_time
 46099 ;;		_rtcc_get_seconds_decimal
 46100 ;;		_rtcc_increment_seconds
 46101 ;;		_rtcc_decrement_seconds
 46102 ;;		_rtcc_write_eeprom
 46103 ;;		__fill_buffer_get_status
 46104 ;; This function uses a non-reentrant model
 46105 ;;
 46106                           
 46107                           	psect	text208
 46108  019044                     __ptext208:
 46109                           	opt stack 0
 46110  019044                     _rtcc_get_seconds:
 46111                           	opt stack 17
 46112                           
 46113                           ;rtcc.c: 319: RTCCFGbits.RTCPTR1 = 0;
 46114                           
 46115                           ;incstack = 0
 46116  019044  010F               	movlb	15	; () banked
 46117  019046  933F               	bcf	63,1,b	;volatile
 46118                           
 46119                           ;rtcc.c: 320: RTCCFGbits.RTCPTR0 = 0;
 46120  019048  913F               	bcf	63,0,b	;volatile
 46121  01904A                     
 46122                           ; BSR set to: 15
 46123                           
 46124                           ; BSR set to: 15
 46125  01904A  B93F               	btfsc	63,4,b	;volatile
 46126  01904C  D7FE               	goto	l2207
 46127                           
 46128                           ; BSR set to: 15
 46129                           ;rtcc.c: 322: return RTCVALL;
 46130                           
 46131                           ; BSR set to: 15
 46132  01904E  513A               	movf	58,w,b	;volatile
 46133  019050  0012               	return	
 46134  019052                     __end_of_rtcc_get_seconds:
 46135                           	opt stack 0
 46136                           tosu	equ	0xFFF
 46137                           tosh	equ	0xFFE
 46138                           tosl	equ	0xFFD
 46139                           pclath	equ	0xFFA
 46140                           tblptru	equ	0xFF8
 46141                           tblptrh	equ	0xFF7
 46142                           tblptrl	equ	0xFF6
 46143                           tablat	equ	0xFF5
 46144                           prodh	equ	0xFF4
 46145                           prodl	equ	0xFF3
 46146                           intcon	equ	0xFF2
 46147                           intcon2	equ	0xFF1
 46148                           intcon3	equ	0xFF0
 46149                           indf0	equ	0xFEF
 46150                           postinc0	equ	0xFEE
 46151                           fsr0h	equ	0xFEA
 46152                           fsr0l	equ	0xFE9
 46153                           wreg	equ	0xFE8
 46154                           indf1	equ	0xFE7
 46155                           postinc1	equ	0xFE6
 46156                           postdec1	equ	0xFE5
 46157                           plusw1	equ	0xFE3
 46158                           fsr1h	equ	0xFE2
 46159                           fsr1l	equ	0xFE1
 46160                           indf2	equ	0xFDF
 46161                           postinc2	equ	0xFDE
 46162                           postdec2	equ	0xFDD
 46163                           plusw2	equ	0xFDB
 46164                           fsr2h	equ	0xFDA
 46165                           fsr2l	equ	0xFD9
 46166                           status	equ	0xFD8
 46167                           
 46168 ;; *************** function _rtcc_get_minutes_decimal *****************
 46169 ;; Defined at:
 46170 ;;		line 287 in file "rtcc.c"
 46171 ;; Parameters:    Size  Location     Type
 46172 ;;		None
 46173 ;; Auto vars:     Size  Location     Type
 46174 ;;  bcd_minutes     1    3[BANK0 ] unsigned char 
 46175 ;; Return value:  Size  Location     Type
 46176 ;;                  1    wreg      unsigned char 
 46177 ;; Registers used:
 46178 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 46179 ;; Tracked objects:
 46180 ;;		On entry : 0/0
 46181 ;;		On exit  : 0/0
 46182 ;;		Unchanged: 0/0
 46183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46185 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46187 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46188 ;;Total ram usage:        1 bytes
 46189 ;; Hardware stack levels used:    1
 46190 ;; Hardware stack levels required when called:   11
 46191 ;; This function calls:
 46192 ;;		__rtcc_bcd_to_decimal
 46193 ;;		_rtcc_get_minutes
 46194 ;; This function is called by:
 46195 ;;		__get_time
 46196 ;;		__get_dateTime
 46197 ;; This function uses a non-reentrant model
 46198 ;;
 46199                           
 46200                           	psect	text209
 46201  018FC6                     __ptext209:
 46202                           	opt stack 0
 46203  018FC6                     _rtcc_get_minutes_decimal:
 46204                           	opt stack 13
 46205                           
 46206                           ;rtcc.c: 289: uint8_t bcd_minutes = rtcc_get_minutes();
 46207                           
 46208                           ; BSR set to: 15
 46209                           ;incstack = 0
 46210  018FC6  EC29  F0C8         	call	_rtcc_get_minutes	;wreg free
 46211  018FCA  0100               	movlb	0	; () banked
 46212  018FCC  6F63               	movwf	rtcc_get_minutes_decimal@bcd_minutes& (0+255),b
 46213                           
 46214                           ; BSR set to: 0
 46215                           ;rtcc.c: 290: return _rtcc_bcd_to_decimal(bcd_minutes);
 46216  018FCE  5163               	movf	rtcc_get_minutes_decimal@bcd_minutes& (0+255),w,b
 46217  018FD0  ECAF  F0C6         	call	__rtcc_bcd_to_decimal
 46218  018FD4  0012               	return	
 46219  018FD6                     __end_of_rtcc_get_minutes_decimal:
 46220                           	opt stack 0
 46221                           tosu	equ	0xFFF
 46222                           tosh	equ	0xFFE
 46223                           tosl	equ	0xFFD
 46224                           pclath	equ	0xFFA
 46225                           tblptru	equ	0xFF8
 46226                           tblptrh	equ	0xFF7
 46227                           tblptrl	equ	0xFF6
 46228                           tablat	equ	0xFF5
 46229                           prodh	equ	0xFF4
 46230                           prodl	equ	0xFF3
 46231                           intcon	equ	0xFF2
 46232                           intcon2	equ	0xFF1
 46233                           intcon3	equ	0xFF0
 46234                           indf0	equ	0xFEF
 46235                           postinc0	equ	0xFEE
 46236                           fsr0h	equ	0xFEA
 46237                           fsr0l	equ	0xFE9
 46238                           wreg	equ	0xFE8
 46239                           indf1	equ	0xFE7
 46240                           postinc1	equ	0xFE6
 46241                           postdec1	equ	0xFE5
 46242                           plusw1	equ	0xFE3
 46243                           fsr1h	equ	0xFE2
 46244                           fsr1l	equ	0xFE1
 46245                           indf2	equ	0xFDF
 46246                           postinc2	equ	0xFDE
 46247                           postdec2	equ	0xFDD
 46248                           plusw2	equ	0xFDB
 46249                           fsr2h	equ	0xFDA
 46250                           fsr2l	equ	0xFD9
 46251                           status	equ	0xFD8
 46252                           
 46253 ;; *************** function _rtcc_get_minutes *****************
 46254 ;; Defined at:
 46255 ;;		line 279 in file "rtcc.c"
 46256 ;; Parameters:    Size  Location     Type
 46257 ;;		None
 46258 ;; Auto vars:     Size  Location     Type
 46259 ;;		None
 46260 ;; Return value:  Size  Location     Type
 46261 ;;                  1    wreg      unsigned char 
 46262 ;; Registers used:
 46263 ;;		wreg, status,2
 46264 ;; Tracked objects:
 46265 ;;		On entry : 0/0
 46266 ;;		On exit  : 0/0
 46267 ;;		Unchanged: 0/0
 46268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46273 ;;Total ram usage:        0 bytes
 46274 ;; Hardware stack levels used:    1
 46275 ;; Hardware stack levels required when called:   10
 46276 ;; This function calls:
 46277 ;;		Nothing
 46278 ;; This function is called by:
 46279 ;;		__display_time
 46280 ;;		_rtcc_get_minutes_decimal
 46281 ;;		_rtcc_increment_minutes
 46282 ;;		_rtcc_decrement_minutes
 46283 ;;		_rtcc_write_eeprom
 46284 ;;		__fill_buffer_get_status
 46285 ;; This function uses a non-reentrant model
 46286 ;;
 46287                           
 46288                           	psect	text210
 46289  019052                     __ptext210:
 46290                           	opt stack 0
 46291  019052                     _rtcc_get_minutes:
 46292                           	opt stack 17
 46293                           
 46294                           ;rtcc.c: 281: RTCCFGbits.RTCPTR1 = 0;
 46295                           
 46296                           ;incstack = 0
 46297  019052  010F               	movlb	15	; () banked
 46298  019054  933F               	bcf	63,1,b	;volatile
 46299                           
 46300                           ;rtcc.c: 282: RTCCFGbits.RTCPTR0 = 0;
 46301  019056  913F               	bcf	63,0,b	;volatile
 46302  019058                     
 46303                           ; BSR set to: 15
 46304                           
 46305                           ; BSR set to: 15
 46306  019058  B93F               	btfsc	63,4,b	;volatile
 46307  01905A  D7FE               	goto	l2189
 46308                           
 46309                           ; BSR set to: 15
 46310                           ;rtcc.c: 284: return RTCVALH;
 46311                           
 46312                           ; BSR set to: 15
 46313  01905C  513B               	movf	59,w,b	;volatile
 46314  01905E  0012               	return	
 46315  019060                     __end_of_rtcc_get_minutes:
 46316                           	opt stack 0
 46317                           tosu	equ	0xFFF
 46318                           tosh	equ	0xFFE
 46319                           tosl	equ	0xFFD
 46320                           pclath	equ	0xFFA
 46321                           tblptru	equ	0xFF8
 46322                           tblptrh	equ	0xFF7
 46323                           tblptrl	equ	0xFF6
 46324                           tablat	equ	0xFF5
 46325                           prodh	equ	0xFF4
 46326                           prodl	equ	0xFF3
 46327                           intcon	equ	0xFF2
 46328                           intcon2	equ	0xFF1
 46329                           intcon3	equ	0xFF0
 46330                           indf0	equ	0xFEF
 46331                           postinc0	equ	0xFEE
 46332                           fsr0h	equ	0xFEA
 46333                           fsr0l	equ	0xFE9
 46334                           wreg	equ	0xFE8
 46335                           indf1	equ	0xFE7
 46336                           postinc1	equ	0xFE6
 46337                           postdec1	equ	0xFE5
 46338                           plusw1	equ	0xFE3
 46339                           fsr1h	equ	0xFE2
 46340                           fsr1l	equ	0xFE1
 46341                           indf2	equ	0xFDF
 46342                           postinc2	equ	0xFDE
 46343                           postdec2	equ	0xFDD
 46344                           plusw2	equ	0xFDB
 46345                           fsr2h	equ	0xFDA
 46346                           fsr2l	equ	0xFD9
 46347                           status	equ	0xFD8
 46348                           
 46349 ;; *************** function _rtcc_get_hours_decimal *****************
 46350 ;; Defined at:
 46351 ;;		line 249 in file "rtcc.c"
 46352 ;; Parameters:    Size  Location     Type
 46353 ;;		None
 46354 ;; Auto vars:     Size  Location     Type
 46355 ;;  bcd_hours       1    3[BANK0 ] unsigned char 
 46356 ;; Return value:  Size  Location     Type
 46357 ;;                  1    wreg      unsigned char 
 46358 ;; Registers used:
 46359 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 46360 ;; Tracked objects:
 46361 ;;		On entry : 0/0
 46362 ;;		On exit  : 0/0
 46363 ;;		Unchanged: 0/0
 46364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46366 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46368 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46369 ;;Total ram usage:        1 bytes
 46370 ;; Hardware stack levels used:    1
 46371 ;; Hardware stack levels required when called:   11
 46372 ;; This function calls:
 46373 ;;		__rtcc_bcd_to_decimal
 46374 ;;		_rtcc_get_hours
 46375 ;; This function is called by:
 46376 ;;		__get_time
 46377 ;;		__get_dateTime
 46378 ;; This function uses a non-reentrant model
 46379 ;;
 46380                           
 46381                           	psect	text211
 46382  018FD6                     __ptext211:
 46383                           	opt stack 0
 46384  018FD6                     _rtcc_get_hours_decimal:
 46385                           	opt stack 13
 46386                           
 46387                           ;rtcc.c: 251: uint8_t bcd_hours = rtcc_get_hours();
 46388                           
 46389                           ; BSR set to: 15
 46390                           ;incstack = 0
 46391  018FD6  EC30  F0C8         	call	_rtcc_get_hours	;wreg free
 46392  018FDA  0100               	movlb	0	; () banked
 46393  018FDC  6F63               	movwf	rtcc_get_hours_decimal@bcd_hours& (0+255),b
 46394                           
 46395                           ; BSR set to: 0
 46396                           ;rtcc.c: 252: return _rtcc_bcd_to_decimal(bcd_hours);
 46397  018FDE  5163               	movf	rtcc_get_hours_decimal@bcd_hours& (0+255),w,b
 46398  018FE0  ECAF  F0C6         	call	__rtcc_bcd_to_decimal
 46399  018FE4  0012               	return	
 46400  018FE6                     __end_of_rtcc_get_hours_decimal:
 46401                           	opt stack 0
 46402                           tosu	equ	0xFFF
 46403                           tosh	equ	0xFFE
 46404                           tosl	equ	0xFFD
 46405                           pclath	equ	0xFFA
 46406                           tblptru	equ	0xFF8
 46407                           tblptrh	equ	0xFF7
 46408                           tblptrl	equ	0xFF6
 46409                           tablat	equ	0xFF5
 46410                           prodh	equ	0xFF4
 46411                           prodl	equ	0xFF3
 46412                           intcon	equ	0xFF2
 46413                           intcon2	equ	0xFF1
 46414                           intcon3	equ	0xFF0
 46415                           indf0	equ	0xFEF
 46416                           postinc0	equ	0xFEE
 46417                           fsr0h	equ	0xFEA
 46418                           fsr0l	equ	0xFE9
 46419                           wreg	equ	0xFE8
 46420                           indf1	equ	0xFE7
 46421                           postinc1	equ	0xFE6
 46422                           postdec1	equ	0xFE5
 46423                           plusw1	equ	0xFE3
 46424                           fsr1h	equ	0xFE2
 46425                           fsr1l	equ	0xFE1
 46426                           indf2	equ	0xFDF
 46427                           postinc2	equ	0xFDE
 46428                           postdec2	equ	0xFDD
 46429                           plusw2	equ	0xFDB
 46430                           fsr2h	equ	0xFDA
 46431                           fsr2l	equ	0xFD9
 46432                           status	equ	0xFD8
 46433                           
 46434 ;; *************** function _rtcc_get_hours *****************
 46435 ;; Defined at:
 46436 ;;		line 241 in file "rtcc.c"
 46437 ;; Parameters:    Size  Location     Type
 46438 ;;		None
 46439 ;; Auto vars:     Size  Location     Type
 46440 ;;		None
 46441 ;; Return value:  Size  Location     Type
 46442 ;;                  1    wreg      unsigned char 
 46443 ;; Registers used:
 46444 ;;		wreg, status,2
 46445 ;; Tracked objects:
 46446 ;;		On entry : 0/0
 46447 ;;		On exit  : 0/0
 46448 ;;		Unchanged: 0/0
 46449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46454 ;;Total ram usage:        0 bytes
 46455 ;; Hardware stack levels used:    1
 46456 ;; Hardware stack levels required when called:   10
 46457 ;; This function calls:
 46458 ;;		Nothing
 46459 ;; This function is called by:
 46460 ;;		__display_time
 46461 ;;		_rtcc_get_hours_decimal
 46462 ;;		_rtcc_increment_hours
 46463 ;;		_rtcc_decrement_hours
 46464 ;;		_rtcc_write_eeprom
 46465 ;;		__fill_buffer_get_status
 46466 ;; This function uses a non-reentrant model
 46467 ;;
 46468                           
 46469                           	psect	text212
 46470  019060                     __ptext212:
 46471                           	opt stack 0
 46472  019060                     _rtcc_get_hours:
 46473                           	opt stack 17
 46474                           
 46475                           ;rtcc.c: 243: RTCCFGbits.RTCPTR1 = 0;
 46476                           
 46477                           ;incstack = 0
 46478  019060  010F               	movlb	15	; () banked
 46479  019062  933F               	bcf	63,1,b	;volatile
 46480                           
 46481                           ;rtcc.c: 244: RTCCFGbits.RTCPTR0 = 1;
 46482  019064  813F               	bsf	63,0,b	;volatile
 46483  019066                     
 46484                           ; BSR set to: 15
 46485                           
 46486                           ; BSR set to: 15
 46487  019066  B93F               	btfsc	63,4,b	;volatile
 46488  019068  D7FE               	goto	l2171
 46489                           
 46490                           ; BSR set to: 15
 46491                           ;rtcc.c: 246: return RTCVALL;
 46492                           
 46493                           ; BSR set to: 15
 46494  01906A  513A               	movf	58,w,b	;volatile
 46495  01906C  0012               	return	
 46496  01906E                     __end_of_rtcc_get_hours:
 46497                           	opt stack 0
 46498                           tosu	equ	0xFFF
 46499                           tosh	equ	0xFFE
 46500                           tosl	equ	0xFFD
 46501                           pclath	equ	0xFFA
 46502                           tblptru	equ	0xFF8
 46503                           tblptrh	equ	0xFF7
 46504                           tblptrl	equ	0xFF6
 46505                           tablat	equ	0xFF5
 46506                           prodh	equ	0xFF4
 46507                           prodl	equ	0xFF3
 46508                           intcon	equ	0xFF2
 46509                           intcon2	equ	0xFF1
 46510                           intcon3	equ	0xFF0
 46511                           indf0	equ	0xFEF
 46512                           postinc0	equ	0xFEE
 46513                           fsr0h	equ	0xFEA
 46514                           fsr0l	equ	0xFE9
 46515                           wreg	equ	0xFE8
 46516                           indf1	equ	0xFE7
 46517                           postinc1	equ	0xFE6
 46518                           postdec1	equ	0xFE5
 46519                           plusw1	equ	0xFE3
 46520                           fsr1h	equ	0xFE2
 46521                           fsr1l	equ	0xFE1
 46522                           indf2	equ	0xFDF
 46523                           postinc2	equ	0xFDE
 46524                           postdec2	equ	0xFDD
 46525                           plusw2	equ	0xFDB
 46526                           fsr2h	equ	0xFDA
 46527                           fsr2l	equ	0xFD9
 46528                           status	equ	0xFD8
 46529                           
 46530 ;; *************** function __get_date *****************
 46531 ;; Defined at:
 46532 ;;		line 392 in file "fat16.c"
 46533 ;; Parameters:    Size  Location     Type
 46534 ;;		None
 46535 ;; Auto vars:     Size  Location     Type
 46536 ;;  date            2   11[BANK0 ] unsigned int 
 46537 ;;  day             1   10[BANK0 ] unsigned char 
 46538 ;;  month           1    9[BANK0 ] unsigned char 
 46539 ;;  year            1    8[BANK0 ] unsigned char 
 46540 ;; Return value:  Size  Location     Type
 46541 ;;                  2    4[BANK0 ] unsigned int 
 46542 ;; Registers used:
 46543 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 46544 ;; Tracked objects:
 46545 ;;		On entry : 0/0
 46546 ;;		On exit  : 0/0
 46547 ;;		Unchanged: 0/0
 46548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46549 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46550 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46551 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46552 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46553 ;;Total ram usage:        9 bytes
 46554 ;; Hardware stack levels used:    1
 46555 ;; Hardware stack levels required when called:   12
 46556 ;; This function calls:
 46557 ;;		_rtcc_get_day_decimal
 46558 ;;		_rtcc_get_month_decimal
 46559 ;;		_rtcc_get_year_decimal
 46560 ;; This function is called by:
 46561 ;;		_fat_create_file
 46562 ;; This function uses a non-reentrant model
 46563 ;;
 46564                           
 46565                           	psect	text213
 46566  01733A                     __ptext213:
 46567                           	opt stack 0
 46568  01733A                     __get_date:
 46569                           	opt stack 13
 46570                           
 46571                           ;fat16.c: 395: uint16_t date;;fat16.c: 396: uint8_t year = rtcc_get_year_decimal();
 46572                           
 46573                           ; BSR set to: 15
 46574                           ;incstack = 0
 46575  01733A  ECF3  F0C7         	call	_rtcc_get_year_decimal	;wreg free
 46576  01733E  0100               	movlb	0	; () banked
 46577  017340  6F68               	movwf	__get_date@year& (0+255),b
 46578                           
 46579                           ;fat16.c: 397: uint8_t month = rtcc_get_month_decimal();
 46580  017342  ECFB  F0C7         	call	_rtcc_get_month_decimal	;wreg free
 46581  017346  0100               	movlb	0	; () banked
 46582  017348  6F69               	movwf	__get_date@month& (0+255),b
 46583                           
 46584                           ;fat16.c: 398: uint8_t day = rtcc_get_day_decimal();
 46585  01734A  EC03  F0C8         	call	_rtcc_get_day_decimal	;wreg free
 46586  01734E  0100               	movlb	0	; () banked
 46587  017350  6F6A               	movwf	__get_date@day& (0+255),b
 46588                           
 46589                           ; BSR set to: 0
 46590                           ;fat16.c: 399: date = (((year+20)&0b1111111) << 9);
 46591  017352  5168               	movf	__get_date@year& (0+255),w,b
 46592  017354  0F14               	addlw	20
 46593  017356  0B7F               	andlw	127
 46594  017358  6F66               	movwf	??__get_date& (0+255),b
 46595  01735A  6B67               	clrf	(??__get_date+1)& (0+255),b
 46596  01735C  0E09               	movlw	9
 46597  01735E                     u20495:
 46598  01735E  90D8               	bcf	status,0,c
 46599  017360  3766               	rlcf	??__get_date& (0+255),f,b
 46600  017362  3767               	rlcf	(??__get_date+1)& (0+255),f,b
 46601  017364  2EE8               	decfsz	wreg,f,c
 46602  017366  D7FB               	goto	u20495
 46603  017368  C066  F06B         	movff	??__get_date,__get_date@date
 46604  01736C  C067  F06C         	movff	??__get_date+1,__get_date@date+1
 46605                           
 46606                           ; BSR set to: 0
 46607                           ;fat16.c: 400: date |= ((month&0b1111) << 5);
 46608  017370  5169               	movf	__get_date@month& (0+255),w,b
 46609  017372  0B0F               	andlw	15
 46610  017374  6F66               	movwf	??__get_date& (0+255),b
 46611  017376  6B67               	clrf	(??__get_date+1)& (0+255),b
 46612  017378  0E05               	movlw	5
 46613  01737A                     u20505:
 46614  01737A  90D8               	bcf	status,0,c
 46615  01737C  3766               	rlcf	??__get_date& (0+255),f,b
 46616  01737E  3767               	rlcf	(??__get_date+1)& (0+255),f,b
 46617  017380  2EE8               	decfsz	wreg,f,c
 46618  017382  D7FB               	goto	u20505
 46619  017384  5166               	movf	??__get_date& (0+255),w,b
 46620  017386  136B               	iorwf	__get_date@date& (0+255),f,b
 46621  017388  5167               	movf	(??__get_date+1)& (0+255),w,b
 46622  01738A  136C               	iorwf	(__get_date@date+1)& (0+255),f,b
 46623                           
 46624                           ; BSR set to: 0
 46625                           ;fat16.c: 401: date |= (day&0b11111);
 46626  01738C  C06A  F066         	movff	__get_date@day,??__get_date
 46627  017390  0E1F               	movlw	31
 46628  017392  1766               	andwf	??__get_date& (0+255),f,b
 46629  017394  5166               	movf	??__get_date& (0+255),w,b
 46630  017396  136B               	iorwf	__get_date@date& (0+255),f,b
 46631                           
 46632                           ; BSR set to: 0
 46633                           ;fat16.c: 402: return date;
 46634  017398  C06B  F064         	movff	__get_date@date,?__get_date
 46635  01739C  C06C  F065         	movff	__get_date@date+1,?__get_date+1
 46636  0173A0  0012               	return	
 46637  0173A2                     __end_of__get_date:
 46638                           	opt stack 0
 46639                           tosu	equ	0xFFF
 46640                           tosh	equ	0xFFE
 46641                           tosl	equ	0xFFD
 46642                           pclath	equ	0xFFA
 46643                           tblptru	equ	0xFF8
 46644                           tblptrh	equ	0xFF7
 46645                           tblptrl	equ	0xFF6
 46646                           tablat	equ	0xFF5
 46647                           prodh	equ	0xFF4
 46648                           prodl	equ	0xFF3
 46649                           intcon	equ	0xFF2
 46650                           intcon2	equ	0xFF1
 46651                           intcon3	equ	0xFF0
 46652                           indf0	equ	0xFEF
 46653                           postinc0	equ	0xFEE
 46654                           fsr0h	equ	0xFEA
 46655                           fsr0l	equ	0xFE9
 46656                           wreg	equ	0xFE8
 46657                           indf1	equ	0xFE7
 46658                           postinc1	equ	0xFE6
 46659                           postdec1	equ	0xFE5
 46660                           plusw1	equ	0xFE3
 46661                           fsr1h	equ	0xFE2
 46662                           fsr1l	equ	0xFE1
 46663                           indf2	equ	0xFDF
 46664                           postinc2	equ	0xFDE
 46665                           postdec2	equ	0xFDD
 46666                           plusw2	equ	0xFDB
 46667                           fsr2h	equ	0xFDA
 46668                           fsr2l	equ	0xFD9
 46669                           status	equ	0xFD8
 46670                           
 46671 ;; *************** function _rtcc_get_year_decimal *****************
 46672 ;; Defined at:
 46673 ;;		line 135 in file "rtcc.c"
 46674 ;; Parameters:    Size  Location     Type
 46675 ;;		None
 46676 ;; Auto vars:     Size  Location     Type
 46677 ;;  bcd_year        1    3[BANK0 ] unsigned char 
 46678 ;; Return value:  Size  Location     Type
 46679 ;;                  1    wreg      unsigned char 
 46680 ;; Registers used:
 46681 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 46682 ;; Tracked objects:
 46683 ;;		On entry : 0/0
 46684 ;;		On exit  : 0/0
 46685 ;;		Unchanged: 0/0
 46686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46688 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46690 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46691 ;;Total ram usage:        1 bytes
 46692 ;; Hardware stack levels used:    1
 46693 ;; Hardware stack levels required when called:   11
 46694 ;; This function calls:
 46695 ;;		__rtcc_bcd_to_decimal
 46696 ;;		_rtcc_get_year
 46697 ;; This function is called by:
 46698 ;;		__get_date
 46699 ;;		__get_dateTime
 46700 ;; This function uses a non-reentrant model
 46701 ;;
 46702                           
 46703                           	psect	text214
 46704  018FE6                     __ptext214:
 46705                           	opt stack 0
 46706  018FE6                     _rtcc_get_year_decimal:
 46707                           	opt stack 13
 46708                           
 46709                           ;rtcc.c: 137: uint8_t bcd_year = rtcc_get_year();
 46710                           
 46711                           ; BSR set to: 0
 46712                           ;incstack = 0
 46713  018FE6  EC37  F0C8         	call	_rtcc_get_year	;wreg free
 46714  018FEA  0100               	movlb	0	; () banked
 46715  018FEC  6F63               	movwf	rtcc_get_year_decimal@bcd_year& (0+255),b
 46716                           
 46717                           ; BSR set to: 0
 46718                           ;rtcc.c: 138: return _rtcc_bcd_to_decimal(bcd_year);
 46719  018FEE  5163               	movf	rtcc_get_year_decimal@bcd_year& (0+255),w,b
 46720  018FF0  ECAF  F0C6         	call	__rtcc_bcd_to_decimal
 46721  018FF4  0012               	return	
 46722  018FF6                     __end_of_rtcc_get_year_decimal:
 46723                           	opt stack 0
 46724                           tosu	equ	0xFFF
 46725                           tosh	equ	0xFFE
 46726                           tosl	equ	0xFFD
 46727                           pclath	equ	0xFFA
 46728                           tblptru	equ	0xFF8
 46729                           tblptrh	equ	0xFF7
 46730                           tblptrl	equ	0xFF6
 46731                           tablat	equ	0xFF5
 46732                           prodh	equ	0xFF4
 46733                           prodl	equ	0xFF3
 46734                           intcon	equ	0xFF2
 46735                           intcon2	equ	0xFF1
 46736                           intcon3	equ	0xFF0
 46737                           indf0	equ	0xFEF
 46738                           postinc0	equ	0xFEE
 46739                           fsr0h	equ	0xFEA
 46740                           fsr0l	equ	0xFE9
 46741                           wreg	equ	0xFE8
 46742                           indf1	equ	0xFE7
 46743                           postinc1	equ	0xFE6
 46744                           postdec1	equ	0xFE5
 46745                           plusw1	equ	0xFE3
 46746                           fsr1h	equ	0xFE2
 46747                           fsr1l	equ	0xFE1
 46748                           indf2	equ	0xFDF
 46749                           postinc2	equ	0xFDE
 46750                           postdec2	equ	0xFDD
 46751                           plusw2	equ	0xFDB
 46752                           fsr2h	equ	0xFDA
 46753                           fsr2l	equ	0xFD9
 46754                           status	equ	0xFD8
 46755                           
 46756 ;; *************** function _rtcc_get_year *****************
 46757 ;; Defined at:
 46758 ;;		line 127 in file "rtcc.c"
 46759 ;; Parameters:    Size  Location     Type
 46760 ;;		None
 46761 ;; Auto vars:     Size  Location     Type
 46762 ;;		None
 46763 ;; Return value:  Size  Location     Type
 46764 ;;                  1    wreg      unsigned char 
 46765 ;; Registers used:
 46766 ;;		wreg, status,2
 46767 ;; Tracked objects:
 46768 ;;		On entry : 0/0
 46769 ;;		On exit  : 0/0
 46770 ;;		Unchanged: 0/0
 46771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46776 ;;Total ram usage:        0 bytes
 46777 ;; Hardware stack levels used:    1
 46778 ;; Hardware stack levels required when called:   10
 46779 ;; This function calls:
 46780 ;;		Nothing
 46781 ;; This function is called by:
 46782 ;;		__display_time
 46783 ;;		__number_of_days
 46784 ;;		_rtcc_get_year_decimal
 46785 ;;		_rtcc_increment_year
 46786 ;;		_rtcc_decrement_year
 46787 ;;		_rtcc_write_eeprom
 46788 ;;		__fill_buffer_get_status
 46789 ;; This function uses a non-reentrant model
 46790 ;;
 46791                           
 46792                           	psect	text215
 46793  01906E                     __ptext215:
 46794                           	opt stack 0
 46795  01906E                     _rtcc_get_year:
 46796                           	opt stack 17
 46797                           
 46798                           ;rtcc.c: 129: RTCCFGbits.RTCPTR1 = 1;
 46799                           
 46800                           ;incstack = 0
 46801  01906E  010F               	movlb	15	; () banked
 46802  019070  833F               	bsf	63,1,b	;volatile
 46803                           
 46804                           ;rtcc.c: 130: RTCCFGbits.RTCPTR0 = 1;
 46805  019072  813F               	bsf	63,0,b	;volatile
 46806  019074                     
 46807                           ; BSR set to: 15
 46808                           
 46809                           ; BSR set to: 15
 46810  019074  B93F               	btfsc	63,4,b	;volatile
 46811  019076  D7FE               	goto	l2117
 46812                           
 46813                           ; BSR set to: 15
 46814                           ;rtcc.c: 132: return RTCVALL;
 46815                           
 46816                           ; BSR set to: 15
 46817  019078  513A               	movf	58,w,b	;volatile
 46818  01907A  0012               	return	
 46819  01907C                     __end_of_rtcc_get_year:
 46820                           	opt stack 0
 46821                           tosu	equ	0xFFF
 46822                           tosh	equ	0xFFE
 46823                           tosl	equ	0xFFD
 46824                           pclath	equ	0xFFA
 46825                           tblptru	equ	0xFF8
 46826                           tblptrh	equ	0xFF7
 46827                           tblptrl	equ	0xFF6
 46828                           tablat	equ	0xFF5
 46829                           prodh	equ	0xFF4
 46830                           prodl	equ	0xFF3
 46831                           intcon	equ	0xFF2
 46832                           intcon2	equ	0xFF1
 46833                           intcon3	equ	0xFF0
 46834                           indf0	equ	0xFEF
 46835                           postinc0	equ	0xFEE
 46836                           fsr0h	equ	0xFEA
 46837                           fsr0l	equ	0xFE9
 46838                           wreg	equ	0xFE8
 46839                           indf1	equ	0xFE7
 46840                           postinc1	equ	0xFE6
 46841                           postdec1	equ	0xFE5
 46842                           plusw1	equ	0xFE3
 46843                           fsr1h	equ	0xFE2
 46844                           fsr1l	equ	0xFE1
 46845                           indf2	equ	0xFDF
 46846                           postinc2	equ	0xFDE
 46847                           postdec2	equ	0xFDD
 46848                           plusw2	equ	0xFDB
 46849                           fsr2h	equ	0xFDA
 46850                           fsr2l	equ	0xFD9
 46851                           status	equ	0xFD8
 46852                           
 46853 ;; *************** function _rtcc_get_month_decimal *****************
 46854 ;; Defined at:
 46855 ;;		line 173 in file "rtcc.c"
 46856 ;; Parameters:    Size  Location     Type
 46857 ;;		None
 46858 ;; Auto vars:     Size  Location     Type
 46859 ;;  bcd_month       1    3[BANK0 ] unsigned char 
 46860 ;; Return value:  Size  Location     Type
 46861 ;;                  1    wreg      unsigned char 
 46862 ;; Registers used:
 46863 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 46864 ;; Tracked objects:
 46865 ;;		On entry : 0/0
 46866 ;;		On exit  : 0/0
 46867 ;;		Unchanged: 0/0
 46868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46870 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46872 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46873 ;;Total ram usage:        1 bytes
 46874 ;; Hardware stack levels used:    1
 46875 ;; Hardware stack levels required when called:   11
 46876 ;; This function calls:
 46877 ;;		__rtcc_bcd_to_decimal
 46878 ;;		_rtcc_get_month
 46879 ;; This function is called by:
 46880 ;;		__get_date
 46881 ;;		__get_dateTime
 46882 ;; This function uses a non-reentrant model
 46883 ;;
 46884                           
 46885                           	psect	text216
 46886  018FF6                     __ptext216:
 46887                           	opt stack 0
 46888  018FF6                     _rtcc_get_month_decimal:
 46889                           	opt stack 13
 46890                           
 46891                           ;rtcc.c: 175: uint8_t bcd_month = rtcc_get_month();
 46892                           
 46893                           ; BSR set to: 15
 46894                           ;incstack = 0
 46895  018FF6  EC3E  F0C8         	call	_rtcc_get_month	;wreg free
 46896  018FFA  0100               	movlb	0	; () banked
 46897  018FFC  6F63               	movwf	rtcc_get_month_decimal@bcd_month& (0+255),b
 46898                           
 46899                           ; BSR set to: 0
 46900                           ;rtcc.c: 176: return _rtcc_bcd_to_decimal(bcd_month);
 46901  018FFE  5163               	movf	rtcc_get_month_decimal@bcd_month& (0+255),w,b
 46902  019000  ECAF  F0C6         	call	__rtcc_bcd_to_decimal
 46903  019004  0012               	return	
 46904  019006                     __end_of_rtcc_get_month_decimal:
 46905                           	opt stack 0
 46906                           tosu	equ	0xFFF
 46907                           tosh	equ	0xFFE
 46908                           tosl	equ	0xFFD
 46909                           pclath	equ	0xFFA
 46910                           tblptru	equ	0xFF8
 46911                           tblptrh	equ	0xFF7
 46912                           tblptrl	equ	0xFF6
 46913                           tablat	equ	0xFF5
 46914                           prodh	equ	0xFF4
 46915                           prodl	equ	0xFF3
 46916                           intcon	equ	0xFF2
 46917                           intcon2	equ	0xFF1
 46918                           intcon3	equ	0xFF0
 46919                           indf0	equ	0xFEF
 46920                           postinc0	equ	0xFEE
 46921                           fsr0h	equ	0xFEA
 46922                           fsr0l	equ	0xFE9
 46923                           wreg	equ	0xFE8
 46924                           indf1	equ	0xFE7
 46925                           postinc1	equ	0xFE6
 46926                           postdec1	equ	0xFE5
 46927                           plusw1	equ	0xFE3
 46928                           fsr1h	equ	0xFE2
 46929                           fsr1l	equ	0xFE1
 46930                           indf2	equ	0xFDF
 46931                           postinc2	equ	0xFDE
 46932                           postdec2	equ	0xFDD
 46933                           plusw2	equ	0xFDB
 46934                           fsr2h	equ	0xFDA
 46935                           fsr2l	equ	0xFD9
 46936                           status	equ	0xFD8
 46937                           
 46938 ;; *************** function _rtcc_get_month *****************
 46939 ;; Defined at:
 46940 ;;		line 165 in file "rtcc.c"
 46941 ;; Parameters:    Size  Location     Type
 46942 ;;		None
 46943 ;; Auto vars:     Size  Location     Type
 46944 ;;		None
 46945 ;; Return value:  Size  Location     Type
 46946 ;;                  1    wreg      unsigned char 
 46947 ;; Registers used:
 46948 ;;		wreg, status,2
 46949 ;; Tracked objects:
 46950 ;;		On entry : 0/0
 46951 ;;		On exit  : 0/0
 46952 ;;		Unchanged: 0/0
 46953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46958 ;;Total ram usage:        0 bytes
 46959 ;; Hardware stack levels used:    1
 46960 ;; Hardware stack levels required when called:   10
 46961 ;; This function calls:
 46962 ;;		Nothing
 46963 ;; This function is called by:
 46964 ;;		__display_time
 46965 ;;		__number_of_days
 46966 ;;		_rtcc_get_month_decimal
 46967 ;;		_rtcc_increment_month
 46968 ;;		_rtcc_decrement_month
 46969 ;;		_rtcc_write_eeprom
 46970 ;;		__fill_buffer_get_status
 46971 ;; This function uses a non-reentrant model
 46972 ;;
 46973                           
 46974                           	psect	text217
 46975  01907C                     __ptext217:
 46976                           	opt stack 0
 46977  01907C                     _rtcc_get_month:
 46978                           	opt stack 17
 46979                           
 46980                           ;rtcc.c: 167: RTCCFGbits.RTCPTR1 = 1;
 46981                           
 46982                           ;incstack = 0
 46983  01907C  010F               	movlb	15	; () banked
 46984  01907E  833F               	bsf	63,1,b	;volatile
 46985                           
 46986                           ;rtcc.c: 168: RTCCFGbits.RTCPTR0 = 0;
 46987  019080  913F               	bcf	63,0,b	;volatile
 46988  019082                     
 46989                           ; BSR set to: 15
 46990                           
 46991                           ; BSR set to: 15
 46992  019082  B93F               	btfsc	63,4,b	;volatile
 46993  019084  D7FE               	goto	l2135
 46994                           
 46995                           ; BSR set to: 15
 46996                           ;rtcc.c: 170: return RTCVALH;
 46997                           
 46998                           ; BSR set to: 15
 46999  019086  513B               	movf	59,w,b	;volatile
 47000  019088  0012               	return	
 47001  01908A                     __end_of_rtcc_get_month:
 47002                           	opt stack 0
 47003                           tosu	equ	0xFFF
 47004                           tosh	equ	0xFFE
 47005                           tosl	equ	0xFFD
 47006                           pclath	equ	0xFFA
 47007                           tblptru	equ	0xFF8
 47008                           tblptrh	equ	0xFF7
 47009                           tblptrl	equ	0xFF6
 47010                           tablat	equ	0xFF5
 47011                           prodh	equ	0xFF4
 47012                           prodl	equ	0xFF3
 47013                           intcon	equ	0xFF2
 47014                           intcon2	equ	0xFF1
 47015                           intcon3	equ	0xFF0
 47016                           indf0	equ	0xFEF
 47017                           postinc0	equ	0xFEE
 47018                           fsr0h	equ	0xFEA
 47019                           fsr0l	equ	0xFE9
 47020                           wreg	equ	0xFE8
 47021                           indf1	equ	0xFE7
 47022                           postinc1	equ	0xFE6
 47023                           postdec1	equ	0xFE5
 47024                           plusw1	equ	0xFE3
 47025                           fsr1h	equ	0xFE2
 47026                           fsr1l	equ	0xFE1
 47027                           indf2	equ	0xFDF
 47028                           postinc2	equ	0xFDE
 47029                           postdec2	equ	0xFDD
 47030                           plusw2	equ	0xFDB
 47031                           fsr2h	equ	0xFDA
 47032                           fsr2l	equ	0xFD9
 47033                           status	equ	0xFD8
 47034                           
 47035 ;; *************** function _rtcc_get_day_decimal *****************
 47036 ;; Defined at:
 47037 ;;		line 211 in file "rtcc.c"
 47038 ;; Parameters:    Size  Location     Type
 47039 ;;		None
 47040 ;; Auto vars:     Size  Location     Type
 47041 ;;  bcd_day         1    3[BANK0 ] unsigned char 
 47042 ;; Return value:  Size  Location     Type
 47043 ;;                  1    wreg      unsigned char 
 47044 ;; Registers used:
 47045 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 47046 ;; Tracked objects:
 47047 ;;		On entry : 0/0
 47048 ;;		On exit  : 0/0
 47049 ;;		Unchanged: 0/0
 47050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47052 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47054 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47055 ;;Total ram usage:        1 bytes
 47056 ;; Hardware stack levels used:    1
 47057 ;; Hardware stack levels required when called:   11
 47058 ;; This function calls:
 47059 ;;		__rtcc_bcd_to_decimal
 47060 ;;		_rtcc_get_day
 47061 ;; This function is called by:
 47062 ;;		__get_date
 47063 ;;		__get_dateTime
 47064 ;; This function uses a non-reentrant model
 47065 ;;
 47066                           
 47067                           	psect	text218
 47068  019006                     __ptext218:
 47069                           	opt stack 0
 47070  019006                     _rtcc_get_day_decimal:
 47071                           	opt stack 13
 47072                           
 47073                           ;rtcc.c: 213: uint8_t bcd_day = rtcc_get_day();
 47074                           
 47075                           ; BSR set to: 15
 47076                           ;incstack = 0
 47077  019006  EC45  F0C8         	call	_rtcc_get_day	;wreg free
 47078  01900A  0100               	movlb	0	; () banked
 47079  01900C  6F63               	movwf	rtcc_get_day_decimal@bcd_day& (0+255),b
 47080                           
 47081                           ; BSR set to: 0
 47082                           ;rtcc.c: 214: return _rtcc_bcd_to_decimal(bcd_day);
 47083  01900E  5163               	movf	rtcc_get_day_decimal@bcd_day& (0+255),w,b
 47084  019010  ECAF  F0C6         	call	__rtcc_bcd_to_decimal
 47085  019014  0012               	return	
 47086  019016                     __end_of_rtcc_get_day_decimal:
 47087                           	opt stack 0
 47088                           tosu	equ	0xFFF
 47089                           tosh	equ	0xFFE
 47090                           tosl	equ	0xFFD
 47091                           pclath	equ	0xFFA
 47092                           tblptru	equ	0xFF8
 47093                           tblptrh	equ	0xFF7
 47094                           tblptrl	equ	0xFF6
 47095                           tablat	equ	0xFF5
 47096                           prodh	equ	0xFF4
 47097                           prodl	equ	0xFF3
 47098                           intcon	equ	0xFF2
 47099                           intcon2	equ	0xFF1
 47100                           intcon3	equ	0xFF0
 47101                           indf0	equ	0xFEF
 47102                           postinc0	equ	0xFEE
 47103                           fsr0h	equ	0xFEA
 47104                           fsr0l	equ	0xFE9
 47105                           wreg	equ	0xFE8
 47106                           indf1	equ	0xFE7
 47107                           postinc1	equ	0xFE6
 47108                           postdec1	equ	0xFE5
 47109                           plusw1	equ	0xFE3
 47110                           fsr1h	equ	0xFE2
 47111                           fsr1l	equ	0xFE1
 47112                           indf2	equ	0xFDF
 47113                           postinc2	equ	0xFDE
 47114                           postdec2	equ	0xFDD
 47115                           plusw2	equ	0xFDB
 47116                           fsr2h	equ	0xFDA
 47117                           fsr2l	equ	0xFD9
 47118                           status	equ	0xFD8
 47119                           
 47120 ;; *************** function _rtcc_get_day *****************
 47121 ;; Defined at:
 47122 ;;		line 203 in file "rtcc.c"
 47123 ;; Parameters:    Size  Location     Type
 47124 ;;		None
 47125 ;; Auto vars:     Size  Location     Type
 47126 ;;		None
 47127 ;; Return value:  Size  Location     Type
 47128 ;;                  1    wreg      unsigned char 
 47129 ;; Registers used:
 47130 ;;		wreg, status,2
 47131 ;; Tracked objects:
 47132 ;;		On entry : 0/0
 47133 ;;		On exit  : 0/0
 47134 ;;		Unchanged: 0/0
 47135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47140 ;;Total ram usage:        0 bytes
 47141 ;; Hardware stack levels used:    1
 47142 ;; Hardware stack levels required when called:   10
 47143 ;; This function calls:
 47144 ;;		Nothing
 47145 ;; This function is called by:
 47146 ;;		__display_time
 47147 ;;		_rtcc_correct_day
 47148 ;;		_rtcc_get_day_decimal
 47149 ;;		_rtcc_increment_day
 47150 ;;		_rtcc_decrement_day
 47151 ;;		_rtcc_read_eeprom
 47152 ;;		_rtcc_write_eeprom
 47153 ;;		__fill_buffer_get_status
 47154 ;; This function uses a non-reentrant model
 47155 ;;
 47156                           
 47157                           	psect	text219
 47158  01908A                     __ptext219:
 47159                           	opt stack 0
 47160  01908A                     _rtcc_get_day:
 47161                           	opt stack 17
 47162                           
 47163                           ;rtcc.c: 205: RTCCFGbits.RTCPTR1 = 1;
 47164                           
 47165                           ;incstack = 0
 47166  01908A  010F               	movlb	15	; () banked
 47167  01908C  833F               	bsf	63,1,b	;volatile
 47168                           
 47169                           ;rtcc.c: 206: RTCCFGbits.RTCPTR0 = 0;
 47170  01908E  913F               	bcf	63,0,b	;volatile
 47171  019090                     
 47172                           ; BSR set to: 15
 47173                           
 47174                           ; BSR set to: 15
 47175  019090  B93F               	btfsc	63,4,b	;volatile
 47176  019092  D7FE               	goto	l2153
 47177                           
 47178                           ; BSR set to: 15
 47179                           ;rtcc.c: 208: return RTCVALL;
 47180                           
 47181                           ; BSR set to: 15
 47182  019094  513A               	movf	58,w,b	;volatile
 47183  019096  0012               	return	
 47184  019098                     __end_of_rtcc_get_day:
 47185                           	opt stack 0
 47186                           tosu	equ	0xFFF
 47187                           tosh	equ	0xFFE
 47188                           tosl	equ	0xFFD
 47189                           pclath	equ	0xFFA
 47190                           tblptru	equ	0xFF8
 47191                           tblptrh	equ	0xFF7
 47192                           tblptrl	equ	0xFF6
 47193                           tablat	equ	0xFF5
 47194                           prodh	equ	0xFF4
 47195                           prodl	equ	0xFF3
 47196                           intcon	equ	0xFF2
 47197                           intcon2	equ	0xFF1
 47198                           intcon3	equ	0xFF0
 47199                           indf0	equ	0xFEF
 47200                           postinc0	equ	0xFEE
 47201                           fsr0h	equ	0xFEA
 47202                           fsr0l	equ	0xFE9
 47203                           wreg	equ	0xFE8
 47204                           indf1	equ	0xFE7
 47205                           postinc1	equ	0xFE6
 47206                           postdec1	equ	0xFE5
 47207                           plusw1	equ	0xFE3
 47208                           fsr1h	equ	0xFE2
 47209                           fsr1l	equ	0xFE1
 47210                           indf2	equ	0xFDF
 47211                           postinc2	equ	0xFDE
 47212                           postdec2	equ	0xFDD
 47213                           plusw2	equ	0xFDB
 47214                           fsr2h	equ	0xFDA
 47215                           fsr2l	equ	0xFD9
 47216                           status	equ	0xFD8
 47217                           
 47218 ;; *************** function __rtcc_bcd_to_decimal *****************
 47219 ;; Defined at:
 47220 ;;		line 7 in file "rtcc.c"
 47221 ;; Parameters:    Size  Location     Type
 47222 ;;  input           1    wreg     unsigned char 
 47223 ;; Auto vars:     Size  Location     Type
 47224 ;;  input           1    2[BANK0 ] unsigned char 
 47225 ;;  ones            1    1[BANK0 ] unsigned char 
 47226 ;;  tens            1    0[BANK0 ] unsigned char 
 47227 ;; Return value:  Size  Location     Type
 47228 ;;                  1    wreg      unsigned char 
 47229 ;; Registers used:
 47230 ;;		wreg, status,2, status,0, prodl, prodh
 47231 ;; Tracked objects:
 47232 ;;		On entry : 0/0
 47233 ;;		On exit  : 0/0
 47234 ;;		Unchanged: 0/0
 47235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47237 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47239 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47240 ;;Total ram usage:        3 bytes
 47241 ;; Hardware stack levels used:    1
 47242 ;; Hardware stack levels required when called:   10
 47243 ;; This function calls:
 47244 ;;		Nothing
 47245 ;; This function is called by:
 47246 ;;		_rtcc_get_year_decimal
 47247 ;;		_rtcc_get_month_decimal
 47248 ;;		_rtcc_get_day_decimal
 47249 ;;		_rtcc_get_hours_decimal
 47250 ;;		_rtcc_get_minutes_decimal
 47251 ;;		_rtcc_get_seconds_decimal
 47252 ;; This function uses a non-reentrant model
 47253 ;;
 47254                           
 47255                           	psect	text220
 47256  018D5E                     __ptext220:
 47257                           	opt stack 0
 47258  018D5E                     __rtcc_bcd_to_decimal:
 47259                           	opt stack 17
 47260                           
 47261                           ; BSR set to: 15
 47262                           ;incstack = 0
 47263                           ;__rtcc_bcd_to_decimal@input stored from wreg
 47264  018D5E  0100               	movlb	0	; () banked
 47265  018D60  6F62               	movwf	__rtcc_bcd_to_decimal@input& (0+255),b
 47266                           
 47267                           ;rtcc.c: 9: uint8_t tens = (input & 0xF0) >> 4;
 47268  018D62  0100               	movlb	0	; () banked
 47269  018D64  3962               	swapf	__rtcc_bcd_to_decimal@input& (0+255),w,b
 47270  018D66  0B0F               	andlw	15
 47271  018D68  0B0F               	andlw	15
 47272  018D6A  6F60               	movwf	__rtcc_bcd_to_decimal@tens& (0+255),b
 47273                           
 47274                           ;rtcc.c: 10: uint8_t ones = input & 0x0F;
 47275  018D6C  5162               	movf	__rtcc_bcd_to_decimal@input& (0+255),w,b
 47276  018D6E  0B0F               	andlw	15
 47277  018D70  6F61               	movwf	__rtcc_bcd_to_decimal@ones& (0+255),b
 47278                           
 47279                           ; BSR set to: 0
 47280                           ;rtcc.c: 11: return ((10*tens) + ones);
 47281  018D72  5160               	movf	__rtcc_bcd_to_decimal@tens& (0+255),w,b
 47282  018D74  0D0A               	mullw	10
 47283  018D76  50F3               	movf	prodl,w,c
 47284  018D78  2561               	addwf	__rtcc_bcd_to_decimal@ones& (0+255),w,b
 47285  018D7A  0012               	return	
 47286  018D7C                     __end_of__rtcc_bcd_to_decimal:
 47287                           	opt stack 0
 47288                           tosu	equ	0xFFF
 47289                           tosh	equ	0xFFE
 47290                           tosl	equ	0xFFD
 47291                           pclath	equ	0xFFA
 47292                           tblptru	equ	0xFF8
 47293                           tblptrh	equ	0xFF7
 47294                           tblptrl	equ	0xFF6
 47295                           tablat	equ	0xFF5
 47296                           prodh	equ	0xFF4
 47297                           prodl	equ	0xFF3
 47298                           intcon	equ	0xFF2
 47299                           intcon2	equ	0xFF1
 47300                           intcon3	equ	0xFF0
 47301                           indf0	equ	0xFEF
 47302                           postinc0	equ	0xFEE
 47303                           fsr0h	equ	0xFEA
 47304                           fsr0l	equ	0xFE9
 47305                           wreg	equ	0xFE8
 47306                           indf1	equ	0xFE7
 47307                           postinc1	equ	0xFE6
 47308                           postdec1	equ	0xFE5
 47309                           plusw1	equ	0xFE3
 47310                           fsr1h	equ	0xFE2
 47311                           fsr1l	equ	0xFE1
 47312                           indf2	equ	0xFDF
 47313                           postinc2	equ	0xFDE
 47314                           postdec2	equ	0xFDD
 47315                           plusw2	equ	0xFDB
 47316                           fsr2h	equ	0xFDA
 47317                           fsr2l	equ	0xFD9
 47318                           status	equ	0xFD8
 47319                           
 47320 ;; *************** function __get_available_root_entry *****************
 47321 ;; Defined at:
 47322 ;;		line 442 in file "fat16.c"
 47323 ;; Parameters:    Size  Location     Type
 47324 ;;		None
 47325 ;; Auto vars:     Size  Location     Type
 47326 ;;  file_number     1   53[BANK0 ] unsigned char 
 47327 ;; Return value:  Size  Location     Type
 47328 ;;                  1    wreg      unsigned char 
 47329 ;; Registers used:
 47330 ;;		wreg, status,2, status,0, cstack
 47331 ;; Tracked objects:
 47332 ;;		On entry : 0/0
 47333 ;;		On exit  : 0/0
 47334 ;;		Unchanged: 0/0
 47335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47337 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47339 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47340 ;;Total ram usage:        1 bytes
 47341 ;; Hardware stack levels used:    1
 47342 ;; Hardware stack levels required when called:   16
 47343 ;; This function calls:
 47344 ;;		__root_is_available
 47345 ;; This function is called by:
 47346 ;;		_fat_create_file
 47347 ;; This function uses a non-reentrant model
 47348 ;;
 47349                           
 47350                           	psect	text221
 47351  0189CA                     __ptext221:
 47352                           	opt stack 0
 47353  0189CA                     __get_available_root_entry:
 47354                           	opt stack 9
 47355                           
 47356                           ;fat16.c: 444: uint8_t file_number;;fat16.c: 446: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 47357                           
 47358                           ; BSR set to: 0
 47359                           ;incstack = 0
 47360  0189CA  0E00               	movlw	0
 47361  0189CC  0100               	movlb	0	; () banked
 47362  0189CE  6F95               	movwf	__get_available_root_entry@file_number& (0+255),b
 47363  0189D0                     l22315:
 47364                           
 47365                           ; BSR set to: 0
 47366  0189D0  0E3F               	movlw	63
 47367  0189D2  6595               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 47368  0189D4  D001               	goto	l2857
 47369  0189D6  D00C               	goto	u20530
 47370  0189D8                     l2857:
 47371                           
 47372                           ; BSR set to: 0
 47373                           ;fat16.c: 447: {;fat16.c: 448: if(_root_is_available(file_number))
 47374                           
 47375                           ; BSR set to: 0
 47376  0189D8  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 47377  0189DA  EC95  F0B8         	call	__root_is_available
 47378  0189DE  0900               	iorlw	0
 47379  0189E0  B4D8               	btfsc	status,2,c
 47380  0189E2  D003               	goto	l2859
 47381                           
 47382                           ;fat16.c: 449: {;fat16.c: 450: return file_number;
 47383  0189E4  0100               	movlb	0	; () banked
 47384  0189E6  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 47385                           
 47386                           ; BSR set to: 0
 47387  0189E8  0012               	return	
 47388  0189EA                     l2859:
 47389                           
 47390                           ; BSR set to: 0
 47391  0189EA  0100               	movlb	0	; () banked
 47392  0189EC  2B95               	incf	__get_available_root_entry@file_number& (0+255),f,b
 47393  0189EE  D7F0               	goto	l22315
 47394  0189F0                     u20530:
 47395                           
 47396                           ; BSR set to: 0
 47397                           ;fat16.c: 451: };fat16.c: 452: };fat16.c: 453: return 0xFF;
 47398                           
 47399                           ; BSR set to: 0
 47400  0189F0  0EFF               	movlw	255
 47401  0189F2  0012               	return	
 47402  0189F4                     __end_of__get_available_root_entry:
 47403                           	opt stack 0
 47404                           tosu	equ	0xFFF
 47405                           tosh	equ	0xFFE
 47406                           tosl	equ	0xFFD
 47407                           pclath	equ	0xFFA
 47408                           tblptru	equ	0xFF8
 47409                           tblptrh	equ	0xFF7
 47410                           tblptrl	equ	0xFF6
 47411                           tablat	equ	0xFF5
 47412                           prodh	equ	0xFF4
 47413                           prodl	equ	0xFF3
 47414                           intcon	equ	0xFF2
 47415                           intcon2	equ	0xFF1
 47416                           intcon3	equ	0xFF0
 47417                           indf0	equ	0xFEF
 47418                           postinc0	equ	0xFEE
 47419                           fsr0h	equ	0xFEA
 47420                           fsr0l	equ	0xFE9
 47421                           wreg	equ	0xFE8
 47422                           indf1	equ	0xFE7
 47423                           postinc1	equ	0xFE6
 47424                           postdec1	equ	0xFE5
 47425                           plusw1	equ	0xFE3
 47426                           fsr1h	equ	0xFE2
 47427                           fsr1l	equ	0xFE1
 47428                           indf2	equ	0xFDF
 47429                           postinc2	equ	0xFDE
 47430                           postdec2	equ	0xFDD
 47431                           plusw2	equ	0xFDB
 47432                           fsr2h	equ	0xFDA
 47433                           fsr2l	equ	0xFD9
 47434                           status	equ	0xFD8
 47435                           
 47436 ;; *************** function _fat_copy_sector_to_buffer *****************
 47437 ;; Defined at:
 47438 ;;		line 1420 in file "fat16.c"
 47439 ;; Parameters:    Size  Location     Type
 47440 ;;  file_number     1    wreg     unsigned char 
 47441 ;;  sector          2   66[BANK0 ] unsigned int 
 47442 ;; Auto vars:     Size  Location     Type
 47443 ;;  file_number     1   82[BANK0 ] unsigned char 
 47444 ;;  file_size       4   72[BANK0 ] unsigned long 
 47445 ;;  cluster         2   80[BANK0 ] unsigned int 
 47446 ;;  physical_sec    2   78[BANK0 ] unsigned int 
 47447 ;;  number_of_cl    2   76[BANK0 ] unsigned int 
 47448 ;; Return value:  Size  Location     Type
 47449 ;;                  1    wreg      unsigned char 
 47450 ;; Registers used:
 47451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 47452 ;; Tracked objects:
 47453 ;;		On entry : 0/0
 47454 ;;		On exit  : 0/0
 47455 ;;		Unchanged: 0/0
 47456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47457 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47458 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47459 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47460 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47461 ;;Total ram usage:       17 bytes
 47462 ;; Hardware stack levels used:    1
 47463 ;; Hardware stack levels required when called:   17
 47464 ;; This function calls:
 47465 ;;		__data_sector_from_cluster
 47466 ;;		__find_nth_cluster
 47467 ;;		__get_first_cluster
 47468 ;;		__root_is_available
 47469 ;;		_fat_get_file_size
 47470 ;;		_flash_copy_page_to_buffer
 47471 ;; This function is called by:
 47472 ;;		_fat_copy_file
 47473 ;;		__parse_sector_to_buffer
 47474 ;; This function uses a non-reentrant model
 47475 ;;
 47476                           
 47477                           	psect	text222
 47478  015800                     __ptext222:
 47479                           	opt stack 0
 47480  015800                     _fat_copy_sector_to_buffer:
 47481                           	opt stack 9
 47482                           
 47483                           ; BSR set to: 0
 47484                           ;incstack = 0
 47485                           ;fat_copy_sector_to_buffer@file_number stored from wreg
 47486  015800  0100               	movlb	0	; () banked
 47487  015802  6FB2               	movwf	fat_copy_sector_to_buffer@file_number& (0+255),b
 47488                           
 47489                           ;fat16.c: 1422: uint32_t file_size;;fat16.c: 1423: uint16_t number_of_clusters;;fat16.c:
      +                           1424: uint16_t cluster;;fat16.c: 1425: uint16_t physical_sector;;fat16.c: 1428: if(_roo
      +                          t_is_available(file_number))
 47490  015804  0100               	movlb	0	; () banked
 47491  015806  51B2               	movf	fat_copy_sector_to_buffer@file_number& (0+255),w,b
 47492  015808  EC95  F0B8         	call	__root_is_available
 47493  01580C  0900               	iorlw	0
 47494  01580E  B4D8               	btfsc	status,2,c
 47495  015810  D002               	goto	l3128
 47496                           
 47497                           ;fat16.c: 1429: {;fat16.c: 1431: return 0xFF;
 47498  015812  0EFF               	movlw	255
 47499  015814  0012               	return	
 47500  015816                     l3128:
 47501                           
 47502                           ;fat16.c: 1432: };fat16.c: 1435: file_size = fat_get_file_size(file_number);
 47503  015816  0100               	movlb	0	; () banked
 47504  015818  51B2               	movf	fat_copy_sector_to_buffer@file_number& (0+255),w,b
 47505  01581A  ECFC  F0B6         	call	_fat_get_file_size
 47506  01581E  C095  F0A8         	movff	?_fat_get_file_size,fat_copy_sector_to_buffer@file_size
 47507  015822  C096  F0A9         	movff	?_fat_get_file_size+1,fat_copy_sector_to_buffer@file_size+1
 47508  015826  C097  F0AA         	movff	?_fat_get_file_size+2,fat_copy_sector_to_buffer@file_size+2
 47509  01582A  C098  F0AB         	movff	?_fat_get_file_size+3,fat_copy_sector_to_buffer@file_size+3
 47510                           
 47511                           ;fat16.c: 1438: number_of_clusters = (uint16_t) ((file_size + 512 - 1) >> 9);
 47512  01582E  0EFF               	movlw	255
 47513  015830  0100               	movlb	0	; () banked
 47514  015832  25A8               	addwf	fat_copy_sector_to_buffer@file_size& (0+255),w,b
 47515  015834  6FA4               	movwf	??_fat_copy_sector_to_buffer& (0+255),b
 47516  015836  0E01               	movlw	1
 47517  015838  21A9               	addwfc	(fat_copy_sector_to_buffer@file_size+1)& (0+255),w,b
 47518  01583A  6FA5               	movwf	(??_fat_copy_sector_to_buffer+1)& (0+255),b
 47519  01583C  0E00               	movlw	0
 47520  01583E  21AA               	addwfc	(fat_copy_sector_to_buffer@file_size+2)& (0+255),w,b
 47521  015840  6FA6               	movwf	(??_fat_copy_sector_to_buffer+2)& (0+255),b
 47522  015842  0E00               	movlw	0
 47523  015844  21AB               	addwfc	(fat_copy_sector_to_buffer@file_size+3)& (0+255),w,b
 47524  015846  6FA7               	movwf	(??_fat_copy_sector_to_buffer+3)& (0+255),b
 47525  015848  0E0A               	movlw	10
 47526  01584A  D005               	goto	u21240
 47527  01584C                     u21245:
 47528  01584C  90D8               	bcf	status,0,c
 47529  01584E  33A7               	rrcf	(??_fat_copy_sector_to_buffer+3)& (0+255),f,b
 47530  015850  33A6               	rrcf	(??_fat_copy_sector_to_buffer+2)& (0+255),f,b
 47531  015852  33A5               	rrcf	(??_fat_copy_sector_to_buffer+1)& (0+255),f,b
 47532  015854  33A4               	rrcf	??_fat_copy_sector_to_buffer& (0+255),f,b
 47533  015856                     u21240:
 47534  015856  2EE8               	decfsz	wreg,f,c
 47535  015858  D7F9               	goto	u21245
 47536  01585A  C0A4  F0AC         	movff	??_fat_copy_sector_to_buffer,fat_copy_sector_to_buffer@number_of_clusters
 47537  01585E  C0A5  F0AD         	movff	??_fat_copy_sector_to_buffer+1,fat_copy_sector_to_buffer@number_of_clusters+1
 47538                           
 47539                           ; BSR set to: 0
 47540                           ;fat16.c: 1439: if(sector >= number_of_clusters)
 47541  015862  51AC               	movf	fat_copy_sector_to_buffer@number_of_clusters& (0+255),w,b
 47542  015864  5DA2               	subwf	fat_copy_sector_to_buffer@sector& (0+255),w,b
 47543  015866  51AD               	movf	(fat_copy_sector_to_buffer@number_of_clusters+1)& (0+255),w,b
 47544  015868  59A3               	subwfb	(fat_copy_sector_to_buffer@sector+1)& (0+255),w,b
 47545  01586A  A0D8               	btfss	status,0,c
 47546  01586C  D002               	goto	l3130
 47547                           
 47548                           ; BSR set to: 0
 47549                           ;fat16.c: 1440: {;fat16.c: 1442: return 0xFE;
 47550  01586E  0EFE               	movlw	254
 47551                           
 47552                           ; BSR set to: 0
 47553  015870  0012               	return	
 47554  015872                     l3130:
 47555                           
 47556                           ; BSR set to: 0
 47557                           ;fat16.c: 1443: };fat16.c: 1446: cluster = _get_first_cluster(file_number);
 47558                           
 47559                           ; BSR set to: 0
 47560  015872  51B2               	movf	fat_copy_sector_to_buffer@file_number& (0+255),w,b
 47561  015874  EC82  F0BB         	call	__get_first_cluster
 47562  015878  C08F  F0B0         	movff	?__get_first_cluster,fat_copy_sector_to_buffer@cluster
 47563  01587C  C090  F0B1         	movff	?__get_first_cluster+1,fat_copy_sector_to_buffer@cluster+1
 47564                           
 47565                           ;fat16.c: 1447: cluster = _find_nth_cluster(cluster, sector);
 47566  015880  C0B0  F097         	movff	fat_copy_sector_to_buffer@cluster,__find_nth_cluster@cluster
 47567  015884  C0B1  F098         	movff	fat_copy_sector_to_buffer@cluster+1,__find_nth_cluster@cluster+1
 47568  015888  C0A2  F099         	movff	fat_copy_sector_to_buffer@sector,__find_nth_cluster@n
 47569  01588C  C0A3  F09A         	movff	fat_copy_sector_to_buffer@sector+1,__find_nth_cluster@n+1
 47570  015890  EC2E  F0AF         	call	__find_nth_cluster	;wreg free
 47571  015894  C097  F0B0         	movff	?__find_nth_cluster,fat_copy_sector_to_buffer@cluster
 47572  015898  C098  F0B1         	movff	?__find_nth_cluster+1,fat_copy_sector_to_buffer@cluster+1
 47573                           
 47574                           ;fat16.c: 1450: physical_sector = _data_sector_from_cluster(cluster);
 47575  01589C  C0B0  F060         	movff	fat_copy_sector_to_buffer@cluster,__data_sector_from_cluster@fat_cluster
 47576  0158A0  C0B1  F061         	movff	fat_copy_sector_to_buffer@cluster+1,__data_sector_from_cluster@fat_cluster+1
 47577  0158A4  EC0B  F0C8         	call	__data_sector_from_cluster	;wreg free
 47578  0158A8  C060  F0AE         	movff	?__data_sector_from_cluster,fat_copy_sector_to_buffer@physical_sector
 47579  0158AC  C061  F0AF         	movff	?__data_sector_from_cluster+1,fat_copy_sector_to_buffer@physical_sector+1
 47580                           
 47581                           ;fat16.c: 1453: flash_copy_page_to_buffer(physical_sector);
 47582  0158B0  C0AE  F07D         	movff	fat_copy_sector_to_buffer@physical_sector,flash_copy_page_to_buffer@page
 47583  0158B4  C0AF  F07E         	movff	fat_copy_sector_to_buffer@physical_sector+1,flash_copy_page_to_buffer@page+1
 47584  0158B8  EC81  F0C6         	call	_flash_copy_page_to_buffer	;wreg free
 47585                           
 47586                           ;fat16.c: 1456: return 0x00;
 47587  0158BC  0E00               	movlw	0
 47588  0158BE  0012               	return	
 47589  0158C0                     __end_of_fat_copy_sector_to_buffer:
 47590                           	opt stack 0
 47591                           tosu	equ	0xFFF
 47592                           tosh	equ	0xFFE
 47593                           tosl	equ	0xFFD
 47594                           pclath	equ	0xFFA
 47595                           tblptru	equ	0xFF8
 47596                           tblptrh	equ	0xFF7
 47597                           tblptrl	equ	0xFF6
 47598                           tablat	equ	0xFF5
 47599                           prodh	equ	0xFF4
 47600                           prodl	equ	0xFF3
 47601                           intcon	equ	0xFF2
 47602                           intcon2	equ	0xFF1
 47603                           intcon3	equ	0xFF0
 47604                           indf0	equ	0xFEF
 47605                           postinc0	equ	0xFEE
 47606                           fsr0h	equ	0xFEA
 47607                           fsr0l	equ	0xFE9
 47608                           wreg	equ	0xFE8
 47609                           indf1	equ	0xFE7
 47610                           postinc1	equ	0xFE6
 47611                           postdec1	equ	0xFE5
 47612                           plusw1	equ	0xFE3
 47613                           fsr1h	equ	0xFE2
 47614                           fsr1l	equ	0xFE1
 47615                           indf2	equ	0xFDF
 47616                           postinc2	equ	0xFDE
 47617                           postdec2	equ	0xFDD
 47618                           plusw2	equ	0xFDB
 47619                           fsr2h	equ	0xFDA
 47620                           fsr2l	equ	0xFD9
 47621                           status	equ	0xFD8
 47622                           
 47623 ;; *************** function _flash_copy_page_to_buffer *****************
 47624 ;; Defined at:
 47625 ;;		line 524 in file "flash.c"
 47626 ;; Parameters:    Size  Location     Type
 47627 ;;  page            2   29[BANK0 ] unsigned int 
 47628 ;; Auto vars:     Size  Location     Type
 47629 ;;		None
 47630 ;; Return value:  Size  Location     Type
 47631 ;;                  1    wreg      void 
 47632 ;; Registers used:
 47633 ;;		wreg, status,2, status,0, cstack
 47634 ;; Tracked objects:
 47635 ;;		On entry : 0/0
 47636 ;;		On exit  : 0/0
 47637 ;;		Unchanged: 0/0
 47638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47639 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47642 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47643 ;;Total ram usage:        2 bytes
 47644 ;; Hardware stack levels used:    1
 47645 ;; Hardware stack levels required when called:   14
 47646 ;; This function calls:
 47647 ;;		__flash_copy_page_to_buffer
 47648 ;;		_spi_set_configuration
 47649 ;; This function is called by:
 47650 ;;		_fat_copy_sector_to_buffer
 47651 ;; This function uses a non-reentrant model
 47652 ;;
 47653                           
 47654                           	psect	text223
 47655  018D02                     __ptext223:
 47656                           	opt stack 0
 47657  018D02                     _flash_copy_page_to_buffer:
 47658                           	opt stack 11
 47659                           
 47660                           ;flash.c: 527: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 47661                           
 47662                           ;incstack = 0
 47663  018D02  0E00               	movlw	0
 47664  018D04  ECBD  F098         	call	_spi_set_configuration
 47665                           
 47666                           ;flash.c: 529: _flash_copy_page_to_buffer(page, FLASH_BUFFER_2);
 47667  018D08  C07D  F073         	movff	flash_copy_page_to_buffer@page,__flash_copy_page_to_buffer@page
 47668  018D0C  C07E  F074         	movff	flash_copy_page_to_buffer@page+1,__flash_copy_page_to_buffer@page+1
 47669  018D10  0E01               	movlw	1
 47670  018D12  0100               	movlb	0	; () banked
 47671  018D14  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 47672  018D16  EC65  F0BC         	call	__flash_copy_page_to_buffer	;wreg free
 47673                           
 47674                           ;flash.c: 532: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 47675  018D1A  0E01               	movlw	1
 47676  018D1C  ECBD  F098         	call	_spi_set_configuration
 47677  018D20  0012               	return		;funcret
 47678  018D22                     __end_of_flash_copy_page_to_buffer:
 47679                           	opt stack 0
 47680                           tosu	equ	0xFFF
 47681                           tosh	equ	0xFFE
 47682                           tosl	equ	0xFFD
 47683                           pclath	equ	0xFFA
 47684                           tblptru	equ	0xFF8
 47685                           tblptrh	equ	0xFF7
 47686                           tblptrl	equ	0xFF6
 47687                           tablat	equ	0xFF5
 47688                           prodh	equ	0xFF4
 47689                           prodl	equ	0xFF3
 47690                           intcon	equ	0xFF2
 47691                           intcon2	equ	0xFF1
 47692                           intcon3	equ	0xFF0
 47693                           indf0	equ	0xFEF
 47694                           postinc0	equ	0xFEE
 47695                           fsr0h	equ	0xFEA
 47696                           fsr0l	equ	0xFE9
 47697                           wreg	equ	0xFE8
 47698                           indf1	equ	0xFE7
 47699                           postinc1	equ	0xFE6
 47700                           postdec1	equ	0xFE5
 47701                           plusw1	equ	0xFE3
 47702                           fsr1h	equ	0xFE2
 47703                           fsr1l	equ	0xFE1
 47704                           indf2	equ	0xFDF
 47705                           postinc2	equ	0xFDE
 47706                           postdec2	equ	0xFDD
 47707                           plusw2	equ	0xFDB
 47708                           fsr2h	equ	0xFDA
 47709                           fsr2l	equ	0xFD9
 47710                           status	equ	0xFD8
 47711                           
 47712 ;; *************** function __parse_file_append *****************
 47713 ;; Defined at:
 47714 ;;		line 867 in file "api.c"
 47715 ;; Parameters:    Size  Location     Type
 47716 ;;  data            2  145[BANK0 ] PTR unsigned char 
 47717 ;;		 -> ReceivedDataBuffer(64), 
 47718 ;;  out_buffer      2  147[BANK0 ] PTR unsigned char 
 47719 ;;		 -> ToSendDataBuffer(64), 
 47720 ;;  out_idx_ptr     2  149[BANK0 ] PTR unsigned char 
 47721 ;;		 -> api_parse@out_idx(1), 
 47722 ;; Auto vars:     Size  Location     Type
 47723 ;;  number_of_by    2  154[BANK0 ] unsigned int 
 47724 ;;  file_number     1  153[BANK0 ] unsigned char 
 47725 ;;  return_value    1  152[BANK0 ] unsigned char 
 47726 ;; Return value:  Size  Location     Type
 47727 ;;                  1    wreg      unsigned char 
 47728 ;; Registers used:
 47729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47730 ;; Tracked objects:
 47731 ;;		On entry : 0/0
 47732 ;;		On exit  : 0/0
 47733 ;;		Unchanged: 0/0
 47734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47735 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47736 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47737 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47738 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47739 ;;Total ram usage:       11 bytes
 47740 ;; Hardware stack levels used:    1
 47741 ;; Hardware stack levels required when called:   19
 47742 ;; This function calls:
 47743 ;;		_fat_append_to_file
 47744 ;; This function is called by:
 47745 ;;		__parse_command_long
 47746 ;; This function uses a non-reentrant model
 47747 ;;
 47748                           
 47749                           	psect	text224
 47750  011D8A                     __ptext224:
 47751                           	opt stack 0
 47752  011D8A                     __parse_file_append:
 47753                           	opt stack 8
 47754                           
 47755                           ;api.c: 871: uint8_t file_number;;api.c: 872: uint8_t return_value;;api.c: 873: uint16_t
      +                           number_of_bytes;;api.c: 875: if((data[0]!=COMMAND_FILE_APPEND) || (data[3]!=0xFE) || (d
      +                          ata[4]!=0x4B))
 47756                           
 47757                           ;incstack = 0
 47758  011D8A  C0F1  FFD9         	movff	__parse_file_append@data,fsr2l
 47759  011D8E  C0F2  FFDA         	movff	__parse_file_append@data+1,fsr2h
 47760  011D92  0E54               	movlw	84
 47761  011D94  18DE               	xorwf	postinc2,w,c
 47762  011D96  A4D8               	btfss	status,2,c
 47763  011D98  D015               	goto	u23040
 47764  011D9A  0100               	movlb	0	; () banked
 47765  011D9C  EE20 F003          	lfsr	2,3
 47766  011DA0  51F1               	movf	__parse_file_append@data& (0+255),w,b
 47767  011DA2  26D9               	addwf	fsr2l,f,c
 47768  011DA4  51F2               	movf	(__parse_file_append@data+1)& (0+255),w,b
 47769  011DA6  22DA               	addwfc	fsr2h,f,c
 47770  011DA8  0EFE               	movlw	254
 47771  011DAA  18DE               	xorwf	postinc2,w,c
 47772  011DAC  A4D8               	btfss	status,2,c
 47773  011DAE  D00A               	goto	u23040
 47774                           
 47775                           ; BSR set to: 0
 47776  011DB0  EE20 F004          	lfsr	2,4
 47777  011DB4  51F1               	movf	__parse_file_append@data& (0+255),w,b
 47778  011DB6  26D9               	addwf	fsr2l,f,c
 47779  011DB8  51F2               	movf	(__parse_file_append@data+1)& (0+255),w,b
 47780  011DBA  22DA               	addwfc	fsr2h,f,c
 47781  011DBC  0E4B               	movlw	75
 47782  011DBE  18DE               	xorwf	postinc2,w,c
 47783  011DC0  B4D8               	btfsc	status,2,c
 47784  011DC2  D002               	goto	l3700
 47785  011DC4                     u23040:
 47786                           
 47787                           ;api.c: 876: {;api.c: 878: return 65;
 47788                           
 47789                           ; BSR set to: 0
 47790  011DC4  0E41               	movlw	65
 47791  011DC6  0012               	return	
 47792  011DC8                     l3700:
 47793                           
 47794                           ;api.c: 879: };api.c: 882: file_number = data[1];
 47795  011DC8  0100               	movlb	0	; () banked
 47796  011DCA  EE20 F001          	lfsr	2,1
 47797  011DCE  51F1               	movf	__parse_file_append@data& (0+255),w,b
 47798  011DD0  26D9               	addwf	fsr2l,f,c
 47799  011DD2  51F2               	movf	(__parse_file_append@data+1)& (0+255),w,b
 47800  011DD4  22DA               	addwfc	fsr2h,f,c
 47801  011DD6  50DF               	movf	indf2,w,c
 47802  011DD8  6FF9               	movwf	__parse_file_append@file_number& (0+255),b
 47803                           
 47804                           ;api.c: 885: number_of_bytes = (uint16_t) data[2];
 47805  011DDA  EE20 F002          	lfsr	2,2
 47806  011DDE  51F1               	movf	__parse_file_append@data& (0+255),w,b
 47807  011DE0  26D9               	addwf	fsr2l,f,c
 47808  011DE2  51F2               	movf	(__parse_file_append@data+1)& (0+255),w,b
 47809  011DE4  22DA               	addwfc	fsr2h,f,c
 47810  011DE6  50DF               	movf	indf2,w,c
 47811  011DE8  6FF7               	movwf	??__parse_file_append& (0+255),b
 47812  011DEA  51F7               	movf	??__parse_file_append& (0+255),w,b
 47813  011DEC  6FFA               	movwf	__parse_file_append@number_of_bytes& (0+255),b
 47814  011DEE  6BFB               	clrf	(__parse_file_append@number_of_bytes+1)& (0+255),b
 47815                           
 47816                           ; BSR set to: 0
 47817                           ;api.c: 888: return_value = fat_append_to_file(file_number, number_of_bytes, &data[5]);
 47818  011DF0  C0FA  F0E3         	movff	__parse_file_append@number_of_bytes,fat_append_to_file@number_of_bytes
 47819  011DF4  C0FB  F0E4         	movff	__parse_file_append@number_of_bytes+1,fat_append_to_file@number_of_bytes+1
 47820  011DF8  0E05               	movlw	5
 47821  011DFA  25F1               	addwf	__parse_file_append@data& (0+255),w,b
 47822  011DFC  6FE5               	movwf	fat_append_to_file@data& (0+255),b
 47823  011DFE  0E00               	movlw	0
 47824  011E00  21F2               	addwfc	(__parse_file_append@data+1)& (0+255),w,b
 47825  011E02  6FE6               	movwf	(fat_append_to_file@data+1)& (0+255),b
 47826  011E04  51F9               	movf	__parse_file_append@file_number& (0+255),w,b
 47827  011E06  ECD3  F0AF         	call	_fat_append_to_file
 47828  011E0A  0100               	movlb	0	; () banked
 47829  011E0C  6FF8               	movwf	__parse_file_append@return_value& (0+255),b
 47830                           
 47831                           ; BSR set to: 0
 47832                           ;api.c: 891: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<60))
 47833  011E0E  C0F5  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 47834  011E12  C0F6  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 47835  011E16  50DF               	movf	indf2,w,c
 47836  011E18  B4D8               	btfsc	status,2,c
 47837  011E1A  D061               	goto	l3704
 47838                           
 47839                           ; BSR set to: 0
 47840  011E1C  C0F5  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 47841  011E20  C0F6  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 47842  011E24  0E3C               	movlw	60
 47843  011E26  60DF               	cpfslt	indf2,c
 47844  011E28  D05A               	goto	l3704
 47845                           
 47846                           ; BSR set to: 0
 47847                           ;api.c: 892: {;api.c: 893: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_APPEND;
 47848  011E2A  C0F5  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 47849  011E2E  C0F6  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 47850  011E32  CFDF F0F7          	movff	indf2,??__parse_file_append
 47851  011E36  0E01               	movlw	1
 47852  011E38  26DF               	addwf	indf2,f,c
 47853  011E3A  51F7               	movf	??__parse_file_append& (0+255),w,b
 47854  011E3C  0D01               	mullw	1
 47855  011E3E  50F3               	movf	prodl,w,c
 47856  011E40  25F3               	addwf	__parse_file_append@out_buffer& (0+255),w,b
 47857  011E42  6ED9               	movwf	fsr2l,c
 47858  011E44  50F4               	movf	prodh,w,c
 47859  011E46  21F4               	addwfc	(__parse_file_append@out_buffer+1)& (0+255),w,b
 47860  011E48  6EDA               	movwf	fsr2h,c
 47861  011E4A  0E54               	movlw	84
 47862  011E4C  6EDF               	movwf	indf2,c
 47863                           
 47864                           ;api.c: 894: out_buffer[(*out_idx_ptr)++] = file_number;
 47865  011E4E  C0F5  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 47866  011E52  C0F6  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 47867  011E56  CFDF F0F7          	movff	indf2,??__parse_file_append
 47868  011E5A  0E01               	movlw	1
 47869  011E5C  26DF               	addwf	indf2,f,c
 47870  011E5E  51F7               	movf	??__parse_file_append& (0+255),w,b
 47871  011E60  0D01               	mullw	1
 47872  011E62  50F3               	movf	prodl,w,c
 47873  011E64  25F3               	addwf	__parse_file_append@out_buffer& (0+255),w,b
 47874  011E66  6ED9               	movwf	fsr2l,c
 47875  011E68  50F4               	movf	prodh,w,c
 47876  011E6A  21F4               	addwfc	(__parse_file_append@out_buffer+1)& (0+255),w,b
 47877  011E6C  6EDA               	movwf	fsr2h,c
 47878  011E6E  C0F9  FFDF         	movff	__parse_file_append@file_number,indf2
 47879                           
 47880                           ;api.c: 895: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((number_of_bytes)>>8)&0xFF
      +                          ));
 47881  011E72  C0F5  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 47882  011E76  C0F6  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 47883  011E7A  CFDF F0F7          	movff	indf2,??__parse_file_append
 47884  011E7E  0E01               	movlw	1
 47885  011E80  26DF               	addwf	indf2,f,c
 47886  011E82  51F7               	movf	??__parse_file_append& (0+255),w,b
 47887  011E84  0D01               	mullw	1
 47888  011E86  50F3               	movf	prodl,w,c
 47889  011E88  25F3               	addwf	__parse_file_append@out_buffer& (0+255),w,b
 47890  011E8A  6ED9               	movwf	fsr2l,c
 47891  011E8C  50F4               	movf	prodh,w,c
 47892  011E8E  21F4               	addwfc	(__parse_file_append@out_buffer+1)& (0+255),w,b
 47893  011E90  6EDA               	movwf	fsr2h,c
 47894  011E92  51FB               	movf	(__parse_file_append@number_of_bytes+1)& (0+255),w,b
 47895  011E94  6EDF               	movwf	indf2,c
 47896                           
 47897                           ;api.c: 896: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((number_of_bytes)&0xFF));
 47898  011E96  C0F5  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 47899  011E9A  C0F6  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 47900  011E9E  CFDF F0F7          	movff	indf2,??__parse_file_append
 47901  011EA2  0E01               	movlw	1
 47902  011EA4  26DF               	addwf	indf2,f,c
 47903  011EA6  51F7               	movf	??__parse_file_append& (0+255),w,b
 47904  011EA8  0D01               	mullw	1
 47905  011EAA  50F3               	movf	prodl,w,c
 47906  011EAC  25F3               	addwf	__parse_file_append@out_buffer& (0+255),w,b
 47907  011EAE  6ED9               	movwf	fsr2l,c
 47908  011EB0  50F4               	movf	prodh,w,c
 47909  011EB2  21F4               	addwfc	(__parse_file_append@out_buffer+1)& (0+255),w,b
 47910  011EB4  6EDA               	movwf	fsr2h,c
 47911  011EB6  C0FA  FFDF         	movff	__parse_file_append@number_of_bytes,indf2
 47912                           
 47913                           ;api.c: 897: out_buffer[(*out_idx_ptr)++] = return_value;
 47914  011EBA  C0F5  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 47915  011EBE  C0F6  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 47916  011EC2  CFDF F0F7          	movff	indf2,??__parse_file_append
 47917  011EC6  0E01               	movlw	1
 47918  011EC8  26DF               	addwf	indf2,f,c
 47919  011ECA  51F7               	movf	??__parse_file_append& (0+255),w,b
 47920  011ECC  0D01               	mullw	1
 47921  011ECE  50F3               	movf	prodl,w,c
 47922  011ED0  25F3               	addwf	__parse_file_append@out_buffer& (0+255),w,b
 47923  011ED2  6ED9               	movwf	fsr2l,c
 47924  011ED4  50F4               	movf	prodh,w,c
 47925  011ED6  21F4               	addwfc	(__parse_file_append@out_buffer+1)& (0+255),w,b
 47926  011ED8  6EDA               	movwf	fsr2h,c
 47927  011EDA  C0F8  FFDF         	movff	__parse_file_append@return_value,indf2
 47928  011EDE                     l3704:
 47929                           
 47930                           ; BSR set to: 0
 47931                           ;api.c: 898: };api.c: 900: return data[2] + 5;
 47932                           
 47933                           ; BSR set to: 0
 47934  011EDE  EE20 F002          	lfsr	2,2
 47935  011EE2  51F1               	movf	__parse_file_append@data& (0+255),w,b
 47936  011EE4  26D9               	addwf	fsr2l,f,c
 47937  011EE6  51F2               	movf	(__parse_file_append@data+1)& (0+255),w,b
 47938  011EE8  22DA               	addwfc	fsr2h,f,c
 47939  011EEA  50DF               	movf	indf2,w,c
 47940  011EEC  0F05               	addlw	5
 47941  011EEE  0012               	return	
 47942  011EF0                     __end_of__parse_file_append:
 47943                           	opt stack 0
 47944                           tosu	equ	0xFFF
 47945                           tosh	equ	0xFFE
 47946                           tosl	equ	0xFFD
 47947                           pclath	equ	0xFFA
 47948                           tblptru	equ	0xFF8
 47949                           tblptrh	equ	0xFF7
 47950                           tblptrl	equ	0xFF6
 47951                           tablat	equ	0xFF5
 47952                           prodh	equ	0xFF4
 47953                           prodl	equ	0xFF3
 47954                           intcon	equ	0xFF2
 47955                           intcon2	equ	0xFF1
 47956                           intcon3	equ	0xFF0
 47957                           indf0	equ	0xFEF
 47958                           postinc0	equ	0xFEE
 47959                           fsr0h	equ	0xFEA
 47960                           fsr0l	equ	0xFE9
 47961                           wreg	equ	0xFE8
 47962                           indf1	equ	0xFE7
 47963                           postinc1	equ	0xFE6
 47964                           postdec1	equ	0xFE5
 47965                           plusw1	equ	0xFE3
 47966                           fsr1h	equ	0xFE2
 47967                           fsr1l	equ	0xFE1
 47968                           indf2	equ	0xFDF
 47969                           postinc2	equ	0xFDE
 47970                           postdec2	equ	0xFDD
 47971                           plusw2	equ	0xFDB
 47972                           fsr2h	equ	0xFDA
 47973                           fsr2l	equ	0xFD9
 47974                           status	equ	0xFD8
 47975                           
 47976 ;; *************** function _fat_append_to_file *****************
 47977 ;; Defined at:
 47978 ;;		line 678 in file "fat16.c"
 47979 ;; Parameters:    Size  Location     Type
 47980 ;;  file_number     1    wreg     unsigned char 
 47981 ;;  number_of_by    2  131[BANK0 ] unsigned int 
 47982 ;;  data            2  133[BANK0 ] PTR unsigned char 
 47983 ;;		 -> log_write_to_disk@log_entry(32), ReceivedDataBuffer(64), 
 47984 ;; Auto vars:     Size  Location     Type
 47985 ;;  file_number     1  144[BANK0 ] unsigned char 
 47986 ;;  old_file_siz    4  139[BANK0 ] unsigned long 
 47987 ;;  new_file_siz    4  135[BANK0 ] unsigned long 
 47988 ;;  return_code     1  143[BANK0 ] unsigned char 
 47989 ;; Return value:  Size  Location     Type
 47990 ;;                  1    wreg      unsigned char 
 47991 ;; Registers used:
 47992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 47993 ;; Tracked objects:
 47994 ;;		On entry : 0/0
 47995 ;;		On exit  : 0/0
 47996 ;;		Unchanged: 0/0
 47997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47998 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47999 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48001 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48002 ;;Total ram usage:       14 bytes
 48003 ;; Hardware stack levels used:    1
 48004 ;; Hardware stack levels required when called:   18
 48005 ;; This function calls:
 48006 ;;		__root_is_available
 48007 ;;		_fat_get_file_size
 48008 ;;		_fat_modify_file
 48009 ;;		_fat_resize_file
 48010 ;; This function is called by:
 48011 ;;		__parse_file_append
 48012 ;;		_log_write_to_disk
 48013 ;; This function uses a non-reentrant model
 48014 ;;
 48015                           
 48016                           	psect	text225
 48017  015FA6                     __ptext225:
 48018                           	opt stack 0
 48019  015FA6                     _fat_append_to_file:
 48020                           	opt stack 8
 48021                           
 48022                           ;incstack = 0
 48023                           ;fat_append_to_file@file_number stored from wreg
 48024  015FA6  0100               	movlb	0	; () banked
 48025  015FA8  6FF0               	movwf	fat_append_to_file@file_number& (0+255),b
 48026                           
 48027                           ;fat16.c: 680: uint32_t old_file_size;;fat16.c: 681: uint32_t new_file_size;;fat16.c: 68
      +                          2: uint8_t return_code;;fat16.c: 685: if(file_number>=64)
 48028  015FAA  0E3F               	movlw	63
 48029  015FAC  0100               	movlb	0	; () banked
 48030  015FAE  65F0               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 48031  015FB0  D002               	goto	l2903
 48032                           
 48033                           ; BSR set to: 0
 48034                           ;fat16.c: 686: {;fat16.c: 688: return 0xFF;
 48035  015FB2  0EFF               	movlw	255
 48036                           
 48037                           ; BSR set to: 0
 48038  015FB4  0012               	return	
 48039  015FB6                     l2903:
 48040                           
 48041                           ; BSR set to: 0
 48042                           ;fat16.c: 689: };fat16.c: 692: if(_root_is_available(file_number))
 48043                           
 48044                           ; BSR set to: 0
 48045  015FB6  51F0               	movf	fat_append_to_file@file_number& (0+255),w,b
 48046  015FB8  EC95  F0B8         	call	__root_is_available
 48047  015FBC  0900               	iorlw	0
 48048  015FBE  B4D8               	btfsc	status,2,c
 48049  015FC0  D002               	goto	l2905
 48050                           
 48051                           ;fat16.c: 693: {;fat16.c: 695: return 0xFE;
 48052  015FC2  0EFE               	movlw	254
 48053  015FC4  0012               	return	
 48054  015FC6                     l2905:
 48055                           
 48056                           ;fat16.c: 696: };fat16.c: 699: old_file_size = fat_get_file_size(file_number);
 48057  015FC6  0100               	movlb	0	; () banked
 48058  015FC8  51F0               	movf	fat_append_to_file@file_number& (0+255),w,b
 48059  015FCA  ECFC  F0B6         	call	_fat_get_file_size
 48060  015FCE  C095  F0EB         	movff	?_fat_get_file_size,fat_append_to_file@old_file_size
 48061  015FD2  C096  F0EC         	movff	?_fat_get_file_size+1,fat_append_to_file@old_file_size+1
 48062  015FD6  C097  F0ED         	movff	?_fat_get_file_size+2,fat_append_to_file@old_file_size+2
 48063  015FDA  C098  F0EE         	movff	?_fat_get_file_size+3,fat_append_to_file@old_file_size+3
 48064                           
 48065                           ;fat16.c: 702: new_file_size = old_file_size + number_of_bytes;
 48066  015FDE  0100               	movlb	0	; () banked
 48067  015FE0  51E3               	movf	fat_append_to_file@number_of_bytes& (0+255),w,b
 48068  015FE2  25EB               	addwf	fat_append_to_file@old_file_size& (0+255),w,b
 48069  015FE4  6FE7               	movwf	fat_append_to_file@new_file_size& (0+255),b
 48070  015FE6  51E4               	movf	(fat_append_to_file@number_of_bytes+1)& (0+255),w,b
 48071  015FE8  21EC               	addwfc	(fat_append_to_file@old_file_size+1)& (0+255),w,b
 48072  015FEA  6FE8               	movwf	(fat_append_to_file@new_file_size+1)& (0+255),b
 48073  015FEC  0E00               	movlw	0
 48074  015FEE  21ED               	addwfc	(fat_append_to_file@old_file_size+2)& (0+255),w,b
 48075  015FF0  6FE9               	movwf	(fat_append_to_file@new_file_size+2)& (0+255),b
 48076  015FF2  0E00               	movlw	0
 48077  015FF4  21EE               	addwfc	(fat_append_to_file@old_file_size+3)& (0+255),w,b
 48078  015FF6  6FEA               	movwf	(fat_append_to_file@new_file_size+3)& (0+255),b
 48079                           
 48080                           ; BSR set to: 0
 48081                           ;fat16.c: 705: return_code = fat_resize_file(file_number, new_file_size);
 48082  015FF8  C0E7  F0AC         	movff	fat_append_to_file@new_file_size,fat_resize_file@new_file_size
 48083  015FFC  C0E8  F0AD         	movff	fat_append_to_file@new_file_size+1,fat_resize_file@new_file_size+1
 48084  016000  C0E9  F0AE         	movff	fat_append_to_file@new_file_size+2,fat_resize_file@new_file_size+2
 48085  016004  C0EA  F0AF         	movff	fat_append_to_file@new_file_size+3,fat_resize_file@new_file_size+3
 48086  016008  51F0               	movf	fat_append_to_file@file_number& (0+255),w,b
 48087  01600A  ECDE  F09D         	call	_fat_resize_file
 48088  01600E  0100               	movlb	0	; () banked
 48089  016010  6FEF               	movwf	fat_append_to_file@return_code& (0+255),b
 48090                           
 48091                           ; BSR set to: 0
 48092                           ;fat16.c: 706: if(return_code!=0x00)
 48093  016012  51EF               	movf	fat_append_to_file@return_code& (0+255),w,b
 48094  016014  B4D8               	btfsc	status,2,c
 48095  016016  D003               	goto	l2906
 48096                           
 48097                           ; BSR set to: 0
 48098                           ;fat16.c: 707: {;fat16.c: 709: return return_code - 0x0F;
 48099  016018  51EF               	movf	fat_append_to_file@return_code& (0+255),w,b
 48100  01601A  0FF1               	addlw	241
 48101                           
 48102                           ; BSR set to: 0
 48103  01601C  0012               	return	
 48104  01601E                     l2906:
 48105                           
 48106                           ; BSR set to: 0
 48107                           ;fat16.c: 710: };fat16.c: 713: fat_modify_file(file_number, old_file_size, number_of_byt
      +                          es, data);
 48108                           
 48109                           ; BSR set to: 0
 48110  01601E  C0EB  F0A1         	movff	fat_append_to_file@old_file_size,fat_modify_file@start_byte
 48111  016022  C0EC  F0A2         	movff	fat_append_to_file@old_file_size+1,fat_modify_file@start_byte+1
 48112  016026  C0ED  F0A3         	movff	fat_append_to_file@old_file_size+2,fat_modify_file@start_byte+2
 48113  01602A  C0EE  F0A4         	movff	fat_append_to_file@old_file_size+3,fat_modify_file@start_byte+3
 48114  01602E  C0E3  F0A5         	movff	fat_append_to_file@number_of_bytes,fat_modify_file@length
 48115  016032  C0E4  F0A6         	movff	fat_append_to_file@number_of_bytes+1,fat_modify_file@length+1
 48116  016036  C0E5  F0A7         	movff	fat_append_to_file@data,fat_modify_file@data
 48117  01603A  C0E6  F0A8         	movff	fat_append_to_file@data+1,fat_modify_file@data+1
 48118  01603E  51F0               	movf	fat_append_to_file@file_number& (0+255),w,b
 48119  016040  EC02  F07F         	call	_fat_modify_file
 48120                           
 48121                           ;fat16.c: 716: return 0x00;
 48122  016044  0E00               	movlw	0
 48123  016046  0012               	return	
 48124  016048                     __end_of_fat_append_to_file:
 48125                           	opt stack 0
 48126                           tosu	equ	0xFFF
 48127                           tosh	equ	0xFFE
 48128                           tosl	equ	0xFFD
 48129                           pclath	equ	0xFFA
 48130                           tblptru	equ	0xFF8
 48131                           tblptrh	equ	0xFF7
 48132                           tblptrl	equ	0xFF6
 48133                           tablat	equ	0xFF5
 48134                           prodh	equ	0xFF4
 48135                           prodl	equ	0xFF3
 48136                           intcon	equ	0xFF2
 48137                           intcon2	equ	0xFF1
 48138                           intcon3	equ	0xFF0
 48139                           indf0	equ	0xFEF
 48140                           postinc0	equ	0xFEE
 48141                           fsr0h	equ	0xFEA
 48142                           fsr0l	equ	0xFE9
 48143                           wreg	equ	0xFE8
 48144                           indf1	equ	0xFE7
 48145                           postinc1	equ	0xFE6
 48146                           postdec1	equ	0xFE5
 48147                           plusw1	equ	0xFE3
 48148                           fsr1h	equ	0xFE2
 48149                           fsr1l	equ	0xFE1
 48150                           indf2	equ	0xFDF
 48151                           postinc2	equ	0xFDE
 48152                           postdec2	equ	0xFDD
 48153                           plusw2	equ	0xFDB
 48154                           fsr2h	equ	0xFDA
 48155                           fsr2l	equ	0xFD9
 48156                           status	equ	0xFD8
 48157                           
 48158 ;; *************** function _fat_resize_file *****************
 48159 ;; Defined at:
 48160 ;;		line 910 in file "fat16.c"
 48161 ;; Parameters:    Size  Location     Type
 48162 ;;  file_number     1    wreg     unsigned char 
 48163 ;;  new_file_siz    4   76[BANK0 ] unsigned long 
 48164 ;; Auto vars:     Size  Location     Type
 48165 ;;  file_number     1   90[BANK0 ] unsigned char 
 48166 ;;  root           32   91[BANK0 ] struct .
 48167 ;;  first_cluste    2   88[BANK0 ] unsigned int 
 48168 ;;  new_number_o    2   86[BANK0 ] unsigned int 
 48169 ;;  old_number_o    2   84[BANK0 ] unsigned int 
 48170 ;; Return value:  Size  Location     Type
 48171 ;;                  1    wreg      unsigned char 
 48172 ;; Registers used:
 48173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 48174 ;; Tracked objects:
 48175 ;;		On entry : 0/0
 48176 ;;		On exit  : 0/0
 48177 ;;		Unchanged: 0/0
 48178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48179 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48180 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48181 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48182 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48183 ;;Total ram usage:       47 bytes
 48184 ;; Hardware stack levels used:    1
 48185 ;; Hardware stack levels required when called:   17
 48186 ;; This function calls:
 48187 ;;		__make_cluster_chain
 48188 ;;		__root_is_available
 48189 ;;		__write_root
 48190 ;;		_fat_get_file_information
 48191 ;; This function is called by:
 48192 ;;		_fat_append_to_file
 48193 ;;		__parse_file_resize
 48194 ;; This function uses a non-reentrant model
 48195 ;;
 48196                           
 48197                           	psect	text226
 48198  013BBC                     __ptext226:
 48199                           	opt stack 0
 48200  013BBC                     _fat_resize_file:
 48201                           	opt stack 9
 48202                           
 48203                           ;incstack = 0
 48204                           ;fat_resize_file@file_number stored from wreg
 48205  013BBC  0100               	movlb	0	; () banked
 48206  013BBE  6FBA               	movwf	fat_resize_file@file_number& (0+255),b
 48207                           
 48208                           ;fat16.c: 912: rootEntry_t root;;fat16.c: 913: uint16_t old_number_of_clusters;;fat16.c:
      +                           914: uint16_t new_number_of_clusters;;fat16.c: 915: uint16_t first_cluster;;fat16.c: 91
      +                          8: if(file_number>=64)
 48209  013BC0  0E3F               	movlw	63
 48210  013BC2  0100               	movlb	0	; () banked
 48211  013BC4  65BA               	cpfsgt	fat_resize_file@file_number& (0+255),b
 48212  013BC6  D002               	goto	l2943
 48213                           
 48214                           ; BSR set to: 0
 48215                           ;fat16.c: 919: {;fat16.c: 921: return 0xFF;
 48216  013BC8  0EFF               	movlw	255
 48217                           
 48218                           ; BSR set to: 0
 48219  013BCA  0012               	return	
 48220  013BCC                     l2943:
 48221                           
 48222                           ; BSR set to: 0
 48223                           ;fat16.c: 922: };fat16.c: 925: if(_root_is_available(file_number))
 48224                           
 48225                           ; BSR set to: 0
 48226  013BCC  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 48227  013BCE  EC95  F0B8         	call	__root_is_available
 48228  013BD2  0900               	iorlw	0
 48229  013BD4  B4D8               	btfsc	status,2,c
 48230  013BD6  D002               	goto	l2945
 48231                           
 48232                           ;fat16.c: 926: {;fat16.c: 928: return 0xFE;
 48233  013BD8  0EFE               	movlw	254
 48234  013BDA  0012               	return	
 48235  013BDC                     l2945:
 48236                           
 48237                           ;fat16.c: 929: };fat16.c: 932: fat_get_file_information(file_number, &root);
 48238  013BDC  0EBB               	movlw	low fat_resize_file@root
 48239  013BDE  0100               	movlb	0	; () banked
 48240  013BE0  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 48241  013BE2  0E00               	movlw	high fat_resize_file@root
 48242  013BE4  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 48243  013BE6  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 48244  013BE8  ECBF  F0B6         	call	_fat_get_file_information
 48245                           
 48246                           ;fat16.c: 935: old_number_of_clusters = (root.fileSize+512-1)>>9;
 48247  013BEC  EE20  F0D7         	lfsr	2,fat_resize_file@root+28
 48248  013BF0  0EFF               	movlw	255
 48249  013BF2  24DE               	addwf	postinc2,w,c
 48250  013BF4  0100               	movlb	0	; () banked
 48251  013BF6  6FB0               	movwf	??_fat_resize_file& (0+255),b
 48252  013BF8  0E01               	movlw	1
 48253  013BFA  20DE               	addwfc	postinc2,w,c
 48254  013BFC  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 48255  013BFE  0E00               	movlw	0
 48256  013C00  20DE               	addwfc	postinc2,w,c
 48257  013C02  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 48258  013C04  0E00               	movlw	0
 48259  013C06  20DE               	addwfc	postinc2,w,c
 48260  013C08  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 48261  013C0A  0E0A               	movlw	10
 48262  013C0C  D005               	goto	u21120
 48263  013C0E                     u21125:
 48264  013C0E  90D8               	bcf	status,0,c
 48265  013C10  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 48266  013C12  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 48267  013C14  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 48268  013C16  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 48269  013C18                     u21120:
 48270  013C18  2EE8               	decfsz	wreg,f,c
 48271  013C1A  D7F9               	goto	u21125
 48272  013C1C  C0B0  F0B4         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 48273  013C20  C0B1  F0B5         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 48274                           
 48275                           ; BSR set to: 0
 48276                           ;fat16.c: 936: new_number_of_clusters = (new_file_size+512-1)>>9;
 48277  013C24  0EFF               	movlw	255
 48278  013C26  25AC               	addwf	fat_resize_file@new_file_size& (0+255),w,b
 48279  013C28  6FB0               	movwf	??_fat_resize_file& (0+255),b
 48280  013C2A  0E01               	movlw	1
 48281  013C2C  21AD               	addwfc	(fat_resize_file@new_file_size+1)& (0+255),w,b
 48282  013C2E  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 48283  013C30  0E00               	movlw	0
 48284  013C32  21AE               	addwfc	(fat_resize_file@new_file_size+2)& (0+255),w,b
 48285  013C34  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 48286  013C36  0E00               	movlw	0
 48287  013C38  21AF               	addwfc	(fat_resize_file@new_file_size+3)& (0+255),w,b
 48288  013C3A  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 48289  013C3C  0E0A               	movlw	10
 48290  013C3E  D005               	goto	u21130
 48291  013C40                     u21135:
 48292  013C40  90D8               	bcf	status,0,c
 48293  013C42  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 48294  013C44  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 48295  013C46  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 48296  013C48  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 48297  013C4A                     u21130:
 48298  013C4A  2EE8               	decfsz	wreg,f,c
 48299  013C4C  D7F9               	goto	u21135
 48300  013C4E  C0B0  F0B6         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 48301  013C52  C0B1  F0B7         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 48302                           
 48303                           ; BSR set to: 0
 48304                           ;fat16.c: 939: if(old_number_of_clusters!=new_number_of_clusters)
 48305  013C56  51B6               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 48306  013C58  19B4               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 48307  013C5A  E104               	bnz	u21140
 48308  013C5C  51B7               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 48309  013C5E  19B5               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 48310  013C60  B4D8               	btfsc	status,2,c
 48311  013C62  D01A               	goto	l2946
 48312  013C64                     u21140:
 48313                           
 48314                           ; BSR set to: 0
 48315                           ;fat16.c: 940: {;fat16.c: 941: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 48316  013C64  C0D5  F095         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 48317  013C68  C0D6  F096         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 48318  013C6C  C0B6  F097         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 48319  013C70  C0B7  F098         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 48320  013C74  EC6A  F077         	call	__make_cluster_chain	;wreg free
 48321  013C78  C095  F0B8         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 48322  013C7C  C096  F0B9         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 48323                           
 48324                           ;fat16.c: 942: if(first_cluster==0xFFFF)
 48325  013C80  0100               	movlb	0	; () banked
 48326  013C82  29B8               	incf	fat_resize_file@first_cluster& (0+255),w,b
 48327  013C84  E105               	bnz	l2947
 48328  013C86  29B9               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 48329  013C88  A4D8               	btfss	status,2,c
 48330  013C8A  D002               	goto	l2947
 48331                           
 48332                           ; BSR set to: 0
 48333                           ;fat16.c: 943: {;fat16.c: 945: return 0xFD;
 48334  013C8C  0EFD               	movlw	253
 48335                           
 48336                           ; BSR set to: 0
 48337  013C8E  0012               	return	
 48338  013C90                     l2947:
 48339                           
 48340                           ; BSR set to: 0
 48341                           ;fat16.c: 946: };fat16.c: 949: root.firstCluster = first_cluster;
 48342  013C90  C0B8  F0D5         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 48343  013C94  C0B9  F0D6         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 48344  013C98                     l2946:
 48345                           
 48346                           ; BSR set to: 0
 48347                           ;fat16.c: 950: };fat16.c: 953: root.fileSize = new_file_size;
 48348  013C98  C0AC  F0D7         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 48349  013C9C  C0AD  F0D8         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 48350  013CA0  C0AE  F0D9         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 48351  013CA4  C0AF  F0DA         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 48352                           
 48353                           ; BSR set to: 0
 48354                           ;fat16.c: 956: _write_root(file_number, &root);
 48355  013CA8  0EBB               	movlw	low fat_resize_file@root
 48356  013CAA  6F88               	movwf	__write_root@data& (0+255),b
 48357  013CAC  0E00               	movlw	high fat_resize_file@root
 48358  013CAE  6F89               	movwf	(__write_root@data+1)& (0+255),b
 48359  013CB0  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 48360  013CB2  EC04  F0C0         	call	__write_root
 48361                           
 48362                           ;fat16.c: 959: return 0x00;
 48363  013CB6  0E00               	movlw	0
 48364  013CB8  0012               	return	
 48365  013CBA                     __end_of_fat_resize_file:
 48366                           	opt stack 0
 48367                           tosu	equ	0xFFF
 48368                           tosh	equ	0xFFE
 48369                           tosl	equ	0xFFD
 48370                           pclath	equ	0xFFA
 48371                           tblptru	equ	0xFF8
 48372                           tblptrh	equ	0xFF7
 48373                           tblptrl	equ	0xFF6
 48374                           tablat	equ	0xFF5
 48375                           prodh	equ	0xFF4
 48376                           prodl	equ	0xFF3
 48377                           intcon	equ	0xFF2
 48378                           intcon2	equ	0xFF1
 48379                           intcon3	equ	0xFF0
 48380                           indf0	equ	0xFEF
 48381                           postinc0	equ	0xFEE
 48382                           fsr0h	equ	0xFEA
 48383                           fsr0l	equ	0xFE9
 48384                           wreg	equ	0xFE8
 48385                           indf1	equ	0xFE7
 48386                           postinc1	equ	0xFE6
 48387                           postdec1	equ	0xFE5
 48388                           plusw1	equ	0xFE3
 48389                           fsr1h	equ	0xFE2
 48390                           fsr1l	equ	0xFE1
 48391                           indf2	equ	0xFDF
 48392                           postinc2	equ	0xFDE
 48393                           postdec2	equ	0xFDD
 48394                           plusw2	equ	0xFDB
 48395                           fsr2h	equ	0xFDA
 48396                           fsr2l	equ	0xFD9
 48397                           status	equ	0xFD8
 48398                           
 48399 ;; *************** function __write_root *****************
 48400 ;; Defined at:
 48401 ;;		line 473 in file "fat16.c"
 48402 ;; Parameters:    Size  Location     Type
 48403 ;;  file_number     1    wreg     unsigned char 
 48404 ;;  data            2   40[BANK0 ] PTR struct .
 48405 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 48406 ;; Auto vars:     Size  Location     Type
 48407 ;;  file_number     1   46[BANK0 ] unsigned char 
 48408 ;;  offset          2   44[BANK0 ] unsigned int 
 48409 ;;  sector          2   42[BANK0 ] unsigned int 
 48410 ;; Return value:  Size  Location     Type
 48411 ;;                  1    wreg      void 
 48412 ;; Registers used:
 48413 ;;		wreg, status,2, status,0, cstack
 48414 ;; Tracked objects:
 48415 ;;		On entry : 0/0
 48416 ;;		On exit  : 0/0
 48417 ;;		Unchanged: 0/0
 48418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48419 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48420 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48422 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48423 ;;Total ram usage:        7 bytes
 48424 ;; Hardware stack levels used:    1
 48425 ;; Hardware stack levels required when called:   15
 48426 ;; This function calls:
 48427 ;;		__offset_from_file_number
 48428 ;;		__sector_from_file_number
 48429 ;;		_flash_partial_write
 48430 ;; This function is called by:
 48431 ;;		_fat_create_file
 48432 ;;		_fat_rename_file
 48433 ;;		_fat_resize_file
 48434 ;; This function uses a non-reentrant model
 48435 ;;
 48436                           
 48437                           	psect	text227
 48438  018008                     __ptext227:
 48439                           	opt stack 0
 48440  018008                     __write_root:
 48441                           	opt stack 10
 48442                           
 48443                           ;incstack = 0
 48444                           ;__write_root@file_number stored from wreg
 48445  018008  0100               	movlb	0	; () banked
 48446  01800A  6F8E               	movwf	__write_root@file_number& (0+255),b
 48447                           
 48448                           ;fat16.c: 475: uint16_t sector;;fat16.c: 476: uint16_t offset;;fat16.c: 479: sector = _s
      +                          ector_from_file_number(file_number);
 48449  01800C  0100               	movlb	0	; () banked
 48450  01800E  518E               	movf	__write_root@file_number& (0+255),w,b
 48451  018010  EC7E  F0C3         	call	__sector_from_file_number
 48452  018014  C060  F08A         	movff	?__sector_from_file_number,__write_root@sector
 48453  018018  C061  F08B         	movff	?__sector_from_file_number+1,__write_root@sector+1
 48454                           
 48455                           ;fat16.c: 480: offset = _offset_from_file_number(file_number);
 48456  01801C  0100               	movlb	0	; () banked
 48457  01801E  518E               	movf	__write_root@file_number& (0+255),w,b
 48458  018020  ECFA  F0C4         	call	__offset_from_file_number
 48459  018024  C060  F08C         	movff	?__offset_from_file_number,__write_root@offset
 48460  018028  C061  F08D         	movff	?__offset_from_file_number+1,__write_root@offset+1
 48461                           
 48462                           ;fat16.c: 483: flash_partial_write(sector, offset, 32, data);
 48463  01802C  C08A  F07F         	movff	__write_root@sector,flash_partial_write@page
 48464  018030  C08B  F080         	movff	__write_root@sector+1,flash_partial_write@page+1
 48465  018034  C08C  F081         	movff	__write_root@offset,flash_partial_write@start
 48466  018038  C08D  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 48467  01803C  0E00               	movlw	0
 48468  01803E  0100               	movlb	0	; () banked
 48469  018040  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 48470  018042  0E20               	movlw	32
 48471  018044  6F83               	movwf	flash_partial_write@length& (0+255),b
 48472  018046  C088  F085         	movff	__write_root@data,flash_partial_write@data
 48473  01804A  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 48474  01804E  EC76  F0B7         	call	_flash_partial_write	;wreg free
 48475  018052  0012               	return		;funcret
 48476  018054                     __end_of__write_root:
 48477                           	opt stack 0
 48478                           tosu	equ	0xFFF
 48479                           tosh	equ	0xFFE
 48480                           tosl	equ	0xFFD
 48481                           pclath	equ	0xFFA
 48482                           tblptru	equ	0xFF8
 48483                           tblptrh	equ	0xFF7
 48484                           tblptrl	equ	0xFF6
 48485                           tablat	equ	0xFF5
 48486                           prodh	equ	0xFF4
 48487                           prodl	equ	0xFF3
 48488                           intcon	equ	0xFF2
 48489                           intcon2	equ	0xFF1
 48490                           intcon3	equ	0xFF0
 48491                           indf0	equ	0xFEF
 48492                           postinc0	equ	0xFEE
 48493                           fsr0h	equ	0xFEA
 48494                           fsr0l	equ	0xFE9
 48495                           wreg	equ	0xFE8
 48496                           indf1	equ	0xFE7
 48497                           postinc1	equ	0xFE6
 48498                           postdec1	equ	0xFE5
 48499                           plusw1	equ	0xFE3
 48500                           fsr1h	equ	0xFE2
 48501                           fsr1l	equ	0xFE1
 48502                           indf2	equ	0xFDF
 48503                           postinc2	equ	0xFDE
 48504                           postdec2	equ	0xFDD
 48505                           plusw2	equ	0xFDB
 48506                           fsr2h	equ	0xFDA
 48507                           fsr2l	equ	0xFD9
 48508                           status	equ	0xFD8
 48509                           
 48510 ;; *************** function __make_cluster_chain *****************
 48511 ;; Defined at:
 48512 ;;		line 213 in file "fat16.c"
 48513 ;; Parameters:    Size  Location     Type
 48514 ;;  first_cluste    2   53[BANK0 ] unsigned int 
 48515 ;;  number_of_cl    2   55[BANK0 ] unsigned int 
 48516 ;; Auto vars:     Size  Location     Type
 48517 ;;  next_cluster    2   74[BANK0 ] unsigned int 
 48518 ;;  offset          2   72[BANK0 ] unsigned int 
 48519 ;;  sector_in_bu    2   70[BANK0 ] unsigned int 
 48520 ;;  sector          2   68[BANK0 ] unsigned int 
 48521 ;;  remaining_cl    2   66[BANK0 ] unsigned int 
 48522 ;;  different_se    2   63[BANK0 ] unsigned int 
 48523 ;;  minimum_sect    2   61[BANK0 ] unsigned int 
 48524 ;;  next_offset     2   59[BANK0 ] unsigned int 
 48525 ;;  data_changed    1   65[BANK0 ] unsigned char 
 48526 ;; Return value:  Size  Location     Type
 48527 ;;                  2   53[BANK0 ] unsigned int 
 48528 ;; Registers used:
 48529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 48530 ;; Tracked objects:
 48531 ;;		On entry : 0/0
 48532 ;;		On exit  : 0/0
 48533 ;;		Unchanged: 0/0
 48534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48535 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48536 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48537 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48538 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48539 ;;Total ram usage:       23 bytes
 48540 ;; Hardware stack levels used:    1
 48541 ;; Hardware stack levels required when called:   16
 48542 ;; This function calls:
 48543 ;;		__fat_offset_from_cluster
 48544 ;;		__fat_sector_from_cluster
 48545 ;;		__get_available_cluster
 48546 ;;		__get_available_offset_from_buffer
 48547 ;;		__read_value_from_offset
 48548 ;;		__write_value_to_offset
 48549 ;;		_flash_sector_read
 48550 ;;		_flash_sector_write
 48551 ;; This function is called by:
 48552 ;;		_fat_create_file
 48553 ;;		_fat_delete_file
 48554 ;;		_fat_resize_file
 48555 ;; This function uses a non-reentrant model
 48556 ;;
 48557                           
 48558                           	psect	text228
 48559  00EED4                     __ptext228:
 48560                           	opt stack 0
 48561  00EED4                     __make_cluster_chain:
 48562                           	opt stack 9
 48563                           
 48564                           ;fat16.c: 215: uint16_t remaining_clusters;;fat16.c: 216: uint16_t minimum_sector;;fat16
      +                          .c: 217: uint16_t sector;;fat16.c: 218: uint16_t offset;;fat16.c: 219: uint16_t next_off
      +                          set;;fat16.c: 220: uint16_t sector_in_buffer;;fat16.c: 221: uint16_t next_cluster;;fat16
      +                          .c: 222: uint16_t different_sector_cluster;;fat16.c: 223: uint8_t data_changed;;fat16.c:
      +                           226: sector_in_buffer = 0;
 48565                           
 48566                           ;incstack = 0
 48567  00EED4  0E00               	movlw	0
 48568  00EED6  0100               	movlb	0	; () banked
 48569  00EED8  6FA7               	movwf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),b
 48570  00EEDA  0E00               	movlw	0
 48571  00EEDC  6FA6               	movwf	__make_cluster_chain@sector_in_buffer& (0+255),b
 48572                           
 48573                           ; BSR set to: 0
 48574                           ;fat16.c: 227: remaining_clusters = number_of_clusters;
 48575  00EEDE  C097  F0A2         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 48576  00EEE2  C098  F0A3         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 48577                           
 48578                           ;fat16.c: 228: minimum_sector = 2;
 48579  00EEE6  0E00               	movlw	0
 48580  00EEE8  6F9E               	movwf	(__make_cluster_chain@minimum_sector+1)& (0+255),b
 48581  00EEEA  0E02               	movlw	2
 48582  00EEEC  6F9D               	movwf	__make_cluster_chain@minimum_sector& (0+255),b
 48583                           
 48584                           ;fat16.c: 229: data_changed = 0;
 48585  00EEEE  0E00               	movlw	0
 48586  00EEF0  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 48587                           
 48588                           ; BSR set to: 0
 48589                           ;fat16.c: 232: if((first_cluster==0) && (number_of_clusters>0))
 48590  00EEF2  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 48591  00EEF4  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 48592  00EEF6  A4D8               	btfss	status,2,c
 48593  00EEF8  D024               	goto	l2817
 48594                           
 48595                           ; BSR set to: 0
 48596  00EEFA  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 48597  00EEFC  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 48598  00EEFE  B4D8               	btfsc	status,2,c
 48599  00EF00  D020               	goto	l2817
 48600                           
 48601                           ; BSR set to: 0
 48602                           ;fat16.c: 233: {;fat16.c: 234: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 48603  00EF02  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 48604  00EF06  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 48605  00EF0A  0E00               	movlw	0
 48606  00EF0C  6F8E               	movwf	(__get_available_cluster@skip_sector+1)& (0+255),b
 48607  00EF0E  0E00               	movlw	0
 48608  00EF10  6F8D               	movwf	__get_available_cluster@skip_sector& (0+255),b
 48609  00EF12  ECB5  F0A7         	call	__get_available_cluster	;wreg free
 48610  00EF16  C08B  F095         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 48611  00EF1A  C08C  F096         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 48612                           
 48613                           ;fat16.c: 236: minimum_sector = _fat_sector_from_cluster(first_cluster);
 48614  00EF1E  C095  F060         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 48615  00EF22  C096  F061         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 48616  00EF26  EC01  F0C7         	call	__fat_sector_from_cluster	;wreg free
 48617  00EF2A  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 48618  00EF2E  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 48619                           
 48620                           ;fat16.c: 237: if(first_cluster == 0)
 48621  00EF32  0100               	movlb	0	; () banked
 48622  00EF34  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 48623  00EF36  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 48624  00EF38  A4D8               	btfss	status,2,c
 48625  00EF3A  D003               	goto	l2817
 48626                           
 48627                           ; BSR set to: 0
 48628                           ;fat16.c: 238: {;fat16.c: 239: return 0xFFFF;
 48629  00EF3C  6995               	setf	?__make_cluster_chain& (0+255),b
 48630  00EF3E  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 48631  00EF40  0012               	return	
 48632  00EF42                     l2817:
 48633                           
 48634                           ; BSR set to: 0
 48635                           ;fat16.c: 240: };fat16.c: 241: };fat16.c: 242: next_cluster = first_cluster;
 48636                           
 48637                           ; BSR set to: 0
 48638  00EF42  C095  F0AA         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 48639  00EF46  C096  F0AB         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 48640                           
 48641                           ;fat16.c: 245: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 48642  00EF4A  D103               	goto	l2834
 48643  00EF4C                     
 48644                           ; BSR set to: 0
 48645                           ;fat16.c: 246: {;fat16.c: 259: sector = _fat_sector_from_cluster(next_cluster);
 48646                           
 48647                           ; BSR set to: 0
 48648  00EF4C  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 48649  00EF50  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 48650  00EF54  EC01  F0C7         	call	__fat_sector_from_cluster	;wreg free
 48651  00EF58  C060  F0A4         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 48652  00EF5C  C061  F0A5         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 48653                           
 48654                           ;fat16.c: 260: offset = _fat_offset_from_cluster(next_cluster);
 48655  00EF60  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 48656  00EF64  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 48657  00EF68  EC0E  F0C7         	call	__fat_offset_from_cluster	;wreg free
 48658  00EF6C  C060  F0A8         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 48659  00EF70  C061  F0A9         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 48660                           
 48661                           ;fat16.c: 263: if(sector != sector_in_buffer)
 48662  00EF74  0100               	movlb	0	; () banked
 48663  00EF76  51A6               	movf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 48664  00EF78  19A4               	xorwf	__make_cluster_chain@sector& (0+255),w,b
 48665  00EF7A  E104               	bnz	u20330
 48666  00EF7C  51A7               	movf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 48667  00EF7E  19A5               	xorwf	(__make_cluster_chain@sector+1)& (0+255),w,b
 48668  00EF80  B4D8               	btfsc	status,2,c
 48669  00EF82  D037               	goto	l2821
 48670  00EF84                     u20330:
 48671                           
 48672                           ; BSR set to: 0
 48673                           ;fat16.c: 264: {;fat16.c: 266: if(data_changed)
 48674  00EF84  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 48675  00EF86  B4D8               	btfsc	status,2,c
 48676  00EF88  D00A               	goto	l2822
 48677                           
 48678                           ; BSR set to: 0
 48679                           ;fat16.c: 267: {;fat16.c: 268: flash_sector_write(sector_in_buffer, buffer);
 48680  00EF8A  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 48681  00EF8E  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 48682  00EF92  0E00               	movlw	low _buffer
 48683  00EF94  6F81               	movwf	flash_sector_write@data& (0+255),b
 48684  00EF96  0E08               	movlw	high _buffer
 48685  00EF98  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 48686  00EF9A  EC54  F0BB         	call	_flash_sector_write	;wreg free
 48687  00EF9E                     l2822:
 48688                           
 48689                           ;fat16.c: 269: };fat16.c: 272: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 48690  00EF9E  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 48691  00EFA2  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 48692  00EFA6  C0A4  F08D         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 48693  00EFAA  C0A5  F08E         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 48694  00EFAE  ECB5  F0A7         	call	__get_available_cluster	;wreg free
 48695  00EFB2  C08B  F09F         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 48696  00EFB6  C08C  F0A0         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 48697                           
 48698                           ;fat16.c: 275: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 48699  00EFBA  C09F  F060         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 48700  00EFBE  C0A0  F061         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 48701  00EFC2  EC01  F0C7         	call	__fat_sector_from_cluster	;wreg free
 48702  00EFC6  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 48703  00EFCA  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 48704                           
 48705                           ;fat16.c: 278: flash_sector_read(sector, buffer);
 48706  00EFCE  C0A4  F087         	movff	__make_cluster_chain@sector,flash_sector_read@page
 48707  00EFD2  C0A5  F088         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 48708  00EFD6  0E00               	movlw	low _buffer
 48709  00EFD8  0100               	movlb	0	; () banked
 48710  00EFDA  6F89               	movwf	flash_sector_read@data& (0+255),b
 48711  00EFDC  0E08               	movlw	high _buffer
 48712  00EFDE  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 48713  00EFE0  EC86  F0C2         	call	_flash_sector_read	;wreg free
 48714                           
 48715                           ;fat16.c: 279: sector_in_buffer = sector;
 48716  00EFE4  C0A4  F0A6         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 48717  00EFE8  C0A5  F0A7         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 48718                           
 48719                           ;fat16.c: 280: data_changed = 0;
 48720  00EFEC  0E00               	movlw	0
 48721  00EFEE  0100               	movlb	0	; () banked
 48722  00EFF0  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 48723  00EFF2                     l2821:
 48724                           
 48725                           ; BSR set to: 0
 48726                           ;fat16.c: 281: };fat16.c: 284: if(remaining_clusters > 1)
 48727                           
 48728                           ; BSR set to: 0
 48729  00EFF2  51A3               	movf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 48730  00EFF4  E104               	bnz	u20350
 48731  00EFF6  0E02               	movlw	2
 48732  00EFF8  5DA2               	subwf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 48733  00EFFA  A0D8               	btfss	status,0,c
 48734  00EFFC  D05E               	goto	l2823
 48735  00EFFE                     u20350:
 48736                           
 48737                           ; BSR set to: 0
 48738                           ;fat16.c: 285: {;fat16.c: 287: next_cluster = _read_value_from_offset(offset, buffer);
 48739  00EFFE  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 48740  00F002  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 48741  00F006  0E00               	movlw	low _buffer
 48742  00F008  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 48743  00F00A  0E08               	movlw	high _buffer
 48744  00F00C  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 48745  00F00E  EC99  F0C0         	call	__read_value_from_offset	;wreg free
 48746  00F012  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 48747  00F016  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 48748                           
 48749                           ;fat16.c: 290: if((next_cluster < 2) || (next_cluster > 8153))
 48750  00F01A  0100               	movlb	0	; () banked
 48751  00F01C  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 48752  00F01E  E104               	bnz	u20360
 48753  00F020  0E02               	movlw	2
 48754  00F022  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 48755  00F024  A0D8               	btfss	status,0,c
 48756  00F026  D006               	goto	u20370
 48757  00F028                     u20360:
 48758                           
 48759                           ; BSR set to: 0
 48760  00F028  0EDA               	movlw	218
 48761  00F02A  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 48762  00F02C  0E1F               	movlw	31
 48763  00F02E  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 48764  00F030  A0D8               	btfss	status,0,c
 48765  00F032  D06B               	goto	l2833
 48766  00F034                     u20370:
 48767                           
 48768                           ; BSR set to: 0
 48769                           ;fat16.c: 291: {;fat16.c: 293: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 48770                           
 48771                           ; BSR set to: 0
 48772  00F034  0E02               	movlw	2
 48773  00F036  25A8               	addwf	__make_cluster_chain@offset& (0+255),w,b
 48774  00F038  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 48775  00F03A  0E00               	movlw	0
 48776  00F03C  21A9               	addwfc	(__make_cluster_chain@offset+1)& (0+255),w,b
 48777  00F03E  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 48778  00F040  0E00               	movlw	low _buffer
 48779  00F042  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 48780  00F044  0E08               	movlw	high _buffer
 48781  00F046  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 48782  00F048  ECF6  F0BA         	call	__get_available_offset_from_buffer	;wreg free
 48783  00F04C  C060  F09B         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 48784  00F050  C061  F09C         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 48785                           
 48786                           ;fat16.c: 295: if(next_offset != 0xFFFF)
 48787  00F054  0100               	movlb	0	; () banked
 48788  00F056  299B               	incf	__make_cluster_chain@next_offset& (0+255),w,b
 48789  00F058  E103               	bnz	u20380
 48790  00F05A  299C               	incf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 48791  00F05C  B4D8               	btfsc	status,2,c
 48792  00F05E  D013               	goto	l2827
 48793  00F060                     u20380:
 48794                           
 48795                           ; BSR set to: 0
 48796                           ;fat16.c: 296: {;fat16.c: 298: next_cluster = sector_in_buffer - 2;
 48797  00F060  0EFE               	movlw	254
 48798  00F062  25A6               	addwf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 48799  00F064  6FAA               	movwf	__make_cluster_chain@next_cluster& (0+255),b
 48800  00F066  0EFF               	movlw	255
 48801  00F068  21A7               	addwfc	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 48802  00F06A  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 48803                           
 48804                           ; BSR set to: 0
 48805                           ;fat16.c: 299: next_cluster <<= 8;
 48806  00F06C  51AA               	movf	__make_cluster_chain@next_cluster& (0+255),w,b
 48807  00F06E  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 48808  00F070  6BAA               	clrf	__make_cluster_chain@next_cluster& (0+255),b
 48809                           
 48810                           ; BSR set to: 0
 48811                           ;fat16.c: 300: next_cluster |= (next_offset>>1);
 48812  00F072  90D8               	bcf	status,0,c
 48813  00F074  319C               	rrcf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 48814  00F076  6F9A               	movwf	(??__make_cluster_chain+1)& (0+255),b
 48815  00F078  319B               	rrcf	__make_cluster_chain@next_offset& (0+255),w,b
 48816  00F07A  6F99               	movwf	??__make_cluster_chain& (0+255),b
 48817  00F07C  5199               	movf	??__make_cluster_chain& (0+255),w,b
 48818  00F07E  13AA               	iorwf	__make_cluster_chain@next_cluster& (0+255),f,b
 48819  00F080  519A               	movf	(??__make_cluster_chain+1)& (0+255),w,b
 48820  00F082  13AB               	iorwf	(__make_cluster_chain@next_cluster+1)& (0+255),f,b
 48821                           
 48822                           ;fat16.c: 301: }
 48823  00F084  D00B               	goto	l2830
 48824  00F086                     l2827:
 48825                           
 48826                           ; BSR set to: 0
 48827                           ;fat16.c: 302: else;fat16.c: 303: {;fat16.c: 304: if(different_sector_cluster == 0x0000)
 48828                           
 48829                           ; BSR set to: 0
 48830  00F086  519F               	movf	__make_cluster_chain@different_sector_cluster& (0+255),w,b
 48831  00F088  11A0               	iorwf	(__make_cluster_chain@different_sector_cluster+1)& (0+255),w,b
 48832  00F08A  A4D8               	btfss	status,2,c
 48833  00F08C  D003               	goto	l2829
 48834                           
 48835                           ; BSR set to: 0
 48836                           ;fat16.c: 305: {;fat16.c: 307: return 0xFFFF;
 48837  00F08E  6995               	setf	?__make_cluster_chain& (0+255),b
 48838  00F090  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 48839  00F092  0012               	return	
 48840  00F094                     l2829:
 48841                           
 48842                           ; BSR set to: 0
 48843                           ;fat16.c: 309: else;fat16.c: 310: {;fat16.c: 312: next_cluster = different_sector_cluste
      +                          r;
 48844  00F094  C09F  F0AA         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 48845  00F098  C0A0  F0AB         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 48846  00F09C                     l2830:
 48847                           
 48848                           ; BSR set to: 0
 48849                           ;fat16.c: 313: };fat16.c: 314: };fat16.c: 316: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 48850                           
 48851                           ; BSR set to: 0
 48852                           
 48853                           ; BSR set to: 0
 48854  00F09C  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 48855  00F0A0  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 48856  00F0A4  0E00               	movlw	low _buffer
 48857  00F0A6  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 48858  00F0A8  0E08               	movlw	high _buffer
 48859  00F0AA  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 48860  00F0AC  C0AA  F064         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 48861  00F0B0  C0AB  F065         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 48862  00F0B4  EC37  F0C2         	call	__write_value_to_offset	;wreg free
 48863  00F0B8  D025               	goto	L83
 48864  00F0BA                     l2823:
 48865                           
 48866                           ; BSR set to: 0
 48867                           ;fat16.c: 326: else if(remaining_clusters == 1)
 48868                           
 48869                           ; BSR set to: 0
 48870  00F0BA  05A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 48871  00F0BC  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 48872  00F0BE  A4D8               	btfss	status,2,c
 48873  00F0C0  D028               	goto	l2832
 48874                           
 48875                           ; BSR set to: 0
 48876                           ;fat16.c: 327: {;fat16.c: 329: next_cluster = _read_value_from_offset(offset, buffer);
 48877  00F0C2  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 48878  00F0C6  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 48879  00F0CA  0E00               	movlw	low _buffer
 48880  00F0CC  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 48881  00F0CE  0E08               	movlw	high _buffer
 48882  00F0D0  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 48883  00F0D2  EC99  F0C0         	call	__read_value_from_offset	;wreg free
 48884  00F0D6  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 48885  00F0DA  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 48886                           
 48887                           ;fat16.c: 331: if(next_cluster != 0xFFFF)
 48888  00F0DE  0100               	movlb	0	; () banked
 48889  00F0E0  29AA               	incf	__make_cluster_chain@next_cluster& (0+255),w,b
 48890  00F0E2  E103               	bnz	u20410
 48891  00F0E4  29AB               	incf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 48892  00F0E6  B4D8               	btfsc	status,2,c
 48893  00F0E8  D010               	goto	l2833
 48894  00F0EA                     u20410:
 48895                           
 48896                           ; BSR set to: 0
 48897                           ;fat16.c: 332: {;fat16.c: 334: _write_value_to_offset(offset, buffer, 0xFFFF);
 48898  00F0EA  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 48899  00F0EE  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 48900  00F0F2  0E00               	movlw	low _buffer
 48901  00F0F4  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 48902  00F0F6  0E08               	movlw	high _buffer
 48903  00F0F8  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 48904  00F0FA  0EFF               	movlw	255
 48905  00F0FC  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 48906  00F0FE  6964               	setf	__write_value_to_offset@value& (0+255),b
 48907  00F100  EC37  F0C2         	call	__write_value_to_offset	;wreg free
 48908  00F104                     L83:
 48909                           
 48910                           ;fat16.c: 336: data_changed = 1;
 48911  00F104  0E01               	movlw	1
 48912  00F106  0100               	movlb	0	; () banked
 48913  00F108  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 48914  00F10A                     l2833:
 48915                           
 48916                           ; BSR set to: 0
 48917                           ;fat16.c: 337: };fat16.c: 340: --remaining_clusters;
 48918                           
 48919                           ; BSR set to: 0
 48920  00F10A  07A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),f,b
 48921  00F10C  A0D8               	btfss	status,0,c
 48922  00F10E  07A3               	decf	(__make_cluster_chain@remaining_clusters+1)& (0+255),f,b
 48923                           
 48924                           ;fat16.c: 341: }
 48925  00F110  D020               	goto	l2834
 48926  00F112                     l2832:
 48927                           
 48928                           ; BSR set to: 0
 48929                           ;fat16.c: 344: else;fat16.c: 345: {;fat16.c: 347: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 48930                           
 48931                           ; BSR set to: 0
 48932  00F112  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 48933  00F116  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 48934  00F11A  0E00               	movlw	low _buffer
 48935  00F11C  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 48936  00F11E  0E08               	movlw	high _buffer
 48937  00F120  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 48938  00F122  EC99  F0C0         	call	__read_value_from_offset	;wreg free
 48939  00F126  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 48940  00F12A  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 48941                           
 48942                           ;fat16.c: 350: _write_value_to_offset(offset, buffer, 0x0000);
 48943  00F12E  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 48944  00F132  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 48945  00F136  0E00               	movlw	low _buffer
 48946  00F138  0100               	movlb	0	; () banked
 48947  00F13A  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 48948  00F13C  0E08               	movlw	high _buffer
 48949  00F13E  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 48950  00F140  0E00               	movlw	0
 48951  00F142  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 48952  00F144  0E00               	movlw	0
 48953  00F146  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 48954  00F148  EC37  F0C2         	call	__write_value_to_offset	;wreg free
 48955                           
 48956                           ;fat16.c: 352: data_changed = 1;
 48957  00F14C  0E01               	movlw	1
 48958  00F14E  0100               	movlb	0	; () banked
 48959  00F150  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 48960  00F152                     l2834:
 48961                           
 48962                           ; BSR set to: 0
 48963                           
 48964                           ; BSR set to: 0
 48965                           
 48966                           ; BSR set to: 0
 48967                           
 48968                           ; BSR set to: 0
 48969  00F152  51A2               	movf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 48970  00F154  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 48971  00F156  A4D8               	btfss	status,2,c
 48972  00F158  D6F9               	goto	l2820
 48973                           
 48974                           ; BSR set to: 0
 48975  00F15A  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 48976  00F15C  E104               	bnz	u20430
 48977  00F15E  0E02               	movlw	2
 48978  00F160  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 48979  00F162  A0D8               	btfss	status,0,c
 48980  00F164  D006               	goto	u20440
 48981  00F166                     u20430:
 48982                           
 48983                           ; BSR set to: 0
 48984  00F166  0EDA               	movlw	218
 48985  00F168  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 48986  00F16A  0E1F               	movlw	31
 48987  00F16C  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 48988  00F16E  A0D8               	btfss	status,0,c
 48989  00F170  D6ED               	goto	l2820
 48990  00F172                     u20440:
 48991                           
 48992                           ; BSR set to: 0
 48993                           ;fat16.c: 353: };fat16.c: 355: };fat16.c: 358: if(data_changed)
 48994                           
 48995                           ; BSR set to: 0
 48996                           
 48997                           ; BSR set to: 0
 48998  00F172  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 48999  00F174  B4D8               	btfsc	status,2,c
 49000  00F176  D00A               	goto	l2838
 49001                           
 49002                           ; BSR set to: 0
 49003                           ;fat16.c: 359: {;fat16.c: 360: flash_sector_write(sector_in_buffer, buffer);
 49004  00F178  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 49005  00F17C  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 49006  00F180  0E00               	movlw	low _buffer
 49007  00F182  6F81               	movwf	flash_sector_write@data& (0+255),b
 49008  00F184  0E08               	movlw	high _buffer
 49009  00F186  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 49010  00F188  EC54  F0BB         	call	_flash_sector_write	;wreg free
 49011  00F18C                     l2838:
 49012                           
 49013                           ;fat16.c: 361: };fat16.c: 364: if(number_of_clusters>0)
 49014  00F18C  0100               	movlb	0	; () banked
 49015  00F18E  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 49016  00F190  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 49017  00F192  B4D8               	btfsc	status,2,c
 49018  00F194  D005               	goto	l2839
 49019                           
 49020                           ; BSR set to: 0
 49021                           ;fat16.c: 365: {;fat16.c: 366: return first_cluster;
 49022  00F196  C095  F095         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 49023  00F19A  C096  F096         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 49024                           
 49025                           ; BSR set to: 0
 49026                           ;fat16.c: 367: }
 49027  00F19E  0012               	return	
 49028  00F1A0                     l2839:
 49029                           
 49030                           ; BSR set to: 0
 49031                           ;fat16.c: 368: else;fat16.c: 369: {;fat16.c: 370: return 0x0000;
 49032                           
 49033                           ; BSR set to: 0
 49034  00F1A0  0E00               	movlw	0
 49035  00F1A2  6F96               	movwf	(?__make_cluster_chain+1)& (0+255),b
 49036  00F1A4  0E00               	movlw	0
 49037  00F1A6  6F95               	movwf	?__make_cluster_chain& (0+255),b
 49038                           
 49039                           ; BSR set to: 0
 49040  00F1A8  0012               	return	
 49041  00F1AA                     __end_of__make_cluster_chain:
 49042                           	opt stack 0
 49043                           tosu	equ	0xFFF
 49044                           tosh	equ	0xFFE
 49045                           tosl	equ	0xFFD
 49046                           pclath	equ	0xFFA
 49047                           tblptru	equ	0xFF8
 49048                           tblptrh	equ	0xFF7
 49049                           tblptrl	equ	0xFF6
 49050                           tablat	equ	0xFF5
 49051                           prodh	equ	0xFF4
 49052                           prodl	equ	0xFF3
 49053                           intcon	equ	0xFF2
 49054                           intcon2	equ	0xFF1
 49055                           intcon3	equ	0xFF0
 49056                           indf0	equ	0xFEF
 49057                           postinc0	equ	0xFEE
 49058                           fsr0h	equ	0xFEA
 49059                           fsr0l	equ	0xFE9
 49060                           wreg	equ	0xFE8
 49061                           indf1	equ	0xFE7
 49062                           postinc1	equ	0xFE6
 49063                           postdec1	equ	0xFE5
 49064                           plusw1	equ	0xFE3
 49065                           fsr1h	equ	0xFE2
 49066                           fsr1l	equ	0xFE1
 49067                           indf2	equ	0xFDF
 49068                           postinc2	equ	0xFDE
 49069                           postdec2	equ	0xFDD
 49070                           plusw2	equ	0xFDB
 49071                           fsr2h	equ	0xFDA
 49072                           fsr2l	equ	0xFD9
 49073                           status	equ	0xFD8
 49074                           
 49075 ;; *************** function _flash_sector_write *****************
 49076 ;; Defined at:
 49077 ;;		line 457 in file "flash.c"
 49078 ;; Parameters:    Size  Location     Type
 49079 ;;  page            2   31[BANK0 ] unsigned int 
 49080 ;;  data            2   33[BANK0 ] PTR unsigned char 
 49081 ;;		 -> buffer(512), msd_buffer(512), 
 49082 ;; Auto vars:     Size  Location     Type
 49083 ;;  match           1   35[BANK0 ] enum E7025
 49084 ;; Return value:  Size  Location     Type
 49085 ;;                  1    wreg      void 
 49086 ;; Registers used:
 49087 ;;		wreg, status,2, status,0, cstack
 49088 ;; Tracked objects:
 49089 ;;		On entry : 0/0
 49090 ;;		On exit  : 0/0
 49091 ;;		Unchanged: 0/0
 49092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49093 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49094 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49096 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49097 ;;Total ram usage:        5 bytes
 49098 ;; Hardware stack levels used:    1
 49099 ;; Hardware stack levels required when called:   14
 49100 ;; This function calls:
 49101 ;;		__flash_compare_page_to_buffer
 49102 ;;		__flash_write_page_from_buffer
 49103 ;;		__flash_write_to_buffer
 49104 ;;		_spi_set_configuration
 49105 ;; This function is called by:
 49106 ;;		_ExternalFlash_SectorWrite
 49107 ;;		__make_cluster_chain
 49108 ;;		_fat_format
 49109 ;; This function uses a non-reentrant model
 49110 ;;
 49111                           
 49112                           	psect	text229
 49113  0176A8                     __ptext229:
 49114                           	opt stack 0
 49115  0176A8                     _flash_sector_write:
 49116                           	opt stack 10
 49117                           
 49118                           ;flash.c: 459: flashMatchResult_t match;;flash.c: 462: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 49119                           
 49120                           ; BSR set to: 0
 49121                           ;incstack = 0
 49122  0176A8  0E00               	movlw	0
 49123  0176AA  ECBD  F098         	call	_spi_set_configuration
 49124                           
 49125                           ;flash.c: 465: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 49126  0176AE  0E00               	movlw	0
 49127  0176B0  0100               	movlb	0	; () banked
 49128  0176B2  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 49129  0176B4  0E00               	movlw	0
 49130  0176B6  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 49131  0176B8  C081  F075         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 49132  0176BC  C082  F076         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 49133  0176C0  0E02               	movlw	2
 49134  0176C2  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 49135  0176C4  0E00               	movlw	0
 49136  0176C6  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 49137  0176C8  0E00               	movlw	0
 49138  0176CA  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 49139  0176CC  EC13  F0BF         	call	__flash_write_to_buffer	;wreg free
 49140                           
 49141                           ;flash.c: 468: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 49142  0176D0  C07F  F073         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 49143  0176D4  C080  F074         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 49144  0176D8  0E00               	movlw	0
 49145  0176DA  0100               	movlb	0	; () banked
 49146  0176DC  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 49147  0176DE  EC44  F0B6         	call	__flash_compare_page_to_buffer	;wreg free
 49148  0176E2  0100               	movlb	0	; () banked
 49149  0176E4  6F83               	movwf	flash_sector_write@match& (0+255),b
 49150                           
 49151                           ; BSR set to: 0
 49152                           ;flash.c: 471: if(match==DATA_DOES_NOT_MATCH)
 49153  0176E6  0583               	decf	flash_sector_write@match& (0+255),w,b
 49154  0176E8  A4D8               	btfss	status,2,c
 49155  0176EA  D008               	goto	l2661
 49156                           
 49157                           ; BSR set to: 0
 49158                           ;flash.c: 472: {;flash.c: 473: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 49159  0176EC  C07F  F073         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 49160  0176F0  C080  F074         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 49161  0176F4  0E00               	movlw	0
 49162  0176F6  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 49163  0176F8  EC38  F0BC         	call	__flash_write_page_from_buffer	;wreg free
 49164  0176FC                     l2661:
 49165                           
 49166                           ;flash.c: 474: };flash.c: 477: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 49167  0176FC  0E01               	movlw	1
 49168  0176FE  ECBD  F098         	call	_spi_set_configuration
 49169  017702  0012               	return		;funcret
 49170  017704                     __end_of_flash_sector_write:
 49171                           	opt stack 0
 49172                           tosu	equ	0xFFF
 49173                           tosh	equ	0xFFE
 49174                           tosl	equ	0xFFD
 49175                           pclath	equ	0xFFA
 49176                           tblptru	equ	0xFF8
 49177                           tblptrh	equ	0xFF7
 49178                           tblptrl	equ	0xFF6
 49179                           tablat	equ	0xFF5
 49180                           prodh	equ	0xFF4
 49181                           prodl	equ	0xFF3
 49182                           intcon	equ	0xFF2
 49183                           intcon2	equ	0xFF1
 49184                           intcon3	equ	0xFF0
 49185                           indf0	equ	0xFEF
 49186                           postinc0	equ	0xFEE
 49187                           fsr0h	equ	0xFEA
 49188                           fsr0l	equ	0xFE9
 49189                           wreg	equ	0xFE8
 49190                           indf1	equ	0xFE7
 49191                           postinc1	equ	0xFE6
 49192                           postdec1	equ	0xFE5
 49193                           plusw1	equ	0xFE3
 49194                           fsr1h	equ	0xFE2
 49195                           fsr1l	equ	0xFE1
 49196                           indf2	equ	0xFDF
 49197                           postinc2	equ	0xFDE
 49198                           postdec2	equ	0xFDD
 49199                           plusw2	equ	0xFDB
 49200                           fsr2h	equ	0xFDA
 49201                           fsr2l	equ	0xFD9
 49202                           status	equ	0xFD8
 49203                           
 49204 ;; *************** function __write_value_to_offset *****************
 49205 ;; Defined at:
 49206 ;;		line 123 in file "fat16.c"
 49207 ;; Parameters:    Size  Location     Type
 49208 ;;  offset          2    0[BANK0 ] unsigned int 
 49209 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 49210 ;;		 -> buffer(512), 
 49211 ;;  value           2    4[BANK0 ] unsigned int 
 49212 ;; Auto vars:     Size  Location     Type
 49213 ;;		None
 49214 ;; Return value:  Size  Location     Type
 49215 ;;                  1    wreg      void 
 49216 ;; Registers used:
 49217 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49218 ;; Tracked objects:
 49219 ;;		On entry : 0/0
 49220 ;;		On exit  : 0/0
 49221 ;;		Unchanged: 0/0
 49222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49223 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49225 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49226 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49227 ;;Total ram usage:        8 bytes
 49228 ;; Hardware stack levels used:    1
 49229 ;; Hardware stack levels required when called:   10
 49230 ;; This function calls:
 49231 ;;		Nothing
 49232 ;; This function is called by:
 49233 ;;		__make_cluster_chain
 49234 ;; This function uses a non-reentrant model
 49235 ;;
 49236                           
 49237                           	psect	text230
 49238  01846E                     __ptext230:
 49239                           	opt stack 0
 49240  01846E                     __write_value_to_offset:
 49241                           	opt stack 14
 49242                           
 49243                           ;fat16.c: 125: buffer[offset] = (uint8_t) (value & 0xFF);
 49244                           
 49245                           ;incstack = 0
 49246  01846E  0100               	movlb	0	; () banked
 49247  018470  5160               	movf	__write_value_to_offset@offset& (0+255),w,b
 49248  018472  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 49249  018474  6ED9               	movwf	fsr2l,c
 49250  018476  5161               	movf	(__write_value_to_offset@offset+1)& (0+255),w,b
 49251  018478  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 49252  01847A  6EDA               	movwf	fsr2h,c
 49253  01847C  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 49254                           
 49255                           ; BSR set to: 0
 49256                           ;fat16.c: 126: value >>= 8;
 49257  018480  5165               	movf	(__write_value_to_offset@value+1)& (0+255),w,b
 49258  018482  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 49259  018484  6B65               	clrf	(__write_value_to_offset@value+1)& (0+255),b
 49260                           
 49261                           ; BSR set to: 0
 49262                           ;fat16.c: 127: buffer[offset+1] = (uint8_t) (value & 0xFF);
 49263  018486  0E01               	movlw	1
 49264  018488  2560               	addwf	__write_value_to_offset@offset& (0+255),w,b
 49265  01848A  6F66               	movwf	??__write_value_to_offset& (0+255),b
 49266  01848C  0E00               	movlw	0
 49267  01848E  2161               	addwfc	(__write_value_to_offset@offset+1)& (0+255),w,b
 49268  018490  6F67               	movwf	(??__write_value_to_offset+1)& (0+255),b
 49269  018492  5166               	movf	??__write_value_to_offset& (0+255),w,b
 49270  018494  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 49271  018496  6ED9               	movwf	fsr2l,c
 49272  018498  5167               	movf	(??__write_value_to_offset+1)& (0+255),w,b
 49273  01849A  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 49274  01849C  6EDA               	movwf	fsr2h,c
 49275  01849E  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 49276                           
 49277                           ; BSR set to: 0
 49278  0184A2  0012               	return		;funcret
 49279  0184A4                     __end_of__write_value_to_offset:
 49280                           	opt stack 0
 49281                           tosu	equ	0xFFF
 49282                           tosh	equ	0xFFE
 49283                           tosl	equ	0xFFD
 49284                           pclath	equ	0xFFA
 49285                           tblptru	equ	0xFF8
 49286                           tblptrh	equ	0xFF7
 49287                           tblptrl	equ	0xFF6
 49288                           tablat	equ	0xFF5
 49289                           prodh	equ	0xFF4
 49290                           prodl	equ	0xFF3
 49291                           intcon	equ	0xFF2
 49292                           intcon2	equ	0xFF1
 49293                           intcon3	equ	0xFF0
 49294                           indf0	equ	0xFEF
 49295                           postinc0	equ	0xFEE
 49296                           fsr0h	equ	0xFEA
 49297                           fsr0l	equ	0xFE9
 49298                           wreg	equ	0xFE8
 49299                           indf1	equ	0xFE7
 49300                           postinc1	equ	0xFE6
 49301                           postdec1	equ	0xFE5
 49302                           plusw1	equ	0xFE3
 49303                           fsr1h	equ	0xFE2
 49304                           fsr1l	equ	0xFE1
 49305                           indf2	equ	0xFDF
 49306                           postinc2	equ	0xFDE
 49307                           postdec2	equ	0xFDD
 49308                           plusw2	equ	0xFDB
 49309                           fsr2h	equ	0xFDA
 49310                           fsr2l	equ	0xFD9
 49311                           status	equ	0xFD8
 49312                           
 49313 ;; *************** function __get_available_cluster *****************
 49314 ;; Defined at:
 49315 ;;		line 130 in file "fat16.c"
 49316 ;; Parameters:    Size  Location     Type
 49317 ;;  first_sector    2   43[BANK0 ] unsigned int 
 49318 ;;  skip_sector     2   45[BANK0 ] unsigned int 
 49319 ;; Auto vars:     Size  Location     Type
 49320 ;;  sector          2   51[BANK0 ] unsigned int 
 49321 ;;  offset          2   49[BANK0 ] unsigned int 
 49322 ;;  cluster         2   47[BANK0 ] unsigned int 
 49323 ;; Return value:  Size  Location     Type
 49324 ;;                  2   43[BANK0 ] unsigned int 
 49325 ;; Registers used:
 49326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 49327 ;; Tracked objects:
 49328 ;;		On entry : 0/0
 49329 ;;		On exit  : 0/0
 49330 ;;		Unchanged: 0/0
 49331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49332 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49333 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49335 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49336 ;;Total ram usage:       10 bytes
 49337 ;; Hardware stack levels used:    1
 49338 ;; Hardware stack levels required when called:   15
 49339 ;; This function calls:
 49340 ;;		__cluster_from_sector_and_offset
 49341 ;;		__get_available_offset_from_buffer
 49342 ;;		_flash_sector_read
 49343 ;; This function is called by:
 49344 ;;		__make_cluster_chain
 49345 ;; This function uses a non-reentrant model
 49346 ;;
 49347                           
 49348                           	psect	text231
 49349  014F6A                     __ptext231:
 49350                           	opt stack 0
 49351  014F6A                     __get_available_cluster:
 49352                           	opt stack 9
 49353                           
 49354                           ;fat16.c: 132: uint16_t cluster;;fat16.c: 133: uint16_t sector;;fat16.c: 134: uint16_t o
      +                          ffset;;fat16.c: 137: for (sector=first_sector; sector<=33; ++sector)
 49355                           
 49356                           ; BSR set to: 0
 49357                           ;incstack = 0
 49358  014F6A  C08B  F093         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 49359  014F6E  C08C  F094         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 49360  014F72  0100               	movlb	0	; () banked
 49361  014F74  5194               	movf	(__get_available_cluster@sector+1)& (0+255),w,b
 49362  014F76  E15B               	bnz	l21949
 49363  014F78  0E22               	movlw	34
 49364  014F7A  5D93               	subwf	__get_available_cluster@sector& (0+255),w,b
 49365  014F7C  B0D8               	btfsc	status,0,c
 49366  014F7E  D057               	goto	u19930
 49367                           
 49368                           ; BSR set to: 0
 49369                           ;fat16.c: 138: {;fat16.c: 140: if(sector == skip_sector)
 49370                           
 49371                           ; BSR set to: 0
 49372                           
 49373                           ; BSR set to: 0
 49374  014F80  518D               	movf	__get_available_cluster@skip_sector& (0+255),w,b
 49375  014F82  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 49376  014F84  E104               	bnz	l21925
 49377  014F86  518E               	movf	(__get_available_cluster@skip_sector+1)& (0+255),w,b
 49378  014F88  1994               	xorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 49379  014F8A  B4D8               	btfsc	status,2,c
 49380  014F8C  D04D               	goto	l2805
 49381  014F8E                     l21925:
 49382                           
 49383                           ; BSR set to: 0
 49384                           ;fat16.c: 143: };fat16.c: 146: flash_sector_read(sector, buffer);
 49385  014F8E  C093  F087         	movff	__get_available_cluster@sector,flash_sector_read@page
 49386  014F92  C094  F088         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 49387  014F96  0E00               	movlw	low _buffer
 49388  014F98  6F89               	movwf	flash_sector_read@data& (0+255),b
 49389  014F9A  0E08               	movlw	high _buffer
 49390  014F9C  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 49391  014F9E  EC86  F0C2         	call	_flash_sector_read	;wreg free
 49392                           
 49393                           ;fat16.c: 149: if(sector == 2)
 49394  014FA2  0E02               	movlw	2
 49395  014FA4  0100               	movlb	0	; () banked
 49396  014FA6  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 49397  014FA8  1194               	iorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 49398  014FAA  A4D8               	btfss	status,2,c
 49399  014FAC  D00B               	goto	l2800
 49400                           
 49401                           ; BSR set to: 0
 49402                           ;fat16.c: 150: {;fat16.c: 152: offset = _get_available_offset_from_buffer(4, buffer);
 49403  014FAE  0E00               	movlw	0
 49404  014FB0  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 49405  014FB2  0E04               	movlw	4
 49406  014FB4  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 49407  014FB6  0E00               	movlw	low _buffer
 49408  014FB8  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 49409  014FBA  0E08               	movlw	high _buffer
 49410  014FBC  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 49411  014FBE  ECF6  F0BA         	call	__get_available_offset_from_buffer	;wreg free
 49412  014FC2  D00B               	goto	L60
 49413  014FC4                     l2800:
 49414                           
 49415                           ;fat16.c: 154: else;fat16.c: 155: {;fat16.c: 156: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 49416  014FC4  0E00               	movlw	0
 49417  014FC6  0100               	movlb	0	; () banked
 49418  014FC8  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 49419  014FCA  0E00               	movlw	0
 49420  014FCC  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 49421  014FCE  0E00               	movlw	low _buffer
 49422  014FD0  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 49423  014FD2  0E08               	movlw	high _buffer
 49424  014FD4  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 49425  014FD6  ECF6  F0BA         	call	__get_available_offset_from_buffer	;wreg free
 49426  014FDA                     L60:
 49427  014FDA  C060  F091         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 49428  014FDE  C061  F092         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 49429                           
 49430                           ;fat16.c: 157: };fat16.c: 160: if(offset != 0xFFFF)
 49431  014FE2  0100               	movlb	0	; () banked
 49432  014FE4  2991               	incf	__get_available_cluster@offset& (0+255),w,b
 49433  014FE6  E103               	bnz	u19910
 49434  014FE8  2992               	incf	(__get_available_cluster@offset+1)& (0+255),w,b
 49435  014FEA  B4D8               	btfsc	status,2,c
 49436  014FEC  D01D               	goto	l2805
 49437  014FEE                     u19910:
 49438                           
 49439                           ; BSR set to: 0
 49440                           ;fat16.c: 161: {;fat16.c: 163: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 49441  014FEE  C093  F060         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 49442  014FF2  C094  F061         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 49443  014FF6  C091  F062         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 49444  014FFA  C092  F063         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 49445  014FFE  EC0F  F0C5         	call	__cluster_from_sector_and_offset	;wreg free
 49446  015002  C060  F08F         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 49447  015006  C061  F090         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 49448                           
 49449                           ;fat16.c: 165: if(cluster > 8191)
 49450  01500A  0E20               	movlw	32
 49451  01500C  0100               	movlb	0	; () banked
 49452  01500E  5D90               	subwf	(__get_available_cluster@cluster+1)& (0+255),w,b
 49453  015010  A0D8               	btfss	status,0,c
 49454  015012  D005               	goto	l2803
 49455                           
 49456                           ; BSR set to: 0
 49457                           ;fat16.c: 166: {;fat16.c: 168: return 0x0000;
 49458  015014  0E00               	movlw	0
 49459  015016  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 49460  015018  0E00               	movlw	0
 49461  01501A  6F8B               	movwf	?__get_available_cluster& (0+255),b
 49462                           
 49463                           ; BSR set to: 0
 49464  01501C  0012               	return	
 49465  01501E                     l2803:
 49466                           
 49467                           ; BSR set to: 0
 49468                           ;fat16.c: 170: else;fat16.c: 171: {;fat16.c: 173: return cluster;
 49469  01501E  C08F  F08B         	movff	__get_available_cluster@cluster,?__get_available_cluster
 49470  015022  C090  F08C         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 49471  015026  0012               	return	
 49472  015028                     l2805:
 49473                           
 49474                           ; BSR set to: 0
 49475                           
 49476                           ; BSR set to: 0
 49477                           
 49478                           ; BSR set to: 0
 49479                           
 49480                           ; BSR set to: 0
 49481  015028  4B93               	infsnz	__get_available_cluster@sector& (0+255),f,b
 49482  01502A  2B94               	incf	(__get_available_cluster@sector+1)& (0+255),f,b
 49483  01502C  D7A3               	goto	L61
 49484  01502E                     u19930:
 49485  01502E                     l21949:
 49486                           
 49487                           ; BSR set to: 0
 49488                           ;fat16.c: 174: };fat16.c: 175: };fat16.c: 176: };fat16.c: 179: return 0x0000;
 49489  01502E  0E00               	movlw	0
 49490  015030  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 49491  015032  0E00               	movlw	0
 49492  015034  6F8B               	movwf	?__get_available_cluster& (0+255),b
 49493  015036  0012               	return	
 49494  015038                     __end_of__get_available_cluster:
 49495                           	opt stack 0
 49496                           tosu	equ	0xFFF
 49497                           tosh	equ	0xFFE
 49498                           tosl	equ	0xFFD
 49499                           pclath	equ	0xFFA
 49500                           tblptru	equ	0xFF8
 49501                           tblptrh	equ	0xFF7
 49502                           tblptrl	equ	0xFF6
 49503                           tablat	equ	0xFF5
 49504                           prodh	equ	0xFF4
 49505                           prodl	equ	0xFF3
 49506                           intcon	equ	0xFF2
 49507                           intcon2	equ	0xFF1
 49508                           intcon3	equ	0xFF0
 49509                           indf0	equ	0xFEF
 49510                           postinc0	equ	0xFEE
 49511                           fsr0h	equ	0xFEA
 49512                           fsr0l	equ	0xFE9
 49513                           wreg	equ	0xFE8
 49514                           indf1	equ	0xFE7
 49515                           postinc1	equ	0xFE6
 49516                           postdec1	equ	0xFE5
 49517                           plusw1	equ	0xFE3
 49518                           fsr1h	equ	0xFE2
 49519                           fsr1l	equ	0xFE1
 49520                           indf2	equ	0xFDF
 49521                           postinc2	equ	0xFDE
 49522                           postdec2	equ	0xFDD
 49523                           plusw2	equ	0xFDB
 49524                           fsr2h	equ	0xFDA
 49525                           fsr2l	equ	0xFD9
 49526                           status	equ	0xFD8
 49527                           
 49528 ;; *************** function __get_available_offset_from_buffer *****************
 49529 ;; Defined at:
 49530 ;;		line 98 in file "fat16.c"
 49531 ;; Parameters:    Size  Location     Type
 49532 ;;  minimum_offs    2    0[BANK0 ] unsigned int 
 49533 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 49534 ;;		 -> buffer(512), 
 49535 ;; Auto vars:     Size  Location     Type
 49536 ;;  offset          2    6[BANK0 ] unsigned int 
 49537 ;; Return value:  Size  Location     Type
 49538 ;;                  2    0[BANK0 ] unsigned int 
 49539 ;; Registers used:
 49540 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49541 ;; Tracked objects:
 49542 ;;		On entry : 0/0
 49543 ;;		On exit  : 0/0
 49544 ;;		Unchanged: 0/0
 49545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49546 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49547 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49548 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49549 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49550 ;;Total ram usage:        8 bytes
 49551 ;; Hardware stack levels used:    1
 49552 ;; Hardware stack levels required when called:   10
 49553 ;; This function calls:
 49554 ;;		Nothing
 49555 ;; This function is called by:
 49556 ;;		__get_available_cluster
 49557 ;;		__make_cluster_chain
 49558 ;; This function uses a non-reentrant model
 49559 ;;
 49560                           
 49561                           	psect	text232
 49562  0175EC                     __ptext232:
 49563                           	opt stack 0
 49564  0175EC                     __get_available_offset_from_buffer:
 49565                           	opt stack 14
 49566                           
 49567                           ;fat16.c: 100: uint16_t offset;;fat16.c: 102: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 49568                           
 49569                           ; BSR set to: 0
 49570                           ;incstack = 0
 49571  0175EC  C060  F066         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 49572  0175F0  C061  F067         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 49573  0175F4  0E02               	movlw	2
 49574  0175F6  0100               	movlb	0	; () banked
 49575  0175F8  D022               	goto	L62
 49576  0175FA                     
 49577                           ; BSR set to: 0
 49578                           ;fat16.c: 103: {;fat16.c: 104: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 49579                           
 49580                           ; BSR set to: 0
 49581  0175FA  5166               	movf	__get_available_offset_from_buffer@offset& (0+255),w,b
 49582  0175FC  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 49583  0175FE  6ED9               	movwf	fsr2l,c
 49584  017600  5167               	movf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 49585  017602  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 49586  017604  6EDA               	movwf	fsr2h,c
 49587  017606  50DF               	movf	indf2,w,c
 49588  017608  A4D8               	btfss	status,2,c
 49589  01760A  D014               	goto	l2786
 49590                           
 49591                           ; BSR set to: 0
 49592  01760C  0E01               	movlw	1
 49593  01760E  2566               	addwf	__get_available_offset_from_buffer@offset& (0+255),w,b
 49594  017610  6F64               	movwf	??__get_available_offset_from_buffer& (0+255),b
 49595  017612  0E00               	movlw	0
 49596  017614  2167               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 49597  017616  6F65               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),b
 49598  017618  5164               	movf	??__get_available_offset_from_buffer& (0+255),w,b
 49599  01761A  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 49600  01761C  6ED9               	movwf	fsr2l,c
 49601  01761E  5165               	movf	(??__get_available_offset_from_buffer+1)& (0+255),w,b
 49602  017620  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 49603  017622  6EDA               	movwf	fsr2h,c
 49604  017624  50DF               	movf	indf2,w,c
 49605  017626  A4D8               	btfss	status,2,c
 49606  017628  D005               	goto	l2786
 49607                           
 49608                           ; BSR set to: 0
 49609                           ;fat16.c: 105: {;fat16.c: 106: return offset;
 49610  01762A  C066  F060         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 49611  01762E  C067  F061         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 49612  017632  0012               	return	
 49613  017634                     l2786:
 49614                           
 49615                           ; BSR set to: 0
 49616                           
 49617                           ; BSR set to: 0
 49618  017634  0E02               	movlw	2
 49619  017636  2766               	addwf	__get_available_offset_from_buffer@offset& (0+255),f,b
 49620  017638  0E00               	movlw	0
 49621  01763A  2367               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),f,b
 49622  01763C  0E02               	movlw	2
 49623  01763E                     L62:
 49624  01763E  5D67               	subwf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 49625  017640  A0D8               	btfss	status,0,c
 49626  017642  D7DB               	goto	l2784
 49627                           
 49628                           ; BSR set to: 0
 49629                           ;fat16.c: 107: };fat16.c: 108: };fat16.c: 111: return 0xFFFF;
 49630  017644  6960               	setf	?__get_available_offset_from_buffer& (0+255),b
 49631  017646  6961               	setf	(?__get_available_offset_from_buffer+1)& (0+255),b
 49632                           
 49633                           ; BSR set to: 0
 49634  017648  0012               	return		;funcret
 49635  01764A                     __end_of__get_available_offset_from_buffer:
 49636                           	opt stack 0
 49637                           tosu	equ	0xFFF
 49638                           tosh	equ	0xFFE
 49639                           tosl	equ	0xFFD
 49640                           pclath	equ	0xFFA
 49641                           tblptru	equ	0xFF8
 49642                           tblptrh	equ	0xFF7
 49643                           tblptrl	equ	0xFF6
 49644                           tablat	equ	0xFF5
 49645                           prodh	equ	0xFF4
 49646                           prodl	equ	0xFF3
 49647                           intcon	equ	0xFF2
 49648                           intcon2	equ	0xFF1
 49649                           intcon3	equ	0xFF0
 49650                           indf0	equ	0xFEF
 49651                           postinc0	equ	0xFEE
 49652                           fsr0h	equ	0xFEA
 49653                           fsr0l	equ	0xFE9
 49654                           wreg	equ	0xFE8
 49655                           indf1	equ	0xFE7
 49656                           postinc1	equ	0xFE6
 49657                           postdec1	equ	0xFE5
 49658                           plusw1	equ	0xFE3
 49659                           fsr1h	equ	0xFE2
 49660                           fsr1l	equ	0xFE1
 49661                           indf2	equ	0xFDF
 49662                           postinc2	equ	0xFDE
 49663                           postdec2	equ	0xFDD
 49664                           plusw2	equ	0xFDB
 49665                           fsr2h	equ	0xFDA
 49666                           fsr2l	equ	0xFD9
 49667                           status	equ	0xFD8
 49668                           
 49669 ;; *************** function __cluster_from_sector_and_offset *****************
 49670 ;; Defined at:
 49671 ;;		line 89 in file "fat16.c"
 49672 ;; Parameters:    Size  Location     Type
 49673 ;;  sector          2    0[BANK0 ] unsigned int 
 49674 ;;  offset          2    2[BANK0 ] unsigned int 
 49675 ;; Auto vars:     Size  Location     Type
 49676 ;;		None
 49677 ;; Return value:  Size  Location     Type
 49678 ;;                  2    0[BANK0 ] unsigned int 
 49679 ;; Registers used:
 49680 ;;		wreg, status,2, status,0
 49681 ;; Tracked objects:
 49682 ;;		On entry : 0/0
 49683 ;;		On exit  : 0/0
 49684 ;;		Unchanged: 0/0
 49685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49686 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49689 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49690 ;;Total ram usage:        4 bytes
 49691 ;; Hardware stack levels used:    1
 49692 ;; Hardware stack levels required when called:   10
 49693 ;; This function calls:
 49694 ;;		Nothing
 49695 ;; This function is called by:
 49696 ;;		__get_available_cluster
 49697 ;; This function uses a non-reentrant model
 49698 ;;
 49699                           
 49700                           	psect	text233
 49701  018A1E                     __ptext233:
 49702                           	opt stack 0
 49703  018A1E                     __cluster_from_sector_and_offset:
 49704                           	opt stack 13
 49705                           
 49706                           ;fat16.c: 91: offset >>= 1;
 49707                           
 49708                           ; BSR set to: 0
 49709                           ;incstack = 0
 49710  018A1E  0100               	movlb	0	; () banked
 49711  018A20  90D8               	bcf	status,0,c
 49712  018A22  3363               	rrcf	(__cluster_from_sector_and_offset@offset+1)& (0+255),f,b
 49713  018A24  3362               	rrcf	__cluster_from_sector_and_offset@offset& (0+255),f,b
 49714                           
 49715                           ; BSR set to: 0
 49716                           ;fat16.c: 92: sector -= 2;
 49717  018A26  0E02               	movlw	2
 49718  018A28  5F60               	subwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 49719  018A2A  0E00               	movlw	0
 49720  018A2C  5B61               	subwfb	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 49721                           
 49722                           ; BSR set to: 0
 49723                           ;fat16.c: 93: sector <<= 8;
 49724  018A2E  5160               	movf	__cluster_from_sector_and_offset@sector& (0+255),w,b
 49725  018A30  6F61               	movwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),b
 49726  018A32  6B60               	clrf	__cluster_from_sector_and_offset@sector& (0+255),b
 49727                           
 49728                           ; BSR set to: 0
 49729                           ;fat16.c: 94: sector |= offset;
 49730  018A34  5162               	movf	__cluster_from_sector_and_offset@offset& (0+255),w,b
 49731  018A36  1360               	iorwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 49732  018A38  5163               	movf	(__cluster_from_sector_and_offset@offset+1)& (0+255),w,b
 49733  018A3A  1361               	iorwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 49734                           
 49735                           ; BSR set to: 0
 49736                           ;fat16.c: 95: return sector;
 49737  018A3C  C060  F060         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 49738  018A40  C061  F061         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 49739  018A44  0012               	return	
 49740  018A46                     __end_of__cluster_from_sector_and_offset:
 49741                           	opt stack 0
 49742                           tosu	equ	0xFFF
 49743                           tosh	equ	0xFFE
 49744                           tosl	equ	0xFFD
 49745                           pclath	equ	0xFFA
 49746                           tblptru	equ	0xFF8
 49747                           tblptrh	equ	0xFF7
 49748                           tblptrl	equ	0xFF6
 49749                           tablat	equ	0xFF5
 49750                           prodh	equ	0xFF4
 49751                           prodl	equ	0xFF3
 49752                           intcon	equ	0xFF2
 49753                           intcon2	equ	0xFF1
 49754                           intcon3	equ	0xFF0
 49755                           indf0	equ	0xFEF
 49756                           postinc0	equ	0xFEE
 49757                           fsr0h	equ	0xFEA
 49758                           fsr0l	equ	0xFE9
 49759                           wreg	equ	0xFE8
 49760                           indf1	equ	0xFE7
 49761                           postinc1	equ	0xFE6
 49762                           postdec1	equ	0xFE5
 49763                           plusw1	equ	0xFE3
 49764                           fsr1h	equ	0xFE2
 49765                           fsr1l	equ	0xFE1
 49766                           indf2	equ	0xFDF
 49767                           postinc2	equ	0xFDE
 49768                           postdec2	equ	0xFDD
 49769                           plusw2	equ	0xFDB
 49770                           fsr2h	equ	0xFDA
 49771                           fsr2l	equ	0xFD9
 49772                           status	equ	0xFD8
 49773                           
 49774 ;; *************** function _fat_modify_file *****************
 49775 ;; Defined at:
 49776 ;;		line 962 in file "fat16.c"
 49777 ;; Parameters:    Size  Location     Type
 49778 ;;  file_number     1    wreg     unsigned char 
 49779 ;;  start_byte      4   65[BANK0 ] unsigned long 
 49780 ;;  length          2   69[BANK0 ] unsigned int 
 49781 ;;  data            2   71[BANK0 ] PTR unsigned char 
 49782 ;;		 -> log_write_to_disk@log_entry(32), ReceivedDataBuffer(64), 
 49783 ;; Auto vars:     Size  Location     Type
 49784 ;;  file_number     1   85[BANK0 ] unsigned char 
 49785 ;;  root           32   99[BANK0 ] struct .
 49786 ;;  position        4   95[BANK0 ] unsigned long 
 49787 ;;  number_of_by    2   93[BANK0 ] unsigned int 
 49788 ;;  offset          2   91[BANK0 ] unsigned int 
 49789 ;;  cluster         2   89[BANK0 ] unsigned int 
 49790 ;;  sector          2   86[BANK0 ] unsigned int 
 49791 ;;  return_code     1   88[BANK0 ] unsigned char 
 49792 ;; Return value:  Size  Location     Type
 49793 ;;                  1    wreg      unsigned char 
 49794 ;; Registers used:
 49795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 49796 ;; Tracked objects:
 49797 ;;		On entry : 0/0
 49798 ;;		On exit  : 0/0
 49799 ;;		Unchanged: 0/0
 49800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49801 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49802 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49803 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49804 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49805 ;;Total ram usage:       66 bytes
 49806 ;; Hardware stack levels used:    1
 49807 ;; Hardware stack levels required when called:   17
 49808 ;; This function calls:
 49809 ;;		__data_sector_from_cluster
 49810 ;;		__find_nth_cluster
 49811 ;;		__read_fat
 49812 ;;		_fat_get_file_information
 49813 ;;		_flash_partial_write
 49814 ;; This function is called by:
 49815 ;;		_fat_append_to_file
 49816 ;;		__parse_file_modify
 49817 ;; This function uses a non-reentrant model
 49818 ;;
 49819                           
 49820                           	psect	text234
 49821  00FE04                     __ptext234:
 49822                           	opt stack 0
 49823  00FE04                     _fat_modify_file:
 49824                           	opt stack 9
 49825                           
 49826                           ; BSR set to: 0
 49827                           ;incstack = 0
 49828                           ;fat_modify_file@file_number stored from wreg
 49829  00FE04  0100               	movlb	0	; () banked
 49830  00FE06  6FB5               	movwf	fat_modify_file@file_number& (0+255),b
 49831                           
 49832                           ;fat16.c: 964: rootEntry_t root;;fat16.c: 965: uint16_t cluster;;fat16.c: 966: uint32_t 
      +                          position;;fat16.c: 967: uint16_t offset;;fat16.c: 968: uint16_t sector;;fat16.c: 969: ui
      +                          nt16_t number_of_bytes;;fat16.c: 970: uint8_t return_code;;fat16.c: 973: return_code = f
      +                          at_get_file_information(file_number, &root);
 49833  00FE08  0EC3               	movlw	low fat_modify_file@root
 49834  00FE0A  0100               	movlb	0	; () banked
 49835  00FE0C  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 49836  00FE0E  0E00               	movlw	high fat_modify_file@root
 49837  00FE10  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 49838  00FE12  51B5               	movf	fat_modify_file@file_number& (0+255),w,b
 49839  00FE14  ECBF  F0B6         	call	_fat_get_file_information
 49840  00FE18  0100               	movlb	0	; () banked
 49841  00FE1A  6FB8               	movwf	fat_modify_file@return_code& (0+255),b
 49842                           
 49843                           ; BSR set to: 0
 49844                           ;fat16.c: 974: if(return_code!=0x00)
 49845  00FE1C  51B8               	movf	fat_modify_file@return_code& (0+255),w,b
 49846  00FE1E  B4D8               	btfsc	status,2,c
 49847  00FE20  D002               	goto	l2950
 49848                           
 49849                           ; BSR set to: 0
 49850                           ;fat16.c: 975: {;fat16.c: 977: return return_code;
 49851  00FE22  51B8               	movf	fat_modify_file@return_code& (0+255),w,b
 49852                           
 49853                           ; BSR set to: 0
 49854  00FE24  0012               	return	
 49855  00FE26                     l2950:
 49856                           
 49857                           ; BSR set to: 0
 49858                           ;fat16.c: 978: };fat16.c: 981: if(start_byte>root.fileSize)
 49859                           
 49860                           ; BSR set to: 0
 49861  00FE26  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 49862  00FE28  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 49863  00FE2A  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 49864  00FE2C  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 49865  00FE2E  51A3               	movf	(fat_modify_file@start_byte+2)& (0+255),w,b
 49866  00FE30  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 49867  00FE32  51A4               	movf	(fat_modify_file@start_byte+3)& (0+255),w,b
 49868  00FE34  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 49869  00FE36  B0D8               	btfsc	status,0,c
 49870  00FE38  D002               	goto	l2952
 49871                           
 49872                           ; BSR set to: 0
 49873                           ;fat16.c: 982: {;fat16.c: 984: return 0xF0;
 49874  00FE3A  0EF0               	movlw	240
 49875                           
 49876                           ; BSR set to: 0
 49877  00FE3C  0012               	return	
 49878  00FE3E                     l2952:
 49879                           
 49880                           ; BSR set to: 0
 49881                           ;fat16.c: 985: };fat16.c: 987: if((start_byte+length) > root.fileSize)
 49882                           
 49883                           ; BSR set to: 0
 49884  00FE3E  51A5               	movf	fat_modify_file@length& (0+255),w,b
 49885  00FE40  25A1               	addwf	fat_modify_file@start_byte& (0+255),w,b
 49886  00FE42  6FA9               	movwf	??_fat_modify_file& (0+255),b
 49887  00FE44  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 49888  00FE46  21A2               	addwfc	(fat_modify_file@start_byte+1)& (0+255),w,b
 49889  00FE48  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 49890  00FE4A  0E00               	movlw	0
 49891  00FE4C  21A3               	addwfc	(fat_modify_file@start_byte+2)& (0+255),w,b
 49892  00FE4E  6FAB               	movwf	(??_fat_modify_file+2)& (0+255),b
 49893  00FE50  0E00               	movlw	0
 49894  00FE52  21A4               	addwfc	(fat_modify_file@start_byte+3)& (0+255),w,b
 49895  00FE54  6FAC               	movwf	(??_fat_modify_file+3)& (0+255),b
 49896  00FE56  51A9               	movf	??_fat_modify_file& (0+255),w,b
 49897  00FE58  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 49898  00FE5A  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 49899  00FE5C  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 49900  00FE5E  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 49901  00FE60  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 49902  00FE62  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 49903  00FE64  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 49904  00FE66  B0D8               	btfsc	status,0,c
 49905  00FE68  D00E               	goto	l2953
 49906                           
 49907                           ; BSR set to: 0
 49908                           ;fat16.c: 988: {;fat16.c: 990: length = root.fileSize - start_byte;
 49909  00FE6A  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 49910  00FE6E  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 49911  00FE72  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 49912  00FE74  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 49913  00FE76  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 49914  00FE78  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 49915  00FE7A  51DF               	movf	(fat_modify_file@root+28)& (0+255),w,b
 49916  00FE7C  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 49917  00FE7E  6FA5               	movwf	fat_modify_file@length& (0+255),b
 49918  00FE80  51E0               	movf	(fat_modify_file@root+29)& (0+255),w,b
 49919  00FE82  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 49920  00FE84  6FA6               	movwf	(fat_modify_file@length+1)& (0+255),b
 49921  00FE86                     l2953:
 49922                           
 49923                           ; BSR set to: 0
 49924                           ;fat16.c: 991: };fat16.c: 994: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 49925                           
 49926                           ; BSR set to: 0
 49927  00FE86  C0DD  F097         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 49928  00FE8A  C0DE  F098         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 49929  00FE8E  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 49930  00FE92  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 49931  00FE96  C0A3  F0AB         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 49932  00FE9A  C0A4  F0AC         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 49933  00FE9E  0E0A               	movlw	10
 49934  00FEA0  D005               	goto	u21190
 49935  00FEA2                     u21195:
 49936  00FEA2  90D8               	bcf	status,0,c
 49937  00FEA4  33AC               	rrcf	(??_fat_modify_file+3)& (0+255),f,b
 49938  00FEA6  33AB               	rrcf	(??_fat_modify_file+2)& (0+255),f,b
 49939  00FEA8  33AA               	rrcf	(??_fat_modify_file+1)& (0+255),f,b
 49940  00FEAA  33A9               	rrcf	??_fat_modify_file& (0+255),f,b
 49941  00FEAC                     u21190:
 49942  00FEAC  2EE8               	decfsz	wreg,f,c
 49943  00FEAE  D7F9               	goto	u21195
 49944  00FEB0  C0A9  F099         	movff	??_fat_modify_file,__find_nth_cluster@n
 49945  00FEB4  C0AA  F09A         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 49946  00FEB8  EC2E  F0AF         	call	__find_nth_cluster	;wreg free
 49947  00FEBC  C097  F0B9         	movff	?__find_nth_cluster,fat_modify_file@cluster
 49948  00FEC0  C098  F0BA         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 49949                           
 49950                           ;fat16.c: 997: position = start_byte & 0xFFFFFE00;
 49951  00FEC4  0E00               	movlw	0
 49952  00FEC6  0100               	movlb	0	; () banked
 49953  00FEC8  15A1               	andwf	fat_modify_file@start_byte& (0+255),w,b
 49954  00FECA  6FBF               	movwf	fat_modify_file@position& (0+255),b
 49955  00FECC  0EFE               	movlw	254
 49956  00FECE  15A2               	andwf	(fat_modify_file@start_byte+1)& (0+255),w,b
 49957  00FED0  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 49958  00FED2  0EFF               	movlw	255
 49959  00FED4  15A3               	andwf	(fat_modify_file@start_byte+2)& (0+255),w,b
 49960  00FED6  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 49961  00FED8  0EFF               	movlw	255
 49962  00FEDA  15A4               	andwf	(fat_modify_file@start_byte+3)& (0+255),w,b
 49963  00FEDC  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 49964                           
 49965                           ; BSR set to: 0
 49966                           ;fat16.c: 1000: offset = (uint16_t) (start_byte-position);
 49967  00FEDE  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 49968  00FEE2  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 49969  00FEE6  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 49970  00FEE8  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 49971  00FEEA  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 49972  00FEEC  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 49973  00FEEE  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 49974  00FEF0  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 49975  00FEF2  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 49976  00FEF4  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 49977  00FEF6  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 49978  00FEF8  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 49979                           
 49980                           ; BSR set to: 0
 49981                           ;fat16.c: 1003: position = 0;
 49982  00FEFA  0E00               	movlw	0
 49983  00FEFC  6FBF               	movwf	fat_modify_file@position& (0+255),b
 49984  00FEFE  0E00               	movlw	0
 49985  00FF00  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 49986  00FF02  0E00               	movlw	0
 49987  00FF04  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 49988  00FF06  0E00               	movlw	0
 49989  00FF08  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 49990                           
 49991                           ;fat16.c: 1004: while(position < length)
 49992  00FF0A  D089               	goto	l2954
 49993  00FF0C                     
 49994                           ; BSR set to: 0
 49995                           ;fat16.c: 1005: {;fat16.c: 1007: if(offset==512)
 49996                           
 49997                           ; BSR set to: 0
 49998  00FF0C  0E02               	movlw	2
 49999  00FF0E  19BC               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 50000  00FF10  11BB               	iorwf	fat_modify_file@offset& (0+255),w,b
 50001  00FF12  A4D8               	btfss	status,2,c
 50002  00FF14  D00F               	goto	l2956
 50003                           
 50004                           ; BSR set to: 0
 50005                           ;fat16.c: 1008: {;fat16.c: 1010: cluster = _read_fat(cluster);
 50006  00FF16  C0B9  F08F         	movff	fat_modify_file@cluster,__read_fat@cluster
 50007  00FF1A  C0BA  F090         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 50008  00FF1E  EC43  F0BD         	call	__read_fat	;wreg free
 50009  00FF22  C08F  F0B9         	movff	?__read_fat,fat_modify_file@cluster
 50010  00FF26  C090  F0BA         	movff	?__read_fat+1,fat_modify_file@cluster+1
 50011                           
 50012                           ;fat16.c: 1012: offset = 0;
 50013  00FF2A  0E00               	movlw	0
 50014  00FF2C  0100               	movlb	0	; () banked
 50015  00FF2E  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 50016  00FF30  0E00               	movlw	0
 50017  00FF32  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 50018  00FF34                     l2956:
 50019                           
 50020                           ; BSR set to: 0
 50021                           ;fat16.c: 1013: };fat16.c: 1016: sector = _data_sector_from_cluster(cluster);
 50022                           
 50023                           ; BSR set to: 0
 50024  00FF34  C0B9  F060         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 50025  00FF38  C0BA  F061         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 50026  00FF3C  EC0B  F0C8         	call	__data_sector_from_cluster	;wreg free
 50027  00FF40  C060  F0B6         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 50028  00FF44  C061  F0B7         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 50029                           
 50030                           ;fat16.c: 1019: number_of_bytes = 512 - offset;
 50031  00FF48  C0BB  F0A9         	movff	fat_modify_file@offset,??_fat_modify_file
 50032  00FF4C  C0BC  F0AA         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 50033  00FF50  0100               	movlb	0	; () banked
 50034  00FF52  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 50035  00FF54  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 50036  00FF56  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 50037  00FF58  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 50038  00FF5A  0E00               	movlw	0
 50039  00FF5C  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 50040  00FF5E  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 50041  00FF60  0E02               	movlw	2
 50042  00FF62  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 50043  00FF64  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 50044                           
 50045                           ; BSR set to: 0
 50046                           ;fat16.c: 1020: if(number_of_bytes > (length-position))
 50047  00FF66  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 50048  00FF68  6FA9               	movwf	??_fat_modify_file& (0+255),b
 50049  00FF6A  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 50050  00FF6C  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 50051  00FF6E  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 50052  00FF70  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 50053  00FF72  C0BF  F0AD         	movff	fat_modify_file@position,??_fat_modify_file+4
 50054  00FF76  C0C0  F0AE         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 50055  00FF7A  C0C1  F0AF         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 50056  00FF7E  C0C2  F0B0         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 50057  00FF82  1FAD               	comf	(??_fat_modify_file+4)& (0+255),f,b
 50058  00FF84  1FAE               	comf	(??_fat_modify_file+5)& (0+255),f,b
 50059  00FF86  1FAF               	comf	(??_fat_modify_file+6)& (0+255),f,b
 50060  00FF88  1FB0               	comf	(??_fat_modify_file+7)& (0+255),f,b
 50061  00FF8A  2BAD               	incf	(??_fat_modify_file+4)& (0+255),f,b
 50062  00FF8C  0E00               	movlw	0
 50063  00FF8E  23AE               	addwfc	(??_fat_modify_file+5)& (0+255),f,b
 50064  00FF90  23AF               	addwfc	(??_fat_modify_file+6)& (0+255),f,b
 50065  00FF92  23B0               	addwfc	(??_fat_modify_file+7)& (0+255),f,b
 50066  00FF94  51A5               	movf	fat_modify_file@length& (0+255),w,b
 50067  00FF96  25AD               	addwf	(??_fat_modify_file+4)& (0+255),w,b
 50068  00FF98  6FB1               	movwf	(??_fat_modify_file+8)& (0+255),b
 50069  00FF9A  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 50070  00FF9C  21AE               	addwfc	(??_fat_modify_file+5)& (0+255),w,b
 50071  00FF9E  6FB2               	movwf	(??_fat_modify_file+9)& (0+255),b
 50072  00FFA0  0E00               	movlw	0
 50073  00FFA2  21AF               	addwfc	(??_fat_modify_file+6)& (0+255),w,b
 50074  00FFA4  6FB3               	movwf	(??_fat_modify_file+10)& (0+255),b
 50075  00FFA6  0E00               	movlw	0
 50076  00FFA8  21B0               	addwfc	(??_fat_modify_file+7)& (0+255),w,b
 50077  00FFAA  6FB4               	movwf	(??_fat_modify_file+11)& (0+255),b
 50078  00FFAC  51A9               	movf	??_fat_modify_file& (0+255),w,b
 50079  00FFAE  5DB1               	subwf	(??_fat_modify_file+8)& (0+255),w,b
 50080  00FFB0  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 50081  00FFB2  59B2               	subwfb	(??_fat_modify_file+9)& (0+255),w,b
 50082  00FFB4  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 50083  00FFB6  59B3               	subwfb	(??_fat_modify_file+10)& (0+255),w,b
 50084  00FFB8  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 50085  00FFBA  59B4               	subwfb	(??_fat_modify_file+11)& (0+255),w,b
 50086  00FFBC  B0D8               	btfsc	status,0,c
 50087  00FFBE  D00E               	goto	l2957
 50088                           
 50089                           ; BSR set to: 0
 50090                           ;fat16.c: 1021: {;fat16.c: 1022: number_of_bytes = length - position;
 50091  00FFC0  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 50092  00FFC4  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 50093  00FFC8  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 50094  00FFCA  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 50095  00FFCC  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 50096  00FFCE  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 50097  00FFD0  51A5               	movf	fat_modify_file@length& (0+255),w,b
 50098  00FFD2  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 50099  00FFD4  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 50100  00FFD6  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 50101  00FFD8  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 50102  00FFDA  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 50103  00FFDC                     l2957:
 50104                           
 50105                           ; BSR set to: 0
 50106                           ;fat16.c: 1023: };fat16.c: 1026: flash_partial_write(sector, offset, number_of_bytes, &d
      +                          ata[position]);
 50107                           
 50108                           ; BSR set to: 0
 50109  00FFDC  C0B6  F07F         	movff	fat_modify_file@sector,flash_partial_write@page
 50110  00FFE0  C0B7  F080         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 50111  00FFE4  C0BB  F081         	movff	fat_modify_file@offset,flash_partial_write@start
 50112  00FFE8  C0BC  F082         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 50113  00FFEC  C0BD  F083         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 50114  00FFF0  C0BE  F084         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 50115  00FFF4  51BF               	movf	fat_modify_file@position& (0+255),w,b
 50116  00FFF6  25A7               	addwf	fat_modify_file@data& (0+255),w,b
 50117  00FFF8  6F85               	movwf	flash_partial_write@data& (0+255),b
 50118  00FFFA  51C0               	movf	(fat_modify_file@position+1)& (0+255),w,b
 50119  00FFFC  21A8               	addwfc	(fat_modify_file@data+1)& (0+255),w,b
 50120  00FFFE  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 50121  010000  EC76  F0B7         	call	_flash_partial_write	;wreg free
 50122                           
 50123                           ;fat16.c: 1029: position += number_of_bytes;
 50124  010004  0100               	movlb	0	; () banked
 50125  010006  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 50126  010008  27BF               	addwf	fat_modify_file@position& (0+255),f,b
 50127  01000A  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 50128  01000C  23C0               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 50129  01000E  0E00               	movlw	0
 50130  010010  23C1               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 50131  010012  0E00               	movlw	0
 50132  010014  23C2               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 50133                           
 50134                           ; BSR set to: 0
 50135                           ;fat16.c: 1030: offset += number_of_bytes;
 50136  010016  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 50137  010018  27BB               	addwf	fat_modify_file@offset& (0+255),f,b
 50138  01001A  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 50139  01001C  23BC               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 50140  01001E                     l2954:
 50141                           
 50142                           ; BSR set to: 0
 50143                           
 50144                           ; BSR set to: 0
 50145  01001E  51A5               	movf	fat_modify_file@length& (0+255),w,b
 50146  010020  6FA9               	movwf	??_fat_modify_file& (0+255),b
 50147  010022  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 50148  010024  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 50149  010026  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 50150  010028  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 50151  01002A  51A9               	movf	??_fat_modify_file& (0+255),w,b
 50152  01002C  5DBF               	subwf	fat_modify_file@position& (0+255),w,b
 50153  01002E  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 50154  010030  59C0               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 50155  010032  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 50156  010034  59C1               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 50157  010036  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 50158  010038  59C2               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 50159  01003A  A0D8               	btfss	status,0,c
 50160  01003C  D767               	goto	l2955
 50161                           
 50162                           ; BSR set to: 0
 50163                           ;fat16.c: 1031: };fat16.c: 1033: return 0x00;
 50164                           
 50165                           ; BSR set to: 0
 50166  01003E  0E00               	movlw	0
 50167  010040  0012               	return	
 50168  010042                     __end_of_fat_modify_file:
 50169                           	opt stack 0
 50170                           tosu	equ	0xFFF
 50171                           tosh	equ	0xFFE
 50172                           tosl	equ	0xFFD
 50173                           pclath	equ	0xFFA
 50174                           tblptru	equ	0xFF8
 50175                           tblptrh	equ	0xFF7
 50176                           tblptrl	equ	0xFF6
 50177                           tablat	equ	0xFF5
 50178                           prodh	equ	0xFF4
 50179                           prodl	equ	0xFF3
 50180                           intcon	equ	0xFF2
 50181                           intcon2	equ	0xFF1
 50182                           intcon3	equ	0xFF0
 50183                           indf0	equ	0xFEF
 50184                           postinc0	equ	0xFEE
 50185                           fsr0h	equ	0xFEA
 50186                           fsr0l	equ	0xFE9
 50187                           wreg	equ	0xFE8
 50188                           indf1	equ	0xFE7
 50189                           postinc1	equ	0xFE6
 50190                           postdec1	equ	0xFE5
 50191                           plusw1	equ	0xFE3
 50192                           fsr1h	equ	0xFE2
 50193                           fsr1l	equ	0xFE1
 50194                           indf2	equ	0xFDF
 50195                           postinc2	equ	0xFDE
 50196                           postdec2	equ	0xFDD
 50197                           plusw2	equ	0xFDB
 50198                           fsr2h	equ	0xFDA
 50199                           fsr2l	equ	0xFD9
 50200                           status	equ	0xFD8
 50201                           
 50202 ;; *************** function _flash_partial_write *****************
 50203 ;; Defined at:
 50204 ;;		line 495 in file "flash.c"
 50205 ;; Parameters:    Size  Location     Type
 50206 ;;  page            2   31[BANK0 ] unsigned int 
 50207 ;;  start           2   33[BANK0 ] unsigned int 
 50208 ;;  length          2   35[BANK0 ] unsigned int 
 50209 ;;  data            2   37[BANK0 ] PTR unsigned char 
 50210 ;;		 -> log_write_to_disk@log_entry(32), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(
      +32), 
 50211 ;;		 -> _delete_root@deleted_value(1), ReceivedDataBuffer(64), 
 50212 ;; Auto vars:     Size  Location     Type
 50213 ;;  match           1   39[BANK0 ] enum E7025
 50214 ;; Return value:  Size  Location     Type
 50215 ;;                  1    wreg      void 
 50216 ;; Registers used:
 50217 ;;		wreg, status,2, status,0, cstack
 50218 ;; Tracked objects:
 50219 ;;		On entry : 0/0
 50220 ;;		On exit  : 0/0
 50221 ;;		Unchanged: 0/0
 50222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50223 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50224 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50226 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50227 ;;Total ram usage:        9 bytes
 50228 ;; Hardware stack levels used:    1
 50229 ;; Hardware stack levels required when called:   14
 50230 ;; This function calls:
 50231 ;;		__flash_compare_page_to_buffer
 50232 ;;		__flash_copy_page_to_buffer
 50233 ;;		__flash_is_busy
 50234 ;;		__flash_write_page_from_buffer
 50235 ;;		__flash_write_to_buffer
 50236 ;;		_spi_set_configuration
 50237 ;; This function is called by:
 50238 ;;		__write_root
 50239 ;;		__delete_root
 50240 ;;		_fat_modify_file
 50241 ;; This function uses a non-reentrant model
 50242 ;;
 50243                           
 50244                           	psect	text235
 50245  016EEC                     __ptext235:
 50246                           	opt stack 0
 50247  016EEC                     _flash_partial_write:
 50248                           	opt stack 10
 50249                           
 50250                           ;flash.c: 497: flashMatchResult_t match;;flash.c: 500: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 50251                           
 50252                           ; BSR set to: 0
 50253                           ;incstack = 0
 50254  016EEC  0E00               	movlw	0
 50255  016EEE  ECBD  F098         	call	_spi_set_configuration
 50256  016EF2  EC4F  F0C6         	call	__flash_is_busy	;wreg free
 50257  016EF6  0900               	iorlw	0
 50258  016EF8  A4D8               	btfss	status,2,c
 50259  016EFA  D7FB               	goto	l2669
 50260                           
 50261                           ;flash.c: 506: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 50262  016EFC  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 50263  016F00  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 50264  016F04  0E00               	movlw	0
 50265  016F06  0100               	movlb	0	; () banked
 50266  016F08  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 50267  016F0A  EC65  F0BC         	call	__flash_copy_page_to_buffer	;wreg free
 50268                           
 50269                           ;flash.c: 509: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 50270  016F0E  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 50271  016F12  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 50272  016F16  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 50273  016F1A  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 50274  016F1E  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 50275  016F22  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 50276  016F26  0E00               	movlw	0
 50277  016F28  0100               	movlb	0	; () banked
 50278  016F2A  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 50279  016F2C  EC13  F0BF         	call	__flash_write_to_buffer	;wreg free
 50280                           
 50281                           ;flash.c: 512: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 50282  016F30  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 50283  016F34  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 50284  016F38  0E00               	movlw	0
 50285  016F3A  0100               	movlb	0	; () banked
 50286  016F3C  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 50287  016F3E  EC44  F0B6         	call	__flash_compare_page_to_buffer	;wreg free
 50288  016F42  0100               	movlb	0	; () banked
 50289  016F44  6F87               	movwf	flash_partial_write@match& (0+255),b
 50290                           
 50291                           ; BSR set to: 0
 50292                           ;flash.c: 515: if(match==DATA_DOES_NOT_MATCH)
 50293  016F46  0587               	decf	flash_partial_write@match& (0+255),w,b
 50294  016F48  A4D8               	btfss	status,2,c
 50295  016F4A  D008               	goto	l2671
 50296                           
 50297                           ; BSR set to: 0
 50298                           ;flash.c: 516: {;flash.c: 517: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 50299  016F4C  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 50300  016F50  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 50301  016F54  0E00               	movlw	0
 50302  016F56  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 50303  016F58  EC38  F0BC         	call	__flash_write_page_from_buffer	;wreg free
 50304  016F5C                     l2671:
 50305                           
 50306                           ;flash.c: 518: };flash.c: 521: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 50307  016F5C  0E01               	movlw	1
 50308  016F5E  ECBD  F098         	call	_spi_set_configuration
 50309  016F62  0012               	return		;funcret
 50310  016F64                     __end_of_flash_partial_write:
 50311                           	opt stack 0
 50312                           tosu	equ	0xFFF
 50313                           tosh	equ	0xFFE
 50314                           tosl	equ	0xFFD
 50315                           pclath	equ	0xFFA
 50316                           tblptru	equ	0xFF8
 50317                           tblptrh	equ	0xFF7
 50318                           tblptrl	equ	0xFF6
 50319                           tablat	equ	0xFF5
 50320                           prodh	equ	0xFF4
 50321                           prodl	equ	0xFF3
 50322                           intcon	equ	0xFF2
 50323                           intcon2	equ	0xFF1
 50324                           intcon3	equ	0xFF0
 50325                           indf0	equ	0xFEF
 50326                           postinc0	equ	0xFEE
 50327                           fsr0h	equ	0xFEA
 50328                           fsr0l	equ	0xFE9
 50329                           wreg	equ	0xFE8
 50330                           indf1	equ	0xFE7
 50331                           postinc1	equ	0xFE6
 50332                           postdec1	equ	0xFE5
 50333                           plusw1	equ	0xFE3
 50334                           fsr1h	equ	0xFE2
 50335                           fsr1l	equ	0xFE1
 50336                           indf2	equ	0xFDF
 50337                           postinc2	equ	0xFDE
 50338                           postdec2	equ	0xFDD
 50339                           plusw2	equ	0xFDB
 50340                           fsr2h	equ	0xFDA
 50341                           fsr2l	equ	0xFD9
 50342                           status	equ	0xFD8
 50343                           
 50344 ;; *************** function __flash_write_to_buffer *****************
 50345 ;; Defined at:
 50346 ;;		line 236 in file "flash.c"
 50347 ;; Parameters:    Size  Location     Type
 50348 ;;  start           2   19[BANK0 ] unsigned int 
 50349 ;;  data            2   21[BANK0 ] PTR unsigned char 
 50350 ;;		 -> log_write_to_disk@log_entry(32), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(
      +32), 
 50351 ;;		 -> _delete_root@deleted_value(1), buffer(512), ReceivedDataBuffer(64), msd_buffer(512), 
 50352 ;;  data_length     2   23[BANK0 ] unsigned int 
 50353 ;;  buffer          1   25[BANK0 ] enum E7021
 50354 ;; Auto vars:     Size  Location     Type
 50355 ;;  command         4   26[BANK0 ] unsigned char [4]
 50356 ;; Return value:  Size  Location     Type
 50357 ;;                  1    wreg      void 
 50358 ;; Registers used:
 50359 ;;		wreg, status,2, status,0, cstack
 50360 ;; Tracked objects:
 50361 ;;		On entry : 0/0
 50362 ;;		On exit  : 0/0
 50363 ;;		Unchanged: 0/0
 50364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50365 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50366 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50368 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50369 ;;Total ram usage:       11 bytes
 50370 ;; Hardware stack levels used:    1
 50371 ;; Hardware stack levels required when called:   13
 50372 ;; This function calls:
 50373 ;;		__flash_is_busy
 50374 ;;		_spi_tx_tx
 50375 ;; This function is called by:
 50376 ;;		_flash_sector_write
 50377 ;;		_flash_partial_write
 50378 ;;		_flash_write_to_buffer
 50379 ;; This function uses a non-reentrant model
 50380 ;;
 50381                           
 50382                           	psect	text236
 50383  017E26                     __ptext236:
 50384                           	opt stack 0
 50385  017E26                     __flash_write_to_buffer:
 50386                           	opt stack 10
 50387                           
 50388                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 50389                           
 50390                           ;incstack = 0
 50391  017E26  EC4F  F0C6         	call	__flash_is_busy	;wreg free
 50392  017E2A  0900               	iorlw	0
 50393  017E2C  A4D8               	btfss	status,2,c
 50394  017E2E  D7FB               	goto	__flash_write_to_buffer
 50395                           
 50396                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 50397  017E30  0100               	movlb	0	; () banked
 50398  017E32  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 50399  017E34  A4D8               	btfss	status,2,c
 50400  017E36  D002               	goto	l2602
 50401                           
 50402                           ; BSR set to: 0
 50403                           ;flash.c: 245: command[0] = 0x84;
 50404  017E38  0E84               	movlw	132
 50405  017E3A  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 50406  017E3C                     l2602:
 50407                           
 50408                           ; BSR set to: 0
 50409                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 50410                           
 50411                           ; BSR set to: 0
 50412  017E3C  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 50413  017E3E  A4D8               	btfss	status,2,c
 50414  017E40  D002               	goto	l2603
 50415                           
 50416                           ; BSR set to: 0
 50417                           ;flash.c: 247: command[0] = 0x87;
 50418  017E42  0E87               	movlw	135
 50419  017E44  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 50420  017E46                     l2603:
 50421                           
 50422                           ; BSR set to: 0
 50423                           ;flash.c: 249: command[1] = 0x00;
 50424  017E46  0E00               	movlw	0
 50425  017E48  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 50426                           
 50427                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 50428  017E4A  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 50429  017E4C  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 50430                           
 50431                           ; BSR set to: 0
 50432                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 50433  017E4E  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 50434                           
 50435                           ; BSR set to: 0
 50436                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 50437  017E52  0E7A               	movlw	low __flash_write_to_buffer@command
 50438  017E54  6F60               	movwf	spi_tx_tx@command& (0+255),b
 50439  017E56  0E00               	movlw	high __flash_write_to_buffer@command
 50440  017E58  6F61               	movwf	(spi_tx_tx@command+1)& (0+255),b
 50441  017E5A  0E00               	movlw	0
 50442  017E5C  6F63               	movwf	(spi_tx_tx@command_length+1)& (0+255),b
 50443  017E5E  0E04               	movlw	4
 50444  017E60  6F62               	movwf	spi_tx_tx@command_length& (0+255),b
 50445  017E62  C075  F064         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 50446  017E66  C076  F065         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 50447  017E6A  C077  F066         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 50448  017E6E  C078  F067         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 50449  017E72  EC64  F0B3         	call	_spi_tx_tx	;wreg free
 50450  017E76  0012               	return		;funcret
 50451  017E78                     __end_of__flash_write_to_buffer:
 50452                           	opt stack 0
 50453                           tosu	equ	0xFFF
 50454                           tosh	equ	0xFFE
 50455                           tosl	equ	0xFFD
 50456                           pclath	equ	0xFFA
 50457                           tblptru	equ	0xFF8
 50458                           tblptrh	equ	0xFF7
 50459                           tblptrl	equ	0xFF6
 50460                           tablat	equ	0xFF5
 50461                           prodh	equ	0xFF4
 50462                           prodl	equ	0xFF3
 50463                           intcon	equ	0xFF2
 50464                           intcon2	equ	0xFF1
 50465                           intcon3	equ	0xFF0
 50466                           indf0	equ	0xFEF
 50467                           postinc0	equ	0xFEE
 50468                           fsr0h	equ	0xFEA
 50469                           fsr0l	equ	0xFE9
 50470                           wreg	equ	0xFE8
 50471                           indf1	equ	0xFE7
 50472                           postinc1	equ	0xFE6
 50473                           postdec1	equ	0xFE5
 50474                           plusw1	equ	0xFE3
 50475                           fsr1h	equ	0xFE2
 50476                           fsr1l	equ	0xFE1
 50477                           indf2	equ	0xFDF
 50478                           postinc2	equ	0xFDE
 50479                           postdec2	equ	0xFDD
 50480                           plusw2	equ	0xFDB
 50481                           fsr2h	equ	0xFDA
 50482                           fsr2l	equ	0xFD9
 50483                           status	equ	0xFD8
 50484                           
 50485 ;; *************** function _spi_tx_tx *****************
 50486 ;; Defined at:
 50487 ;;		line 387 in file "spi.c"
 50488 ;; Parameters:    Size  Location     Type
 50489 ;;  command         2    0[BANK0 ] PTR unsigned char 
 50490 ;;		 -> _flash_write_to_buffer@command(4), 
 50491 ;;  command_leng    2    2[BANK0 ] unsigned int 
 50492 ;;  data            2    4[BANK0 ] PTR unsigned char 
 50493 ;;		 -> log_write_to_disk@log_entry(32), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(
      +32), 
 50494 ;;		 -> _delete_root@deleted_value(1), buffer(512), ReceivedDataBuffer(64), msd_buffer(512), 
 50495 ;;  data_length     2    6[BANK0 ] unsigned int 
 50496 ;; Auto vars:     Size  Location     Type
 50497 ;;		None
 50498 ;; Return value:  Size  Location     Type
 50499 ;;                  1    wreg      void 
 50500 ;; Registers used:
 50501 ;;		wreg, status,2, status,0
 50502 ;; Tracked objects:
 50503 ;;		On entry : 0/0
 50504 ;;		On exit  : 0/0
 50505 ;;		Unchanged: 0/0
 50506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50507 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50509 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50510 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50511 ;;Total ram usage:       12 bytes
 50512 ;; Hardware stack levels used:    1
 50513 ;; Hardware stack levels required when called:   10
 50514 ;; This function calls:
 50515 ;;		Nothing
 50516 ;; This function is called by:
 50517 ;;		__flash_write_to_buffer
 50518 ;; This function uses a non-reentrant model
 50519 ;;
 50520                           
 50521                           	psect	text237
 50522  0166C8                     __ptext237:
 50523                           	opt stack 0
 50524  0166C8                     _spi_tx_tx:
 50525                           	opt stack 12
 50526                           
 50527                           ;spi.c: 390: DMACON1bits.SSCON1 = 0;
 50528                           
 50529                           ;incstack = 0
 50530  0166C8  9E88               	bcf	3976,7,c	;volatile
 50531                           
 50532                           ;spi.c: 391: DMACON1bits.SSCON0 = 0;
 50533  0166CA  9C88               	bcf	3976,6,c	;volatile
 50534                           
 50535                           ;spi.c: 393: DMACON1bits.TXINC = 1;
 50536  0166CC  8A88               	bsf	3976,5,c	;volatile
 50537                           
 50538                           ;spi.c: 395: DMACON1bits.RXINC = 0;
 50539  0166CE  9888               	bcf	3976,4,c	;volatile
 50540                           
 50541                           ;spi.c: 397: DMACON1bits.DUPLEX1 = 0;
 50542  0166D0  9688               	bcf	3976,3,c	;volatile
 50543                           
 50544                           ;spi.c: 398: DMACON1bits.DUPLEX0 = 1;
 50545  0166D2  8488               	bsf	3976,2,c	;volatile
 50546                           
 50547                           ;spi.c: 400: DMACON1bits.DLYINTEN = 0;
 50548  0166D4  9288               	bcf	3976,1,c	;volatile
 50549                           
 50550                           ;spi.c: 402: DMACON2bits.DLYCYC = 0b0000;
 50551  0166D6  9886               	bcf	3974,4,c	;volatile
 50552  0166D8  9A86               	bcf	3974,5,c	;volatile
 50553  0166DA  9C86               	bcf	3974,6,c	;volatile
 50554  0166DC  9E86               	bcf	3974,7,c	;volatile
 50555                           
 50556                           ;spi.c: 404: DMACON2bits.INTLVL = 0b0000;
 50557  0166DE  9086               	bcf	3974,0,c	;volatile
 50558  0166E0  9286               	bcf	3974,1,c	;volatile
 50559  0166E2  9486               	bcf	3974,2,c	;volatile
 50560  0166E4  9686               	bcf	3974,3,c	;volatile
 50561                           
 50562                           ;spi.c: 407: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 50563  0166E6  0100               	movlb	0	; () banked
 50564  0166E8  5161               	movf	(spi_tx_tx@command+1)& (0+255),w,b
 50565  0166EA  6E6A               	movwf	3946,c	;volatile
 50566                           
 50567                           ; BSR set to: 0
 50568                           ;spi.c: 408: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 50569  0166EC  C060  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 50570                           
 50571                           ; BSR set to: 0
 50572                           ;spi.c: 411: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 50573  0166F0  0EFF               	movlw	255
 50574  0166F2  6F68               	movwf	??_spi_tx_tx& (0+255),b
 50575  0166F4  0EFF               	movlw	255
 50576  0166F6  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 50577  0166F8  C062  F06A         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 50578  0166FC  C063  F06B         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 50579  016700  5168               	movf	??_spi_tx_tx& (0+255),w,b
 50580  016702  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 50581  016704  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 50582  016706  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 50583  016708  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 50584  01670C  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 50585  01670E  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 50586  016710  6E66               	movwf	3942,c	;volatile
 50587                           
 50588                           ; BSR set to: 0
 50589                           ;spi.c: 412: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 50590  016712  0562               	decf	spi_tx_tx@command_length& (0+255),w,b
 50591  016714  6E67               	movwf	3943,c	;volatile
 50592                           
 50593                           ; BSR set to: 0
 50594                           ;spi.c: 415: LATDbits.LD7 = 0;
 50595  016716  9E8C               	bcf	3980,7,c	;volatile
 50596                           
 50597                           ; BSR set to: 0
 50598                           ;spi.c: 418: DMACON1bits.DMAEN = 1;
 50599  016718  8088               	bsf	3976,0,c	;volatile
 50600  01671A                     
 50601                           ; BSR set to: 0
 50602  01671A  B088               	btfsc	3976,0,c	;volatile
 50603  01671C  D7FE               	goto	l3356
 50604                           
 50605                           ;spi.c: 422: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 50606  01671E  0100               	movlb	0	; () banked
 50607  016720  5165               	movf	(spi_tx_tx@data+1)& (0+255),w,b
 50608  016722  6E6A               	movwf	3946,c	;volatile
 50609                           
 50610                           ; BSR set to: 0
 50611                           ;spi.c: 423: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 50612  016724  C064  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 50613                           
 50614                           ; BSR set to: 0
 50615                           ;spi.c: 426: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 50616  016728  0EFF               	movlw	255
 50617  01672A  6F68               	movwf	??_spi_tx_tx& (0+255),b
 50618  01672C  0EFF               	movlw	255
 50619  01672E  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 50620  016730  C066  F06A         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 50621  016734  C067  F06B         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 50622  016738  5168               	movf	??_spi_tx_tx& (0+255),w,b
 50623  01673A  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 50624  01673C  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 50625  01673E  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 50626  016740  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 50627  016744  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 50628  016746  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 50629  016748  6E66               	movwf	3942,c	;volatile
 50630                           
 50631                           ; BSR set to: 0
 50632                           ;spi.c: 427: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 50633  01674A  0566               	decf	spi_tx_tx@data_length& (0+255),w,b
 50634  01674C  6E67               	movwf	3943,c	;volatile
 50635                           
 50636                           ; BSR set to: 0
 50637                           ;spi.c: 430: DMACON1bits.DMAEN = 1;
 50638  01674E  8088               	bsf	3976,0,c	;volatile
 50639  016750                     
 50640                           ; BSR set to: 0
 50641  016750  B088               	btfsc	3976,0,c	;volatile
 50642  016752  D7FE               	goto	l3359
 50643                           
 50644                           ;spi.c: 434: LATDbits.LD7 = 1;
 50645  016754  8E8C               	bsf	3980,7,c	;volatile
 50646  016756  0012               	return		;funcret
 50647  016758                     __end_of_spi_tx_tx:
 50648                           	opt stack 0
 50649                           tosu	equ	0xFFF
 50650                           tosh	equ	0xFFE
 50651                           tosl	equ	0xFFD
 50652                           pclath	equ	0xFFA
 50653                           tblptru	equ	0xFF8
 50654                           tblptrh	equ	0xFF7
 50655                           tblptrl	equ	0xFF6
 50656                           tablat	equ	0xFF5
 50657                           prodh	equ	0xFF4
 50658                           prodl	equ	0xFF3
 50659                           intcon	equ	0xFF2
 50660                           intcon2	equ	0xFF1
 50661                           intcon3	equ	0xFF0
 50662                           indf0	equ	0xFEF
 50663                           postinc0	equ	0xFEE
 50664                           fsr0h	equ	0xFEA
 50665                           fsr0l	equ	0xFE9
 50666                           wreg	equ	0xFE8
 50667                           indf1	equ	0xFE7
 50668                           postinc1	equ	0xFE6
 50669                           postdec1	equ	0xFE5
 50670                           plusw1	equ	0xFE3
 50671                           fsr1h	equ	0xFE2
 50672                           fsr1l	equ	0xFE1
 50673                           indf2	equ	0xFDF
 50674                           postinc2	equ	0xFDE
 50675                           postdec2	equ	0xFDD
 50676                           plusw2	equ	0xFDB
 50677                           fsr2h	equ	0xFDA
 50678                           fsr2l	equ	0xFD9
 50679                           status	equ	0xFD8
 50680                           
 50681 ;; *************** function __flash_write_page_from_buffer *****************
 50682 ;; Defined at:
 50683 ;;		line 258 in file "flash.c"
 50684 ;; Parameters:    Size  Location     Type
 50685 ;;  page            2   19[BANK0 ] unsigned int 
 50686 ;;  buffer          1   21[BANK0 ] enum E7021
 50687 ;; Auto vars:     Size  Location     Type
 50688 ;;  command         4   25[BANK0 ] unsigned char [4]
 50689 ;; Return value:  Size  Location     Type
 50690 ;;                  1    wreg      void 
 50691 ;; Registers used:
 50692 ;;		wreg, status,2, status,0, cstack
 50693 ;; Tracked objects:
 50694 ;;		On entry : 0/0
 50695 ;;		On exit  : 0/0
 50696 ;;		Unchanged: 0/0
 50697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50698 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50699 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50700 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50701 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50702 ;;Total ram usage:       10 bytes
 50703 ;; Hardware stack levels used:    1
 50704 ;; Hardware stack levels required when called:   13
 50705 ;; This function calls:
 50706 ;;		__flash_is_busy
 50707 ;;		_spi_tx
 50708 ;; This function is called by:
 50709 ;;		_flash_sector_write
 50710 ;;		_flash_partial_write
 50711 ;;		_flash_write_page_from_buffer
 50712 ;; This function uses a non-reentrant model
 50713 ;;
 50714                           
 50715                           	psect	text238
 50716  017870                     __ptext238:
 50717                           	opt stack 0
 50718  017870                     __flash_write_page_from_buffer:
 50719                           	opt stack 10
 50720                           
 50721                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 50722                           
 50723                           ;incstack = 0
 50724  017870  EC4F  F0C6         	call	__flash_is_busy	;wreg free
 50725  017874  0900               	iorlw	0
 50726  017876  A4D8               	btfss	status,2,c
 50727  017878  D7FB               	goto	__flash_write_page_from_buffer
 50728                           
 50729                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 50730  01787A  0100               	movlb	0	; () banked
 50731  01787C  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 50732  01787E  A4D8               	btfss	status,2,c
 50733  017880  D002               	goto	l2610
 50734                           
 50735                           ; BSR set to: 0
 50736                           ;flash.c: 267: command[0] = 0x83;
 50737  017882  0E83               	movlw	131
 50738  017884  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 50739  017886                     l2610:
 50740                           
 50741                           ; BSR set to: 0
 50742                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 50743                           
 50744                           ; BSR set to: 0
 50745  017886  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 50746  017888  A4D8               	btfss	status,2,c
 50747  01788A  D002               	goto	l2611
 50748                           
 50749                           ; BSR set to: 0
 50750                           ;flash.c: 269: command[0] = 0x86;
 50751  01788C  0E86               	movlw	134
 50752  01788E  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 50753  017890                     l2611:
 50754                           
 50755                           ; BSR set to: 0
 50756                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 50757                           
 50758                           ; BSR set to: 0
 50759  017890  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 50760  017894  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 50761  017898  0E07               	movlw	7
 50762  01789A  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 50763  01789C                     u19675:
 50764  01789C  90D8               	bcf	status,0,c
 50765  01789E  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 50766  0178A0  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 50767  0178A2  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 50768  0178A4  D7FB               	goto	u19675
 50769  0178A6  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 50770  0178A8  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 50771                           
 50772                           ; BSR set to: 0
 50773                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 50774  0178AA  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 50775  0178AC  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 50776  0178AE  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 50777                           
 50778                           ;flash.c: 273: command[3] = 0x00;
 50779  0178B0  0E00               	movlw	0
 50780  0178B2  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 50781                           
 50782                           ; BSR set to: 0
 50783                           ;flash.c: 276: spi_tx(command, 4);
 50784  0178B4  0E79               	movlw	low __flash_write_page_from_buffer@command
 50785  0178B6  6F60               	movwf	spi_tx@data& (0+255),b
 50786  0178B8  0E00               	movlw	high __flash_write_page_from_buffer@command
 50787  0178BA  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 50788  0178BC  0E00               	movlw	0
 50789  0178BE  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 50790  0178C0  0E04               	movlw	4
 50791  0178C2  6F62               	movwf	spi_tx@length& (0+255),b
 50792  0178C4  EC92  F0BC         	call	_spi_tx	;wreg free
 50793  0178C8  0012               	return		;funcret
 50794  0178CA                     __end_of__flash_write_page_from_buffer:
 50795                           	opt stack 0
 50796                           tosu	equ	0xFFF
 50797                           tosh	equ	0xFFE
 50798                           tosl	equ	0xFFD
 50799                           pclath	equ	0xFFA
 50800                           tblptru	equ	0xFF8
 50801                           tblptrh	equ	0xFF7
 50802                           tblptrl	equ	0xFF6
 50803                           tablat	equ	0xFF5
 50804                           prodh	equ	0xFF4
 50805                           prodl	equ	0xFF3
 50806                           intcon	equ	0xFF2
 50807                           intcon2	equ	0xFF1
 50808                           intcon3	equ	0xFF0
 50809                           indf0	equ	0xFEF
 50810                           postinc0	equ	0xFEE
 50811                           fsr0h	equ	0xFEA
 50812                           fsr0l	equ	0xFE9
 50813                           wreg	equ	0xFE8
 50814                           indf1	equ	0xFE7
 50815                           postinc1	equ	0xFE6
 50816                           postdec1	equ	0xFE5
 50817                           plusw1	equ	0xFE3
 50818                           fsr1h	equ	0xFE2
 50819                           fsr1l	equ	0xFE1
 50820                           indf2	equ	0xFDF
 50821                           postinc2	equ	0xFDE
 50822                           postdec2	equ	0xFDD
 50823                           plusw2	equ	0xFDB
 50824                           fsr2h	equ	0xFDA
 50825                           fsr2l	equ	0xFD9
 50826                           status	equ	0xFD8
 50827                           
 50828 ;; *************** function __flash_copy_page_to_buffer *****************
 50829 ;; Defined at:
 50830 ;;		line 154 in file "flash.c"
 50831 ;; Parameters:    Size  Location     Type
 50832 ;;  page            2   19[BANK0 ] unsigned int 
 50833 ;;  buffer          1   21[BANK0 ] enum E7021
 50834 ;; Auto vars:     Size  Location     Type
 50835 ;;  command         4   25[BANK0 ] unsigned char [4]
 50836 ;; Return value:  Size  Location     Type
 50837 ;;                  1    wreg      void 
 50838 ;; Registers used:
 50839 ;;		wreg, status,2, status,0, cstack
 50840 ;; Tracked objects:
 50841 ;;		On entry : 0/0
 50842 ;;		On exit  : 0/0
 50843 ;;		Unchanged: 0/0
 50844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50845 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50846 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50847 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50848 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50849 ;;Total ram usage:       10 bytes
 50850 ;; Hardware stack levels used:    1
 50851 ;; Hardware stack levels required when called:   13
 50852 ;; This function calls:
 50853 ;;		__flash_is_busy
 50854 ;;		_spi_tx
 50855 ;; This function is called by:
 50856 ;;		_flash_partial_write
 50857 ;;		_flash_copy_page_to_buffer
 50858 ;; This function uses a non-reentrant model
 50859 ;;
 50860                           
 50861                           	psect	text239
 50862  0178CA                     __ptext239:
 50863                           	opt stack 0
 50864  0178CA                     __flash_copy_page_to_buffer:
 50865                           	opt stack 11
 50866                           
 50867                           ;flash.c: 156: uint8_t command[4];;flash.c: 159: while(_flash_is_busy());
 50868                           
 50869                           ;incstack = 0
 50870  0178CA  EC4F  F0C6         	call	__flash_is_busy	;wreg free
 50871  0178CE  0900               	iorlw	0
 50872  0178D0  A4D8               	btfss	status,2,c
 50873  0178D2  D7FB               	goto	__flash_copy_page_to_buffer
 50874                           
 50875                           ;flash.c: 162: if(buffer==FLASH_BUFFER_1)
 50876  0178D4  0100               	movlb	0	; () banked
 50877  0178D6  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 50878  0178D8  A4D8               	btfss	status,2,c
 50879  0178DA  D002               	goto	l2575
 50880                           
 50881                           ; BSR set to: 0
 50882                           ;flash.c: 163: command[0] = 0x53;
 50883  0178DC  0E53               	movlw	83
 50884  0178DE  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 50885  0178E0                     l2575:
 50886                           
 50887                           ; BSR set to: 0
 50888                           ;flash.c: 164: if(buffer==FLASH_BUFFER_2)
 50889                           
 50890                           ; BSR set to: 0
 50891  0178E0  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 50892  0178E2  A4D8               	btfss	status,2,c
 50893  0178E4  D002               	goto	l2576
 50894                           
 50895                           ; BSR set to: 0
 50896                           ;flash.c: 165: command[0] = 0x55;
 50897  0178E6  0E55               	movlw	85
 50898  0178E8  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 50899  0178EA                     l2576:
 50900                           
 50901                           ; BSR set to: 0
 50902                           ;flash.c: 167: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 50903                           
 50904                           ; BSR set to: 0
 50905  0178EA  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 50906  0178EE  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 50907  0178F2  0E07               	movlw	7
 50908  0178F4  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 50909  0178F6                     u19545:
 50910  0178F6  90D8               	bcf	status,0,c
 50911  0178F8  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 50912  0178FA  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 50913  0178FC  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 50914  0178FE  D7FB               	goto	u19545
 50915  017900  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 50916  017902  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 50917                           
 50918                           ; BSR set to: 0
 50919                           ;flash.c: 168: command[2] = ((unsigned char)((page<<1)&0xFF));
 50920  017904  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 50921  017906  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 50922  017908  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 50923                           
 50924                           ;flash.c: 169: command[3] = 0x00;
 50925  01790A  0E00               	movlw	0
 50926  01790C  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 50927                           
 50928                           ; BSR set to: 0
 50929                           ;flash.c: 172: spi_tx(command, 4);
 50930  01790E  0E79               	movlw	low __flash_copy_page_to_buffer@command
 50931  017910  6F60               	movwf	spi_tx@data& (0+255),b
 50932  017912  0E00               	movlw	high __flash_copy_page_to_buffer@command
 50933  017914  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 50934  017916  0E00               	movlw	0
 50935  017918  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 50936  01791A  0E04               	movlw	4
 50937  01791C  6F62               	movwf	spi_tx@length& (0+255),b
 50938  01791E  EC92  F0BC         	call	_spi_tx	;wreg free
 50939  017922  0012               	return		;funcret
 50940  017924                     __end_of__flash_copy_page_to_buffer:
 50941                           	opt stack 0
 50942                           tosu	equ	0xFFF
 50943                           tosh	equ	0xFFE
 50944                           tosl	equ	0xFFD
 50945                           pclath	equ	0xFFA
 50946                           tblptru	equ	0xFF8
 50947                           tblptrh	equ	0xFF7
 50948                           tblptrl	equ	0xFF6
 50949                           tablat	equ	0xFF5
 50950                           prodh	equ	0xFF4
 50951                           prodl	equ	0xFF3
 50952                           intcon	equ	0xFF2
 50953                           intcon2	equ	0xFF1
 50954                           intcon3	equ	0xFF0
 50955                           indf0	equ	0xFEF
 50956                           postinc0	equ	0xFEE
 50957                           fsr0h	equ	0xFEA
 50958                           fsr0l	equ	0xFE9
 50959                           wreg	equ	0xFE8
 50960                           indf1	equ	0xFE7
 50961                           postinc1	equ	0xFE6
 50962                           postdec1	equ	0xFE5
 50963                           plusw1	equ	0xFE3
 50964                           fsr1h	equ	0xFE2
 50965                           fsr1l	equ	0xFE1
 50966                           indf2	equ	0xFDF
 50967                           postinc2	equ	0xFDE
 50968                           postdec2	equ	0xFDD
 50969                           plusw2	equ	0xFDB
 50970                           fsr2h	equ	0xFDA
 50971                           fsr2l	equ	0xFD9
 50972                           status	equ	0xFD8
 50973                           
 50974 ;; *************** function __flash_compare_page_to_buffer *****************
 50975 ;; Defined at:
 50976 ;;		line 176 in file "flash.c"
 50977 ;; Parameters:    Size  Location     Type
 50978 ;;  page            2   19[BANK0 ] unsigned int 
 50979 ;;  buffer          1   21[BANK0 ] enum E7021
 50980 ;; Auto vars:     Size  Location     Type
 50981 ;;  command         4   27[BANK0 ] unsigned char [4]
 50982 ;;  status          2   25[BANK0 ] unsigned int 
 50983 ;; Return value:  Size  Location     Type
 50984 ;;                  1    wreg      enum E7025
 50985 ;; Registers used:
 50986 ;;		wreg, status,2, status,0, cstack
 50987 ;; Tracked objects:
 50988 ;;		On entry : 0/0
 50989 ;;		On exit  : 0/0
 50990 ;;		Unchanged: 0/0
 50991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50992 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50993 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50994 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50995 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50996 ;;Total ram usage:       12 bytes
 50997 ;; Hardware stack levels used:    1
 50998 ;; Hardware stack levels required when called:   13
 50999 ;; This function calls:
 51000 ;;		__flash_get_status
 51001 ;;		__flash_is_busy
 51002 ;;		_spi_tx
 51003 ;; This function is called by:
 51004 ;;		_flash_sector_write
 51005 ;;		_flash_partial_write
 51006 ;; This function uses a non-reentrant model
 51007 ;;
 51008                           
 51009                           	psect	text240
 51010  016C88                     __ptext240:
 51011                           	opt stack 0
 51012  016C88                     __flash_compare_page_to_buffer:
 51013                           	opt stack 10
 51014                           
 51015                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 51016                           
 51017                           ;incstack = 0
 51018  016C88  EC4F  F0C6         	call	__flash_is_busy	;wreg free
 51019  016C8C  0900               	iorlw	0
 51020  016C8E  A4D8               	btfss	status,2,c
 51021  016C90  D7FB               	goto	__flash_compare_page_to_buffer
 51022                           
 51023                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 51024  016C92  0100               	movlb	0	; () banked
 51025  016C94  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 51026  016C96  A4D8               	btfss	status,2,c
 51027  016C98  D002               	goto	l2583
 51028                           
 51029                           ; BSR set to: 0
 51030                           ;flash.c: 186: command[0] = 0x60;
 51031  016C9A  0E60               	movlw	96
 51032  016C9C  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 51033  016C9E                     l2583:
 51034                           
 51035                           ; BSR set to: 0
 51036                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 51037                           
 51038                           ; BSR set to: 0
 51039  016C9E  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 51040  016CA0  A4D8               	btfss	status,2,c
 51041  016CA2  D002               	goto	l2584
 51042                           
 51043                           ; BSR set to: 0
 51044                           ;flash.c: 188: command[0] = 0x60;
 51045  016CA4  0E60               	movlw	96
 51046  016CA6  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 51047  016CA8                     l2584:
 51048                           
 51049                           ; BSR set to: 0
 51050                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 51051                           
 51052                           ; BSR set to: 0
 51053  016CA8  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 51054  016CAC  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 51055  016CB0  0E07               	movlw	7
 51056  016CB2  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 51057  016CB4                     u19585:
 51058  016CB4  90D8               	bcf	status,0,c
 51059  016CB6  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 51060  016CB8  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 51061  016CBA  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 51062  016CBC  D7FB               	goto	u19585
 51063  016CBE  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 51064  016CC0  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 51065                           
 51066                           ; BSR set to: 0
 51067                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 51068  016CC2  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 51069  016CC4  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 51070  016CC6  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 51071                           
 51072                           ;flash.c: 192: command[3] = 0x00;
 51073  016CC8  0E00               	movlw	0
 51074  016CCA  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 51075                           
 51076                           ; BSR set to: 0
 51077                           ;flash.c: 195: spi_tx(command, 4);
 51078  016CCC  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 51079  016CCE  6F60               	movwf	spi_tx@data& (0+255),b
 51080  016CD0  0E00               	movlw	high __flash_compare_page_to_buffer@command
 51081  016CD2  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 51082  016CD4  0E00               	movlw	0
 51083  016CD6  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 51084  016CD8  0E04               	movlw	4
 51085  016CDA  6F62               	movwf	spi_tx@length& (0+255),b
 51086  016CDC  EC92  F0BC         	call	_spi_tx	;wreg free
 51087  016CE0  EC4F  F0C6         	call	__flash_is_busy	;wreg free
 51088  016CE4  0900               	iorlw	0
 51089  016CE6  A4D8               	btfss	status,2,c
 51090  016CE8  D7FB               	goto	l2586
 51091                           
 51092                           ;flash.c: 201: status = _flash_get_status();
 51093  016CEA  ECA0  F0C2         	call	__flash_get_status	;wreg free
 51094  016CEE  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 51095  016CF2  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 51096                           
 51097                           ;flash.c: 204: if(status & 0b0000000001000000)
 51098  016CF6  0100               	movlb	0	; () banked
 51099  016CF8  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 51100  016CFA  D002               	goto	l2588
 51101                           
 51102                           ; BSR set to: 0
 51103                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 51104  016CFC  0E01               	movlw	1
 51105                           
 51106                           ; BSR set to: 0
 51107                           ;flash.c: 208: }
 51108                           
 51109                           ; BSR set to: 0
 51110  016CFE  0012               	return	
 51111  016D00                     l2588:
 51112                           
 51113                           ; BSR set to: 0
 51114                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 51115                           
 51116                           ; BSR set to: 0
 51117  016D00  0E00               	movlw	0
 51118                           
 51119                           ; BSR set to: 0
 51120  016D02  0012               	return	
 51121  016D04                     __end_of__flash_compare_page_to_buffer:
 51122                           	opt stack 0
 51123                           tosu	equ	0xFFF
 51124                           tosh	equ	0xFFE
 51125                           tosl	equ	0xFFD
 51126                           pclath	equ	0xFFA
 51127                           tblptru	equ	0xFF8
 51128                           tblptrh	equ	0xFF7
 51129                           tblptrl	equ	0xFF6
 51130                           tablat	equ	0xFF5
 51131                           prodh	equ	0xFF4
 51132                           prodl	equ	0xFF3
 51133                           intcon	equ	0xFF2
 51134                           intcon2	equ	0xFF1
 51135                           intcon3	equ	0xFF0
 51136                           indf0	equ	0xFEF
 51137                           postinc0	equ	0xFEE
 51138                           fsr0h	equ	0xFEA
 51139                           fsr0l	equ	0xFE9
 51140                           wreg	equ	0xFE8
 51141                           indf1	equ	0xFE7
 51142                           postinc1	equ	0xFE6
 51143                           postdec1	equ	0xFE5
 51144                           plusw1	equ	0xFE3
 51145                           fsr1h	equ	0xFE2
 51146                           fsr1l	equ	0xFE1
 51147                           indf2	equ	0xFDF
 51148                           postinc2	equ	0xFDE
 51149                           postdec2	equ	0xFDD
 51150                           plusw2	equ	0xFDB
 51151                           fsr2h	equ	0xFDA
 51152                           fsr2l	equ	0xFD9
 51153                           status	equ	0xFD8
 51154                           
 51155 ;; *************** function _fat_get_file_information *****************
 51156 ;; Defined at:
 51157 ;;		line 1391 in file "fat16.c"
 51158 ;; Parameters:    Size  Location     Type
 51159 ;;  file_number     1    wreg     unsigned char 
 51160 ;;  data            2   47[BANK0 ] PTR struct .
 51161 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 51162 ;;		 -> ToSendDataBuffer(64), 
 51163 ;; Auto vars:     Size  Location     Type
 51164 ;;  file_number     1   54[BANK0 ] unsigned char 
 51165 ;;  offset          2   52[BANK0 ] unsigned int 
 51166 ;;  root_sector     2   50[BANK0 ] unsigned int 
 51167 ;; Return value:  Size  Location     Type
 51168 ;;                  1    wreg      unsigned char 
 51169 ;; Registers used:
 51170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 51171 ;; Tracked objects:
 51172 ;;		On entry : 0/0
 51173 ;;		On exit  : 0/0
 51174 ;;		Unchanged: 0/0
 51175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51176 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51177 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51178 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51179 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51180 ;;Total ram usage:        8 bytes
 51181 ;; Hardware stack levels used:    1
 51182 ;; Hardware stack levels required when called:   15
 51183 ;; This function calls:
 51184 ;;		__offset_from_file_number
 51185 ;;		__sector_from_file_number
 51186 ;;		_flash_partial_read
 51187 ;; This function is called by:
 51188 ;;		_fat_rename_file
 51189 ;;		_fat_read_from_file
 51190 ;;		_fat_resize_file
 51191 ;;		_fat_modify_file
 51192 ;;		__fill_buffer_get_file_details
 51193 ;; This function uses a non-reentrant model
 51194 ;;
 51195                           
 51196                           	psect	text241
 51197  016D7E                     __ptext241:
 51198                           	opt stack 0
 51199  016D7E                     _fat_get_file_information:
 51200                           	opt stack 11
 51201                           
 51202                           ; BSR set to: 0
 51203                           ;incstack = 0
 51204                           ;fat_get_file_information@file_number stored from wreg
 51205  016D7E  0100               	movlb	0	; () banked
 51206  016D80  6F96               	movwf	fat_get_file_information@file_number& (0+255),b
 51207                           
 51208                           ;fat16.c: 1393: uint16_t root_sector;;fat16.c: 1394: uint16_t offset;;fat16.c: 1396: if(
      +                          file_number>=64)
 51209  016D82  0E3F               	movlw	63
 51210  016D84  0100               	movlb	0	; () banked
 51211  016D86  6596               	cpfsgt	fat_get_file_information@file_number& (0+255),b
 51212  016D88  D002               	goto	l3121
 51213                           
 51214                           ; BSR set to: 0
 51215                           ;fat16.c: 1397: {;fat16.c: 1399: return 0x01;
 51216  016D8A  0E01               	movlw	1
 51217                           
 51218                           ; BSR set to: 0
 51219  016D8C  0012               	return	
 51220  016D8E                     l3121:
 51221                           
 51222                           ; BSR set to: 0
 51223                           ;fat16.c: 1400: };fat16.c: 1403: root_sector = _sector_from_file_number(file_number);
 51224                           
 51225                           ; BSR set to: 0
 51226  016D8E  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 51227  016D90  EC7E  F0C3         	call	__sector_from_file_number
 51228  016D94  C060  F092         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 51229  016D98  C061  F093         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 51230                           
 51231                           ;fat16.c: 1404: offset = _offset_from_file_number(file_number);
 51232  016D9C  0100               	movlb	0	; () banked
 51233  016D9E  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 51234  016DA0  ECFA  F0C4         	call	__offset_from_file_number
 51235  016DA4  C060  F094         	movff	?__offset_from_file_number,fat_get_file_information@offset
 51236  016DA8  C061  F095         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 51237                           
 51238                           ;fat16.c: 1407: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 51239  016DAC  C092  F087         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 51240  016DB0  C093  F088         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 51241  016DB4  C094  F089         	movff	fat_get_file_information@offset,flash_partial_read@start
 51242  016DB8  C095  F08A         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 51243  016DBC  0E00               	movlw	0
 51244  016DBE  0100               	movlb	0	; () banked
 51245  016DC0  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 51246  016DC2  0E20               	movlw	32
 51247  016DC4  6F8B               	movwf	flash_partial_read@length& (0+255),b
 51248  016DC6  C08F  F08D         	movff	fat_get_file_information@data,flash_partial_read@data
 51249  016DCA  C090  F08E         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 51250  016DCE  ECED  F0C2         	call	_flash_partial_read	;wreg free
 51251                           
 51252                           ;fat16.c: 1410: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 51253  016DD2  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 51254  016DD6  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 51255  016DDA  50DF               	movf	indf2,w,c
 51256  016DDC  B4D8               	btfsc	status,2,c
 51257  016DDE  D008               	goto	u20650
 51258  016DE0  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 51259  016DE4  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 51260  016DE8  0EE5               	movlw	229
 51261  016DEA  18DE               	xorwf	postinc2,w,c
 51262  016DEC  A4D8               	btfss	status,2,c
 51263  016DEE  D002               	goto	l3123
 51264  016DF0                     u20650:
 51265                           
 51266                           ;fat16.c: 1411: {;fat16.c: 1413: return 0x02;
 51267  016DF0  0E02               	movlw	2
 51268  016DF2  0012               	return	
 51269  016DF4                     l3123:
 51270                           
 51271                           ;fat16.c: 1414: };fat16.c: 1417: return 0x00;
 51272  016DF4  0E00               	movlw	0
 51273  016DF6  0012               	return	
 51274  016DF8                     __end_of_fat_get_file_information:
 51275                           	opt stack 0
 51276                           tosu	equ	0xFFF
 51277                           tosh	equ	0xFFE
 51278                           tosl	equ	0xFFD
 51279                           pclath	equ	0xFFA
 51280                           tblptru	equ	0xFF8
 51281                           tblptrh	equ	0xFF7
 51282                           tblptrl	equ	0xFF6
 51283                           tablat	equ	0xFF5
 51284                           prodh	equ	0xFF4
 51285                           prodl	equ	0xFF3
 51286                           intcon	equ	0xFF2
 51287                           intcon2	equ	0xFF1
 51288                           intcon3	equ	0xFF0
 51289                           indf0	equ	0xFEF
 51290                           postinc0	equ	0xFEE
 51291                           fsr0h	equ	0xFEA
 51292                           fsr0l	equ	0xFE9
 51293                           wreg	equ	0xFE8
 51294                           indf1	equ	0xFE7
 51295                           postinc1	equ	0xFE6
 51296                           postdec1	equ	0xFE5
 51297                           plusw1	equ	0xFE3
 51298                           fsr1h	equ	0xFE2
 51299                           fsr1l	equ	0xFE1
 51300                           indf2	equ	0xFDF
 51301                           postinc2	equ	0xFDE
 51302                           postdec2	equ	0xFDD
 51303                           plusw2	equ	0xFDB
 51304                           fsr2h	equ	0xFDA
 51305                           fsr2l	equ	0xFD9
 51306                           status	equ	0xFD8
 51307                           
 51308 ;; *************** function __find_nth_cluster *****************
 51309 ;; Defined at:
 51310 ;;		line 182 in file "fat16.c"
 51311 ;; Parameters:    Size  Location     Type
 51312 ;;  cluster         2   55[BANK0 ] unsigned int 
 51313 ;;  n               2   57[BANK0 ] unsigned int 
 51314 ;; Auto vars:     Size  Location     Type
 51315 ;;  sector          2   63[BANK0 ] unsigned int 
 51316 ;;  sector_in_bu    2   61[BANK0 ] unsigned int 
 51317 ;;  offset          2   59[BANK0 ] unsigned int 
 51318 ;; Return value:  Size  Location     Type
 51319 ;;                  2   55[BANK0 ] unsigned int 
 51320 ;; Registers used:
 51321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 51322 ;; Tracked objects:
 51323 ;;		On entry : 0/0
 51324 ;;		On exit  : 0/0
 51325 ;;		Unchanged: 0/0
 51326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51327 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51328 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51330 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51331 ;;Total ram usage:       10 bytes
 51332 ;; Hardware stack levels used:    1
 51333 ;; Hardware stack levels required when called:   16
 51334 ;; This function calls:
 51335 ;;		__fat_offset_from_cluster
 51336 ;;		__fat_sector_from_cluster
 51337 ;;		__read_fat
 51338 ;;		__read_value_from_offset
 51339 ;;		_flash_sector_read
 51340 ;; This function is called by:
 51341 ;;		_fat_read_from_file_fast
 51342 ;;		_fat_modify_file
 51343 ;;		_fat_copy_sector_to_buffer
 51344 ;; This function uses a non-reentrant model
 51345 ;;
 51346                           
 51347                           	psect	text242
 51348  015E5C                     __ptext242:
 51349                           	opt stack 0
 51350  015E5C                     __find_nth_cluster:
 51351                           	opt stack 9
 51352                           
 51353                           ;fat16.c: 184: uint16_t sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: uint16_t se
      +                          ctor_in_buffer = 0;
 51354                           
 51355                           ;incstack = 0
 51356  015E5C  0E00               	movlw	0
 51357  015E5E  0100               	movlb	0	; () banked
 51358  015E60  6F9E               	movwf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),b
 51359  015E62  0E00               	movlw	0
 51360  015E64  6F9D               	movwf	__find_nth_cluster@sector_in_buffer& (0+255),b
 51361                           
 51362                           ; BSR set to: 0
 51363                           ;fat16.c: 189: if(n==1)
 51364  015E66  0599               	decf	__find_nth_cluster@n& (0+255),w,b
 51365  015E68  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 51366  015E6A  A4D8               	btfss	status,2,c
 51367  015E6C  D040               	goto	l2810
 51368                           
 51369                           ; BSR set to: 0
 51370                           ;fat16.c: 190: {;fat16.c: 191: return _read_fat(cluster);
 51371  015E6E  C097  F08F         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 51372  015E72  C098  F090         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 51373  015E76  EC43  F0BD         	call	__read_fat	;wreg free
 51374  015E7A  C08F  F097         	movff	?__read_fat,?__find_nth_cluster
 51375  015E7E  C090  F098         	movff	?__read_fat+1,?__find_nth_cluster+1
 51376  015E82  0012               	return	
 51377  015E84                     
 51378                           ;fat16.c: 195: {;fat16.c: 197: sector = _fat_sector_from_cluster(cluster);
 51379  015E84  C097  F060         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 51380  015E88  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 51381  015E8C  EC01  F0C7         	call	__fat_sector_from_cluster	;wreg free
 51382  015E90  C060  F09F         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 51383  015E94  C061  F0A0         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 51384                           
 51385                           ;fat16.c: 198: offset = _fat_offset_from_cluster(cluster);
 51386  015E98  C097  F060         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 51387  015E9C  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 51388  015EA0  EC0E  F0C7         	call	__fat_offset_from_cluster	;wreg free
 51389  015EA4  C060  F09B         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 51390  015EA8  C061  F09C         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 51391                           
 51392                           ;fat16.c: 201: if(sector != sector_in_buffer)
 51393  015EAC  0100               	movlb	0	; () banked
 51394  015EAE  519D               	movf	__find_nth_cluster@sector_in_buffer& (0+255),w,b
 51395  015EB0  199F               	xorwf	__find_nth_cluster@sector& (0+255),w,b
 51396  015EB2  E104               	bnz	u20280
 51397  015EB4  519E               	movf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),w,b
 51398  015EB6  19A0               	xorwf	(__find_nth_cluster@sector+1)& (0+255),w,b
 51399  015EB8  B4D8               	btfsc	status,2,c
 51400  015EBA  D00A               	goto	l2812
 51401  015EBC                     u20280:
 51402                           
 51403                           ; BSR set to: 0
 51404                           ;fat16.c: 202: {;fat16.c: 203: flash_sector_read(sector, buffer);
 51405  015EBC  C09F  F087         	movff	__find_nth_cluster@sector,flash_sector_read@page
 51406  015EC0  C0A0  F088         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 51407  015EC4  0E00               	movlw	low _buffer
 51408  015EC6  6F89               	movwf	flash_sector_read@data& (0+255),b
 51409  015EC8  0E08               	movlw	high _buffer
 51410  015ECA  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 51411  015ECC  EC86  F0C2         	call	_flash_sector_read	;wreg free
 51412  015ED0                     l2812:
 51413                           
 51414                           ;fat16.c: 204: };fat16.c: 207: cluster = _read_value_from_offset(offset, buffer);
 51415  015ED0  C09B  F060         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 51416  015ED4  C09C  F061         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 51417  015ED8  0E00               	movlw	low _buffer
 51418  015EDA  0100               	movlb	0	; () banked
 51419  015EDC  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 51420  015EDE  0E08               	movlw	high _buffer
 51421  015EE0  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 51422  015EE2  EC99  F0C0         	call	__read_value_from_offset	;wreg free
 51423  015EE6  C060  F097         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 51424  015EEA  C061  F098         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 51425  015EEE                     l2810:
 51426  015EEE  0100               	movlb	0	; () banked
 51427  015EF0  5199               	movf	__find_nth_cluster@n& (0+255),w,b
 51428  015EF2  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 51429  015EF4  A4D8               	btfss	status,2,c
 51430  015EF6  D7C6               	goto	l2811
 51431                           
 51432                           ; BSR set to: 0
 51433                           ;fat16.c: 208: };fat16.c: 210: return cluster;
 51434  015EF8  C097  F097         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 51435  015EFC  C098  F098         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 51436  015F00  0012               	return		;funcret
 51437  015F02                     __end_of__find_nth_cluster:
 51438                           	opt stack 0
 51439                           tosu	equ	0xFFF
 51440                           tosh	equ	0xFFE
 51441                           tosl	equ	0xFFD
 51442                           pclath	equ	0xFFA
 51443                           tblptru	equ	0xFF8
 51444                           tblptrh	equ	0xFF7
 51445                           tblptrl	equ	0xFF6
 51446                           tablat	equ	0xFF5
 51447                           prodh	equ	0xFF4
 51448                           prodl	equ	0xFF3
 51449                           intcon	equ	0xFF2
 51450                           intcon2	equ	0xFF1
 51451                           intcon3	equ	0xFF0
 51452                           indf0	equ	0xFEF
 51453                           postinc0	equ	0xFEE
 51454                           fsr0h	equ	0xFEA
 51455                           fsr0l	equ	0xFE9
 51456                           wreg	equ	0xFE8
 51457                           indf1	equ	0xFE7
 51458                           postinc1	equ	0xFE6
 51459                           postdec1	equ	0xFE5
 51460                           plusw1	equ	0xFE3
 51461                           fsr1h	equ	0xFE2
 51462                           fsr1l	equ	0xFE1
 51463                           indf2	equ	0xFDF
 51464                           postinc2	equ	0xFDE
 51465                           postdec2	equ	0xFDD
 51466                           plusw2	equ	0xFDB
 51467                           fsr2h	equ	0xFDA
 51468                           fsr2l	equ	0xFD9
 51469                           status	equ	0xFD8
 51470                           
 51471 ;; *************** function _flash_sector_read *****************
 51472 ;; Defined at:
 51473 ;;		line 443 in file "flash.c"
 51474 ;; Parameters:    Size  Location     Type
 51475 ;;  page            2   39[BANK0 ] unsigned int 
 51476 ;;  data            2   41[BANK0 ] PTR unsigned char 
 51477 ;;		 -> buffer(512), msd_buffer(512), 
 51478 ;; Auto vars:     Size  Location     Type
 51479 ;;		None
 51480 ;; Return value:  Size  Location     Type
 51481 ;;                  1    wreg      void 
 51482 ;; Registers used:
 51483 ;;		wreg, status,2, status,0, cstack
 51484 ;; Tracked objects:
 51485 ;;		On entry : 0/0
 51486 ;;		On exit  : 0/0
 51487 ;;		Unchanged: 0/0
 51488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51489 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51492 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51493 ;;Total ram usage:        4 bytes
 51494 ;; Hardware stack levels used:    1
 51495 ;; Hardware stack levels required when called:   14
 51496 ;; This function calls:
 51497 ;;		__flash_partial_read
 51498 ;;		_spi_set_configuration
 51499 ;; This function is called by:
 51500 ;;		_ExternalFlash_SectorRead
 51501 ;;		__get_available_cluster
 51502 ;;		__find_nth_cluster
 51503 ;;		__make_cluster_chain
 51504 ;;		_fat_find_file
 51505 ;;		_fat_get_format_status
 51506 ;; This function uses a non-reentrant model
 51507 ;;
 51508                           
 51509                           	psect	text243
 51510  01850C                     __ptext243:
 51511                           	opt stack 0
 51512  01850C                     _flash_sector_read:
 51513                           	opt stack 10
 51514                           
 51515                           ;flash.c: 446: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 51516                           
 51517                           ;incstack = 0
 51518  01850C  0E00               	movlw	0
 51519  01850E  ECBD  F098         	call	_spi_set_configuration
 51520                           
 51521                           ;flash.c: 449: _flash_partial_read(page, 0, 512, data);
 51522  018512  C087  F073         	movff	flash_sector_read@page,__flash_partial_read@page
 51523  018516  C088  F074         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 51524  01851A  0E00               	movlw	0
 51525  01851C  0100               	movlb	0	; () banked
 51526  01851E  6F76               	movwf	(__flash_partial_read@start+1)& (0+255),b
 51527  018520  0E00               	movlw	0
 51528  018522  6F75               	movwf	__flash_partial_read@start& (0+255),b
 51529  018524  0E02               	movlw	2
 51530  018526  6F78               	movwf	(__flash_partial_read@length+1)& (0+255),b
 51531  018528  0E00               	movlw	0
 51532  01852A  6F77               	movwf	__flash_partial_read@length& (0+255),b
 51533  01852C  C089  F079         	movff	flash_sector_read@data,__flash_partial_read@data
 51534  018530  C08A  F07A         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 51535  018534  EC39  F0B7         	call	__flash_partial_read	;wreg free
 51536                           
 51537                           ;flash.c: 452: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 51538  018538  0E01               	movlw	1
 51539  01853A  ECBD  F098         	call	_spi_set_configuration
 51540  01853E  0012               	return		;funcret
 51541  018540                     __end_of_flash_sector_read:
 51542                           	opt stack 0
 51543                           tosu	equ	0xFFF
 51544                           tosh	equ	0xFFE
 51545                           tosl	equ	0xFFD
 51546                           pclath	equ	0xFFA
 51547                           tblptru	equ	0xFF8
 51548                           tblptrh	equ	0xFF7
 51549                           tblptrl	equ	0xFF6
 51550                           tablat	equ	0xFF5
 51551                           prodh	equ	0xFF4
 51552                           prodl	equ	0xFF3
 51553                           intcon	equ	0xFF2
 51554                           intcon2	equ	0xFF1
 51555                           intcon3	equ	0xFF0
 51556                           indf0	equ	0xFEF
 51557                           postinc0	equ	0xFEE
 51558                           fsr0h	equ	0xFEA
 51559                           fsr0l	equ	0xFE9
 51560                           wreg	equ	0xFE8
 51561                           indf1	equ	0xFE7
 51562                           postinc1	equ	0xFE6
 51563                           postdec1	equ	0xFE5
 51564                           plusw1	equ	0xFE3
 51565                           fsr1h	equ	0xFE2
 51566                           fsr1l	equ	0xFE1
 51567                           indf2	equ	0xFDF
 51568                           postinc2	equ	0xFDE
 51569                           postdec2	equ	0xFDD
 51570                           plusw2	equ	0xFDB
 51571                           fsr2h	equ	0xFDA
 51572                           fsr2l	equ	0xFD9
 51573                           status	equ	0xFD8
 51574                           
 51575 ;; *************** function __read_value_from_offset *****************
 51576 ;; Defined at:
 51577 ;;		line 114 in file "fat16.c"
 51578 ;; Parameters:    Size  Location     Type
 51579 ;;  offset          2    0[BANK0 ] unsigned int 
 51580 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 51581 ;;		 -> buffer(512), 
 51582 ;; Auto vars:     Size  Location     Type
 51583 ;;  value           2    7[BANK0 ] unsigned int 
 51584 ;; Return value:  Size  Location     Type
 51585 ;;                  2    0[BANK0 ] unsigned int 
 51586 ;; Registers used:
 51587 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 51588 ;; Tracked objects:
 51589 ;;		On entry : 0/0
 51590 ;;		On exit  : 0/0
 51591 ;;		Unchanged: 0/0
 51592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51593 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51594 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51595 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51596 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51597 ;;Total ram usage:        9 bytes
 51598 ;; Hardware stack levels used:    1
 51599 ;; Hardware stack levels required when called:   10
 51600 ;; This function calls:
 51601 ;;		Nothing
 51602 ;; This function is called by:
 51603 ;;		__find_nth_cluster
 51604 ;;		__make_cluster_chain
 51605 ;; This function uses a non-reentrant model
 51606 ;;
 51607                           
 51608                           	psect	text244
 51609  018132                     __ptext244:
 51610                           	opt stack 0
 51611  018132                     __read_value_from_offset:
 51612                           	opt stack 14
 51613                           
 51614                           ;fat16.c: 116: uint16_t value;;fat16.c: 117: value = buffer[offset+1];
 51615                           
 51616                           ;incstack = 0
 51617  018132  0E01               	movlw	1
 51618  018134  0100               	movlb	0	; () banked
 51619  018136  2560               	addwf	__read_value_from_offset@offset& (0+255),w,b
 51620  018138  6F64               	movwf	??__read_value_from_offset& (0+255),b
 51621  01813A  0E00               	movlw	0
 51622  01813C  2161               	addwfc	(__read_value_from_offset@offset+1)& (0+255),w,b
 51623  01813E  6F65               	movwf	(??__read_value_from_offset+1)& (0+255),b
 51624  018140  5164               	movf	??__read_value_from_offset& (0+255),w,b
 51625  018142  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 51626  018144  6ED9               	movwf	fsr2l,c
 51627  018146  5165               	movf	(??__read_value_from_offset+1)& (0+255),w,b
 51628  018148  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 51629  01814A  6EDA               	movwf	fsr2h,c
 51630  01814C  50DF               	movf	indf2,w,c
 51631  01814E  6F66               	movwf	(??__read_value_from_offset+2)& (0+255),b
 51632  018150  5166               	movf	(??__read_value_from_offset+2)& (0+255),w,b
 51633  018152  6F67               	movwf	__read_value_from_offset@value& (0+255),b
 51634  018154  6B68               	clrf	(__read_value_from_offset@value+1)& (0+255),b
 51635                           
 51636                           ; BSR set to: 0
 51637                           ;fat16.c: 118: value <<= 8;
 51638  018156  5167               	movf	__read_value_from_offset@value& (0+255),w,b
 51639  018158  6F68               	movwf	(__read_value_from_offset@value+1)& (0+255),b
 51640  01815A  6B67               	clrf	__read_value_from_offset@value& (0+255),b
 51641                           
 51642                           ; BSR set to: 0
 51643                           ;fat16.c: 119: value |= buffer[offset];
 51644  01815C  5160               	movf	__read_value_from_offset@offset& (0+255),w,b
 51645  01815E  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 51646  018160  6ED9               	movwf	fsr2l,c
 51647  018162  5161               	movf	(__read_value_from_offset@offset+1)& (0+255),w,b
 51648  018164  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 51649  018166  6EDA               	movwf	fsr2h,c
 51650  018168  50DF               	movf	indf2,w,c
 51651  01816A  6F64               	movwf	??__read_value_from_offset& (0+255),b
 51652  01816C  5164               	movf	??__read_value_from_offset& (0+255),w,b
 51653  01816E  1367               	iorwf	__read_value_from_offset@value& (0+255),f,b
 51654                           
 51655                           ; BSR set to: 0
 51656                           ;fat16.c: 120: return value;
 51657  018170  C067  F060         	movff	__read_value_from_offset@value,?__read_value_from_offset
 51658  018174  C068  F061         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 51659  018178  0012               	return	
 51660  01817A                     __end_of__read_value_from_offset:
 51661                           	opt stack 0
 51662                           tosu	equ	0xFFF
 51663                           tosh	equ	0xFFE
 51664                           tosl	equ	0xFFD
 51665                           pclath	equ	0xFFA
 51666                           tblptru	equ	0xFF8
 51667                           tblptrh	equ	0xFF7
 51668                           tblptrl	equ	0xFF6
 51669                           tablat	equ	0xFF5
 51670                           prodh	equ	0xFF4
 51671                           prodl	equ	0xFF3
 51672                           intcon	equ	0xFF2
 51673                           intcon2	equ	0xFF1
 51674                           intcon3	equ	0xFF0
 51675                           indf0	equ	0xFEF
 51676                           postinc0	equ	0xFEE
 51677                           fsr0h	equ	0xFEA
 51678                           fsr0l	equ	0xFE9
 51679                           wreg	equ	0xFE8
 51680                           indf1	equ	0xFE7
 51681                           postinc1	equ	0xFE6
 51682                           postdec1	equ	0xFE5
 51683                           plusw1	equ	0xFE3
 51684                           fsr1h	equ	0xFE2
 51685                           fsr1l	equ	0xFE1
 51686                           indf2	equ	0xFDF
 51687                           postinc2	equ	0xFDE
 51688                           postdec2	equ	0xFDD
 51689                           plusw2	equ	0xFDB
 51690                           fsr2h	equ	0xFDA
 51691                           fsr2l	equ	0xFD9
 51692                           status	equ	0xFD8
 51693                           
 51694 ;; *************** function __read_fat *****************
 51695 ;; Defined at:
 51696 ;;		line 456 in file "fat16.c"
 51697 ;; Parameters:    Size  Location     Type
 51698 ;;  cluster         2   47[BANK0 ] unsigned int 
 51699 ;; Auto vars:     Size  Location     Type
 51700 ;;  value           2   53[BANK0 ] unsigned int 
 51701 ;;  offset          2   51[BANK0 ] unsigned int 
 51702 ;;  sector          2   49[BANK0 ] unsigned int 
 51703 ;; Return value:  Size  Location     Type
 51704 ;;                  2   47[BANK0 ] unsigned int 
 51705 ;; Registers used:
 51706 ;;		wreg, status,2, status,0, cstack
 51707 ;; Tracked objects:
 51708 ;;		On entry : 0/0
 51709 ;;		On exit  : 0/0
 51710 ;;		Unchanged: 0/0
 51711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51712 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51713 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51715 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51716 ;;Total ram usage:        8 bytes
 51717 ;; Hardware stack levels used:    1
 51718 ;; Hardware stack levels required when called:   15
 51719 ;; This function calls:
 51720 ;;		__fat_offset_from_cluster
 51721 ;;		__fat_sector_from_cluster
 51722 ;;		_flash_partial_read
 51723 ;; This function is called by:
 51724 ;;		__find_nth_cluster
 51725 ;;		_fat_read_from_file_fast
 51726 ;;		_fat_modify_file
 51727 ;; This function uses a non-reentrant model
 51728 ;;
 51729                           
 51730                           	psect	text245
 51731  017A86                     __ptext245:
 51732                           	opt stack 0
 51733  017A86                     __read_fat:
 51734                           	opt stack 10
 51735                           
 51736                           ;fat16.c: 458: uint16_t sector;;fat16.c: 459: uint16_t offset;;fat16.c: 460: uint16_t va
      +                          lue;;fat16.c: 463: sector = _fat_sector_from_cluster(cluster);
 51737                           
 51738                           ; BSR set to: 0
 51739                           ;incstack = 0
 51740  017A86  C08F  F060         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 51741  017A8A  C090  F061         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 51742  017A8E  EC01  F0C7         	call	__fat_sector_from_cluster	;wreg free
 51743  017A92  C060  F091         	movff	?__fat_sector_from_cluster,__read_fat@sector
 51744  017A96  C061  F092         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 51745                           
 51746                           ;fat16.c: 464: offset = _fat_offset_from_cluster(cluster);
 51747  017A9A  C08F  F060         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 51748  017A9E  C090  F061         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 51749  017AA2  EC0E  F0C7         	call	__fat_offset_from_cluster	;wreg free
 51750  017AA6  C060  F093         	movff	?__fat_offset_from_cluster,__read_fat@offset
 51751  017AAA  C061  F094         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 51752                           
 51753                           ;fat16.c: 467: flash_partial_read(sector, offset, 2, &value);
 51754  017AAE  C091  F087         	movff	__read_fat@sector,flash_partial_read@page
 51755  017AB2  C092  F088         	movff	__read_fat@sector+1,flash_partial_read@page+1
 51756  017AB6  C093  F089         	movff	__read_fat@offset,flash_partial_read@start
 51757  017ABA  C094  F08A         	movff	__read_fat@offset+1,flash_partial_read@start+1
 51758  017ABE  0E00               	movlw	0
 51759  017AC0  0100               	movlb	0	; () banked
 51760  017AC2  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 51761  017AC4  0E02               	movlw	2
 51762  017AC6  6F8B               	movwf	flash_partial_read@length& (0+255),b
 51763  017AC8  0E95               	movlw	low __read_fat@value
 51764  017ACA  6F8D               	movwf	flash_partial_read@data& (0+255),b
 51765  017ACC  0E00               	movlw	high __read_fat@value
 51766  017ACE  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 51767  017AD0  ECED  F0C2         	call	_flash_partial_read	;wreg free
 51768                           
 51769                           ;fat16.c: 470: return value;
 51770  017AD4  C095  F08F         	movff	__read_fat@value,?__read_fat
 51771  017AD8  C096  F090         	movff	__read_fat@value+1,?__read_fat+1
 51772  017ADC  0012               	return	
 51773  017ADE                     __end_of__read_fat:
 51774                           	opt stack 0
 51775                           tosu	equ	0xFFF
 51776                           tosh	equ	0xFFE
 51777                           tosl	equ	0xFFD
 51778                           pclath	equ	0xFFA
 51779                           tblptru	equ	0xFF8
 51780                           tblptrh	equ	0xFF7
 51781                           tblptrl	equ	0xFF6
 51782                           tablat	equ	0xFF5
 51783                           prodh	equ	0xFF4
 51784                           prodl	equ	0xFF3
 51785                           intcon	equ	0xFF2
 51786                           intcon2	equ	0xFF1
 51787                           intcon3	equ	0xFF0
 51788                           indf0	equ	0xFEF
 51789                           postinc0	equ	0xFEE
 51790                           fsr0h	equ	0xFEA
 51791                           fsr0l	equ	0xFE9
 51792                           wreg	equ	0xFE8
 51793                           indf1	equ	0xFE7
 51794                           postinc1	equ	0xFE6
 51795                           postdec1	equ	0xFE5
 51796                           plusw1	equ	0xFE3
 51797                           fsr1h	equ	0xFE2
 51798                           fsr1l	equ	0xFE1
 51799                           indf2	equ	0xFDF
 51800                           postinc2	equ	0xFDE
 51801                           postdec2	equ	0xFDD
 51802                           plusw2	equ	0xFDB
 51803                           fsr2h	equ	0xFDA
 51804                           fsr2l	equ	0xFD9
 51805                           status	equ	0xFD8
 51806                           
 51807 ;; *************** function __fat_sector_from_cluster *****************
 51808 ;; Defined at:
 51809 ;;		line 75 in file "fat16.c"
 51810 ;; Parameters:    Size  Location     Type
 51811 ;;  cluster         2    0[BANK0 ] unsigned int 
 51812 ;; Auto vars:     Size  Location     Type
 51813 ;;		None
 51814 ;; Return value:  Size  Location     Type
 51815 ;;                  2    0[BANK0 ] unsigned int 
 51816 ;; Registers used:
 51817 ;;		wreg, status,2, status,0
 51818 ;; Tracked objects:
 51819 ;;		On entry : 0/0
 51820 ;;		On exit  : 0/0
 51821 ;;		Unchanged: 0/0
 51822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51823 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51826 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51827 ;;Total ram usage:        2 bytes
 51828 ;; Hardware stack levels used:    1
 51829 ;; Hardware stack levels required when called:   10
 51830 ;; This function calls:
 51831 ;;		Nothing
 51832 ;; This function is called by:
 51833 ;;		__find_nth_cluster
 51834 ;;		__make_cluster_chain
 51835 ;;		__read_fat
 51836 ;; This function uses a non-reentrant model
 51837 ;;
 51838                           
 51839                           	psect	text246
 51840  018E02                     __ptext246:
 51841                           	opt stack 0
 51842  018E02                     __fat_sector_from_cluster:
 51843                           	opt stack 14
 51844                           
 51845                           ;fat16.c: 77: cluster >>= 8;
 51846                           
 51847                           ;incstack = 0
 51848  018E02  0100               	movlb	0	; () banked
 51849  018E04  5161               	movf	(__fat_sector_from_cluster@cluster+1)& (0+255),w,b
 51850  018E06  6F60               	movwf	__fat_sector_from_cluster@cluster& (0+255),b
 51851  018E08  6B61               	clrf	(__fat_sector_from_cluster@cluster+1)& (0+255),b
 51852                           
 51853                           ; BSR set to: 0
 51854                           ;fat16.c: 78: cluster += 2;
 51855  018E0A  0E02               	movlw	2
 51856  018E0C  2760               	addwf	__fat_sector_from_cluster@cluster& (0+255),f,b
 51857  018E0E  0E00               	movlw	0
 51858  018E10  2361               	addwfc	(__fat_sector_from_cluster@cluster+1)& (0+255),f,b
 51859                           
 51860                           ; BSR set to: 0
 51861                           ;fat16.c: 79: return cluster;
 51862  018E12  C060  F060         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 51863  018E16  C061  F061         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 51864  018E1A  0012               	return	
 51865  018E1C                     __end_of__fat_sector_from_cluster:
 51866                           	opt stack 0
 51867                           tosu	equ	0xFFF
 51868                           tosh	equ	0xFFE
 51869                           tosl	equ	0xFFD
 51870                           pclath	equ	0xFFA
 51871                           tblptru	equ	0xFF8
 51872                           tblptrh	equ	0xFF7
 51873                           tblptrl	equ	0xFF6
 51874                           tablat	equ	0xFF5
 51875                           prodh	equ	0xFF4
 51876                           prodl	equ	0xFF3
 51877                           intcon	equ	0xFF2
 51878                           intcon2	equ	0xFF1
 51879                           intcon3	equ	0xFF0
 51880                           indf0	equ	0xFEF
 51881                           postinc0	equ	0xFEE
 51882                           fsr0h	equ	0xFEA
 51883                           fsr0l	equ	0xFE9
 51884                           wreg	equ	0xFE8
 51885                           indf1	equ	0xFE7
 51886                           postinc1	equ	0xFE6
 51887                           postdec1	equ	0xFE5
 51888                           plusw1	equ	0xFE3
 51889                           fsr1h	equ	0xFE2
 51890                           fsr1l	equ	0xFE1
 51891                           indf2	equ	0xFDF
 51892                           postinc2	equ	0xFDE
 51893                           postdec2	equ	0xFDD
 51894                           plusw2	equ	0xFDB
 51895                           fsr2h	equ	0xFDA
 51896                           fsr2l	equ	0xFD9
 51897                           status	equ	0xFD8
 51898                           
 51899 ;; *************** function __fat_offset_from_cluster *****************
 51900 ;; Defined at:
 51901 ;;		line 82 in file "fat16.c"
 51902 ;; Parameters:    Size  Location     Type
 51903 ;;  cluster         2    0[BANK0 ] unsigned int 
 51904 ;; Auto vars:     Size  Location     Type
 51905 ;;		None
 51906 ;; Return value:  Size  Location     Type
 51907 ;;                  2    0[BANK0 ] unsigned int 
 51908 ;; Registers used:
 51909 ;;		wreg, status,2, status,0
 51910 ;; Tracked objects:
 51911 ;;		On entry : 0/0
 51912 ;;		On exit  : 0/0
 51913 ;;		Unchanged: 0/0
 51914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51915 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51918 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51919 ;;Total ram usage:        2 bytes
 51920 ;; Hardware stack levels used:    1
 51921 ;; Hardware stack levels required when called:   10
 51922 ;; This function calls:
 51923 ;;		Nothing
 51924 ;; This function is called by:
 51925 ;;		__find_nth_cluster
 51926 ;;		__make_cluster_chain
 51927 ;;		__read_fat
 51928 ;; This function uses a non-reentrant model
 51929 ;;
 51930                           
 51931                           	psect	text247
 51932  018E1C                     __ptext247:
 51933                           	opt stack 0
 51934  018E1C                     __fat_offset_from_cluster:
 51935                           	opt stack 14
 51936                           
 51937                           ;fat16.c: 84: cluster &= 0xFF;
 51938                           
 51939                           ; BSR set to: 0
 51940                           ;incstack = 0
 51941  018E1C  0EFF               	movlw	255
 51942  018E1E  0100               	movlb	0	; () banked
 51943  018E20  1760               	andwf	__fat_offset_from_cluster@cluster& (0+255),f,b
 51944  018E22  0E00               	movlw	0
 51945  018E24  1761               	andwf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 51946                           
 51947                           ; BSR set to: 0
 51948                           ;fat16.c: 85: cluster <<= 1;
 51949  018E26  90D8               	bcf	status,0,c
 51950  018E28  3760               	rlcf	__fat_offset_from_cluster@cluster& (0+255),f,b
 51951  018E2A  3761               	rlcf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 51952                           
 51953                           ; BSR set to: 0
 51954                           ;fat16.c: 86: return cluster;
 51955  018E2C  C060  F060         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 51956  018E30  C061  F061         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 51957  018E34  0012               	return	
 51958  018E36                     __end_of__fat_offset_from_cluster:
 51959                           	opt stack 0
 51960                           tosu	equ	0xFFF
 51961                           tosh	equ	0xFFE
 51962                           tosl	equ	0xFFD
 51963                           pclath	equ	0xFFA
 51964                           tblptru	equ	0xFF8
 51965                           tblptrh	equ	0xFF7
 51966                           tblptrl	equ	0xFF6
 51967                           tablat	equ	0xFF5
 51968                           prodh	equ	0xFF4
 51969                           prodl	equ	0xFF3
 51970                           intcon	equ	0xFF2
 51971                           intcon2	equ	0xFF1
 51972                           intcon3	equ	0xFF0
 51973                           indf0	equ	0xFEF
 51974                           postinc0	equ	0xFEE
 51975                           fsr0h	equ	0xFEA
 51976                           fsr0l	equ	0xFE9
 51977                           wreg	equ	0xFE8
 51978                           indf1	equ	0xFE7
 51979                           postinc1	equ	0xFE6
 51980                           postdec1	equ	0xFE5
 51981                           plusw1	equ	0xFE3
 51982                           fsr1h	equ	0xFE2
 51983                           fsr1l	equ	0xFE1
 51984                           indf2	equ	0xFDF
 51985                           postinc2	equ	0xFDE
 51986                           postdec2	equ	0xFDD
 51987                           plusw2	equ	0xFDB
 51988                           fsr2h	equ	0xFDA
 51989                           fsr2l	equ	0xFD9
 51990                           status	equ	0xFD8
 51991                           
 51992 ;; *************** function __data_sector_from_cluster *****************
 51993 ;; Defined at:
 51994 ;;		line 70 in file "fat16.c"
 51995 ;; Parameters:    Size  Location     Type
 51996 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 51997 ;; Auto vars:     Size  Location     Type
 51998 ;;		None
 51999 ;; Return value:  Size  Location     Type
 52000 ;;                  2    0[BANK0 ] unsigned int 
 52001 ;; Registers used:
 52002 ;;		wreg, status,2, status,0
 52003 ;; Tracked objects:
 52004 ;;		On entry : 0/0
 52005 ;;		On exit  : 0/0
 52006 ;;		Unchanged: 0/0
 52007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52008 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52011 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52012 ;;Total ram usage:        2 bytes
 52013 ;; Hardware stack levels used:    1
 52014 ;; Hardware stack levels required when called:   10
 52015 ;; This function calls:
 52016 ;;		Nothing
 52017 ;; This function is called by:
 52018 ;;		_fat_read_from_file_fast
 52019 ;;		_fat_modify_file
 52020 ;;		_fat_copy_sector_to_buffer
 52021 ;; This function uses a non-reentrant model
 52022 ;;
 52023                           
 52024                           	psect	text248
 52025  019016                     __ptext248:
 52026                           	opt stack 0
 52027  019016                     __data_sector_from_cluster:
 52028                           	opt stack 15
 52029                           
 52030                           ;fat16.c: 72: return fat_cluster + 38 - 2;
 52031                           
 52032                           ; BSR set to: 0
 52033                           ;incstack = 0
 52034  019016  0E24               	movlw	36
 52035  019018  0100               	movlb	0	; () banked
 52036  01901A  2560               	addwf	__data_sector_from_cluster@fat_cluster& (0+255),w,b
 52037  01901C  6F60               	movwf	?__data_sector_from_cluster& (0+255),b
 52038  01901E  0E00               	movlw	0
 52039  019020  2161               	addwfc	(__data_sector_from_cluster@fat_cluster+1)& (0+255),w,b
 52040  019022  6F61               	movwf	(?__data_sector_from_cluster+1)& (0+255),b
 52041  019024  0012               	return	
 52042  019026                     __end_of__data_sector_from_cluster:
 52043                           	opt stack 0
 52044                           tosu	equ	0xFFF
 52045                           tosh	equ	0xFFE
 52046                           tosl	equ	0xFFD
 52047                           pclath	equ	0xFFA
 52048                           tblptru	equ	0xFF8
 52049                           tblptrh	equ	0xFF7
 52050                           tblptrl	equ	0xFF6
 52051                           tablat	equ	0xFF5
 52052                           prodh	equ	0xFF4
 52053                           prodl	equ	0xFF3
 52054                           intcon	equ	0xFF2
 52055                           intcon2	equ	0xFF1
 52056                           intcon3	equ	0xFF0
 52057                           indf0	equ	0xFEF
 52058                           postinc0	equ	0xFEE
 52059                           fsr0h	equ	0xFEA
 52060                           fsr0l	equ	0xFE9
 52061                           wreg	equ	0xFE8
 52062                           indf1	equ	0xFE7
 52063                           postinc1	equ	0xFE6
 52064                           postdec1	equ	0xFE5
 52065                           plusw1	equ	0xFE3
 52066                           fsr1h	equ	0xFE2
 52067                           fsr1l	equ	0xFE1
 52068                           indf2	equ	0xFDF
 52069                           postinc2	equ	0xFDE
 52070                           postdec2	equ	0xFDD
 52071                           plusw2	equ	0xFDB
 52072                           fsr2h	equ	0xFDA
 52073                           fsr2l	equ	0xFD9
 52074                           status	equ	0xFD8
 52075                           
 52076 ;; *************** function __parse_calibration *****************
 52077 ;; Defined at:
 52078 ;;		line 1111 in file "api.c"
 52079 ;; Parameters:    Size  Location     Type
 52080 ;;  data            2    3[BANK0 ] PTR unsigned char 
 52081 ;;		 -> ReceivedDataBuffer(64), 
 52082 ;;  out_buffer      2    5[BANK0 ] PTR unsigned char 
 52083 ;;		 -> ToSendDataBuffer(64), 
 52084 ;;  out_idx_ptr     2    7[BANK0 ] PTR unsigned char 
 52085 ;;		 -> api_parse@out_idx(1), 
 52086 ;; Auto vars:     Size  Location     Type
 52087 ;;  parameter       2   12[BANK0 ] int 
 52088 ;;  item            1   14[BANK0 ] enum E6892
 52089 ;;  slope_or_off    1   11[BANK0 ] char 
 52090 ;;  shift           1   10[BANK0 ] unsigned char 
 52091 ;; Return value:  Size  Location     Type
 52092 ;;                  1    wreg      unsigned char 
 52093 ;; Registers used:
 52094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 52095 ;; Tracked objects:
 52096 ;;		On entry : 0/0
 52097 ;;		On exit  : 0/0
 52098 ;;		Unchanged: 0/0
 52099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52100 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52101 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52102 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52103 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52104 ;;Total ram usage:       12 bytes
 52105 ;; Hardware stack levels used:    1
 52106 ;; Hardware stack levels required when called:   11
 52107 ;; This function calls:
 52108 ;;		_schedule_eeprom_write_task
 52109 ;; This function is called by:
 52110 ;;		__parse_command_long
 52111 ;; This function uses a non-reentrant model
 52112 ;;
 52113                           
 52114                           	psect	text249
 52115  01127E                     __ptext249:
 52116                           	opt stack 0
 52117  01127E                     __parse_calibration:
 52118                           	opt stack 16
 52119                           
 52120                           ;api.c: 1113: int8_t slope_or_offset;;api.c: 1114: calibrationIndex_t item;;api.c: 1115:
      +                           int16_t parameter;;api.c: 1116: uint8_t shift;;api.c: 1119: item = (calibrationIndex_t)
      +                           (data[1]>>4);
 52121                           
 52122                           ; BSR set to: 0
 52123                           ;incstack = 0
 52124  01127E  0100               	movlb	0	; () banked
 52125  011280  EE20 F001          	lfsr	2,1
 52126  011284  5163               	movf	__parse_calibration@data& (0+255),w,b
 52127  011286  26D9               	addwf	fsr2l,f,c
 52128  011288  5164               	movf	(__parse_calibration@data+1)& (0+255),w,b
 52129  01128A  22DA               	addwfc	fsr2h,f,c
 52130  01128C  50DF               	movf	indf2,w,c
 52131  01128E  6F69               	movwf	??__parse_calibration& (0+255),b
 52132  011290  3969               	swapf	??__parse_calibration& (0+255),w,b
 52133  011292  0B0F               	andlw	15
 52134  011294  6F6E               	movwf	__parse_calibration@item& (0+255),b
 52135                           
 52136                           ;api.c: 1122: slope_or_offset = data[1] & 0x0F;
 52137  011296  EE20 F001          	lfsr	2,1
 52138  01129A  5163               	movf	__parse_calibration@data& (0+255),w,b
 52139  01129C  26D9               	addwf	fsr2l,f,c
 52140  01129E  5164               	movf	(__parse_calibration@data+1)& (0+255),w,b
 52141  0112A0  22DA               	addwfc	fsr2h,f,c
 52142  0112A2  50DF               	movf	indf2,w,c
 52143  0112A4  0B0F               	andlw	15
 52144  0112A6  6F6B               	movwf	__parse_calibration@slope_or_offset& (0+255),b
 52145                           
 52146                           ;api.c: 1125: parameter = data[2];
 52147  0112A8  EE20 F002          	lfsr	2,2
 52148  0112AC  5163               	movf	__parse_calibration@data& (0+255),w,b
 52149  0112AE  26D9               	addwf	fsr2l,f,c
 52150  0112B0  5164               	movf	(__parse_calibration@data+1)& (0+255),w,b
 52151  0112B2  22DA               	addwfc	fsr2h,f,c
 52152  0112B4  50DF               	movf	indf2,w,c
 52153  0112B6  6F69               	movwf	??__parse_calibration& (0+255),b
 52154  0112B8  5169               	movf	??__parse_calibration& (0+255),w,b
 52155  0112BA  6F6C               	movwf	__parse_calibration@parameter& (0+255),b
 52156  0112BC  6B6D               	clrf	(__parse_calibration@parameter+1)& (0+255),b
 52157                           
 52158                           ; BSR set to: 0
 52159                           ;api.c: 1126: parameter <<= 8;
 52160  0112BE  516C               	movf	__parse_calibration@parameter& (0+255),w,b
 52161  0112C0  6F6D               	movwf	(__parse_calibration@parameter+1)& (0+255),b
 52162  0112C2  6B6C               	clrf	__parse_calibration@parameter& (0+255),b
 52163                           
 52164                           ; BSR set to: 0
 52165                           ;api.c: 1127: parameter |= data[3];
 52166  0112C4  EE20 F003          	lfsr	2,3
 52167  0112C8  5163               	movf	__parse_calibration@data& (0+255),w,b
 52168  0112CA  26D9               	addwf	fsr2l,f,c
 52169  0112CC  5164               	movf	(__parse_calibration@data+1)& (0+255),w,b
 52170  0112CE  22DA               	addwfc	fsr2h,f,c
 52171  0112D0  50DF               	movf	indf2,w,c
 52172  0112D2  6F69               	movwf	??__parse_calibration& (0+255),b
 52173  0112D4  5169               	movf	??__parse_calibration& (0+255),w,b
 52174  0112D6  136C               	iorwf	__parse_calibration@parameter& (0+255),f,b
 52175                           
 52176                           ; BSR set to: 0
 52177                           ;api.c: 1130: shift = data[4];
 52178  0112D8  EE20 F004          	lfsr	2,4
 52179  0112DC  5163               	movf	__parse_calibration@data& (0+255),w,b
 52180  0112DE  26D9               	addwf	fsr2l,f,c
 52181  0112E0  5164               	movf	(__parse_calibration@data+1)& (0+255),w,b
 52182  0112E2  22DA               	addwfc	fsr2h,f,c
 52183  0112E4  50DF               	movf	indf2,w,c
 52184  0112E6  6F6A               	movwf	__parse_calibration@shift& (0+255),b
 52185                           
 52186                           ;api.c: 1133: switch(slope_or_offset)
 52187  0112E8  D030               	goto	l3749
 52188  0112EA                     
 52189                           ; BSR set to: 0
 52190                           ;api.c: 1137: calibrationParameters[item].Offset = parameter;
 52191                           
 52192                           ; BSR set to: 0
 52193  0112EA  516E               	movf	__parse_calibration@item& (0+255),w,b
 52194  0112EC  0D0C               	mullw	12
 52195  0112EE  0E05               	movlw	5
 52196  0112F0  26F3               	addwf	prodl,f,c
 52197  0112F2  0E00               	movlw	0
 52198  0112F4  22F4               	addwfc	prodh,f,c
 52199  0112F6  0E18               	movlw	low _calibrationParameters
 52200  0112F8  24F3               	addwf	prodl,w,c
 52201  0112FA  6ED9               	movwf	fsr2l,c
 52202  0112FC  0E03               	movlw	high _calibrationParameters
 52203  0112FE  20F4               	addwfc	prodh,w,c
 52204  011300  6EDA               	movwf	fsr2h,c
 52205  011302  C06C  FFDE         	movff	__parse_calibration@parameter,postinc2
 52206  011306  C06D  FFDD         	movff	__parse_calibration@parameter+1,postdec2
 52207                           
 52208                           ;api.c: 1138: break;
 52209  01130A  D043               	goto	l3753
 52210  01130C                     
 52211                           ; BSR set to: 0
 52212                           ;api.c: 1141: calibrationParameters[item].Multiplier = parameter;
 52213                           
 52214                           ; BSR set to: 0
 52215  01130C  516E               	movf	__parse_calibration@item& (0+255),w,b
 52216  01130E  0D0C               	mullw	12
 52217  011310  0E07               	movlw	7
 52218  011312  26F3               	addwf	prodl,f,c
 52219  011314  0E00               	movlw	0
 52220  011316  22F4               	addwfc	prodh,f,c
 52221  011318  0E18               	movlw	low _calibrationParameters
 52222  01131A  24F3               	addwf	prodl,w,c
 52223  01131C  6ED9               	movwf	fsr2l,c
 52224  01131E  0E03               	movlw	high _calibrationParameters
 52225  011320  20F4               	addwfc	prodh,w,c
 52226  011322  6EDA               	movwf	fsr2h,c
 52227  011324  C06C  FFDE         	movff	__parse_calibration@parameter,postinc2
 52228  011328  C06D  FFDD         	movff	__parse_calibration@parameter+1,postdec2
 52229                           
 52230                           ;api.c: 1142: calibrationParameters[item].Shift = shift;
 52231  01132C  516E               	movf	__parse_calibration@item& (0+255),w,b
 52232  01132E  0D0C               	mullw	12
 52233  011330  0E09               	movlw	9
 52234  011332  26F3               	addwf	prodl,f,c
 52235  011334  0E00               	movlw	0
 52236  011336  22F4               	addwfc	prodh,f,c
 52237  011338  0E18               	movlw	low _calibrationParameters
 52238  01133A  24F3               	addwf	prodl,w,c
 52239  01133C  6ED9               	movwf	fsr2l,c
 52240  01133E  0E03               	movlw	high _calibrationParameters
 52241  011340  20F4               	addwfc	prodh,w,c
 52242  011342  6EDA               	movwf	fsr2h,c
 52243  011344  C06A  FFDF         	movff	__parse_calibration@shift,indf2
 52244                           
 52245                           ; BSR set to: 0
 52246                           ;api.c: 1144: }
 52247                           
 52248                           ;api.c: 1143: break;
 52249  011348  D024               	goto	l3753
 52250  01134A                     l3749:
 52251                           
 52252                           ; BSR set to: 0
 52253                           
 52254                           ; BSR set to: 0
 52255  01134A  516B               	movf	__parse_calibration@slope_or_offset& (0+255),w,b
 52256                           
 52257                           ; Switch size 1, requested type "space"
 52258                           ; Number of cases is 2, Range of values is 0 to 1
 52259                           ; switch strategies available:
 52260                           ; Name         Instructions Cycles
 52261                           ; simple_byte            7     4 (average)
 52262                           ;	Chosen strategy is simple_byte
 52263  01134C  0A00               	xorlw	0	; case 0
 52264  01134E  B4D8               	btfsc	status,2,c
 52265  011350  D7CC               	goto	l3750
 52266  011352  0A01               	xorlw	1	; case 1
 52267  011354  B4D8               	btfsc	status,2,c
 52268  011356  D7DA               	goto	l3752
 52269                           
 52270                           ; BSR set to: 0
 52271                           ;api.c: 1147: switch(item)
 52272  011358  D01C               	goto	l3753
 52273  01135A                     
 52274                           ; BSR set to: 0
 52275                           ;api.c: 1150: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_VOLTAGE);
 52276                           
 52277                           ; BSR set to: 0
 52278  01135A  0E02               	movlw	2
 52279  01135C  ECB5  F0BF         	call	_schedule_eeprom_write_task
 52280                           
 52281                           ;api.c: 1151: break;
 52282  011360  D02F               	goto	l3755
 52283  011362                     
 52284                           ;api.c: 1153: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_VOLTAGE);
 52285  011362  0E03               	movlw	3
 52286  011364  ECB5  F0BF         	call	_schedule_eeprom_write_task
 52287                           
 52288                           ;api.c: 1154: break;
 52289  011368  D02B               	goto	l3755
 52290  01136A                     
 52291                           ;api.c: 1156: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_CURRENT);
 52292  01136A  0E04               	movlw	4
 52293  01136C  ECB5  F0BF         	call	_schedule_eeprom_write_task
 52294                           
 52295                           ;api.c: 1157: break;
 52296  011370  D027               	goto	l3755
 52297  011372                     
 52298                           ;api.c: 1159: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_CURRENT);
 52299  011372  0E05               	movlw	5
 52300  011374  ECB5  F0BF         	call	_schedule_eeprom_write_task
 52301                           
 52302                           ;api.c: 1160: break;
 52303  011378  D023               	goto	l3755
 52304  01137A                     
 52305                           ;api.c: 1162: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_ONBOARD_TEMPERATU
      +                          RE);
 52306  01137A  0E06               	movlw	6
 52307  01137C  ECB5  F0BF         	call	_schedule_eeprom_write_task
 52308                           
 52309                           ;api.c: 1163: break;
 52310  011380  D01F               	goto	l3755
 52311  011382                     
 52312                           ;api.c: 1165: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERAT
      +                          URE_1);
 52313  011382  0E07               	movlw	7
 52314  011384  ECB5  F0BF         	call	_schedule_eeprom_write_task
 52315                           
 52316                           ;api.c: 1166: break;
 52317  011388  D01B               	goto	l3755
 52318  01138A                     
 52319                           ;api.c: 1168: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERAT
      +                          URE_2);
 52320  01138A  0E08               	movlw	8
 52321  01138C  ECB5  F0BF         	call	_schedule_eeprom_write_task
 52322                           
 52323                           ;api.c: 1170: }
 52324                           
 52325                           ;api.c: 1169: break;
 52326  011390  D017               	goto	l3755
 52327  011392                     l3753:
 52328  011392  0100               	movlb	0	; () banked
 52329  011394  516E               	movf	__parse_calibration@item& (0+255),w,b
 52330                           
 52331                           ; Switch size 1, requested type "space"
 52332                           ; Number of cases is 7, Range of values is 0 to 6
 52333                           ; switch strategies available:
 52334                           ; Name         Instructions Cycles
 52335                           ; simple_byte           22    12 (average)
 52336                           ;	Chosen strategy is simple_byte
 52337  011396  0A00               	xorlw	0	; case 0
 52338  011398  B4D8               	btfsc	status,2,c
 52339  01139A  D7DF               	goto	l3754
 52340  01139C  0A01               	xorlw	1	; case 1
 52341  01139E  B4D8               	btfsc	status,2,c
 52342  0113A0  D7E0               	goto	l3756
 52343  0113A2  0A03               	xorlw	3	; case 2
 52344  0113A4  B4D8               	btfsc	status,2,c
 52345  0113A6  D7E1               	goto	l3757
 52346  0113A8  0A01               	xorlw	1	; case 3
 52347  0113AA  B4D8               	btfsc	status,2,c
 52348  0113AC  D7E2               	goto	l3758
 52349  0113AE  0A07               	xorlw	7	; case 4
 52350  0113B0  B4D8               	btfsc	status,2,c
 52351  0113B2  D7E3               	goto	l3759
 52352  0113B4  0A01               	xorlw	1	; case 5
 52353  0113B6  B4D8               	btfsc	status,2,c
 52354  0113B8  D7E4               	goto	l3760
 52355  0113BA  0A03               	xorlw	3	; case 6
 52356  0113BC  B4D8               	btfsc	status,2,c
 52357  0113BE  D7E5               	goto	l3761
 52358  0113C0                     l3755:
 52359                           
 52360                           ;api.c: 1173: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 52361                           
 52362                           ; BSR set to: 0
 52363  0113C0  C067  FFD9         	movff	__parse_calibration@out_idx_ptr,fsr2l
 52364  0113C4  C068  FFDA         	movff	__parse_calibration@out_idx_ptr+1,fsr2h
 52365  0113C8  50DF               	movf	indf2,w,c
 52366  0113CA  B4D8               	btfsc	status,2,c
 52367  0113CC  D03E               	goto	l3762
 52368  0113CE  C067  FFD9         	movff	__parse_calibration@out_idx_ptr,fsr2l
 52369  0113D2  C068  FFDA         	movff	__parse_calibration@out_idx_ptr+1,fsr2h
 52370  0113D6  0E3E               	movlw	62
 52371  0113D8  60DF               	cpfslt	indf2,c
 52372  0113DA  D037               	goto	l3762
 52373                           
 52374                           ;api.c: 1174: {;api.c: 1175: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_CALIBRATION;
 52375  0113DC  C067  FFD9         	movff	__parse_calibration@out_idx_ptr,fsr2l
 52376  0113E0  C068  FFDA         	movff	__parse_calibration@out_idx_ptr+1,fsr2h
 52377  0113E4  CFDF F069          	movff	indf2,??__parse_calibration
 52378  0113E8  0E01               	movlw	1
 52379  0113EA  26DF               	addwf	indf2,f,c
 52380  0113EC  0100               	movlb	0	; () banked
 52381  0113EE  5169               	movf	??__parse_calibration& (0+255),w,b
 52382  0113F0  0D01               	mullw	1
 52383  0113F2  50F3               	movf	prodl,w,c
 52384  0113F4  2565               	addwf	__parse_calibration@out_buffer& (0+255),w,b
 52385  0113F6  6ED9               	movwf	fsr2l,c
 52386  0113F8  50F4               	movf	prodh,w,c
 52387  0113FA  2166               	addwfc	(__parse_calibration@out_buffer+1)& (0+255),w,b
 52388  0113FC  6EDA               	movwf	fsr2h,c
 52389  0113FE  0E60               	movlw	96
 52390  011400  6EDF               	movwf	indf2,c
 52391                           
 52392                           ;api.c: 1176: out_buffer[(*out_idx_ptr)++] = item;
 52393  011402  C067  FFD9         	movff	__parse_calibration@out_idx_ptr,fsr2l
 52394  011406  C068  FFDA         	movff	__parse_calibration@out_idx_ptr+1,fsr2h
 52395  01140A  CFDF F069          	movff	indf2,??__parse_calibration
 52396  01140E  0E01               	movlw	1
 52397  011410  26DF               	addwf	indf2,f,c
 52398  011412  5169               	movf	??__parse_calibration& (0+255),w,b
 52399  011414  0D01               	mullw	1
 52400  011416  50F3               	movf	prodl,w,c
 52401  011418  2565               	addwf	__parse_calibration@out_buffer& (0+255),w,b
 52402  01141A  6ED9               	movwf	fsr2l,c
 52403  01141C  50F4               	movf	prodh,w,c
 52404  01141E  2166               	addwfc	(__parse_calibration@out_buffer+1)& (0+255),w,b
 52405  011420  6EDA               	movwf	fsr2h,c
 52406  011422  C06E  FFDF         	movff	__parse_calibration@item,indf2
 52407                           
 52408                           ;api.c: 1177: out_buffer[(*out_idx_ptr)++] = slope_or_offset;
 52409  011426  C067  FFD9         	movff	__parse_calibration@out_idx_ptr,fsr2l
 52410  01142A  C068  FFDA         	movff	__parse_calibration@out_idx_ptr+1,fsr2h
 52411  01142E  CFDF F069          	movff	indf2,??__parse_calibration
 52412  011432  0E01               	movlw	1
 52413  011434  26DF               	addwf	indf2,f,c
 52414  011436  5169               	movf	??__parse_calibration& (0+255),w,b
 52415  011438  0D01               	mullw	1
 52416  01143A  50F3               	movf	prodl,w,c
 52417  01143C  2565               	addwf	__parse_calibration@out_buffer& (0+255),w,b
 52418  01143E  6ED9               	movwf	fsr2l,c
 52419  011440  50F4               	movf	prodh,w,c
 52420  011442  2166               	addwfc	(__parse_calibration@out_buffer+1)& (0+255),w,b
 52421  011444  6EDA               	movwf	fsr2h,c
 52422  011446  C06B  FFDF         	movff	__parse_calibration@slope_or_offset,indf2
 52423  01144A                     l3762:
 52424                           
 52425                           ;api.c: 1178: };api.c: 1180: return 5;
 52426                           
 52427                           ; BSR set to: 0
 52428  01144A  0E05               	movlw	5
 52429  01144C  0012               	return	
 52430  01144E                     __end_of__parse_calibration:
 52431                           	opt stack 0
 52432                           tosu	equ	0xFFF
 52433                           tosh	equ	0xFFE
 52434                           tosl	equ	0xFFD
 52435                           pclath	equ	0xFFA
 52436                           tblptru	equ	0xFF8
 52437                           tblptrh	equ	0xFF7
 52438                           tblptrl	equ	0xFF6
 52439                           tablat	equ	0xFF5
 52440                           prodh	equ	0xFF4
 52441                           prodl	equ	0xFF3
 52442                           intcon	equ	0xFF2
 52443                           intcon2	equ	0xFF1
 52444                           intcon3	equ	0xFF0
 52445                           indf0	equ	0xFEF
 52446                           postinc0	equ	0xFEE
 52447                           fsr0h	equ	0xFEA
 52448                           fsr0l	equ	0xFE9
 52449                           wreg	equ	0xFE8
 52450                           indf1	equ	0xFE7
 52451                           postinc1	equ	0xFE6
 52452                           postdec1	equ	0xFE5
 52453                           plusw1	equ	0xFE3
 52454                           fsr1h	equ	0xFE2
 52455                           fsr1l	equ	0xFE1
 52456                           indf2	equ	0xFDF
 52457                           postinc2	equ	0xFDE
 52458                           postdec2	equ	0xFDD
 52459                           plusw2	equ	0xFDB
 52460                           fsr2h	equ	0xFDA
 52461                           fsr2l	equ	0xFD9
 52462                           status	equ	0xFD8
 52463                           
 52464 ;; *************** function _schedule_eeprom_write_task *****************
 52465 ;; Defined at:
 52466 ;;		line 652 in file "i2c.c"
 52467 ;; Parameters:    Size  Location     Type
 52468 ;;  task            1    wreg     enum E6645
 52469 ;; Auto vars:     Size  Location     Type
 52470 ;;  task            1    1[BANK0 ] enum E6645
 52471 ;;  idx             1    2[BANK0 ] unsigned char 
 52472 ;; Return value:  Size  Location     Type
 52473 ;;                  1    wreg      void 
 52474 ;; Registers used:
 52475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 52476 ;; Tracked objects:
 52477 ;;		On entry : 0/0
 52478 ;;		On exit  : 0/0
 52479 ;;		Unchanged: 0/0
 52480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52482 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52483 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52484 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52485 ;;Total ram usage:        3 bytes
 52486 ;; Hardware stack levels used:    1
 52487 ;; Hardware stack levels required when called:   10
 52488 ;; This function calls:
 52489 ;;		Nothing
 52490 ;; This function is called by:
 52491 ;;		_i2c_eeprom_read_calibration
 52492 ;;		__parse_calibration
 52493 ;; This function uses a non-reentrant model
 52494 ;;
 52495                           
 52496                           	psect	text250
 52497  017F6A                     __ptext250:
 52498                           	opt stack 0
 52499  017F6A                     _schedule_eeprom_write_task:
 52500                           	opt stack 18
 52501                           
 52502                           ;incstack = 0
 52503                           ;schedule_eeprom_write_task@task stored from wreg
 52504  017F6A  0100               	movlb	0	; () banked
 52505  017F6C  6F61               	movwf	schedule_eeprom_write_task@task& (0+255),b
 52506                           
 52507                           ;i2c.c: 654: uint8_t idx;;i2c.c: 656: for(idx=task_list_read_index; idx!=task_list_write
      +                          _index; idx=(idx+1) & 0x0F)
 52508  017F6E  C020  F062         	movff	_task_list_read_index,schedule_eeprom_write_task@idx
 52509  017F72  D010               	goto	l1448
 52510  017F74                     
 52511                           ;i2c.c: 657: {;i2c.c: 658: if (task_list[idx] == task)
 52512  017F74  0100               	movlb	0	; () banked
 52513  017F76  5162               	movf	schedule_eeprom_write_task@idx& (0+255),w,b
 52514  017F78  0D01               	mullw	1
 52515  017F7A  0E00               	movlw	low _task_list
 52516  017F7C  24F3               	addwf	prodl,w,c
 52517  017F7E  6ED9               	movwf	fsr2l,c
 52518  017F80  0E03               	movlw	high _task_list
 52519  017F82  20F4               	addwfc	prodh,w,c
 52520  017F84  6EDA               	movwf	fsr2h,c
 52521  017F86  5161               	movf	schedule_eeprom_write_task@task& (0+255),w,b
 52522  017F88  18DE               	xorwf	postinc2,w,c
 52523  017F8A  B4D8               	btfsc	status,2,c
 52524  017F8C  0012               	return	
 52525                           
 52526                           ; BSR set to: 0
 52527                           
 52528                           ; BSR set to: 0
 52529                           
 52530                           ; BSR set to: 0
 52531                           ;i2c.c: 659: {;i2c.c: 661: return;
 52532  017F8E  2962               	incf	schedule_eeprom_write_task@idx& (0+255),w,b
 52533  017F90  0B0F               	andlw	15
 52534  017F92  6F62               	movwf	schedule_eeprom_write_task@idx& (0+255),b
 52535  017F94                     l1448:
 52536  017F94  501F               	movf	_task_list_write_index,w,c
 52537  017F96  0100               	movlb	0	; () banked
 52538  017F98  1962               	xorwf	schedule_eeprom_write_task@idx& (0+255),w,b
 52539  017F9A  A4D8               	btfss	status,2,c
 52540  017F9C  D7EB               	goto	l1449
 52541                           
 52542                           ; BSR set to: 0
 52543                           ;i2c.c: 662: };i2c.c: 663: };i2c.c: 665: task_list[task_list_write_index] = task;
 52544                           
 52545                           ; BSR set to: 0
 52546  017F9E  501F               	movf	_task_list_write_index,w,c
 52547  017FA0  0D01               	mullw	1
 52548  017FA2  0E00               	movlw	low _task_list
 52549  017FA4  24F3               	addwf	prodl,w,c
 52550  017FA6  6ED9               	movwf	fsr2l,c
 52551  017FA8  0E03               	movlw	high _task_list
 52552  017FAA  20F4               	addwfc	prodh,w,c
 52553  017FAC  6EDA               	movwf	fsr2h,c
 52554  017FAE  C061  FFDF         	movff	schedule_eeprom_write_task@task,indf2
 52555                           
 52556                           ; BSR set to: 0
 52557                           ;i2c.c: 666: ++task_list_write_index;
 52558  017FB2  2A1F               	incf	_task_list_write_index,f,c
 52559                           
 52560                           ; BSR set to: 0
 52561                           ;i2c.c: 667: task_list_write_index &= 0x0F;
 52562  017FB4  0E0F               	movlw	15
 52563  017FB6  161F               	andwf	_task_list_write_index,f,c
 52564                           
 52565                           ; BSR set to: 0
 52566  017FB8  0012               	return		;funcret
 52567  017FBA                     __end_of_schedule_eeprom_write_task:
 52568                           	opt stack 0
 52569                           tosu	equ	0xFFF
 52570                           tosh	equ	0xFFE
 52571                           tosl	equ	0xFFD
 52572                           pclath	equ	0xFFA
 52573                           tblptru	equ	0xFF8
 52574                           tblptrh	equ	0xFF7
 52575                           tblptrl	equ	0xFF6
 52576                           tablat	equ	0xFF5
 52577                           prodh	equ	0xFF4
 52578                           prodl	equ	0xFF3
 52579                           intcon	equ	0xFF2
 52580                           intcon2	equ	0xFF1
 52581                           intcon3	equ	0xFF0
 52582                           indf0	equ	0xFEF
 52583                           postinc0	equ	0xFEE
 52584                           fsr0h	equ	0xFEA
 52585                           fsr0l	equ	0xFE9
 52586                           wreg	equ	0xFE8
 52587                           indf1	equ	0xFE7
 52588                           postinc1	equ	0xFE6
 52589                           postdec1	equ	0xFE5
 52590                           plusw1	equ	0xFE3
 52591                           fsr1h	equ	0xFE2
 52592                           fsr1l	equ	0xFE1
 52593                           indf2	equ	0xFDF
 52594                           postinc2	equ	0xFDE
 52595                           postdec2	equ	0xFDD
 52596                           plusw2	equ	0xFDB
 52597                           fsr2h	equ	0xFDA
 52598                           fsr2l	equ	0xFD9
 52599                           status	equ	0xFD8
 52600                           
 52601 ;; *************** function __parse_buffer_to_sector *****************
 52602 ;; Defined at:
 52603 ;;		line 1010 in file "api.c"
 52604 ;; Parameters:    Size  Location     Type
 52605 ;;  data            2   81[BANK0 ] PTR unsigned char 
 52606 ;;		 -> ReceivedDataBuffer(64), 
 52607 ;;  out_buffer      2   83[BANK0 ] PTR unsigned char 
 52608 ;;		 -> ToSendDataBuffer(64), 
 52609 ;;  out_idx_ptr     2   85[BANK0 ] PTR unsigned char 
 52610 ;;		 -> api_parse@out_idx(1), 
 52611 ;; Auto vars:     Size  Location     Type
 52612 ;;  sector          2   90[BANK0 ] unsigned int 
 52613 ;;  file_number     1   89[BANK0 ] unsigned char 
 52614 ;;  return_value    1   88[BANK0 ] unsigned char 
 52615 ;; Return value:  Size  Location     Type
 52616 ;;                  1    wreg      unsigned char 
 52617 ;; Registers used:
 52618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 52619 ;; Tracked objects:
 52620 ;;		On entry : 0/0
 52621 ;;		On exit  : 0/0
 52622 ;;		Unchanged: 0/0
 52623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52624 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52625 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52626 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52627 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52628 ;;Total ram usage:       11 bytes
 52629 ;; Hardware stack levels used:    1
 52630 ;; Hardware stack levels required when called:   18
 52631 ;; This function calls:
 52632 ;;		_fat_write_sector_from_buffer
 52633 ;; This function is called by:
 52634 ;;		__parse_command_long
 52635 ;; This function uses a non-reentrant model
 52636 ;;
 52637                           
 52638                           	psect	text251
 52639  011EF0                     __ptext251:
 52640                           	opt stack 0
 52641  011EF0                     __parse_buffer_to_sector:
 52642                           	opt stack 9
 52643                           
 52644                           ;api.c: 1013: uint8_t file_number;;api.c: 1014: uint16_t sector;;api.c: 1015: uint8_t re
      +                          turn_value;;api.c: 1017: if((data[0]!=COMMAND_BUFFER_TO_SECTOR) || (data[4]!=0x6A) || (d
      +                          ata[5]!=0x6D))
 52645                           
 52646                           ; BSR set to: 0
 52647                           ;incstack = 0
 52648  011EF0  C0B1  FFD9         	movff	__parse_buffer_to_sector@data,fsr2l
 52649  011EF4  C0B2  FFDA         	movff	__parse_buffer_to_sector@data+1,fsr2h
 52650  011EF8  0E58               	movlw	88
 52651  011EFA  18DE               	xorwf	postinc2,w,c
 52652  011EFC  A4D8               	btfss	status,2,c
 52653  011EFE  D015               	goto	u23240
 52654  011F00  0100               	movlb	0	; () banked
 52655  011F02  EE20 F004          	lfsr	2,4
 52656  011F06  51B1               	movf	__parse_buffer_to_sector@data& (0+255),w,b
 52657  011F08  26D9               	addwf	fsr2l,f,c
 52658  011F0A  51B2               	movf	(__parse_buffer_to_sector@data+1)& (0+255),w,b
 52659  011F0C  22DA               	addwfc	fsr2h,f,c
 52660  011F0E  0E6A               	movlw	106
 52661  011F10  18DE               	xorwf	postinc2,w,c
 52662  011F12  A4D8               	btfss	status,2,c
 52663  011F14  D00A               	goto	u23240
 52664                           
 52665                           ; BSR set to: 0
 52666  011F16  EE20 F005          	lfsr	2,5
 52667  011F1A  51B1               	movf	__parse_buffer_to_sector@data& (0+255),w,b
 52668  011F1C  26D9               	addwf	fsr2l,f,c
 52669  011F1E  51B2               	movf	(__parse_buffer_to_sector@data+1)& (0+255),w,b
 52670  011F20  22DA               	addwfc	fsr2h,f,c
 52671  011F22  0E6D               	movlw	109
 52672  011F24  18DE               	xorwf	postinc2,w,c
 52673  011F26  B4D8               	btfsc	status,2,c
 52674  011F28  D002               	goto	l3728
 52675  011F2A                     u23240:
 52676                           
 52677                           ;api.c: 1018: {;api.c: 1019: return 6;
 52678                           
 52679                           ; BSR set to: 0
 52680  011F2A  0E06               	movlw	6
 52681  011F2C  0012               	return	
 52682  011F2E                     l3728:
 52683                           
 52684                           ;api.c: 1020: };api.c: 1023: file_number = data[1];
 52685  011F2E  0100               	movlb	0	; () banked
 52686  011F30  EE20 F001          	lfsr	2,1
 52687  011F34  51B1               	movf	__parse_buffer_to_sector@data& (0+255),w,b
 52688  011F36  26D9               	addwf	fsr2l,f,c
 52689  011F38  51B2               	movf	(__parse_buffer_to_sector@data+1)& (0+255),w,b
 52690  011F3A  22DA               	addwfc	fsr2h,f,c
 52691  011F3C  50DF               	movf	indf2,w,c
 52692  011F3E  6FB9               	movwf	__parse_buffer_to_sector@file_number& (0+255),b
 52693                           
 52694                           ;api.c: 1026: sector = data[2];
 52695  011F40  EE20 F002          	lfsr	2,2
 52696  011F44  51B1               	movf	__parse_buffer_to_sector@data& (0+255),w,b
 52697  011F46  26D9               	addwf	fsr2l,f,c
 52698  011F48  51B2               	movf	(__parse_buffer_to_sector@data+1)& (0+255),w,b
 52699  011F4A  22DA               	addwfc	fsr2h,f,c
 52700  011F4C  50DF               	movf	indf2,w,c
 52701  011F4E  6FB7               	movwf	??__parse_buffer_to_sector& (0+255),b
 52702  011F50  51B7               	movf	??__parse_buffer_to_sector& (0+255),w,b
 52703  011F52  6FBA               	movwf	__parse_buffer_to_sector@sector& (0+255),b
 52704  011F54  6BBB               	clrf	(__parse_buffer_to_sector@sector+1)& (0+255),b
 52705                           
 52706                           ; BSR set to: 0
 52707                           ;api.c: 1027: sector <<= 8;
 52708  011F56  51BA               	movf	__parse_buffer_to_sector@sector& (0+255),w,b
 52709  011F58  6FBB               	movwf	(__parse_buffer_to_sector@sector+1)& (0+255),b
 52710  011F5A  6BBA               	clrf	__parse_buffer_to_sector@sector& (0+255),b
 52711                           
 52712                           ; BSR set to: 0
 52713                           ;api.c: 1028: sector |= data[3];
 52714  011F5C  EE20 F003          	lfsr	2,3
 52715  011F60  51B1               	movf	__parse_buffer_to_sector@data& (0+255),w,b
 52716  011F62  26D9               	addwf	fsr2l,f,c
 52717  011F64  51B2               	movf	(__parse_buffer_to_sector@data+1)& (0+255),w,b
 52718  011F66  22DA               	addwfc	fsr2h,f,c
 52719  011F68  50DF               	movf	indf2,w,c
 52720  011F6A  6FB7               	movwf	??__parse_buffer_to_sector& (0+255),b
 52721  011F6C  51B7               	movf	??__parse_buffer_to_sector& (0+255),w,b
 52722  011F6E  13BA               	iorwf	__parse_buffer_to_sector@sector& (0+255),f,b
 52723                           
 52724                           ; BSR set to: 0
 52725                           ;api.c: 1031: return_value = fat_write_sector_from_buffer(file_number, sector);
 52726  011F70  C0BA  F0A2         	movff	__parse_buffer_to_sector@sector,fat_write_sector_from_buffer@sector
 52727  011F74  C0BB  F0A3         	movff	__parse_buffer_to_sector@sector+1,fat_write_sector_from_buffer@sector+1
 52728  011F78  51B9               	movf	__parse_buffer_to_sector@file_number& (0+255),w,b
 52729  011F7A  ECFF  F0B4         	call	_fat_write_sector_from_buffer
 52730  011F7E  0100               	movlb	0	; () banked
 52731  011F80  6FB8               	movwf	__parse_buffer_to_sector@return_value& (0+255),b
 52732                           
 52733                           ; BSR set to: 0
 52734                           ;api.c: 1034: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<60))
 52735  011F82  C0B5  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 52736  011F86  C0B6  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 52737  011F8A  50DF               	movf	indf2,w,c
 52738  011F8C  B4D8               	btfsc	status,2,c
 52739  011F8E  D061               	goto	l3732
 52740                           
 52741                           ; BSR set to: 0
 52742  011F90  C0B5  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 52743  011F94  C0B6  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 52744  011F98  0E3C               	movlw	60
 52745  011F9A  60DF               	cpfslt	indf2,c
 52746  011F9C  D05A               	goto	l3732
 52747                           
 52748                           ; BSR set to: 0
 52749                           ;api.c: 1035: {;api.c: 1036: out_buffer[(*out_idx_ptr)++] = COMMAND_BUFFER_TO_SECTOR;
 52750  011F9E  C0B5  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 52751  011FA2  C0B6  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 52752  011FA6  CFDF F0B7          	movff	indf2,??__parse_buffer_to_sector
 52753  011FAA  0E01               	movlw	1
 52754  011FAC  26DF               	addwf	indf2,f,c
 52755  011FAE  51B7               	movf	??__parse_buffer_to_sector& (0+255),w,b
 52756  011FB0  0D01               	mullw	1
 52757  011FB2  50F3               	movf	prodl,w,c
 52758  011FB4  25B3               	addwf	__parse_buffer_to_sector@out_buffer& (0+255),w,b
 52759  011FB6  6ED9               	movwf	fsr2l,c
 52760  011FB8  50F4               	movf	prodh,w,c
 52761  011FBA  21B4               	addwfc	(__parse_buffer_to_sector@out_buffer+1)& (0+255),w,b
 52762  011FBC  6EDA               	movwf	fsr2h,c
 52763  011FBE  0E58               	movlw	88
 52764  011FC0  6EDF               	movwf	indf2,c
 52765                           
 52766                           ;api.c: 1037: out_buffer[(*out_idx_ptr)++] = file_number;
 52767  011FC2  C0B5  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 52768  011FC6  C0B6  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 52769  011FCA  CFDF F0B7          	movff	indf2,??__parse_buffer_to_sector
 52770  011FCE  0E01               	movlw	1
 52771  011FD0  26DF               	addwf	indf2,f,c
 52772  011FD2  51B7               	movf	??__parse_buffer_to_sector& (0+255),w,b
 52773  011FD4  0D01               	mullw	1
 52774  011FD6  50F3               	movf	prodl,w,c
 52775  011FD8  25B3               	addwf	__parse_buffer_to_sector@out_buffer& (0+255),w,b
 52776  011FDA  6ED9               	movwf	fsr2l,c
 52777  011FDC  50F4               	movf	prodh,w,c
 52778  011FDE  21B4               	addwfc	(__parse_buffer_to_sector@out_buffer+1)& (0+255),w,b
 52779  011FE0  6EDA               	movwf	fsr2h,c
 52780  011FE2  C0B9  FFDF         	movff	__parse_buffer_to_sector@file_number,indf2
 52781                           
 52782                           ;api.c: 1038: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((sector)>>8)&0xFF));
 52783  011FE6  C0B5  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 52784  011FEA  C0B6  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 52785  011FEE  CFDF F0B7          	movff	indf2,??__parse_buffer_to_sector
 52786  011FF2  0E01               	movlw	1
 52787  011FF4  26DF               	addwf	indf2,f,c
 52788  011FF6  51B7               	movf	??__parse_buffer_to_sector& (0+255),w,b
 52789  011FF8  0D01               	mullw	1
 52790  011FFA  50F3               	movf	prodl,w,c
 52791  011FFC  25B3               	addwf	__parse_buffer_to_sector@out_buffer& (0+255),w,b
 52792  011FFE  6ED9               	movwf	fsr2l,c
 52793  012000  50F4               	movf	prodh,w,c
 52794  012002  21B4               	addwfc	(__parse_buffer_to_sector@out_buffer+1)& (0+255),w,b
 52795  012004  6EDA               	movwf	fsr2h,c
 52796  012006  51BB               	movf	(__parse_buffer_to_sector@sector+1)& (0+255),w,b
 52797  012008  6EDF               	movwf	indf2,c
 52798                           
 52799                           ;api.c: 1039: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((sector)&0xFF));
 52800  01200A  C0B5  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 52801  01200E  C0B6  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 52802  012012  CFDF F0B7          	movff	indf2,??__parse_buffer_to_sector
 52803  012016  0E01               	movlw	1
 52804  012018  26DF               	addwf	indf2,f,c
 52805  01201A  51B7               	movf	??__parse_buffer_to_sector& (0+255),w,b
 52806  01201C  0D01               	mullw	1
 52807  01201E  50F3               	movf	prodl,w,c
 52808  012020  25B3               	addwf	__parse_buffer_to_sector@out_buffer& (0+255),w,b
 52809  012022  6ED9               	movwf	fsr2l,c
 52810  012024  50F4               	movf	prodh,w,c
 52811  012026  21B4               	addwfc	(__parse_buffer_to_sector@out_buffer+1)& (0+255),w,b
 52812  012028  6EDA               	movwf	fsr2h,c
 52813  01202A  C0BA  FFDF         	movff	__parse_buffer_to_sector@sector,indf2
 52814                           
 52815                           ;api.c: 1040: out_buffer[(*out_idx_ptr)++] = return_value;
 52816  01202E  C0B5  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 52817  012032  C0B6  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 52818  012036  CFDF F0B7          	movff	indf2,??__parse_buffer_to_sector
 52819  01203A  0E01               	movlw	1
 52820  01203C  26DF               	addwf	indf2,f,c
 52821  01203E  51B7               	movf	??__parse_buffer_to_sector& (0+255),w,b
 52822  012040  0D01               	mullw	1
 52823  012042  50F3               	movf	prodl,w,c
 52824  012044  25B3               	addwf	__parse_buffer_to_sector@out_buffer& (0+255),w,b
 52825  012046  6ED9               	movwf	fsr2l,c
 52826  012048  50F4               	movf	prodh,w,c
 52827  01204A  21B4               	addwfc	(__parse_buffer_to_sector@out_buffer+1)& (0+255),w,b
 52828  01204C  6EDA               	movwf	fsr2h,c
 52829  01204E  C0B8  FFDF         	movff	__parse_buffer_to_sector@return_value,indf2
 52830  012052                     l3732:
 52831                           
 52832                           ; BSR set to: 0
 52833                           ;api.c: 1041: };api.c: 1043: return 6;
 52834                           
 52835                           ; BSR set to: 0
 52836  012052  0E06               	movlw	6
 52837  012054  0012               	return	
 52838  012056                     __end_of__parse_buffer_to_sector:
 52839                           	opt stack 0
 52840                           tosu	equ	0xFFF
 52841                           tosh	equ	0xFFE
 52842                           tosl	equ	0xFFD
 52843                           pclath	equ	0xFFA
 52844                           tblptru	equ	0xFF8
 52845                           tblptrh	equ	0xFF7
 52846                           tblptrl	equ	0xFF6
 52847                           tablat	equ	0xFF5
 52848                           prodh	equ	0xFF4
 52849                           prodl	equ	0xFF3
 52850                           intcon	equ	0xFF2
 52851                           intcon2	equ	0xFF1
 52852                           intcon3	equ	0xFF0
 52853                           indf0	equ	0xFEF
 52854                           postinc0	equ	0xFEE
 52855                           fsr0h	equ	0xFEA
 52856                           fsr0l	equ	0xFE9
 52857                           wreg	equ	0xFE8
 52858                           indf1	equ	0xFE7
 52859                           postinc1	equ	0xFE6
 52860                           postdec1	equ	0xFE5
 52861                           plusw1	equ	0xFE3
 52862                           fsr1h	equ	0xFE2
 52863                           fsr1l	equ	0xFE1
 52864                           indf2	equ	0xFDF
 52865                           postinc2	equ	0xFDE
 52866                           postdec2	equ	0xFDD
 52867                           plusw2	equ	0xFDB
 52868                           fsr2h	equ	0xFDA
 52869                           fsr2l	equ	0xFD9
 52870                           status	equ	0xFD8
 52871                           
 52872 ;; *************** function _fat_write_sector_from_buffer *****************
 52873 ;; Defined at:
 52874 ;;		line 1459 in file "fat16.c"
 52875 ;; Parameters:    Size  Location     Type
 52876 ;;  file_number     1    wreg     unsigned char 
 52877 ;;  sector          2   66[BANK0 ] unsigned int 
 52878 ;; Auto vars:     Size  Location     Type
 52879 ;;  file_number     1   80[BANK0 ] unsigned char 
 52880 ;;  file_size       4   74[BANK0 ] unsigned long 
 52881 ;;  number_of_cl    2   78[BANK0 ] unsigned int 
 52882 ;;  cluster         2   72[BANK0 ] unsigned int 
 52883 ;;  physical_sec    2    0        unsigned int 
 52884 ;; Return value:  Size  Location     Type
 52885 ;;                  1    wreg      unsigned char 
 52886 ;; Registers used:
 52887 ;;		wreg, status,2, status,0, cstack
 52888 ;; Tracked objects:
 52889 ;;		On entry : 0/0
 52890 ;;		On exit  : 0/0
 52891 ;;		Unchanged: 0/0
 52892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52893 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52894 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52895 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52896 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52897 ;;Total ram usage:       15 bytes
 52898 ;; Hardware stack levels used:    1
 52899 ;; Hardware stack levels required when called:   17
 52900 ;; This function calls:
 52901 ;;		__get_first_cluster
 52902 ;;		__root_is_available
 52903 ;;		_fat_get_file_size
 52904 ;; This function is called by:
 52905 ;;		_fat_copy_file
 52906 ;;		__parse_buffer_to_sector
 52907 ;; This function uses a non-reentrant model
 52908 ;;
 52909                           
 52910                           	psect	text252
 52911  0169FE                     __ptext252:
 52912                           	opt stack 0
 52913  0169FE                     _fat_write_sector_from_buffer:
 52914                           	opt stack 8
 52915                           
 52916                           ;incstack = 0
 52917                           ;fat_write_sector_from_buffer@file_number stored from wreg
 52918  0169FE  0100               	movlb	0	; () banked
 52919  016A00  6FB0               	movwf	fat_write_sector_from_buffer@file_number& (0+255),b
 52920                           
 52921                           ;fat16.c: 1461: uint32_t file_size;;fat16.c: 1462: uint16_t number_of_clusters;;fat16.c:
      +                           1463: uint16_t cluster;;fat16.c: 1464: uint16_t physical_sector;;fat16.c: 1467: if(_roo
      +                          t_is_available(file_number))
 52922  016A02  0100               	movlb	0	; () banked
 52923  016A04  51B0               	movf	fat_write_sector_from_buffer@file_number& (0+255),w,b
 52924  016A06  EC95  F0B8         	call	__root_is_available
 52925  016A0A  0900               	iorlw	0
 52926  016A0C  B4D8               	btfsc	status,2,c
 52927  016A0E  D002               	goto	l3133
 52928                           
 52929                           ;fat16.c: 1468: {;fat16.c: 1470: return 0xFF;
 52930  016A10  0EFF               	movlw	255
 52931  016A12  0012               	return	
 52932  016A14                     l3133:
 52933                           
 52934                           ;fat16.c: 1471: };fat16.c: 1474: file_size = fat_get_file_size(file_number);
 52935  016A14  0100               	movlb	0	; () banked
 52936  016A16  51B0               	movf	fat_write_sector_from_buffer@file_number& (0+255),w,b
 52937  016A18  ECFC  F0B6         	call	_fat_get_file_size
 52938  016A1C  C095  F0AA         	movff	?_fat_get_file_size,fat_write_sector_from_buffer@file_size
 52939  016A20  C096  F0AB         	movff	?_fat_get_file_size+1,fat_write_sector_from_buffer@file_size+1
 52940  016A24  C097  F0AC         	movff	?_fat_get_file_size+2,fat_write_sector_from_buffer@file_size+2
 52941  016A28  C098  F0AD         	movff	?_fat_get_file_size+3,fat_write_sector_from_buffer@file_size+3
 52942                           
 52943                           ;fat16.c: 1477: number_of_clusters = (file_size + 512 - 1) >> 9;
 52944  016A2C  0EFF               	movlw	255
 52945  016A2E  0100               	movlb	0	; () banked
 52946  016A30  25AA               	addwf	fat_write_sector_from_buffer@file_size& (0+255),w,b
 52947  016A32  6FA4               	movwf	??_fat_write_sector_from_buffer& (0+255),b
 52948  016A34  0E01               	movlw	1
 52949  016A36  21AB               	addwfc	(fat_write_sector_from_buffer@file_size+1)& (0+255),w,b
 52950  016A38  6FA5               	movwf	(??_fat_write_sector_from_buffer+1)& (0+255),b
 52951  016A3A  0E00               	movlw	0
 52952  016A3C  21AC               	addwfc	(fat_write_sector_from_buffer@file_size+2)& (0+255),w,b
 52953  016A3E  6FA6               	movwf	(??_fat_write_sector_from_buffer+2)& (0+255),b
 52954  016A40  0E00               	movlw	0
 52955  016A42  21AD               	addwfc	(fat_write_sector_from_buffer@file_size+3)& (0+255),w,b
 52956  016A44  6FA7               	movwf	(??_fat_write_sector_from_buffer+3)& (0+255),b
 52957  016A46  0E0A               	movlw	10
 52958  016A48  D005               	goto	u21270
 52959  016A4A                     u21275:
 52960  016A4A  90D8               	bcf	status,0,c
 52961  016A4C  33A7               	rrcf	(??_fat_write_sector_from_buffer+3)& (0+255),f,b
 52962  016A4E  33A6               	rrcf	(??_fat_write_sector_from_buffer+2)& (0+255),f,b
 52963  016A50  33A5               	rrcf	(??_fat_write_sector_from_buffer+1)& (0+255),f,b
 52964  016A52  33A4               	rrcf	??_fat_write_sector_from_buffer& (0+255),f,b
 52965  016A54                     u21270:
 52966  016A54  2EE8               	decfsz	wreg,f,c
 52967  016A56  D7F9               	goto	u21275
 52968  016A58  C0A4  F0AE         	movff	??_fat_write_sector_from_buffer,fat_write_sector_from_buffer@number_of_clusters
 52969  016A5C  C0A5  F0AF         	movff	??_fat_write_sector_from_buffer+1,fat_write_sector_from_buffer@number_of_clusters
      +                          +1
 52970                           
 52971                           ; BSR set to: 0
 52972                           ;fat16.c: 1478: if(sector >= number_of_clusters)
 52973  016A60  51AE               	movf	fat_write_sector_from_buffer@number_of_clusters& (0+255),w,b
 52974  016A62  5DA2               	subwf	fat_write_sector_from_buffer@sector& (0+255),w,b
 52975  016A64  51AF               	movf	(fat_write_sector_from_buffer@number_of_clusters+1)& (0+255),w,b
 52976  016A66  59A3               	subwfb	(fat_write_sector_from_buffer@sector+1)& (0+255),w,b
 52977  016A68  A0D8               	btfss	status,0,c
 52978  016A6A  D002               	goto	l3135
 52979                           
 52980                           ; BSR set to: 0
 52981                           ;fat16.c: 1479: {;fat16.c: 1481: return 0xFE;
 52982  016A6C  0EFE               	movlw	254
 52983                           
 52984                           ; BSR set to: 0
 52985  016A6E  0012               	return	
 52986  016A70                     l3135:
 52987                           
 52988                           ; BSR set to: 0
 52989                           ;fat16.c: 1482: };fat16.c: 1485: cluster = _get_first_cluster(file_number);
 52990                           
 52991                           ; BSR set to: 0
 52992  016A70  51B0               	movf	fat_write_sector_from_buffer@file_number& (0+255),w,b
 52993  016A72  EC82  F0BB         	call	__get_first_cluster
 52994  016A76  C08F  F0A8         	movff	?__get_first_cluster,fat_write_sector_from_buffer@cluster
 52995  016A7A  C090  F0A9         	movff	?__get_first_cluster+1,fat_write_sector_from_buffer@cluster+1
 52996                           
 52997                           ;fat16.c: 1495: return 0x00;
 52998  016A7E  0E00               	movlw	0
 52999  016A80  0012               	return	
 53000  016A82                     __end_of_fat_write_sector_from_buffer:
 53001                           	opt stack 0
 53002                           tosu	equ	0xFFF
 53003                           tosh	equ	0xFFE
 53004                           tosl	equ	0xFFD
 53005                           pclath	equ	0xFFA
 53006                           tblptru	equ	0xFF8
 53007                           tblptrh	equ	0xFF7
 53008                           tblptrl	equ	0xFF6
 53009                           tablat	equ	0xFF5
 53010                           prodh	equ	0xFF4
 53011                           prodl	equ	0xFF3
 53012                           intcon	equ	0xFF2
 53013                           intcon2	equ	0xFF1
 53014                           intcon3	equ	0xFF0
 53015                           indf0	equ	0xFEF
 53016                           postinc0	equ	0xFEE
 53017                           fsr0h	equ	0xFEA
 53018                           fsr0l	equ	0xFE9
 53019                           wreg	equ	0xFE8
 53020                           indf1	equ	0xFE7
 53021                           postinc1	equ	0xFE6
 53022                           postdec1	equ	0xFE5
 53023                           plusw1	equ	0xFE3
 53024                           fsr1h	equ	0xFE2
 53025                           fsr1l	equ	0xFE1
 53026                           indf2	equ	0xFDF
 53027                           postinc2	equ	0xFDE
 53028                           postdec2	equ	0xFDD
 53029                           plusw2	equ	0xFDB
 53030                           fsr2h	equ	0xFDA
 53031                           fsr2l	equ	0xFD9
 53032                           status	equ	0xFD8
 53033                           
 53034 ;; *************** function _fat_get_file_size *****************
 53035 ;; Defined at:
 53036 ;;		line 562 in file "fat16.c"
 53037 ;; Parameters:    Size  Location     Type
 53038 ;;  file_number     1    wreg     unsigned char 
 53039 ;; Auto vars:     Size  Location     Type
 53040 ;;  file_number     1   65[BANK0 ] unsigned char 
 53041 ;;  file_size       4   61[BANK0 ] unsigned long 
 53042 ;;  offset          2   59[BANK0 ] unsigned int 
 53043 ;;  sector          2   57[BANK0 ] unsigned int 
 53044 ;; Return value:  Size  Location     Type
 53045 ;;                  4   53[BANK0 ] unsigned long 
 53046 ;; Registers used:
 53047 ;;		wreg, status,2, status,0, cstack
 53048 ;; Tracked objects:
 53049 ;;		On entry : 0/0
 53050 ;;		On exit  : 0/0
 53051 ;;		Unchanged: 0/0
 53052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53053 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53054 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53056 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53057 ;;Total ram usage:       13 bytes
 53058 ;; Hardware stack levels used:    1
 53059 ;; Hardware stack levels required when called:   16
 53060 ;; This function calls:
 53061 ;;		__offset_from_file_number
 53062 ;;		__root_is_available
 53063 ;;		__sector_from_file_number
 53064 ;;		_flash_partial_read
 53065 ;; This function is called by:
 53066 ;;		_fat_append_to_file
 53067 ;;		_fat_copy_file
 53068 ;;		_fat_copy_sector_to_buffer
 53069 ;;		_fat_write_sector_from_buffer
 53070 ;;		__fill_buffer_read_file
 53071 ;; This function uses a non-reentrant model
 53072 ;;
 53073                           
 53074                           	psect	text253
 53075  016DF8                     __ptext253:
 53076                           	opt stack 0
 53077  016DF8                     _fat_get_file_size:
 53078                           	opt stack 11
 53079                           
 53080                           ;incstack = 0
 53081                           ;fat_get_file_size@file_number stored from wreg
 53082  016DF8  0100               	movlb	0	; () banked
 53083  016DFA  6FA1               	movwf	fat_get_file_size@file_number& (0+255),b
 53084                           
 53085                           ;fat16.c: 564: uint32_t file_size;;fat16.c: 565: uint16_t sector;;fat16.c: 566: uint16_t
      +                           offset;;fat16.c: 569: if(_root_is_available(file_number))
 53086  016DFC  0100               	movlb	0	; () banked
 53087  016DFE  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 53088  016E00  EC95  F0B8         	call	__root_is_available
 53089  016E04  0900               	iorlw	0
 53090  016E06  B4D8               	btfsc	status,2,c
 53091  016E08  D006               	goto	l2888
 53092                           
 53093                           ;fat16.c: 570: {;fat16.c: 572: return 0xFFFFFFFF;
 53094  016E0A  0100               	movlb	0	; () banked
 53095  016E0C  6995               	setf	?_fat_get_file_size& (0+255),b
 53096  016E0E  6996               	setf	(?_fat_get_file_size+1)& (0+255),b
 53097  016E10  6997               	setf	(?_fat_get_file_size+2)& (0+255),b
 53098  016E12  6998               	setf	(?_fat_get_file_size+3)& (0+255),b
 53099  016E14  0012               	return	
 53100  016E16                     l2888:
 53101                           
 53102                           ;fat16.c: 573: };fat16.c: 576: sector = _sector_from_file_number(file_number);
 53103                           
 53104                           ; BSR set to: 0
 53105  016E16  0100               	movlb	0	; () banked
 53106  016E18  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 53107  016E1A  EC7E  F0C3         	call	__sector_from_file_number
 53108  016E1E  C060  F099         	movff	?__sector_from_file_number,fat_get_file_size@sector
 53109  016E22  C061  F09A         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 53110                           
 53111                           ;fat16.c: 577: offset = _offset_from_file_number(file_number);
 53112  016E26  0100               	movlb	0	; () banked
 53113  016E28  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 53114  016E2A  ECFA  F0C4         	call	__offset_from_file_number
 53115  016E2E  C060  F09B         	movff	?__offset_from_file_number,fat_get_file_size@offset
 53116  016E32  C061  F09C         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 53117                           
 53118                           ;fat16.c: 580: flash_partial_read(sector, offset+28, 4, &file_size);
 53119  016E36  C099  F087         	movff	fat_get_file_size@sector,flash_partial_read@page
 53120  016E3A  C09A  F088         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 53121  016E3E  0E1C               	movlw	28
 53122  016E40  0100               	movlb	0	; () banked
 53123  016E42  259B               	addwf	fat_get_file_size@offset& (0+255),w,b
 53124  016E44  6F89               	movwf	flash_partial_read@start& (0+255),b
 53125  016E46  0E00               	movlw	0
 53126  016E48  219C               	addwfc	(fat_get_file_size@offset+1)& (0+255),w,b
 53127  016E4A  6F8A               	movwf	(flash_partial_read@start+1)& (0+255),b
 53128  016E4C  0E00               	movlw	0
 53129  016E4E  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 53130  016E50  0E04               	movlw	4
 53131  016E52  6F8B               	movwf	flash_partial_read@length& (0+255),b
 53132  016E54  0E9D               	movlw	low fat_get_file_size@file_size
 53133  016E56  6F8D               	movwf	flash_partial_read@data& (0+255),b
 53134  016E58  0E00               	movlw	high fat_get_file_size@file_size
 53135  016E5A  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 53136  016E5C  ECED  F0C2         	call	_flash_partial_read	;wreg free
 53137                           
 53138                           ;fat16.c: 583: return file_size;
 53139  016E60  C09D  F095         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 53140  016E64  C09E  F096         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 53141  016E68  C09F  F097         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 53142  016E6C  C0A0  F098         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 53143  016E70  0012               	return	
 53144  016E72                     __end_of_fat_get_file_size:
 53145                           	opt stack 0
 53146                           tosu	equ	0xFFF
 53147                           tosh	equ	0xFFE
 53148                           tosl	equ	0xFFD
 53149                           pclath	equ	0xFFA
 53150                           tblptru	equ	0xFF8
 53151                           tblptrh	equ	0xFF7
 53152                           tblptrl	equ	0xFF6
 53153                           tablat	equ	0xFF5
 53154                           prodh	equ	0xFF4
 53155                           prodl	equ	0xFF3
 53156                           intcon	equ	0xFF2
 53157                           intcon2	equ	0xFF1
 53158                           intcon3	equ	0xFF0
 53159                           indf0	equ	0xFEF
 53160                           postinc0	equ	0xFEE
 53161                           fsr0h	equ	0xFEA
 53162                           fsr0l	equ	0xFE9
 53163                           wreg	equ	0xFE8
 53164                           indf1	equ	0xFE7
 53165                           postinc1	equ	0xFE6
 53166                           postdec1	equ	0xFE5
 53167                           plusw1	equ	0xFE3
 53168                           fsr1h	equ	0xFE2
 53169                           fsr1l	equ	0xFE1
 53170                           indf2	equ	0xFDF
 53171                           postinc2	equ	0xFDE
 53172                           postdec2	equ	0xFDD
 53173                           plusw2	equ	0xFDB
 53174                           fsr2h	equ	0xFDA
 53175                           fsr2l	equ	0xFD9
 53176                           status	equ	0xFD8
 53177                           
 53178 ;; *************** function __root_is_available *****************
 53179 ;; Defined at:
 53180 ;;		line 408 in file "fat16.c"
 53181 ;; Parameters:    Size  Location     Type
 53182 ;;  file_number     1    wreg     unsigned char 
 53183 ;; Auto vars:     Size  Location     Type
 53184 ;;  file_number     1   51[BANK0 ] unsigned char 
 53185 ;;  offset          2   49[BANK0 ] unsigned int 
 53186 ;;  root_sector     2   47[BANK0 ] unsigned int 
 53187 ;;  first_byte      1   52[BANK0 ] unsigned char 
 53188 ;; Return value:  Size  Location     Type
 53189 ;;                  1    wreg      unsigned char 
 53190 ;; Registers used:
 53191 ;;		wreg, status,2, status,0, cstack
 53192 ;; Tracked objects:
 53193 ;;		On entry : 0/0
 53194 ;;		On exit  : 0/0
 53195 ;;		Unchanged: 0/0
 53196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53198 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53200 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53201 ;;Total ram usage:        6 bytes
 53202 ;; Hardware stack levels used:    1
 53203 ;; Hardware stack levels required when called:   15
 53204 ;; This function calls:
 53205 ;;		__offset_from_file_number
 53206 ;;		__sector_from_file_number
 53207 ;;		_flash_partial_read
 53208 ;; This function is called by:
 53209 ;;		__get_available_root_entry
 53210 ;;		_fat_get_file_size
 53211 ;;		_fat_delete_file
 53212 ;;		_fat_append_to_file
 53213 ;;		_fat_copy_file
 53214 ;;		_fat_resize_file
 53215 ;;		_fat_copy_sector_to_buffer
 53216 ;;		_fat_write_sector_from_buffer
 53217 ;; This function uses a non-reentrant model
 53218 ;;
 53219                           
 53220                           	psect	text254
 53221  01712A                     __ptext254:
 53222                           	opt stack 0
 53223  01712A                     __root_is_available:
 53224                           	opt stack 11
 53225                           
 53226                           ;incstack = 0
 53227                           ;__root_is_available@file_number stored from wreg
 53228  01712A  0100               	movlb	0	; () banked
 53229  01712C  6F93               	movwf	__root_is_available@file_number& (0+255),b
 53230                           
 53231                           ;fat16.c: 410: uint16_t root_sector;;fat16.c: 411: uint16_t offset;;fat16.c: 412: uint8_
      +                          t first_byte;;fat16.c: 416: if(file_number>=64)
 53232  01712E  0E3F               	movlw	63
 53233  017130  0100               	movlb	0	; () banked
 53234  017132  6593               	cpfsgt	__root_is_available@file_number& (0+255),b
 53235  017134  D002               	goto	l2849
 53236                           
 53237                           ; BSR set to: 0
 53238                           ;fat16.c: 417: {;fat16.c: 419: return 0;
 53239  017136  0E00               	movlw	0
 53240                           
 53241                           ; BSR set to: 0
 53242  017138  0012               	return	
 53243  01713A                     l2849:
 53244                           
 53245                           ; BSR set to: 0
 53246                           ;fat16.c: 420: };fat16.c: 423: root_sector = _sector_from_file_number(file_number);
 53247                           
 53248                           ; BSR set to: 0
 53249  01713A  5193               	movf	__root_is_available@file_number& (0+255),w,b
 53250  01713C  EC7E  F0C3         	call	__sector_from_file_number
 53251  017140  C060  F08F         	movff	?__sector_from_file_number,__root_is_available@root_sector
 53252  017144  C061  F090         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 53253                           
 53254                           ;fat16.c: 424: offset = _offset_from_file_number(file_number);
 53255  017148  0100               	movlb	0	; () banked
 53256  01714A  5193               	movf	__root_is_available@file_number& (0+255),w,b
 53257  01714C  ECFA  F0C4         	call	__offset_from_file_number
 53258  017150  C060  F091         	movff	?__offset_from_file_number,__root_is_available@offset
 53259  017154  C061  F092         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 53260                           
 53261                           ;fat16.c: 427: flash_partial_read(root_sector, offset, 1, &first_byte);
 53262  017158  C08F  F087         	movff	__root_is_available@root_sector,flash_partial_read@page
 53263  01715C  C090  F088         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 53264  017160  C091  F089         	movff	__root_is_available@offset,flash_partial_read@start
 53265  017164  C092  F08A         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 53266  017168  0E00               	movlw	0
 53267  01716A  0100               	movlb	0	; () banked
 53268  01716C  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 53269  01716E  0E01               	movlw	1
 53270  017170  6F8B               	movwf	flash_partial_read@length& (0+255),b
 53271  017172  0E94               	movlw	low __root_is_available@first_byte
 53272  017174  6F8D               	movwf	flash_partial_read@data& (0+255),b
 53273  017176  0E00               	movlw	high __root_is_available@first_byte
 53274  017178  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 53275  01717A  ECED  F0C2         	call	_flash_partial_read	;wreg free
 53276                           
 53277                           ;fat16.c: 430: if((first_byte==0x00) || (first_byte==0xE5))
 53278  01717E  0100               	movlb	0	; () banked
 53279  017180  5194               	movf	__root_is_available@first_byte& (0+255),w,b
 53280  017182  B4D8               	btfsc	status,2,c
 53281  017184  D004               	goto	u19960
 53282                           
 53283                           ; BSR set to: 0
 53284  017186  0EE5               	movlw	229
 53285  017188  1994               	xorwf	__root_is_available@first_byte& (0+255),w,b
 53286  01718A  A4D8               	btfss	status,2,c
 53287  01718C  D002               	goto	l2851
 53288  01718E                     u19960:
 53289                           
 53290                           ; BSR set to: 0
 53291                           ;fat16.c: 431: {;fat16.c: 433: return 1;
 53292                           
 53293                           ; BSR set to: 0
 53294  01718E  0E01               	movlw	1
 53295                           
 53296                           ; BSR set to: 0
 53297                           ;fat16.c: 434: }
 53298                           
 53299                           ; BSR set to: 0
 53300  017190  0012               	return	
 53301  017192                     l2851:
 53302                           
 53303                           ; BSR set to: 0
 53304                           ;fat16.c: 435: else;fat16.c: 436: {;fat16.c: 438: return 0;
 53305                           
 53306                           ; BSR set to: 0
 53307  017192  0E00               	movlw	0
 53308                           
 53309                           ; BSR set to: 0
 53310  017194  0012               	return	
 53311  017196                     __end_of__root_is_available:
 53312                           	opt stack 0
 53313                           tosu	equ	0xFFF
 53314                           tosh	equ	0xFFE
 53315                           tosl	equ	0xFFD
 53316                           pclath	equ	0xFFA
 53317                           tblptru	equ	0xFF8
 53318                           tblptrh	equ	0xFF7
 53319                           tblptrl	equ	0xFF6
 53320                           tablat	equ	0xFF5
 53321                           prodh	equ	0xFF4
 53322                           prodl	equ	0xFF3
 53323                           intcon	equ	0xFF2
 53324                           intcon2	equ	0xFF1
 53325                           intcon3	equ	0xFF0
 53326                           indf0	equ	0xFEF
 53327                           postinc0	equ	0xFEE
 53328                           fsr0h	equ	0xFEA
 53329                           fsr0l	equ	0xFE9
 53330                           wreg	equ	0xFE8
 53331                           indf1	equ	0xFE7
 53332                           postinc1	equ	0xFE6
 53333                           postdec1	equ	0xFE5
 53334                           plusw1	equ	0xFE3
 53335                           fsr1h	equ	0xFE2
 53336                           fsr1l	equ	0xFE1
 53337                           indf2	equ	0xFDF
 53338                           postinc2	equ	0xFDE
 53339                           postdec2	equ	0xFDD
 53340                           plusw2	equ	0xFDB
 53341                           fsr2h	equ	0xFDA
 53342                           fsr2l	equ	0xFD9
 53343                           status	equ	0xFD8
 53344                           
 53345 ;; *************** function __get_first_cluster *****************
 53346 ;; Defined at:
 53347 ;;		line 501 in file "fat16.c"
 53348 ;; Parameters:    Size  Location     Type
 53349 ;;  file_number     1    wreg     unsigned char 
 53350 ;; Auto vars:     Size  Location     Type
 53351 ;;  file_number     1   55[BANK0 ] unsigned char 
 53352 ;;  first_cluste    2   53[BANK0 ] unsigned int 
 53353 ;;  offset          2   51[BANK0 ] unsigned int 
 53354 ;;  sector          2   49[BANK0 ] unsigned int 
 53355 ;; Return value:  Size  Location     Type
 53356 ;;                  2   47[BANK0 ] unsigned int 
 53357 ;; Registers used:
 53358 ;;		wreg, status,2, status,0, cstack
 53359 ;; Tracked objects:
 53360 ;;		On entry : 0/0
 53361 ;;		On exit  : 0/0
 53362 ;;		Unchanged: 0/0
 53363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53364 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53365 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53367 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53368 ;;Total ram usage:        9 bytes
 53369 ;; Hardware stack levels used:    1
 53370 ;; Hardware stack levels required when called:   15
 53371 ;; This function calls:
 53372 ;;		__offset_from_file_number
 53373 ;;		__sector_from_file_number
 53374 ;;		_flash_partial_read
 53375 ;; This function is called by:
 53376 ;;		_fat_delete_file
 53377 ;;		_fat_copy_sector_to_buffer
 53378 ;;		_fat_write_sector_from_buffer
 53379 ;; This function uses a non-reentrant model
 53380 ;;
 53381                           
 53382                           	psect	text255
 53383  017704                     __ptext255:
 53384                           	opt stack 0
 53385  017704                     __get_first_cluster:
 53386                           	opt stack 10
 53387                           
 53388                           ; BSR set to: 0
 53389                           ;incstack = 0
 53390                           ;__get_first_cluster@file_number stored from wreg
 53391  017704  0100               	movlb	0	; () banked
 53392  017706  6F97               	movwf	__get_first_cluster@file_number& (0+255),b
 53393                           
 53394                           ;fat16.c: 503: uint16_t first_cluster;;fat16.c: 504: uint16_t sector;;fat16.c: 505: uint
      +                          16_t offset;;fat16.c: 508: sector = _sector_from_file_number(file_number);
 53395  017708  0100               	movlb	0	; () banked
 53396  01770A  5197               	movf	__get_first_cluster@file_number& (0+255),w,b
 53397  01770C  EC7E  F0C3         	call	__sector_from_file_number
 53398  017710  C060  F091         	movff	?__sector_from_file_number,__get_first_cluster@sector
 53399  017714  C061  F092         	movff	?__sector_from_file_number+1,__get_first_cluster@sector+1
 53400                           
 53401                           ;fat16.c: 509: offset = _offset_from_file_number(file_number);
 53402  017718  0100               	movlb	0	; () banked
 53403  01771A  5197               	movf	__get_first_cluster@file_number& (0+255),w,b
 53404  01771C  ECFA  F0C4         	call	__offset_from_file_number
 53405  017720  C060  F093         	movff	?__offset_from_file_number,__get_first_cluster@offset
 53406  017724  C061  F094         	movff	?__offset_from_file_number+1,__get_first_cluster@offset+1
 53407                           
 53408                           ;fat16.c: 510: offset += 26;
 53409  017728  0E1A               	movlw	26
 53410  01772A  0100               	movlb	0	; () banked
 53411  01772C  2793               	addwf	__get_first_cluster@offset& (0+255),f,b
 53412  01772E  0E00               	movlw	0
 53413  017730  2394               	addwfc	(__get_first_cluster@offset+1)& (0+255),f,b
 53414                           
 53415                           ; BSR set to: 0
 53416                           ;fat16.c: 513: flash_partial_read(sector, offset, 2, &first_cluster);
 53417  017732  C091  F087         	movff	__get_first_cluster@sector,flash_partial_read@page
 53418  017736  C092  F088         	movff	__get_first_cluster@sector+1,flash_partial_read@page+1
 53419  01773A  C093  F089         	movff	__get_first_cluster@offset,flash_partial_read@start
 53420  01773E  C094  F08A         	movff	__get_first_cluster@offset+1,flash_partial_read@start+1
 53421  017742  0E00               	movlw	0
 53422  017744  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 53423  017746  0E02               	movlw	2
 53424  017748  6F8B               	movwf	flash_partial_read@length& (0+255),b
 53425  01774A  0E95               	movlw	low __get_first_cluster@first_cluster
 53426  01774C  6F8D               	movwf	flash_partial_read@data& (0+255),b
 53427  01774E  0E00               	movlw	high __get_first_cluster@first_cluster
 53428  017750  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 53429  017752  ECED  F0C2         	call	_flash_partial_read	;wreg free
 53430                           
 53431                           ;fat16.c: 514: return first_cluster;
 53432  017756  C095  F08F         	movff	__get_first_cluster@first_cluster,?__get_first_cluster
 53433  01775A  C096  F090         	movff	__get_first_cluster@first_cluster+1,?__get_first_cluster+1
 53434  01775E  0012               	return	
 53435  017760                     __end_of__get_first_cluster:
 53436                           	opt stack 0
 53437                           tosu	equ	0xFFF
 53438                           tosh	equ	0xFFE
 53439                           tosl	equ	0xFFD
 53440                           pclath	equ	0xFFA
 53441                           tblptru	equ	0xFF8
 53442                           tblptrh	equ	0xFF7
 53443                           tblptrl	equ	0xFF6
 53444                           tablat	equ	0xFF5
 53445                           prodh	equ	0xFF4
 53446                           prodl	equ	0xFF3
 53447                           intcon	equ	0xFF2
 53448                           intcon2	equ	0xFF1
 53449                           intcon3	equ	0xFF0
 53450                           indf0	equ	0xFEF
 53451                           postinc0	equ	0xFEE
 53452                           fsr0h	equ	0xFEA
 53453                           fsr0l	equ	0xFE9
 53454                           wreg	equ	0xFE8
 53455                           indf1	equ	0xFE7
 53456                           postinc1	equ	0xFE6
 53457                           postdec1	equ	0xFE5
 53458                           plusw1	equ	0xFE3
 53459                           fsr1h	equ	0xFE2
 53460                           fsr1l	equ	0xFE1
 53461                           indf2	equ	0xFDF
 53462                           postinc2	equ	0xFDE
 53463                           postdec2	equ	0xFDD
 53464                           plusw2	equ	0xFDB
 53465                           fsr2h	equ	0xFDA
 53466                           fsr2l	equ	0xFD9
 53467                           status	equ	0xFD8
 53468                           
 53469 ;; *************** function _flash_partial_read *****************
 53470 ;; Defined at:
 53471 ;;		line 481 in file "flash.c"
 53472 ;; Parameters:    Size  Location     Type
 53473 ;;  page            2   39[BANK0 ] unsigned int 
 53474 ;;  start           2   41[BANK0 ] unsigned int 
 53475 ;;  length          2   43[BANK0 ] unsigned int 
 53476 ;;  data            2   45[BANK0 ] PTR unsigned char 
 53477 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 53478 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 53479 ;;		 -> ToSendDataBuffer(64), 
 53480 ;; Auto vars:     Size  Location     Type
 53481 ;;		None
 53482 ;; Return value:  Size  Location     Type
 53483 ;;                  1    wreg      void 
 53484 ;; Registers used:
 53485 ;;		wreg, status,2, status,0, cstack
 53486 ;; Tracked objects:
 53487 ;;		On entry : 0/0
 53488 ;;		On exit  : 0/0
 53489 ;;		Unchanged: 0/0
 53490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53491 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53494 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53495 ;;Total ram usage:        8 bytes
 53496 ;; Hardware stack levels used:    1
 53497 ;; Hardware stack levels required when called:   14
 53498 ;; This function calls:
 53499 ;;		__flash_partial_read
 53500 ;;		_spi_set_configuration
 53501 ;; This function is called by:
 53502 ;;		__root_is_available
 53503 ;;		__read_fat
 53504 ;;		__get_first_cluster
 53505 ;;		_fat_get_file_size
 53506 ;;		_fat_read_from_file_fast
 53507 ;;		_fat_get_file_information
 53508 ;; This function uses a non-reentrant model
 53509 ;;
 53510                           
 53511                           	psect	text256
 53512  0185DA                     __ptext256:
 53513                           	opt stack 0
 53514  0185DA                     _flash_partial_read:
 53515                           	opt stack 11
 53516                           
 53517                           ;flash.c: 484: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 53518                           
 53519                           ;incstack = 0
 53520  0185DA  0E00               	movlw	0
 53521  0185DC  ECBD  F098         	call	_spi_set_configuration
 53522                           
 53523                           ;flash.c: 487: _flash_partial_read(page, start, length, data);
 53524  0185E0  C087  F073         	movff	flash_partial_read@page,__flash_partial_read@page
 53525  0185E4  C088  F074         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 53526  0185E8  C089  F075         	movff	flash_partial_read@start,__flash_partial_read@start
 53527  0185EC  C08A  F076         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 53528  0185F0  C08B  F077         	movff	flash_partial_read@length,__flash_partial_read@length
 53529  0185F4  C08C  F078         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 53530  0185F8  C08D  F079         	movff	flash_partial_read@data,__flash_partial_read@data
 53531  0185FC  C08E  F07A         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 53532  018600  EC39  F0B7         	call	__flash_partial_read	;wreg free
 53533                           
 53534                           ;flash.c: 490: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 53535  018604  0E01               	movlw	1
 53536  018606  ECBD  F098         	call	_spi_set_configuration
 53537  01860A  0012               	return		;funcret
 53538  01860C                     __end_of_flash_partial_read:
 53539                           	opt stack 0
 53540                           tosu	equ	0xFFF
 53541                           tosh	equ	0xFFE
 53542                           tosl	equ	0xFFD
 53543                           pclath	equ	0xFFA
 53544                           tblptru	equ	0xFF8
 53545                           tblptrh	equ	0xFF7
 53546                           tblptrl	equ	0xFF6
 53547                           tablat	equ	0xFF5
 53548                           prodh	equ	0xFF4
 53549                           prodl	equ	0xFF3
 53550                           intcon	equ	0xFF2
 53551                           intcon2	equ	0xFF1
 53552                           intcon3	equ	0xFF0
 53553                           indf0	equ	0xFEF
 53554                           postinc0	equ	0xFEE
 53555                           fsr0h	equ	0xFEA
 53556                           fsr0l	equ	0xFE9
 53557                           wreg	equ	0xFE8
 53558                           indf1	equ	0xFE7
 53559                           postinc1	equ	0xFE6
 53560                           postdec1	equ	0xFE5
 53561                           plusw1	equ	0xFE3
 53562                           fsr1h	equ	0xFE2
 53563                           fsr1l	equ	0xFE1
 53564                           indf2	equ	0xFDF
 53565                           postinc2	equ	0xFDE
 53566                           postdec2	equ	0xFDD
 53567                           plusw2	equ	0xFDB
 53568                           fsr2h	equ	0xFDA
 53569                           fsr2l	equ	0xFD9
 53570                           status	equ	0xFD8
 53571                           
 53572 ;; *************** function _spi_set_configuration *****************
 53573 ;; Defined at:
 53574 ;;		line 140 in file "spi.c"
 53575 ;; Parameters:    Size  Location     Type
 53576 ;;  configuratio    1    wreg     enum E6796
 53577 ;; Auto vars:     Size  Location     Type
 53578 ;;  configuratio    1    0[BANK0 ] enum E6796
 53579 ;;  cntr            1    0        unsigned char 
 53580 ;; Return value:  Size  Location     Type
 53581 ;;                  1    wreg      void 
 53582 ;; Registers used:
 53583 ;;		wreg, status,2, status,0
 53584 ;; Tracked objects:
 53585 ;;		On entry : 0/0
 53586 ;;		On exit  : 0/0
 53587 ;;		Unchanged: 0/0
 53588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53590 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53592 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53593 ;;Total ram usage:        1 bytes
 53594 ;; Hardware stack levels used:    1
 53595 ;; Hardware stack levels required when called:   10
 53596 ;; This function calls:
 53597 ;;		Nothing
 53598 ;; This function is called by:
 53599 ;;		_flash_init
 53600 ;;		_flash_sector_read
 53601 ;;		_flash_sector_write
 53602 ;;		_flash_partial_read
 53603 ;;		_flash_partial_write
 53604 ;;		_flash_copy_page_to_buffer
 53605 ;;		_flash_read_from_buffer
 53606 ;;		_flash_write_to_buffer
 53607 ;;		_flash_is_busy
 53608 ;;		_flash_set_power_state
 53609 ;;		_flash_write_page_from_buffer
 53610 ;; This function uses a non-reentrant model
 53611 ;;
 53612                           
 53613                           	psect	text257
 53614  01317A                     __ptext257:
 53615                           	opt stack 0
 53616  01317A                     _spi_set_configuration:
 53617                           	opt stack 18
 53618                           
 53619                           ;incstack = 0
 53620                           ;spi_set_configuration@configuration stored from wreg
 53621  01317A  0100               	movlb	0	; () banked
 53622  01317C  6F60               	movwf	spi_set_configuration@configuration& (0+255),b
 53623                           
 53624                           ;spi.c: 142: uint8_t cntr;;spi.c: 145: switch(configuration)
 53625  01317E  D07B               	goto	l3336
 53626  013180                     l3337:
 53627                           
 53628                           ; BSR set to: 0
 53629                           ;spi.c: 153: LATDbits.LD2 = 1;
 53630  013180  848C               	bsf	3980,2,c	;volatile
 53631                           
 53632                           ;spi.c: 154: TRISDbits.TRISD2 = 0;
 53633  013182  9495               	bcf	3989,2,c	;volatile
 53634                           
 53635                           ;spi.c: 155: TRISDbits.TRISD2 = 1;
 53636  013184  8495               	bsf	3989,2,c	;volatile
 53637  013186                     
 53638                           ; BSR set to: 0
 53639  013186  A483               	btfss	3971,2,c	;volatile
 53640  013188  D7FE               	goto	l3339
 53641                           
 53642                           ;spi.c: 160: DMACON1bits.DMAEN = 0;
 53643  01318A  9088               	bcf	3976,0,c	;volatile
 53644                           
 53645                           ;spi.c: 161: SSP2CON1bits.SSPEN = 0;
 53646  01318C  9A72               	bcf	3954,5,c	;volatile
 53647                           
 53648                           ;spi.c: 164: TRISDbits.TRISD6 = 1;
 53649  01318E  8C95               	bsf	3989,6,c	;volatile
 53650                           
 53651                           ;spi.c: 165: TRISDbits.TRISD4 = 0;
 53652  013190  9895               	bcf	3989,4,c	;volatile
 53653                           
 53654                           ;spi.c: 166: LATDbits.LD4 = 0;
 53655  013192  988C               	bcf	3980,4,c	;volatile
 53656                           
 53657                           ;spi.c: 167: TRISDbits.TRISD5 = 0;
 53658  013194  9A95               	bcf	3989,5,c	;volatile
 53659                           
 53660                           ;spi.c: 168: LATDbits.LD5 = 0;
 53661  013196  9A8C               	bcf	3980,5,c	;volatile
 53662                           
 53663                           ;spi.c: 169: TRISDbits.TRISD7 = 0;
 53664  013198  9E95               	bcf	3989,7,c	;volatile
 53665                           
 53666                           ;spi.c: 170: LATDbits.LD7 = 1;
 53667  01319A  8E8C               	bsf	3980,7,c	;volatile
 53668                           
 53669                           ;spi.c: 173: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 53670  01319C  0E55               	movlw	85
 53671  01319E  6EA7               	movwf	4007,c	;volsfr
 53672  0131A0  0EAA               	movlw	170
 53673  0131A2  6EA7               	movwf	4007,c	;volsfr
 53674  0131A4  010E               	movlb	14	; () banked
 53675  0131A6  91BF               	bcf	191,0,b	;volatile
 53676                           
 53677                           ;spi.c: 175: RPOR23 = 0b00000;
 53678  0131A8  0E00               	movlw	0
 53679  0131AA  6FD7               	movwf	215,b	;volatile
 53680                           
 53681                           ;spi.c: 176: RPINR21 = 0b11111;
 53682  0131AC  0E1F               	movlw	31
 53683  0131AE  6FFC               	movwf	252,b	;volatile
 53684                           
 53685                           ;spi.c: 177: RPINR23 = 0b11111;
 53686  0131B0  0E1F               	movlw	31
 53687  0131B2  6FFE               	movwf	254,b	;volatile
 53688                           
 53689                           ;spi.c: 179: RPINR21 = 23;
 53690  0131B4  0E17               	movlw	23
 53691  0131B6  6FFC               	movwf	252,b	;volatile
 53692                           
 53693                           ;spi.c: 180: RPOR21 = 10;
 53694  0131B8  0E0A               	movlw	10
 53695  0131BA  6FD5               	movwf	213,b	;volatile
 53696                           
 53697                           ;spi.c: 182: RPOR22 = 11;
 53698  0131BC  0E0B               	movlw	11
 53699  0131BE  6FD6               	movwf	214,b	;volatile
 53700                           
 53701                           ;spi.c: 183: RPINR22 = 22;
 53702  0131C0  0E16               	movlw	22
 53703  0131C2  6FFD               	movwf	253,b	;volatile
 53704                           
 53705                           ;spi.c: 184: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 53706  0131C4  0E55               	movlw	85
 53707  0131C6  6EA7               	movwf	4007,c	;volsfr
 53708  0131C8  0EAA               	movlw	170
 53709  0131CA  6EA7               	movwf	4007,c	;volsfr
 53710                           
 53711                           ; BSR set to: 14
 53712  0131CC  81BF               	bsf	191,0,b	;volatile
 53713                           
 53714                           ; BSR set to: 14
 53715                           ;spi.c: 187: SSP2STATbits.SMP = 1;
 53716  0131CE  8E73               	bsf	3955,7,c	;volatile
 53717                           
 53718                           ; BSR set to: 14
 53719                           ;spi.c: 188: SSP2STATbits.CKE = 1;
 53720  0131D0  8C73               	bsf	3955,6,c	;volatile
 53721                           
 53722                           ; BSR set to: 14
 53723                           ;spi.c: 189: SSP2CON1bits.WCOL = 0;
 53724  0131D2  9E72               	bcf	3954,7,c	;volatile
 53725                           
 53726                           ; BSR set to: 14
 53727                           ;spi.c: 190: SSP2CON1bits.SSPOV = 0;
 53728  0131D4  9C72               	bcf	3954,6,c	;volatile
 53729                           
 53730                           ; BSR set to: 14
 53731                           ;spi.c: 191: SSP2CON1bits.CKP = 0;
 53732  0131D6  9872               	bcf	3954,4,c	;volatile
 53733                           
 53734                           ; BSR set to: 14
 53735                           ;spi.c: 192: SSP2CON1bits.SSPM =0b0000;
 53736  0131D8  9072               	bcf	3954,0,c	;volatile
 53737  0131DA  9272               	bcf	3954,1,c	;volatile
 53738  0131DC  9472               	bcf	3954,2,c	;volatile
 53739  0131DE  9672               	bcf	3954,3,c	;volatile
 53740                           
 53741                           ; BSR set to: 14
 53742                           ;spi.c: 193: SSP2CON1bits.SSPEN = 1;
 53743  0131E0  8A72               	bsf	3954,5,c	;volatile
 53744                           
 53745                           ;spi.c: 196: active_configuration = SPI_CONFIGURATION_INTERNAL;
 53746  0131E2  0E00               	movlw	0
 53747  0131E4  0102               	movlb	2	; () banked
 53748  0131E6  6FC9               	movwf	_active_configuration& (0+255),b
 53749                           
 53750                           ;spi.c: 197: break;
 53751  0131E8  0012               	return	
 53752  0131EA                     l3342:
 53753                           
 53754                           ; BSR set to: 0
 53755                           ;spi.c: 201: DMACON1bits.DMAEN = 0;
 53756  0131EA  9088               	bcf	3976,0,c	;volatile
 53757                           
 53758                           ;spi.c: 202: SSP2CON1bits.SSPEN = 0;
 53759  0131EC  9A72               	bcf	3954,5,c	;volatile
 53760                           
 53761                           ;spi.c: 205: ODCON3bits.SPI2OD = 0;
 53762  0131EE  010F               	movlb	15	; () banked
 53763  0131F0  9340               	bcf	64,1,b	;volatile
 53764                           
 53765                           ; BSR set to: 15
 53766                           ;spi.c: 208: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 53767  0131F2  0E55               	movlw	85
 53768  0131F4  6EA7               	movwf	4007,c	;volsfr
 53769  0131F6  0EAA               	movlw	170
 53770  0131F8  6EA7               	movwf	4007,c	;volsfr
 53771                           
 53772                           ; BSR set to: 15
 53773  0131FA  010E               	movlb	14	; () banked
 53774  0131FC  91BF               	bcf	191,0,b	;volatile
 53775                           
 53776                           ;spi.c: 209: RPOR23 = 10;
 53777  0131FE  0E0A               	movlw	10
 53778  013200  6FD7               	movwf	215,b	;volatile
 53779                           
 53780                           ;spi.c: 210: RPINR21 = 21;
 53781  013202  0E15               	movlw	21
 53782  013204  6FFC               	movwf	252,b	;volatile
 53783                           
 53784                           ;spi.c: 211: RPINR22 = 22;
 53785  013206  0E16               	movlw	22
 53786  013208  6FFD               	movwf	253,b	;volatile
 53787                           
 53788                           ;spi.c: 212: RPINR23 = 19;
 53789  01320A  0E13               	movlw	19
 53790  01320C  6FFE               	movwf	254,b	;volatile
 53791                           
 53792                           ;spi.c: 213: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 53793  01320E  0E55               	movlw	85
 53794  013210  6EA7               	movwf	4007,c	;volsfr
 53795  013212  0EAA               	movlw	170
 53796  013214  6EA7               	movwf	4007,c	;volsfr
 53797                           
 53798                           ; BSR set to: 14
 53799  013216  81BF               	bsf	191,0,b	;volatile
 53800                           
 53801                           ; BSR set to: 14
 53802                           ;spi.c: 215: SSP2CON1bits.SSPEN = 0;
 53803  013218  9A72               	bcf	3954,5,c	;volatile
 53804                           
 53805                           ; BSR set to: 14
 53806                           ;spi.c: 223: TRISDbits.TRISD5 = 1;
 53807  01321A  8A95               	bsf	3989,5,c	;volatile
 53808                           
 53809                           ; BSR set to: 14
 53810                           ;spi.c: 224: TRISDbits.TRISD4 = 1;
 53811  01321C  8895               	bsf	3989,4,c	;volatile
 53812                           
 53813                           ; BSR set to: 14
 53814                           ;spi.c: 227: TRISDbits.TRISD6 = 0;
 53815  01321E  9C95               	bcf	3989,6,c	;volatile
 53816                           
 53817                           ; BSR set to: 14
 53818                           ;spi.c: 228: LATDbits.LD6 = 1;
 53819  013220  8C8C               	bsf	3980,6,c	;volatile
 53820                           
 53821                           ; BSR set to: 14
 53822                           ;spi.c: 231: TRISDbits.TRISD2 = 1;
 53823  013222  8495               	bsf	3989,2,c	;volatile
 53824                           
 53825                           ; BSR set to: 14
 53826                           ;spi.c: 237: SSP2STATbits.SMP = 0;
 53827  013224  9E73               	bcf	3955,7,c	;volatile
 53828                           
 53829                           ; BSR set to: 14
 53830                           ;spi.c: 238: SSP2STATbits.CKE = 1;
 53831  013226  8C73               	bsf	3955,6,c	;volatile
 53832                           
 53833                           ; BSR set to: 14
 53834                           ;spi.c: 239: SSP2CON1bits.WCOL = 0;
 53835  013228  9E72               	bcf	3954,7,c	;volatile
 53836                           
 53837                           ; BSR set to: 14
 53838                           ;spi.c: 240: SSP2CON1bits.SSPOV = 0;
 53839  01322A  9C72               	bcf	3954,6,c	;volatile
 53840                           
 53841                           ; BSR set to: 14
 53842                           ;spi.c: 241: SSP2CON1bits.CKP = 0;
 53843  01322C  9872               	bcf	3954,4,c	;volatile
 53844                           
 53845                           ; BSR set to: 14
 53846                           ;spi.c: 242: SSP2CON1bits.SSPM =0b0100;
 53847  01322E  5072               	movf	3954,w,c	;volatile
 53848  013230  0BF0               	andlw	-16
 53849  013232  0904               	iorlw	4
 53850  013234  6E72               	movwf	3954,c	;volatile
 53851                           
 53852                           ; BSR set to: 14
 53853                           ;spi.c: 243: PIR3bits.SSP2IF = 0;
 53854  013236  9EA4               	bcf	4004,7,c	;volatile
 53855                           
 53856                           ; BSR set to: 14
 53857                           ;spi.c: 244: SSP2CON1bits.SSPEN = 1;
 53858  013238  8A72               	bsf	3954,5,c	;volatile
 53859                           
 53860                           ; BSR set to: 14
 53861                           ;spi.c: 247: DMACON1bits.TXINC = 1;
 53862  01323A  8A88               	bsf	3976,5,c	;volatile
 53863                           
 53864                           ; BSR set to: 14
 53865                           ;spi.c: 248: DMACON1bits.RXINC = 1;
 53866  01323C  8888               	bsf	3976,4,c	;volatile
 53867                           
 53868                           ; BSR set to: 14
 53869                           ;spi.c: 249: DMACON1bits.DUPLEX1 = 1;
 53870  01323E  8688               	bsf	3976,3,c	;volatile
 53871                           
 53872                           ; BSR set to: 14
 53873                           ;spi.c: 250: DMACON1bits.DUPLEX0 = 0;
 53874  013240  9488               	bcf	3976,2,c	;volatile
 53875                           
 53876                           ; BSR set to: 14
 53877                           ;spi.c: 251: DMACON1bits.DLYINTEN = 0;
 53878  013242  9288               	bcf	3976,1,c	;volatile
 53879                           
 53880                           ; BSR set to: 14
 53881                           ;spi.c: 253: DMACON2bits.DLYCYC = 0b0000;
 53882  013244  9886               	bcf	3974,4,c	;volatile
 53883  013246  9A86               	bcf	3974,5,c	;volatile
 53884  013248  9C86               	bcf	3974,6,c	;volatile
 53885  01324A  9E86               	bcf	3974,7,c	;volatile
 53886                           
 53887                           ; BSR set to: 14
 53888                           ;spi.c: 254: DMACON2bits.INTLVL = 0b0000;
 53889  01324C  9086               	bcf	3974,0,c	;volatile
 53890  01324E  9286               	bcf	3974,1,c	;volatile
 53891  013250  9486               	bcf	3974,2,c	;volatile
 53892  013252  9686               	bcf	3974,3,c	;volatile
 53893                           
 53894                           ; BSR set to: 14
 53895                           ;spi.c: 257: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
 53896  013254  0E00               	movlw	0
 53897  013256  6E66               	movwf	3942,c	;volatile
 53898                           
 53899                           ; BSR set to: 14
 53900                           ;spi.c: 258: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
 53901  013258  0E3F               	movlw	63
 53902  01325A  6E67               	movwf	3943,c	;volatile
 53903                           
 53904                           ; BSR set to: 14
 53905                           ;spi.c: 261: TXADDRH = ((unsigned char)((((uint16_t) _spi_external_tx_buffer)>>8)&0xFF))
      +                          ;
 53906  01325C  0E04               	movlw	high __spi_external_tx_buffer
 53907  01325E  6E6A               	movwf	3946,c	;volatile
 53908                           
 53909                           ; BSR set to: 14
 53910                           ;spi.c: 262: TXADDRL = ((unsigned char)(((uint16_t) _spi_external_tx_buffer)&0xFF));
 53911  013260  0E40               	movlw	low (low __spi_external_tx_buffer)
 53912  013262  6E6B               	movwf	3947,c	;volatile
 53913                           
 53914                           ; BSR set to: 14
 53915                           ;spi.c: 265: RXADDRH = ((unsigned char)((((uint16_t) _spi_external_rx_buffer)>>8)&0xFF))
      +                          ;
 53916  013264  0E04               	movlw	high __spi_external_rx_buffer
 53917  013266  6E68               	movwf	3944,c	;volatile
 53918                           
 53919                           ; BSR set to: 14
 53920                           ;spi.c: 266: RXADDRL = ((unsigned char)(((uint16_t) _spi_external_rx_buffer)&0xFF));
 53921  013268  0E00               	movlw	low (low __spi_external_rx_buffer)
 53922  01326A  6E69               	movwf	3945,c	;volatile
 53923                           
 53924                           ; BSR set to: 14
 53925                           ;spi.c: 268: DMACON1bits.DMAEN = 1;
 53926  01326C  8088               	bsf	3976,0,c	;volatile
 53927                           
 53928                           ; BSR set to: 14
 53929                           ;spi.c: 336: active_configuration = SPI_CONFIGURATION_EXTERNAL;
 53930  01326E  0E01               	movlw	1
 53931  013270  0102               	movlb	2	; () banked
 53932  013272  6FC9               	movwf	_active_configuration& (0+255),b
 53933                           
 53934                           ; BSR set to: 2
 53935                           ;spi.c: 338: }
 53936                           
 53937                           ;spi.c: 337: break;
 53938  013274  0012               	return	
 53939  013276                     l3336:
 53940                           
 53941                           ; BSR set to: 2
 53942  013276  0100               	movlb	0	; () banked
 53943  013278  5160               	movf	spi_set_configuration@configuration& (0+255),w,b
 53944                           
 53945                           ; Switch size 1, requested type "space"
 53946                           ; Number of cases is 2, Range of values is 0 to 1
 53947                           ; switch strategies available:
 53948                           ; Name         Instructions Cycles
 53949                           ; simple_byte            7     4 (average)
 53950                           ;	Chosen strategy is simple_byte
 53951  01327A  0A00               	xorlw	0	; case 0
 53952  01327C  B4D8               	btfsc	status,2,c
 53953  01327E  D780               	goto	l3337
 53954  013280  0A01               	xorlw	1	; case 1
 53955  013282  A4D8               	btfss	status,2,c
 53956  013284  0012               	return	
 53957  013286  D7B1               	goto	l3342
 53958  013288                     __end_of_spi_set_configuration:
 53959                           	opt stack 0
 53960                           tosu	equ	0xFFF
 53961                           tosh	equ	0xFFE
 53962                           tosl	equ	0xFFD
 53963                           pclath	equ	0xFFA
 53964                           tblptru	equ	0xFF8
 53965                           tblptrh	equ	0xFF7
 53966                           tblptrl	equ	0xFF6
 53967                           tablat	equ	0xFF5
 53968                           prodh	equ	0xFF4
 53969                           prodl	equ	0xFF3
 53970                           intcon	equ	0xFF2
 53971                           intcon2	equ	0xFF1
 53972                           intcon3	equ	0xFF0
 53973                           indf0	equ	0xFEF
 53974                           postinc0	equ	0xFEE
 53975                           fsr0h	equ	0xFEA
 53976                           fsr0l	equ	0xFE9
 53977                           wreg	equ	0xFE8
 53978                           indf1	equ	0xFE7
 53979                           postinc1	equ	0xFE6
 53980                           postdec1	equ	0xFE5
 53981                           plusw1	equ	0xFE3
 53982                           fsr1h	equ	0xFE2
 53983                           fsr1l	equ	0xFE1
 53984                           indf2	equ	0xFDF
 53985                           postinc2	equ	0xFDE
 53986                           postdec2	equ	0xFDD
 53987                           plusw2	equ	0xFDB
 53988                           fsr2h	equ	0xFDA
 53989                           fsr2l	equ	0xFD9
 53990                           status	equ	0xFD8
 53991                           
 53992 ;; *************** function __flash_partial_read *****************
 53993 ;; Defined at:
 53994 ;;		line 309 in file "flash.c"
 53995 ;; Parameters:    Size  Location     Type
 53996 ;;  page            2   19[BANK0 ] unsigned int 
 53997 ;;  start           2   21[BANK0 ] unsigned int 
 53998 ;;  length          2   23[BANK0 ] unsigned int 
 53999 ;;  data            2   25[BANK0 ] PTR unsigned char 
 54000 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 54001 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 54002 ;;		 -> buffer(512), ToSendDataBuffer(64), msd_buffer(512), 
 54003 ;; Auto vars:     Size  Location     Type
 54004 ;;  command         4   31[BANK0 ] unsigned char [4]
 54005 ;;  address         4   35[BANK0 ] unsigned long 
 54006 ;; Return value:  Size  Location     Type
 54007 ;;                  1    wreg      void 
 54008 ;; Registers used:
 54009 ;;		wreg, status,2, status,0, cstack
 54010 ;; Tracked objects:
 54011 ;;		On entry : 0/0
 54012 ;;		On exit  : 0/0
 54013 ;;		Unchanged: 0/0
 54014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54015 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54016 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54017 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54018 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54019 ;;Total ram usage:       20 bytes
 54020 ;; Hardware stack levels used:    1
 54021 ;; Hardware stack levels required when called:   13
 54022 ;; This function calls:
 54023 ;;		__flash_is_busy
 54024 ;;		_spi_tx_rx
 54025 ;; This function is called by:
 54026 ;;		_flash_sector_read
 54027 ;;		_flash_partial_read
 54028 ;; This function uses a non-reentrant model
 54029 ;;
 54030                           
 54031                           	psect	text258
 54032  016E72                     __ptext258:
 54033                           	opt stack 0
 54034  016E72                     __flash_partial_read:
 54035                           	opt stack 10
 54036                           
 54037                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 54038                           
 54039                           ;incstack = 0
 54040  016E72  EC4F  F0C6         	call	__flash_is_busy	;wreg free
 54041  016E76  0900               	iorlw	0
 54042  016E78  A4D8               	btfss	status,2,c
 54043  016E7A  D7FB               	goto	__flash_partial_read
 54044                           
 54045                           ;flash.c: 318: address = page;
 54046  016E7C  C073  F083         	movff	__flash_partial_read@page,__flash_partial_read@address
 54047  016E80  C074  F084         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 54048  016E84  0100               	movlb	0	; () banked
 54049  016E86  6B85               	clrf	(__flash_partial_read@address+2)& (0+255),b
 54050  016E88  6B86               	clrf	(__flash_partial_read@address+3)& (0+255),b
 54051                           
 54052                           ; BSR set to: 0
 54053                           ;flash.c: 319: address <<= 9;
 54054  016E8A  0E09               	movlw	9
 54055  016E8C                     u19425:
 54056  016E8C  90D8               	bcf	status,0,c
 54057  016E8E  3783               	rlcf	__flash_partial_read@address& (0+255),f,b
 54058  016E90  3784               	rlcf	(__flash_partial_read@address+1)& (0+255),f,b
 54059  016E92  3785               	rlcf	(__flash_partial_read@address+2)& (0+255),f,b
 54060  016E94  3786               	rlcf	(__flash_partial_read@address+3)& (0+255),f,b
 54061  016E96  2EE8               	decfsz	wreg,f,c
 54062  016E98  D7F9               	goto	u19425
 54063                           
 54064                           ; BSR set to: 0
 54065                           ;flash.c: 320: address |= start;
 54066  016E9A  5175               	movf	__flash_partial_read@start& (0+255),w,b
 54067  016E9C  6F7B               	movwf	??__flash_partial_read& (0+255),b
 54068  016E9E  5176               	movf	(__flash_partial_read@start+1)& (0+255),w,b
 54069  016EA0  6F7C               	movwf	(??__flash_partial_read+1)& (0+255),b
 54070  016EA2  6B7D               	clrf	(??__flash_partial_read+2)& (0+255),b
 54071  016EA4  6B7E               	clrf	(??__flash_partial_read+3)& (0+255),b
 54072  016EA6  517B               	movf	??__flash_partial_read& (0+255),w,b
 54073  016EA8  1383               	iorwf	__flash_partial_read@address& (0+255),f,b
 54074  016EAA  517C               	movf	(??__flash_partial_read+1)& (0+255),w,b
 54075  016EAC  1384               	iorwf	(__flash_partial_read@address+1)& (0+255),f,b
 54076  016EAE  517D               	movf	(??__flash_partial_read+2)& (0+255),w,b
 54077  016EB0  1385               	iorwf	(__flash_partial_read@address+2)& (0+255),f,b
 54078  016EB2  517E               	movf	(??__flash_partial_read+3)& (0+255),w,b
 54079  016EB4  1386               	iorwf	(__flash_partial_read@address+3)& (0+255),f,b
 54080                           
 54081                           ; BSR set to: 0
 54082                           ;flash.c: 323: command[0] = 0x03;
 54083  016EB6  0E03               	movlw	3
 54084  016EB8  6F7F               	movwf	__flash_partial_read@command& (0+255),b
 54085                           
 54086                           ; BSR set to: 0
 54087                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 54088  016EBA  C085  F080         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 54089                           
 54090                           ; BSR set to: 0
 54091                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 54092  016EBE  5184               	movf	(__flash_partial_read@address+1)& (0+255),w,b
 54093  016EC0  6F81               	movwf	(__flash_partial_read@command+2)& (0+255),b
 54094                           
 54095                           ; BSR set to: 0
 54096                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 54097  016EC2  C083  F082         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 54098                           
 54099                           ; BSR set to: 0
 54100                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 54101  016EC6  0E7F               	movlw	low __flash_partial_read@command
 54102  016EC8  6F60               	movwf	spi_tx_rx@command& (0+255),b
 54103  016ECA  0E00               	movlw	high __flash_partial_read@command
 54104  016ECC  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 54105  016ECE  0E00               	movlw	0
 54106  016ED0  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 54107  016ED2  0E04               	movlw	4
 54108  016ED4  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 54109  016ED6  C079  F064         	movff	__flash_partial_read@data,spi_tx_rx@data
 54110  016EDA  C07A  F065         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 54111  016EDE  C077  F066         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 54112  016EE2  C078  F067         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 54113  016EE6  EC0D  F0B1         	call	_spi_tx_rx	;wreg free
 54114  016EEA  0012               	return		;funcret
 54115  016EEC                     __end_of__flash_partial_read:
 54116                           	opt stack 0
 54117                           tosu	equ	0xFFF
 54118                           tosh	equ	0xFFE
 54119                           tosl	equ	0xFFD
 54120                           pclath	equ	0xFFA
 54121                           tblptru	equ	0xFF8
 54122                           tblptrh	equ	0xFF7
 54123                           tblptrl	equ	0xFF6
 54124                           tablat	equ	0xFF5
 54125                           prodh	equ	0xFF4
 54126                           prodl	equ	0xFF3
 54127                           intcon	equ	0xFF2
 54128                           intcon2	equ	0xFF1
 54129                           intcon3	equ	0xFF0
 54130                           indf0	equ	0xFEF
 54131                           postinc0	equ	0xFEE
 54132                           fsr0h	equ	0xFEA
 54133                           fsr0l	equ	0xFE9
 54134                           wreg	equ	0xFE8
 54135                           indf1	equ	0xFE7
 54136                           postinc1	equ	0xFE6
 54137                           postdec1	equ	0xFE5
 54138                           plusw1	equ	0xFE3
 54139                           fsr1h	equ	0xFE2
 54140                           fsr1l	equ	0xFE1
 54141                           indf2	equ	0xFDF
 54142                           postinc2	equ	0xFDE
 54143                           postdec2	equ	0xFDD
 54144                           plusw2	equ	0xFDB
 54145                           fsr2h	equ	0xFDA
 54146                           fsr2l	equ	0xFD9
 54147                           status	equ	0xFD8
 54148                           
 54149 ;; *************** function __flash_is_busy *****************
 54150 ;; Defined at:
 54151 ;;		line 281 in file "flash.c"
 54152 ;; Parameters:    Size  Location     Type
 54153 ;;		None
 54154 ;; Auto vars:     Size  Location     Type
 54155 ;;  status          2   17[BANK0 ] unsigned int 
 54156 ;; Return value:  Size  Location     Type
 54157 ;;                  1    wreg      unsigned char 
 54158 ;; Registers used:
 54159 ;;		wreg, status,2, status,0, cstack
 54160 ;; Tracked objects:
 54161 ;;		On entry : 0/0
 54162 ;;		On exit  : 0/0
 54163 ;;		Unchanged: 0/0
 54164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54166 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54168 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54169 ;;Total ram usage:        2 bytes
 54170 ;; Hardware stack levels used:    1
 54171 ;; Hardware stack levels required when called:   12
 54172 ;; This function calls:
 54173 ;;		__flash_get_status
 54174 ;;		__flash_wakeup
 54175 ;; This function is called by:
 54176 ;;		__flash_set_page_size
 54177 ;;		__flash_copy_page_to_buffer
 54178 ;;		__flash_compare_page_to_buffer
 54179 ;;		__flash_write_to_buffer
 54180 ;;		__flash_write_page_from_buffer
 54181 ;;		__flash_partial_read
 54182 ;;		__flash_buffer_read
 54183 ;;		_flash_partial_write
 54184 ;;		__flash_erase_page
 54185 ;;		_flash_is_busy
 54186 ;;		_flash_set_power_state
 54187 ;; This function uses a non-reentrant model
 54188 ;;
 54189                           
 54190                           	psect	text259
 54191  018C9E                     __ptext259:
 54192                           	opt stack 0
 54193  018C9E                     __flash_is_busy:
 54194                           	opt stack 15
 54195                           
 54196                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 54197                           
 54198                           ;incstack = 0
 54199  018C9E  5019               	movf	_power_state,w,c
 54200  018CA0  A4D8               	btfss	status,2,c
 54201                           
 54202                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 54203  018CA2  EC3C  F0BF         	call	__flash_wakeup	;wreg free
 54204                           
 54205                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 54206  018CA6  ECA0  F0C2         	call	__flash_get_status	;wreg free
 54207  018CAA  C06C  F071         	movff	?__flash_get_status,__flash_is_busy@status
 54208  018CAE  C06D  F072         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 54209                           
 54210                           ;flash.c: 295: if(status & 0b0000000010000000)
 54211  018CB2  0100               	movlb	0	; () banked
 54212  018CB4  AF71               	btfss	__flash_is_busy@status& (0+255),7,b
 54213  018CB6  D002               	goto	l2616
 54214                           
 54215                           ; BSR set to: 0
 54216                           ;flash.c: 296: {;flash.c: 298: return 0;
 54217  018CB8  0E00               	movlw	0
 54218                           
 54219                           ; BSR set to: 0
 54220                           ;flash.c: 299: }
 54221                           
 54222                           ; BSR set to: 0
 54223  018CBA  0012               	return	
 54224  018CBC                     l2616:
 54225                           
 54226                           ; BSR set to: 0
 54227                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 54228                           
 54229                           ; BSR set to: 0
 54230  018CBC  0E01               	movlw	1
 54231                           
 54232                           ; BSR set to: 0
 54233  018CBE  0012               	return	
 54234  018CC0                     __end_of__flash_is_busy:
 54235                           	opt stack 0
 54236                           tosu	equ	0xFFF
 54237                           tosh	equ	0xFFE
 54238                           tosl	equ	0xFFD
 54239                           pclath	equ	0xFFA
 54240                           tblptru	equ	0xFF8
 54241                           tblptrh	equ	0xFF7
 54242                           tblptrl	equ	0xFF6
 54243                           tablat	equ	0xFF5
 54244                           prodh	equ	0xFF4
 54245                           prodl	equ	0xFF3
 54246                           intcon	equ	0xFF2
 54247                           intcon2	equ	0xFF1
 54248                           intcon3	equ	0xFF0
 54249                           indf0	equ	0xFEF
 54250                           postinc0	equ	0xFEE
 54251                           fsr0h	equ	0xFEA
 54252                           fsr0l	equ	0xFE9
 54253                           wreg	equ	0xFE8
 54254                           indf1	equ	0xFE7
 54255                           postinc1	equ	0xFE6
 54256                           postdec1	equ	0xFE5
 54257                           plusw1	equ	0xFE3
 54258                           fsr1h	equ	0xFE2
 54259                           fsr1l	equ	0xFE1
 54260                           indf2	equ	0xFDF
 54261                           postinc2	equ	0xFDE
 54262                           postdec2	equ	0xFDD
 54263                           plusw2	equ	0xFDB
 54264                           fsr2h	equ	0xFDA
 54265                           fsr2l	equ	0xFD9
 54266                           status	equ	0xFD8
 54267                           
 54268 ;; *************** function __flash_wakeup *****************
 54269 ;; Defined at:
 54270 ;;		line 128 in file "flash.c"
 54271 ;; Parameters:    Size  Location     Type
 54272 ;;		None
 54273 ;; Auto vars:     Size  Location     Type
 54274 ;;  command         1    8[BANK0 ] unsigned char 
 54275 ;; Return value:  Size  Location     Type
 54276 ;;                  1    wreg      void 
 54277 ;; Registers used:
 54278 ;;		wreg, status,2, status,0, cstack
 54279 ;; Tracked objects:
 54280 ;;		On entry : 0/0
 54281 ;;		On exit  : 0/0
 54282 ;;		Unchanged: 0/0
 54283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54285 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54287 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54288 ;;Total ram usage:        1 bytes
 54289 ;; Hardware stack levels used:    1
 54290 ;; Hardware stack levels required when called:   11
 54291 ;; This function calls:
 54292 ;;		_spi_tx
 54293 ;; This function is called by:
 54294 ;;		__flash_is_busy
 54295 ;;		_flash_set_power_state
 54296 ;; This function uses a non-reentrant model
 54297 ;;
 54298                           
 54299                           	psect	text260
 54300  017E78                     __ptext260:
 54301                           	opt stack 0
 54302  017E78                     __flash_wakeup:
 54303                           	opt stack 15
 54304                           
 54305                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 54306                           
 54307                           ; BSR set to: 0
 54308                           ;incstack = 0
 54309  017E78  D020               	goto	l2565
 54310  017E7A                     
 54311                           ;flash.c: 135: command = 0xAB;
 54312  017E7A  0EAB               	movlw	171
 54313  017E7C  0100               	movlb	0	; () banked
 54314  017E7E  6F68               	movwf	__flash_wakeup@command& (0+255),b
 54315                           
 54316                           ; BSR set to: 0
 54317                           ;flash.c: 136: spi_tx(&command, 1);
 54318  017E80  0E68               	movlw	low __flash_wakeup@command
 54319  017E82  6F60               	movwf	spi_tx@data& (0+255),b
 54320  017E84  0E00               	movlw	high __flash_wakeup@command
 54321  017E86  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 54322  017E88  0E00               	movlw	0
 54323  017E8A  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 54324  017E8C  0E01               	movlw	1
 54325  017E8E  6F62               	movwf	spi_tx@length& (0+255),b
 54326  017E90  EC92  F0BC         	call	_spi_tx	;wreg free
 54327                           
 54328                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 54329  017E94  0E17               	movlw	23
 54330  017E96                     u27927:
 54331  017E96  2EE8               	decfsz	wreg,f,c
 54332  017E98  D7FE               	bra	u27927
 54333  017E9A  F000               	nop	
 54334                           
 54335                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 54336  017E9C  0E00               	movlw	0
 54337  017E9E  6E19               	movwf	_power_state,c
 54338                           
 54339                           ;flash.c: 139: break;
 54340  017EA0  0012               	return	
 54341  017EA2                     l2568:
 54342                           
 54343                           ;flash.c: 144: LATDbits.LD7 = 0;
 54344  017EA2  9E8C               	bcf	3980,7,c	;volatile
 54345                           
 54346                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 54347  017EA4  0E0D               	movlw	13
 54348  017EA6                     u27937:
 54349  017EA6  2EE8               	decfsz	wreg,f,c
 54350  017EA8  D7FE               	bra	u27937
 54351  017EAA  F000               	nop	
 54352                           
 54353                           ;flash.c: 146: LATDbits.LD7 = 1;
 54354  017EAC  8E8C               	bsf	3980,7,c	;volatile
 54355                           
 54356                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 54357  017EAE  0E50               	movlw	80
 54358  017EB0                     u27947:
 54359  017EB0  2EE8               	decfsz	wreg,f,c
 54360  017EB2  D7FE               	bra	u27947
 54361                           
 54362                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 54363  017EB4  0E00               	movlw	0
 54364  017EB6  6E19               	movwf	_power_state,c
 54365                           
 54366                           ;flash.c: 150: }
 54367                           
 54368                           ;flash.c: 149: break;
 54369  017EB8  0012               	return	
 54370  017EBA                     l2565:
 54371  017EBA  5019               	movf	_power_state,w,c
 54372                           
 54373                           ; Switch size 1, requested type "space"
 54374                           ; Number of cases is 2, Range of values is 1 to 2
 54375                           ; switch strategies available:
 54376                           ; Name         Instructions Cycles
 54377                           ; simple_byte            7     4 (average)
 54378                           ;	Chosen strategy is simple_byte
 54379  017EBC  0A01               	xorlw	1	; case 1
 54380  017EBE  B4D8               	btfsc	status,2,c
 54381  017EC0  D7DC               	goto	l2566
 54382  017EC2  0A03               	xorlw	3	; case 2
 54383  017EC4  A4D8               	btfss	status,2,c
 54384  017EC6  0012               	return	
 54385  017EC8  D7EC               	goto	l2568
 54386  017ECA                     __end_of__flash_wakeup:
 54387                           	opt stack 0
 54388                           tosu	equ	0xFFF
 54389                           tosh	equ	0xFFE
 54390                           tosl	equ	0xFFD
 54391                           pclath	equ	0xFFA
 54392                           tblptru	equ	0xFF8
 54393                           tblptrh	equ	0xFF7
 54394                           tblptrl	equ	0xFF6
 54395                           tablat	equ	0xFF5
 54396                           prodh	equ	0xFF4
 54397                           prodl	equ	0xFF3
 54398                           intcon	equ	0xFF2
 54399                           intcon2	equ	0xFF1
 54400                           intcon3	equ	0xFF0
 54401                           indf0	equ	0xFEF
 54402                           postinc0	equ	0xFEE
 54403                           fsr0h	equ	0xFEA
 54404                           fsr0l	equ	0xFE9
 54405                           wreg	equ	0xFE8
 54406                           indf1	equ	0xFE7
 54407                           postinc1	equ	0xFE6
 54408                           postdec1	equ	0xFE5
 54409                           plusw1	equ	0xFE3
 54410                           fsr1h	equ	0xFE2
 54411                           fsr1l	equ	0xFE1
 54412                           indf2	equ	0xFDF
 54413                           postinc2	equ	0xFDE
 54414                           postdec2	equ	0xFDD
 54415                           plusw2	equ	0xFDB
 54416                           fsr2h	equ	0xFDA
 54417                           fsr2l	equ	0xFD9
 54418                           status	equ	0xFD8
 54419                           
 54420 ;; *************** function _spi_tx *****************
 54421 ;; Defined at:
 54422 ;;		line 349 in file "spi.c"
 54423 ;; Parameters:    Size  Location     Type
 54424 ;;  data            2    0[BANK0 ] PTR unsigned char 
 54425 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 54426 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 54427 ;;  length          2    2[BANK0 ] unsigned int 
 54428 ;; Auto vars:     Size  Location     Type
 54429 ;;		None
 54430 ;; Return value:  Size  Location     Type
 54431 ;;                  1    wreg      void 
 54432 ;; Registers used:
 54433 ;;		wreg, status,2, status,0
 54434 ;; Tracked objects:
 54435 ;;		On entry : 0/0
 54436 ;;		On exit  : 0/0
 54437 ;;		Unchanged: 0/0
 54438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54439 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54441 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54442 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54443 ;;Total ram usage:        8 bytes
 54444 ;; Hardware stack levels used:    1
 54445 ;; Hardware stack levels required when called:   10
 54446 ;; This function calls:
 54447 ;;		Nothing
 54448 ;; This function is called by:
 54449 ;;		__flash_set_page_size
 54450 ;;		__flash_wakeup
 54451 ;;		__flash_copy_page_to_buffer
 54452 ;;		__flash_compare_page_to_buffer
 54453 ;;		__flash_write_page_from_buffer
 54454 ;;		__flash_erase_page
 54455 ;;		_flash_set_power_state
 54456 ;; This function uses a non-reentrant model
 54457 ;;
 54458                           
 54459                           	psect	text261
 54460  017924                     __ptext261:
 54461                           	opt stack 0
 54462  017924                     _spi_tx:
 54463                           	opt stack 17
 54464                           
 54465                           ;spi.c: 352: DMACON1bits.SSCON1 = 0;
 54466                           
 54467                           ;incstack = 0
 54468  017924  9E88               	bcf	3976,7,c	;volatile
 54469                           
 54470                           ;spi.c: 353: DMACON1bits.SSCON0 = 0;
 54471  017926  9C88               	bcf	3976,6,c	;volatile
 54472                           
 54473                           ;spi.c: 355: DMACON1bits.TXINC = 1;
 54474  017928  8A88               	bsf	3976,5,c	;volatile
 54475                           
 54476                           ;spi.c: 357: DMACON1bits.RXINC = 0;
 54477  01792A  9888               	bcf	3976,4,c	;volatile
 54478                           
 54479                           ;spi.c: 359: DMACON1bits.DUPLEX1 = 0;
 54480  01792C  9688               	bcf	3976,3,c	;volatile
 54481                           
 54482                           ;spi.c: 360: DMACON1bits.DUPLEX0 = 1;
 54483  01792E  8488               	bsf	3976,2,c	;volatile
 54484                           
 54485                           ;spi.c: 362: DMACON1bits.DLYINTEN = 0;
 54486  017930  9288               	bcf	3976,1,c	;volatile
 54487                           
 54488                           ;spi.c: 364: DMACON2bits.DLYCYC = 0b0000;
 54489  017932  9886               	bcf	3974,4,c	;volatile
 54490  017934  9A86               	bcf	3974,5,c	;volatile
 54491  017936  9C86               	bcf	3974,6,c	;volatile
 54492  017938  9E86               	bcf	3974,7,c	;volatile
 54493                           
 54494                           ;spi.c: 366: DMACON2bits.INTLVL = 0b0000;
 54495  01793A  9086               	bcf	3974,0,c	;volatile
 54496  01793C  9286               	bcf	3974,1,c	;volatile
 54497  01793E  9486               	bcf	3974,2,c	;volatile
 54498  017940  9686               	bcf	3974,3,c	;volatile
 54499                           
 54500                           ;spi.c: 369: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 54501  017942  0100               	movlb	0	; () banked
 54502  017944  5161               	movf	(spi_tx@data+1)& (0+255),w,b
 54503  017946  6E6A               	movwf	3946,c	;volatile
 54504                           
 54505                           ; BSR set to: 0
 54506                           ;spi.c: 370: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 54507  017948  C060  FF6B         	movff	spi_tx@data,3947	;volatile
 54508                           
 54509                           ; BSR set to: 0
 54510                           ;spi.c: 373: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 54511  01794C  0EFF               	movlw	255
 54512  01794E  6F64               	movwf	??_spi_tx& (0+255),b
 54513  017950  0EFF               	movlw	255
 54514  017952  6F65               	movwf	(??_spi_tx+1)& (0+255),b
 54515  017954  C062  F066         	movff	spi_tx@length,??_spi_tx+2
 54516  017958  C063  F067         	movff	spi_tx@length+1,??_spi_tx+3
 54517  01795C  5164               	movf	??_spi_tx& (0+255),w,b
 54518  01795E  2766               	addwf	(??_spi_tx+2)& (0+255),f,b
 54519  017960  5165               	movf	(??_spi_tx+1)& (0+255),w,b
 54520  017962  2367               	addwfc	(??_spi_tx+3)& (0+255),f,b
 54521  017964  C067  F066         	movff	??_spi_tx+3,??_spi_tx+2
 54522  017968  6B67               	clrf	(??_spi_tx+3)& (0+255),b
 54523  01796A  5166               	movf	(??_spi_tx+2)& (0+255),w,b
 54524  01796C  6E66               	movwf	3942,c	;volatile
 54525                           
 54526                           ; BSR set to: 0
 54527                           ;spi.c: 374: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 54528  01796E  0562               	decf	spi_tx@length& (0+255),w,b
 54529  017970  6E67               	movwf	3943,c	;volatile
 54530                           
 54531                           ; BSR set to: 0
 54532                           ;spi.c: 377: LATDbits.LD7 = 0;
 54533  017972  9E8C               	bcf	3980,7,c	;volatile
 54534                           
 54535                           ; BSR set to: 0
 54536                           ;spi.c: 378: DMACON1bits.DMAEN = 1;
 54537  017974  8088               	bsf	3976,0,c	;volatile
 54538  017976                     
 54539                           ; BSR set to: 0
 54540  017976  B088               	btfsc	3976,0,c	;volatile
 54541  017978  D7FE               	goto	l3350
 54542                           
 54543                           ;spi.c: 380: LATDbits.LD7 = 1;
 54544  01797A  8E8C               	bsf	3980,7,c	;volatile
 54545  01797C  0012               	return		;funcret
 54546  01797E                     __end_of_spi_tx:
 54547                           	opt stack 0
 54548                           tosu	equ	0xFFF
 54549                           tosh	equ	0xFFE
 54550                           tosl	equ	0xFFD
 54551                           pclath	equ	0xFFA
 54552                           tblptru	equ	0xFF8
 54553                           tblptrh	equ	0xFF7
 54554                           tblptrl	equ	0xFF6
 54555                           tablat	equ	0xFF5
 54556                           prodh	equ	0xFF4
 54557                           prodl	equ	0xFF3
 54558                           intcon	equ	0xFF2
 54559                           intcon2	equ	0xFF1
 54560                           intcon3	equ	0xFF0
 54561                           indf0	equ	0xFEF
 54562                           postinc0	equ	0xFEE
 54563                           fsr0h	equ	0xFEA
 54564                           fsr0l	equ	0xFE9
 54565                           wreg	equ	0xFE8
 54566                           indf1	equ	0xFE7
 54567                           postinc1	equ	0xFE6
 54568                           postdec1	equ	0xFE5
 54569                           plusw1	equ	0xFE3
 54570                           fsr1h	equ	0xFE2
 54571                           fsr1l	equ	0xFE1
 54572                           indf2	equ	0xFDF
 54573                           postinc2	equ	0xFDE
 54574                           postdec2	equ	0xFDD
 54575                           plusw2	equ	0xFDB
 54576                           fsr2h	equ	0xFDA
 54577                           fsr2l	equ	0xFD9
 54578                           status	equ	0xFD8
 54579                           
 54580 ;; *************** function __flash_get_status *****************
 54581 ;; Defined at:
 54582 ;;		line 117 in file "flash.c"
 54583 ;; Parameters:    Size  Location     Type
 54584 ;;		None
 54585 ;; Auto vars:     Size  Location     Type
 54586 ;;  status          2   15[BANK0 ] unsigned int 
 54587 ;;  command         1   14[BANK0 ] unsigned char 
 54588 ;; Return value:  Size  Location     Type
 54589 ;;                  2   12[BANK0 ] unsigned int 
 54590 ;; Registers used:
 54591 ;;		wreg, status,2, status,0, cstack
 54592 ;; Tracked objects:
 54593 ;;		On entry : 0/0
 54594 ;;		On exit  : 0/0
 54595 ;;		Unchanged: 0/0
 54596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54597 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54598 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54600 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54601 ;;Total ram usage:        5 bytes
 54602 ;; Hardware stack levels used:    1
 54603 ;; Hardware stack levels required when called:   11
 54604 ;; This function calls:
 54605 ;;		_spi_tx_rx
 54606 ;; This function is called by:
 54607 ;;		__flash_compare_page_to_buffer
 54608 ;;		__flash_is_busy
 54609 ;; This function uses a non-reentrant model
 54610 ;;
 54611                           
 54612                           	psect	text262
 54613  018540                     __ptext262:
 54614                           	opt stack 0
 54615  018540                     __flash_get_status:
 54616                           	opt stack 15
 54617                           
 54618                           ;flash.c: 121: uint8_t command = 0xD7;
 54619                           
 54620                           ;incstack = 0
 54621  018540  0ED7               	movlw	215
 54622  018542  0100               	movlb	0	; () banked
 54623  018544  6F6E               	movwf	__flash_get_status@command& (0+255),b
 54624                           
 54625                           ; BSR set to: 0
 54626                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 54627  018546  0E6E               	movlw	low __flash_get_status@command
 54628  018548  6F60               	movwf	spi_tx_rx@command& (0+255),b
 54629  01854A  0E00               	movlw	high __flash_get_status@command
 54630  01854C  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 54631  01854E  0E00               	movlw	0
 54632  018550  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 54633  018552  0E01               	movlw	1
 54634  018554  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 54635  018556  0E6F               	movlw	low __flash_get_status@status
 54636  018558  6F64               	movwf	spi_tx_rx@data& (0+255),b
 54637  01855A  0E00               	movlw	high __flash_get_status@status
 54638  01855C  6F65               	movwf	(spi_tx_rx@data+1)& (0+255),b
 54639  01855E  0E00               	movlw	0
 54640  018560  6F67               	movwf	(spi_tx_rx@data_length+1)& (0+255),b
 54641  018562  0E02               	movlw	2
 54642  018564  6F66               	movwf	spi_tx_rx@data_length& (0+255),b
 54643  018566  EC0D  F0B1         	call	_spi_tx_rx	;wreg free
 54644                           
 54645                           ;flash.c: 124: return status;
 54646  01856A  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 54647  01856E  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 54648  018572  0012               	return	
 54649  018574                     __end_of__flash_get_status:
 54650                           	opt stack 0
 54651                           tosu	equ	0xFFF
 54652                           tosh	equ	0xFFE
 54653                           tosl	equ	0xFFD
 54654                           pclath	equ	0xFFA
 54655                           tblptru	equ	0xFF8
 54656                           tblptrh	equ	0xFF7
 54657                           tblptrl	equ	0xFF6
 54658                           tablat	equ	0xFF5
 54659                           prodh	equ	0xFF4
 54660                           prodl	equ	0xFF3
 54661                           intcon	equ	0xFF2
 54662                           intcon2	equ	0xFF1
 54663                           intcon3	equ	0xFF0
 54664                           indf0	equ	0xFEF
 54665                           postinc0	equ	0xFEE
 54666                           fsr0h	equ	0xFEA
 54667                           fsr0l	equ	0xFE9
 54668                           wreg	equ	0xFE8
 54669                           indf1	equ	0xFE7
 54670                           postinc1	equ	0xFE6
 54671                           postdec1	equ	0xFE5
 54672                           plusw1	equ	0xFE3
 54673                           fsr1h	equ	0xFE2
 54674                           fsr1l	equ	0xFE1
 54675                           indf2	equ	0xFDF
 54676                           postinc2	equ	0xFDE
 54677                           postdec2	equ	0xFDD
 54678                           plusw2	equ	0xFDB
 54679                           fsr2h	equ	0xFDA
 54680                           fsr2l	equ	0xFD9
 54681                           status	equ	0xFD8
 54682                           
 54683 ;; *************** function _spi_tx_rx *****************
 54684 ;; Defined at:
 54685 ;;		line 440 in file "spi.c"
 54686 ;; Parameters:    Size  Location     Type
 54687 ;;  command         2    0[BANK0 ] PTR unsigned char 
 54688 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 54689 ;;  command_leng    2    2[BANK0 ] unsigned int 
 54690 ;;  data            2    4[BANK0 ] PTR unsigned char 
 54691 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 54692 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 54693 ;;		 -> buffer(512), _flash_get_status@status(2), ToSendDataBuffer(64), msd_buffer(512), 
 54694 ;;  data_length     2    6[BANK0 ] unsigned int 
 54695 ;; Auto vars:     Size  Location     Type
 54696 ;;		None
 54697 ;; Return value:  Size  Location     Type
 54698 ;;                  1    wreg      void 
 54699 ;; Registers used:
 54700 ;;		wreg, status,2, status,0
 54701 ;; Tracked objects:
 54702 ;;		On entry : 0/0
 54703 ;;		On exit  : 0/0
 54704 ;;		Unchanged: 0/0
 54705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54706 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54708 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54709 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54710 ;;Total ram usage:       12 bytes
 54711 ;; Hardware stack levels used:    1
 54712 ;; Hardware stack levels required when called:   10
 54713 ;; This function calls:
 54714 ;;		Nothing
 54715 ;; This function is called by:
 54716 ;;		__flash_get_status
 54717 ;;		__flash_partial_read
 54718 ;;		__flash_buffer_read
 54719 ;; This function uses a non-reentrant model
 54720 ;;
 54721                           
 54722                           	psect	text263
 54723  01621A                     __ptext263:
 54724                           	opt stack 0
 54725  01621A                     _spi_tx_rx:
 54726                           	opt stack 15
 54727                           
 54728                           ;spi.c: 443: DMACON1bits.SSCON1 = 0;
 54729                           
 54730                           ;incstack = 0
 54731  01621A  9E88               	bcf	3976,7,c	;volatile
 54732                           
 54733                           ;spi.c: 444: DMACON1bits.SSCON0 = 0;
 54734  01621C  9C88               	bcf	3976,6,c	;volatile
 54735                           
 54736                           ;spi.c: 446: DMACON1bits.TXINC = 1;
 54737  01621E  8A88               	bsf	3976,5,c	;volatile
 54738                           
 54739                           ;spi.c: 448: DMACON1bits.RXINC = 0;
 54740  016220  9888               	bcf	3976,4,c	;volatile
 54741                           
 54742                           ;spi.c: 450: DMACON1bits.DUPLEX1 = 0;
 54743  016222  9688               	bcf	3976,3,c	;volatile
 54744                           
 54745                           ;spi.c: 451: DMACON1bits.DUPLEX0 = 1;
 54746  016224  8488               	bsf	3976,2,c	;volatile
 54747                           
 54748                           ;spi.c: 453: DMACON1bits.DLYINTEN = 0;
 54749  016226  9288               	bcf	3976,1,c	;volatile
 54750                           
 54751                           ;spi.c: 455: DMACON2bits.DLYCYC = 0b0000;
 54752  016228  9886               	bcf	3974,4,c	;volatile
 54753  01622A  9A86               	bcf	3974,5,c	;volatile
 54754  01622C  9C86               	bcf	3974,6,c	;volatile
 54755  01622E  9E86               	bcf	3974,7,c	;volatile
 54756                           
 54757                           ;spi.c: 457: DMACON2bits.INTLVL = 0b0000;
 54758  016230  9086               	bcf	3974,0,c	;volatile
 54759  016232  9286               	bcf	3974,1,c	;volatile
 54760  016234  9486               	bcf	3974,2,c	;volatile
 54761  016236  9686               	bcf	3974,3,c	;volatile
 54762                           
 54763                           ;spi.c: 460: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 54764  016238  0100               	movlb	0	; () banked
 54765  01623A  5161               	movf	(spi_tx_rx@command+1)& (0+255),w,b
 54766  01623C  6E6A               	movwf	3946,c	;volatile
 54767                           
 54768                           ; BSR set to: 0
 54769                           ;spi.c: 461: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 54770  01623E  C060  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 54771                           
 54772                           ; BSR set to: 0
 54773                           ;spi.c: 464: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 54774  016242  0EFF               	movlw	255
 54775  016244  6F68               	movwf	??_spi_tx_rx& (0+255),b
 54776  016246  0EFF               	movlw	255
 54777  016248  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 54778  01624A  C062  F06A         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 54779  01624E  C063  F06B         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 54780  016252  5168               	movf	??_spi_tx_rx& (0+255),w,b
 54781  016254  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 54782  016256  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 54783  016258  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 54784  01625A  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 54785  01625E  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 54786  016260  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 54787  016262  6E66               	movwf	3942,c	;volatile
 54788                           
 54789                           ; BSR set to: 0
 54790                           ;spi.c: 465: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 54791  016264  0562               	decf	spi_tx_rx@command_length& (0+255),w,b
 54792  016266  6E67               	movwf	3943,c	;volatile
 54793                           
 54794                           ; BSR set to: 0
 54795                           ;spi.c: 468: LATDbits.LD7 = 0;
 54796  016268  9E8C               	bcf	3980,7,c	;volatile
 54797                           
 54798                           ; BSR set to: 0
 54799                           ;spi.c: 471: DMACON1bits.DMAEN = 1;
 54800  01626A  8088               	bsf	3976,0,c	;volatile
 54801  01626C                     
 54802                           ; BSR set to: 0
 54803  01626C  B088               	btfsc	3976,0,c	;volatile
 54804  01626E  D7FE               	goto	l3365
 54805                           
 54806                           ;spi.c: 475: DMACON1bits.TXINC = 0;
 54807  016270  9A88               	bcf	3976,5,c	;volatile
 54808                           
 54809                           ;spi.c: 477: DMACON1bits.RXINC = 1;
 54810  016272  8888               	bsf	3976,4,c	;volatile
 54811                           
 54812                           ;spi.c: 479: DMACON1bits.DUPLEX1 = 0;
 54813  016274  9688               	bcf	3976,3,c	;volatile
 54814                           
 54815                           ;spi.c: 480: DMACON1bits.DUPLEX0 = 0;
 54816  016276  9488               	bcf	3976,2,c	;volatile
 54817                           
 54818                           ;spi.c: 483: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 54819  016278  0100               	movlb	0	; () banked
 54820  01627A  5165               	movf	(spi_tx_rx@data+1)& (0+255),w,b
 54821  01627C  6E68               	movwf	3944,c	;volatile
 54822                           
 54823                           ; BSR set to: 0
 54824                           ;spi.c: 484: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 54825  01627E  C064  FF69         	movff	spi_tx_rx@data,3945	;volatile
 54826                           
 54827                           ; BSR set to: 0
 54828                           ;spi.c: 487: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 54829  016282  0EFF               	movlw	255
 54830  016284  6F68               	movwf	??_spi_tx_rx& (0+255),b
 54831  016286  0EFF               	movlw	255
 54832  016288  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 54833  01628A  C066  F06A         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 54834  01628E  C067  F06B         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 54835  016292  5168               	movf	??_spi_tx_rx& (0+255),w,b
 54836  016294  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 54837  016296  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 54838  016298  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 54839  01629A  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 54840  01629E  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 54841  0162A0  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 54842  0162A2  6E66               	movwf	3942,c	;volatile
 54843                           
 54844                           ; BSR set to: 0
 54845                           ;spi.c: 488: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 54846  0162A4  0566               	decf	spi_tx_rx@data_length& (0+255),w,b
 54847  0162A6  6E67               	movwf	3943,c	;volatile
 54848                           
 54849                           ; BSR set to: 0
 54850                           ;spi.c: 491: DMACON1bits.DMAEN = 1;
 54851  0162A8  8088               	bsf	3976,0,c	;volatile
 54852  0162AA                     
 54853                           ; BSR set to: 0
 54854  0162AA  B088               	btfsc	3976,0,c	;volatile
 54855  0162AC  D7FE               	goto	l3368
 54856                           
 54857                           ;spi.c: 495: LATDbits.LD7 = 1;
 54858  0162AE  8E8C               	bsf	3980,7,c	;volatile
 54859  0162B0  0012               	return		;funcret
 54860  0162B2                     __end_of_spi_tx_rx:
 54861                           	opt stack 0
 54862                           tosu	equ	0xFFF
 54863                           tosh	equ	0xFFE
 54864                           tosl	equ	0xFFD
 54865                           pclath	equ	0xFFA
 54866                           tblptru	equ	0xFF8
 54867                           tblptrh	equ	0xFF7
 54868                           tblptrl	equ	0xFF6
 54869                           tablat	equ	0xFF5
 54870                           prodh	equ	0xFF4
 54871                           prodl	equ	0xFF3
 54872                           intcon	equ	0xFF2
 54873                           intcon2	equ	0xFF1
 54874                           intcon3	equ	0xFF0
 54875                           indf0	equ	0xFEF
 54876                           postinc0	equ	0xFEE
 54877                           fsr0h	equ	0xFEA
 54878                           fsr0l	equ	0xFE9
 54879                           wreg	equ	0xFE8
 54880                           indf1	equ	0xFE7
 54881                           postinc1	equ	0xFE6
 54882                           postdec1	equ	0xFE5
 54883                           plusw1	equ	0xFE3
 54884                           fsr1h	equ	0xFE2
 54885                           fsr1l	equ	0xFE1
 54886                           indf2	equ	0xFDF
 54887                           postinc2	equ	0xFDE
 54888                           postdec2	equ	0xFDD
 54889                           plusw2	equ	0xFDB
 54890                           fsr2h	equ	0xFDA
 54891                           fsr2l	equ	0xFD9
 54892                           status	equ	0xFD8
 54893                           
 54894 ;; *************** function __sector_from_file_number *****************
 54895 ;; Defined at:
 54896 ;;		line 52 in file "fat16.c"
 54897 ;; Parameters:    Size  Location     Type
 54898 ;;  file_number     1    wreg     unsigned char 
 54899 ;; Auto vars:     Size  Location     Type
 54900 ;;  file_number     1    2[BANK0 ] unsigned char 
 54901 ;;  sector          2    3[BANK0 ] unsigned int 
 54902 ;; Return value:  Size  Location     Type
 54903 ;;                  2    0[BANK0 ] unsigned int 
 54904 ;; Registers used:
 54905 ;;		wreg, status,2, status,0
 54906 ;; Tracked objects:
 54907 ;;		On entry : 0/0
 54908 ;;		On exit  : 0/0
 54909 ;;		Unchanged: 0/0
 54910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54911 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54912 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54914 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54915 ;;Total ram usage:        5 bytes
 54916 ;; Hardware stack levels used:    1
 54917 ;; Hardware stack levels required when called:   10
 54918 ;; This function calls:
 54919 ;;		Nothing
 54920 ;; This function is called by:
 54921 ;;		__root_is_available
 54922 ;;		__write_root
 54923 ;;		__delete_root
 54924 ;;		__get_first_cluster
 54925 ;;		_fat_get_file_size
 54926 ;;		_fat_get_file_information
 54927 ;; This function uses a non-reentrant model
 54928 ;;
 54929                           
 54930                           	psect	text264
 54931  0186FC                     __ptext264:
 54932                           	opt stack 0
 54933  0186FC                     __sector_from_file_number:
 54934                           	opt stack 15
 54935                           
 54936                           ;incstack = 0
 54937                           ;__sector_from_file_number@file_number stored from wreg
 54938  0186FC  0100               	movlb	0	; () banked
 54939  0186FE  6F62               	movwf	__sector_from_file_number@file_number& (0+255),b
 54940                           
 54941                           ;fat16.c: 54: uint16_t sector;;fat16.c: 55: sector = (uint16_t) file_number;
 54942  018700  C062  F063         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 54943  018704  0100               	movlb	0	; () banked
 54944  018706  6B64               	clrf	(__sector_from_file_number@sector+1)& (0+255),b
 54945                           
 54946                           ; BSR set to: 0
 54947                           ;fat16.c: 56: sector >>= 4;
 54948  018708  3B63               	swapf	__sector_from_file_number@sector& (0+255),f,b
 54949  01870A  3B64               	swapf	(__sector_from_file_number@sector+1)& (0+255),f,b
 54950  01870C  0E0F               	movlw	15
 54951  01870E  1763               	andwf	__sector_from_file_number@sector& (0+255),f,b
 54952  018710  5164               	movf	(__sector_from_file_number@sector+1)& (0+255),w,b
 54953  018712  0BF0               	andlw	240
 54954  018714  1363               	iorwf	__sector_from_file_number@sector& (0+255),f,b
 54955  018716  0E0F               	movlw	15
 54956  018718  1764               	andwf	(__sector_from_file_number@sector+1)& (0+255),f,b
 54957                           
 54958                           ; BSR set to: 0
 54959                           ;fat16.c: 57: sector += 34;
 54960  01871A  0E22               	movlw	34
 54961  01871C  2763               	addwf	__sector_from_file_number@sector& (0+255),f,b
 54962  01871E  0E00               	movlw	0
 54963  018720  2364               	addwfc	(__sector_from_file_number@sector+1)& (0+255),f,b
 54964                           
 54965                           ; BSR set to: 0
 54966                           ;fat16.c: 58: return sector;
 54967  018722  C063  F060         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 54968  018726  C064  F061         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 54969  01872A  0012               	return	
 54970  01872C                     __end_of__sector_from_file_number:
 54971                           	opt stack 0
 54972                           tosu	equ	0xFFF
 54973                           tosh	equ	0xFFE
 54974                           tosl	equ	0xFFD
 54975                           pclath	equ	0xFFA
 54976                           tblptru	equ	0xFF8
 54977                           tblptrh	equ	0xFF7
 54978                           tblptrl	equ	0xFF6
 54979                           tablat	equ	0xFF5
 54980                           prodh	equ	0xFF4
 54981                           prodl	equ	0xFF3
 54982                           intcon	equ	0xFF2
 54983                           intcon2	equ	0xFF1
 54984                           intcon3	equ	0xFF0
 54985                           indf0	equ	0xFEF
 54986                           postinc0	equ	0xFEE
 54987                           fsr0h	equ	0xFEA
 54988                           fsr0l	equ	0xFE9
 54989                           wreg	equ	0xFE8
 54990                           indf1	equ	0xFE7
 54991                           postinc1	equ	0xFE6
 54992                           postdec1	equ	0xFE5
 54993                           plusw1	equ	0xFE3
 54994                           fsr1h	equ	0xFE2
 54995                           fsr1l	equ	0xFE1
 54996                           indf2	equ	0xFDF
 54997                           postinc2	equ	0xFDE
 54998                           postdec2	equ	0xFDD
 54999                           plusw2	equ	0xFDB
 55000                           fsr2h	equ	0xFDA
 55001                           fsr2l	equ	0xFD9
 55002                           status	equ	0xFD8
 55003                           
 55004 ;; *************** function __offset_from_file_number *****************
 55005 ;; Defined at:
 55006 ;;		line 61 in file "fat16.c"
 55007 ;; Parameters:    Size  Location     Type
 55008 ;;  file_number     1    wreg     unsigned char 
 55009 ;; Auto vars:     Size  Location     Type
 55010 ;;  file_number     1    2[BANK0 ] unsigned char 
 55011 ;;  offset          2    3[BANK0 ] unsigned int 
 55012 ;; Return value:  Size  Location     Type
 55013 ;;                  2    0[BANK0 ] unsigned int 
 55014 ;; Registers used:
 55015 ;;		wreg, status,2, status,0
 55016 ;; Tracked objects:
 55017 ;;		On entry : 0/0
 55018 ;;		On exit  : 0/0
 55019 ;;		Unchanged: 0/0
 55020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55021 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55022 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55024 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55025 ;;Total ram usage:        5 bytes
 55026 ;; Hardware stack levels used:    1
 55027 ;; Hardware stack levels required when called:   10
 55028 ;; This function calls:
 55029 ;;		Nothing
 55030 ;; This function is called by:
 55031 ;;		__root_is_available
 55032 ;;		__write_root
 55033 ;;		__delete_root
 55034 ;;		__get_first_cluster
 55035 ;;		_fat_get_file_size
 55036 ;;		_fat_get_file_information
 55037 ;; This function uses a non-reentrant model
 55038 ;;
 55039                           
 55040                           	psect	text265
 55041  0189F4                     __ptext265:
 55042                           	opt stack 0
 55043  0189F4                     __offset_from_file_number:
 55044                           	opt stack 15
 55045                           
 55046                           ; BSR set to: 0
 55047                           ;incstack = 0
 55048                           ;__offset_from_file_number@file_number stored from wreg
 55049  0189F4  0100               	movlb	0	; () banked
 55050  0189F6  6F62               	movwf	__offset_from_file_number@file_number& (0+255),b
 55051                           
 55052                           ;fat16.c: 63: uint16_t offset;;fat16.c: 64: offset = file_number;
 55053  0189F8  C062  F063         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 55054  0189FC  0100               	movlb	0	; () banked
 55055  0189FE  6B64               	clrf	(__offset_from_file_number@offset+1)& (0+255),b
 55056                           
 55057                           ; BSR set to: 0
 55058                           ;fat16.c: 65: offset &= 0b1111;
 55059  018A00  0E0F               	movlw	15
 55060  018A02  1763               	andwf	__offset_from_file_number@offset& (0+255),f,b
 55061  018A04  0E00               	movlw	0
 55062  018A06  1764               	andwf	(__offset_from_file_number@offset+1)& (0+255),f,b
 55063                           
 55064                           ; BSR set to: 0
 55065                           ;fat16.c: 66: offset <<= 5;
 55066  018A08  0E05               	movlw	5
 55067  018A0A                     u19685:
 55068  018A0A  90D8               	bcf	status,0,c
 55069  018A0C  3763               	rlcf	__offset_from_file_number@offset& (0+255),f,b
 55070  018A0E  3764               	rlcf	(__offset_from_file_number@offset+1)& (0+255),f,b
 55071  018A10  2EE8               	decfsz	wreg,f,c
 55072  018A12  D7FB               	goto	u19685
 55073                           
 55074                           ; BSR set to: 0
 55075                           ;fat16.c: 67: return offset;
 55076  018A14  C063  F060         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 55077  018A18  C064  F061         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 55078  018A1C  0012               	return	
 55079  018A1E                     __end_of__offset_from_file_number:
 55080                           	opt stack 0
 55081                           tosu	equ	0xFFF
 55082                           tosh	equ	0xFFE
 55083                           tosl	equ	0xFFD
 55084                           pclath	equ	0xFFA
 55085                           tblptru	equ	0xFF8
 55086                           tblptrh	equ	0xFF7
 55087                           tblptrl	equ	0xFF6
 55088                           tablat	equ	0xFF5
 55089                           prodh	equ	0xFF4
 55090                           prodl	equ	0xFF3
 55091                           intcon	equ	0xFF2
 55092                           intcon2	equ	0xFF1
 55093                           intcon3	equ	0xFF0
 55094                           indf0	equ	0xFEF
 55095                           postinc0	equ	0xFEE
 55096                           fsr0h	equ	0xFEA
 55097                           fsr0l	equ	0xFE9
 55098                           wreg	equ	0xFE8
 55099                           indf1	equ	0xFE7
 55100                           postinc1	equ	0xFE6
 55101                           postdec1	equ	0xFE5
 55102                           plusw1	equ	0xFE3
 55103                           fsr1h	equ	0xFE2
 55104                           fsr1l	equ	0xFE1
 55105                           indf2	equ	0xFDF
 55106                           postinc2	equ	0xFDE
 55107                           postdec2	equ	0xFDD
 55108                           plusw2	equ	0xFDB
 55109                           fsr2h	equ	0xFDA
 55110                           fsr2l	equ	0xFD9
 55111                           status	equ	0xFD8
 55112                           
 55113 ;; *************** function _USBTransferOnePacket *****************
 55114 ;; Defined at:
 55115 ;;		line 995 in file "usb_device.c"
 55116 ;; Parameters:    Size  Location     Type
 55117 ;;  ep              1    wreg     unsigned char 
 55118 ;;  dir             1    0[BANK0 ] unsigned char 
 55119 ;;  data            2    1[BANK0 ] PTR unsigned char 
 55120 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 55121 ;;		 -> msd_cbw(31), NULL(0), 
 55122 ;;  len             1    3[BANK0 ] unsigned char 
 55123 ;; Auto vars:     Size  Location     Type
 55124 ;;  ep              1    8[BANK0 ] unsigned char 
 55125 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 55126 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 55127 ;; Return value:  Size  Location     Type
 55128 ;;                  2    0[BANK0 ] PTR void 
 55129 ;; Registers used:
 55130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 55131 ;; Tracked objects:
 55132 ;;		On entry : 0/0
 55133 ;;		On exit  : 0/0
 55134 ;;		Unchanged: 0/0
 55135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55136 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55137 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55138 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55139 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55140 ;;Total ram usage:       11 bytes
 55141 ;; Hardware stack levels used:    1
 55142 ;; Hardware stack levels required when called:   10
 55143 ;; This function calls:
 55144 ;;		Nothing
 55145 ;; This function is called by:
 55146 ;;		_MSDTasks
 55147 ;;		_MSDProcessCommandMediaPresent
 55148 ;;		_MSDReadHandler
 55149 ;;		_MSDWriteHandler
 55150 ;;		_APP_DeviceCustomHIDTasks
 55151 ;; This function uses a non-reentrant model
 55152 ;;
 55153                           
 55154                           	psect	text266
 55155  0135AE                     __ptext266:
 55156                           	opt stack 0
 55157  0135AE                     _USBTransferOnePacket:
 55158                           	opt stack 18
 55159                           
 55160                           ; BSR set to: 0
 55161                           ;incstack = 0
 55162                           ;USBTransferOnePacket@ep stored from wreg
 55163  0135AE  0100               	movlb	0	; () banked
 55164  0135B0  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 55165                           
 55166                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 55167  0135B2  0100               	movlb	0	; () banked
 55168  0135B4  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 55169  0135B6  B4D8               	btfsc	status,2,c
 55170  0135B8  D007               	goto	l186
 55171                           
 55172                           ; BSR set to: 0
 55173                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 55174  0135BA  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 55175  0135BC  0D02               	mullw	2
 55176  0135BE  0E07               	movlw	low _pBDTEntryIn
 55177  0135C0  24F3               	addwf	prodl,w,c
 55178  0135C2  6ED9               	movwf	fsr2l,c
 55179  0135C4  0E00               	movlw	high _pBDTEntryIn
 55180  0135C6  D006               	goto	L63
 55181  0135C8                     l186:
 55182                           
 55183                           ; BSR set to: 0
 55184                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 55185                           
 55186                           ; BSR set to: 0
 55187  0135C8  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 55188  0135CA  0D02               	mullw	2
 55189  0135CC  0EDE               	movlw	low _pBDTEntryOut
 55190  0135CE  24F3               	addwf	prodl,w,c
 55191  0135D0  6ED9               	movwf	fsr2l,c
 55192  0135D2  0E01               	movlw	high _pBDTEntryOut
 55193  0135D4                     L63:
 55194  0135D4  20F4               	addwfc	prodh,w,c
 55195  0135D6  6EDA               	movwf	fsr2h,c
 55196  0135D8  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 55197  0135DC  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 55198                           
 55199                           ; BSR set to: 0
 55200                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 55201                           
 55202                           ; BSR set to: 0
 55203  0135E0  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 55204  0135E2  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 55205  0135E4  A4D8               	btfss	status,2,c
 55206  0135E6  D005               	goto	l188
 55207                           
 55208                           ; BSR set to: 0
 55209                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 55210  0135E8  0E00               	movlw	0
 55211  0135EA  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 55212  0135EC  0E00               	movlw	0
 55213  0135EE  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 55214                           
 55215                           ; BSR set to: 0
 55216  0135F0  0012               	return	
 55217  0135F2                     l188:
 55218                           
 55219                           ; BSR set to: 0
 55220                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 55221                           
 55222                           ; BSR set to: 0
 55223  0135F2  EE20 F002          	lfsr	2,2
 55224  0135F6  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 55225  0135F8  26D9               	addwf	fsr2l,f,c
 55226  0135FA  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 55227  0135FC  22DA               	addwfc	fsr2h,f,c
 55228  0135FE  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 55229  013602  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 55230                           
 55231                           ;usb_device.c: 1030: handle->CNT = len;
 55232  013606  EE20 F001          	lfsr	2,1
 55233  01360A  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 55234  01360C  26D9               	addwf	fsr2l,f,c
 55235  01360E  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 55236  013610  22DA               	addwfc	fsr2h,f,c
 55237  013612  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 55238                           
 55239                           ; BSR set to: 0
 55240                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 55241  013616  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 55242  01361A  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 55243  01361E  0E40               	movlw	64
 55244  013620  16DF               	andwf	indf2,f,c
 55245                           
 55246                           ; BSR set to: 0
 55247                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 55248  013622  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 55249  013626  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 55250  01362A  0E00               	movlw	0
 55251  01362C  86DB               	bsf	plusw2,3,c
 55252                           
 55253                           ; BSR set to: 0
 55254                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 55255  01362E  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 55256  013632  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 55257  013636  0E00               	movlw	0
 55258  013638  8EDB               	bsf	plusw2,7,c
 55259                           
 55260                           ; BSR set to: 0
 55261                           ;usb_device.c: 1036: if(dir != 0)
 55262  01363A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 55263  01363C  B4D8               	btfsc	status,2,c
 55264  01363E  D018               	goto	l190
 55265                           
 55266                           ; BSR set to: 0
 55267                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 55268  013640  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 55269  013642  0D02               	mullw	2
 55270  013644  0E07               	movlw	low _pBDTEntryIn
 55271  013646  24F3               	addwf	prodl,w,c
 55272  013648  6ED9               	movwf	fsr2l,c
 55273  01364A  0E00               	movlw	high _pBDTEntryIn
 55274  01364C  20F4               	addwfc	prodh,w,c
 55275  01364E  6EDA               	movwf	fsr2h,c
 55276  013650  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 55277  013654  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 55278  013658  0E04               	movlw	4
 55279  01365A  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 55280  01365C  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 55281  01365E  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 55282  013660  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 55283  013662  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 55284  013664  0D02               	mullw	2
 55285  013666  0E07               	movlw	low _pBDTEntryIn
 55286  013668  24F3               	addwf	prodl,w,c
 55287  01366A  6ED9               	movwf	fsr2l,c
 55288  01366C  0E00               	movlw	high _pBDTEntryIn
 55289  01366E  D017               	goto	L64
 55290  013670                     l190:
 55291                           
 55292                           ; BSR set to: 0
 55293                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 55294                           
 55295                           ; BSR set to: 0
 55296  013670  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 55297  013672  0D02               	mullw	2
 55298  013674  0EDE               	movlw	low _pBDTEntryOut
 55299  013676  24F3               	addwf	prodl,w,c
 55300  013678  6ED9               	movwf	fsr2l,c
 55301  01367A  0E01               	movlw	high _pBDTEntryOut
 55302  01367C  20F4               	addwfc	prodh,w,c
 55303  01367E  6EDA               	movwf	fsr2h,c
 55304  013680  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 55305  013684  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 55306  013688  0E04               	movlw	4
 55307  01368A  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 55308  01368C  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 55309  01368E  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 55310  013690  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 55311  013692  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 55312  013694  0D02               	mullw	2
 55313  013696  0EDE               	movlw	low _pBDTEntryOut
 55314  013698  24F3               	addwf	prodl,w,c
 55315  01369A  6ED9               	movwf	fsr2l,c
 55316  01369C  0E01               	movlw	high _pBDTEntryOut
 55317  01369E                     L64:
 55318  01369E  20F4               	addwfc	prodh,w,c
 55319  0136A0  6EDA               	movwf	fsr2h,c
 55320  0136A2  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 55321  0136A6  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 55322                           
 55323                           ; BSR set to: 0
 55324                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 55325                           
 55326                           ; BSR set to: 0
 55327  0136AA  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 55328  0136AE  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 55329  0136B2  0012               	return	
 55330  0136B4                     __end_of_USBTransferOnePacket:
 55331                           	opt stack 0
 55332                           tosu	equ	0xFFF
 55333                           tosh	equ	0xFFE
 55334                           tosl	equ	0xFFD
 55335                           pclath	equ	0xFFA
 55336                           tblptru	equ	0xFF8
 55337                           tblptrh	equ	0xFF7
 55338                           tblptrl	equ	0xFF6
 55339                           tablat	equ	0xFF5
 55340                           prodh	equ	0xFF4
 55341                           prodl	equ	0xFF3
 55342                           intcon	equ	0xFF2
 55343                           intcon2	equ	0xFF1
 55344                           intcon3	equ	0xFF0
 55345                           indf0	equ	0xFEF
 55346                           postinc0	equ	0xFEE
 55347                           fsr0h	equ	0xFEA
 55348                           fsr0l	equ	0xFE9
 55349                           wreg	equ	0xFE8
 55350                           indf1	equ	0xFE7
 55351                           postinc1	equ	0xFE6
 55352                           postdec1	equ	0xFE5
 55353                           plusw1	equ	0xFE3
 55354                           fsr1h	equ	0xFE2
 55355                           fsr1l	equ	0xFE1
 55356                           indf2	equ	0xFDF
 55357                           postinc2	equ	0xFDE
 55358                           postdec2	equ	0xFDD
 55359                           plusw2	equ	0xFDB
 55360                           fsr2h	equ	0xFDA
 55361                           fsr2l	equ	0xFD9
 55362                           status	equ	0xFD8
 55363                           
 55364 ;; *************** function _SYS_InterruptHigh *****************
 55365 ;; Defined at:
 55366 ;;		line 161 in file "system.c"
 55367 ;; Parameters:    Size  Location     Type
 55368 ;;		None
 55369 ;; Auto vars:     Size  Location     Type
 55370 ;;		None
 55371 ;; Return value:  Size  Location     Type
 55372 ;;                  1    wreg      void 
 55373 ;; Registers used:
 55374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 55375 ;; Tracked objects:
 55376 ;;		On entry : 0/0
 55377 ;;		On exit  : 0/0
 55378 ;;		Unchanged: 0/0
 55379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55382 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55383 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55384 ;;Total ram usage:       14 bytes
 55385 ;; Hardware stack levels used:    1
 55386 ;; Hardware stack levels required when called:    9
 55387 ;; This function calls:
 55388 ;;		_USBDeviceTasks
 55389 ;;		_tmr_isr
 55390 ;; This function is called by:
 55391 ;;		Interrupt level 2
 55392 ;; This function uses a non-reentrant model
 55393 ;;
 55394                           
 55395                           	psect	intcode
 55396  00C008                     __pintcode:
 55397                           	opt stack 0
 55398  00C008                     _SYS_InterruptHigh:
 55399                           	opt stack 8
 55400                           
 55401                           ; BSR set to: 0
 55402                           ;incstack = 0
 55403  00C008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 55404  00C00A  CFFA F04D          	movff	pclath,??_SYS_InterruptHigh
 55405  00C00E  CFFB F04E          	movff	pclatu,??_SYS_InterruptHigh+1
 55406  00C012  CFE9 F04F          	movff	fsr0l,??_SYS_InterruptHigh+2
 55407  00C016  CFEA F050          	movff	fsr0h,??_SYS_InterruptHigh+3
 55408  00C01A  CFE1 F051          	movff	fsr1l,??_SYS_InterruptHigh+4
 55409  00C01E  CFE2 F052          	movff	fsr1h,??_SYS_InterruptHigh+5
 55410  00C022  CFD9 F053          	movff	fsr2l,??_SYS_InterruptHigh+6
 55411  00C026  CFDA F054          	movff	fsr2h,??_SYS_InterruptHigh+7
 55412  00C02A  CFF3 F055          	movff	prodl,??_SYS_InterruptHigh+8
 55413  00C02E  CFF4 F056          	movff	prodh,??_SYS_InterruptHigh+9
 55414  00C032  CFF6 F057          	movff	tblptrl,??_SYS_InterruptHigh+10
 55415  00C036  CFF7 F058          	movff	tblptrh,??_SYS_InterruptHigh+11
 55416  00C03A  CFF8 F059          	movff	tblptru,??_SYS_InterruptHigh+12
 55417  00C03E  CFF5 F05A          	movff	tablat,??_SYS_InterruptHigh+13
 55418                           
 55419                           ;system.c: 164: USBDeviceTasks();
 55420  00C042  EC6F  F093         	call	_USBDeviceTasks	;wreg free
 55421                           
 55422                           ;system.c: 168: tmr_isr();
 55423  00C046  ECF0  F0B1         	call	_tmr_isr	;wreg free
 55424  00C04A  C05A  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 55425  00C04E  C059  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 55426  00C052  C058  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 55427  00C056  C057  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 55428  00C05A  C056  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 55429  00C05E  C055  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 55430  00C062  C054  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 55431  00C066  C053  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 55432  00C06A  C052  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 55433  00C06E  C051  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 55434  00C072  C050  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 55435  00C076  C04F  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 55436  00C07A  C04E  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 55437  00C07E  C04D  FFFA         	movff	??_SYS_InterruptHigh,pclath
 55438  00C082  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 55439  00C084  0011               	retfie		f
 55440  00C086                     __end_of_SYS_InterruptHigh:
 55441                           	opt stack 0
 55442                           tosu	equ	0xFFF
 55443                           tosh	equ	0xFFE
 55444                           tosl	equ	0xFFD
 55445                           pclatu	equ	0xFFB
 55446                           pclath	equ	0xFFA
 55447                           tblptru	equ	0xFF8
 55448                           tblptrh	equ	0xFF7
 55449                           tblptrl	equ	0xFF6
 55450                           tablat	equ	0xFF5
 55451                           prodh	equ	0xFF4
 55452                           prodl	equ	0xFF3
 55453                           intcon	equ	0xFF2
 55454                           intcon2	equ	0xFF1
 55455                           intcon3	equ	0xFF0
 55456                           indf0	equ	0xFEF
 55457                           postinc0	equ	0xFEE
 55458                           fsr0h	equ	0xFEA
 55459                           fsr0l	equ	0xFE9
 55460                           wreg	equ	0xFE8
 55461                           indf1	equ	0xFE7
 55462                           postinc1	equ	0xFE6
 55463                           postdec1	equ	0xFE5
 55464                           plusw1	equ	0xFE3
 55465                           fsr1h	equ	0xFE2
 55466                           fsr1l	equ	0xFE1
 55467                           indf2	equ	0xFDF
 55468                           postinc2	equ	0xFDE
 55469                           postdec2	equ	0xFDD
 55470                           plusw2	equ	0xFDB
 55471                           fsr2h	equ	0xFDA
 55472                           fsr2l	equ	0xFD9
 55473                           status	equ	0xFD8
 55474                           
 55475 ;; *************** function _tmr_isr *****************
 55476 ;; Defined at:
 55477 ;;		line 47 in file "os.c"
 55478 ;; Parameters:    Size  Location     Type
 55479 ;;		None
 55480 ;; Auto vars:     Size  Location     Type
 55481 ;;		None
 55482 ;; Return value:  Size  Location     Type
 55483 ;;                  1    wreg      void 
 55484 ;; Registers used:
 55485 ;;		wreg, status,2, status,0
 55486 ;; Tracked objects:
 55487 ;;		On entry : 0/0
 55488 ;;		On exit  : 0/0
 55489 ;;		Unchanged: 0/0
 55490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55495 ;;Total ram usage:        0 bytes
 55496 ;; Hardware stack levels used:    1
 55497 ;; This function calls:
 55498 ;;		Nothing
 55499 ;; This function is called by:
 55500 ;;		_SYS_InterruptHigh
 55501 ;; This function uses a non-reentrant model
 55502 ;;
 55503                           
 55504                           	psect	text268
 55505  0163E0                     __ptext268:
 55506                           	opt stack 0
 55507  0163E0                     _tmr_isr:
 55508                           	opt stack 16
 55509                           
 55510                           ;os.c: 50: if(INTCONbits.T0IF)
 55511                           
 55512                           ;incstack = 0
 55513  0163E0  A4F2               	btfss	intcon,2,c	;volatile
 55514  0163E2  D035               	goto	i2l1122
 55515                           
 55516                           ;os.c: 51: {;os.c: 53: if(os.done)
 55517  0163E4  0102               	movlb	2	; () banked
 55518  0163E6  5109               	movf	(_os+9)& (0+255),w,b	;volatile
 55519  0163E8  A4D8               	btfss	status,2,c
 55520  0163EA  D00D               	goto	i2l1124
 55521  0163EC  D025               	goto	i2l1130
 55522  0163EE                     i2l1125:
 55523                           
 55524                           ; BSR set to: 2
 55525                           ;os.c: 59: TMR0H = 0xFF;
 55526  0163EE  68D7               	setf	4055,c	;volatile
 55527                           
 55528                           ; BSR set to: 2
 55529                           ;os.c: 60: TMR0L = 0x80;
 55530  0163F0  0E80               	movlw	128
 55531  0163F2  D007               	goto	L66
 55532  0163F4                     
 55533                           ; BSR set to: 2
 55534                           ;os.c: 63: TMR0H = 0xF8;
 55535                           
 55536                           ; BSR set to: 2
 55537  0163F4  0EF8               	movlw	248
 55538  0163F6  6ED7               	movwf	4055,c	;volatile
 55539                           
 55540                           ;os.c: 64: TMR0L = 0x30;
 55541  0163F8  0E30               	movlw	48
 55542  0163FA  D003               	goto	L66
 55543  0163FC                     
 55544                           ; BSR set to: 2
 55545                           ;os.c: 67: TMR0H = 0xD1;
 55546                           
 55547                           ; BSR set to: 2
 55548  0163FC  0ED1               	movlw	209
 55549  0163FE  6ED7               	movwf	4055,c	;volatile
 55550                           
 55551                           ;os.c: 68: TMR0L = 0x20;
 55552  016400  0E20               	movlw	32
 55553  016402                     L66:
 55554  016402  6ED6               	movwf	4054,c	;volatile
 55555                           
 55556                           ; BSR set to: 2
 55557                           ;os.c: 70: }
 55558                           
 55559                           ;os.c: 69: break;
 55560  016404  D00A               	goto	i2l1126
 55561  016406                     i2l1124:
 55562                           
 55563                           ; BSR set to: 2
 55564                           
 55565                           ; BSR set to: 2
 55566  016406  5100               	movf	_os& (0+255),w,b	;volatile
 55567                           
 55568                           ; Switch size 1, requested type "space"
 55569                           ; Number of cases is 3, Range of values is 0 to 2
 55570                           ; switch strategies available:
 55571                           ; Name         Instructions Cycles
 55572                           ; simple_byte           10     6 (average)
 55573                           ;	Chosen strategy is simple_byte
 55574  016408  0A00               	xorlw	0	; case 0
 55575  01640A  B4D8               	btfsc	status,2,c
 55576  01640C  D7F0               	goto	i2l1125
 55577  01640E  0A01               	xorlw	1	; case 1
 55578  016410  B4D8               	btfsc	status,2,c
 55579  016412  D7F0               	goto	i2l1127
 55580  016414  0A03               	xorlw	3	; case 2
 55581  016416  B4D8               	btfsc	status,2,c
 55582  016418  D7F1               	goto	i2l1128
 55583  01641A                     i2l1126:
 55584                           
 55585                           ; BSR set to: 2
 55586                           ;os.c: 72: ++os.timeSlot;
 55587                           
 55588                           ; BSR set to: 2
 55589  01641A  2B08               	incf	(_os+8)& (0+255),f,b	;volatile
 55590                           
 55591                           ; BSR set to: 2
 55592                           ;os.c: 77: os.done = 0;
 55593  01641C  0E00               	movlw	0
 55594  01641E  6F09               	movwf	(_os+9)& (0+255),b	;volatile
 55595                           
 55596                           ;os.c: 78: }
 55597  016420  D015               	goto	i2l1132
 55598  016422                     i2l1131:
 55599                           
 55600                           ; BSR set to: 2
 55601                           ;os.c: 85: TMR0H = 0xFF;
 55602  016422  68D7               	setf	4055,c	;volatile
 55603                           
 55604                           ; BSR set to: 2
 55605                           ;os.c: 86: TMR0L = 0xE0;
 55606  016424  0EE0               	movlw	224
 55607  016426  D006               	goto	L68
 55608  016428                     i2l1133:
 55609                           
 55610                           ; BSR set to: 2
 55611                           ;os.c: 89: TMR0H = 0xFF;
 55612  016428  68D7               	setf	4055,c	;volatile
 55613                           
 55614                           ; BSR set to: 2
 55615                           ;os.c: 90: TMR0L = 0x06;
 55616  01642A  0E06               	movlw	6
 55617  01642C  D003               	goto	L68
 55618  01642E                     
 55619                           ; BSR set to: 2
 55620                           ;os.c: 93: TMR0H = 0xFA;
 55621                           
 55622                           ; BSR set to: 2
 55623  01642E  0EFA               	movlw	250
 55624  016430  6ED7               	movwf	4055,c	;volatile
 55625                           
 55626                           ;os.c: 94: TMR0L = 0x24;
 55627  016432  0E24               	movlw	36
 55628  016434                     L68:
 55629  016434  6ED6               	movwf	4054,c	;volatile
 55630                           
 55631                           ; BSR set to: 2
 55632                           ;os.c: 96: }
 55633                           
 55634                           ;os.c: 95: break;
 55635  016436  D00A               	goto	i2l1132
 55636  016438                     i2l1130:
 55637                           
 55638                           ; BSR set to: 2
 55639                           
 55640                           ; BSR set to: 2
 55641  016438  5100               	movf	_os& (0+255),w,b	;volatile
 55642                           
 55643                           ; Switch size 1, requested type "space"
 55644                           ; Number of cases is 3, Range of values is 0 to 2
 55645                           ; switch strategies available:
 55646                           ; Name         Instructions Cycles
 55647                           ; simple_byte           10     6 (average)
 55648                           ;	Chosen strategy is simple_byte
 55649  01643A  0A00               	xorlw	0	; case 0
 55650  01643C  B4D8               	btfsc	status,2,c
 55651  01643E  D7F1               	goto	i2l1131
 55652  016440  0A01               	xorlw	1	; case 1
 55653  016442  B4D8               	btfsc	status,2,c
 55654  016444  D7F1               	goto	i2l1133
 55655  016446  0A03               	xorlw	3	; case 2
 55656  016448  B4D8               	btfsc	status,2,c
 55657  01644A  D7F1               	goto	i2l1134
 55658  01644C                     i2l1132:
 55659                           
 55660                           ; BSR set to: 2
 55661                           ;os.c: 97: };os.c: 98: INTCONbits.T0IF = 0;
 55662                           
 55663                           ; BSR set to: 2
 55664  01644C  94F2               	bcf	intcon,2,c	;volatile
 55665  01644E                     i2l1122:
 55666                           
 55667                           ;os.c: 99: };os.c: 102: if(INTCON3bits.INT1IF)
 55668  01644E  A0F0               	btfss	intcon3,0,c	;volatile
 55669  016450  D003               	goto	i2l1135
 55670                           
 55671                           ;os.c: 103: {;os.c: 104: ++os.buttonCount;
 55672  016452  0102               	movlb	2	; () banked
 55673  016454  2B07               	incf	(_os+7)& (0+255),f,b	;volatile
 55674                           
 55675                           ; BSR set to: 2
 55676                           ;os.c: 105: INTCON3bits.INT1IF = 0;
 55677  016456  90F0               	bcf	intcon3,0,c	;volatile
 55678  016458                     i2l1135:
 55679                           
 55680                           ;os.c: 106: };os.c: 109: if(INTCON3bits.INT2IF)
 55681                           
 55682                           ; BSR set to: 2
 55683  016458  A2F0               	btfss	intcon3,1,c	;volatile
 55684  01645A  D005               	goto	i2l1136
 55685                           
 55686                           ;os.c: 110: {;os.c: 111: if(!PORTBbits.RB6)
 55687  01645C  BC81               	btfsc	3969,6,c	;volatile
 55688  01645E  D002               	goto	i2l1137
 55689                           
 55690                           ;os.c: 112: {;os.c: 113: --os.encoderCount;
 55691  016460  0102               	movlb	2	; () banked
 55692  016462  0706               	decf	(_os+6)& (0+255),f,b	;volatile
 55693  016464                     i2l1137:
 55694                           
 55695                           ;os.c: 114: };os.c: 115: INTCON3bits.INT2IF = 0;
 55696                           
 55697                           ; BSR set to: 2
 55698  016464  92F0               	bcf	intcon3,1,c	;volatile
 55699  016466                     i2l1136:
 55700                           
 55701                           ;os.c: 116: };os.c: 117: if(INTCON3bits.INT3IF)
 55702  016466  A4F0               	btfss	intcon3,2,c	;volatile
 55703  016468  0012               	return	
 55704                           
 55705                           ;os.c: 118: {;os.c: 119: if(!PORTBbits.RB7)
 55706  01646A  BE81               	btfsc	3969,7,c	;volatile
 55707  01646C  D002               	goto	i2l1139
 55708                           
 55709                           ;os.c: 120: {;os.c: 121: ++os.encoderCount;
 55710  01646E  0102               	movlb	2	; () banked
 55711  016470  2B06               	incf	(_os+6)& (0+255),f,b	;volatile
 55712  016472                     i2l1139:
 55713                           
 55714                           ;os.c: 122: };os.c: 123: INTCON3bits.INT3IF = 0;
 55715                           
 55716                           ; BSR set to: 2
 55717  016472  94F0               	bcf	intcon3,2,c	;volatile
 55718  016474  0012               	return	
 55719  016476                     __end_of_tmr_isr:
 55720                           	opt stack 0
 55721                           tosu	equ	0xFFF
 55722                           tosh	equ	0xFFE
 55723                           tosl	equ	0xFFD
 55724                           pclatu	equ	0xFFB
 55725                           pclath	equ	0xFFA
 55726                           tblptru	equ	0xFF8
 55727                           tblptrh	equ	0xFF7
 55728                           tblptrl	equ	0xFF6
 55729                           tablat	equ	0xFF5
 55730                           prodh	equ	0xFF4
 55731                           prodl	equ	0xFF3
 55732                           intcon	equ	0xFF2
 55733                           intcon2	equ	0xFF1
 55734                           intcon3	equ	0xFF0
 55735                           indf0	equ	0xFEF
 55736                           postinc0	equ	0xFEE
 55737                           fsr0h	equ	0xFEA
 55738                           fsr0l	equ	0xFE9
 55739                           wreg	equ	0xFE8
 55740                           indf1	equ	0xFE7
 55741                           postinc1	equ	0xFE6
 55742                           postdec1	equ	0xFE5
 55743                           plusw1	equ	0xFE3
 55744                           fsr1h	equ	0xFE2
 55745                           fsr1l	equ	0xFE1
 55746                           indf2	equ	0xFDF
 55747                           postinc2	equ	0xFDE
 55748                           postdec2	equ	0xFDD
 55749                           plusw2	equ	0xFDB
 55750                           fsr2h	equ	0xFDA
 55751                           fsr2l	equ	0xFD9
 55752                           status	equ	0xFD8
 55753                           
 55754 ;; *************** function _USBDeviceTasks *****************
 55755 ;; Defined at:
 55756 ;;		line 477 in file "usb_device.c"
 55757 ;; Parameters:    Size  Location     Type
 55758 ;;		None
 55759 ;; Auto vars:     Size  Location     Type
 55760 ;;  i               1   30[COMRAM] unsigned char 
 55761 ;; Return value:  Size  Location     Type
 55762 ;;                  1    wreg      void 
 55763 ;; Registers used:
 55764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 55765 ;; Tracked objects:
 55766 ;;		On entry : 0/0
 55767 ;;		On exit  : 0/0
 55768 ;;		Unchanged: 0/0
 55769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55773 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55774 ;;Total ram usage:        1 bytes
 55775 ;; Hardware stack levels used:    1
 55776 ;; Hardware stack levels required when called:    8
 55777 ;; This function calls:
 55778 ;;		_USBCtrlEPAllowStatusStage
 55779 ;;		_USBCtrlEPService
 55780 ;;		_USBIncrement1msInternalTimers
 55781 ;;		_USBStallHandler
 55782 ;;		_USBSuspend
 55783 ;;		_USBWakeFromSuspend
 55784 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 55785 ;;		i2_USBDeviceInit
 55786 ;; This function is called by:
 55787 ;;		_SYS_InterruptHigh
 55788 ;; This function uses a non-reentrant model
 55789 ;;
 55790                           
 55791                           	psect	text269
 55792  0126DE                     __ptext269:
 55793                           	opt stack 0
 55794  0126DE                     _USBDeviceTasks:
 55795                           	opt stack 8
 55796                           
 55797                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 55798                           
 55799                           ;incstack = 0
 55800  0126DE  042B               	decf	_USBDeviceState,w,c	;volatile
 55801  0126E0  B4D8               	btfsc	status,2,c
 55802                           
 55803                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 55804  0126E2  BA65               	btfsc	3941,5,c	;volatile
 55805  0126E4  D007               	goto	i2l157
 55806                           
 55807                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 55808  0126E6  0E00               	movlw	0
 55809  0126E8  6E62               	movwf	3938,c	;volatile
 55810                           
 55811                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 55812  0126EA  010F               	movlb	15	; () banked
 55813  0126EC  8136               	bsf	54,0,b	;volatile
 55814                           
 55815                           ; BSR set to: 15
 55816                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 55817  0126EE  8936               	bsf	54,4,b	;volatile
 55818                           
 55819                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 55820  0126F0  0E02               	movlw	2
 55821  0126F2  6E2B               	movwf	_USBDeviceState,c	;volatile
 55822  0126F4                     i2l157:
 55823                           
 55824                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 55825                           
 55826                           ; BSR set to: 15
 55827                           
 55828                           ; BSR set to: 15
 55829  0126F4  A462               	btfss	3938,2,c	;volatile
 55830  0126F6  D006               	goto	i2l158
 55831  0126F8  010F               	movlb	15	; () banked
 55832  0126FA  A536               	btfss	54,2,b	;volatile
 55833  0126FC  D003               	goto	i2l158
 55834                           
 55835                           ; BSR set to: 15
 55836                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 55837  0126FE  9462               	bcf	3938,2,c	;volatile
 55838                           
 55839                           ; BSR set to: 15
 55840                           ;usb_device.c: 640: USBWakeFromSuspend();
 55841  012700  EC1B  F0C2         	call	_USBWakeFromSuspend	;wreg free
 55842  012704                     i2l158:
 55843                           
 55844                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 55845  012704  A265               	btfss	3941,1,c	;volatile
 55846  012706  D002               	goto	i2l159
 55847                           
 55848                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 55849  012708  98A1               	bcf	4001,4,c	;volatile
 55850                           
 55851                           ;usb_device.c: 650: return;
 55852  01270A  0012               	return	
 55853  01270C                     i2l159:
 55854                           
 55855                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 55856  01270C  A062               	btfss	3938,0,c	;volatile
 55857  01270E  D009               	goto	i2l161
 55858  012710  010F               	movlb	15	; () banked
 55859  012712  A136               	btfss	54,0,b	;volatile
 55860  012714  D006               	goto	i2l161
 55861                           
 55862                           ; BSR set to: 15
 55863                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 55864  012716  EC2A  F092         	call	i2_USBDeviceInit	;wreg free
 55865                           
 55866                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 55867  01271A  88A0               	bsf	4000,4,c	;volatile
 55868                           
 55869                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 55870  01271C  0E04               	movlw	4
 55871  01271E  6E2B               	movwf	_USBDeviceState,c	;volatile
 55872                           
 55873                           ;usb_device.c: 681: (UIR &= 0xFE);
 55874  012720  9062               	bcf	3938,0,c	;volatile
 55875  012722                     i2l161:
 55876                           
 55877                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 55878  012722  A862               	btfss	3938,4,c	;volatile
 55879  012724  D004               	goto	i2l162
 55880  012726  010F               	movlb	15	; () banked
 55881  012728  B936               	btfsc	54,4,b	;volatile
 55882                           
 55883                           ; BSR set to: 15
 55884                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 55885  01272A  EC96  F0C3         	call	_USBSuspend	;wreg free
 55886  01272E                     i2l162:
 55887                           
 55888                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 55889  01272E  AC62               	btfss	3938,6,c	;volatile
 55890  012730  D01B               	goto	i2l166
 55891                           
 55892                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 55893  012732  010F               	movlb	15	; () banked
 55894  012734  AD36               	btfss	54,6,b	;volatile
 55895  012736  D00E               	goto	i2l164
 55896                           
 55897                           ; BSR set to: 15
 55898                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 55899  012738  0E00               	movlw	0
 55900  01273A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 55901  01273C  0E73               	movlw	115
 55902  01273E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 55903  012740  0E00               	movlw	0
 55904  012742  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 55905  012744  0E00               	movlw	0
 55906  012746  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 55907  012748  0E00               	movlw	0
 55908  01274A  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 55909  01274C  0E01               	movlw	1
 55910  01274E  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 55911  012750  EC7A  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 55912  012754                     i2l164:
 55913                           
 55914                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 55915  012754  9C62               	bcf	3938,6,c	;volatile
 55916                           
 55917                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 55918  012756  EC60  F0C6         	call	_USBIncrement1msInternalTimers	;wreg free
 55919                           
 55920                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 55921  01275A  5026               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 55922  01275C  A4D8               	btfss	status,2,c
 55923                           
 55924                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 55925  01275E  0626               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 55926                           
 55927                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 55928  012760  5026               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 55929  012762  B4D8               	btfsc	status,2,c
 55930                           
 55931                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 55932  012764  EC9E  F0AB         	call	_USBCtrlEPAllowStatusStage	;wreg free
 55933  012768                     i2l166:
 55934                           
 55935                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 55936  012768  AA62               	btfss	3938,5,c	;volatile
 55937  01276A  D004               	goto	i2l167
 55938  01276C  010F               	movlb	15	; () banked
 55939  01276E  BB36               	btfsc	54,5,b	;volatile
 55940                           
 55941                           ; BSR set to: 15
 55942                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 55943  012770  EC24  F0C1         	call	_USBStallHandler	;wreg free
 55944  012774                     i2l167:
 55945                           
 55946                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 55947  012774  A262               	btfss	3938,1,c	;volatile
 55948  012776  D012               	goto	i2l168
 55949  012778  010F               	movlb	15	; () banked
 55950  01277A  A336               	btfss	54,1,b	;volatile
 55951  01277C  D00F               	goto	i2l168
 55952                           
 55953                           ; BSR set to: 15
 55954                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 55955  01277E  0E7F               	movlw	127
 55956  012780  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 55957  012782  683D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 55958  012784  0E00               	movlw	0
 55959  012786  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 55960  012788  0E00               	movlw	0
 55961  01278A  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 55962  01278C  0E00               	movlw	0
 55963  01278E  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 55964  012790  0E01               	movlw	1
 55965  012792  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 55966  012794  EC7A  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 55967                           
 55968                           ;usb_device.c: 759: {UEIR = 0;};
 55969  012798  0E00               	movlw	0
 55970  01279A  6E63               	movwf	3939,c	;volatile
 55971  01279C                     i2l168:
 55972                           
 55973                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 55974  01279C  0E04               	movlw	4
 55975  01279E  602B               	cpfslt	_USBDeviceState,c	;volatile
 55976  0127A0  D002               	goto	i2l169
 55977                           
 55978                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 55979  0127A2  98A1               	bcf	4001,4,c	;volatile
 55980                           
 55981                           ;usb_device.c: 777: return;
 55982  0127A4  0012               	return	
 55983  0127A6                     i2l169:
 55984                           
 55985                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 55986  0127A6  010F               	movlb	15	; () banked
 55987  0127A8  A736               	btfss	54,3,b	;volatile
 55988  0127AA  D039               	goto	i2u2716_40
 55989                           
 55990                           ; BSR set to: 15
 55991                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 55992  0127AC  0E00               	movlw	0
 55993  0127AE  6E4C               	movwf	USBDeviceTasks@i,c
 55994  0127B0                     i2l27751:
 55995                           
 55996                           ; BSR set to: 15
 55997  0127B0  0E03               	movlw	3
 55998  0127B2  644C               	cpfsgt	USBDeviceTasks@i,c
 55999  0127B4  D001               	goto	i2l171
 56000  0127B6  D033               	goto	i2u2716_40
 56001  0127B8                     i2l171:
 56002                           
 56003                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 56004  0127B8  A662               	btfss	3938,3,c	;volatile
 56005  0127BA  D031               	goto	i2u2716_40
 56006                           
 56007                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 56008  0127BC  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 56009                           
 56010                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 56011  0127C0  302C               	rrcf	_USTATcopy,w,c	;volatile
 56012  0127C2  32E8               	rrcf	wreg,f,c
 56013  0127C4  32E8               	rrcf	wreg,f,c
 56014  0127C6  0B0F               	andlw	15
 56015  0127C8  6E27               	movwf	_endpoint_number,c	;volatile
 56016                           
 56017                           ;usb_device.c: 793: (UIR &= 0xF7);
 56018  0127CA  9662               	bcf	3938,3,c	;volatile
 56019                           
 56020                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 56021  0127CC  B42C               	btfsc	_USTATcopy,2,c	;volatile
 56022  0127CE  D007               	goto	i2l174
 56023                           
 56024                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 56025  0127D0  5027               	movf	_endpoint_number,w,c	;volatile
 56026  0127D2  0D01               	mullw	1
 56027  0127D4  0EE8               	movlw	low _ep_data_out
 56028  0127D6  24F3               	addwf	prodl,w,c
 56029  0127D8  6ED9               	movwf	fsr2l,c
 56030  0127DA  0E01               	movlw	high _ep_data_out
 56031  0127DC  D006               	goto	L69
 56032  0127DE                     i2l174:
 56033                           
 56034                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 56035                           
 56036                           ; BSR set to: 1
 56037  0127DE  5027               	movf	_endpoint_number,w,c	;volatile
 56038  0127E0  0D01               	mullw	1
 56039  0127E2  0EEB               	movlw	low _ep_data_in
 56040  0127E4  24F3               	addwf	prodl,w,c
 56041  0127E6  6ED9               	movwf	fsr2l,c
 56042  0127E8  0E01               	movlw	high _ep_data_in
 56043  0127EA                     L69:
 56044  0127EA  20F4               	addwfc	prodh,w,c
 56045  0127EC  6EDA               	movwf	fsr2h,c
 56046  0127EE  0101               	movlb	1	; () banked
 56047  0127F0  70DF               	btg	indf2,0,c
 56048                           
 56049                           ; BSR set to: 1
 56050                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 56051                           
 56052                           ; BSR set to: 1
 56053  0127F2  5027               	movf	_endpoint_number,w,c	;volatile
 56054  0127F4  A4D8               	btfss	status,2,c
 56055  0127F6  D003               	goto	i2l176
 56056                           
 56057                           ; BSR set to: 1
 56058                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 56059  0127F8  EC3B  F0B2         	call	_USBCtrlEPService	;wreg free
 56060                           
 56061                           ;usb_device.c: 813: }
 56062  0127FC  D00E               	goto	i2l178
 56063  0127FE                     i2l176:
 56064                           
 56065                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 56066  0127FE  0E00               	movlw	0
 56067  012800  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 56068  012802  0E72               	movlw	114
 56069  012804  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 56070  012806  0E2C               	movlw	low _USTATcopy
 56071  012808  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 56072  01280A  0E00               	movlw	high _USTATcopy
 56073  01280C  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 56074  01280E  0E00               	movlw	0
 56075  012810  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 56076  012812  0E00               	movlw	0
 56077  012814  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 56078  012816  EC7A  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 56079  01281A                     i2l178:
 56080  01281A  2A4C               	incf	USBDeviceTasks@i,f,c
 56081  01281C  D7C9               	goto	i2l27751
 56082  01281E                     i2u2716_40:
 56083                           
 56084                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 56085  01281E  98A1               	bcf	4001,4,c	;volatile
 56086  012820  0012               	return		;funcret
 56087  012822                     __end_of_USBDeviceTasks:
 56088                           	opt stack 0
 56089                           tosu	equ	0xFFF
 56090                           tosh	equ	0xFFE
 56091                           tosl	equ	0xFFD
 56092                           pclatu	equ	0xFFB
 56093                           pclath	equ	0xFFA
 56094                           tblptru	equ	0xFF8
 56095                           tblptrh	equ	0xFF7
 56096                           tblptrl	equ	0xFF6
 56097                           tablat	equ	0xFF5
 56098                           prodh	equ	0xFF4
 56099                           prodl	equ	0xFF3
 56100                           intcon	equ	0xFF2
 56101                           intcon2	equ	0xFF1
 56102                           intcon3	equ	0xFF0
 56103                           indf0	equ	0xFEF
 56104                           postinc0	equ	0xFEE
 56105                           fsr0h	equ	0xFEA
 56106                           fsr0l	equ	0xFE9
 56107                           wreg	equ	0xFE8
 56108                           indf1	equ	0xFE7
 56109                           postinc1	equ	0xFE6
 56110                           postdec1	equ	0xFE5
 56111                           plusw1	equ	0xFE3
 56112                           fsr1h	equ	0xFE2
 56113                           fsr1l	equ	0xFE1
 56114                           indf2	equ	0xFDF
 56115                           postinc2	equ	0xFDE
 56116                           postdec2	equ	0xFDD
 56117                           plusw2	equ	0xFDB
 56118                           fsr2h	equ	0xFDA
 56119                           fsr2l	equ	0xFD9
 56120                           status	equ	0xFD8
 56121                           
 56122 ;; *************** function i2_USBDeviceInit *****************
 56123 ;; Defined at:
 56124 ;;		line 277 in file "usb_device.c"
 56125 ;; Parameters:    Size  Location     Type
 56126 ;;		None
 56127 ;; Auto vars:     Size  Location     Type
 56128 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 56129 ;; Return value:  Size  Location     Type
 56130 ;;                  1    wreg      void 
 56131 ;; Registers used:
 56132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 56133 ;; Tracked objects:
 56134 ;;		On entry : 0/0
 56135 ;;		On exit  : 0/0
 56136 ;;		Unchanged: 0/0
 56137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56139 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56141 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56142 ;;Total ram usage:        1 bytes
 56143 ;; Hardware stack levels used:    1
 56144 ;; Hardware stack levels required when called:    1
 56145 ;; This function calls:
 56146 ;;		i2_memset
 56147 ;; This function is called by:
 56148 ;;		_USBDeviceTasks
 56149 ;; This function uses a non-reentrant model
 56150 ;;
 56151                           
 56152                           	psect	text270
 56153  012454                     __ptext270:
 56154                           	opt stack 0
 56155  012454                     i2_USBDeviceInit:
 56156                           	opt stack 14
 56157                           
 56158                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 56159                           
 56160                           ;incstack = 0
 56161  012454  98A0               	bcf	4000,4,c	;volatile
 56162                           
 56163                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 56164  012456  0E00               	movlw	0
 56165  012458  6E63               	movwf	3939,c	;volatile
 56166                           
 56167                           ;usb_device.c: 291: {UIR = 0;};
 56168  01245A  0E00               	movlw	0
 56169  01245C  6E62               	movwf	3938,c	;volatile
 56170                           
 56171                           ;usb_device.c: 294: UEP0 = 0;
 56172  01245E  0E00               	movlw	0
 56173  012460  010F               	movlb	15	; () banked
 56174  012462  6F26               	movwf	38,b	;volatile
 56175                           
 56176                           ; BSR set to: 15
 56177                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 56178  012464  0E27               	movlw	39
 56179  012466  6E2E               	movwf	i2memset@p1,c
 56180  012468  0E0F               	movlw	15
 56181  01246A  6E2F               	movwf	i2memset@p1+1,c
 56182  01246C  0E00               	movlw	0
 56183  01246E  6E31               	movwf	i2memset@c+1,c
 56184  012470  0E00               	movlw	0
 56185  012472  6E30               	movwf	i2memset@c,c
 56186  012474  0E00               	movlw	0
 56187  012476  6E33               	movwf	i2memset@n+1,c
 56188  012478  0E02               	movlw	2
 56189  01247A  6E32               	movwf	i2memset@n,c
 56190  01247C  EC8F  F0C4         	call	i2_memset	;wreg free
 56191                           
 56192                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 56193  012480  0E16               	movlw	22
 56194  012482  010F               	movlb	15	; () banked
 56195  012484  6F39               	movwf	57,b	;volatile
 56196                           
 56197                           ; BSR set to: 15
 56198  012486  0E9F               	movlw	159
 56199  012488  6F37               	movwf	55,b	;volatile
 56200                           
 56201                           ; BSR set to: 15
 56202  01248A  0E7B               	movlw	123
 56203  01248C  6F36               	movwf	54,b	;volatile
 56204                           
 56205                           ; BSR set to: 15
 56206                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 56207  01248E  0E00               	movlw	0
 56208  012490  6E36               	movwf	i2USBDeviceInit@i,c
 56209  012492                     i2l19897:
 56210                           
 56211                           ; BSR set to: 15
 56212  012492  0E0B               	movlw	11
 56213  012494  6436               	cpfsgt	i2USBDeviceInit@i,c
 56214  012496  D001               	goto	i2l147
 56215  012498  D00E               	goto	i2u1810_40
 56216  01249A                     i2l147:
 56217                           
 56218                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 56219                           
 56220                           ; BSR set to: 15
 56221  01249A  5036               	movf	i2USBDeviceInit@i,w,c
 56222  01249C  0D04               	mullw	4
 56223  01249E  0E00               	movlw	0
 56224  0124A0  24F3               	addwf	prodl,w,c
 56225  0124A2  6ED9               	movwf	fsr2l,c
 56226  0124A4  0E0D               	movlw	13
 56227  0124A6  20F4               	addwfc	prodh,w,c
 56228  0124A8  6EDA               	movwf	fsr2h,c
 56229  0124AA  6ADE               	clrf	postinc2,c
 56230  0124AC  6ADE               	clrf	postinc2,c
 56231  0124AE  6ADE               	clrf	postinc2,c
 56232  0124B0  6ADD               	clrf	postdec2,c
 56233  0124B2  2A36               	incf	i2USBDeviceInit@i,f,c
 56234  0124B4  D7EE               	goto	i2l19897
 56235  0124B6                     i2u1810_40:
 56236                           
 56237                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 56238  0124B6  8C65               	bsf	3941,6,c	;volatile
 56239                           
 56240                           ;usb_device.c: 316: UADDR = 0x00;
 56241  0124B8  0E00               	movlw	0
 56242  0124BA  010F               	movlb	15	; () banked
 56243  0124BC  6F38               	movwf	56,b	;volatile
 56244                           
 56245                           ; BSR set to: 15
 56246                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 56247  0124BE  9865               	bcf	3941,4,c	;volatile
 56248                           
 56249                           ; BSR set to: 15
 56250                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 56251  0124C0  9C65               	bcf	3941,6,c	;volatile
 56252  0124C2                     
 56253                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 56254                           
 56255                           ; BSR set to: 15
 56256  0124C2  9662               	bcf	3938,3,c	;volatile
 56257                           
 56258                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 56259  0124C4  0E00               	movlw	0
 56260  0124C6  6E04               	movwf	_inPipes+3,c	;volatile
 56261                           
 56262                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 56263  0124C8  0E00               	movlw	0
 56264  0124CA  0101               	movlb	1	; () banked
 56265  0124CC  6FD8               	movwf	(_outPipes+3)& (0+255),b	;volatile
 56266                           
 56267                           ; BSR set to: 1
 56268                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 56269  0124CE  0E00               	movlw	0
 56270  0124D0  6FDA               	movwf	(_outPipes+5)& (0+255),b	;volatile
 56271  0124D2  0E00               	movlw	0
 56272  0124D4  6FD9               	movwf	(_outPipes+4)& (0+255),b	;volatile
 56273                           
 56274                           ; BSR set to: 1
 56275                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 56276  0124D6  B662               	btfsc	3938,3,c	;volatile
 56277  0124D8  D7F4               	goto	i2l149
 56278                           
 56279                           ; BSR set to: 1
 56280                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 56281                           
 56282                           ; BSR set to: 1
 56283  0124DA  0E01               	movlw	1
 56284  0124DC  6FFB               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 56285                           
 56286                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 56287  0124DE  0E01               	movlw	1
 56288  0124E0  6FFA               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 56289                           
 56290                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 56291  0124E2  0E00               	movlw	0
 56292  0124E4  6FF9               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 56293                           
 56294                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 56295  0124E6  0E00               	movlw	0
 56296  0124E8  6FF8               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 56297                           
 56298                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 56299  0124EA  0E00               	movlw	0
 56300  0124EC  6FFD               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 56301                           
 56302                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 56303  0124EE  0E00               	movlw	0
 56304  0124F0  6E36               	movwf	i2USBDeviceInit@i,c
 56305  0124F2                     i2l19925:
 56306                           
 56307                           ; BSR set to: 1
 56308  0124F2  0E02               	movlw	2
 56309  0124F4  6436               	cpfsgt	i2USBDeviceInit@i,c
 56310  0124F6  D001               	goto	i2l151
 56311  0124F8  D02E               	goto	i2u1813_40
 56312  0124FA                     i2l151:
 56313                           
 56314                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 56315                           
 56316                           ; BSR set to: 1
 56317  0124FA  5036               	movf	i2USBDeviceInit@i,w,c
 56318  0124FC  0D02               	mullw	2
 56319  0124FE  0E07               	movlw	low _pBDTEntryIn
 56320  012500  24F3               	addwf	prodl,w,c
 56321  012502  6ED9               	movwf	fsr2l,c
 56322  012504  0E00               	movlw	high _pBDTEntryIn
 56323  012506  20F4               	addwfc	prodh,w,c
 56324  012508  6EDA               	movwf	fsr2h,c
 56325  01250A  0E00               	movlw	0
 56326  01250C  6EDE               	movwf	postinc2,c
 56327  01250E  0E00               	movlw	0
 56328  012510  6EDD               	movwf	postdec2,c
 56329                           
 56330                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 56331  012512  5036               	movf	i2USBDeviceInit@i,w,c
 56332  012514  0D02               	mullw	2
 56333  012516  0EDE               	movlw	low _pBDTEntryOut
 56334  012518  24F3               	addwf	prodl,w,c
 56335  01251A  6ED9               	movwf	fsr2l,c
 56336  01251C  0E01               	movlw	high _pBDTEntryOut
 56337  01251E  20F4               	addwfc	prodh,w,c
 56338  012520  6EDA               	movwf	fsr2h,c
 56339  012522  0E00               	movlw	0
 56340  012524  6EDE               	movwf	postinc2,c
 56341  012526  0E00               	movlw	0
 56342  012528  6EDD               	movwf	postdec2,c
 56343                           
 56344                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 56345  01252A  5036               	movf	i2USBDeviceInit@i,w,c
 56346  01252C  0D01               	mullw	1
 56347  01252E  0EEB               	movlw	low _ep_data_in
 56348  012530  24F3               	addwf	prodl,w,c
 56349  012532  6ED9               	movwf	fsr2l,c
 56350  012534  0E01               	movlw	high _ep_data_in
 56351  012536  20F4               	addwfc	prodh,w,c
 56352  012538  6EDA               	movwf	fsr2h,c
 56353  01253A  0E00               	movlw	0
 56354  01253C  6EDF               	movwf	indf2,c
 56355                           
 56356                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 56357  01253E  5036               	movf	i2USBDeviceInit@i,w,c
 56358  012540  0D01               	mullw	1
 56359  012542  0EE8               	movlw	low _ep_data_out
 56360  012544  24F3               	addwf	prodl,w,c
 56361  012546  6ED9               	movwf	fsr2l,c
 56362  012548  0E01               	movlw	high _ep_data_out
 56363  01254A  20F4               	addwfc	prodh,w,c
 56364  01254C  6EDA               	movwf	fsr2h,c
 56365  01254E  0E00               	movlw	0
 56366  012550  6EDF               	movwf	indf2,c
 56367  012552  2A36               	incf	i2USBDeviceInit@i,f,c
 56368  012554  D7CE               	goto	i2l19925
 56369  012556                     i2u1813_40:
 56370                           
 56371                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 56372  012556  0E08               	movlw	8
 56373  012558  6E07               	movwf	_pBDTEntryIn,c
 56374  01255A  0E0D               	movlw	13
 56375  01255C  6E08               	movwf	_pBDTEntryIn+1,c
 56376                           
 56377                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 56378  01255E  0E16               	movlw	22
 56379  012560  010F               	movlb	15	; () banked
 56380  012562  6F26               	movwf	38,b	;volatile
 56381                           
 56382                           ; BSR set to: 15
 56383                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 56384  012564  0E0D               	movlw	13
 56385  012566  010D               	movlb	13	; () banked
 56386  012568  6F03               	movwf	3,b	;volatile
 56387  01256A  0E30               	movlw	48
 56388  01256C  6F02               	movwf	2,b	;volatile
 56389                           
 56390                           ; BSR set to: 13
 56391                           ;usb_device.c: 359: BDT[0].CNT = 8;
 56392  01256E  0E08               	movlw	8
 56393  012570  6F01               	movwf	1,b	;volatile
 56394                           
 56395                           ; BSR set to: 13
 56396                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 56397  012572  0E04               	movlw	4
 56398  012574  6F00               	movwf	0,b	;volatile
 56399                           
 56400                           ; BSR set to: 13
 56401                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 56402  012576  8F00               	bsf	0,7,b	;volatile
 56403                           
 56404                           ; BSR set to: 13
 56405                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 56406  012578  0E00               	movlw	0
 56407  01257A  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 56408                           
 56409                           ; BSR set to: 13
 56410                           ;usb_device.c: 366: USB1msTickCount = 0;
 56411  01257C  0E00               	movlw	0
 56412  01257E  0102               	movlb	2	; () banked
 56413  012580  6FAD               	movwf	_USB1msTickCount& (0+255),b	;volatile
 56414  012582  0E00               	movlw	0
 56415  012584  6FAE               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 56416  012586  0E00               	movlw	0
 56417  012588  6FAF               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 56418  01258A  0E00               	movlw	0
 56419  01258C  6FB0               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 56420                           
 56421                           ; BSR set to: 2
 56422                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 56423  01258E  0E00               	movlw	0
 56424  012590  0101               	movlb	1	; () banked
 56425  012592  6FF7               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 56426                           
 56427                           ; BSR set to: 1
 56428                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 56429  012594  0E00               	movlw	0
 56430  012596  6E2B               	movwf	_USBDeviceState,c	;volatile
 56431                           
 56432                           ; BSR set to: 1
 56433  012598  0012               	return		;funcret
 56434  01259A                     __end_ofi2_USBDeviceInit:
 56435                           	opt stack 0
 56436                           tosu	equ	0xFFF
 56437                           tosh	equ	0xFFE
 56438                           tosl	equ	0xFFD
 56439                           pclatu	equ	0xFFB
 56440                           pclath	equ	0xFFA
 56441                           tblptru	equ	0xFF8
 56442                           tblptrh	equ	0xFF7
 56443                           tblptrl	equ	0xFF6
 56444                           tablat	equ	0xFF5
 56445                           prodh	equ	0xFF4
 56446                           prodl	equ	0xFF3
 56447                           intcon	equ	0xFF2
 56448                           intcon2	equ	0xFF1
 56449                           intcon3	equ	0xFF0
 56450                           indf0	equ	0xFEF
 56451                           postinc0	equ	0xFEE
 56452                           fsr0h	equ	0xFEA
 56453                           fsr0l	equ	0xFE9
 56454                           wreg	equ	0xFE8
 56455                           indf1	equ	0xFE7
 56456                           postinc1	equ	0xFE6
 56457                           postdec1	equ	0xFE5
 56458                           plusw1	equ	0xFE3
 56459                           fsr1h	equ	0xFE2
 56460                           fsr1l	equ	0xFE1
 56461                           indf2	equ	0xFDF
 56462                           postinc2	equ	0xFDE
 56463                           postdec2	equ	0xFDD
 56464                           plusw2	equ	0xFDB
 56465                           fsr2h	equ	0xFDA
 56466                           fsr2l	equ	0xFD9
 56467                           status	equ	0xFD8
 56468                           
 56469 ;; *************** function _USBWakeFromSuspend *****************
 56470 ;; Defined at:
 56471 ;;		line 2305 in file "usb_device.c"
 56472 ;; Parameters:    Size  Location     Type
 56473 ;;		None
 56474 ;; Auto vars:     Size  Location     Type
 56475 ;;		None
 56476 ;; Return value:  Size  Location     Type
 56477 ;;                  1    wreg      void 
 56478 ;; Registers used:
 56479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 56480 ;; Tracked objects:
 56481 ;;		On entry : 0/0
 56482 ;;		On exit  : 0/0
 56483 ;;		Unchanged: 0/0
 56484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56489 ;;Total ram usage:        0 bytes
 56490 ;; Hardware stack levels used:    1
 56491 ;; Hardware stack levels required when called:    4
 56492 ;; This function calls:
 56493 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 56494 ;; This function is called by:
 56495 ;;		_USBDeviceTasks
 56496 ;; This function uses a non-reentrant model
 56497 ;;
 56498                           
 56499                           	psect	text271
 56500  018436                     __ptext271:
 56501                           	opt stack 0
 56502  018436                     _USBWakeFromSuspend:
 56503                           	opt stack 11
 56504                           
 56505                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 56506                           
 56507                           ; BSR set to: 1
 56508                           ;incstack = 0
 56509  018436  0E00               	movlw	0
 56510  018438  0101               	movlb	1	; () banked
 56511  01843A  6FFD               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 56512                           
 56513                           ; BSR set to: 1
 56514                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 56515  01843C  0E00               	movlw	0
 56516  01843E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 56517  018440  0E74               	movlw	116
 56518  018442  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 56519  018444  0E00               	movlw	0
 56520  018446  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 56521  018448  0E00               	movlw	0
 56522  01844A  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 56523  01844C  0E00               	movlw	0
 56524  01844E  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 56525  018450  0E00               	movlw	0
 56526  018452  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 56527  018454  EC7A  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 56528                           
 56529                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 56530  018458  9265               	bcf	3941,1,c	;volatile
 56531                           
 56532                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 56533  01845A  010F               	movlb	15	; () banked
 56534  01845C  9536               	bcf	54,2,b	;volatile
 56535                           
 56536                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 56537  01845E  D001               	goto	i2l317
 56538  018460                     
 56539                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 56540                           
 56541                           ; BSR set to: 15
 56542  018460  9462               	bcf	3938,2,c	;volatile
 56543  018462                     i2l317:
 56544  018462  B462               	btfsc	3938,2,c	;volatile
 56545  018464  D7FD               	goto	i2l318
 56546                           
 56547                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 56548  018466  0E00               	movlw	0
 56549  018468  0101               	movlb	1	; () banked
 56550  01846A  6FF7               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 56551                           
 56552                           ; BSR set to: 1
 56553  01846C  0012               	return		;funcret
 56554  01846E                     __end_of_USBWakeFromSuspend:
 56555                           	opt stack 0
 56556                           tosu	equ	0xFFF
 56557                           tosh	equ	0xFFE
 56558                           tosl	equ	0xFFD
 56559                           pclatu	equ	0xFFB
 56560                           pclath	equ	0xFFA
 56561                           tblptru	equ	0xFF8
 56562                           tblptrh	equ	0xFF7
 56563                           tblptrl	equ	0xFF6
 56564                           tablat	equ	0xFF5
 56565                           prodh	equ	0xFF4
 56566                           prodl	equ	0xFF3
 56567                           intcon	equ	0xFF2
 56568                           intcon2	equ	0xFF1
 56569                           intcon3	equ	0xFF0
 56570                           indf0	equ	0xFEF
 56571                           postinc0	equ	0xFEE
 56572                           fsr0h	equ	0xFEA
 56573                           fsr0l	equ	0xFE9
 56574                           wreg	equ	0xFE8
 56575                           indf1	equ	0xFE7
 56576                           postinc1	equ	0xFE6
 56577                           postdec1	equ	0xFE5
 56578                           plusw1	equ	0xFE3
 56579                           fsr1h	equ	0xFE2
 56580                           fsr1l	equ	0xFE1
 56581                           indf2	equ	0xFDF
 56582                           postinc2	equ	0xFDE
 56583                           postdec2	equ	0xFDD
 56584                           plusw2	equ	0xFDB
 56585                           fsr2h	equ	0xFDA
 56586                           fsr2l	equ	0xFD9
 56587                           status	equ	0xFD8
 56588                           
 56589 ;; *************** function _USBSuspend *****************
 56590 ;; Defined at:
 56591 ;;		line 2247 in file "usb_device.c"
 56592 ;; Parameters:    Size  Location     Type
 56593 ;;		None
 56594 ;; Auto vars:     Size  Location     Type
 56595 ;;		None
 56596 ;; Return value:  Size  Location     Type
 56597 ;;                  1    wreg      void 
 56598 ;; Registers used:
 56599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 56600 ;; Tracked objects:
 56601 ;;		On entry : 0/0
 56602 ;;		On exit  : 0/0
 56603 ;;		Unchanged: 0/0
 56604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56609 ;;Total ram usage:        0 bytes
 56610 ;; Hardware stack levels used:    1
 56611 ;; Hardware stack levels required when called:    4
 56612 ;; This function calls:
 56613 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 56614 ;; This function is called by:
 56615 ;;		_USBDeviceTasks
 56616 ;; This function uses a non-reentrant model
 56617 ;;
 56618                           
 56619                           	psect	text272
 56620  01872C                     __ptext272:
 56621                           	opt stack 0
 56622  01872C                     _USBSuspend:
 56623                           	opt stack 11
 56624                           
 56625                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 56626                           
 56627                           ; BSR set to: 1
 56628                           ;incstack = 0
 56629  01872C  010F               	movlb	15	; () banked
 56630  01872E  8536               	bsf	54,2,b	;volatile
 56631                           
 56632                           ; BSR set to: 15
 56633                           ;usb_device.c: 2273: (UIR &= 0xEF);
 56634  018730  9862               	bcf	3938,4,c	;volatile
 56635                           
 56636                           ; BSR set to: 15
 56637                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 56638  018732  8265               	bsf	3941,1,c	;volatile
 56639                           
 56640                           ; BSR set to: 15
 56641                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 56642  018734  0E01               	movlw	1
 56643  018736  0101               	movlb	1	; () banked
 56644  018738  6FFD               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 56645                           
 56646                           ; BSR set to: 1
 56647                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 56648  01873A  0E00               	movlw	0
 56649  01873C  6FF7               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 56650                           
 56651                           ; BSR set to: 1
 56652                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 56653  01873E  0E00               	movlw	0
 56654  018740  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 56655  018742  0E75               	movlw	117
 56656  018744  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 56657  018746  0E00               	movlw	0
 56658  018748  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 56659  01874A  0E00               	movlw	0
 56660  01874C  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 56661  01874E  0E00               	movlw	0
 56662  018750  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 56663  018752  0E00               	movlw	0
 56664  018754  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 56665  018756  EC7A  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 56666  01875A  0012               	return		;funcret
 56667  01875C                     __end_of_USBSuspend:
 56668                           	opt stack 0
 56669                           tosu	equ	0xFFF
 56670                           tosh	equ	0xFFE
 56671                           tosl	equ	0xFFD
 56672                           pclatu	equ	0xFFB
 56673                           pclath	equ	0xFFA
 56674                           tblptru	equ	0xFF8
 56675                           tblptrh	equ	0xFF7
 56676                           tblptrl	equ	0xFF6
 56677                           tablat	equ	0xFF5
 56678                           prodh	equ	0xFF4
 56679                           prodl	equ	0xFF3
 56680                           intcon	equ	0xFF2
 56681                           intcon2	equ	0xFF1
 56682                           intcon3	equ	0xFF0
 56683                           indf0	equ	0xFEF
 56684                           postinc0	equ	0xFEE
 56685                           fsr0h	equ	0xFEA
 56686                           fsr0l	equ	0xFE9
 56687                           wreg	equ	0xFE8
 56688                           indf1	equ	0xFE7
 56689                           postinc1	equ	0xFE6
 56690                           postdec1	equ	0xFE5
 56691                           plusw1	equ	0xFE3
 56692                           fsr1h	equ	0xFE2
 56693                           fsr1l	equ	0xFE1
 56694                           indf2	equ	0xFDF
 56695                           postinc2	equ	0xFDE
 56696                           postdec2	equ	0xFDD
 56697                           plusw2	equ	0xFDB
 56698                           fsr2h	equ	0xFDA
 56699                           fsr2l	equ	0xFD9
 56700                           status	equ	0xFD8
 56701                           
 56702 ;; *************** function _USBStallHandler *****************
 56703 ;; Defined at:
 56704 ;;		line 2204 in file "usb_device.c"
 56705 ;; Parameters:    Size  Location     Type
 56706 ;;		None
 56707 ;; Auto vars:     Size  Location     Type
 56708 ;;		None
 56709 ;; Return value:  Size  Location     Type
 56710 ;;                  1    wreg      void 
 56711 ;; Registers used:
 56712 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 56713 ;; Tracked objects:
 56714 ;;		On entry : 0/0
 56715 ;;		On exit  : 0/0
 56716 ;;		Unchanged: 0/0
 56717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56720 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56721 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56722 ;;Total ram usage:        1 bytes
 56723 ;; Hardware stack levels used:    1
 56724 ;; This function calls:
 56725 ;;		Nothing
 56726 ;; This function is called by:
 56727 ;;		_USBDeviceTasks
 56728 ;; This function uses a non-reentrant model
 56729 ;;
 56730                           
 56731                           	psect	text273
 56732  018248                     __ptext273:
 56733                           	opt stack 0
 56734  018248                     _USBStallHandler:
 56735                           	opt stack 15
 56736                           
 56737                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 56738                           
 56739                           ;incstack = 0
 56740  018248  010F               	movlb	15	; () banked
 56741  01824A  A126               	btfss	38,0,b	;volatile
 56742  01824C  D01D               	goto	i2l309
 56743                           
 56744                           ; BSR set to: 15
 56745                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 56746  01824E  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 56747  018252  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 56748  018256  0E80               	movlw	128
 56749  018258  18DE               	xorwf	postinc2,w,c
 56750  01825A  A4D8               	btfss	status,2,c
 56751  01825C  D014               	goto	i2l310
 56752                           
 56753                           ; BSR set to: 15
 56754  01825E  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 56755  018262  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56756  018266  0E84               	movlw	132
 56757  018268  18DE               	xorwf	postinc2,w,c
 56758  01826A  A4D8               	btfss	status,2,c
 56759  01826C  D00C               	goto	i2l310
 56760                           
 56761                           ; BSR set to: 15
 56762                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 56763  01826E  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 56764  018272  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 56765  018276  0E0C               	movlw	12
 56766  018278  6EDF               	movwf	indf2,c
 56767                           
 56768                           ; BSR set to: 15
 56769                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 56770  01827A  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 56771  01827E  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 56772  018282  0E00               	movlw	0
 56773  018284  8EDB               	bsf	plusw2,7,c
 56774  018286                     i2l310:
 56775                           
 56776                           ; BSR set to: 15
 56777                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 56778                           
 56779                           ; BSR set to: 15
 56780  018286  9126               	bcf	38,0,b	;volatile
 56781  018288                     i2l309:
 56782                           
 56783                           ; BSR set to: 15
 56784                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 56785  018288  9A62               	bcf	3938,5,c	;volatile
 56786                           
 56787                           ; BSR set to: 15
 56788  01828A  0012               	return		;funcret
 56789  01828C                     __end_of_USBStallHandler:
 56790                           	opt stack 0
 56791                           tosu	equ	0xFFF
 56792                           tosh	equ	0xFFE
 56793                           tosl	equ	0xFFD
 56794                           pclatu	equ	0xFFB
 56795                           pclath	equ	0xFFA
 56796                           tblptru	equ	0xFF8
 56797                           tblptrh	equ	0xFF7
 56798                           tblptrl	equ	0xFF6
 56799                           tablat	equ	0xFF5
 56800                           prodh	equ	0xFF4
 56801                           prodl	equ	0xFF3
 56802                           intcon	equ	0xFF2
 56803                           intcon2	equ	0xFF1
 56804                           intcon3	equ	0xFF0
 56805                           indf0	equ	0xFEF
 56806                           postinc0	equ	0xFEE
 56807                           fsr0h	equ	0xFEA
 56808                           fsr0l	equ	0xFE9
 56809                           wreg	equ	0xFE8
 56810                           indf1	equ	0xFE7
 56811                           postinc1	equ	0xFE6
 56812                           postdec1	equ	0xFE5
 56813                           plusw1	equ	0xFE3
 56814                           fsr1h	equ	0xFE2
 56815                           fsr1l	equ	0xFE1
 56816                           indf2	equ	0xFDF
 56817                           postinc2	equ	0xFDE
 56818                           postdec2	equ	0xFDD
 56819                           plusw2	equ	0xFDB
 56820                           fsr2h	equ	0xFDA
 56821                           fsr2l	equ	0xFD9
 56822                           status	equ	0xFD8
 56823                           
 56824 ;; *************** function _USBIncrement1msInternalTimers *****************
 56825 ;; Defined at:
 56826 ;;		line 3027 in file "usb_device.c"
 56827 ;; Parameters:    Size  Location     Type
 56828 ;;		None
 56829 ;; Auto vars:     Size  Location     Type
 56830 ;;		None
 56831 ;; Return value:  Size  Location     Type
 56832 ;;                  1    wreg      void 
 56833 ;; Registers used:
 56834 ;;		wreg, status,2, status,0
 56835 ;; Tracked objects:
 56836 ;;		On entry : 0/0
 56837 ;;		On exit  : 0/0
 56838 ;;		Unchanged: 0/0
 56839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56844 ;;Total ram usage:        0 bytes
 56845 ;; Hardware stack levels used:    1
 56846 ;; This function calls:
 56847 ;;		Nothing
 56848 ;; This function is called by:
 56849 ;;		_USBDeviceTasks
 56850 ;; This function uses a non-reentrant model
 56851 ;;
 56852                           
 56853                           	psect	text274
 56854  018CC0                     __ptext274:
 56855                           	opt stack 0
 56856  018CC0                     _USBIncrement1msInternalTimers:
 56857                           	opt stack 15
 56858                           
 56859                           ;usb_device.c: 3035: USB1msTickCount++;
 56860                           
 56861                           ; BSR set to: 15
 56862                           ;incstack = 0
 56863  018CC0  0E01               	movlw	1
 56864  018CC2  0102               	movlb	2	; () banked
 56865  018CC4  27AD               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 56866  018CC6  0E00               	movlw	0
 56867  018CC8  23AE               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 56868  018CCA  23AF               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 56869  018CCC  23B0               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 56870                           
 56871                           ; BSR set to: 2
 56872                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 56873  018CCE  0101               	movlb	1	; () banked
 56874  018CD0  51FD               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 56875  018CD2  A4D8               	btfss	status,2,c
 56876  018CD4  0012               	return	
 56877                           
 56878                           ; BSR set to: 1
 56879                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 56880  018CD6  2BF7               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 56881                           
 56882                           ; BSR set to: 1
 56883                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 56884  018CD8  51F7               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 56885  018CDA  A4D8               	btfss	status,2,c
 56886  018CDC  0012               	return	
 56887                           
 56888                           ; BSR set to: 1
 56889                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 56890  018CDE  69F7               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 56891                           
 56892                           ; BSR set to: 1
 56893  018CE0  0012               	return	
 56894  018CE2                     __end_of_USBIncrement1msInternalTimers:
 56895                           	opt stack 0
 56896                           tosu	equ	0xFFF
 56897                           tosh	equ	0xFFE
 56898                           tosl	equ	0xFFD
 56899                           pclatu	equ	0xFFB
 56900                           pclath	equ	0xFFA
 56901                           tblptru	equ	0xFF8
 56902                           tblptrh	equ	0xFF7
 56903                           tblptrl	equ	0xFF6
 56904                           tablat	equ	0xFF5
 56905                           prodh	equ	0xFF4
 56906                           prodl	equ	0xFF3
 56907                           intcon	equ	0xFF2
 56908                           intcon2	equ	0xFF1
 56909                           intcon3	equ	0xFF0
 56910                           indf0	equ	0xFEF
 56911                           postinc0	equ	0xFEE
 56912                           fsr0h	equ	0xFEA
 56913                           fsr0l	equ	0xFE9
 56914                           wreg	equ	0xFE8
 56915                           indf1	equ	0xFE7
 56916                           postinc1	equ	0xFE6
 56917                           postdec1	equ	0xFE5
 56918                           plusw1	equ	0xFE3
 56919                           fsr1h	equ	0xFE2
 56920                           fsr1l	equ	0xFE1
 56921                           indf2	equ	0xFDF
 56922                           postinc2	equ	0xFDE
 56923                           postdec2	equ	0xFDD
 56924                           plusw2	equ	0xFDB
 56925                           fsr2h	equ	0xFDA
 56926                           fsr2l	equ	0xFD9
 56927                           status	equ	0xFD8
 56928                           
 56929 ;; *************** function _USBCtrlEPService *****************
 56930 ;; Defined at:
 56931 ;;		line 2374 in file "usb_device.c"
 56932 ;; Parameters:    Size  Location     Type
 56933 ;;		None
 56934 ;; Auto vars:     Size  Location     Type
 56935 ;;		None
 56936 ;; Return value:  Size  Location     Type
 56937 ;;                  1    wreg      void 
 56938 ;; Registers used:
 56939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 56940 ;; Tracked objects:
 56941 ;;		On entry : 0/0
 56942 ;;		On exit  : 0/0
 56943 ;;		Unchanged: 0/0
 56944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56947 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56948 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56949 ;;Total ram usage:        1 bytes
 56950 ;; Hardware stack levels used:    1
 56951 ;; Hardware stack levels required when called:    7
 56952 ;; This function calls:
 56953 ;;		_USBCtrlTrfInHandler
 56954 ;;		_USBCtrlTrfOutHandler
 56955 ;;		_USBCtrlTrfSetupHandler
 56956 ;;		i2_memcpy
 56957 ;; This function is called by:
 56958 ;;		_USBDeviceTasks
 56959 ;; This function uses a non-reentrant model
 56960 ;;
 56961                           
 56962                           	psect	text275
 56963  016476                     __ptext275:
 56964                           	opt stack 0
 56965  016476                     _USBCtrlEPService:
 56966                           	opt stack 8
 56967                           
 56968                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 56969                           
 56970                           ; BSR set to: 1
 56971                           ;incstack = 0
 56972  016476  0E2D               	movlw	45
 56973  016478  6E26               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 56974                           
 56975                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 56976  01647A  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 56977  01647E  0EFD               	movlw	253
 56978  016480  164B               	andwf	??_USBCtrlEPService,f,c
 56979  016482  A4D8               	btfss	status,2,c
 56980  016484  D03B               	goto	i2l323
 56981                           
 56982                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 56983  016486  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 56984  01648A  90D8               	bcf	status,0,c
 56985  01648C  324B               	rrcf	??_USBCtrlEPService,f,c
 56986  01648E  0E3F               	movlw	63
 56987  016490  164B               	andwf	??_USBCtrlEPService,f,c
 56988  016492  504B               	movf	??_USBCtrlEPService,w,c
 56989  016494  0D04               	mullw	4
 56990  016496  0E00               	movlw	0
 56991  016498  24F3               	addwf	prodl,w,c
 56992  01649A  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
 56993  01649C  0E0D               	movlw	13
 56994  01649E  20F4               	addwfc	prodh,w,c
 56995  0164A0  6E18               	movwf	_pBDTEntryEP0OutCurrent+1,c
 56996                           
 56997                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 56998  0164A2  C017  F015         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 56999  0164A6  C018  F016         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 57000                           
 57001                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 57002  0164AA  0E04               	movlw	4
 57003  0164AC  1815               	xorwf	_pBDTEntryEP0OutNext,w,c
 57004  0164AE  6E15               	movwf	_pBDTEntryEP0OutNext,c
 57005  0164B0  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 57006  0164B2  6E16               	movwf	_pBDTEntryEP0OutNext+1,c
 57007                           
 57008                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 57009  0164B4  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 57010  0164B8  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 57011  0164BC  30DF               	rrcf	indf2,w,c
 57012  0164BE  32E8               	rrcf	wreg,f,c
 57013  0164C0  0B0F               	andlw	15
 57014  0164C2  0A0D               	xorlw	13
 57015  0164C4  A4D8               	btfss	status,2,c
 57016  0164C6  D017               	goto	i2l324
 57017                           
 57018                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 57019  0164C8  0E30               	movlw	48
 57020  0164CA  6E2E               	movwf	i2memcpy@d1,c
 57021  0164CC  0E0D               	movlw	13
 57022  0164CE  6E2F               	movwf	i2memcpy@d1+1,c
 57023  0164D0  EE20 F002          	lfsr	2,2
 57024  0164D4  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
 57025  0164D6  26D9               	addwf	fsr2l,f,c
 57026  0164D8  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 57027  0164DA  22DA               	addwfc	fsr2h,f,c
 57028  0164DC  CFDE F030          	movff	postinc2,i2memcpy@s1
 57029  0164E0  CFDD F031          	movff	postdec2,i2memcpy@s1+1
 57030  0164E4  0E00               	movlw	0
 57031  0164E6  6E33               	movwf	i2memcpy@n+1,c
 57032  0164E8  0E08               	movlw	8
 57033  0164EA  6E32               	movwf	i2memcpy@n,c
 57034  0164EC  ECB0  F0BB         	call	i2_memcpy	;wreg free
 57035                           
 57036                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 57037  0164F0  ECAC  F0B3         	call	_USBCtrlTrfSetupHandler	;wreg free
 57038                           
 57039                           ;usb_device.c: 2411: }
 57040  0164F4  0012               	return	
 57041  0164F6                     i2l324:
 57042                           
 57043                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 57044  0164F6  EC25  F0BB         	call	_USBCtrlTrfOutHandler	;wreg free
 57045                           
 57046                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 57047  0164FA  0012               	return	
 57048  0164FC                     i2l323:
 57049                           
 57050                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 57051  0164FC  502C               	movf	_USTATcopy,w,c	;volatile
 57052  0164FE  0BFD               	andlw	253
 57053  016500  0A04               	xorlw	4
 57054  016502  A4D8               	btfss	status,2,c
 57055  016504  0012               	return	
 57056                           
 57057                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 57058  016506  EC60  F0AC         	call	_USBCtrlTrfInHandler	;wreg free
 57059  01650A  0012               	return	
 57060  01650C                     __end_of_USBCtrlEPService:
 57061                           	opt stack 0
 57062                           tosu	equ	0xFFF
 57063                           tosh	equ	0xFFE
 57064                           tosl	equ	0xFFD
 57065                           pclatu	equ	0xFFB
 57066                           pclath	equ	0xFFA
 57067                           tblptru	equ	0xFF8
 57068                           tblptrh	equ	0xFF7
 57069                           tblptrl	equ	0xFF6
 57070                           tablat	equ	0xFF5
 57071                           prodh	equ	0xFF4
 57072                           prodl	equ	0xFF3
 57073                           intcon	equ	0xFF2
 57074                           intcon2	equ	0xFF1
 57075                           intcon3	equ	0xFF0
 57076                           indf0	equ	0xFEF
 57077                           postinc0	equ	0xFEE
 57078                           fsr0h	equ	0xFEA
 57079                           fsr0l	equ	0xFE9
 57080                           wreg	equ	0xFE8
 57081                           indf1	equ	0xFE7
 57082                           postinc1	equ	0xFE6
 57083                           postdec1	equ	0xFE5
 57084                           plusw1	equ	0xFE3
 57085                           fsr1h	equ	0xFE2
 57086                           fsr1l	equ	0xFE1
 57087                           indf2	equ	0xFDF
 57088                           postinc2	equ	0xFDE
 57089                           postdec2	equ	0xFDD
 57090                           plusw2	equ	0xFDB
 57091                           fsr2h	equ	0xFDA
 57092                           fsr2l	equ	0xFD9
 57093                           status	equ	0xFD8
 57094                           
 57095 ;; *************** function i2_memcpy *****************
 57096 ;; Defined at:
 57097 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 57098 ;; Parameters:    Size  Location     Type
 57099 ;;  d1              2    0[COMRAM] PTR void 
 57100 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 57101 ;;		 -> SetupPkt(8), 
 57102 ;;  s1              2    2[COMRAM] PTR const void 
 57103 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 57104 ;;		 -> calibrationParameters(84), ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), 
 57105 ;;		 -> RAM(3759), SetupPkt(8), 
 57106 ;;  n               2    4[COMRAM] unsigned int 
 57107 ;; Auto vars:     Size  Location     Type
 57108 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 57109 ;;		 -> extension(4), filename(9), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 57110 ;;		 -> calibrationParameters(84), ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), 
 57111 ;;		 -> RAM(3759), SetupPkt(8), 
 57112 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 57113 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), ToSendDataBuffer(64), msd_buffer(512), 
 57114 ;;		 -> SetupPkt(8), 
 57115 ;;  memcpy          1   10[COMRAM] unsigned char 
 57116 ;; Return value:  Size  Location     Type
 57117 ;;                  2    0[COMRAM] PTR void 
 57118 ;; Registers used:
 57119 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 57120 ;; Tracked objects:
 57121 ;;		On entry : 0/0
 57122 ;;		On exit  : 0/0
 57123 ;;		Unchanged: 0/0
 57124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 57125 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57126 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57128 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57129 ;;Total ram usage:       11 bytes
 57130 ;; Hardware stack levels used:    1
 57131 ;; This function calls:
 57132 ;;		Nothing
 57133 ;; This function is called by:
 57134 ;;		_USBCtrlEPService
 57135 ;; This function uses a non-reentrant model
 57136 ;;
 57137                           
 57138                           	psect	text276
 57139  017760                     __ptext276:
 57140                           	opt stack 0
 57141  017760                     i2_memcpy:
 57142                           	opt stack 14
 57143                           
 57144                           ;incstack = 0
 57145  017760  C030  F036         	movff	i2memcpy@s1,i2memcpy@s
 57146  017764  C031  F037         	movff	i2memcpy@s1+1,i2memcpy@s+1
 57147  017768  C02E  F034         	movff	i2memcpy@d1,i2memcpy@d
 57148  01776C  C02F  F035         	movff	i2memcpy@d1+1,i2memcpy@d+1
 57149  017770  D01C               	goto	i2l4491
 57150  017772                     i2l18395:
 57151  017772  C036  FFF6         	movff	i2memcpy@s,tblptrl
 57152  017776  C037  FFF7         	movff	i2memcpy@s+1,tblptrh
 57153  01777A  0E00               	movlw	low (__mediumconst shr (0+16))
 57154  01777C  6EF8               	movwf	tblptru,c
 57155  01777E  0E0E               	movlw	(high __ramtop+-1)
 57156  017780  64F7               	cpfsgt	tblptrh,c
 57157  017782  D003               	bra	i2u1570_47
 57158  017784  0008               	tblrd		*
 57159  017786  50F5               	movf	tablat,w,c
 57160  017788  D005               	bra	i2u1570_40
 57161  01778A                     i2u1570_47:
 57162  01778A  CFF6 FFE9          	movff	tblptrl,fsr0l
 57163  01778E  CFF7 FFEA          	movff	tblptrh,fsr0h
 57164  017792  50EF               	movf	indf0,w,c
 57165  017794                     i2u1570_40:
 57166  017794  6E38               	movwf	i2memcpy@tmp,c
 57167  017796  4A36               	infsnz	i2memcpy@s,f,c
 57168  017798  2A37               	incf	i2memcpy@s+1,f,c
 57169  01779A  C034  FFD9         	movff	i2memcpy@d,fsr2l
 57170  01779E  C035  FFDA         	movff	i2memcpy@d+1,fsr2h
 57171  0177A2  C038  FFDF         	movff	i2memcpy@tmp,indf2
 57172  0177A6  4A34               	infsnz	i2memcpy@d,f,c
 57173  0177A8  2A35               	incf	i2memcpy@d+1,f,c
 57174  0177AA                     i2l4491:
 57175  0177AA  0632               	decf	i2memcpy@n,f,c
 57176  0177AC  A0D8               	btfss	status,0,c
 57177  0177AE  0633               	decf	i2memcpy@n+1,f,c
 57178  0177B0  2832               	incf	i2memcpy@n,w,c
 57179  0177B2  E1DF               	bnz	i2l18395
 57180  0177B4  2833               	incf	i2memcpy@n+1,w,c
 57181  0177B6  B4D8               	btfsc	status,2,c
 57182  0177B8  0012               	return	
 57183  0177BA  D7DB               	goto	i2l4492
 57184  0177BC                     __end_ofi2_memcpy:
 57185                           	opt stack 0
 57186                           tosu	equ	0xFFF
 57187                           tosh	equ	0xFFE
 57188                           tosl	equ	0xFFD
 57189                           pclatu	equ	0xFFB
 57190                           pclath	equ	0xFFA
 57191                           tblptru	equ	0xFF8
 57192                           tblptrh	equ	0xFF7
 57193                           tblptrl	equ	0xFF6
 57194                           tablat	equ	0xFF5
 57195                           prodh	equ	0xFF4
 57196                           prodl	equ	0xFF3
 57197                           intcon	equ	0xFF2
 57198                           intcon2	equ	0xFF1
 57199                           intcon3	equ	0xFF0
 57200                           indf0	equ	0xFEF
 57201                           postinc0	equ	0xFEE
 57202                           fsr0h	equ	0xFEA
 57203                           fsr0l	equ	0xFE9
 57204                           wreg	equ	0xFE8
 57205                           indf1	equ	0xFE7
 57206                           postinc1	equ	0xFE6
 57207                           postdec1	equ	0xFE5
 57208                           plusw1	equ	0xFE3
 57209                           fsr1h	equ	0xFE2
 57210                           fsr1l	equ	0xFE1
 57211                           indf2	equ	0xFDF
 57212                           postinc2	equ	0xFDE
 57213                           postdec2	equ	0xFDD
 57214                           plusw2	equ	0xFDB
 57215                           fsr2h	equ	0xFDA
 57216                           fsr2l	equ	0xFD9
 57217                           status	equ	0xFD8
 57218                           
 57219 ;; *************** function _USBCtrlTrfSetupHandler *****************
 57220 ;; Defined at:
 57221 ;;		line 2467 in file "usb_device.c"
 57222 ;; Parameters:    Size  Location     Type
 57223 ;;		None
 57224 ;; Auto vars:     Size  Location     Type
 57225 ;;		None
 57226 ;; Return value:  Size  Location     Type
 57227 ;;                  1    wreg      void 
 57228 ;; Registers used:
 57229 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 57230 ;; Tracked objects:
 57231 ;;		On entry : 0/0
 57232 ;;		On exit  : 0/0
 57233 ;;		Unchanged: 0/0
 57234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 57235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57239 ;;Total ram usage:        0 bytes
 57240 ;; Hardware stack levels used:    1
 57241 ;; Hardware stack levels required when called:    6
 57242 ;; This function calls:
 57243 ;;		_USBCheckStdRequest
 57244 ;;		_USBCtrlEPServiceComplete
 57245 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 57246 ;; This function is called by:
 57247 ;;		_USBCtrlEPService
 57248 ;; This function uses a non-reentrant model
 57249 ;;
 57250                           
 57251                           	psect	text277
 57252  016758                     __ptext277:
 57253                           	opt stack 0
 57254  016758                     _USBCtrlTrfSetupHandler:
 57255                           	opt stack 8
 57256                           
 57257                           ;usb_device.c: 2472: shortPacketStatus = 0;
 57258                           
 57259                           ;incstack = 0
 57260  016758  0E00               	movlw	0
 57261  01675A  6E2A               	movwf	_shortPacketStatus,c	;volatile
 57262                           
 57263                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 57264  01675C  0E00               	movlw	0
 57265  01675E  6E25               	movwf	_USBDeferStatusStagePacket,c	;volatile
 57266                           
 57267                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 57268  016760  0E00               	movlw	0
 57269  016762  0101               	movlb	1	; () banked
 57270  016764  6FF9               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 57271                           
 57272                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 57273  016766  0E00               	movlw	0
 57274  016768  6FF8               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 57275                           
 57276                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 57277  01676A  0E00               	movlw	0
 57278  01676C  6FFC               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 57279                           
 57280                           ;usb_device.c: 2477: controlTransferState = 0;
 57281  01676E  0E00               	movlw	0
 57282  016770  6E29               	movwf	_controlTransferState,c	;volatile
 57283                           
 57284                           ; BSR set to: 1
 57285                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 57286  016772  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 57287  016776  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57288  01677A  0E7F               	movlw	127
 57289  01677C  16DF               	andwf	indf2,f,c
 57290                           
 57291                           ; BSR set to: 1
 57292                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 57293  01677E  0E04               	movlw	4
 57294  016780  1807               	xorwf	_pBDTEntryIn,w,c
 57295  016782  6E07               	movwf	_pBDTEntryIn,c
 57296  016784  5008               	movf	_pBDTEntryIn+1,w,c
 57297  016786  6E08               	movwf	_pBDTEntryIn+1,c
 57298                           
 57299                           ; BSR set to: 1
 57300                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 57301  016788  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 57302  01678C  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57303  016790  0E7F               	movlw	127
 57304  016792  16DF               	andwf	indf2,f,c
 57305                           
 57306                           ; BSR set to: 1
 57307                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 57308  016794  0E04               	movlw	4
 57309  016796  1807               	xorwf	_pBDTEntryIn,w,c
 57310  016798  6E07               	movwf	_pBDTEntryIn,c
 57311  01679A  5008               	movf	_pBDTEntryIn+1,w,c
 57312  01679C  6E08               	movwf	_pBDTEntryIn+1,c
 57313                           
 57314                           ; BSR set to: 1
 57315                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 57316  01679E  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57317  0167A2  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57318  0167A6  0E7F               	movlw	127
 57319  0167A8  16DF               	andwf	indf2,f,c
 57320                           
 57321                           ; BSR set to: 1
 57322                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 57323  0167AA  0E00               	movlw	0
 57324  0167AC  6E04               	movwf	_inPipes+3,c	;volatile
 57325                           
 57326                           ; BSR set to: 1
 57327                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 57328  0167AE  0E00               	movlw	0
 57329  0167B0  6E06               	movwf	_inPipes+5,c	;volatile
 57330  0167B2  0E00               	movlw	0
 57331  0167B4  6E05               	movwf	_inPipes+4,c	;volatile
 57332                           
 57333                           ; BSR set to: 1
 57334                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 57335  0167B6  0E00               	movlw	0
 57336  0167B8  6FD8               	movwf	(_outPipes+3)& (0+255),b	;volatile
 57337                           
 57338                           ; BSR set to: 1
 57339                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 57340  0167BA  0E00               	movlw	0
 57341  0167BC  6FDA               	movwf	(_outPipes+5)& (0+255),b	;volatile
 57342  0167BE  0E00               	movlw	0
 57343  0167C0  6FD9               	movwf	(_outPipes+4)& (0+255),b	;volatile
 57344                           
 57345                           ; BSR set to: 1
 57346                           ;usb_device.c: 2502: USBCheckStdRequest();
 57347  0167C2  ECAA  F0A5         	call	_USBCheckStdRequest	;wreg free
 57348                           
 57349                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 57350  0167C6  0E00               	movlw	0
 57351  0167C8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 57352  0167CA  0E03               	movlw	3
 57353  0167CC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 57354  0167CE  0E00               	movlw	0
 57355  0167D0  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 57356  0167D2  0E00               	movlw	0
 57357  0167D4  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 57358  0167D6  0E00               	movlw	0
 57359  0167D8  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 57360  0167DA  0E00               	movlw	0
 57361  0167DC  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 57362  0167DE  EC7A  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 57363                           
 57364                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 57365  0167E2  EC5D  F09E         	call	_USBCtrlEPServiceComplete	;wreg free
 57366  0167E6  0012               	return		;funcret
 57367  0167E8                     __end_of_USBCtrlTrfSetupHandler:
 57368                           	opt stack 0
 57369                           tosu	equ	0xFFF
 57370                           tosh	equ	0xFFE
 57371                           tosl	equ	0xFFD
 57372                           pclatu	equ	0xFFB
 57373                           pclath	equ	0xFFA
 57374                           tblptru	equ	0xFF8
 57375                           tblptrh	equ	0xFF7
 57376                           tblptrl	equ	0xFF6
 57377                           tablat	equ	0xFF5
 57378                           prodh	equ	0xFF4
 57379                           prodl	equ	0xFF3
 57380                           intcon	equ	0xFF2
 57381                           intcon2	equ	0xFF1
 57382                           intcon3	equ	0xFF0
 57383                           indf0	equ	0xFEF
 57384                           postinc0	equ	0xFEE
 57385                           fsr0h	equ	0xFEA
 57386                           fsr0l	equ	0xFE9
 57387                           wreg	equ	0xFE8
 57388                           indf1	equ	0xFE7
 57389                           postinc1	equ	0xFE6
 57390                           postdec1	equ	0xFE5
 57391                           plusw1	equ	0xFE3
 57392                           fsr1h	equ	0xFE2
 57393                           fsr1l	equ	0xFE1
 57394                           indf2	equ	0xFDF
 57395                           postinc2	equ	0xFDE
 57396                           postdec2	equ	0xFDD
 57397                           plusw2	equ	0xFDB
 57398                           fsr2h	equ	0xFDA
 57399                           fsr2l	equ	0xFD9
 57400                           status	equ	0xFD8
 57401                           
 57402 ;; *************** function _USBCtrlEPServiceComplete *****************
 57403 ;; Defined at:
 57404 ;;		line 1618 in file "usb_device.c"
 57405 ;; Parameters:    Size  Location     Type
 57406 ;;		None
 57407 ;; Auto vars:     Size  Location     Type
 57408 ;;		None
 57409 ;; Return value:  Size  Location     Type
 57410 ;;                  1    wreg      void 
 57411 ;; Registers used:
 57412 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 57413 ;; Tracked objects:
 57414 ;;		On entry : 0/0
 57415 ;;		On exit  : 0/0
 57416 ;;		Unchanged: 0/0
 57417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 57418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57422 ;;Total ram usage:        0 bytes
 57423 ;; Hardware stack levels used:    1
 57424 ;; Hardware stack levels required when called:    2
 57425 ;; This function calls:
 57426 ;;		_USBCtrlEPAllowDataStage
 57427 ;;		_USBCtrlEPAllowStatusStage
 57428 ;; This function is called by:
 57429 ;;		_USBCtrlTrfSetupHandler
 57430 ;; This function uses a non-reentrant model
 57431 ;;
 57432                           
 57433                           	psect	text278
 57434  013CBA                     __ptext278:
 57435                           	opt stack 0
 57436  013CBA                     _USBCtrlEPServiceComplete:
 57437                           	opt stack 11
 57438                           
 57439                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 57440                           
 57441                           ;incstack = 0
 57442  013CBA  9865               	bcf	3941,4,c	;volatile
 57443                           
 57444                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 57445  013CBC  BE04               	btfsc	_inPipes+3,7,c	;volatile
 57446  013CBE  D03A               	goto	i2l233
 57447                           
 57448                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 57449  013CC0  0101               	movlb	1	; () banked
 57450  013CC2  AFD8               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 57451  013CC4  D00C               	goto	i2l234
 57452                           
 57453                           ; BSR set to: 1
 57454                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 57455  013CC6  0E02               	movlw	2
 57456  013CC8  6E29               	movwf	_controlTransferState,c	;volatile
 57457                           
 57458                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 57459  013CCA  51F8               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 57460  013CCC  B4D8               	btfsc	status,2,c
 57461                           
 57462                           ; BSR set to: 1
 57463                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 57464  013CCE  EC59  F0B1         	call	_USBCtrlEPAllowDataStage	;wreg free
 57465                           
 57466                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 57467  013CD2  0E00               	movlw	0
 57468  013CD4  0101               	movlb	1	; () banked
 57469  013CD6  6FFA               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 57470                           
 57471                           ; BSR set to: 1
 57472                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 57473  013CD8  0E00               	movlw	0
 57474  013CDA  6FFB               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 57475                           
 57476                           ;usb_device.c: 1654: }
 57477  013CDC  0012               	return	
 57478  013CDE                     i2l234:
 57479                           
 57480                           ; BSR set to: 1
 57481                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 57482                           
 57483                           ; BSR set to: 1
 57484  013CDE  EE20 F001          	lfsr	2,1
 57485  013CE2  5015               	movf	_pBDTEntryEP0OutNext,w,c
 57486  013CE4  26D9               	addwf	fsr2l,f,c
 57487  013CE6  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 57488  013CE8  22DA               	addwfc	fsr2h,f,c
 57489  013CEA  0E08               	movlw	8
 57490  013CEC  6EDF               	movwf	indf2,c
 57491                           
 57492                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 57493  013CEE  EE20 F002          	lfsr	2,2
 57494  013CF2  5015               	movf	_pBDTEntryEP0OutNext,w,c
 57495  013CF4  26D9               	addwf	fsr2l,f,c
 57496  013CF6  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 57497  013CF8  22DA               	addwfc	fsr2h,f,c
 57498  013CFA  0E30               	movlw	48
 57499  013CFC  6EDE               	movwf	postinc2,c
 57500  013CFE  0E0D               	movlw	13
 57501  013D00  6EDD               	movwf	postdec2,c
 57502                           
 57503                           ; BSR set to: 1
 57504                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 57505  013D02  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57506  013D06  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57507  013D0A  0E0C               	movlw	12
 57508  013D0C  6EDF               	movwf	indf2,c
 57509                           
 57510                           ; BSR set to: 1
 57511                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 57512  013D0E  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57513  013D12  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57514  013D16  0E00               	movlw	0
 57515  013D18  8EDB               	bsf	plusw2,7,c
 57516                           
 57517                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 57518  013D1A  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 57519  013D1E  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57520  013D22  0E04               	movlw	4
 57521  013D24  6EDF               	movwf	indf2,c
 57522                           
 57523                           ; BSR set to: 1
 57524                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 57525  013D26  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 57526  013D2A  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57527  013D2E  0E00               	movlw	0
 57528  013D30  8EDB               	bsf	plusw2,7,c
 57529                           
 57530                           ; BSR set to: 1
 57531                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 57532  013D32  0012               	return	
 57533  013D34                     i2l233:
 57534                           
 57535                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 57536  013D34  010D               	movlb	13	; () banked
 57537  013D36  AF30               	btfss	48,7,b	;volatile
 57538  013D38  D012               	goto	i2l238
 57539                           
 57540                           ; BSR set to: 13
 57541                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 57542  013D3A  0E01               	movlw	1
 57543  013D3C  6E29               	movwf	_controlTransferState,c	;volatile
 57544                           
 57545                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 57546  013D3E  0101               	movlb	1	; () banked
 57547  013D40  51F9               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 57548  013D42  B4D8               	btfsc	status,2,c
 57549                           
 57550                           ; BSR set to: 1
 57551                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 57552  013D44  EC59  F0B1         	call	_USBCtrlEPAllowDataStage	;wreg free
 57553                           
 57554                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 57555  013D48  0E00               	movlw	0
 57556  013D4A  0101               	movlb	1	; () banked
 57557  013D4C  6FFA               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 57558                           
 57559                           ; BSR set to: 1
 57560                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 57561  013D4E  0E00               	movlw	0
 57562  013D50  6FFB               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 57563                           
 57564                           ; BSR set to: 1
 57565                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 57566  013D52  5025               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 57567  013D54  A4D8               	btfss	status,2,c
 57568  013D56  0012               	return	
 57569                           
 57570                           ; BSR set to: 1
 57571                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 57572  013D58  EC9E  F0AB         	call	_USBCtrlEPAllowStatusStage	;wreg free
 57573                           
 57574                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 57575  013D5C  0012               	return	
 57576  013D5E                     i2l238:
 57577                           
 57578                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 57579  013D5E  0E02               	movlw	2
 57580  013D60  6E29               	movwf	_controlTransferState,c	;volatile
 57581                           
 57582                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 57583  013D62  EE20 F001          	lfsr	2,1
 57584  013D66  5015               	movf	_pBDTEntryEP0OutNext,w,c
 57585  013D68  26D9               	addwf	fsr2l,f,c
 57586  013D6A  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 57587  013D6C  22DA               	addwfc	fsr2h,f,c
 57588  013D6E  0E08               	movlw	8
 57589  013D70  6EDF               	movwf	indf2,c
 57590                           
 57591                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 57592  013D72  EE20 F002          	lfsr	2,2
 57593  013D76  5015               	movf	_pBDTEntryEP0OutNext,w,c
 57594  013D78  26D9               	addwf	fsr2l,f,c
 57595  013D7A  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 57596  013D7C  22DA               	addwfc	fsr2h,f,c
 57597  013D7E  0E30               	movlw	48
 57598  013D80  6EDE               	movwf	postinc2,c
 57599  013D82  0E0D               	movlw	13
 57600  013D84  6EDD               	movwf	postdec2,c
 57601                           
 57602                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 57603  013D86  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57604  013D8A  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57605  013D8E  0E04               	movlw	4
 57606  013D90  6EDF               	movwf	indf2,c
 57607                           
 57608                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 57609  013D92  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57610  013D96  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57611  013D9A  0E00               	movlw	0
 57612  013D9C  8EDB               	bsf	plusw2,7,c
 57613                           
 57614                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 57615  013D9E  0E00               	movlw	0
 57616  013DA0  0101               	movlb	1	; () banked
 57617  013DA2  6FFA               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 57618                           
 57619                           ; BSR set to: 1
 57620                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 57621  013DA4  0E00               	movlw	0
 57622  013DA6  6FFB               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 57623                           
 57624                           ; BSR set to: 1
 57625                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 57626  013DA8  5025               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 57627  013DAA  A4D8               	btfss	status,2,c
 57628  013DAC  0012               	return	
 57629                           
 57630                           ; BSR set to: 1
 57631                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 57632  013DAE  EC9E  F0AB         	call	_USBCtrlEPAllowStatusStage	;wreg free
 57633  013DB2  0012               	return	
 57634  013DB4                     __end_of_USBCtrlEPServiceComplete:
 57635                           	opt stack 0
 57636                           tosu	equ	0xFFF
 57637                           tosh	equ	0xFFE
 57638                           tosl	equ	0xFFD
 57639                           pclatu	equ	0xFFB
 57640                           pclath	equ	0xFFA
 57641                           tblptru	equ	0xFF8
 57642                           tblptrh	equ	0xFF7
 57643                           tblptrl	equ	0xFF6
 57644                           tablat	equ	0xFF5
 57645                           prodh	equ	0xFF4
 57646                           prodl	equ	0xFF3
 57647                           intcon	equ	0xFF2
 57648                           intcon2	equ	0xFF1
 57649                           intcon3	equ	0xFF0
 57650                           indf0	equ	0xFEF
 57651                           postinc0	equ	0xFEE
 57652                           fsr0h	equ	0xFEA
 57653                           fsr0l	equ	0xFE9
 57654                           wreg	equ	0xFE8
 57655                           indf1	equ	0xFE7
 57656                           postinc1	equ	0xFE6
 57657                           postdec1	equ	0xFE5
 57658                           plusw1	equ	0xFE3
 57659                           fsr1h	equ	0xFE2
 57660                           fsr1l	equ	0xFE1
 57661                           indf2	equ	0xFDF
 57662                           postinc2	equ	0xFDE
 57663                           postdec2	equ	0xFDD
 57664                           plusw2	equ	0xFDB
 57665                           fsr2h	equ	0xFDA
 57666                           fsr2l	equ	0xFD9
 57667                           status	equ	0xFD8
 57668                           
 57669 ;; *************** function _USBCtrlEPAllowDataStage *****************
 57670 ;; Defined at:
 57671 ;;		line 1490 in file "usb_device.c"
 57672 ;; Parameters:    Size  Location     Type
 57673 ;;		None
 57674 ;; Auto vars:     Size  Location     Type
 57675 ;;		None
 57676 ;; Return value:  Size  Location     Type
 57677 ;;                  1    wreg      void 
 57678 ;; Registers used:
 57679 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 57680 ;; Tracked objects:
 57681 ;;		On entry : 0/0
 57682 ;;		On exit  : 0/0
 57683 ;;		Unchanged: 0/0
 57684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 57685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57689 ;;Total ram usage:        0 bytes
 57690 ;; Hardware stack levels used:    1
 57691 ;; Hardware stack levels required when called:    1
 57692 ;; This function calls:
 57693 ;;		_USBCtrlTrfTxService
 57694 ;; This function is called by:
 57695 ;;		_USBCtrlEPServiceComplete
 57696 ;; This function uses a non-reentrant model
 57697 ;;
 57698                           
 57699                           	psect	text279
 57700  0162B2                     __ptext279:
 57701                           	opt stack 0
 57702  0162B2                     _USBCtrlEPAllowDataStage:
 57703                           	opt stack 11
 57704                           
 57705                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 57706                           
 57707                           ;incstack = 0
 57708  0162B2  0E00               	movlw	0
 57709  0162B4  0101               	movlb	1	; () banked
 57710  0162B6  6FF9               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 57711                           
 57712                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 57713  0162B8  0E00               	movlw	0
 57714  0162BA  6FF8               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 57715                           
 57716                           ; BSR set to: 1
 57717                           ;usb_device.c: 1495: if(controlTransferState == 2)
 57718  0162BC  0E02               	movlw	2
 57719  0162BE  1829               	xorwf	_controlTransferState,w,c	;volatile
 57720  0162C0  A4D8               	btfss	status,2,c
 57721  0162C2  D01F               	goto	i2l222
 57722                           
 57723                           ; BSR set to: 1
 57724                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 57725  0162C4  EE20 F001          	lfsr	2,1
 57726  0162C8  5015               	movf	_pBDTEntryEP0OutNext,w,c
 57727  0162CA  26D9               	addwf	fsr2l,f,c
 57728  0162CC  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 57729  0162CE  22DA               	addwfc	fsr2h,f,c
 57730  0162D0  0E08               	movlw	8
 57731  0162D2  6EDF               	movwf	indf2,c
 57732                           
 57733                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 57734  0162D4  EE20 F002          	lfsr	2,2
 57735  0162D8  5015               	movf	_pBDTEntryEP0OutNext,w,c
 57736  0162DA  26D9               	addwf	fsr2l,f,c
 57737  0162DC  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 57738  0162DE  22DA               	addwfc	fsr2h,f,c
 57739  0162E0  0E38               	movlw	56
 57740  0162E2  6EDE               	movwf	postinc2,c
 57741  0162E4  0E0D               	movlw	13
 57742  0162E6  6EDD               	movwf	postdec2,c
 57743                           
 57744                           ; BSR set to: 1
 57745                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 57746  0162E8  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57747  0162EC  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57748  0162F0  0E48               	movlw	72
 57749  0162F2  6EDF               	movwf	indf2,c
 57750                           
 57751                           ; BSR set to: 1
 57752                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 57753  0162F4  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57754  0162F8  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57755  0162FC  0E00               	movlw	0
 57756  0162FE  8EDB               	bsf	plusw2,7,c
 57757                           
 57758                           ;usb_device.c: 1502: }
 57759  016300  0012               	return	
 57760  016302                     i2l222:
 57761                           
 57762                           ; BSR set to: 1
 57763                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 57764                           
 57765                           ; BSR set to: 1
 57766  016302  5005               	movf	_inPipes+4,w,c	;volatile
 57767  016304  010D               	movlb	13	; () banked
 57768  016306  5D36               	subwf	54,w,b	;volatile
 57769  016308  5006               	movf	_inPipes+5,w,c	;volatile
 57770  01630A  5937               	subwfb	55,w,b	;volatile
 57771  01630C  B0D8               	btfsc	status,0,c
 57772  01630E  D004               	goto	i2l224
 57773                           
 57774                           ; BSR set to: 13
 57775                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 57776  016310  CD36 F005          	movff	3382,_inPipes+4	;volatile
 57777  016314  CD37 F006          	movff	3383,_inPipes+5	;volatile
 57778  016318                     i2l224:
 57779                           
 57780                           ; BSR set to: 13
 57781                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 57782                           
 57783                           ; BSR set to: 13
 57784  016318  ECE6  F0A6         	call	_USBCtrlTrfTxService	;wreg free
 57785                           
 57786                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 57787  01631C  EE20 F002          	lfsr	2,2
 57788  016320  5007               	movf	_pBDTEntryIn,w,c
 57789  016322  26D9               	addwf	fsr2l,f,c
 57790  016324  5008               	movf	_pBDTEntryIn+1,w,c
 57791  016326  22DA               	addwfc	fsr2h,f,c
 57792  016328  0E38               	movlw	56
 57793  01632A  6EDE               	movwf	postinc2,c
 57794  01632C  0E0D               	movlw	13
 57795  01632E  6EDD               	movwf	postdec2,c
 57796                           
 57797                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 57798  016330  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 57799  016334  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57800  016338  0E48               	movlw	72
 57801  01633A  6EDF               	movwf	indf2,c
 57802                           
 57803                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 57804  01633C  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 57805  016340  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57806  016344  0E00               	movlw	0
 57807  016346  8EDB               	bsf	plusw2,7,c
 57808  016348  0012               	return	
 57809  01634A                     __end_of_USBCtrlEPAllowDataStage:
 57810                           	opt stack 0
 57811                           tosu	equ	0xFFF
 57812                           tosh	equ	0xFFE
 57813                           tosl	equ	0xFFD
 57814                           pclatu	equ	0xFFB
 57815                           pclath	equ	0xFFA
 57816                           tblptru	equ	0xFF8
 57817                           tblptrh	equ	0xFF7
 57818                           tblptrl	equ	0xFF6
 57819                           tablat	equ	0xFF5
 57820                           prodh	equ	0xFF4
 57821                           prodl	equ	0xFF3
 57822                           intcon	equ	0xFF2
 57823                           intcon2	equ	0xFF1
 57824                           intcon3	equ	0xFF0
 57825                           indf0	equ	0xFEF
 57826                           postinc0	equ	0xFEE
 57827                           fsr0h	equ	0xFEA
 57828                           fsr0l	equ	0xFE9
 57829                           wreg	equ	0xFE8
 57830                           indf1	equ	0xFE7
 57831                           postinc1	equ	0xFE6
 57832                           postdec1	equ	0xFE5
 57833                           plusw1	equ	0xFE3
 57834                           fsr1h	equ	0xFE2
 57835                           fsr1l	equ	0xFE1
 57836                           indf2	equ	0xFDF
 57837                           postinc2	equ	0xFDE
 57838                           postdec2	equ	0xFDD
 57839                           plusw2	equ	0xFDB
 57840                           fsr2h	equ	0xFDA
 57841                           fsr2l	equ	0xFD9
 57842                           status	equ	0xFD8
 57843                           
 57844 ;; *************** function _USBCheckStdRequest *****************
 57845 ;; Defined at:
 57846 ;;		line 2688 in file "usb_device.c"
 57847 ;; Parameters:    Size  Location     Type
 57848 ;;		None
 57849 ;; Auto vars:     Size  Location     Type
 57850 ;;		None
 57851 ;; Return value:  Size  Location     Type
 57852 ;;                  1    wreg      void 
 57853 ;; Registers used:
 57854 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 57855 ;; Tracked objects:
 57856 ;;		On entry : 0/0
 57857 ;;		On exit  : 0/0
 57858 ;;		Unchanged: 0/0
 57859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 57860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57864 ;;Total ram usage:        0 bytes
 57865 ;; Hardware stack levels used:    1
 57866 ;; Hardware stack levels required when called:    5
 57867 ;; This function calls:
 57868 ;;		_USBStdFeatureReqHandler
 57869 ;;		_USBStdGetDscHandler
 57870 ;;		_USBStdGetStatusHandler
 57871 ;;		_USBStdSetCfgHandler
 57872 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 57873 ;; This function is called by:
 57874 ;;		_USBCtrlTrfSetupHandler
 57875 ;; This function uses a non-reentrant model
 57876 ;;
 57877                           
 57878                           	psect	text280
 57879  014B54                     __ptext280:
 57880                           	opt stack 0
 57881  014B54                     _USBCheckStdRequest:
 57882                           	opt stack 8
 57883                           
 57884                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 57885                           
 57886                           ;incstack = 0
 57887  014B54  010D               	movlb	13	; () banked
 57888  014B56  3930               	swapf	48,w,b	;volatile
 57889  014B58  32E8               	rrcf	wreg,f,c
 57890  014B5A  0B03               	andlw	3
 57891  014B5C  0900               	iorlw	0
 57892  014B5E  A4D8               	btfss	status,2,c
 57893  014B60  0012               	return	
 57894  014B62  D042               	goto	i2l357
 57895  014B64                     i2l358:
 57896                           
 57897                           ; BSR set to: 13
 57898                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 57899  014B64  8E04               	bsf	_inPipes+3,7,c	;volatile
 57900                           
 57901                           ; BSR set to: 13
 57902                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 57903  014B66  0E08               	movlw	8
 57904  014B68  6E2B               	movwf	_USBDeviceState,c	;volatile
 57905                           
 57906                           ;usb_device.c: 2698: break;
 57907  014B6A  0012               	return	
 57908  014B6C                     
 57909                           ; BSR set to: 13
 57910                           ;usb_device.c: 2700: USBStdGetDscHandler();
 57911                           
 57912                           ; BSR set to: 13
 57913  014B6C  ECE8  F095         	call	_USBStdGetDscHandler	;wreg free
 57914                           
 57915                           ;usb_device.c: 2701: break;
 57916  014B70  0012               	return	
 57917  014B72                     
 57918                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 57919  014B72  EC63  F0A4         	call	_USBStdSetCfgHandler	;wreg free
 57920                           
 57921                           ;usb_device.c: 2704: break;
 57922  014B76  0012               	return	
 57923  014B78                     
 57924                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 57925  014B78  0E2D               	movlw	low _USBActiveConfiguration
 57926  014B7A  6E01               	movwf	_inPipes,c	;volatile
 57927  014B7C  0E00               	movlw	high _USBActiveConfiguration
 57928  014B7E  6E02               	movwf	_inPipes+1,c	;volatile
 57929                           
 57930                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 57931  014B80  8004               	bsf	_inPipes+3,0,c	;volatile
 57932                           
 57933                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 57934  014B82  0E01               	movlw	1
 57935  014B84  6E05               	movwf	_inPipes+4,c	;volatile
 57936                           
 57937                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 57938  014B86  8E04               	bsf	_inPipes+3,7,c	;volatile
 57939                           
 57940                           ;usb_device.c: 2710: break;
 57941  014B88  0012               	return	
 57942  014B8A                     
 57943                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 57944  014B8A  EC73  F0B0         	call	_USBStdGetStatusHandler	;wreg free
 57945                           
 57946                           ;usb_device.c: 2713: break;
 57947  014B8E  0012               	return	
 57948  014B90                     
 57949                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 57950  014B90  EC61  F07B         	call	_USBStdFeatureReqHandler	;wreg free
 57951                           
 57952                           ;usb_device.c: 2717: break;
 57953  014B94  0012               	return	
 57954  014B96                     
 57955                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 57956  014B96  010D               	movlb	13	; () banked
 57957  014B98  5134               	movf	52,w,b	;volatile
 57958  014B9A  0D01               	mullw	1
 57959  014B9C  0ED2               	movlw	low _USBAlternateInterface
 57960  014B9E  24F3               	addwf	prodl,w,c
 57961  014BA0  6E01               	movwf	_inPipes,c	;volatile
 57962  014BA2  0E02               	movlw	high _USBAlternateInterface
 57963  014BA4  20F4               	addwfc	prodh,w,c
 57964  014BA6  6E02               	movwf	_inPipes+1,c	;volatile
 57965                           
 57966                           ; BSR set to: 13
 57967                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 57968  014BA8  8004               	bsf	_inPipes+3,0,c	;volatile
 57969                           
 57970                           ; BSR set to: 13
 57971                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 57972  014BAA  0E01               	movlw	1
 57973  014BAC  6E05               	movwf	_inPipes+4,c	;volatile
 57974                           
 57975                           ; BSR set to: 13
 57976                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 57977  014BAE  8E04               	bsf	_inPipes+3,7,c	;volatile
 57978                           
 57979                           ;usb_device.c: 2723: break;
 57980  014BB0  0012               	return	
 57981  014BB2                     i2l367:
 57982                           
 57983                           ; BSR set to: 13
 57984                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 57985  014BB2  8E04               	bsf	_inPipes+3,7,c	;volatile
 57986                           
 57987                           ; BSR set to: 13
 57988                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 57989  014BB4  5134               	movf	52,w,b	;volatile
 57990  014BB6  0D01               	mullw	1
 57991  014BB8  0ED2               	movlw	low _USBAlternateInterface
 57992  014BBA  24F3               	addwf	prodl,w,c
 57993  014BBC  6ED9               	movwf	fsr2l,c
 57994  014BBE  0E02               	movlw	high _USBAlternateInterface
 57995  014BC0  20F4               	addwfc	prodh,w,c
 57996  014BC2  6EDA               	movwf	fsr2h,c
 57997  014BC4  CD32 FFDF          	movff	3378,indf2	;volatile
 57998                           
 57999                           ;usb_device.c: 2727: break;
 58000  014BC8  0012               	return	
 58001  014BCA                     
 58002                           ; BSR set to: 13
 58003                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 58004                           
 58005                           ; BSR set to: 13
 58006  014BCA  0E00               	movlw	0
 58007  014BCC  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 58008  014BCE  0E02               	movlw	2
 58009  014BD0  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 58010  014BD2  0E00               	movlw	0
 58011  014BD4  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 58012  014BD6  0E00               	movlw	0
 58013  014BD8  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 58014  014BDA  0E00               	movlw	0
 58015  014BDC  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 58016  014BDE  0E00               	movlw	0
 58017  014BE0  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 58018  014BE2  EC7A  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 58019                           
 58020                           ;usb_device.c: 2734: }
 58021                           
 58022                           ;usb_device.c: 2733: break;
 58023                           
 58024                           ;usb_device.c: 2732: default:
 58025                           
 58026                           ;usb_device.c: 2731: case 12:
 58027                           
 58028                           ;usb_device.c: 2730: break;
 58029  014BE6  0012               	return	
 58030  014BE8                     i2l357:
 58031  014BE8  010D               	movlb	13	; () banked
 58032  014BEA  5131               	movf	49,w,b	;volatile
 58033                           
 58034                           ; Switch size 1, requested type "space"
 58035                           ; Number of cases is 11, Range of values is 0 to 12
 58036                           ; switch strategies available:
 58037                           ; Name         Instructions Cycles
 58038                           ; simple_byte           34    18 (average)
 58039                           ;	Chosen strategy is simple_byte
 58040  014BEC  0A00               	xorlw	0	; case 0
 58041  014BEE  B4D8               	btfsc	status,2,c
 58042  014BF0  D7CC               	goto	i2l363
 58043  014BF2  0A01               	xorlw	1	; case 1
 58044  014BF4  B4D8               	btfsc	status,2,c
 58045  014BF6  D7CC               	goto	i2l364
 58046  014BF8  0A02               	xorlw	2	; case 3
 58047  014BFA  B4D8               	btfsc	status,2,c
 58048  014BFC  D7C9               	goto	i2l364
 58049  014BFE  0A06               	xorlw	6	; case 5
 58050  014C00  B4D8               	btfsc	status,2,c
 58051  014C02  D7B0               	goto	i2l358
 58052  014C04  0A03               	xorlw	3	; case 6
 58053  014C06  B4D8               	btfsc	status,2,c
 58054  014C08  D7B1               	goto	i2l360
 58055  014C0A  0A01               	xorlw	1	; case 7
 58056  014C0C  B4D8               	btfsc	status,2,c
 58057  014C0E  D7DD               	goto	i2l368
 58058  014C10  0A0F               	xorlw	15	; case 8
 58059  014C12  B4D8               	btfsc	status,2,c
 58060  014C14  D7B1               	goto	i2l362
 58061  014C16  0A01               	xorlw	1	; case 9
 58062  014C18  B4D8               	btfsc	status,2,c
 58063  014C1A  D7AB               	goto	i2l361
 58064  014C1C  0A03               	xorlw	3	; case 10
 58065  014C1E  B4D8               	btfsc	status,2,c
 58066  014C20  D7BA               	goto	i2l366
 58067  014C22  0A01               	xorlw	1	; case 11
 58068  014C24  B4D8               	btfsc	status,2,c
 58069  014C26  D7C5               	goto	i2l367
 58070  014C28  0A07               	xorlw	7	; case 12
 58071  014C2A  0012               	return	
 58072  014C2C                     __end_of_USBCheckStdRequest:
 58073                           	opt stack 0
 58074                           tosu	equ	0xFFF
 58075                           tosh	equ	0xFFE
 58076                           tosl	equ	0xFFD
 58077                           pclatu	equ	0xFFB
 58078                           pclath	equ	0xFFA
 58079                           tblptru	equ	0xFF8
 58080                           tblptrh	equ	0xFF7
 58081                           tblptrl	equ	0xFF6
 58082                           tablat	equ	0xFF5
 58083                           prodh	equ	0xFF4
 58084                           prodl	equ	0xFF3
 58085                           intcon	equ	0xFF2
 58086                           intcon2	equ	0xFF1
 58087                           intcon3	equ	0xFF0
 58088                           indf0	equ	0xFEF
 58089                           postinc0	equ	0xFEE
 58090                           fsr0h	equ	0xFEA
 58091                           fsr0l	equ	0xFE9
 58092                           wreg	equ	0xFE8
 58093                           indf1	equ	0xFE7
 58094                           postinc1	equ	0xFE6
 58095                           postdec1	equ	0xFE5
 58096                           plusw1	equ	0xFE3
 58097                           fsr1h	equ	0xFE2
 58098                           fsr1l	equ	0xFE1
 58099                           indf2	equ	0xFDF
 58100                           postinc2	equ	0xFDE
 58101                           postdec2	equ	0xFDD
 58102                           plusw2	equ	0xFDB
 58103                           fsr2h	equ	0xFDA
 58104                           fsr2l	equ	0xFD9
 58105                           status	equ	0xFD8
 58106                           
 58107 ;; *************** function _USBStdSetCfgHandler *****************
 58108 ;; Defined at:
 58109 ;;		line 1970 in file "usb_device.c"
 58110 ;; Parameters:    Size  Location     Type
 58111 ;;		None
 58112 ;; Auto vars:     Size  Location     Type
 58113 ;;  i               1   23[COMRAM] unsigned char 
 58114 ;; Return value:  Size  Location     Type
 58115 ;;                  1    wreg      void 
 58116 ;; Registers used:
 58117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 58118 ;; Tracked objects:
 58119 ;;		On entry : 0/0
 58120 ;;		On exit  : 0/0
 58121 ;;		Unchanged: 0/0
 58122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 58123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58126 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58127 ;;Total ram usage:        1 bytes
 58128 ;; Hardware stack levels used:    1
 58129 ;; Hardware stack levels required when called:    4
 58130 ;; This function calls:
 58131 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 58132 ;;		i2_memset
 58133 ;; This function is called by:
 58134 ;;		_USBCheckStdRequest
 58135 ;; This function uses a non-reentrant model
 58136 ;;
 58137                           
 58138                           	psect	text281
 58139  0148C6                     __ptext281:
 58140                           	opt stack 0
 58141  0148C6                     _USBStdSetCfgHandler:
 58142                           	opt stack 8
 58143                           
 58144                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 58145                           
 58146                           ;incstack = 0
 58147  0148C6  8E04               	bsf	_inPipes+3,7,c	;volatile
 58148                           
 58149                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 58150  0148C8  0E27               	movlw	39
 58151  0148CA  6E2E               	movwf	i2memset@p1,c
 58152  0148CC  0E0F               	movlw	15
 58153  0148CE  6E2F               	movwf	i2memset@p1+1,c
 58154  0148D0  0E00               	movlw	0
 58155  0148D2  6E31               	movwf	i2memset@c+1,c
 58156  0148D4  0E00               	movlw	0
 58157  0148D6  6E30               	movwf	i2memset@c,c
 58158  0148D8  0E00               	movlw	0
 58159  0148DA  6E33               	movwf	i2memset@n+1,c
 58160  0148DC  0E02               	movlw	2
 58161  0148DE  6E32               	movwf	i2memset@n,c
 58162  0148E0  EC8F  F0C4         	call	i2_memset	;wreg free
 58163                           
 58164                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 58165  0148E4  0E00               	movlw	0
 58166  0148E6  6E2E               	movwf	i2memset@p1,c
 58167  0148E8  0E0D               	movlw	13
 58168  0148EA  6E2F               	movwf	i2memset@p1+1,c
 58169  0148EC  0E00               	movlw	0
 58170  0148EE  6E31               	movwf	i2memset@c+1,c
 58171  0148F0  0E00               	movlw	0
 58172  0148F2  6E30               	movwf	i2memset@c,c
 58173  0148F4  0E00               	movlw	0
 58174  0148F6  6E33               	movwf	i2memset@n+1,c
 58175  0148F8  0E30               	movlw	48
 58176  0148FA  6E32               	movwf	i2memset@n,c
 58177  0148FC  EC8F  F0C4         	call	i2_memset	;wreg free
 58178                           
 58179                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 58180  014900  8C65               	bsf	3941,6,c	;volatile
 58181                           
 58182                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 58183  014902  0E00               	movlw	0
 58184  014904  6E45               	movwf	USBStdSetCfgHandler@i,c
 58185  014906                     i2l23425:
 58186  014906  0E02               	movlw	2
 58187  014908  6445               	cpfsgt	USBStdSetCfgHandler@i,c
 58188  01490A  D001               	goto	i2l274
 58189  01490C  D016               	goto	i2u2143_40
 58190  01490E                     i2l274:
 58191                           
 58192                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 58193  01490E  5045               	movf	USBStdSetCfgHandler@i,w,c
 58194  014910  0D01               	mullw	1
 58195  014912  0EEB               	movlw	low _ep_data_in
 58196  014914  24F3               	addwf	prodl,w,c
 58197  014916  6ED9               	movwf	fsr2l,c
 58198  014918  0E01               	movlw	high _ep_data_in
 58199  01491A  20F4               	addwfc	prodh,w,c
 58200  01491C  6EDA               	movwf	fsr2h,c
 58201  01491E  0E00               	movlw	0
 58202  014920  6EDF               	movwf	indf2,c
 58203                           
 58204                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 58205  014922  5045               	movf	USBStdSetCfgHandler@i,w,c
 58206  014924  0D01               	mullw	1
 58207  014926  0EE8               	movlw	low _ep_data_out
 58208  014928  24F3               	addwf	prodl,w,c
 58209  01492A  6ED9               	movwf	fsr2l,c
 58210  01492C  0E01               	movlw	high _ep_data_out
 58211  01492E  20F4               	addwfc	prodh,w,c
 58212  014930  6EDA               	movwf	fsr2h,c
 58213  014932  0E00               	movlw	0
 58214  014934  6EDF               	movwf	indf2,c
 58215  014936  2A45               	incf	USBStdSetCfgHandler@i,f,c
 58216  014938  D7E6               	goto	i2l23425
 58217  01493A                     i2u2143_40:
 58218                           
 58219                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 58220  01493A  0ED2               	movlw	low _USBAlternateInterface
 58221  01493C  6E2E               	movwf	i2memset@p1,c
 58222  01493E  0E02               	movlw	high _USBAlternateInterface
 58223  014940  6E2F               	movwf	i2memset@p1+1,c
 58224  014942  0E00               	movlw	0
 58225  014944  6E31               	movwf	i2memset@c+1,c
 58226  014946  0E00               	movlw	0
 58227  014948  6E30               	movwf	i2memset@c,c
 58228  01494A  0E00               	movlw	0
 58229  01494C  6E33               	movwf	i2memset@n+1,c
 58230  01494E  0E02               	movlw	2
 58231  014950  6E32               	movwf	i2memset@n,c
 58232  014952  EC8F  F0C4         	call	i2_memset	;wreg free
 58233                           
 58234                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 58235  014956  9C65               	bcf	3941,6,c	;volatile
 58236                           
 58237                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 58238  014958  0E08               	movlw	8
 58239  01495A  6E07               	movwf	_pBDTEntryIn,c
 58240  01495C  0E0D               	movlw	13
 58241  01495E  6E08               	movwf	_pBDTEntryIn+1,c
 58242                           
 58243                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 58244  014960  0E00               	movlw	0
 58245  014962  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
 58246  014964  0E0D               	movlw	13
 58247  014966  6E18               	movwf	_pBDTEntryEP0OutCurrent+1,c
 58248                           
 58249                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 58250  014968  C017  F015         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 58251  01496C  C018  F016         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 58252                           
 58253                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 58254  014970  CD32 F02D          	movff	3378,_USBActiveConfiguration	;volatile
 58255                           
 58256                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 58257  014974  502D               	movf	_USBActiveConfiguration,w,c	;volatile
 58258  014976  A4D8               	btfss	status,2,c
 58259  014978  D003               	goto	i2l276
 58260                           
 58261                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 58262  01497A  0E10               	movlw	16
 58263  01497C  6E2B               	movwf	_USBDeviceState,c	;volatile
 58264                           
 58265                           ;usb_device.c: 2015: }
 58266  01497E  0012               	return	
 58267  014980                     i2l276:
 58268                           
 58269                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 58270  014980  0E00               	movlw	0
 58271  014982  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 58272  014984  0E01               	movlw	1
 58273  014986  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 58274  014988  0E2D               	movlw	low _USBActiveConfiguration
 58275  01498A  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 58276  01498C  0E00               	movlw	high _USBActiveConfiguration
 58277  01498E  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 58278  014990  0E00               	movlw	0
 58279  014992  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 58280  014994  0E01               	movlw	1
 58281  014996  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 58282  014998  EC7A  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 58283                           
 58284                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 58285  01499C  0E20               	movlw	32
 58286  01499E  6E2B               	movwf	_USBDeviceState,c	;volatile
 58287  0149A0  0012               	return	
 58288  0149A2                     __end_of_USBStdSetCfgHandler:
 58289                           	opt stack 0
 58290                           tosu	equ	0xFFF
 58291                           tosh	equ	0xFFE
 58292                           tosl	equ	0xFFD
 58293                           pclatu	equ	0xFFB
 58294                           pclath	equ	0xFFA
 58295                           tblptru	equ	0xFF8
 58296                           tblptrh	equ	0xFF7
 58297                           tblptrl	equ	0xFF6
 58298                           tablat	equ	0xFF5
 58299                           prodh	equ	0xFF4
 58300                           prodl	equ	0xFF3
 58301                           intcon	equ	0xFF2
 58302                           intcon2	equ	0xFF1
 58303                           intcon3	equ	0xFF0
 58304                           indf0	equ	0xFEF
 58305                           postinc0	equ	0xFEE
 58306                           fsr0h	equ	0xFEA
 58307                           fsr0l	equ	0xFE9
 58308                           wreg	equ	0xFE8
 58309                           indf1	equ	0xFE7
 58310                           postinc1	equ	0xFE6
 58311                           postdec1	equ	0xFE5
 58312                           plusw1	equ	0xFE3
 58313                           fsr1h	equ	0xFE2
 58314                           fsr1l	equ	0xFE1
 58315                           indf2	equ	0xFDF
 58316                           postinc2	equ	0xFDE
 58317                           postdec2	equ	0xFDD
 58318                           plusw2	equ	0xFDB
 58319                           fsr2h	equ	0xFDA
 58320                           fsr2l	equ	0xFD9
 58321                           status	equ	0xFD8
 58322                           
 58323 ;; *************** function i2_memset *****************
 58324 ;; Defined at:
 58325 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 58326 ;; Parameters:    Size  Location     Type
 58327 ;;  p1              2    0[COMRAM] PTR void 
 58328 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 58329 ;;  c               2    2[COMRAM] int 
 58330 ;;  n               2    4[COMRAM] unsigned int 
 58331 ;; Auto vars:     Size  Location     Type
 58332 ;;  memset          2    6[COMRAM] PTR unsigned char 
 58333 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 58334 ;; Return value:  Size  Location     Type
 58335 ;;                  2    0[COMRAM] PTR void 
 58336 ;; Registers used:
 58337 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 58338 ;; Tracked objects:
 58339 ;;		On entry : 0/0
 58340 ;;		On exit  : 0/0
 58341 ;;		Unchanged: 0/0
 58342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 58343 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58344 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58346 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58347 ;;Total ram usage:        8 bytes
 58348 ;; Hardware stack levels used:    1
 58349 ;; This function calls:
 58350 ;;		Nothing
 58351 ;; This function is called by:
 58352 ;;		_USBStdSetCfgHandler
 58353 ;;		i2_USBDeviceInit
 58354 ;; This function uses a non-reentrant model
 58355 ;;
 58356                           
 58357                           	psect	text282
 58358  01891E                     __ptext282:
 58359                           	opt stack 0
 58360  01891E                     i2_memset:
 58361                           	opt stack 14
 58362                           
 58363                           ;incstack = 0
 58364  01891E  C02E  F034         	movff	i2memset@p1,i2memset@p
 58365  018922  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 58366  018926  D008               	goto	i2l4497
 58367  018928                     i2l15343:
 58368  018928  C034  FFD9         	movff	i2memset@p,fsr2l
 58369  01892C  C035  FFDA         	movff	i2memset@p+1,fsr2h
 58370  018930  C030  FFDF         	movff	i2memset@c,indf2
 58371  018934  4A34               	infsnz	i2memset@p,f,c
 58372  018936  2A35               	incf	i2memset@p+1,f,c
 58373  018938                     i2l4497:
 58374  018938  0632               	decf	i2memset@n,f,c
 58375  01893A  A0D8               	btfss	status,0,c
 58376  01893C  0633               	decf	i2memset@n+1,f,c
 58377  01893E  2832               	incf	i2memset@n,w,c
 58378  018940  E1F3               	bnz	i2l15343
 58379  018942  2833               	incf	i2memset@n+1,w,c
 58380  018944  B4D8               	btfsc	status,2,c
 58381  018946  0012               	return	
 58382  018948  D7EF               	goto	i2l4498
 58383  01894A                     __end_ofi2_memset:
 58384                           	opt stack 0
 58385                           tosu	equ	0xFFF
 58386                           tosh	equ	0xFFE
 58387                           tosl	equ	0xFFD
 58388                           pclatu	equ	0xFFB
 58389                           pclath	equ	0xFFA
 58390                           tblptru	equ	0xFF8
 58391                           tblptrh	equ	0xFF7
 58392                           tblptrl	equ	0xFF6
 58393                           tablat	equ	0xFF5
 58394                           prodh	equ	0xFF4
 58395                           prodl	equ	0xFF3
 58396                           intcon	equ	0xFF2
 58397                           intcon2	equ	0xFF1
 58398                           intcon3	equ	0xFF0
 58399                           indf0	equ	0xFEF
 58400                           postinc0	equ	0xFEE
 58401                           fsr0h	equ	0xFEA
 58402                           fsr0l	equ	0xFE9
 58403                           wreg	equ	0xFE8
 58404                           indf1	equ	0xFE7
 58405                           postinc1	equ	0xFE6
 58406                           postdec1	equ	0xFE5
 58407                           plusw1	equ	0xFE3
 58408                           fsr1h	equ	0xFE2
 58409                           fsr1l	equ	0xFE1
 58410                           indf2	equ	0xFDF
 58411                           postinc2	equ	0xFDE
 58412                           postdec2	equ	0xFDD
 58413                           plusw2	equ	0xFDB
 58414                           fsr2h	equ	0xFDA
 58415                           fsr2l	equ	0xFD9
 58416                           status	equ	0xFD8
 58417                           
 58418 ;; *************** function _USBStdGetStatusHandler *****************
 58419 ;; Defined at:
 58420 ;;		line 2131 in file "usb_device.c"
 58421 ;; Parameters:    Size  Location     Type
 58422 ;;		None
 58423 ;; Auto vars:     Size  Location     Type
 58424 ;;  p               2    1[COMRAM] PTR struct __BDT
 58425 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 58426 ;; Return value:  Size  Location     Type
 58427 ;;                  1    wreg      void 
 58428 ;; Registers used:
 58429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 58430 ;; Tracked objects:
 58431 ;;		On entry : 0/0
 58432 ;;		On exit  : 0/0
 58433 ;;		Unchanged: 0/0
 58434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 58435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58436 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58437 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58438 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58439 ;;Total ram usage:        3 bytes
 58440 ;; Hardware stack levels used:    1
 58441 ;; This function calls:
 58442 ;;		Nothing
 58443 ;; This function is called by:
 58444 ;;		_USBCheckStdRequest
 58445 ;; This function uses a non-reentrant model
 58446 ;;
 58447                           
 58448                           	psect	text283
 58449  0160E6                     __ptext283:
 58450                           	opt stack 0
 58451  0160E6                     _USBStdGetStatusHandler:
 58452                           	opt stack 12
 58453                           
 58454                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 58455                           
 58456                           ;incstack = 0
 58457  0160E6  0E00               	movlw	0
 58458  0160E8  010D               	movlb	13	; () banked
 58459  0160EA  6F38               	movwf	56,b	;volatile
 58460                           
 58461                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 58462  0160EC  0E00               	movlw	0
 58463  0160EE  6F39               	movwf	57,b	;volatile
 58464                           
 58465                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 58466  0160F0  D033               	goto	i2l295
 58467  0160F2                     i2l296:
 58468                           
 58469                           ; BSR set to: 13
 58470                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 58471  0160F2  8E04               	bsf	_inPipes+3,7,c	;volatile
 58472                           
 58473                           ; BSR set to: 13
 58474                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 58475                           
 58476                           ; BSR set to: 13
 58477                           
 58478                           ; BSR set to: 13
 58479                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 58480                           
 58481                           ;usb_device.c: 2144: if(0 == 1)
 58482  0160F4  0428               	decf	_RemoteWakeup,w,c	;volatile
 58483  0160F6  A4D8               	btfss	status,2,c
 58484  0160F8  D03A               	goto	i2l299
 58485                           
 58486                           ; BSR set to: 13
 58487                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 58488  0160FA  8338               	bsf	56,1,b	;volatile
 58489                           
 58490                           ; BSR set to: 13
 58491                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 58492  0160FC  D038               	goto	i2l299
 58493  0160FE                     i2l300:
 58494                           
 58495                           ; BSR set to: 13
 58496                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 58497  0160FE  8E04               	bsf	_inPipes+3,7,c	;volatile
 58498                           
 58499                           ;usb_device.c: 2156: break;
 58500  016100  D036               	goto	i2l299
 58501  016102                     i2l301:
 58502                           
 58503                           ; BSR set to: 13
 58504                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 58505  016102  8E04               	bsf	_inPipes+3,7,c	;volatile
 58506                           
 58507                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 58508  016104  BF34               	btfsc	52,7,b	;volatile
 58509  016106  D00A               	goto	i2l302
 58510                           
 58511                           ; BSR set to: 13
 58512                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 58513  016108  5134               	movf	52,w,b	;volatile
 58514  01610A  0B0F               	andlw	15
 58515  01610C  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 58516  01610E  502E               	movf	??_USBStdGetStatusHandler,w,c
 58517  016110  0D02               	mullw	2
 58518  016112  0EDE               	movlw	low _pBDTEntryOut
 58519  016114  24F3               	addwf	prodl,w,c
 58520  016116  6ED9               	movwf	fsr2l,c
 58521  016118  0E01               	movlw	high _pBDTEntryOut
 58522  01611A  D009               	goto	L70
 58523  01611C                     i2l302:
 58524                           
 58525                           ; BSR set to: 13
 58526                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 58527                           
 58528                           ; BSR set to: 13
 58529  01611C  5134               	movf	52,w,b	;volatile
 58530  01611E  0B0F               	andlw	15
 58531  016120  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 58532  016122  502E               	movf	??_USBStdGetStatusHandler,w,c
 58533  016124  0D02               	mullw	2
 58534  016126  0E07               	movlw	low _pBDTEntryIn
 58535  016128  24F3               	addwf	prodl,w,c
 58536  01612A  6ED9               	movwf	fsr2l,c
 58537  01612C  0E00               	movlw	high _pBDTEntryIn
 58538  01612E                     L70:
 58539  01612E  20F4               	addwfc	prodh,w,c
 58540  016130  6EDA               	movwf	fsr2h,c
 58541  016132  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 58542  016136  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 58543                           
 58544                           ; BSR set to: 13
 58545                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 58546                           
 58547                           ; BSR set to: 13
 58548  01613A  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 58549  01613E  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 58550  016142  AEDF               	btfss	indf2,7,c
 58551  016144  D014               	goto	i2l299
 58552                           
 58553                           ; BSR set to: 13
 58554  016146  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 58555  01614A  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 58556  01614E  A4DF               	btfss	indf2,2,c
 58557  016150  D00E               	goto	i2l299
 58558                           
 58559                           ; BSR set to: 13
 58560                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 58561  016152  0E01               	movlw	1
 58562  016154  6F38               	movwf	56,b	;volatile
 58563                           
 58564                           ; BSR set to: 13
 58565                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 58566                           
 58567                           ; BSR set to: 13
 58568                           ;usb_device.c: 2176: break;
 58569  016156  D00B               	goto	i2l299
 58570  016158                     i2l295:
 58571                           
 58572                           ; BSR set to: 13
 58573                           
 58574                           ; BSR set to: 13
 58575  016158  5130               	movf	48,w,b	;volatile
 58576  01615A  0B1F               	andlw	31
 58577                           
 58578                           ; Switch size 1, requested type "space"
 58579                           ; Number of cases is 3, Range of values is 0 to 2
 58580                           ; switch strategies available:
 58581                           ; Name         Instructions Cycles
 58582                           ; simple_byte           10     6 (average)
 58583                           ;	Chosen strategy is simple_byte
 58584  01615C  0A00               	xorlw	0	; case 0
 58585  01615E  B4D8               	btfsc	status,2,c
 58586  016160  D7C8               	goto	i2l296
 58587  016162  0A01               	xorlw	1	; case 1
 58588  016164  B4D8               	btfsc	status,2,c
 58589  016166  D7CB               	goto	i2l300
 58590  016168  0A03               	xorlw	3	; case 2
 58591  01616A  B4D8               	btfsc	status,2,c
 58592  01616C  D7CA               	goto	i2l301
 58593  01616E                     i2l299:
 58594                           
 58595                           ; BSR set to: 13
 58596                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 58597  01616E  AE04               	btfss	_inPipes+3,7,c	;volatile
 58598  016170  0012               	return	
 58599                           
 58600                           ; BSR set to: 13
 58601                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 58602  016172  0E38               	movlw	56
 58603  016174  6E01               	movwf	_inPipes,c	;volatile
 58604  016176  0E0D               	movlw	13
 58605  016178  6E02               	movwf	_inPipes+1,c	;volatile
 58606                           
 58607                           ; BSR set to: 13
 58608                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 58609  01617A  8004               	bsf	_inPipes+3,0,c	;volatile
 58610                           
 58611                           ; BSR set to: 13
 58612                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 58613  01617C  0E02               	movlw	2
 58614  01617E  6E05               	movwf	_inPipes+4,c	;volatile
 58615  016180  0012               	return	
 58616  016182                     __end_of_USBStdGetStatusHandler:
 58617                           	opt stack 0
 58618                           tosu	equ	0xFFF
 58619                           tosh	equ	0xFFE
 58620                           tosl	equ	0xFFD
 58621                           pclatu	equ	0xFFB
 58622                           pclath	equ	0xFFA
 58623                           tblptru	equ	0xFF8
 58624                           tblptrh	equ	0xFF7
 58625                           tblptrl	equ	0xFF6
 58626                           tablat	equ	0xFF5
 58627                           prodh	equ	0xFF4
 58628                           prodl	equ	0xFF3
 58629                           intcon	equ	0xFF2
 58630                           intcon2	equ	0xFF1
 58631                           intcon3	equ	0xFF0
 58632                           indf0	equ	0xFEF
 58633                           postinc0	equ	0xFEE
 58634                           fsr0h	equ	0xFEA
 58635                           fsr0l	equ	0xFE9
 58636                           wreg	equ	0xFE8
 58637                           indf1	equ	0xFE7
 58638                           postinc1	equ	0xFE6
 58639                           postdec1	equ	0xFE5
 58640                           plusw1	equ	0xFE3
 58641                           fsr1h	equ	0xFE2
 58642                           fsr1l	equ	0xFE1
 58643                           indf2	equ	0xFDF
 58644                           postinc2	equ	0xFDE
 58645                           postdec2	equ	0xFDD
 58646                           plusw2	equ	0xFDB
 58647                           fsr2h	equ	0xFDA
 58648                           fsr2l	equ	0xFD9
 58649                           status	equ	0xFD8
 58650                           
 58651 ;; *************** function _USBStdGetDscHandler *****************
 58652 ;; Defined at:
 58653 ;;		line 2045 in file "usb_device.c"
 58654 ;; Parameters:    Size  Location     Type
 58655 ;;		None
 58656 ;; Auto vars:     Size  Location     Type
 58657 ;;		None
 58658 ;; Return value:  Size  Location     Type
 58659 ;;                  1    wreg      void 
 58660 ;; Registers used:
 58661 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 58662 ;; Tracked objects:
 58663 ;;		On entry : 0/0
 58664 ;;		On exit  : 0/0
 58665 ;;		Unchanged: 0/0
 58666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 58667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58669 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58670 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58671 ;;Total ram usage:        2 bytes
 58672 ;; Hardware stack levels used:    1
 58673 ;; This function calls:
 58674 ;;		Nothing
 58675 ;; This function is called by:
 58676 ;;		_USBCheckStdRequest
 58677 ;; This function uses a non-reentrant model
 58678 ;;
 58679                           
 58680                           	psect	text284
 58681  012BD0                     __ptext284:
 58682                           	opt stack 0
 58683  012BD0                     _USBStdGetDscHandler:
 58684                           	opt stack 12
 58685                           
 58686                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 58687                           
 58688                           ; BSR set to: 13
 58689                           ;incstack = 0
 58690  012BD0  0E80               	movlw	128
 58691  012BD2  010D               	movlb	13	; () banked
 58692  012BD4  1930               	xorwf	48,w,b	;volatile
 58693  012BD6  A4D8               	btfss	status,2,c
 58694  012BD8  0012               	return	
 58695                           
 58696                           ; BSR set to: 13
 58697                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 58698  012BDA  0EC0               	movlw	192
 58699  012BDC  6E04               	movwf	_inPipes+3,c	;volatile
 58700                           
 58701                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 58702  012BDE  D082               	goto	i2l282
 58703  012BE0                     
 58704                           ; BSR set to: 13
 58705                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 58706                           
 58707                           ; BSR set to: 13
 58708  012BE0  0E44               	movlw	low _device_dsc
 58709  012BE2  6E01               	movwf	_inPipes,c	;volatile
 58710  012BE4  0EC4               	movlw	high _device_dsc
 58711  012BE6  6E02               	movwf	_inPipes+1,c	;volatile
 58712                           
 58713                           ; BSR set to: 13
 58714                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 58715  012BE8  0E00               	movlw	0
 58716  012BEA  6E06               	movwf	_inPipes+5,c	;volatile
 58717  012BEC  0E12               	movlw	18
 58718  012BEE  6E05               	movwf	_inPipes+4,c	;volatile
 58719                           
 58720                           ;usb_device.c: 2060: break;
 58721  012BF0  0012               	return	
 58722  012BF2                     
 58723                           ; BSR set to: 13
 58724                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 58725                           
 58726                           ; BSR set to: 13
 58727  012BF2  5132               	movf	50,w,b	;volatile
 58728  012BF4  A4D8               	btfss	status,2,c
 58729  012BF6  D042               	goto	i2l286
 58730                           
 58731                           ; BSR set to: 13
 58732                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 58733  012BF8  5132               	movf	50,w,b	;volatile
 58734  012BFA  0D02               	mullw	2
 58735  012BFC  0E44               	movlw	low _USB_CD_Ptr
 58736  012BFE  24F3               	addwf	prodl,w,c
 58737  012C00  6EF6               	movwf	tblptrl,c
 58738  012C02  0EC3               	movlw	high _USB_CD_Ptr
 58739  012C04  20F4               	addwfc	prodh,w,c
 58740  012C06  6EF7               	movwf	tblptrh,c
 58741  012C08                     	if	1	;There are 3 active tblptr bytes
 58742  012C08  6AF8               	clrf	tblptru,c
 58743  012C0A  0E00               	movlw	low (__mediumconst shr (0+16))
 58744  012C0C  22F8               	addwfc	tblptru,f,c
 58745  012C0E                     	endif
 58746  012C0E  0009               	tblrd		*+
 58747  012C10  CFF5 F001          	movff	tablat,_inPipes	;volatile
 58748  012C14  000A               	tblrd		*-
 58749  012C16  CFF5 F002          	movff	tablat,_inPipes+1	;volatile
 58750                           
 58751                           ; BSR set to: 13
 58752                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 58753  012C1A  0E02               	movlw	2
 58754  012C1C  2401               	addwf	_inPipes,w,c	;volatile
 58755  012C1E  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 58756  012C20  0E00               	movlw	0
 58757  012C22  2002               	addwfc	_inPipes+1,w,c	;volatile
 58758  012C24  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 58759  012C26  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 58760  012C2A  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 58761  012C2E  0E00               	movlw	low (__mediumconst shr (0+16))
 58762  012C30  6EF8               	movwf	tblptru,c
 58763  012C32  0E0E               	movlw	(high __ramtop+-1)
 58764  012C34  64F7               	cpfsgt	tblptrh,c
 58765  012C36  D003               	bra	i2u1224_47
 58766  012C38  0008               	tblrd		*
 58767  012C3A  50F5               	movf	tablat,w,c
 58768  012C3C  D005               	bra	i2u1224_40
 58769  012C3E                     i2u1224_47:
 58770  012C3E  CFF6 FFE9          	movff	tblptrl,fsr0l
 58771  012C42  CFF7 FFEA          	movff	tblptrh,fsr0h
 58772  012C46  50EF               	movf	indf0,w,c
 58773  012C48                     i2u1224_40:
 58774  012C48  6E05               	movwf	_inPipes+4,c	;volatile
 58775                           
 58776                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 58777  012C4A  0E03               	movlw	3
 58778  012C4C  2401               	addwf	_inPipes,w,c	;volatile
 58779  012C4E  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 58780  012C50  0E00               	movlw	0
 58781  012C52  2002               	addwfc	_inPipes+1,w,c	;volatile
 58782  012C54  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 58783  012C56  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 58784  012C5A  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 58785  012C5E  0E00               	movlw	low (__mediumconst shr (0+16))
 58786  012C60  6EF8               	movwf	tblptru,c
 58787  012C62  0E0E               	movlw	(high __ramtop+-1)
 58788  012C64  64F7               	cpfsgt	tblptrh,c
 58789  012C66  D003               	bra	i2u1225_47
 58790  012C68  0008               	tblrd		*
 58791  012C6A  50F5               	movf	tablat,w,c
 58792  012C6C  D005               	bra	i2u1225_40
 58793  012C6E                     i2u1225_47:
 58794  012C6E  CFF6 FFE9          	movff	tblptrl,fsr0l
 58795  012C72  CFF7 FFEA          	movff	tblptrh,fsr0h
 58796  012C76  50EF               	movf	indf0,w,c
 58797  012C78                     i2u1225_40:
 58798  012C78  6E06               	movwf	_inPipes+5,c	;volatile
 58799                           
 58800                           ;usb_device.c: 2078: }
 58801  012C7A  0012               	return	
 58802  012C7C                     i2l286:
 58803                           
 58804                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 58805  012C7C  0E00               	movlw	0
 58806  012C7E  6E04               	movwf	_inPipes+3,c	;volatile
 58807                           
 58808                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 58809  012C80  0012               	return	
 58810  012C82                     
 58811                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 58812  012C82  0E04               	movlw	4
 58813  012C84  010D               	movlb	13	; () banked
 58814  012C86  6132               	cpfslt	50,b	;volatile
 58815  012C88  D027               	goto	i2l289
 58816                           
 58817                           ; BSR set to: 13
 58818                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 58819  012C8A  5132               	movf	50,w,b	;volatile
 58820  012C8C  0D02               	mullw	2
 58821  012C8E  0E32               	movlw	low _USB_SD_Ptr
 58822  012C90  24F3               	addwf	prodl,w,c
 58823  012C92  6EF6               	movwf	tblptrl,c
 58824  012C94  0EC3               	movlw	high _USB_SD_Ptr
 58825  012C96  20F4               	addwfc	prodh,w,c
 58826  012C98  6EF7               	movwf	tblptrh,c
 58827  012C9A                     	if	1	;There are 3 active tblptr bytes
 58828  012C9A  6AF8               	clrf	tblptru,c
 58829  012C9C  0E00               	movlw	low (__mediumconst shr (0+16))
 58830  012C9E  22F8               	addwfc	tblptru,f,c
 58831  012CA0                     	endif
 58832  012CA0  0009               	tblrd		*+
 58833  012CA2  CFF5 F001          	movff	tablat,_inPipes	;volatile
 58834  012CA6  000A               	tblrd		*-
 58835  012CA8  CFF5 F002          	movff	tablat,_inPipes+1	;volatile
 58836                           
 58837                           ; BSR set to: 13
 58838                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 58839  012CAC  C001  FFF6         	movff	_inPipes,tblptrl	;volatile
 58840  012CB0  C002  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 58841  012CB4  0E00               	movlw	low (__mediumconst shr (0+16))
 58842  012CB6  6EF8               	movwf	tblptru,c
 58843  012CB8  0E0E               	movlw	(high __ramtop+-1)
 58844  012CBA  64F7               	cpfsgt	tblptrh,c
 58845  012CBC  D003               	bra	i2u1227_47
 58846  012CBE  0008               	tblrd		*
 58847  012CC0  50F5               	movf	tablat,w,c
 58848  012CC2  D005               	bra	i2u1227_40
 58849  012CC4                     i2u1227_47:
 58850  012CC4  CFF6 FFE9          	movff	tblptrl,fsr0l
 58851  012CC8  CFF7 FFEA          	movff	tblptrh,fsr0h
 58852  012CCC  50EF               	movf	indf0,w,c
 58853  012CCE                     i2u1227_40:
 58854  012CCE  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 58855  012CD0  502E               	movf	??_USBStdGetDscHandler,w,c
 58856  012CD2  6E05               	movwf	_inPipes+4,c	;volatile
 58857  012CD4  6A06               	clrf	_inPipes+5,c	;volatile
 58858                           
 58859                           ;usb_device.c: 2094: }
 58860  012CD6  0012               	return	
 58861  012CD8                     i2l289:
 58862                           
 58863                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 58864  012CD8  0E00               	movlw	0
 58865  012CDA  6E04               	movwf	_inPipes+3,c	;volatile
 58866                           
 58867                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 58868  012CDC  0012               	return	
 58869  012CDE                     
 58870                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 58871  012CDE  0E00               	movlw	0
 58872  012CE0  6E04               	movwf	_inPipes+3,c	;volatile
 58873                           
 58874                           ;usb_device.c: 2112: }
 58875                           
 58876                           ;usb_device.c: 2111: break;
 58877  012CE2  0012               	return	
 58878  012CE4                     i2l282:
 58879  012CE4  010D               	movlb	13	; () banked
 58880  012CE6  5133               	movf	51,w,b	;volatile
 58881                           
 58882                           ; Switch size 1, requested type "space"
 58883                           ; Number of cases is 3, Range of values is 1 to 3
 58884                           ; switch strategies available:
 58885                           ; Name         Instructions Cycles
 58886                           ; simple_byte           10     6 (average)
 58887                           ;	Chosen strategy is simple_byte
 58888  012CE8  0A01               	xorlw	1	; case 1
 58889  012CEA  B4D8               	btfsc	status,2,c
 58890  012CEC  D779               	goto	i2l283
 58891  012CEE  0A03               	xorlw	3	; case 2
 58892  012CF0  B4D8               	btfsc	status,2,c
 58893  012CF2  D77F               	goto	i2l285
 58894  012CF4  0A01               	xorlw	1	; case 3
 58895  012CF6  B4D8               	btfsc	status,2,c
 58896  012CF8  D7C4               	goto	i2l288
 58897  012CFA  D7F1               	goto	i2l291
 58898  012CFC                     __end_of_USBStdGetDscHandler:
 58899                           	opt stack 0
 58900                           tosu	equ	0xFFF
 58901                           tosh	equ	0xFFE
 58902                           tosl	equ	0xFFD
 58903                           pclatu	equ	0xFFB
 58904                           pclath	equ	0xFFA
 58905                           tblptru	equ	0xFF8
 58906                           tblptrh	equ	0xFF7
 58907                           tblptrl	equ	0xFF6
 58908                           tablat	equ	0xFF5
 58909                           prodh	equ	0xFF4
 58910                           prodl	equ	0xFF3
 58911                           intcon	equ	0xFF2
 58912                           intcon2	equ	0xFF1
 58913                           intcon3	equ	0xFF0
 58914                           indf0	equ	0xFEF
 58915                           postinc0	equ	0xFEE
 58916                           fsr0h	equ	0xFEA
 58917                           fsr0l	equ	0xFE9
 58918                           wreg	equ	0xFE8
 58919                           indf1	equ	0xFE7
 58920                           postinc1	equ	0xFE6
 58921                           postdec1	equ	0xFE5
 58922                           plusw1	equ	0xFE3
 58923                           fsr1h	equ	0xFE2
 58924                           fsr1l	equ	0xFE1
 58925                           indf2	equ	0xFDF
 58926                           postinc2	equ	0xFDE
 58927                           postdec2	equ	0xFDD
 58928                           plusw2	equ	0xFDB
 58929                           fsr2h	equ	0xFDA
 58930                           fsr2l	equ	0xFD9
 58931                           status	equ	0xFD8
 58932                           
 58933 ;; *************** function _USBStdFeatureReqHandler *****************
 58934 ;; Defined at:
 58935 ;;		line 2756 in file "usb_device.c"
 58936 ;; Parameters:    Size  Location     Type
 58937 ;;		None
 58938 ;; Auto vars:     Size  Location     Type
 58939 ;;  p               2   27[COMRAM] PTR struct __BDT
 58940 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 58941 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 58942 ;;		 -> UEP0(1), 
 58943 ;;  current_ep_d    1   26[COMRAM] struct .
 58944 ;; Return value:  Size  Location     Type
 58945 ;;                  1    wreg      void 
 58946 ;; Registers used:
 58947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 58948 ;; Tracked objects:
 58949 ;;		On entry : 0/0
 58950 ;;		On exit  : 0/0
 58951 ;;		Unchanged: 0/0
 58952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 58953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58954 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58955 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58956 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58957 ;;Total ram usage:        6 bytes
 58958 ;; Hardware stack levels used:    1
 58959 ;; Hardware stack levels required when called:    4
 58960 ;; This function calls:
 58961 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 58962 ;; This function is called by:
 58963 ;;		_USBCheckStdRequest
 58964 ;; This function uses a non-reentrant model
 58965 ;;
 58966                           
 58967                           	psect	text285
 58968  00F6C2                     __ptext285:
 58969                           	opt stack 0
 58970  00F6C2                     _USBStdFeatureReqHandler:
 58971                           	opt stack 8
 58972                           
 58973                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 58974                           
 58975                           ;incstack = 0
 58976  00F6C2  010D               	movlb	13	; () banked
 58977  00F6C4  0532               	decf	50,w,b	;volatile
 58978  00F6C6  A4D8               	btfss	status,2,c
 58979  00F6C8  D00E               	goto	i2l375
 58980                           
 58981                           ; BSR set to: 13
 58982  00F6CA  5130               	movf	48,w,b	;volatile
 58983  00F6CC  0B1F               	andlw	31
 58984  00F6CE  0900               	iorlw	0
 58985  00F6D0  A4D8               	btfss	status,2,c
 58986  00F6D2  D009               	goto	i2l375
 58987                           
 58988                           ; BSR set to: 13
 58989                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 58990  00F6D4  8E04               	bsf	_inPipes+3,7,c	;volatile
 58991                           
 58992                           ; BSR set to: 13
 58993                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 58994  00F6D6  0E03               	movlw	3
 58995  00F6D8  1931               	xorwf	49,w,b	;volatile
 58996  00F6DA  A4D8               	btfss	status,2,c
 58997  00F6DC  D002               	goto	i2l374
 58998                           
 58999                           ; BSR set to: 13
 59000                           ;usb_device.c: 2806: RemoteWakeup = 1;
 59001  00F6DE  0E01               	movlw	1
 59002  00F6E0  D001               	goto	L71
 59003  00F6E2                     i2l374:
 59004                           
 59005                           ; BSR set to: 13
 59006                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 59007                           
 59008                           ; BSR set to: 13
 59009  00F6E2  0E00               	movlw	0
 59010  00F6E4                     L71:
 59011  00F6E4  6E28               	movwf	_RemoteWakeup,c	;volatile
 59012  00F6E6                     i2l375:
 59013                           
 59014                           ; BSR set to: 13
 59015                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 59016                           
 59017                           ; BSR set to: 13
 59018  00F6E6  5132               	movf	50,w,b	;volatile
 59019  00F6E8  A4D8               	btfss	status,2,c
 59020  00F6EA  0012               	return	
 59021                           
 59022                           ; BSR set to: 13
 59023  00F6EC  5130               	movf	48,w,b	;volatile
 59024  00F6EE  0B1F               	andlw	31
 59025  00F6F0  0A02               	xorlw	2
 59026  00F6F2  A4D8               	btfss	status,2,c
 59027  00F6F4  0012               	return	
 59028                           
 59029                           ; BSR set to: 13
 59030  00F6F6  5134               	movf	52,w,b	;volatile
 59031  00F6F8  0B0F               	andlw	15
 59032  00F6FA  0900               	iorlw	0
 59033  00F6FC  B4D8               	btfsc	status,2,c
 59034  00F6FE  0012               	return	
 59035                           
 59036                           ; BSR set to: 13
 59037  00F700  5134               	movf	52,w,b	;volatile
 59038  00F702  0B0F               	andlw	15
 59039  00F704  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 59040  00F706  0E03               	movlw	3
 59041  00F708  6045               	cpfslt	??_USBStdFeatureReqHandler,c
 59042  00F70A  0012               	return	
 59043                           
 59044                           ; BSR set to: 13
 59045  00F70C  0E20               	movlw	32
 59046  00F70E  182B               	xorwf	_USBDeviceState,w,c	;volatile
 59047  00F710  A4D8               	btfss	status,2,c
 59048  00F712  0012               	return	
 59049                           
 59050                           ; BSR set to: 13
 59051                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 59052  00F714  8E04               	bsf	_inPipes+3,7,c	;volatile
 59053                           
 59054                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 59055  00F716  BF34               	btfsc	52,7,b	;volatile
 59056  00F718  D019               	goto	i2l377
 59057                           
 59058                           ; BSR set to: 13
 59059                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 59060  00F71A  5134               	movf	52,w,b	;volatile
 59061  00F71C  0B0F               	andlw	15
 59062  00F71E  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 59063  00F720  5045               	movf	??_USBStdFeatureReqHandler,w,c
 59064  00F722  0D02               	mullw	2
 59065  00F724  0EDE               	movlw	low _pBDTEntryOut
 59066  00F726  24F3               	addwf	prodl,w,c
 59067  00F728  6ED9               	movwf	fsr2l,c
 59068  00F72A  0E01               	movlw	high _pBDTEntryOut
 59069  00F72C  20F4               	addwfc	prodh,w,c
 59070  00F72E  6EDA               	movwf	fsr2h,c
 59071  00F730  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 59072  00F734  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 59073                           
 59074                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 59075  00F738  5134               	movf	52,w,b	;volatile
 59076  00F73A  0B0F               	andlw	15
 59077  00F73C  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 59078  00F73E  5045               	movf	??_USBStdFeatureReqHandler,w,c
 59079  00F740  0D01               	mullw	1
 59080  00F742  0EE8               	movlw	low _ep_data_out
 59081  00F744  24F3               	addwf	prodl,w,c
 59082  00F746  6ED9               	movwf	fsr2l,c
 59083  00F748  0E01               	movlw	high _ep_data_out
 59084  00F74A  D018               	goto	L72
 59085  00F74C                     i2l377:
 59086                           
 59087                           ; BSR set to: 13
 59088                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 59089                           
 59090                           ; BSR set to: 13
 59091  00F74C  5134               	movf	52,w,b	;volatile
 59092  00F74E  0B0F               	andlw	15
 59093  00F750  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 59094  00F752  5045               	movf	??_USBStdFeatureReqHandler,w,c
 59095  00F754  0D02               	mullw	2
 59096  00F756  0E07               	movlw	low _pBDTEntryIn
 59097  00F758  24F3               	addwf	prodl,w,c
 59098  00F75A  6ED9               	movwf	fsr2l,c
 59099  00F75C  0E00               	movlw	high _pBDTEntryIn
 59100  00F75E  20F4               	addwfc	prodh,w,c
 59101  00F760  6EDA               	movwf	fsr2h,c
 59102  00F762  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 59103  00F766  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 59104                           
 59105                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 59106  00F76A  5134               	movf	52,w,b	;volatile
 59107  00F76C  0B0F               	andlw	15
 59108  00F76E  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 59109  00F770  5045               	movf	??_USBStdFeatureReqHandler,w,c
 59110  00F772  0D01               	mullw	1
 59111  00F774  0EEB               	movlw	low _ep_data_in
 59112  00F776  24F3               	addwf	prodl,w,c
 59113  00F778  6ED9               	movwf	fsr2l,c
 59114  00F77A  0E01               	movlw	high _ep_data_in
 59115  00F77C                     L72:
 59116  00F77C  20F4               	addwfc	prodh,w,c
 59117  00F77E  6EDA               	movwf	fsr2h,c
 59118  00F780  50DF               	movf	indf2,w,c
 59119  00F782  6E48               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 59120                           
 59121                           ; BSR set to: 13
 59122                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 59123                           
 59124                           ; BSR set to: 13
 59125  00F784  B048               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 59126  00F786  D006               	goto	i2l379
 59127                           
 59128                           ; BSR set to: 13
 59129                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 59130  00F788  0EFB               	movlw	251
 59131  00F78A  1449               	andwf	USBStdFeatureReqHandler@p,w,c
 59132  00F78C  6E49               	movwf	USBStdFeatureReqHandler@p,c
 59133  00F78E  0EFF               	movlw	255
 59134  00F790  144A               	andwf	USBStdFeatureReqHandler@p+1,w,c
 59135  00F792  D004               	goto	L73
 59136  00F794                     i2l379:
 59137                           
 59138                           ; BSR set to: 13
 59139                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 59140                           
 59141                           ; BSR set to: 13
 59142  00F794  0E04               	movlw	4
 59143  00F796  1049               	iorwf	USBStdFeatureReqHandler@p,w,c
 59144  00F798  6E49               	movwf	USBStdFeatureReqHandler@p,c
 59145  00F79A  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 59146  00F79C                     L73:
 59147  00F79C  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 59148                           
 59149                           ; BSR set to: 13
 59150                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 59151                           
 59152                           ; BSR set to: 13
 59153  00F79E  BF34               	btfsc	52,7,b	;volatile
 59154  00F7A0  D00A               	goto	i2l381
 59155                           
 59156                           ; BSR set to: 13
 59157                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 59158  00F7A2  5134               	movf	52,w,b	;volatile
 59159  00F7A4  0B0F               	andlw	15
 59160  00F7A6  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 59161  00F7A8  5045               	movf	??_USBStdFeatureReqHandler,w,c
 59162  00F7AA  0D02               	mullw	2
 59163  00F7AC  0EDE               	movlw	low _pBDTEntryOut
 59164  00F7AE  24F3               	addwf	prodl,w,c
 59165  00F7B0  6ED9               	movwf	fsr2l,c
 59166  00F7B2  0E01               	movlw	high _pBDTEntryOut
 59167  00F7B4  D009               	goto	L74
 59168  00F7B6                     i2l381:
 59169                           
 59170                           ; BSR set to: 13
 59171                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 59172                           
 59173                           ; BSR set to: 13
 59174  00F7B6  5134               	movf	52,w,b	;volatile
 59175  00F7B8  0B0F               	andlw	15
 59176  00F7BA  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 59177  00F7BC  5045               	movf	??_USBStdFeatureReqHandler,w,c
 59178  00F7BE  0D02               	mullw	2
 59179  00F7C0  0E07               	movlw	low _pBDTEntryIn
 59180  00F7C2  24F3               	addwf	prodl,w,c
 59181  00F7C4  6ED9               	movwf	fsr2l,c
 59182  00F7C6  0E00               	movlw	high _pBDTEntryIn
 59183  00F7C8                     L74:
 59184  00F7C8  20F4               	addwfc	prodh,w,c
 59185  00F7CA  6EDA               	movwf	fsr2h,c
 59186  00F7CC  C049  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 59187  00F7D0  C04A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 59188                           
 59189                           ; BSR set to: 13
 59190                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 59191                           
 59192                           ; BSR set to: 13
 59193  00F7D4  0E03               	movlw	3
 59194  00F7D6  1931               	xorwf	49,w,b	;volatile
 59195  00F7D8  A4D8               	btfss	status,2,c
 59196  00F7DA  D02D               	goto	i2l383
 59197                           
 59198                           ; BSR set to: 13
 59199                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 59200  00F7DC  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 59201  00F7E0  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 59202  00F7E4  AEDF               	btfss	indf2,7,c
 59203  00F7E6  D01A               	goto	i2l386
 59204                           
 59205                           ; BSR set to: 13
 59206                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 59207  00F7E8  BF34               	btfsc	52,7,b	;volatile
 59208  00F7EA  D00A               	goto	i2l385
 59209                           
 59210                           ; BSR set to: 13
 59211                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 59212  00F7EC  5134               	movf	52,w,b	;volatile
 59213  00F7EE  0B0F               	andlw	15
 59214  00F7F0  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 59215  00F7F2  5045               	movf	??_USBStdFeatureReqHandler,w,c
 59216  00F7F4  0D01               	mullw	1
 59217  00F7F6  0EE8               	movlw	low _ep_data_out
 59218  00F7F8  24F3               	addwf	prodl,w,c
 59219  00F7FA  6ED9               	movwf	fsr2l,c
 59220  00F7FC  0E01               	movlw	high _ep_data_out
 59221  00F7FE  D00A               	goto	L75
 59222  00F800                     i2l385:
 59223                           
 59224                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 59225                           
 59226                           ; BSR set to: 1
 59227  00F800  010D               	movlb	13	; () banked
 59228  00F802  5134               	movf	52,w,b	;volatile
 59229  00F804  0B0F               	andlw	15
 59230  00F806  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 59231  00F808  5045               	movf	??_USBStdFeatureReqHandler,w,c
 59232  00F80A  0D01               	mullw	1
 59233  00F80C  0EEB               	movlw	low _ep_data_in
 59234  00F80E  24F3               	addwf	prodl,w,c
 59235  00F810  6ED9               	movwf	fsr2l,c
 59236  00F812  0E01               	movlw	high _ep_data_in
 59237  00F814                     L75:
 59238  00F814  20F4               	addwfc	prodh,w,c
 59239  00F816  6EDA               	movwf	fsr2h,c
 59240  00F818  0101               	movlb	1	; () banked
 59241  00F81A  82DF               	bsf	indf2,1,c
 59242  00F81C                     i2l386:
 59243                           
 59244                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 59245                           
 59246                           ; BSR set to: 1
 59247                           
 59248                           ; BSR set to: 1
 59249  00F81C  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 59250  00F820  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 59251  00F824  0E00               	movlw	0
 59252  00F826  84DB               	bsf	plusw2,2,c
 59253                           
 59254                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 59255  00F828  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 59256  00F82C  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 59257  00F830  0E00               	movlw	0
 59258  00F832  8EDB               	bsf	plusw2,7,c
 59259                           
 59260                           ;usb_device.c: 2878: }
 59261  00F834  0012               	return	
 59262  00F836                     i2l383:
 59263                           
 59264                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 59265  00F836  0E04               	movlw	4
 59266  00F838  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 59267  00F83A  6E49               	movwf	USBStdFeatureReqHandler@p,c
 59268  00F83C  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 59269  00F83E  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 59270                           
 59271                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 59272  00F840  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 59273  00F844  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 59274  00F848  AEDF               	btfss	indf2,7,c
 59275  00F84A  D01B               	goto	i2l388
 59276                           
 59277                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 59278  00F84C  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 59279  00F850  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 59280  00F854  0E7F               	movlw	127
 59281  00F856  16DF               	andwf	indf2,f,c
 59282                           
 59283                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 59284  00F858  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 59285  00F85C  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 59286  00F860  0E00               	movlw	0
 59287  00F862  8CDB               	bsf	plusw2,6,c
 59288                           
 59289                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 59290  00F864  0E00               	movlw	0
 59291  00F866  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 59292  00F868  0E05               	movlw	5
 59293  00F86A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 59294  00F86C  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 59295  00F870  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 59296  00F874  0E00               	movlw	0
 59297  00F876  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 59298  00F878  0E02               	movlw	2
 59299  00F87A  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 59300  00F87C  EC7A  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 59301                           
 59302                           ;usb_device.c: 2893: }
 59303  00F880  D006               	goto	i2l389
 59304  00F882                     i2l388:
 59305                           
 59306                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 59307  00F882  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 59308  00F886  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 59309  00F88A  0E00               	movlw	0
 59310  00F88C  8CDB               	bsf	plusw2,6,c
 59311  00F88E                     i2l389:
 59312                           
 59313                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 59314  00F88E  0E04               	movlw	4
 59315  00F890  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 59316  00F892  6E49               	movwf	USBStdFeatureReqHandler@p,c
 59317  00F894  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 59318  00F896  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 59319                           
 59320                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 59321  00F898  B248               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 59322  00F89A  D006               	goto	i2u2161_40
 59323  00F89C  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 59324  00F8A0  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 59325  00F8A4  AEDF               	btfss	indf2,7,c
 59326  00F8A6  D030               	goto	i2l390
 59327  00F8A8                     i2u2161_40:
 59328                           
 59329                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 59330  00F8A8  010D               	movlb	13	; () banked
 59331  00F8AA  BF34               	btfsc	52,7,b	;volatile
 59332  00F8AC  D00A               	goto	i2l393
 59333                           
 59334                           ; BSR set to: 13
 59335                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 59336  00F8AE  5134               	movf	52,w,b	;volatile
 59337  00F8B0  0B0F               	andlw	15
 59338  00F8B2  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 59339  00F8B4  5045               	movf	??_USBStdFeatureReqHandler,w,c
 59340  00F8B6  0D01               	mullw	1
 59341  00F8B8  0EE8               	movlw	low _ep_data_out
 59342  00F8BA  24F3               	addwf	prodl,w,c
 59343  00F8BC  6ED9               	movwf	fsr2l,c
 59344  00F8BE  0E01               	movlw	high _ep_data_out
 59345  00F8C0  D00A               	goto	L76
 59346  00F8C2                     i2l393:
 59347                           
 59348                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 59349                           
 59350                           ; BSR set to: 1
 59351  00F8C2  010D               	movlb	13	; () banked
 59352  00F8C4  5134               	movf	52,w,b	;volatile
 59353  00F8C6  0B0F               	andlw	15
 59354  00F8C8  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 59355  00F8CA  5045               	movf	??_USBStdFeatureReqHandler,w,c
 59356  00F8CC  0D01               	mullw	1
 59357  00F8CE  0EEB               	movlw	low _ep_data_in
 59358  00F8D0  24F3               	addwf	prodl,w,c
 59359  00F8D2  6ED9               	movwf	fsr2l,c
 59360  00F8D4  0E01               	movlw	high _ep_data_in
 59361  00F8D6                     L76:
 59362  00F8D6  20F4               	addwfc	prodh,w,c
 59363  00F8D8  6EDA               	movwf	fsr2h,c
 59364  00F8DA  0101               	movlb	1	; () banked
 59365  00F8DC  92DF               	bcf	indf2,1,c
 59366                           
 59367                           ; BSR set to: 1
 59368                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 59369                           
 59370                           ; BSR set to: 1
 59371  00F8DE  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 59372  00F8E2  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 59373  00F8E6  0E3B               	movlw	59
 59374  00F8E8  16DF               	andwf	indf2,f,c
 59375                           
 59376                           ; BSR set to: 1
 59377                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 59378  00F8EA  0E00               	movlw	0
 59379  00F8EC  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 59380  00F8EE  0E05               	movlw	5
 59381  00F8F0  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 59382  00F8F2  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 59383  00F8F6  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 59384  00F8FA  0E00               	movlw	0
 59385  00F8FC  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 59386  00F8FE  0E02               	movlw	2
 59387  00F900  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 59388  00F902  EC7A  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 59389                           
 59390                           ;usb_device.c: 2923: }
 59391  00F906  D006               	goto	i2l395
 59392  00F908                     i2l390:
 59393                           
 59394                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 59395  00F908  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 59396  00F90C  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 59397  00F910  0E3B               	movlw	59
 59398  00F912  16DF               	andwf	indf2,f,c
 59399  00F914                     i2l395:
 59400                           
 59401                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 59402  00F914  010D               	movlb	13	; () banked
 59403  00F916  5134               	movf	52,w,b	;volatile
 59404  00F918  0B0F               	andlw	15
 59405  00F91A  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 59406  00F91C  5045               	movf	??_USBStdFeatureReqHandler,w,c
 59407  00F91E  0D01               	mullw	1
 59408  00F920  0E26               	movlw	38
 59409  00F922  24F3               	addwf	prodl,w,c
 59410  00F924  6E46               	movwf	USBStdFeatureReqHandler@pUEP,c
 59411  00F926  0E0F               	movlw	15
 59412  00F928  20F4               	addwfc	prodh,w,c
 59413  00F92A  6E47               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 59414                           
 59415                           ; BSR set to: 13
 59416                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 59417  00F92C  C046  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 59418  00F930  C047  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 59419  00F934  0EFE               	movlw	254
 59420  00F936  16DF               	andwf	indf2,f,c
 59421                           
 59422                           ; BSR set to: 13
 59423  00F938  0012               	return	
 59424  00F93A                     __end_of_USBStdFeatureReqHandler:
 59425                           	opt stack 0
 59426                           tosu	equ	0xFFF
 59427                           tosh	equ	0xFFE
 59428                           tosl	equ	0xFFD
 59429                           pclatu	equ	0xFFB
 59430                           pclath	equ	0xFFA
 59431                           tblptru	equ	0xFF8
 59432                           tblptrh	equ	0xFF7
 59433                           tblptrl	equ	0xFF6
 59434                           tablat	equ	0xFF5
 59435                           prodh	equ	0xFF4
 59436                           prodl	equ	0xFF3
 59437                           intcon	equ	0xFF2
 59438                           intcon2	equ	0xFF1
 59439                           intcon3	equ	0xFF0
 59440                           indf0	equ	0xFEF
 59441                           postinc0	equ	0xFEE
 59442                           fsr0h	equ	0xFEA
 59443                           fsr0l	equ	0xFE9
 59444                           wreg	equ	0xFE8
 59445                           indf1	equ	0xFE7
 59446                           postinc1	equ	0xFE6
 59447                           postdec1	equ	0xFE5
 59448                           plusw1	equ	0xFE3
 59449                           fsr1h	equ	0xFE2
 59450                           fsr1l	equ	0xFE1
 59451                           indf2	equ	0xFDF
 59452                           postinc2	equ	0xFDE
 59453                           postdec2	equ	0xFDD
 59454                           plusw2	equ	0xFDB
 59455                           fsr2h	equ	0xFDA
 59456                           fsr2l	equ	0xFD9
 59457                           status	equ	0xFD8
 59458                           
 59459 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 59460 ;; Defined at:
 59461 ;;		line 54 in file "usb_events.c"
 59462 ;; Parameters:    Size  Location     Type
 59463 ;;  event           2   15[COMRAM] enum E7115
 59464 ;;  pdata           2   17[COMRAM] PTR void 
 59465 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 59466 ;;		 -> BDT(48), 
 59467 ;;  size            2   19[COMRAM] unsigned int 
 59468 ;; Auto vars:     Size  Location     Type
 59469 ;;		None
 59470 ;; Return value:  Size  Location     Type
 59471 ;;                  1    wreg      unsigned char 
 59472 ;; Registers used:
 59473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 59474 ;; Tracked objects:
 59475 ;;		On entry : 0/0
 59476 ;;		On exit  : 0/0
 59477 ;;		Unchanged: 0/0
 59478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 59479 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59481 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59482 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59483 ;;Total ram usage:        8 bytes
 59484 ;; Hardware stack levels used:    1
 59485 ;; Hardware stack levels required when called:    3
 59486 ;; This function calls:
 59487 ;;		_APP_DeviceCustomHIDInitialize
 59488 ;;		_APP_DeviceMSDInitialize
 59489 ;;		_MSDTransferTerminated
 59490 ;;		_USBCheckHIDRequest
 59491 ;;		_USBCheckMSDRequest
 59492 ;;		i2_SYSTEM_Initialize
 59493 ;; This function is called by:
 59494 ;;		_USBDeviceTasks
 59495 ;;		_USBStdSetCfgHandler
 59496 ;;		_USBSuspend
 59497 ;;		_USBWakeFromSuspend
 59498 ;;		_USBCtrlTrfSetupHandler
 59499 ;;		_USBCheckStdRequest
 59500 ;;		_USBStdFeatureReqHandler
 59501 ;; This function uses a non-reentrant model
 59502 ;;
 59503                           
 59504                           	psect	text286
 59505  0168F4                     __ptext286:
 59506                           	opt stack 0
 59507  0168F4                     _USER_USB_CALLBACK_EVENT_HANDLER:
 59508                           	opt stack 12
 59509                           
 59510                           ;usb_events.c: 56: switch((int)event)
 59511                           
 59512                           ;incstack = 0
 59513  0168F4  D019               	goto	i2l824
 59514  0168F6                     
 59515                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 59516  0168F6  0E01               	movlw	1
 59517  0168F8  EC45  F0BE         	call	i2_SYSTEM_Initialize
 59518                           
 59519                           ;usb_events.c: 79: break;
 59520  0168FC  0012               	return	
 59521  0168FE                     
 59522                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 59523  0168FE  0E02               	movlw	2
 59524  016900  EC45  F0BE         	call	i2_SYSTEM_Initialize
 59525                           
 59526                           ;usb_events.c: 90: break;
 59527  016904  0012               	return	
 59528  016906                     
 59529                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 59530  016906  ECBA  F0C2         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 59531                           
 59532                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 59533  01690A  EC13  F0C8         	call	_APP_DeviceMSDInitialize	;wreg free
 59534                           
 59535                           ;usb_events.c: 100: break;
 59536                           
 59537                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 59538                           
 59539                           ;usb_events.c: 97: break;
 59540  01690E  0012               	return	
 59541  016910                     
 59542                           ;usb_events.c: 105: USBCheckHIDRequest();
 59543  016910  EC7E  F0A6         	call	_USBCheckHIDRequest	;wreg free
 59544                           
 59545                           ;usb_events.c: 108: USBCheckMSDRequest();
 59546  016914  ECC0  F0AC         	call	_USBCheckMSDRequest	;wreg free
 59547                           
 59548                           ;usb_events.c: 112: break;
 59549                           
 59550                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 59551                           
 59552                           ;usb_events.c: 109: break;
 59553  016918  0012               	return	
 59554  01691A                     
 59555                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 59556  01691A  C03F  F039         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 59557  01691E  C040  F03A         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 59558  016922  ECF0  F0BD         	call	_MSDTransferTerminated	;wreg free
 59559                           
 59560                           ;usb_events.c: 129: }
 59561                           
 59562                           ;usb_events.c: 128: break;
 59563                           
 59564                           ;usb_events.c: 127: default:
 59565                           
 59566                           ;usb_events.c: 125: break;
 59567  016926  0012               	return	
 59568  016928                     i2l824:
 59569  016928  C03D  F043         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 59570  01692C  C03E  F044         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 59571                           
 59572                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 59573                           ; Switch size 1, requested type "space"
 59574                           ; Number of cases is 2, Range of values is 0 to 127
 59575                           ; switch strategies available:
 59576                           ; Name         Instructions Cycles
 59577                           ; simple_byte            7     4 (average)
 59578                           ;	Chosen strategy is simple_byte
 59579  016930  5044               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 59580  016932  0A00               	xorlw	0	; case 0
 59581  016934  B4D8               	btfsc	status,2,c
 59582  016936  D004               	goto	i2l28837
 59583  016938  0A7F               	xorlw	127	; case 127
 59584  01693A  A4D8               	btfss	status,2,c
 59585  01693C  0012               	return	
 59586  01693E  D01A               	goto	i2l28839
 59587  016940                     i2l28837:
 59588                           
 59589                           ; Switch size 1, requested type "space"
 59590                           ; Number of cases is 8, Range of values is 1 to 117
 59591                           ; switch strategies available:
 59592                           ; Name         Instructions Cycles
 59593                           ; simple_byte           25    13 (average)
 59594                           ;	Chosen strategy is simple_byte
 59595  016940  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 59596  016942  0A01               	xorlw	1	; case 1
 59597  016944  B4D8               	btfsc	status,2,c
 59598  016946  D7DF               	goto	i2l830
 59599  016948  0A03               	xorlw	3	; case 2
 59600  01694A  B4D8               	btfsc	status,2,c
 59601  01694C  0012               	return	
 59602  01694E  0A01               	xorlw	1	; case 3
 59603  016950  B4D8               	btfsc	status,2,c
 59604  016952  D7DE               	goto	i2l832
 59605  016954  0A06               	xorlw	6	; case 5
 59606  016956  B4D8               	btfsc	status,2,c
 59607  016958  D7E0               	goto	i2l834
 59608  01695A  0A77               	xorlw	119	; case 114
 59609  01695C  B4D8               	btfsc	status,2,c
 59610  01695E  0012               	return	
 59611  016960  0A01               	xorlw	1	; case 115
 59612  016962  B4D8               	btfsc	status,2,c
 59613  016964  0012               	return	
 59614  016966  0A07               	xorlw	7	; case 116
 59615  016968  B4D8               	btfsc	status,2,c
 59616  01696A  D7C9               	goto	i2l829
 59617  01696C  0A01               	xorlw	1	; case 117
 59618  01696E  A4D8               	btfss	status,2,c
 59619  016970  0012               	return	
 59620  016972  D7C1               	goto	i2l828
 59621  016974                     i2l28839:
 59622                           
 59623                           ; Switch size 1, requested type "space"
 59624                           ; Number of cases is 1, Range of values is 255 to 255
 59625                           ; switch strategies available:
 59626                           ; Name         Instructions Cycles
 59627                           ; simple_byte            4     3 (average)
 59628                           ;	Chosen strategy is simple_byte
 59629  016974  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 59630  016976  0AFF               	xorlw	255	; case 255
 59631  016978  0012               	return	
 59632  01697A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 59633                           	opt stack 0
 59634                           tosu	equ	0xFFF
 59635                           tosh	equ	0xFFE
 59636                           tosl	equ	0xFFD
 59637                           pclatu	equ	0xFFB
 59638                           pclath	equ	0xFFA
 59639                           tblptru	equ	0xFF8
 59640                           tblptrh	equ	0xFF7
 59641                           tblptrl	equ	0xFF6
 59642                           tablat	equ	0xFF5
 59643                           prodh	equ	0xFF4
 59644                           prodl	equ	0xFF3
 59645                           intcon	equ	0xFF2
 59646                           intcon2	equ	0xFF1
 59647                           intcon3	equ	0xFF0
 59648                           indf0	equ	0xFEF
 59649                           postinc0	equ	0xFEE
 59650                           fsr0h	equ	0xFEA
 59651                           fsr0l	equ	0xFE9
 59652                           wreg	equ	0xFE8
 59653                           indf1	equ	0xFE7
 59654                           postinc1	equ	0xFE6
 59655                           postdec1	equ	0xFE5
 59656                           plusw1	equ	0xFE3
 59657                           fsr1h	equ	0xFE2
 59658                           fsr1l	equ	0xFE1
 59659                           indf2	equ	0xFDF
 59660                           postinc2	equ	0xFDE
 59661                           postdec2	equ	0xFDD
 59662                           plusw2	equ	0xFDB
 59663                           fsr2h	equ	0xFDA
 59664                           fsr2l	equ	0xFD9
 59665                           status	equ	0xFD8
 59666                           
 59667 ;; *************** function i2_SYSTEM_Initialize *****************
 59668 ;; Defined at:
 59669 ;;		line 38 in file "system.c"
 59670 ;; Parameters:    Size  Location     Type
 59671 ;;  state           1    wreg     enum E6906
 59672 ;; Auto vars:     Size  Location     Type
 59673 ;;  state           1    4[COMRAM] enum E6906
 59674 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 59675 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 59676 ;; Return value:  Size  Location     Type
 59677 ;;                  1    wreg      void 
 59678 ;; Registers used:
 59679 ;;		wreg, status,2, status,0
 59680 ;; Tracked objects:
 59681 ;;		On entry : 0/0
 59682 ;;		On exit  : 0/0
 59683 ;;		Unchanged: 0/0
 59684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 59685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59686 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59688 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59689 ;;Total ram usage:        5 bytes
 59690 ;; Hardware stack levels used:    1
 59691 ;; This function calls:
 59692 ;;		Nothing
 59693 ;; This function is called by:
 59694 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 59695 ;; This function uses a non-reentrant model
 59696 ;;
 59697                           
 59698                           	psect	text287
 59699  017C8A                     __ptext287:
 59700                           	opt stack 0
 59701  017C8A                     i2_SYSTEM_Initialize:
 59702                           	opt stack 14
 59703                           
 59704                           ;incstack = 0
 59705                           ;i2SYSTEM_Initialize@state stored from wreg
 59706  017C8A  6E32               	movwf	i2SYSTEM_Initialize@state,c
 59707                           
 59708                           ;system.c: 40: switch(state)
 59709  017C8C  D01D               	goto	i2l942
 59710  017C8E                     
 59711                           ;system.c: 49: {;system.c: 50: unsigned int pll_startup_counter = 600;
 59712  017C8E  0E02               	movlw	2
 59713  017C90  6E2F               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 59714  017C92  0E58               	movlw	88
 59715  017C94  6E2E               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 59716                           
 59717                           ;system.c: 51: OSCTUNEbits.PLLEN = 1;
 59718  017C96  8C9B               	bsf	3995,6,c	;volatile
 59719  017C98                     i2l14293:
 59720  017C98  062E               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 59721  017C9A  A0D8               	btfss	status,0,c
 59722  017C9C  062F               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 59723  017C9E  282E               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 59724  017CA0  E1FB               	bnz	i2l14293
 59725  017CA2  282F               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 59726  017CA4  B4D8               	btfsc	status,2,c
 59727  017CA6  0012               	return	
 59728  017CA8  D7F7               	goto	i2l945
 59729  017CAA                     
 59730                           ;system.c: 77: OSCCON = 0x70;
 59731  017CAA  0E70               	movlw	112
 59732  017CAC  6ED3               	movwf	4051,c	;volatile
 59733                           
 59734                           ;system.c: 83: {;system.c: 84: unsigned int pll_startup_counter = 800;
 59735  017CAE  0E03               	movlw	3
 59736  017CB0  6E31               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3409+1,c
 59737  017CB2  0E20               	movlw	32
 59738  017CB4  6E30               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3409,c
 59739  017CB6                     i2l14297:
 59740  017CB6  0630               	decf	i2SYSTEM_Initialize@pll_startup_counter_3409,f,c
 59741  017CB8  A0D8               	btfss	status,0,c
 59742  017CBA  0631               	decf	i2SYSTEM_Initialize@pll_startup_counter_3409+1,f,c
 59743  017CBC  2830               	incf	i2SYSTEM_Initialize@pll_startup_counter_3409,w,c
 59744  017CBE  E1FB               	bnz	i2l14297
 59745  017CC0  2831               	incf	i2SYSTEM_Initialize@pll_startup_counter_3409+1,w,c
 59746  017CC2  B4D8               	btfsc	status,2,c
 59747  017CC4  0012               	return	
 59748  017CC6  D7F7               	goto	i2l951
 59749  017CC8                     i2l942:
 59750  017CC8  5032               	movf	i2SYSTEM_Initialize@state,w,c
 59751                           
 59752                           ; Switch size 1, requested type "space"
 59753                           ; Number of cases is 3, Range of values is 0 to 2
 59754                           ; switch strategies available:
 59755                           ; Name         Instructions Cycles
 59756                           ; simple_byte           10     6 (average)
 59757                           ;	Chosen strategy is simple_byte
 59758  017CCA  0A00               	xorlw	0	; case 0
 59759  017CCC  B4D8               	btfsc	status,2,c
 59760  017CCE  D7DF               	goto	i2l943
 59761  017CD0  0A01               	xorlw	1	; case 1
 59762  017CD2  B4D8               	btfsc	status,2,c
 59763  017CD4  0012               	return	
 59764  017CD6  0A03               	xorlw	3	; case 2
 59765  017CD8  A4D8               	btfss	status,2,c
 59766  017CDA  0012               	return	
 59767  017CDC  D7E6               	goto	i2l949
 59768  017CDE                     __end_ofi2_SYSTEM_Initialize:
 59769                           	opt stack 0
 59770                           tosu	equ	0xFFF
 59771                           tosh	equ	0xFFE
 59772                           tosl	equ	0xFFD
 59773                           pclatu	equ	0xFFB
 59774                           pclath	equ	0xFFA
 59775                           tblptru	equ	0xFF8
 59776                           tblptrh	equ	0xFF7
 59777                           tblptrl	equ	0xFF6
 59778                           tablat	equ	0xFF5
 59779                           prodh	equ	0xFF4
 59780                           prodl	equ	0xFF3
 59781                           intcon	equ	0xFF2
 59782                           intcon2	equ	0xFF1
 59783                           intcon3	equ	0xFF0
 59784                           indf0	equ	0xFEF
 59785                           postinc0	equ	0xFEE
 59786                           fsr0h	equ	0xFEA
 59787                           fsr0l	equ	0xFE9
 59788                           wreg	equ	0xFE8
 59789                           indf1	equ	0xFE7
 59790                           postinc1	equ	0xFE6
 59791                           postdec1	equ	0xFE5
 59792                           plusw1	equ	0xFE3
 59793                           fsr1h	equ	0xFE2
 59794                           fsr1l	equ	0xFE1
 59795                           indf2	equ	0xFDF
 59796                           postinc2	equ	0xFDE
 59797                           postdec2	equ	0xFDD
 59798                           plusw2	equ	0xFDB
 59799                           fsr2h	equ	0xFDA
 59800                           fsr2l	equ	0xFD9
 59801                           status	equ	0xFD8
 59802                           
 59803 ;; *************** function _USBCheckMSDRequest *****************
 59804 ;; Defined at:
 59805 ;;		line 218 in file "usb_device_msd.c"
 59806 ;; Parameters:    Size  Location     Type
 59807 ;;		None
 59808 ;; Auto vars:     Size  Location     Type
 59809 ;;		None
 59810 ;; Return value:  Size  Location     Type
 59811 ;;                  1    wreg      void 
 59812 ;; Registers used:
 59813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 59814 ;; Tracked objects:
 59815 ;;		On entry : 0/0
 59816 ;;		On exit  : 0/0
 59817 ;;		Unchanged: 0/0
 59818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 59819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59820 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59822 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59823 ;;Total ram usage:        4 bytes
 59824 ;; Hardware stack levels used:    1
 59825 ;; Hardware stack levels required when called:    1
 59826 ;; This function calls:
 59827 ;;		i2_USBTransferOnePacket
 59828 ;; This function is called by:
 59829 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 59830 ;; This function uses a non-reentrant model
 59831 ;;
 59832                           
 59833                           	psect	text288
 59834  015980                     __ptext288:
 59835                           	opt stack 0
 59836  015980                     _USBCheckMSDRequest:
 59837                           	opt stack 13
 59838                           
 59839                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 59840                           
 59841                           ;incstack = 0
 59842  015980  010D               	movlb	13	; () banked
 59843  015982  5130               	movf	48,w,b	;volatile
 59844  015984  0B1F               	andlw	31
 59845  015986  06E8               	decf	wreg,f,c
 59846  015988  A4D8               	btfss	status,2,c
 59847  01598A  0012               	return	
 59848                           
 59849                           ; BSR set to: 13
 59850                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 59851                           
 59852                           ; BSR set to: 13
 59853                           
 59854                           ; BSR set to: 13
 59855                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 59856  01598C  5134               	movf	52,w,b	;volatile
 59857  01598E  A4D8               	btfss	status,2,c
 59858  015990  0012               	return	
 59859  015992  D04C               	goto	i2l549
 59860  015994                     
 59861                           ; BSR set to: 13
 59862                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 59863                           
 59864                           ; BSR set to: 13
 59865  015994  5132               	movf	50,w,b	;volatile
 59866  015996  1133               	iorwf	51,w,b	;volatile
 59867  015998  A4D8               	btfss	status,2,c
 59868  01599A  0012               	return	
 59869                           
 59870                           ; BSR set to: 13
 59871  01599C  5136               	movf	54,w,b	;volatile
 59872  01599E  1137               	iorwf	55,w,b	;volatile
 59873  0159A0  A4D8               	btfss	status,2,c
 59874  0159A2  0012               	return	
 59875                           
 59876                           ; BSR set to: 13
 59877                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 59878                           
 59879                           ; BSR set to: 13
 59880                           
 59881                           ; BSR set to: 13
 59882                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 59883  0159A4  0E00               	movlw	0
 59884  0159A6  6E24               	movwf	_MSD_State,c
 59885                           
 59886                           ; BSR set to: 13
 59887                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 59888  0159A8  6823               	setf	_MSDCommandState,c
 59889                           
 59890                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 59891  0159AA  0E00               	movlw	0
 59892  0159AC  0101               	movlb	1	; () banked
 59893  0159AE  6FF6               	movwf	_MSDReadState& (0+255),b
 59894                           
 59895                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 59896  0159B0  0E00               	movlw	0
 59897  0159B2  6E22               	movwf	_MSDWriteState,c
 59898                           
 59899                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 59900  0159B4  0E01               	movlw	1
 59901  0159B6  6FF3               	movwf	_MSDCBWValid& (0+255),b
 59902                           
 59903                           ; BSR set to: 1
 59904                           
 59905                           ; BSR set to: 1
 59906                           
 59907                           ; BSR set to: 1
 59908                           
 59909                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 59910  0159B8  C1E2  F039         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2693
 59911  0159BC  C1E3  F03A         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2693+1
 59912                           
 59913                           ; BSR set to: 1
 59914  0159C0  5039               	movf	_USBCheckMSDRequest$2693,w,c
 59915  0159C2  103A               	iorwf	_USBCheckMSDRequest$2693+1,w,c
 59916  0159C4  B4D8               	btfsc	status,2,c
 59917  0159C6  D00A               	goto	i2u1053_40
 59918                           
 59919                           ; BSR set to: 1
 59920                           
 59921                           ; BSR set to: 1
 59922                           
 59923                           ; BSR set to: 1
 59924                           
 59925                           ; BSR set to: 1
 59926  0159C8  C1E2  F03B         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2694
 59927  0159CC  C1E3  F03C         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2694+1
 59928                           
 59929                           ; BSR set to: 1
 59930                           
 59931                           ; BSR set to: 1
 59932  0159D0  C03B  FFD9         	movff	_USBCheckMSDRequest$2694,fsr2l
 59933  0159D4  C03C  FFDA         	movff	_USBCheckMSDRequest$2694+1,fsr2h
 59934  0159D8  BEDF               	btfsc	indf2,7,c
 59935  0159DA  D00F               	goto	i2l554
 59936  0159DC                     i2u1053_40:
 59937                           
 59938                           ; BSR set to: 1
 59939                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 59940                           
 59941                           ; BSR set to: 1
 59942  0159DC  0E00               	movlw	0
 59943  0159DE  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 59944  0159E0  0E40               	movlw	64
 59945  0159E2  6E2F               	movwf	i2USBTransferOnePacket@data,c
 59946  0159E4  0E0D               	movlw	13
 59947  0159E6  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 59948  0159E8  0E40               	movlw	64
 59949  0159EA  6E31               	movwf	i2USBTransferOnePacket@len,c
 59950  0159EC  0E02               	movlw	2
 59951  0159EE  EC5F  F09C         	call	i2_USBTransferOnePacket
 59952  0159F2  C02E  F013         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 59953  0159F6  C02F  F014         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 59954  0159FA                     i2l554:
 59955                           
 59956                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 59957  0159FA  0E80               	movlw	128
 59958  0159FC  6E04               	movwf	_inPipes+3,c	;volatile
 59959                           
 59960                           ;usb_device_msd.c: 263: break;
 59961  0159FE  0012               	return	
 59962  015A00                     
 59963                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 59964  015A00  010D               	movlb	13	; () banked
 59965  015A02  5132               	movf	50,w,b	;volatile
 59966  015A04  1133               	iorwf	51,w,b	;volatile
 59967  015A06  A4D8               	btfss	status,2,c
 59968  015A08  0012               	return	
 59969                           
 59970                           ; BSR set to: 13
 59971  015A0A  0536               	decf	54,w,b	;volatile
 59972  015A0C  1137               	iorwf	55,w,b	;volatile
 59973  015A0E  A4D8               	btfss	status,2,c
 59974  015A10  0012               	return	
 59975                           
 59976                           ; BSR set to: 13
 59977                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 59978                           
 59979                           ; BSR set to: 13
 59980                           
 59981                           ; BSR set to: 13
 59982                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 59983  015A12  0E00               	movlw	0
 59984  015A14  6F38               	movwf	56,b	;volatile
 59985                           
 59986                           ; BSR set to: 13
 59987                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 59988  015A16  0E38               	movlw	56
 59989  015A18  6E01               	movwf	_inPipes,c	;volatile
 59990  015A1A  0E0D               	movlw	13
 59991  015A1C  6E02               	movwf	_inPipes+1,c	;volatile
 59992                           
 59993                           ; BSR set to: 13
 59994  015A1E  0E00               	movlw	0
 59995  015A20  6E06               	movwf	_inPipes+5,c	;volatile
 59996  015A22  0E01               	movlw	1
 59997  015A24  6E05               	movwf	_inPipes+4,c	;volatile
 59998                           
 59999                           ; BSR set to: 13
 60000  015A26  0EC1               	movlw	193
 60001  015A28  6E04               	movwf	_inPipes+3,c	;volatile
 60002                           
 60003                           ; BSR set to: 13
 60004                           ;usb_device_msd.c: 278: }
 60005                           
 60006                           ;usb_device_msd.c: 277: break;
 60007  015A2A  0012               	return	
 60008  015A2C                     i2l549:
 60009                           
 60010                           ; BSR set to: 13
 60011                           
 60012                           ; BSR set to: 13
 60013  015A2C  5131               	movf	49,w,b	;volatile
 60014                           
 60015                           ; Switch size 1, requested type "space"
 60016                           ; Number of cases is 2, Range of values is 254 to 255
 60017                           ; switch strategies available:
 60018                           ; Name         Instructions Cycles
 60019                           ; simple_byte            7     4 (average)
 60020                           ;	Chosen strategy is simple_byte
 60021  015A2E  0AFE               	xorlw	254	; case 254
 60022  015A30  B4D8               	btfsc	status,2,c
 60023  015A32  D7E6               	goto	i2l566
 60024  015A34  0A01               	xorlw	1	; case 255
 60025  015A36  A4D8               	btfss	status,2,c
 60026  015A38  0012               	return	
 60027  015A3A  D7AC               	goto	i2l550
 60028  015A3C                     __end_of_USBCheckMSDRequest:
 60029                           	opt stack 0
 60030                           tosu	equ	0xFFF
 60031                           tosh	equ	0xFFE
 60032                           tosl	equ	0xFFD
 60033                           pclatu	equ	0xFFB
 60034                           pclath	equ	0xFFA
 60035                           tblptru	equ	0xFF8
 60036                           tblptrh	equ	0xFF7
 60037                           tblptrl	equ	0xFF6
 60038                           tablat	equ	0xFF5
 60039                           prodh	equ	0xFF4
 60040                           prodl	equ	0xFF3
 60041                           intcon	equ	0xFF2
 60042                           intcon2	equ	0xFF1
 60043                           intcon3	equ	0xFF0
 60044                           indf0	equ	0xFEF
 60045                           postinc0	equ	0xFEE
 60046                           fsr0h	equ	0xFEA
 60047                           fsr0l	equ	0xFE9
 60048                           wreg	equ	0xFE8
 60049                           indf1	equ	0xFE7
 60050                           postinc1	equ	0xFE6
 60051                           postdec1	equ	0xFE5
 60052                           plusw1	equ	0xFE3
 60053                           fsr1h	equ	0xFE2
 60054                           fsr1l	equ	0xFE1
 60055                           indf2	equ	0xFDF
 60056                           postinc2	equ	0xFDE
 60057                           postdec2	equ	0xFDD
 60058                           plusw2	equ	0xFDB
 60059                           fsr2h	equ	0xFDA
 60060                           fsr2l	equ	0xFD9
 60061                           status	equ	0xFD8
 60062                           
 60063 ;; *************** function _USBCheckHIDRequest *****************
 60064 ;; Defined at:
 60065 ;;		line 153 in file "usb_device_hid.c"
 60066 ;; Parameters:    Size  Location     Type
 60067 ;;		None
 60068 ;; Auto vars:     Size  Location     Type
 60069 ;;		None
 60070 ;; Return value:  Size  Location     Type
 60071 ;;                  1    wreg      void 
 60072 ;; Registers used:
 60073 ;;		wreg, status,2, status,0
 60074 ;; Tracked objects:
 60075 ;;		On entry : 0/0
 60076 ;;		On exit  : 0/0
 60077 ;;		Unchanged: 0/0
 60078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 60079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 60080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 60081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 60082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 60083 ;;Total ram usage:        0 bytes
 60084 ;; Hardware stack levels used:    1
 60085 ;; This function calls:
 60086 ;;		Nothing
 60087 ;; This function is called by:
 60088 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 60089 ;; This function uses a non-reentrant model
 60090 ;;
 60091                           
 60092                           	psect	text289
 60093  014CFC                     __ptext289:
 60094                           	opt stack 0
 60095  014CFC                     _USBCheckHIDRequest:
 60096                           	opt stack 14
 60097                           
 60098                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 60099                           
 60100                           ;incstack = 0
 60101  014CFC  010D               	movlb	13	; () banked
 60102  014CFE  5130               	movf	48,w,b	;volatile
 60103  014D00  0B1F               	andlw	31
 60104  014D02  06E8               	decf	wreg,f,c
 60105  014D04  A4D8               	btfss	status,2,c
 60106  014D06  0012               	return	
 60107                           
 60108                           ; BSR set to: 13
 60109                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 60110                           
 60111                           ; BSR set to: 13
 60112                           
 60113                           ; BSR set to: 13
 60114  014D08  5134               	movf	52,w,b	;volatile
 60115  014D0A  A4D8               	btfss	status,2,c
 60116  014D0C  0012               	return	
 60117                           
 60118                           ; BSR set to: 13
 60119                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 60120                           
 60121                           ; BSR set to: 13
 60122                           
 60123                           ; BSR set to: 13
 60124  014D0E  0E06               	movlw	6
 60125  014D10  1931               	xorwf	49,w,b	;volatile
 60126  014D12  B4D8               	btfsc	status,2,c
 60127  014D14  D018               	goto	i2l427
 60128  014D16  D01F               	goto	i2l430
 60129  014D18                     
 60130                           ; BSR set to: 13
 60131                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 60132                           
 60133                           ; BSR set to: 13
 60134  014D18  042D               	decf	_USBActiveConfiguration,w,c	;volatile
 60135  014D1A  A4D8               	btfss	status,2,c
 60136  014D1C  D01C               	goto	i2l430
 60137                           
 60138                           ; BSR set to: 13
 60139                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 60140  014D1E  0E59               	movlw	low (_configDescriptor1+18)
 60141  014D20  6E01               	movwf	_inPipes,c	;volatile
 60142  014D22  0EC3               	movlw	high (_configDescriptor1+18)
 60143  014D24  6E02               	movwf	_inPipes+1,c	;volatile
 60144                           
 60145                           ; BSR set to: 13
 60146  014D26  0E00               	movlw	0
 60147  014D28  6E06               	movwf	_inPipes+5,c	;volatile
 60148  014D2A  0E09               	movlw	9
 60149  014D2C  D00A               	goto	L77
 60150  014D2E                     i2l13797:
 60151                           
 60152                           ; BSR set to: 13
 60153  014D2E  0EC0               	movlw	192
 60154  014D30  6E04               	movwf	_inPipes+3,c	;volatile
 60155                           
 60156                           ; BSR set to: 13
 60157                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 60158  014D32  D011               	goto	i2l430
 60159  014D34                     
 60160                           ; BSR set to: 13
 60161                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 60162                           
 60163                           ; BSR set to: 13
 60164  014D34  0E0D               	movlw	low _hid_rpt01
 60165  014D36  6E01               	movwf	_inPipes,c	;volatile
 60166  014D38  0EC4               	movlw	high _hid_rpt01
 60167  014D3A  6E02               	movwf	_inPipes+1,c	;volatile
 60168                           
 60169                           ; BSR set to: 13
 60170  014D3C  0E00               	movlw	0
 60171  014D3E  6E06               	movwf	_inPipes+5,c	;volatile
 60172  014D40  0E1D               	movlw	29
 60173  014D42                     L77:
 60174  014D42  6E05               	movwf	_inPipes+4,c	;volatile
 60175  014D44  D7F4               	goto	i2l13797
 60176  014D46                     i2l427:
 60177                           
 60178                           ; BSR set to: 13
 60179                           
 60180                           ; BSR set to: 13
 60181  014D46  5133               	movf	51,w,b	;volatile
 60182                           
 60183                           ; Switch size 1, requested type "space"
 60184                           ; Number of cases is 3, Range of values is 33 to 35
 60185                           ; switch strategies available:
 60186                           ; Name         Instructions Cycles
 60187                           ; simple_byte           10     6 (average)
 60188                           ;	Chosen strategy is simple_byte
 60189  014D48  0A21               	xorlw	33	; case 33
 60190  014D4A  B4D8               	btfsc	status,2,c
 60191  014D4C  D7E5               	goto	i2l428
 60192  014D4E  0A03               	xorlw	3	; case 34
 60193  014D50  B4D8               	btfsc	status,2,c
 60194  014D52  D7F0               	goto	i2l431
 60195  014D54  0A01               	xorlw	1	; case 35
 60196  014D56                     i2l430:
 60197                           
 60198                           ; BSR set to: 13
 60199                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 60200                           
 60201                           ; BSR set to: 13
 60202                           
 60203                           ; BSR set to: 13
 60204  014D56  3930               	swapf	48,w,b	;volatile
 60205  014D58  32E8               	rrcf	wreg,f,c
 60206  014D5A  0B03               	andlw	3
 60207  014D5C  06E8               	decf	wreg,f,c
 60208  014D5E  A4D8               	btfss	status,2,c
 60209  014D60  0012               	return	
 60210  014D62  D020               	goto	i2l434
 60211  014D64                     
 60212                           ; BSR set to: 13
 60213                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 60214                           
 60215                           ; BSR set to: 13
 60216  014D64  0EFF               	movlw	low _idle_rate
 60217  014D66  6E01               	movwf	_inPipes,c	;volatile
 60218  014D68  0E01               	movlw	high _idle_rate
 60219  014D6A  6E02               	movwf	_inPipes+1,c	;volatile
 60220                           
 60221                           ; BSR set to: 13
 60222  014D6C  0E00               	movlw	0
 60223  014D6E  6E06               	movwf	_inPipes+5,c	;volatile
 60224  014D70  0E01               	movlw	1
 60225  014D72  6E05               	movwf	_inPipes+4,c	;volatile
 60226                           
 60227                           ; BSR set to: 13
 60228  014D74  0EC1               	movlw	193
 60229  014D76  6E04               	movwf	_inPipes+3,c	;volatile
 60230                           
 60231                           ;usb_device_hid.c: 223: break;
 60232  014D78  0012               	return	
 60233  014D7A                     
 60234                           ; BSR set to: 13
 60235                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 60236                           
 60237                           ; BSR set to: 13
 60238  014D7A  0E80               	movlw	128
 60239  014D7C  6E04               	movwf	_inPipes+3,c	;volatile
 60240                           
 60241                           ; BSR set to: 13
 60242                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 60243  014D7E  CD33 F1FF          	movff	3379,_idle_rate	;volatile
 60244                           
 60245                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 60246  014D82  0012               	return	
 60247  014D84                     
 60248                           ; BSR set to: 13
 60249                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 60250                           
 60251                           ; BSR set to: 13
 60252  014D84  0EFE               	movlw	low _active_protocol
 60253  014D86  6E01               	movwf	_inPipes,c	;volatile
 60254  014D88  0E01               	movlw	high _active_protocol
 60255  014D8A  6E02               	movwf	_inPipes+1,c	;volatile
 60256                           
 60257                           ; BSR set to: 13
 60258  014D8C  0E00               	movlw	0
 60259  014D8E  6E06               	movwf	_inPipes+5,c	;volatile
 60260  014D90  0E01               	movlw	1
 60261  014D92  6E05               	movwf	_inPipes+4,c	;volatile
 60262                           
 60263                           ; BSR set to: 13
 60264  014D94  0E81               	movlw	129
 60265  014D96  6E04               	movwf	_inPipes+3,c	;volatile
 60266                           
 60267                           ;usb_device_hid.c: 234: break;
 60268  014D98  0012               	return	
 60269  014D9A                     
 60270                           ; BSR set to: 13
 60271                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 60272                           
 60273                           ; BSR set to: 13
 60274  014D9A  0E80               	movlw	128
 60275  014D9C  6E04               	movwf	_inPipes+3,c	;volatile
 60276                           
 60277                           ; BSR set to: 13
 60278                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 60279  014D9E  CD32 F1FE          	movff	3378,_active_protocol	;volatile
 60280                           
 60281                           ; BSR set to: 13
 60282                           ;usb_device_hid.c: 239: }
 60283                           
 60284                           ;usb_device_hid.c: 238: break;
 60285  014DA2  0012               	return	
 60286  014DA4                     i2l434:
 60287                           
 60288                           ; BSR set to: 13
 60289                           
 60290                           ; BSR set to: 13
 60291  014DA4  5131               	movf	49,w,b	;volatile
 60292                           
 60293                           ; Switch size 1, requested type "space"
 60294                           ; Number of cases is 6, Range of values is 1 to 11
 60295                           ; switch strategies available:
 60296                           ; Name         Instructions Cycles
 60297                           ; simple_byte           19    10 (average)
 60298                           ;	Chosen strategy is simple_byte
 60299  014DA6  0A01               	xorlw	1	; case 1
 60300  014DA8  B4D8               	btfsc	status,2,c
 60301  014DAA  0012               	return	
 60302  014DAC  0A03               	xorlw	3	; case 2
 60303  014DAE  B4D8               	btfsc	status,2,c
 60304  014DB0  D7D9               	goto	i2l438
 60305  014DB2  0A01               	xorlw	1	; case 3
 60306  014DB4  B4D8               	btfsc	status,2,c
 60307  014DB6  D7E6               	goto	i2l440
 60308  014DB8  0A0A               	xorlw	10	; case 9
 60309  014DBA  B4D8               	btfsc	status,2,c
 60310  014DBC  0012               	return	
 60311  014DBE  0A03               	xorlw	3	; case 10
 60312  014DC0  B4D8               	btfsc	status,2,c
 60313  014DC2  D7DB               	goto	i2l439
 60314  014DC4  0A01               	xorlw	1	; case 11
 60315  014DC6  A4D8               	btfss	status,2,c
 60316  014DC8  0012               	return	
 60317  014DCA  D7E7               	goto	i2l441
 60318  014DCC                     __end_of_USBCheckHIDRequest:
 60319                           	opt stack 0
 60320                           tosu	equ	0xFFF
 60321                           tosh	equ	0xFFE
 60322                           tosl	equ	0xFFD
 60323                           pclatu	equ	0xFFB
 60324                           pclath	equ	0xFFA
 60325                           tblptru	equ	0xFF8
 60326                           tblptrh	equ	0xFF7
 60327                           tblptrl	equ	0xFF6
 60328                           tablat	equ	0xFF5
 60329                           prodh	equ	0xFF4
 60330                           prodl	equ	0xFF3
 60331                           intcon	equ	0xFF2
 60332                           intcon2	equ	0xFF1
 60333                           intcon3	equ	0xFF0
 60334                           indf0	equ	0xFEF
 60335                           postinc0	equ	0xFEE
 60336                           fsr0h	equ	0xFEA
 60337                           fsr0l	equ	0xFE9
 60338                           wreg	equ	0xFE8
 60339                           indf1	equ	0xFE7
 60340                           postinc1	equ	0xFE6
 60341                           postdec1	equ	0xFE5
 60342                           plusw1	equ	0xFE3
 60343                           fsr1h	equ	0xFE2
 60344                           fsr1l	equ	0xFE1
 60345                           indf2	equ	0xFDF
 60346                           postinc2	equ	0xFDE
 60347                           postdec2	equ	0xFDD
 60348                           plusw2	equ	0xFDB
 60349                           fsr2h	equ	0xFDA
 60350                           fsr2l	equ	0xFD9
 60351                           status	equ	0xFD8
 60352                           
 60353 ;; *************** function _MSDTransferTerminated *****************
 60354 ;; Defined at:
 60355 ;;		line 1674 in file "usb_device_msd.c"
 60356 ;; Parameters:    Size  Location     Type
 60357 ;;  handle          2   11[COMRAM] PTR void 
 60358 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 60359 ;;		 -> BDT(48), 
 60360 ;; Auto vars:     Size  Location     Type
 60361 ;;		None
 60362 ;; Return value:  Size  Location     Type
 60363 ;;                  1    wreg      void 
 60364 ;; Registers used:
 60365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 60366 ;; Tracked objects:
 60367 ;;		On entry : 0/0
 60368 ;;		On exit  : 0/0
 60369 ;;		Unchanged: 0/0
 60370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 60371 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 60372 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 60373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 60374 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 60375 ;;Total ram usage:        4 bytes
 60376 ;; Hardware stack levels used:    1
 60377 ;; Hardware stack levels required when called:    1
 60378 ;; This function calls:
 60379 ;;		i2_USBStallEndpoint
 60380 ;;		i2_USBTransferOnePacket
 60381 ;; This function is called by:
 60382 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 60383 ;; This function uses a non-reentrant model
 60384 ;;
 60385                           
 60386                           	psect	text290
 60387  017BE0                     __ptext290:
 60388                           	opt stack 0
 60389  017BE0                     _MSDTransferTerminated:
 60390                           	opt stack 13
 60391                           
 60392                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 60393                           
 60394                           ; BSR set to: 13
 60395                           ;incstack = 0
 60396  017BE0  0101               	movlb	1	; () banked
 60397  017BE2  51F3               	movf	_MSDCBWValid& (0+255),w,b
 60398  017BE4  A4D8               	btfss	status,2,c
 60399  017BE6  D00B               	goto	i2l784
 60400                           
 60401                           ; BSR set to: 1
 60402                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 60403  017BE8  0E01               	movlw	1
 60404  017BEA  6E2E               	movwf	i2USBStallEndpoint@dir,c
 60405  017BEC  0E02               	movlw	2
 60406  017BEE  EC5A  F09B         	call	i2_USBStallEndpoint
 60407                           
 60408                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 60409  017BF2  0E00               	movlw	0
 60410  017BF4  6E2E               	movwf	i2USBStallEndpoint@dir,c
 60411  017BF6  0E02               	movlw	2
 60412  017BF8  EC5A  F09B         	call	i2_USBStallEndpoint
 60413                           
 60414                           ;usb_device_msd.c: 1681: }
 60415  017BFC  0012               	return	
 60416  017BFE                     i2l784:
 60417  017BFE  C1E2  F03B         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2782
 60418  017C02  C1E3  F03C         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2782+1
 60419  017C06  503B               	movf	_MSDTransferTerminated$2782,w,c
 60420  017C08  1839               	xorwf	MSDTransferTerminated@handle,w,c
 60421  017C0A  E114               	bnz	i2l787
 60422  017C0C  503C               	movf	_MSDTransferTerminated$2782+1,w,c
 60423  017C0E  183A               	xorwf	MSDTransferTerminated@handle+1,w,c
 60424  017C10  A4D8               	btfss	status,2,c
 60425  017C12  0012               	return	
 60426                           
 60427                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 60428  017C14  0E00               	movlw	0
 60429  017C16  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 60430  017C18  0E40               	movlw	64
 60431  017C1A  6E2F               	movwf	i2USBTransferOnePacket@data,c
 60432  017C1C  0E0D               	movlw	13
 60433  017C1E  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 60434  017C20  0E40               	movlw	64
 60435  017C22  6E31               	movwf	i2USBTransferOnePacket@len,c
 60436  017C24  0E02               	movlw	2
 60437  017C26  EC5F  F09C         	call	i2_USBTransferOnePacket
 60438  017C2A  C02E  F013         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 60439  017C2E  C02F  F014         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 60440  017C32  0012               	return	
 60441  017C34                     i2l787:
 60442  017C34  0012               	return		;funcret
 60443  017C36                     __end_of_MSDTransferTerminated:
 60444                           	opt stack 0
 60445                           tosu	equ	0xFFF
 60446                           tosh	equ	0xFFE
 60447                           tosl	equ	0xFFD
 60448                           pclatu	equ	0xFFB
 60449                           pclath	equ	0xFFA
 60450                           tblptru	equ	0xFF8
 60451                           tblptrh	equ	0xFF7
 60452                           tblptrl	equ	0xFF6
 60453                           tablat	equ	0xFF5
 60454                           prodh	equ	0xFF4
 60455                           prodl	equ	0xFF3
 60456                           intcon	equ	0xFF2
 60457                           intcon2	equ	0xFF1
 60458                           intcon3	equ	0xFF0
 60459                           indf0	equ	0xFEF
 60460                           postinc0	equ	0xFEE
 60461                           fsr0h	equ	0xFEA
 60462                           fsr0l	equ	0xFE9
 60463                           wreg	equ	0xFE8
 60464                           indf1	equ	0xFE7
 60465                           postinc1	equ	0xFE6
 60466                           postdec1	equ	0xFE5
 60467                           plusw1	equ	0xFE3
 60468                           fsr1h	equ	0xFE2
 60469                           fsr1l	equ	0xFE1
 60470                           indf2	equ	0xFDF
 60471                           postinc2	equ	0xFDE
 60472                           postdec2	equ	0xFDD
 60473                           plusw2	equ	0xFDB
 60474                           fsr2h	equ	0xFDA
 60475                           fsr2l	equ	0xFD9
 60476                           status	equ	0xFD8
 60477                           
 60478 ;; *************** function i2_USBStallEndpoint *****************
 60479 ;; Defined at:
 60480 ;;		line 1073 in file "usb_device.c"
 60481 ;; Parameters:    Size  Location     Type
 60482 ;;  ep              1    wreg     unsigned char 
 60483 ;;  dir             1    0[COMRAM] unsigned char 
 60484 ;; Auto vars:     Size  Location     Type
 60485 ;;  ep              1    5[COMRAM] unsigned char 
 60486 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 60487 ;;		 -> BDT(48), 
 60488 ;; Return value:  Size  Location     Type
 60489 ;;                  1    wreg      void 
 60490 ;; Registers used:
 60491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 60492 ;; Tracked objects:
 60493 ;;		On entry : 0/0
 60494 ;;		On exit  : 0/0
 60495 ;;		Unchanged: 0/0
 60496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 60497 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 60498 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 60499 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 60500 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 60501 ;;Total ram usage:        8 bytes
 60502 ;; Hardware stack levels used:    1
 60503 ;; This function calls:
 60504 ;;		Nothing
 60505 ;; This function is called by:
 60506 ;;		_MSDTransferTerminated
 60507 ;; This function uses a non-reentrant model
 60508 ;;
 60509                           
 60510                           	psect	text291
 60511  0136B4                     __ptext291:
 60512                           	opt stack 0
 60513  0136B4                     i2_USBStallEndpoint:
 60514                           	opt stack 13
 60515                           
 60516                           ;incstack = 0
 60517                           ;i2USBStallEndpoint@ep stored from wreg
 60518  0136B4  6E33               	movwf	i2USBStallEndpoint@ep,c
 60519                           
 60520                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 60521  0136B6  5033               	movf	i2USBStallEndpoint@ep,w,c
 60522  0136B8  A4D8               	btfss	status,2,c
 60523  0136BA  D02B               	goto	i2l194
 60524                           
 60525                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 60526  0136BC  EE20 F001          	lfsr	2,1
 60527  0136C0  5015               	movf	_pBDTEntryEP0OutNext,w,c
 60528  0136C2  26D9               	addwf	fsr2l,f,c
 60529  0136C4  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 60530  0136C6  22DA               	addwfc	fsr2h,f,c
 60531  0136C8  0E08               	movlw	8
 60532  0136CA  6EDF               	movwf	indf2,c
 60533                           
 60534                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 60535  0136CC  EE20 F002          	lfsr	2,2
 60536  0136D0  5015               	movf	_pBDTEntryEP0OutNext,w,c
 60537  0136D2  26D9               	addwf	fsr2l,f,c
 60538  0136D4  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 60539  0136D6  22DA               	addwfc	fsr2h,f,c
 60540  0136D8  0E30               	movlw	48
 60541  0136DA  6EDE               	movwf	postinc2,c
 60542  0136DC  0E0D               	movlw	13
 60543  0136DE  6EDD               	movwf	postdec2,c
 60544                           
 60545                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 60546  0136E0  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 60547  0136E4  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 60548  0136E8  0E0C               	movlw	12
 60549  0136EA  6EDF               	movwf	indf2,c
 60550                           
 60551                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 60552  0136EC  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 60553  0136F0  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 60554  0136F4  0E00               	movlw	0
 60555  0136F6  8EDB               	bsf	plusw2,7,c
 60556                           
 60557                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 60558  0136F8  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 60559  0136FC  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 60560  013700  0E04               	movlw	4
 60561  013702  6EDF               	movwf	indf2,c
 60562                           
 60563                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 60564  013704  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 60565  013708  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 60566  01370C  0E00               	movlw	0
 60567  01370E  8EDB               	bsf	plusw2,7,c
 60568                           
 60569                           ;usb_device.c: 1089: }
 60570  013710  0012               	return	
 60571  013712                     i2l194:
 60572                           
 60573                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 60574  013712  502E               	movf	i2USBStallEndpoint@dir,w,c
 60575  013714  6E2F               	movwf	??i2_USBStallEndpoint& (0+255),c
 60576  013716  6A30               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 60577  013718  90D8               	bcf	status,0,c
 60578  01371A  362F               	rlcf	??i2_USBStallEndpoint,f,c
 60579  01371C  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 60580  01371E  5033               	movf	i2USBStallEndpoint@ep,w,c
 60581  013720  6E31               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 60582  013722  6A32               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 60583  013724  90D8               	bcf	status,0,c
 60584  013726  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 60585  013728  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 60586  01372A  90D8               	bcf	status,0,c
 60587  01372C  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 60588  01372E  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 60589  013730  502F               	movf	??i2_USBStallEndpoint,w,c
 60590  013732  2631               	addwf	??i2_USBStallEndpoint+2,f,c
 60591  013734  5030               	movf	??i2_USBStallEndpoint+1,w,c
 60592  013736  2232               	addwfc	??i2_USBStallEndpoint+3,f,c
 60593  013738  90D8               	bcf	status,0,c
 60594  01373A  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 60595  01373C  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 60596  01373E  90D8               	bcf	status,0,c
 60597  013740  3631               	rlcf	??i2_USBStallEndpoint+2,f,c
 60598  013742  3632               	rlcf	??i2_USBStallEndpoint+3,f,c
 60599  013744  0E00               	movlw	0
 60600  013746  2431               	addwf	??i2_USBStallEndpoint+2,w,c
 60601  013748  6E34               	movwf	i2USBStallEndpoint@p,c
 60602  01374A  0E0D               	movlw	13
 60603  01374C  2032               	addwfc	??i2_USBStallEndpoint+3,w,c
 60604  01374E  6E35               	movwf	i2USBStallEndpoint@p+1,c
 60605                           
 60606                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 60607  013750  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 60608  013754  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 60609  013758  0E00               	movlw	0
 60610  01375A  84DB               	bsf	plusw2,2,c
 60611                           
 60612                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 60613  01375C  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 60614  013760  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 60615  013764  0E00               	movlw	0
 60616  013766  8EDB               	bsf	plusw2,7,c
 60617                           
 60618                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 60619  013768  5033               	movf	i2USBStallEndpoint@ep,w,c
 60620  01376A  0D04               	mullw	4
 60621  01376C  CFF3 F02F          	movff	prodl,??i2_USBStallEndpoint
 60622  013770  CFF4 F030          	movff	prodh,??i2_USBStallEndpoint+1
 60623  013774  502E               	movf	i2USBStallEndpoint@dir,w,c
 60624  013776  0D02               	mullw	2
 60625  013778  50F3               	movf	prodl,w,c
 60626  01377A  262F               	addwf	??i2_USBStallEndpoint,f,c
 60627  01377C  50F4               	movf	prodh,w,c
 60628  01377E  2230               	addwfc	??i2_USBStallEndpoint+1,f,c
 60629  013780  90D8               	bcf	status,0,c
 60630  013782  362F               	rlcf	??i2_USBStallEndpoint,f,c
 60631  013784  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 60632  013786  90D8               	bcf	status,0,c
 60633  013788  362F               	rlcf	??i2_USBStallEndpoint,f,c
 60634  01378A  3630               	rlcf	??i2_USBStallEndpoint+1,f,c
 60635  01378C  0E04               	movlw	4
 60636  01378E  262F               	addwf	??i2_USBStallEndpoint,f,c
 60637  013790  0E00               	movlw	0
 60638  013792  2230               	addwfc	??i2_USBStallEndpoint+1,f,c
 60639  013794  0E00               	movlw	0
 60640  013796  242F               	addwf	??i2_USBStallEndpoint,w,c
 60641  013798  6E34               	movwf	i2USBStallEndpoint@p,c
 60642  01379A  0E0D               	movlw	13
 60643  01379C  2030               	addwfc	??i2_USBStallEndpoint+1,w,c
 60644  01379E  6E35               	movwf	i2USBStallEndpoint@p+1,c
 60645                           
 60646                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 60647  0137A0  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 60648  0137A4  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 60649  0137A8  0E00               	movlw	0
 60650  0137AA  84DB               	bsf	plusw2,2,c
 60651                           
 60652                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 60653  0137AC  C034  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 60654  0137B0  C035  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 60655  0137B4  0E00               	movlw	0
 60656  0137B6  8EDB               	bsf	plusw2,7,c
 60657  0137B8  0012               	return	
 60658  0137BA                     __end_ofi2_USBStallEndpoint:
 60659                           	opt stack 0
 60660                           tosu	equ	0xFFF
 60661                           tosh	equ	0xFFE
 60662                           tosl	equ	0xFFD
 60663                           pclatu	equ	0xFFB
 60664                           pclath	equ	0xFFA
 60665                           tblptru	equ	0xFF8
 60666                           tblptrh	equ	0xFF7
 60667                           tblptrl	equ	0xFF6
 60668                           tablat	equ	0xFF5
 60669                           prodh	equ	0xFF4
 60670                           prodl	equ	0xFF3
 60671                           intcon	equ	0xFF2
 60672                           intcon2	equ	0xFF1
 60673                           intcon3	equ	0xFF0
 60674                           indf0	equ	0xFEF
 60675                           postinc0	equ	0xFEE
 60676                           fsr0h	equ	0xFEA
 60677                           fsr0l	equ	0xFE9
 60678                           wreg	equ	0xFE8
 60679                           indf1	equ	0xFE7
 60680                           postinc1	equ	0xFE6
 60681                           postdec1	equ	0xFE5
 60682                           plusw1	equ	0xFE3
 60683                           fsr1h	equ	0xFE2
 60684                           fsr1l	equ	0xFE1
 60685                           indf2	equ	0xFDF
 60686                           postinc2	equ	0xFDE
 60687                           postdec2	equ	0xFDD
 60688                           plusw2	equ	0xFDB
 60689                           fsr2h	equ	0xFDA
 60690                           fsr2l	equ	0xFD9
 60691                           status	equ	0xFD8
 60692                           
 60693 ;; *************** function _APP_DeviceMSDInitialize *****************
 60694 ;; Defined at:
 60695 ;;		line 84 in file "app_device_msd.c"
 60696 ;; Parameters:    Size  Location     Type
 60697 ;;		None
 60698 ;; Auto vars:     Size  Location     Type
 60699 ;;		None
 60700 ;; Return value:  Size  Location     Type
 60701 ;;                  1    wreg      void 
 60702 ;; Registers used:
 60703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 60704 ;; Tracked objects:
 60705 ;;		On entry : 0/0
 60706 ;;		On exit  : 0/0
 60707 ;;		Unchanged: 0/0
 60708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 60709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 60710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 60711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 60712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 60713 ;;Total ram usage:        0 bytes
 60714 ;; Hardware stack levels used:    1
 60715 ;; Hardware stack levels required when called:    2
 60716 ;; This function calls:
 60717 ;;		_USBEnableEndpoint
 60718 ;;		_USBMSDInit
 60719 ;; This function is called by:
 60720 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 60721 ;; This function uses a non-reentrant model
 60722 ;;
 60723                           
 60724                           	psect	text292
 60725  019026                     __ptext292:
 60726                           	opt stack 0
 60727  019026                     _APP_DeviceMSDInitialize:
 60728                           	opt stack 12
 60729                           
 60730                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 60731                           
 60732                           ;incstack = 0
 60733  019026  0E1E               	movlw	30
 60734  019028  6E36               	movwf	USBEnableEndpoint@options,c
 60735  01902A  0E02               	movlw	2
 60736  01902C  ECC4  F0C1         	call	_USBEnableEndpoint
 60737                           
 60738                           ;app_device_msd.c: 93: USBMSDInit();
 60739  019030  EC44  F099         	call	_USBMSDInit	;wreg free
 60740  019034  0012               	return		;funcret
 60741  019036                     __end_of_APP_DeviceMSDInitialize:
 60742                           	opt stack 0
 60743                           tosu	equ	0xFFF
 60744                           tosh	equ	0xFFE
 60745                           tosl	equ	0xFFD
 60746                           pclatu	equ	0xFFB
 60747                           pclath	equ	0xFFA
 60748                           tblptru	equ	0xFF8
 60749                           tblptrh	equ	0xFF7
 60750                           tblptrl	equ	0xFF6
 60751                           tablat	equ	0xFF5
 60752                           prodh	equ	0xFF4
 60753                           prodl	equ	0xFF3
 60754                           intcon	equ	0xFF2
 60755                           intcon2	equ	0xFF1
 60756                           intcon3	equ	0xFF0
 60757                           indf0	equ	0xFEF
 60758                           postinc0	equ	0xFEE
 60759                           fsr0h	equ	0xFEA
 60760                           fsr0l	equ	0xFE9
 60761                           wreg	equ	0xFE8
 60762                           indf1	equ	0xFE7
 60763                           postinc1	equ	0xFE6
 60764                           postdec1	equ	0xFE5
 60765                           plusw1	equ	0xFE3
 60766                           fsr1h	equ	0xFE2
 60767                           fsr1l	equ	0xFE1
 60768                           indf2	equ	0xFDF
 60769                           postinc2	equ	0xFDE
 60770                           postdec2	equ	0xFDD
 60771                           plusw2	equ	0xFDB
 60772                           fsr2h	equ	0xFDA
 60773                           fsr2l	equ	0xFD9
 60774                           status	equ	0xFD8
 60775                           
 60776 ;; *************** function _USBMSDInit *****************
 60777 ;; Defined at:
 60778 ;;		line 142 in file "usb_device_msd.c"
 60779 ;; Parameters:    Size  Location     Type
 60780 ;;		None
 60781 ;; Auto vars:     Size  Location     Type
 60782 ;;		None
 60783 ;; Return value:  Size  Location     Type
 60784 ;;                  1    wreg      void 
 60785 ;; Registers used:
 60786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 60787 ;; Tracked objects:
 60788 ;;		On entry : 0/0
 60789 ;;		On exit  : 0/0
 60790 ;;		Unchanged: 0/0
 60791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 60792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 60793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 60794 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 60795 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 60796 ;;Total ram usage:        3 bytes
 60797 ;; Hardware stack levels used:    1
 60798 ;; Hardware stack levels required when called:    1
 60799 ;; This function calls:
 60800 ;;		i2_ExternalFlash_MediaDetect
 60801 ;;		i2_ExternalFlash_MediaInitialize
 60802 ;;		i2_ResetSenseData
 60803 ;;		i2_USBTransferOnePacket
 60804 ;; This function is called by:
 60805 ;;		_APP_DeviceMSDInitialize
 60806 ;; This function uses a non-reentrant model
 60807 ;;
 60808                           
 60809                           	psect	text293
 60810  013288                     __ptext293:
 60811                           	opt stack 0
 60812  013288                     _USBMSDInit:
 60813                           	opt stack 12
 60814                           
 60815                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 60816                           
 60817                           ;incstack = 0
 60818  013288  0E00               	movlw	0
 60819  01328A  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 60820  01328C  0E40               	movlw	64
 60821  01328E  6E2F               	movwf	i2USBTransferOnePacket@data,c
 60822  013290  0E0D               	movlw	13
 60823  013292  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 60824  013294  0E40               	movlw	64
 60825  013296  6E31               	movwf	i2USBTransferOnePacket@len,c
 60826  013298  0E02               	movlw	2
 60827  01329A  EC5F  F09C         	call	i2_USBTransferOnePacket
 60828  01329E  C02E  F013         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 60829  0132A2  C02F  F014         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 60830  0132A6  C00B  F011         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 60831  0132AA  C00C  F012         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 60832                           
 60833                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 60834  0132AE  0E00               	movlw	0
 60835  0132B0  6E24               	movwf	_MSD_State,c
 60836                           
 60837                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 60838  0132B2  6823               	setf	_MSDCommandState,c
 60839                           
 60840                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 60841  0132B4  0E00               	movlw	0
 60842  0132B6  0101               	movlb	1	; () banked
 60843  0132B8  6FF6               	movwf	_MSDReadState& (0+255),b
 60844                           
 60845                           ; BSR set to: 1
 60846                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 60847  0132BA  0E00               	movlw	0
 60848  0132BC  6E22               	movwf	_MSDWriteState,c
 60849                           
 60850                           ; BSR set to: 1
 60851                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 60852  0132BE  0E00               	movlw	0
 60853  0132C0  6E21               	movwf	_MSDHostNoData,c
 60854                           
 60855                           ; BSR set to: 1
 60856                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 60857  0132C2  0E00               	movlw	0
 60858  0132C4  0103               	movlb	3	; () banked
 60859  0132C6  6F14               	movwf	_gblNumBLKS& (0+255),b
 60860  0132C8  0E00               	movlw	0
 60861  0132CA  6F15               	movwf	(_gblNumBLKS+1)& (0+255),b
 60862  0132CC  0E00               	movlw	0
 60863  0132CE  6F16               	movwf	(_gblNumBLKS+2)& (0+255),b
 60864  0132D0  0E00               	movlw	0
 60865  0132D2  6F17               	movwf	(_gblNumBLKS+3)& (0+255),b
 60866                           
 60867                           ; BSR set to: 3
 60868                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 60869  0132D4  0E00               	movlw	0
 60870  0132D6  6F10               	movwf	_gblBLKLen& (0+255),b
 60871  0132D8  0E00               	movlw	0
 60872  0132DA  6F11               	movwf	(_gblBLKLen+1)& (0+255),b
 60873  0132DC  0E00               	movlw	0
 60874  0132DE  6F12               	movwf	(_gblBLKLen+2)& (0+255),b
 60875  0132E0  0E00               	movlw	0
 60876  0132E2  6F13               	movwf	(_gblBLKLen+3)& (0+255),b
 60877                           
 60878                           ; BSR set to: 3
 60879                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 60880  0132E4  0E01               	movlw	1
 60881  0132E6  0101               	movlb	1	; () banked
 60882  0132E8  6FF3               	movwf	_MSDCBWValid& (0+255),b
 60883                           
 60884                           ; BSR set to: 1
 60885                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 60886  0132EA  0E00               	movlw	0
 60887  0132EC  0102               	movlb	2	; () banked
 60888  0132EE  6FC2               	movwf	(_gblMediaPresent+1)& (0+255),b
 60889  0132F0  0E00               	movlw	0
 60890  0132F2  6FC1               	movwf	_gblMediaPresent& (0+255),b
 60891                           
 60892                           ; BSR set to: 2
 60893                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 60894  0132F4  0E00               	movlw	0
 60895  0132F6  6F55               	movwf	(_gblCBW+13)& (0+255),b
 60896  0132F8  D04A               	goto	i2l538
 60897  0132FA                     
 60898                           ; BSR set to: 2
 60899                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 60900                           
 60901                           ; BSR set to: 2
 60902  0132FA  5155               	movf	(_gblCBW+13)& (0+255),w,b
 60903  0132FC  0D01               	mullw	1
 60904  0132FE  0EF4               	movlw	low _SoftDetach
 60905  013300  24F3               	addwf	prodl,w,c
 60906  013302  6ED9               	movwf	fsr2l,c
 60907  013304  0E01               	movlw	high _SoftDetach
 60908  013306  20F4               	addwfc	prodh,w,c
 60909  013308  6EDA               	movwf	fsr2h,c
 60910  01330A  0E00               	movlw	0
 60911  01330C  6EDF               	movwf	indf2,c
 60912                           
 60913                           ; BSR set to: 2
 60914                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 60915  01330E  C2E9  F02E         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 60916  013312  C2EA  F02F         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 60917  013316  EE22  F0DD         	lfsr	2,_LUN+9
 60918  01331A  D801               	call	i2u1973_48
 60919  01331C  D00A               	goto	i2u1973_49
 60920  01331E                     i2u1973_48:
 60921  01331E  0005               	push	
 60922  013320  6EFA               	movwf	pclath,c
 60923  013322  50DE               	movf	postinc2,w,c
 60924  013324  6EFD               	movwf	tosl,c
 60925  013326  50DE               	movf	postinc2,w,c
 60926  013328  6EFE               	movwf	tosh,c
 60927  01332A  50DE               	movf	postinc2,w,c
 60928  01332C  6EFF               	movwf	tosu,c
 60929  01332E  50FA               	movf	pclath,w,c
 60930  013330  0012               	return		;indir
 60931  013332                     i2u1973_49:
 60932  013332  0900               	iorlw	0
 60933  013334  B4D8               	btfsc	status,2,c
 60934  013336  D027               	goto	i2l541
 60935                           
 60936                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 60937  013338  C2E9  F02E         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 60938  01333C  C2EA  F02F         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 60939  013340  D801               	call	i2u1975_48
 60940  013342  D00B               	goto	i2u1975_49
 60941  013344                     i2u1975_48:
 60942  013344  0005               	push	
 60943  013346  6EFA               	movwf	pclath,c
 60944  013348  0102               	movlb	2	; () banked
 60945  01334A  51D4               	movf	_LUN& (0+255),w,b
 60946  01334C  6EFD               	movwf	tosl,c
 60947  01334E  51D5               	movf	(_LUN+1)& (0+255),w,b
 60948  013350  6EFE               	movwf	tosh,c
 60949  013352  51D6               	movf	(_LUN+2)& (0+255),w,b
 60950  013354  6EFF               	movwf	tosu,c
 60951  013356  50FA               	movf	pclath,w,c
 60952  013358  0012               	return		;indir
 60953  01335A                     i2u1975_49:
 60954  01335A  502E               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 60955  01335C  102F               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 60956  01335E  B4D8               	btfsc	status,2,c
 60957  013360  D012               	goto	i2l541
 60958                           
 60959                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 60960  013362  C255  F039         	movff	_gblCBW+13,??_USBMSDInit
 60961  013366  0E01               	movlw	1
 60962  013368  6E3A               	movwf	(??_USBMSDInit+1)& (0+255),c
 60963  01336A  0E00               	movlw	0
 60964  01336C  6E3B               	movwf	(??_USBMSDInit+2)& (0+255),c
 60965  01336E  2A39               	incf	??_USBMSDInit,f,c
 60966  013370  D003               	goto	i2u1977_44
 60967  013372                     i2u1977_45:
 60968  013372  90D8               	bcf	status,0,c
 60969  013374  363A               	rlcf	??_USBMSDInit+1,f,c
 60970  013376  363B               	rlcf	??_USBMSDInit+2,f,c
 60971  013378                     i2u1977_44:
 60972  013378  2E39               	decfsz	??_USBMSDInit,f,c
 60973  01337A  D7FB               	goto	i2u1977_45
 60974  01337C  503A               	movf	??_USBMSDInit+1,w,c
 60975  01337E  0102               	movlb	2	; () banked
 60976  013380  13C1               	iorwf	_gblMediaPresent& (0+255),f,b
 60977  013382  503B               	movf	??_USBMSDInit+2,w,c
 60978  013384  13C2               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 60979  013386                     i2l541:
 60980                           
 60981                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 60982                           
 60983                           ; BSR set to: 2
 60984                           
 60985                           ; BSR set to: 2
 60986  013386  EC66  F0BA         	call	i2_ResetSenseData	;wreg free
 60987  01338A  0102               	movlb	2	; () banked
 60988  01338C  2B55               	incf	(_gblCBW+13)& (0+255),f,b
 60989  01338E                     i2l538:
 60990                           
 60991                           ; BSR set to: 2
 60992                           
 60993                           ; BSR set to: 2
 60994  01338E  5155               	movf	(_gblCBW+13)& (0+255),w,b
 60995  013390  A4D8               	btfss	status,2,c
 60996  013392  0012               	return	
 60997  013394  D7B2               	goto	i2l539
 60998  013396                     __end_of_USBMSDInit:
 60999                           	opt stack 0
 61000                           tosu	equ	0xFFF
 61001                           tosh	equ	0xFFE
 61002                           tosl	equ	0xFFD
 61003                           pclatu	equ	0xFFB
 61004                           pclath	equ	0xFFA
 61005                           tblptru	equ	0xFF8
 61006                           tblptrh	equ	0xFF7
 61007                           tblptrl	equ	0xFF6
 61008                           tablat	equ	0xFF5
 61009                           prodh	equ	0xFF4
 61010                           prodl	equ	0xFF3
 61011                           intcon	equ	0xFF2
 61012                           intcon2	equ	0xFF1
 61013                           intcon3	equ	0xFF0
 61014                           indf0	equ	0xFEF
 61015                           postinc0	equ	0xFEE
 61016                           fsr0h	equ	0xFEA
 61017                           fsr0l	equ	0xFE9
 61018                           wreg	equ	0xFE8
 61019                           indf1	equ	0xFE7
 61020                           postinc1	equ	0xFE6
 61021                           postdec1	equ	0xFE5
 61022                           plusw1	equ	0xFE3
 61023                           fsr1h	equ	0xFE2
 61024                           fsr1l	equ	0xFE1
 61025                           indf2	equ	0xFDF
 61026                           postinc2	equ	0xFDE
 61027                           postdec2	equ	0xFDD
 61028                           plusw2	equ	0xFDB
 61029                           fsr2h	equ	0xFDA
 61030                           fsr2l	equ	0xFD9
 61031                           status	equ	0xFD8
 61032                           
 61033 ;; *************** function i2_ResetSenseData *****************
 61034 ;; Defined at:
 61035 ;;		line 1373 in file "usb_device_msd.c"
 61036 ;; Parameters:    Size  Location     Type
 61037 ;;		None
 61038 ;; Auto vars:     Size  Location     Type
 61039 ;;		None
 61040 ;; Return value:  Size  Location     Type
 61041 ;;                  1    wreg      void 
 61042 ;; Registers used:
 61043 ;;		wreg, status,2
 61044 ;; Tracked objects:
 61045 ;;		On entry : 0/0
 61046 ;;		On exit  : 0/0
 61047 ;;		Unchanged: 0/0
 61048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 61049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61053 ;;Total ram usage:        0 bytes
 61054 ;; Hardware stack levels used:    1
 61055 ;; This function calls:
 61056 ;;		Nothing
 61057 ;; This function is called by:
 61058 ;;		_USBMSDInit
 61059 ;; This function uses a non-reentrant model
 61060 ;;
 61061                           
 61062                           	psect	text294
 61063  0174CC                     __ptext294:
 61064                           	opt stack 0
 61065  0174CC                     i2_ResetSenseData:
 61066                           	opt stack 12
 61067                           
 61068                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 61069                           
 61070                           ; BSR set to: 2
 61071                           ;incstack = 0
 61072  0174CC  0102               	movlb	2	; () banked
 61073  0174CE  9167               	bcf	_gblSenseData& (0+255),0,b
 61074  0174D0  9367               	bcf	_gblSenseData& (0+255),1,b
 61075  0174D2  9567               	bcf	_gblSenseData& (0+255),2,b
 61076  0174D4  9767               	bcf	_gblSenseData& (0+255),3,b
 61077  0174D6  8967               	bsf	_gblSenseData& (0+255),4,b
 61078  0174D8  8B67               	bsf	_gblSenseData& (0+255),5,b
 61079  0174DA  8D67               	bsf	_gblSenseData& (0+255),6,b
 61080                           
 61081                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 61082  0174DC  9F67               	bcf	_gblSenseData& (0+255),7,b
 61083                           
 61084                           ; BSR set to: 2
 61085                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 61086  0174DE  0E00               	movlw	0
 61087  0174E0  6F68               	movwf	(_gblSenseData+1)& (0+255),b
 61088                           
 61089                           ; BSR set to: 2
 61090                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 61091  0174E2  9169               	bcf	(_gblSenseData+2)& (0+255),0,b
 61092  0174E4  9369               	bcf	(_gblSenseData+2)& (0+255),1,b
 61093  0174E6  9569               	bcf	(_gblSenseData+2)& (0+255),2,b
 61094  0174E8  9769               	bcf	(_gblSenseData+2)& (0+255),3,b
 61095                           
 61096                           ; BSR set to: 2
 61097                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 61098  0174EA  9B69               	bcf	(_gblSenseData+2)& (0+255),5,b
 61099                           
 61100                           ; BSR set to: 2
 61101                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 61102  0174EC  9D69               	bcf	(_gblSenseData+2)& (0+255),6,b
 61103                           
 61104                           ; BSR set to: 2
 61105                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 61106  0174EE  9F69               	bcf	(_gblSenseData+2)& (0+255),7,b
 61107                           
 61108                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 61109  0174F0  0E00               	movlw	0
 61110  0174F2  6F6A               	movwf	(_gblSenseData+3)& (0+255),b
 61111                           
 61112                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 61113  0174F4  0E00               	movlw	0
 61114  0174F6  6F6B               	movwf	(_gblSenseData+4)& (0+255),b
 61115                           
 61116                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 61117  0174F8  0E00               	movlw	0
 61118  0174FA  6F6C               	movwf	(_gblSenseData+5)& (0+255),b
 61119                           
 61120                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 61121  0174FC  0E00               	movlw	0
 61122  0174FE  6F6D               	movwf	(_gblSenseData+6)& (0+255),b
 61123                           
 61124                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 61125  017500  0E0A               	movlw	10
 61126  017502  6F6E               	movwf	(_gblSenseData+7)& (0+255),b
 61127                           
 61128                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 61129  017504  0E00               	movlw	0
 61130  017506  6F6F               	movwf	(_gblSenseData+8)& (0+255),b
 61131  017508  0E00               	movlw	0
 61132  01750A  6F70               	movwf	(_gblSenseData+9)& (0+255),b
 61133  01750C  0E00               	movlw	0
 61134  01750E  6F71               	movwf	(_gblSenseData+10)& (0+255),b
 61135  017510  0E00               	movlw	0
 61136  017512  6F72               	movwf	(_gblSenseData+11)& (0+255),b
 61137                           
 61138                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 61139  017514  0E00               	movlw	0
 61140  017516  6F73               	movwf	(_gblSenseData+12)& (0+255),b
 61141                           
 61142                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 61143  017518  0E00               	movlw	0
 61144  01751A  6F74               	movwf	(_gblSenseData+13)& (0+255),b
 61145                           
 61146                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 61147  01751C  0E00               	movlw	0
 61148  01751E  6F75               	movwf	(_gblSenseData+14)& (0+255),b
 61149                           
 61150                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 61151  017520  0E00               	movlw	0
 61152  017522  6F76               	movwf	(_gblSenseData+15)& (0+255),b
 61153                           
 61154                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 61155  017524  0E00               	movlw	0
 61156  017526  6F77               	movwf	(_gblSenseData+16)& (0+255),b
 61157                           
 61158                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 61159  017528  0E00               	movlw	0
 61160  01752A  6F78               	movwf	(_gblSenseData+17)& (0+255),b
 61161                           
 61162                           ; BSR set to: 2
 61163  01752C  0012               	return		;funcret
 61164  01752E                     __end_ofi2_ResetSenseData:
 61165                           	opt stack 0
 61166                           tosu	equ	0xFFF
 61167                           tosh	equ	0xFFE
 61168                           tosl	equ	0xFFD
 61169                           pclatu	equ	0xFFB
 61170                           pclath	equ	0xFFA
 61171                           tblptru	equ	0xFF8
 61172                           tblptrh	equ	0xFF7
 61173                           tblptrl	equ	0xFF6
 61174                           tablat	equ	0xFF5
 61175                           prodh	equ	0xFF4
 61176                           prodl	equ	0xFF3
 61177                           intcon	equ	0xFF2
 61178                           intcon2	equ	0xFF1
 61179                           intcon3	equ	0xFF0
 61180                           indf0	equ	0xFEF
 61181                           postinc0	equ	0xFEE
 61182                           fsr0h	equ	0xFEA
 61183                           fsr0l	equ	0xFE9
 61184                           wreg	equ	0xFE8
 61185                           indf1	equ	0xFE7
 61186                           postinc1	equ	0xFE6
 61187                           postdec1	equ	0xFE5
 61188                           plusw1	equ	0xFE3
 61189                           fsr1h	equ	0xFE2
 61190                           fsr1l	equ	0xFE1
 61191                           indf2	equ	0xFDF
 61192                           postinc2	equ	0xFDE
 61193                           postdec2	equ	0xFDD
 61194                           plusw2	equ	0xFDB
 61195                           fsr2h	equ	0xFDA
 61196                           fsr2l	equ	0xFD9
 61197                           status	equ	0xFD8
 61198                           
 61199 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 61200 ;; Defined at:
 61201 ;;		line 10 in file "external_flash.c"
 61202 ;; Parameters:    Size  Location     Type
 61203 ;;  config          2    0[COMRAM] PTR void 
 61204 ;;		 -> NULL(0), 
 61205 ;; Auto vars:     Size  Location     Type
 61206 ;;		None
 61207 ;; Return value:  Size  Location     Type
 61208 ;;                  2    0[COMRAM] PTR struct .
 61209 ;; Registers used:
 61210 ;;		wreg, status,2, status,0
 61211 ;; Tracked objects:
 61212 ;;		On entry : 0/0
 61213 ;;		On exit  : 0/0
 61214 ;;		Unchanged: 0/0
 61215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 61216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61219 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61220 ;;Total ram usage:        2 bytes
 61221 ;; Hardware stack levels used:    1
 61222 ;; This function calls:
 61223 ;;		Nothing
 61224 ;; This function is called by:
 61225 ;;		_USBMSDInit
 61226 ;;		_MSDProcessCommand
 61227 ;; This function uses a non-reentrant model
 61228 ;;
 61229                           
 61230                           	psect	text295
 61231  018E36                     __ptext295:
 61232                           	opt stack 0
 61233  018E36                     i2_ExternalFlash_MediaInitialize:
 61234                           	opt stack 12
 61235                           
 61236                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 61237                           
 61238                           ; BSR set to: 2
 61239                           ;incstack = 0
 61240  018E36  0102               	movlb	2	; () banked
 61241  018E38  81CE               	bsf	(_mediaInformation+1)& (0+255),0,b
 61242                           
 61243                           ; BSR set to: 2
 61244                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 61245  018E3A  0E02               	movlw	2
 61246  018E3C  6FD0               	movwf	(_mediaInformation+3)& (0+255),b
 61247  018E3E  0E00               	movlw	0
 61248  018E40  6FCF               	movwf	(_mediaInformation+2)& (0+255),b
 61249                           
 61250                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 61251  018E42  0E00               	movlw	0
 61252  018E44  6FCD               	movwf	_mediaInformation& (0+255),b
 61253                           
 61254                           ; BSR set to: 2
 61255                           ;external_flash.c: 15: return &mediaInformation;
 61256  018E46  0ECD               	movlw	low _mediaInformation
 61257  018E48  6E2E               	movwf	?i2_ExternalFlash_MediaInitialize,c
 61258  018E4A  0E02               	movlw	high _mediaInformation
 61259  018E4C  6E2F               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 61260  018E4E  0012               	return	
 61261  018E50                     __end_ofi2_ExternalFlash_MediaInitialize:
 61262                           	opt stack 0
 61263                           tosu	equ	0xFFF
 61264                           tosh	equ	0xFFE
 61265                           tosl	equ	0xFFD
 61266                           pclatu	equ	0xFFB
 61267                           pclath	equ	0xFFA
 61268                           tblptru	equ	0xFF8
 61269                           tblptrh	equ	0xFF7
 61270                           tblptrl	equ	0xFF6
 61271                           tablat	equ	0xFF5
 61272                           prodh	equ	0xFF4
 61273                           prodl	equ	0xFF3
 61274                           intcon	equ	0xFF2
 61275                           intcon2	equ	0xFF1
 61276                           intcon3	equ	0xFF0
 61277                           indf0	equ	0xFEF
 61278                           postinc0	equ	0xFEE
 61279                           fsr0h	equ	0xFEA
 61280                           fsr0l	equ	0xFE9
 61281                           wreg	equ	0xFE8
 61282                           indf1	equ	0xFE7
 61283                           postinc1	equ	0xFE6
 61284                           postdec1	equ	0xFE5
 61285                           plusw1	equ	0xFE3
 61286                           fsr1h	equ	0xFE2
 61287                           fsr1l	equ	0xFE1
 61288                           indf2	equ	0xFDF
 61289                           postinc2	equ	0xFDE
 61290                           postdec2	equ	0xFDD
 61291                           plusw2	equ	0xFDB
 61292                           fsr2h	equ	0xFDA
 61293                           fsr2l	equ	0xFD9
 61294                           status	equ	0xFD8
 61295                           
 61296 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 61297 ;; Defined at:
 61298 ;;		line 29 in file "external_flash.c"
 61299 ;; Parameters:    Size  Location     Type
 61300 ;;  config          2    0[COMRAM] PTR void 
 61301 ;;		 -> NULL(0), 
 61302 ;; Auto vars:     Size  Location     Type
 61303 ;;		None
 61304 ;; Return value:  Size  Location     Type
 61305 ;;                  1    wreg      unsigned char 
 61306 ;; Registers used:
 61307 ;;		wreg
 61308 ;; Tracked objects:
 61309 ;;		On entry : 0/0
 61310 ;;		On exit  : 0/0
 61311 ;;		Unchanged: 0/0
 61312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 61313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61316 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61317 ;;Total ram usage:        2 bytes
 61318 ;; Hardware stack levels used:    1
 61319 ;; This function calls:
 61320 ;;		Nothing
 61321 ;; This function is called by:
 61322 ;;		_USBMSDInit
 61323 ;;		_MSDProcessCommand
 61324 ;; This function uses a non-reentrant model
 61325 ;;
 61326                           
 61327                           	psect	text296
 61328  01911C                     __ptext296:
 61329                           	opt stack 0
 61330  01911C                     i2_ExternalFlash_MediaDetect:
 61331                           	opt stack 12
 61332                           
 61333                           ;external_flash.c: 31: return 1;
 61334                           
 61335                           ; BSR set to: 2
 61336                           ;incstack = 0
 61337  01911C  0E01               	movlw	1
 61338  01911E  0012               	return	
 61339  019120                     __end_ofi2_ExternalFlash_MediaDetect:
 61340                           	opt stack 0
 61341                           tosu	equ	0xFFF
 61342                           tosh	equ	0xFFE
 61343                           tosl	equ	0xFFD
 61344                           pclatu	equ	0xFFB
 61345                           pclath	equ	0xFFA
 61346                           tblptru	equ	0xFF8
 61347                           tblptrh	equ	0xFF7
 61348                           tblptrl	equ	0xFF6
 61349                           tablat	equ	0xFF5
 61350                           prodh	equ	0xFF4
 61351                           prodl	equ	0xFF3
 61352                           intcon	equ	0xFF2
 61353                           intcon2	equ	0xFF1
 61354                           intcon3	equ	0xFF0
 61355                           indf0	equ	0xFEF
 61356                           postinc0	equ	0xFEE
 61357                           fsr0h	equ	0xFEA
 61358                           fsr0l	equ	0xFE9
 61359                           wreg	equ	0xFE8
 61360                           indf1	equ	0xFE7
 61361                           postinc1	equ	0xFE6
 61362                           postdec1	equ	0xFE5
 61363                           plusw1	equ	0xFE3
 61364                           fsr1h	equ	0xFE2
 61365                           fsr1l	equ	0xFE1
 61366                           indf2	equ	0xFDF
 61367                           postinc2	equ	0xFDE
 61368                           postdec2	equ	0xFDD
 61369                           plusw2	equ	0xFDB
 61370                           fsr2h	equ	0xFDA
 61371                           fsr2l	equ	0xFD9
 61372                           status	equ	0xFD8
 61373                           
 61374 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 61375 ;; Defined at:
 61376 ;;		line 46 in file "app_device_custom_hid.c"
 61377 ;; Parameters:    Size  Location     Type
 61378 ;;		None
 61379 ;; Auto vars:     Size  Location     Type
 61380 ;;		None
 61381 ;; Return value:  Size  Location     Type
 61382 ;;                  1    wreg      void 
 61383 ;; Registers used:
 61384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 61385 ;; Tracked objects:
 61386 ;;		On entry : 0/0
 61387 ;;		On exit  : 0/0
 61388 ;;		Unchanged: 0/0
 61389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 61390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61394 ;;Total ram usage:        0 bytes
 61395 ;; Hardware stack levels used:    1
 61396 ;; Hardware stack levels required when called:    2
 61397 ;; This function calls:
 61398 ;;		_USBEnableEndpoint
 61399 ;;		i2_USBTransferOnePacket
 61400 ;; This function is called by:
 61401 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 61402 ;; This function uses a non-reentrant model
 61403 ;;
 61404                           
 61405                           	psect	text297
 61406  018574                     __ptext297:
 61407                           	opt stack 0
 61408  018574                     _APP_DeviceCustomHIDInitialize:
 61409                           	opt stack 12
 61410                           
 61411                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 61412                           
 61413                           ;incstack = 0
 61414  018574  0E00               	movlw	0
 61415  018576  0102               	movlb	2	; () banked
 61416  018578  6FBD               	movwf	_USBInHandle& (0+255),b
 61417  01857A  0E00               	movlw	0
 61418  01857C  6FBE               	movwf	(_USBInHandle+1)& (0+255),b
 61419                           
 61420                           ; BSR set to: 2
 61421                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 61422  01857E  0E1E               	movlw	30
 61423  018580  6E36               	movwf	USBEnableEndpoint@options,c
 61424  018582  0E01               	movlw	1
 61425  018584  ECC4  F0C1         	call	_USBEnableEndpoint
 61426                           
 61427                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 61428  018588  0E00               	movlw	0
 61429  01858A  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 61430  01858C  0EC0               	movlw	low _ReceivedDataBuffer
 61431  01858E  6E2F               	movwf	i2USBTransferOnePacket@data,c
 61432  018590  0E04               	movlw	high _ReceivedDataBuffer
 61433  018592  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 61434  018594  0E40               	movlw	64
 61435  018596  6E31               	movwf	i2USBTransferOnePacket@len,c
 61436  018598  0E01               	movlw	1
 61437  01859A  EC5F  F09C         	call	i2_USBTransferOnePacket
 61438  01859E  C02E  F2BF         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 61439  0185A2  C02F  F2C0         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 61440  0185A6  0012               	return		;funcret
 61441  0185A8                     __end_of_APP_DeviceCustomHIDInitialize:
 61442                           	opt stack 0
 61443                           tosu	equ	0xFFF
 61444                           tosh	equ	0xFFE
 61445                           tosl	equ	0xFFD
 61446                           pclatu	equ	0xFFB
 61447                           pclath	equ	0xFFA
 61448                           tblptru	equ	0xFF8
 61449                           tblptrh	equ	0xFF7
 61450                           tblptrl	equ	0xFF6
 61451                           tablat	equ	0xFF5
 61452                           prodh	equ	0xFF4
 61453                           prodl	equ	0xFF3
 61454                           intcon	equ	0xFF2
 61455                           intcon2	equ	0xFF1
 61456                           intcon3	equ	0xFF0
 61457                           indf0	equ	0xFEF
 61458                           postinc0	equ	0xFEE
 61459                           fsr0h	equ	0xFEA
 61460                           fsr0l	equ	0xFE9
 61461                           wreg	equ	0xFE8
 61462                           indf1	equ	0xFE7
 61463                           postinc1	equ	0xFE6
 61464                           postdec1	equ	0xFE5
 61465                           plusw1	equ	0xFE3
 61466                           fsr1h	equ	0xFE2
 61467                           fsr1l	equ	0xFE1
 61468                           indf2	equ	0xFDF
 61469                           postinc2	equ	0xFDE
 61470                           postdec2	equ	0xFDD
 61471                           plusw2	equ	0xFDB
 61472                           fsr2h	equ	0xFDA
 61473                           fsr2l	equ	0xFD9
 61474                           status	equ	0xFD8
 61475                           
 61476 ;; *************** function i2_USBTransferOnePacket *****************
 61477 ;; Defined at:
 61478 ;;		line 995 in file "usb_device.c"
 61479 ;; Parameters:    Size  Location     Type
 61480 ;;  ep              1    wreg     unsigned char 
 61481 ;;  dir             1    0[COMRAM] unsigned char 
 61482 ;;  data            2    1[COMRAM] PTR unsigned char 
 61483 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 61484 ;;		 -> msd_cbw(31), NULL(0), 
 61485 ;;  len             1    3[COMRAM] unsigned char 
 61486 ;; Auto vars:     Size  Location     Type
 61487 ;;  ep              1    8[COMRAM] unsigned char 
 61488 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 61489 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 61490 ;; Return value:  Size  Location     Type
 61491 ;;                  2    0[COMRAM] PTR void 
 61492 ;; Registers used:
 61493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 61494 ;; Tracked objects:
 61495 ;;		On entry : 0/0
 61496 ;;		On exit  : 0/0
 61497 ;;		Unchanged: 0/0
 61498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 61499 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61500 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61501 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61502 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61503 ;;Total ram usage:       11 bytes
 61504 ;; Hardware stack levels used:    1
 61505 ;; This function calls:
 61506 ;;		Nothing
 61507 ;; This function is called by:
 61508 ;;		_USBMSDInit
 61509 ;;		_USBCheckMSDRequest
 61510 ;;		_MSDTransferTerminated
 61511 ;;		_APP_DeviceCustomHIDInitialize
 61512 ;; This function uses a non-reentrant model
 61513 ;;
 61514                           
 61515                           	psect	text298
 61516  0138BE                     __ptext298:
 61517                           	opt stack 0
 61518  0138BE                     i2_USBTransferOnePacket:
 61519                           	opt stack 13
 61520                           
 61521                           ;incstack = 0
 61522                           ;i2USBTransferOnePacket@ep stored from wreg
 61523  0138BE  6E36               	movwf	i2USBTransferOnePacket@ep,c
 61524                           
 61525                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 61526  0138C0  502E               	movf	i2USBTransferOnePacket@dir,w,c
 61527  0138C2  B4D8               	btfsc	status,2,c
 61528  0138C4  D007               	goto	i2l186
 61529                           
 61530                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 61531  0138C6  5036               	movf	i2USBTransferOnePacket@ep,w,c
 61532  0138C8  0D02               	mullw	2
 61533  0138CA  0E07               	movlw	low _pBDTEntryIn
 61534  0138CC  24F3               	addwf	prodl,w,c
 61535  0138CE  6ED9               	movwf	fsr2l,c
 61536  0138D0  0E00               	movlw	high _pBDTEntryIn
 61537  0138D2  D006               	goto	L78
 61538  0138D4                     i2l186:
 61539                           
 61540                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 61541  0138D4  5036               	movf	i2USBTransferOnePacket@ep,w,c
 61542  0138D6  0D02               	mullw	2
 61543  0138D8  0EDE               	movlw	low _pBDTEntryOut
 61544  0138DA  24F3               	addwf	prodl,w,c
 61545  0138DC  6ED9               	movwf	fsr2l,c
 61546  0138DE  0E01               	movlw	high _pBDTEntryOut
 61547  0138E0                     L78:
 61548  0138E0  20F4               	addwfc	prodh,w,c
 61549  0138E2  6EDA               	movwf	fsr2h,c
 61550  0138E4  CFDE F037          	movff	postinc2,i2USBTransferOnePacket@handle
 61551  0138E8  CFDD F038          	movff	postdec2,i2USBTransferOnePacket@handle+1
 61552                           
 61553                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 61554  0138EC  5037               	movf	i2USBTransferOnePacket@handle,w,c
 61555  0138EE  1038               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 61556  0138F0  A4D8               	btfss	status,2,c
 61557  0138F2  D005               	goto	i2l188
 61558                           
 61559                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 61560  0138F4  0E00               	movlw	0
 61561  0138F6  6E2E               	movwf	?i2_USBTransferOnePacket,c
 61562  0138F8  0E00               	movlw	0
 61563  0138FA  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 61564  0138FC  0012               	return	
 61565  0138FE                     i2l188:
 61566                           
 61567                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 61568  0138FE  EE20 F002          	lfsr	2,2
 61569  013902  5037               	movf	i2USBTransferOnePacket@handle,w,c
 61570  013904  26D9               	addwf	fsr2l,f,c
 61571  013906  5038               	movf	i2USBTransferOnePacket@handle+1,w,c
 61572  013908  22DA               	addwfc	fsr2h,f,c
 61573  01390A  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 61574  01390E  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 61575                           
 61576                           ;usb_device.c: 1030: handle->CNT = len;
 61577  013912  EE20 F001          	lfsr	2,1
 61578  013916  5037               	movf	i2USBTransferOnePacket@handle,w,c
 61579  013918  26D9               	addwf	fsr2l,f,c
 61580  01391A  5038               	movf	i2USBTransferOnePacket@handle+1,w,c
 61581  01391C  22DA               	addwfc	fsr2h,f,c
 61582  01391E  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 61583                           
 61584                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 61585  013922  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 61586  013926  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 61587  01392A  0E40               	movlw	64
 61588  01392C  16DF               	andwf	indf2,f,c
 61589                           
 61590                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 61591  01392E  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 61592  013932  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 61593  013936  0E00               	movlw	0
 61594  013938  86DB               	bsf	plusw2,3,c
 61595                           
 61596                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 61597  01393A  C037  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 61598  01393E  C038  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 61599  013942  0E00               	movlw	0
 61600  013944  8EDB               	bsf	plusw2,7,c
 61601                           
 61602                           ;usb_device.c: 1036: if(dir != 0)
 61603  013946  502E               	movf	i2USBTransferOnePacket@dir,w,c
 61604  013948  B4D8               	btfsc	status,2,c
 61605  01394A  D018               	goto	i2l190
 61606                           
 61607                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 61608  01394C  5036               	movf	i2USBTransferOnePacket@ep,w,c
 61609  01394E  0D02               	mullw	2
 61610  013950  0E07               	movlw	low _pBDTEntryIn
 61611  013952  24F3               	addwf	prodl,w,c
 61612  013954  6ED9               	movwf	fsr2l,c
 61613  013956  0E00               	movlw	high _pBDTEntryIn
 61614  013958  20F4               	addwfc	prodh,w,c
 61615  01395A  6EDA               	movwf	fsr2h,c
 61616  01395C  CFDE F032          	movff	postinc2,??i2_USBTransferOnePacket
 61617  013960  CFDD F033          	movff	postdec2,??i2_USBTransferOnePacket+1
 61618  013964  0E04               	movlw	4
 61619  013966  1832               	xorwf	??i2_USBTransferOnePacket,w,c
 61620  013968  6E34               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 61621  01396A  5033               	movf	??i2_USBTransferOnePacket+1,w,c
 61622  01396C  6E35               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 61623  01396E  5036               	movf	i2USBTransferOnePacket@ep,w,c
 61624  013970  0D02               	mullw	2
 61625  013972  0E07               	movlw	low _pBDTEntryIn
 61626  013974  24F3               	addwf	prodl,w,c
 61627  013976  6ED9               	movwf	fsr2l,c
 61628  013978  0E00               	movlw	high _pBDTEntryIn
 61629  01397A  D017               	goto	L79
 61630  01397C                     i2l190:
 61631                           
 61632                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 61633  01397C  5036               	movf	i2USBTransferOnePacket@ep,w,c
 61634  01397E  0D02               	mullw	2
 61635  013980  0EDE               	movlw	low _pBDTEntryOut
 61636  013982  24F3               	addwf	prodl,w,c
 61637  013984  6ED9               	movwf	fsr2l,c
 61638  013986  0E01               	movlw	high _pBDTEntryOut
 61639  013988  20F4               	addwfc	prodh,w,c
 61640  01398A  6EDA               	movwf	fsr2h,c
 61641  01398C  CFDE F032          	movff	postinc2,??i2_USBTransferOnePacket
 61642  013990  CFDD F033          	movff	postdec2,??i2_USBTransferOnePacket+1
 61643  013994  0E04               	movlw	4
 61644  013996  1832               	xorwf	??i2_USBTransferOnePacket,w,c
 61645  013998  6E34               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 61646  01399A  5033               	movf	??i2_USBTransferOnePacket+1,w,c
 61647  01399C  6E35               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 61648  01399E  5036               	movf	i2USBTransferOnePacket@ep,w,c
 61649  0139A0  0D02               	mullw	2
 61650  0139A2  0EDE               	movlw	low _pBDTEntryOut
 61651  0139A4  24F3               	addwf	prodl,w,c
 61652  0139A6  6ED9               	movwf	fsr2l,c
 61653  0139A8  0E01               	movlw	high _pBDTEntryOut
 61654  0139AA                     L79:
 61655  0139AA  20F4               	addwfc	prodh,w,c
 61656  0139AC  6EDA               	movwf	fsr2h,c
 61657  0139AE  C034  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 61658  0139B2  C035  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 61659                           
 61660                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 61661  0139B6  C037  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 61662  0139BA  C038  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 61663  0139BE  0012               	return	
 61664  0139C0                     __end_ofi2_USBTransferOnePacket:
 61665                           	opt stack 0
 61666                           tosu	equ	0xFFF
 61667                           tosh	equ	0xFFE
 61668                           tosl	equ	0xFFD
 61669                           pclatu	equ	0xFFB
 61670                           pclath	equ	0xFFA
 61671                           tblptru	equ	0xFF8
 61672                           tblptrh	equ	0xFF7
 61673                           tblptrl	equ	0xFF6
 61674                           tablat	equ	0xFF5
 61675                           prodh	equ	0xFF4
 61676                           prodl	equ	0xFF3
 61677                           intcon	equ	0xFF2
 61678                           intcon2	equ	0xFF1
 61679                           intcon3	equ	0xFF0
 61680                           indf0	equ	0xFEF
 61681                           postinc0	equ	0xFEE
 61682                           fsr0h	equ	0xFEA
 61683                           fsr0l	equ	0xFE9
 61684                           wreg	equ	0xFE8
 61685                           indf1	equ	0xFE7
 61686                           postinc1	equ	0xFE6
 61687                           postdec1	equ	0xFE5
 61688                           plusw1	equ	0xFE3
 61689                           fsr1h	equ	0xFE2
 61690                           fsr1l	equ	0xFE1
 61691                           indf2	equ	0xFDF
 61692                           postinc2	equ	0xFDE
 61693                           postdec2	equ	0xFDD
 61694                           plusw2	equ	0xFDB
 61695                           fsr2h	equ	0xFDA
 61696                           fsr2l	equ	0xFD9
 61697                           status	equ	0xFD8
 61698                           
 61699 ;; *************** function _USBEnableEndpoint *****************
 61700 ;; Defined at:
 61701 ;;		line 878 in file "usb_device.c"
 61702 ;; Parameters:    Size  Location     Type
 61703 ;;  ep              1    wreg     unsigned char 
 61704 ;;  options         1    8[COMRAM] unsigned char 
 61705 ;; Auto vars:     Size  Location     Type
 61706 ;;  ep              1   11[COMRAM] unsigned char 
 61707 ;;  p               2    9[COMRAM] PTR unsigned char 
 61708 ;;		 -> UEP0(1), 
 61709 ;; Return value:  Size  Location     Type
 61710 ;;                  1    wreg      void 
 61711 ;; Registers used:
 61712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 61713 ;; Tracked objects:
 61714 ;;		On entry : 0/0
 61715 ;;		On exit  : 0/0
 61716 ;;		Unchanged: 0/0
 61717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 61718 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61719 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61721 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61722 ;;Total ram usage:        4 bytes
 61723 ;; Hardware stack levels used:    1
 61724 ;; Hardware stack levels required when called:    1
 61725 ;; This function calls:
 61726 ;;		_USBConfigureEndpoint
 61727 ;; This function is called by:
 61728 ;;		_APP_DeviceCustomHIDInitialize
 61729 ;;		_APP_DeviceMSDInitialize
 61730 ;; This function uses a non-reentrant model
 61731 ;;
 61732                           
 61733                           	psect	text299
 61734  018388                     __ptext299:
 61735                           	opt stack 0
 61736  018388                     _USBEnableEndpoint:
 61737                           	opt stack 12
 61738                           
 61739                           ;incstack = 0
 61740                           ;USBEnableEndpoint@ep stored from wreg
 61741  018388  6E39               	movwf	USBEnableEndpoint@ep,c
 61742                           
 61743                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 61744  01838A  A436               	btfss	USBEnableEndpoint@options,2,c
 61745  01838C  D005               	goto	i2l181
 61746                           
 61747                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 61748  01838E  0E00               	movlw	0
 61749  018390  6E2E               	movwf	USBConfigureEndpoint@direction,c
 61750  018392  5039               	movf	USBEnableEndpoint@ep,w,c
 61751  018394  EC1A  F0B3         	call	_USBConfigureEndpoint
 61752  018398                     i2l181:
 61753                           
 61754                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 61755  018398  A236               	btfss	USBEnableEndpoint@options,1,c
 61756  01839A  D005               	goto	i2l182
 61757                           
 61758                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 61759  01839C  0E01               	movlw	1
 61760  01839E  6E2E               	movwf	USBConfigureEndpoint@direction,c
 61761  0183A0  5039               	movf	USBEnableEndpoint@ep,w,c
 61762  0183A2  EC1A  F0B3         	call	_USBConfigureEndpoint
 61763  0183A6                     i2l182:
 61764                           
 61765                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 61766  0183A6  5039               	movf	USBEnableEndpoint@ep,w,c
 61767  0183A8  0D01               	mullw	1
 61768  0183AA  0E26               	movlw	38
 61769  0183AC  24F3               	addwf	prodl,w,c
 61770  0183AE  6E37               	movwf	USBEnableEndpoint@p,c
 61771  0183B0  0E0F               	movlw	15
 61772  0183B2  20F4               	addwfc	prodh,w,c
 61773  0183B4  6E38               	movwf	USBEnableEndpoint@p+1,c
 61774                           
 61775                           ;usb_device.c: 901: *p = options;
 61776  0183B6  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 61777  0183BA  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 61778  0183BE  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 61779  0183C2  0012               	return		;funcret
 61780  0183C4                     __end_of_USBEnableEndpoint:
 61781                           	opt stack 0
 61782                           tosu	equ	0xFFF
 61783                           tosh	equ	0xFFE
 61784                           tosl	equ	0xFFD
 61785                           pclatu	equ	0xFFB
 61786                           pclath	equ	0xFFA
 61787                           tblptru	equ	0xFF8
 61788                           tblptrh	equ	0xFF7
 61789                           tblptrl	equ	0xFF6
 61790                           tablat	equ	0xFF5
 61791                           prodh	equ	0xFF4
 61792                           prodl	equ	0xFF3
 61793                           intcon	equ	0xFF2
 61794                           intcon2	equ	0xFF1
 61795                           intcon3	equ	0xFF0
 61796                           indf0	equ	0xFEF
 61797                           postinc0	equ	0xFEE
 61798                           fsr0h	equ	0xFEA
 61799                           fsr0l	equ	0xFE9
 61800                           wreg	equ	0xFE8
 61801                           indf1	equ	0xFE7
 61802                           postinc1	equ	0xFE6
 61803                           postdec1	equ	0xFE5
 61804                           plusw1	equ	0xFE3
 61805                           fsr1h	equ	0xFE2
 61806                           fsr1l	equ	0xFE1
 61807                           indf2	equ	0xFDF
 61808                           postinc2	equ	0xFDE
 61809                           postdec2	equ	0xFDD
 61810                           plusw2	equ	0xFDB
 61811                           fsr2h	equ	0xFDA
 61812                           fsr2l	equ	0xFD9
 61813                           status	equ	0xFD8
 61814                           
 61815 ;; *************** function _USBConfigureEndpoint *****************
 61816 ;; Defined at:
 61817 ;;		line 1545 in file "usb_device.c"
 61818 ;; Parameters:    Size  Location     Type
 61819 ;;  EPNum           1    wreg     unsigned char 
 61820 ;;  direction       1    0[COMRAM] unsigned char 
 61821 ;; Auto vars:     Size  Location     Type
 61822 ;;  EPNum           1    5[COMRAM] unsigned char 
 61823 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 61824 ;;		 -> BDT(48), 
 61825 ;; Return value:  Size  Location     Type
 61826 ;;                  1    wreg      void 
 61827 ;; Registers used:
 61828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 61829 ;; Tracked objects:
 61830 ;;		On entry : 0/0
 61831 ;;		On exit  : 0/0
 61832 ;;		Unchanged: 0/0
 61833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 61834 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61835 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61836 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61837 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61838 ;;Total ram usage:        8 bytes
 61839 ;; Hardware stack levels used:    1
 61840 ;; This function calls:
 61841 ;;		Nothing
 61842 ;; This function is called by:
 61843 ;;		_USBEnableEndpoint
 61844 ;; This function uses a non-reentrant model
 61845 ;;
 61846                           
 61847                           	psect	text300
 61848  016634                     __ptext300:
 61849                           	opt stack 0
 61850  016634                     _USBConfigureEndpoint:
 61851                           	opt stack 12
 61852                           
 61853                           ;incstack = 0
 61854                           ;USBConfigureEndpoint@EPNum stored from wreg
 61855  016634  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 61856                           
 61857                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 61858  016636  0E00               	movlw	0
 61859  016638  6E34               	movwf	USBConfigureEndpoint@handle,c
 61860  01663A  0E0D               	movlw	13
 61861  01663C  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 61862                           
 61863                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 61864  01663E  502E               	movf	USBConfigureEndpoint@direction,w,c
 61865  016640  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 61866  016642  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 61867  016644  90D8               	bcf	status,0,c
 61868  016646  362F               	rlcf	??_USBConfigureEndpoint,f,c
 61869  016648  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 61870  01664A  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 61871  01664C  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 61872  01664E  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 61873  016650  90D8               	bcf	status,0,c
 61874  016652  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 61875  016654  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 61876  016656  90D8               	bcf	status,0,c
 61877  016658  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 61878  01665A  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 61879  01665C  502F               	movf	??_USBConfigureEndpoint,w,c
 61880  01665E  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 61881  016660  5030               	movf	??_USBConfigureEndpoint+1,w,c
 61882  016662  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 61883  016664  90D8               	bcf	status,0,c
 61884  016666  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 61885  016668  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 61886  01666A  90D8               	bcf	status,0,c
 61887  01666C  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 61888  01666E  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 61889  016670  5031               	movf	??_USBConfigureEndpoint+2,w,c
 61890  016672  2634               	addwf	USBConfigureEndpoint@handle,f,c
 61891  016674  5032               	movf	??_USBConfigureEndpoint+3,w,c
 61892  016676  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 61893                           
 61894                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 61895  016678  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 61896  01667C  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 61897  016680  9EDF               	bcf	indf2,7,c
 61898                           
 61899                           ;usb_device.c: 1559: if(direction == 0)
 61900  016682  502E               	movf	USBConfigureEndpoint@direction,w,c
 61901  016684  A4D8               	btfss	status,2,c
 61902  016686  D007               	goto	i2l228
 61903                           
 61904                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 61905  016688  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 61906  01668A  0D02               	mullw	2
 61907  01668C  0EDE               	movlw	low _pBDTEntryOut
 61908  01668E  24F3               	addwf	prodl,w,c
 61909  016690  6ED9               	movwf	fsr2l,c
 61910  016692  0E01               	movlw	high _pBDTEntryOut
 61911  016694  D006               	goto	L80
 61912  016696                     i2l228:
 61913                           
 61914                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 61915  016696  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 61916  016698  0D02               	mullw	2
 61917  01669A  0E07               	movlw	low _pBDTEntryIn
 61918  01669C  24F3               	addwf	prodl,w,c
 61919  01669E  6ED9               	movwf	fsr2l,c
 61920  0166A0  0E00               	movlw	high _pBDTEntryIn
 61921  0166A2                     L80:
 61922  0166A2  20F4               	addwfc	prodh,w,c
 61923  0166A4  6EDA               	movwf	fsr2h,c
 61924  0166A6  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 61925  0166AA  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 61926                           
 61927                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 61928  0166AE  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 61929  0166B2  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 61930  0166B6  9CDF               	bcf	indf2,6,c
 61931                           
 61932                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 61933  0166B8  EE20 F004          	lfsr	2,4
 61934  0166BC  5034               	movf	USBConfigureEndpoint@handle,w,c
 61935  0166BE  26D9               	addwf	fsr2l,f,c
 61936  0166C0  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 61937  0166C2  22DA               	addwfc	fsr2h,f,c
 61938  0166C4  8CDF               	bsf	indf2,6,c
 61939  0166C6  0012               	return		;funcret
 61940  0166C8                     __end_of_USBConfigureEndpoint:
 61941                           	opt stack 0
 61942                           tosu	equ	0xFFF
 61943                           tosh	equ	0xFFE
 61944                           tosl	equ	0xFFD
 61945                           pclatu	equ	0xFFB
 61946                           pclath	equ	0xFFA
 61947                           tblptru	equ	0xFF8
 61948                           tblptrh	equ	0xFF7
 61949                           tblptrl	equ	0xFF6
 61950                           tablat	equ	0xFF5
 61951                           prodh	equ	0xFF4
 61952                           prodl	equ	0xFF3
 61953                           intcon	equ	0xFF2
 61954                           intcon2	equ	0xFF1
 61955                           intcon3	equ	0xFF0
 61956                           indf0	equ	0xFEF
 61957                           postinc0	equ	0xFEE
 61958                           fsr0h	equ	0xFEA
 61959                           fsr0l	equ	0xFE9
 61960                           wreg	equ	0xFE8
 61961                           indf1	equ	0xFE7
 61962                           postinc1	equ	0xFE6
 61963                           postdec1	equ	0xFE5
 61964                           plusw1	equ	0xFE3
 61965                           fsr1h	equ	0xFE2
 61966                           fsr1l	equ	0xFE1
 61967                           indf2	equ	0xFDF
 61968                           postinc2	equ	0xFDE
 61969                           postdec2	equ	0xFDD
 61970                           plusw2	equ	0xFDB
 61971                           fsr2h	equ	0xFDA
 61972                           fsr2l	equ	0xFD9
 61973                           status	equ	0xFD8
 61974                           
 61975 ;; *************** function _USBCtrlTrfOutHandler *****************
 61976 ;; Defined at:
 61977 ;;		line 2540 in file "usb_device.c"
 61978 ;; Parameters:    Size  Location     Type
 61979 ;;		None
 61980 ;; Auto vars:     Size  Location     Type
 61981 ;;		None
 61982 ;; Return value:  Size  Location     Type
 61983 ;;                  1    wreg      void 
 61984 ;; Registers used:
 61985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 61986 ;; Tracked objects:
 61987 ;;		On entry : 0/0
 61988 ;;		On exit  : 0/0
 61989 ;;		Unchanged: 0/0
 61990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 61991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 61995 ;;Total ram usage:        0 bytes
 61996 ;; Hardware stack levels used:    1
 61997 ;; Hardware stack levels required when called:    2
 61998 ;; This function calls:
 61999 ;;		_USBCtrlTrfRxService
 62000 ;; This function is called by:
 62001 ;;		_USBCtrlEPService
 62002 ;; This function uses a non-reentrant model
 62003 ;;
 62004                           
 62005                           	psect	text301
 62006  01764A                     __ptext301:
 62007                           	opt stack 0
 62008  01764A                     _USBCtrlTrfOutHandler:
 62009                           	opt stack 12
 62010                           
 62011                           ;usb_device.c: 2542: if(controlTransferState == 2)
 62012                           
 62013                           ;incstack = 0
 62014  01764A  0E02               	movlw	2
 62015  01764C  1829               	xorwf	_controlTransferState,w,c	;volatile
 62016  01764E  A4D8               	btfss	status,2,c
 62017  017650  D003               	goto	i2l334
 62018                           
 62019                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 62020  017652  ECCB  F099         	call	_USBCtrlTrfRxService	;wreg free
 62021                           
 62022                           ;usb_device.c: 2545: }
 62023  017656  0012               	return	
 62024  017658                     i2l334:
 62025                           
 62026                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 62027  017658  0E00               	movlw	0
 62028  01765A  6E29               	movwf	_controlTransferState,c	;volatile
 62029                           
 62030                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 62031  01765C  0101               	movlb	1	; () banked
 62032  01765E  51FC               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 62033  017660  A4D8               	btfss	status,2,c
 62034  017662  D01F               	goto	i2l336
 62035                           
 62036                           ; BSR set to: 1
 62037                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 62038  017664  EE20 F001          	lfsr	2,1
 62039  017668  5015               	movf	_pBDTEntryEP0OutNext,w,c
 62040  01766A  26D9               	addwf	fsr2l,f,c
 62041  01766C  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 62042  01766E  22DA               	addwfc	fsr2h,f,c
 62043  017670  0E08               	movlw	8
 62044  017672  6EDF               	movwf	indf2,c
 62045                           
 62046                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 62047  017674  EE20 F002          	lfsr	2,2
 62048  017678  5015               	movf	_pBDTEntryEP0OutNext,w,c
 62049  01767A  26D9               	addwf	fsr2l,f,c
 62050  01767C  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 62051  01767E  22DA               	addwfc	fsr2h,f,c
 62052  017680  0E30               	movlw	48
 62053  017682  6EDE               	movwf	postinc2,c
 62054  017684  0E0D               	movlw	13
 62055  017686  6EDD               	movwf	postdec2,c
 62056                           
 62057                           ; BSR set to: 1
 62058                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 62059  017688  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 62060  01768C  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 62061  017690  0E0C               	movlw	12
 62062  017692  6EDF               	movwf	indf2,c
 62063                           
 62064                           ; BSR set to: 1
 62065                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 62066  017694  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 62067  017698  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 62068  01769C  0E00               	movlw	0
 62069  01769E  8EDB               	bsf	plusw2,7,c
 62070                           
 62071                           ;usb_device.c: 2563: }
 62072  0176A0  0012               	return	
 62073  0176A2                     i2l336:
 62074                           
 62075                           ; BSR set to: 1
 62076                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 62077                           
 62078                           ; BSR set to: 1
 62079  0176A2  0E00               	movlw	0
 62080  0176A4  6FFC               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 62081                           
 62082                           ; BSR set to: 1
 62083  0176A6  0012               	return	
 62084  0176A8                     __end_of_USBCtrlTrfOutHandler:
 62085                           	opt stack 0
 62086                           tosu	equ	0xFFF
 62087                           tosh	equ	0xFFE
 62088                           tosl	equ	0xFFD
 62089                           pclatu	equ	0xFFB
 62090                           pclath	equ	0xFFA
 62091                           tblptru	equ	0xFF8
 62092                           tblptrh	equ	0xFF7
 62093                           tblptrl	equ	0xFF6
 62094                           tablat	equ	0xFF5
 62095                           prodh	equ	0xFF4
 62096                           prodl	equ	0xFF3
 62097                           intcon	equ	0xFF2
 62098                           intcon2	equ	0xFF1
 62099                           intcon3	equ	0xFF0
 62100                           indf0	equ	0xFEF
 62101                           postinc0	equ	0xFEE
 62102                           fsr0h	equ	0xFEA
 62103                           fsr0l	equ	0xFE9
 62104                           wreg	equ	0xFE8
 62105                           indf1	equ	0xFE7
 62106                           postinc1	equ	0xFE6
 62107                           postdec1	equ	0xFE5
 62108                           plusw1	equ	0xFE3
 62109                           fsr1h	equ	0xFE2
 62110                           fsr1l	equ	0xFE1
 62111                           indf2	equ	0xFDF
 62112                           postinc2	equ	0xFDE
 62113                           postdec2	equ	0xFDD
 62114                           plusw2	equ	0xFDB
 62115                           fsr2h	equ	0xFDA
 62116                           fsr2l	equ	0xFD9
 62117                           status	equ	0xFD8
 62118                           
 62119 ;; *************** function _USBCtrlTrfRxService *****************
 62120 ;; Defined at:
 62121 ;;		line 1854 in file "usb_device.c"
 62122 ;; Parameters:    Size  Location     Type
 62123 ;;		None
 62124 ;; Auto vars:     Size  Location     Type
 62125 ;;  byteToRead      1    1[COMRAM] unsigned char 
 62126 ;;  i               1    0[COMRAM] unsigned char 
 62127 ;; Return value:  Size  Location     Type
 62128 ;;                  1    wreg      void 
 62129 ;; Registers used:
 62130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 62131 ;; Tracked objects:
 62132 ;;		On entry : 0/0
 62133 ;;		On exit  : 0/0
 62134 ;;		Unchanged: 0/0
 62135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 62136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 62137 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 62138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 62139 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 62140 ;;Total ram usage:        2 bytes
 62141 ;; Hardware stack levels used:    1
 62142 ;; Hardware stack levels required when called:    1
 62143 ;; This function calls:
 62144 ;;		_USBCtrlEPAllowStatusStage
 62145 ;; This function is called by:
 62146 ;;		_USBCtrlTrfOutHandler
 62147 ;; This function uses a non-reentrant model
 62148 ;;
 62149                           
 62150                           	psect	text302
 62151  013396                     __ptext302:
 62152                           	opt stack 0
 62153  013396                     _USBCtrlTrfRxService:
 62154                           	opt stack 12
 62155                           
 62156                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 62157                           
 62158                           ;incstack = 0
 62159  013396  EE20 F001          	lfsr	2,1
 62160  01339A  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
 62161  01339C  26D9               	addwf	fsr2l,f,c
 62162  01339E  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 62163  0133A0  22DA               	addwfc	fsr2h,f,c
 62164  0133A2  50DF               	movf	indf2,w,c
 62165  0133A4  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 62166                           
 62167                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 62168  0133A6  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 62169  0133A8  0101               	movlb	1	; () banked
 62170  0133AA  5DD9               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 62171  0133AC  0E00               	movlw	0
 62172  0133AE  59DA               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 62173  0133B0  A0D8               	btfss	status,0,c
 62174                           
 62175                           ; BSR set to: 1
 62176                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 62177  0133B2  C1D9  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 62178                           
 62179                           ; BSR set to: 1
 62180                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 62181                           
 62182                           ; BSR set to: 1
 62183  0133B6  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 62184  0133B8  5FD9               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 62185  0133BA  0E00               	movlw	0
 62186  0133BC  5BDA               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 62187                           
 62188                           ; BSR set to: 1
 62189                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 62190  0133BE  0E00               	movlw	0
 62191  0133C0  6E2E               	movwf	USBCtrlTrfRxService@i,c
 62192  0133C2  D011               	goto	i2l262
 62193  0133C4                     
 62194                           ; BSR set to: 1
 62195                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 62196                           
 62197                           ; BSR set to: 1
 62198  0133C4  502E               	movf	USBCtrlTrfRxService@i,w,c
 62199  0133C6  0D01               	mullw	1
 62200  0133C8  0E38               	movlw	56
 62201  0133CA  24F3               	addwf	prodl,w,c
 62202  0133CC  6ED9               	movwf	fsr2l,c
 62203  0133CE  0E0D               	movlw	13
 62204  0133D0  20F4               	addwfc	prodh,w,c
 62205  0133D2  6EDA               	movwf	fsr2h,c
 62206  0133D4  C1D5  FFE1         	movff	_outPipes,fsr1l	;volatile
 62207  0133D8  C1D6  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 62208  0133DC  CFDF FFE7          	movff	indf2,indf1
 62209                           
 62210                           ; BSR set to: 1
 62211  0133E0  4BD5               	infsnz	_outPipes& (0+255),f,b	;volatile
 62212  0133E2  2BD6               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 62213                           
 62214                           ; BSR set to: 1
 62215  0133E4  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 62216  0133E6                     i2l262:
 62217                           
 62218                           ; BSR set to: 1
 62219                           
 62220                           ; BSR set to: 1
 62221  0133E6  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 62222  0133E8  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 62223  0133EA  A0D8               	btfss	status,0,c
 62224  0133EC  D7EB               	goto	i2l263
 62225                           
 62226                           ; BSR set to: 1
 62227                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 62228                           
 62229                           ; BSR set to: 1
 62230  0133EE  51D9               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 62231  0133F0  11DA               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 62232  0133F2  B4D8               	btfsc	status,2,c
 62233  0133F4  D032               	goto	i2l265
 62234                           
 62235                           ; BSR set to: 1
 62236                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 62237  0133F6  EE20 F001          	lfsr	2,1
 62238  0133FA  5015               	movf	_pBDTEntryEP0OutNext,w,c
 62239  0133FC  26D9               	addwf	fsr2l,f,c
 62240  0133FE  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 62241  013400  22DA               	addwfc	fsr2h,f,c
 62242  013402  0E08               	movlw	8
 62243  013404  6EDF               	movwf	indf2,c
 62244                           
 62245                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 62246  013406  EE20 F002          	lfsr	2,2
 62247  01340A  5015               	movf	_pBDTEntryEP0OutNext,w,c
 62248  01340C  26D9               	addwf	fsr2l,f,c
 62249  01340E  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 62250  013410  22DA               	addwfc	fsr2h,f,c
 62251  013412  0E38               	movlw	56
 62252  013414  6EDE               	movwf	postinc2,c
 62253  013416  0E0D               	movlw	13
 62254  013418  6EDD               	movwf	postdec2,c
 62255                           
 62256                           ; BSR set to: 1
 62257                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 62258  01341A  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 62259  01341E  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 62260  013422  BCDF               	btfsc	indf2,6,c
 62261  013424  D00D               	goto	i2l266
 62262                           
 62263                           ; BSR set to: 1
 62264                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 62265  013426  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 62266  01342A  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 62267  01342E  0E48               	movlw	72
 62268  013430  6EDF               	movwf	indf2,c
 62269                           
 62270                           ; BSR set to: 1
 62271                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 62272  013432  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 62273  013436  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 62274  01343A  0E00               	movlw	0
 62275  01343C  8EDB               	bsf	plusw2,7,c
 62276                           
 62277                           ;usb_device.c: 1891: }
 62278  01343E  0012               	return	
 62279  013440                     i2l266:
 62280                           
 62281                           ; BSR set to: 1
 62282                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 62283                           
 62284                           ; BSR set to: 1
 62285  013440  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 62286  013444  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 62287  013448  0E08               	movlw	8
 62288  01344A  6EDF               	movwf	indf2,c
 62289                           
 62290                           ; BSR set to: 1
 62291                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 62292  01344C  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 62293  013450  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 62294  013454  0E00               	movlw	0
 62295  013456  8EDB               	bsf	plusw2,7,c
 62296                           
 62297                           ; BSR set to: 1
 62298                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 62299  013458  0012               	return	
 62300  01345A                     i2l265:
 62301                           
 62302                           ; BSR set to: 1
 62303                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 62304                           
 62305                           ; BSR set to: 1
 62306  01345A  EE20 F001          	lfsr	2,1
 62307  01345E  5015               	movf	_pBDTEntryEP0OutNext,w,c
 62308  013460  26D9               	addwf	fsr2l,f,c
 62309  013462  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 62310  013464  22DA               	addwfc	fsr2h,f,c
 62311  013466  0E08               	movlw	8
 62312  013468  6EDF               	movwf	indf2,c
 62313                           
 62314                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 62315  01346A  EE20 F002          	lfsr	2,2
 62316  01346E  5015               	movf	_pBDTEntryEP0OutNext,w,c
 62317  013470  26D9               	addwf	fsr2l,f,c
 62318  013472  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 62319  013474  22DA               	addwfc	fsr2h,f,c
 62320  013476  0E30               	movlw	48
 62321  013478  6EDE               	movwf	postinc2,c
 62322  01347A  0E0D               	movlw	13
 62323  01347C  6EDD               	movwf	postdec2,c
 62324                           
 62325                           ; BSR set to: 1
 62326                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 62327  01347E  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 62328  013482  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 62329  013486  0E04               	movlw	4
 62330  013488  6EDF               	movwf	indf2,c
 62331                           
 62332                           ; BSR set to: 1
 62333                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 62334  01348A  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 62335  01348E  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 62336  013492  0E00               	movlw	0
 62337  013494  8EDB               	bsf	plusw2,7,c
 62338                           
 62339                           ; BSR set to: 1
 62340                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 62341                           
 62342                           ; BSR set to: 1
 62343                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 62344  013496  9FD8               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 62345                           
 62346                           ; BSR set to: 1
 62347                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 62348  013498  5025               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 62349  01349A  A4D8               	btfss	status,2,c
 62350  01349C  0012               	return	
 62351                           
 62352                           ; BSR set to: 1
 62353                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 62354  01349E  EC9E  F0AB         	call	_USBCtrlEPAllowStatusStage	;wreg free
 62355  0134A2  0012               	return	
 62356  0134A4                     __end_of_USBCtrlTrfRxService:
 62357                           	opt stack 0
 62358                           tosu	equ	0xFFF
 62359                           tosh	equ	0xFFE
 62360                           tosl	equ	0xFFD
 62361                           pclatu	equ	0xFFB
 62362                           pclath	equ	0xFFA
 62363                           tblptru	equ	0xFF8
 62364                           tblptrh	equ	0xFF7
 62365                           tblptrl	equ	0xFF6
 62366                           tablat	equ	0xFF5
 62367                           prodh	equ	0xFF4
 62368                           prodl	equ	0xFF3
 62369                           intcon	equ	0xFF2
 62370                           intcon2	equ	0xFF1
 62371                           intcon3	equ	0xFF0
 62372                           indf0	equ	0xFEF
 62373                           postinc0	equ	0xFEE
 62374                           fsr0h	equ	0xFEA
 62375                           fsr0l	equ	0xFE9
 62376                           wreg	equ	0xFE8
 62377                           indf1	equ	0xFE7
 62378                           postinc1	equ	0xFE6
 62379                           postdec1	equ	0xFE5
 62380                           plusw1	equ	0xFE3
 62381                           fsr1h	equ	0xFE2
 62382                           fsr1l	equ	0xFE1
 62383                           indf2	equ	0xFDF
 62384                           postinc2	equ	0xFDE
 62385                           postdec2	equ	0xFDD
 62386                           plusw2	equ	0xFDB
 62387                           fsr2h	equ	0xFDA
 62388                           fsr2l	equ	0xFD9
 62389                           status	equ	0xFD8
 62390                           
 62391 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 62392 ;; Defined at:
 62393 ;;		line 1418 in file "usb_device.c"
 62394 ;; Parameters:    Size  Location     Type
 62395 ;;		None
 62396 ;; Auto vars:     Size  Location     Type
 62397 ;;		None
 62398 ;; Return value:  Size  Location     Type
 62399 ;;                  1    wreg      void 
 62400 ;; Registers used:
 62401 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 62402 ;; Tracked objects:
 62403 ;;		On entry : 0/0
 62404 ;;		On exit  : 0/0
 62405 ;;		Unchanged: 0/0
 62406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 62407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 62408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 62409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 62410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 62411 ;;Total ram usage:        0 bytes
 62412 ;; Hardware stack levels used:    1
 62413 ;; This function calls:
 62414 ;;		Nothing
 62415 ;; This function is called by:
 62416 ;;		_USBDeviceTasks
 62417 ;;		_USBCtrlEPServiceComplete
 62418 ;;		_USBCtrlTrfRxService
 62419 ;; This function uses a non-reentrant model
 62420 ;;
 62421                           
 62422                           	psect	text303
 62423  01573C                     __ptext303:
 62424                           	opt stack 0
 62425  01573C                     _USBCtrlEPAllowStatusStage:
 62426                           	opt stack 12
 62427                           
 62428                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 62429                           
 62430                           ;incstack = 0
 62431  01573C  0101               	movlb	1	; () banked
 62432  01573E  51FB               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 62433  015740  A4D8               	btfss	status,2,c
 62434  015742  0012               	return	
 62435                           
 62436                           ; BSR set to: 1
 62437                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 62438  015744  0E01               	movlw	1
 62439  015746  6FFB               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 62440                           
 62441                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 62442  015748  51FA               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 62443  01574A  A4D8               	btfss	status,2,c
 62444  01574C  0012               	return	
 62445                           
 62446                           ; BSR set to: 1
 62447                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 62448  01574E  0E01               	movlw	1
 62449  015750  6FFA               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 62450                           
 62451                           ; BSR set to: 1
 62452                           ;usb_device.c: 1434: if(controlTransferState == 2)
 62453  015752  0E02               	movlw	2
 62454  015754  1829               	xorwf	_controlTransferState,w,c	;volatile
 62455  015756  A4D8               	btfss	status,2,c
 62456  015758  D015               	goto	i2l216
 62457                           
 62458                           ; BSR set to: 1
 62459                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 62460  01575A  EE20 F001          	lfsr	2,1
 62461  01575E  5007               	movf	_pBDTEntryIn,w,c
 62462  015760  26D9               	addwf	fsr2l,f,c
 62463  015762  5008               	movf	_pBDTEntryIn+1,w,c
 62464  015764  22DA               	addwfc	fsr2h,f,c
 62465  015766  0E00               	movlw	0
 62466  015768  6EDF               	movwf	indf2,c
 62467                           
 62468                           ; BSR set to: 1
 62469                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 62470  01576A  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 62471  01576E  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 62472  015772  0E48               	movlw	72
 62473  015774  6EDF               	movwf	indf2,c
 62474                           
 62475                           ; BSR set to: 1
 62476                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 62477  015776  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 62478  01577A  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 62479  01577E  0E00               	movlw	0
 62480  015780  8EDB               	bsf	plusw2,7,c
 62481                           
 62482                           ;usb_device.c: 1439: }
 62483  015782  0012               	return	
 62484  015784                     i2l216:
 62485                           
 62486                           ; BSR set to: 1
 62487                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 62488                           
 62489                           ; BSR set to: 1
 62490  015784  0429               	decf	_controlTransferState,w,c	;volatile
 62491  015786  A4D8               	btfss	status,2,c
 62492  015788  0012               	return	
 62493                           
 62494                           ; BSR set to: 1
 62495                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 62496  01578A  0E00               	movlw	0
 62497  01578C  6FFC               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 62498                           
 62499                           ; BSR set to: 1
 62500                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 62501  01578E  EE20 F001          	lfsr	2,1
 62502  015792  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
 62503  015794  26D9               	addwf	fsr2l,f,c
 62504  015796  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 62505  015798  22DA               	addwfc	fsr2h,f,c
 62506  01579A  0E08               	movlw	8
 62507  01579C  6EDF               	movwf	indf2,c
 62508                           
 62509                           ; BSR set to: 1
 62510                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 62511  01579E  EE20 F002          	lfsr	2,2
 62512  0157A2  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
 62513  0157A4  26D9               	addwf	fsr2l,f,c
 62514  0157A6  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 62515  0157A8  22DA               	addwfc	fsr2h,f,c
 62516  0157AA  0E30               	movlw	48
 62517  0157AC  6EDE               	movwf	postinc2,c
 62518  0157AE  0E0D               	movlw	13
 62519  0157B0  6EDD               	movwf	postdec2,c
 62520                           
 62521                           ; BSR set to: 1
 62522                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 62523  0157B2  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 62524  0157B6  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 62525  0157BA  0E04               	movlw	4
 62526  0157BC  6EDF               	movwf	indf2,c
 62527                           
 62528                           ; BSR set to: 1
 62529                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 62530  0157BE  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 62531  0157C2  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 62532  0157C6  0E00               	movlw	0
 62533  0157C8  8EDB               	bsf	plusw2,7,c
 62534                           
 62535                           ; BSR set to: 1
 62536                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 62537  0157CA  0E01               	movlw	1
 62538  0157CC  6FFC               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 62539                           
 62540                           ; BSR set to: 1
 62541                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 62542  0157CE  EE20 F001          	lfsr	2,1
 62543  0157D2  5015               	movf	_pBDTEntryEP0OutNext,w,c
 62544  0157D4  26D9               	addwf	fsr2l,f,c
 62545  0157D6  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 62546  0157D8  22DA               	addwfc	fsr2h,f,c
 62547  0157DA  0E08               	movlw	8
 62548  0157DC  6EDF               	movwf	indf2,c
 62549                           
 62550                           ; BSR set to: 1
 62551                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 62552  0157DE  EE20 F002          	lfsr	2,2
 62553  0157E2  5015               	movf	_pBDTEntryEP0OutNext,w,c
 62554  0157E4  26D9               	addwf	fsr2l,f,c
 62555  0157E6  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 62556  0157E8  22DA               	addwfc	fsr2h,f,c
 62557  0157EA  0E30               	movlw	48
 62558  0157EC  6EDE               	movwf	postinc2,c
 62559  0157EE  0E0D               	movlw	13
 62560  0157F0  6EDD               	movwf	postdec2,c
 62561                           
 62562                           ; BSR set to: 1
 62563                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 62564  0157F2  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 62565  0157F6  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 62566  0157FA  0E80               	movlw	128
 62567  0157FC  6EDF               	movwf	indf2,c
 62568                           
 62569                           ; BSR set to: 1
 62570                           
 62571                           ; BSR set to: 1
 62572                           
 62573                           ; BSR set to: 1
 62574  0157FE  0012               	return	
 62575  015800                     __end_of_USBCtrlEPAllowStatusStage:
 62576                           	opt stack 0
 62577                           tosu	equ	0xFFF
 62578                           tosh	equ	0xFFE
 62579                           tosl	equ	0xFFD
 62580                           pclatu	equ	0xFFB
 62581                           pclath	equ	0xFFA
 62582                           tblptru	equ	0xFF8
 62583                           tblptrh	equ	0xFF7
 62584                           tblptrl	equ	0xFF6
 62585                           tablat	equ	0xFF5
 62586                           prodh	equ	0xFF4
 62587                           prodl	equ	0xFF3
 62588                           intcon	equ	0xFF2
 62589                           intcon2	equ	0xFF1
 62590                           intcon3	equ	0xFF0
 62591                           indf0	equ	0xFEF
 62592                           postinc0	equ	0xFEE
 62593                           fsr0h	equ	0xFEA
 62594                           fsr0l	equ	0xFE9
 62595                           wreg	equ	0xFE8
 62596                           indf1	equ	0xFE7
 62597                           postinc1	equ	0xFE6
 62598                           postdec1	equ	0xFE5
 62599                           plusw1	equ	0xFE3
 62600                           fsr1h	equ	0xFE2
 62601                           fsr1l	equ	0xFE1
 62602                           indf2	equ	0xFDF
 62603                           postinc2	equ	0xFDE
 62604                           postdec2	equ	0xFDD
 62605                           plusw2	equ	0xFDB
 62606                           fsr2h	equ	0xFDA
 62607                           fsr2l	equ	0xFD9
 62608                           status	equ	0xFD8
 62609                           
 62610 ;; *************** function _USBCtrlTrfInHandler *****************
 62611 ;; Defined at:
 62612 ;;		line 2594 in file "usb_device.c"
 62613 ;; Parameters:    Size  Location     Type
 62614 ;;		None
 62615 ;; Auto vars:     Size  Location     Type
 62616 ;;  lastDTS         1    1[COMRAM] unsigned char 
 62617 ;; Return value:  Size  Location     Type
 62618 ;;                  1    wreg      void 
 62619 ;; Registers used:
 62620 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 62621 ;; Tracked objects:
 62622 ;;		On entry : 0/0
 62623 ;;		On exit  : 0/0
 62624 ;;		Unchanged: 0/0
 62625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 62626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 62627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 62628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 62629 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 62630 ;;Total ram usage:        1 bytes
 62631 ;; Hardware stack levels used:    1
 62632 ;; Hardware stack levels required when called:    1
 62633 ;; This function calls:
 62634 ;;		_USBCtrlTrfTxService
 62635 ;; This function is called by:
 62636 ;;		_USBCtrlEPService
 62637 ;; This function uses a non-reentrant model
 62638 ;;
 62639                           
 62640                           	psect	text304
 62641  0158C0                     __ptext304:
 62642                           	opt stack 0
 62643  0158C0                     _USBCtrlTrfInHandler:
 62644                           	opt stack 13
 62645                           
 62646                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 62647                           
 62648                           ; BSR set to: 1
 62649                           ;incstack = 0
 62650  0158C0  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 62651  0158C4  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 62652  0158C8  0E00               	movlw	0
 62653  0158CA  BCDF               	btfsc	indf2,6,c
 62654  0158CC  0E01               	movlw	1
 62655  0158CE  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 62656                           
 62657                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 62658  0158D0  0E04               	movlw	4
 62659  0158D2  1807               	xorwf	_pBDTEntryIn,w,c
 62660  0158D4  6E07               	movwf	_pBDTEntryIn,c
 62661  0158D6  5008               	movf	_pBDTEntryIn+1,w,c
 62662  0158D8  6E08               	movwf	_pBDTEntryIn+1,c
 62663                           
 62664                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 62665  0158DA  0E08               	movlw	8
 62666  0158DC  182B               	xorwf	_USBDeviceState,w,c	;volatile
 62667  0158DE  A4D8               	btfss	status,2,c
 62668  0158E0  D00C               	goto	i2l343
 62669                           
 62670                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 62671  0158E2  010D               	movlb	13	; () banked
 62672  0158E4  5132               	movf	50,w,b	;volatile
 62673  0158E6  0B7F               	andlw	127
 62674  0158E8  010F               	movlb	15	; () banked
 62675  0158EA  6F38               	movwf	56,b	;volatile
 62676                           
 62677                           ; BSR set to: 15
 62678                           ;usb_device.c: 2609: if(UADDR != 0u)
 62679  0158EC  5138               	movf	56,w,b	;volatile
 62680  0158EE  B4D8               	btfsc	status,2,c
 62681  0158F0  D002               	goto	i2l342
 62682                           
 62683                           ; BSR set to: 15
 62684                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 62685  0158F2  0E10               	movlw	16
 62686  0158F4  D001               	goto	L81
 62687  0158F6                     i2l342:
 62688                           
 62689                           ; BSR set to: 15
 62690                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 62691                           
 62692                           ; BSR set to: 15
 62693  0158F6  0E04               	movlw	4
 62694  0158F8                     L81:
 62695  0158F8  6E2B               	movwf	_USBDeviceState,c	;volatile
 62696  0158FA                     i2l343:
 62697                           
 62698                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 62699                           
 62700                           ; BSR set to: 15
 62701                           
 62702                           ; BSR set to: 15
 62703  0158FA  0429               	decf	_controlTransferState,w,c	;volatile
 62704  0158FC  A4D8               	btfss	status,2,c
 62705  0158FE  D03A               	goto	i2l344
 62706                           
 62707                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 62708  015900  EE20 F002          	lfsr	2,2
 62709  015904  5007               	movf	_pBDTEntryIn,w,c
 62710  015906  26D9               	addwf	fsr2l,f,c
 62711  015908  5008               	movf	_pBDTEntryIn+1,w,c
 62712  01590A  22DA               	addwfc	fsr2h,f,c
 62713  01590C  0E38               	movlw	56
 62714  01590E  6EDE               	movwf	postinc2,c
 62715  015910  0E0D               	movlw	13
 62716  015912  6EDD               	movwf	postdec2,c
 62717                           
 62718                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 62719  015914  ECE6  F0A6         	call	_USBCtrlTrfTxService	;wreg free
 62720                           
 62721                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 62722  015918  0E02               	movlw	2
 62723  01591A  182A               	xorwf	_shortPacketStatus,w,c	;volatile
 62724  01591C  A4D8               	btfss	status,2,c
 62725  01591E  D00D               	goto	i2l345
 62726                           
 62727                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 62728  015920  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 62729  015924  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 62730  015928  0E04               	movlw	4
 62731  01592A  6EDF               	movwf	indf2,c
 62732                           
 62733                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 62734  01592C  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 62735  015930  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 62736  015934  0E00               	movlw	0
 62737  015936  8EDB               	bsf	plusw2,7,c
 62738                           
 62739                           ;usb_device.c: 2635: }
 62740  015938  0012               	return	
 62741  01593A                     i2l345:
 62742                           
 62743                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 62744  01593A  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 62745  01593C  A4D8               	btfss	status,2,c
 62746  01593E  D00D               	goto	i2l347
 62747                           
 62748                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 62749  015940  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 62750  015944  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 62751  015948  0E48               	movlw	72
 62752  01594A  6EDF               	movwf	indf2,c
 62753                           
 62754                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 62755  01594C  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 62756  015950  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 62757  015954  0E00               	movlw	0
 62758  015956  8EDB               	bsf	plusw2,7,c
 62759                           
 62760                           ;usb_device.c: 2642: }
 62761  015958  0012               	return	
 62762  01595A                     i2l347:
 62763                           
 62764                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 62765  01595A  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 62766  01595E  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 62767  015962  0E08               	movlw	8
 62768  015964  6EDF               	movwf	indf2,c
 62769                           
 62770                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 62771  015966  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 62772  01596A  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 62773  01596E  0E00               	movlw	0
 62774  015970  8EDB               	bsf	plusw2,7,c
 62775                           
 62776                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 62777  015972  0012               	return	
 62778  015974                     i2l344:
 62779                           
 62780                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 62781  015974  0101               	movlb	1	; () banked
 62782  015976  BFD8               	btfsc	(_outPipes+3)& (0+255),7,b	;volatile
 62783                           
 62784                           ; BSR set to: 1
 62785                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 62786                           
 62787                           ; BSR set to: 1
 62788                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 62789  015978  9FD8               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 62790                           
 62791                           ; BSR set to: 1
 62792                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 62793                           
 62794                           ; BSR set to: 1
 62795  01597A  0E00               	movlw	0
 62796  01597C  6E29               	movwf	_controlTransferState,c	;volatile
 62797  01597E  0012               	return	
 62798  015980                     __end_of_USBCtrlTrfInHandler:
 62799                           	opt stack 0
 62800                           tosu	equ	0xFFF
 62801                           tosh	equ	0xFFE
 62802                           tosl	equ	0xFFD
 62803                           pclatu	equ	0xFFB
 62804                           pclath	equ	0xFFA
 62805                           tblptru	equ	0xFF8
 62806                           tblptrh	equ	0xFF7
 62807                           tblptrl	equ	0xFF6
 62808                           tablat	equ	0xFF5
 62809                           prodh	equ	0xFF4
 62810                           prodl	equ	0xFF3
 62811                           intcon	equ	0xFF2
 62812                           intcon2	equ	0xFF1
 62813                           intcon3	equ	0xFF0
 62814                           indf0	equ	0xFEF
 62815                           postinc0	equ	0xFEE
 62816                           fsr0h	equ	0xFEA
 62817                           fsr0l	equ	0xFE9
 62818                           wreg	equ	0xFE8
 62819                           indf1	equ	0xFE7
 62820                           postinc1	equ	0xFE6
 62821                           postdec1	equ	0xFE5
 62822                           plusw1	equ	0xFE3
 62823                           fsr1h	equ	0xFE2
 62824                           fsr1l	equ	0xFE1
 62825                           indf2	equ	0xFDF
 62826                           postinc2	equ	0xFDE
 62827                           postdec2	equ	0xFDD
 62828                           plusw2	equ	0xFDB
 62829                           fsr2h	equ	0xFDA
 62830                           fsr2l	equ	0xFD9
 62831                           status	equ	0xFD8
 62832                           
 62833 ;; *************** function _USBCtrlTrfTxService *****************
 62834 ;; Defined at:
 62835 ;;		line 1773 in file "usb_device.c"
 62836 ;; Parameters:    Size  Location     Type
 62837 ;;		None
 62838 ;; Auto vars:     Size  Location     Type
 62839 ;;  byteToSend      1    0[COMRAM] unsigned char 
 62840 ;; Return value:  Size  Location     Type
 62841 ;;                  1    wreg      void 
 62842 ;; Registers used:
 62843 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 62844 ;; Tracked objects:
 62845 ;;		On entry : 0/0
 62846 ;;		On exit  : 0/0
 62847 ;;		Unchanged: 0/0
 62848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 62849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 62850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 62851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 62852 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 62853 ;;Total ram usage:        1 bytes
 62854 ;; Hardware stack levels used:    1
 62855 ;; This function calls:
 62856 ;;		Nothing
 62857 ;; This function is called by:
 62858 ;;		_USBCtrlEPAllowDataStage
 62859 ;;		_USBCtrlTrfInHandler
 62860 ;; This function uses a non-reentrant model
 62861 ;;
 62862                           
 62863                           	psect	text305
 62864  014DCC                     __ptext305:
 62865                           	opt stack 0
 62866  014DCC                     _USBCtrlTrfTxService:
 62867                           	opt stack 11
 62868                           
 62869                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 62870                           
 62871                           ;incstack = 0
 62872  014DCC  0E08               	movlw	8
 62873  014DCE  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 62874                           
 62875                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 62876  014DD0  5006               	movf	_inPipes+5,w,c	;volatile
 62877  014DD2  E110               	bnz	i2l14345
 62878  014DD4  0E08               	movlw	8
 62879  014DD6  5C05               	subwf	_inPipes+4,w,c	;volatile
 62880  014DD8  B0D8               	btfsc	status,0,c
 62881  014DDA  D00C               	goto	i2l249
 62882                           
 62883                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 62884  014DDC  C005  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 62885                           
 62886                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 62887  014DE0  502A               	movf	_shortPacketStatus,w,c	;volatile
 62888  014DE2  A4D8               	btfss	status,2,c
 62889  014DE4  D002               	goto	i2l247
 62890                           
 62891                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 62892  014DE6  0E01               	movlw	1
 62893  014DE8  D004               	goto	L82
 62894  014DEA                     i2l247:
 62895                           
 62896                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 62897  014DEA  042A               	decf	_shortPacketStatus,w,c	;volatile
 62898  014DEC  A4D8               	btfss	status,2,c
 62899  014DEE  D002               	goto	i2l249
 62900                           
 62901                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 62902  014DF0  0E02               	movlw	2
 62903  014DF2                     L82:
 62904  014DF2  6E2A               	movwf	_shortPacketStatus,c	;volatile
 62905  014DF4                     i2l249:
 62906  014DF4                     i2l14345:
 62907                           
 62908                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 62909  014DF4  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 62910  014DF6  5E05               	subwf	_inPipes+4,f,c	;volatile
 62911  014DF8  0E00               	movlw	0
 62912  014DFA  5A06               	subwfb	_inPipes+5,f,c	;volatile
 62913                           
 62914                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 62915  014DFC  EE20 F001          	lfsr	2,1
 62916  014E00  5007               	movf	_pBDTEntryIn,w,c
 62917  014E02  26D9               	addwf	fsr2l,f,c
 62918  014E04  5008               	movf	_pBDTEntryIn+1,w,c
 62919  014E06  22DA               	addwfc	fsr2h,f,c
 62920  014E08  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 62921                           
 62922                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 62923  014E0C  0E38               	movlw	56
 62924  014E0E  0102               	movlb	2	; () banked
 62925  014E10  6FC7               	movwf	_pDst& (0+255),b
 62926  014E12  0E0D               	movlw	13
 62927  014E14  6FC8               	movwf	(_pDst+1)& (0+255),b
 62928                           
 62929                           ; BSR set to: 2
 62930                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 62931  014E16  A004               	btfss	_inPipes+3,0,c	;volatile
 62932  014E18  D01D               	goto	i2l251
 62933  014E1A  D03C               	goto	i2l255
 62934  014E1C                     
 62935                           ; BSR set to: 2
 62936                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 62937                           
 62938                           ; BSR set to: 2
 62939  014E1C  C001  FFF6         	movff	_inPipes,tblptrl	;volatile
 62940  014E20  C002  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 62941  014E24  0E00               	movlw	low (__mediumconst shr (0+16))
 62942  014E26  6EF8               	movwf	tblptru,c
 62943  014E28  C2C7  FFD9         	movff	_pDst,fsr2l
 62944  014E2C  C2C8  FFDA         	movff	_pDst+1,fsr2h
 62945  014E30  0E0E               	movlw	(high __ramtop+-1)
 62946  014E32  64F7               	cpfsgt	tblptrh,c
 62947  014E34  D003               	bra	i2u1132_47
 62948  014E36  0008               	tblrd		*
 62949  014E38  50F5               	movf	tablat,w,c
 62950  014E3A  D005               	bra	i2u1132_40
 62951  014E3C                     i2u1132_47:
 62952  014E3C  CFF6 FFE9          	movff	tblptrl,fsr0l
 62953  014E40  CFF7 FFEA          	movff	tblptrh,fsr0h
 62954  014E44  50EF               	movf	indf0,w,c
 62955  014E46                     i2u1132_40:
 62956  014E46  6EDF               	movwf	indf2,c
 62957  014E48  4A01               	infsnz	_inPipes,f,c	;volatile
 62958  014E4A  2A02               	incf	_inPipes+1,f,c	;volatile
 62959  014E4C  0102               	movlb	2	; () banked
 62960  014E4E  4BC7               	infsnz	_pDst& (0+255),f,b
 62961  014E50  2BC8               	incf	(_pDst+1)& (0+255),f,b
 62962                           
 62963                           ; BSR set to: 2
 62964                           ;usb_device.c: 1816: byteToSend--;
 62965  014E52  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 62966  014E54                     i2l251:
 62967                           
 62968                           ; BSR set to: 2
 62969                           
 62970                           ; BSR set to: 2
 62971  014E54  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 62972  014E56  B4D8               	btfsc	status,2,c
 62973  014E58  0012               	return	
 62974  014E5A  D7E0               	goto	i2l252
 62975  014E5C                     
 62976                           ; BSR set to: 2
 62977                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 62978                           
 62979                           ; BSR set to: 2
 62980  014E5C  C001  FFF6         	movff	_inPipes,tblptrl	;volatile
 62981  014E60  C002  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 62982  014E64  0E00               	movlw	low (__mediumconst shr (0+16))
 62983  014E66  6EF8               	movwf	tblptru,c
 62984  014E68  C2C7  FFD9         	movff	_pDst,fsr2l
 62985  014E6C  C2C8  FFDA         	movff	_pDst+1,fsr2h
 62986  014E70  0E0E               	movlw	(high __ramtop+-1)
 62987  014E72  64F7               	cpfsgt	tblptrh,c
 62988  014E74  D003               	bra	i2u1134_47
 62989  014E76  0008               	tblrd		*
 62990  014E78  50F5               	movf	tablat,w,c
 62991  014E7A  D005               	bra	i2u1134_40
 62992  014E7C                     i2u1134_47:
 62993  014E7C  CFF6 FFE9          	movff	tblptrl,fsr0l
 62994  014E80  CFF7 FFEA          	movff	tblptrh,fsr0h
 62995  014E84  50EF               	movf	indf0,w,c
 62996  014E86                     i2u1134_40:
 62997  014E86  6EDF               	movwf	indf2,c
 62998  014E88  4A01               	infsnz	_inPipes,f,c	;volatile
 62999  014E8A  2A02               	incf	_inPipes+1,f,c	;volatile
 63000  014E8C  0102               	movlb	2	; () banked
 63001  014E8E  4BC7               	infsnz	_pDst& (0+255),f,b
 63002  014E90  2BC8               	incf	(_pDst+1)& (0+255),f,b
 63003                           
 63004                           ; BSR set to: 2
 63005                           ;usb_device.c: 1824: byteToSend--;
 63006  014E92  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 63007  014E94                     i2l255:
 63008                           
 63009                           ; BSR set to: 2
 63010                           
 63011                           ; BSR set to: 2
 63012  014E94  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 63013  014E96  B4D8               	btfsc	status,2,c
 63014  014E98  0012               	return	
 63015  014E9A  D7E0               	goto	i2l256
 63016  014E9C                     __end_of_USBCtrlTrfTxService:
 63017                           	opt stack 0
 63018                           tosu	equ	0xFFF
 63019                           tosh	equ	0xFFE
 63020                           tosl	equ	0xFFD
 63021                           pclatu	equ	0xFFB
 63022                           pclath	equ	0xFFA
 63023                           tblptru	equ	0xFF8
 63024                           tblptrh	equ	0xFF7
 63025                           tblptrl	equ	0xFF6
 63026                           tablat	equ	0xFF5
 63027                           prodh	equ	0xFF4
 63028                           prodl	equ	0xFF3
 63029                           intcon	equ	0xFF2
 63030                           intcon2	equ	0xFF1
 63031                           intcon3	equ	0xFF0
 63032                           indf0	equ	0xFEF
 63033                           postinc0	equ	0xFEE
 63034                           fsr0h	equ	0xFEA
 63035                           fsr0l	equ	0xFE9
 63036                           wreg	equ	0xFE8
 63037                           indf1	equ	0xFE7
 63038                           postinc1	equ	0xFE6
 63039                           postdec1	equ	0xFE5
 63040                           plusw1	equ	0xFE3
 63041                           fsr1h	equ	0xFE2
 63042                           fsr1l	equ	0xFE1
 63043                           indf2	equ	0xFDF
 63044                           postinc2	equ	0xFDE
 63045                           postdec2	equ	0xFDD
 63046                           plusw2	equ	0xFDB
 63047                           fsr2h	equ	0xFDA
 63048                           fsr2l	equ	0xFD9
 63049                           status	equ	0xFD8
 63050                           tosu	equ	0xFFF
 63051                           tosh	equ	0xFFE
 63052                           tosl	equ	0xFFD
 63053                           pclatu	equ	0xFFB
 63054                           pclath	equ	0xFFA
 63055                           tblptru	equ	0xFF8
 63056                           tblptrh	equ	0xFF7
 63057                           tblptrl	equ	0xFF6
 63058                           tablat	equ	0xFF5
 63059                           prodh	equ	0xFF4
 63060                           prodl	equ	0xFF3
 63061                           intcon	equ	0xFF2
 63062                           intcon2	equ	0xFF1
 63063                           intcon3	equ	0xFF0
 63064                           indf0	equ	0xFEF
 63065                           postinc0	equ	0xFEE
 63066                           fsr0h	equ	0xFEA
 63067                           fsr0l	equ	0xFE9
 63068                           wreg	equ	0xFE8
 63069                           indf1	equ	0xFE7
 63070                           postinc1	equ	0xFE6
 63071                           postdec1	equ	0xFE5
 63072                           plusw1	equ	0xFE3
 63073                           fsr1h	equ	0xFE2
 63074                           fsr1l	equ	0xFE1
 63075                           indf2	equ	0xFDF
 63076                           postinc2	equ	0xFDE
 63077                           postdec2	equ	0xFDD
 63078                           plusw2	equ	0xFDB
 63079                           fsr2h	equ	0xFDA
 63080                           fsr2l	equ	0xFD9
 63081                           status	equ	0xFD8
 63082                           
 63083                           	psect	text306
 63084  000000                     __ptext306:
 63085                           	opt stack 0
 63086                           tosu	equ	0xFFF
 63087                           tosh	equ	0xFFE
 63088                           tosl	equ	0xFFD
 63089                           pclatu	equ	0xFFB
 63090                           pclath	equ	0xFFA
 63091                           tblptru	equ	0xFF8
 63092                           tblptrh	equ	0xFF7
 63093                           tblptrl	equ	0xFF6
 63094                           tablat	equ	0xFF5
 63095                           prodh	equ	0xFF4
 63096                           prodl	equ	0xFF3
 63097                           intcon	equ	0xFF2
 63098                           intcon2	equ	0xFF1
 63099                           intcon3	equ	0xFF0
 63100                           indf0	equ	0xFEF
 63101                           postinc0	equ	0xFEE
 63102                           fsr0h	equ	0xFEA
 63103                           fsr0l	equ	0xFE9
 63104                           wreg	equ	0xFE8
 63105                           indf1	equ	0xFE7
 63106                           postinc1	equ	0xFE6
 63107                           postdec1	equ	0xFE5
 63108                           plusw1	equ	0xFE3
 63109                           fsr1h	equ	0xFE2
 63110                           fsr1l	equ	0xFE1
 63111                           indf2	equ	0xFDF
 63112                           postinc2	equ	0xFDE
 63113                           postdec2	equ	0xFDD
 63114                           plusw2	equ	0xFDB
 63115                           fsr2h	equ	0xFDA
 63116                           fsr2l	equ	0xFD9
 63117                           status	equ	0xFD8
 63118                           
 63119                           	psect	rparam
 63120  0000                     tosu	equ	0xFFF
 63121                           tosh	equ	0xFFE
 63122                           tosl	equ	0xFFD
 63123                           pclatu	equ	0xFFB
 63124                           pclath	equ	0xFFA
 63125                           tblptru	equ	0xFF8
 63126                           tblptrh	equ	0xFF7
 63127                           tblptrl	equ	0xFF6
 63128                           tablat	equ	0xFF5
 63129                           prodh	equ	0xFF4
 63130                           prodl	equ	0xFF3
 63131                           intcon	equ	0xFF2
 63132                           intcon2	equ	0xFF1
 63133                           intcon3	equ	0xFF0
 63134                           indf0	equ	0xFEF
 63135                           postinc0	equ	0xFEE
 63136                           fsr0h	equ	0xFEA
 63137                           fsr0l	equ	0xFE9
 63138                           wreg	equ	0xFE8
 63139                           indf1	equ	0xFE7
 63140                           postinc1	equ	0xFE6
 63141                           postdec1	equ	0xFE5
 63142                           plusw1	equ	0xFE3
 63143                           fsr1h	equ	0xFE2
 63144                           fsr1l	equ	0xFE1
 63145                           indf2	equ	0xFDF
 63146                           postinc2	equ	0xFDE
 63147                           postdec2	equ	0xFDD
 63148                           plusw2	equ	0xFDB
 63149                           fsr2h	equ	0xFDA
 63150                           fsr2l	equ	0xFD9
 63151                           status	equ	0xFD8
 63152                           
 63153                           	psect	temp
 63154  00005B                     btemp:
 63155                           	opt stack 0
 63156  00005B                     	ds	1
 63157  0000                     int$flags	set	btemp
 63158  0000                     wtemp8	set	btemp+1
 63159  0000                     ttemp5	set	btemp+1
 63160  0000                     ttemp6	set	btemp+4
 63161  0000                     ttemp7	set	btemp+8
 63162                           tosu	equ	0xFFF
 63163                           tosh	equ	0xFFE
 63164                           tosl	equ	0xFFD
 63165                           pclatu	equ	0xFFB
 63166                           pclath	equ	0xFFA
 63167                           tblptru	equ	0xFF8
 63168                           tblptrh	equ	0xFF7
 63169                           tblptrl	equ	0xFF6
 63170                           tablat	equ	0xFF5
 63171                           prodh	equ	0xFF4
 63172                           prodl	equ	0xFF3
 63173                           intcon	equ	0xFF2
 63174                           intcon2	equ	0xFF1
 63175                           intcon3	equ	0xFF0
 63176                           indf0	equ	0xFEF
 63177                           postinc0	equ	0xFEE
 63178                           fsr0h	equ	0xFEA
 63179                           fsr0l	equ	0xFE9
 63180                           wreg	equ	0xFE8
 63181                           indf1	equ	0xFE7
 63182                           postinc1	equ	0xFE6
 63183                           postdec1	equ	0xFE5
 63184                           plusw1	equ	0xFE3
 63185                           fsr1h	equ	0xFE2
 63186                           fsr1l	equ	0xFE1
 63187                           indf2	equ	0xFDF
 63188                           postinc2	equ	0xFDE
 63189                           postdec2	equ	0xFDD
 63190                           plusw2	equ	0xFDB
 63191                           fsr2h	equ	0xFDA
 63192                           fsr2l	equ	0xFD9
 63193                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    983
    Data        191
    BSS         1257
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160    159     160
    BANK1           256    213     256
    BANK2           256      0     255
    BANK3           256      0     232
    BANK4           256      0     256
    BANK5           256      0     104
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2325$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2325$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2325$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2325$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2325$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2325$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2325$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2325$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2325$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> extension(BANK2[4]), filename(BANK3[9]), ReceivedDataBuffer(BANK4[64]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK4[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK4[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> extension(BANK2[4]), filename(BANK3[9]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> calibrationParameters(BANK3[84]), ReceivedDataBuffer(BANK4[64]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> extension(BANK2[4]), filename(BANK3[9]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> calibrationParameters(BANK3[84]), ReceivedDataBuffer(BANK4[64]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), display_content(BANK3[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), display_content(BANK3[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), display_content(BANK3[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), display_content(BANK3[80]), 

    _parse_settings_i2c_masterModeSlaveAddress@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    _parse_settings_i2c_masterModeSlaveAddress@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _parse_settings_i2c_slaveModeSlaveAddress@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    _parse_settings_i2c_slaveModeSlaveAddress@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _parse_settings_i2c_frequency@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _parse_settings_i2c_frequency@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    _parse_settings_i2c_frequency@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _parse_settings_i2c_mode@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _parse_settings_i2c_mode@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    _parse_settings_i2c_mode@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _parse_settings_spi_polarity@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _parse_settings_spi_polarity@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    _parse_settings_spi_polarity@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _parse_settings_spi_frequency@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _parse_settings_spi_frequency@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    _parse_settings_spi_frequency@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _parse_settings_spi_mode@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _parse_settings_spi_mode@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    _parse_settings_spi_mode@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _parse_calibration@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _parse_calibration@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    _parse_calibration@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _parse_file_copy@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _parse_file_copy@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    _parse_file_copy@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _parse_write_buffer@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _parse_write_buffer@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    _parse_write_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _parse_buffer_to_sector@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _parse_buffer_to_sector@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    _parse_buffer_to_sector@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _parse_sector_to_buffer@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _parse_sector_to_buffer@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    _parse_sector_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _parse_format_drive@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _parse_format_drive@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    _parse_format_drive@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _parse_file_modify@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _parse_file_modify@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    _parse_file_modify@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _parse_file_append@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _parse_file_append@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    _parse_file_append@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _parse_file_rename@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _parse_file_rename@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    _parse_file_rename@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _parse_file_create@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _parse_file_create@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    _parse_file_create@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _parse_file_delete@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _parse_file_delete@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    _parse_file_delete@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _parse_file_resize@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _parse_file_resize@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    _parse_file_resize@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _fill_buffer_get_calibration2@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _fill_buffer_get_calibration1@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _fill_buffer_read_buffer@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _fill_buffer_read_buffer@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _fill_buffer_read_file@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _fill_buffer_read_file@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _fill_buffer_find_file@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _fill_buffer_find_file@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _fill_buffer_get_file_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _fill_buffer_get_file_details@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    _fill_buffer_get_display1@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK1[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), 
		 -> fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(BANK0[2]), _read_fat@value(BANK0[2]), _root_is_available@first_byte(BANK0[1]), 
		 -> buffer(BIGRAMll[512]), _flash_get_status@status(BANK0[2]), ToSendDataBuffer(BANK4[64]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(BANK0[4]), _flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> log_write_to_disk@log_entry(COMRAM[32]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(BANK0[1]), buffer(BIGRAMll[512]), ReceivedDataBuffer(BANK4[64]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    sp__spi_get_external_rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK4[64]), 

    sp__spi_get_external_tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK4[64]), 

    fat_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    fat_read_from_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 64
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), 
		 -> ToSendDataBuffer(BANK4[64]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> log_write_to_disk@log_entry(COMRAM[32]), ReceivedDataBuffer(BANK4[64]), 

    fat_copy_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    fat_copy_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    fat_rename_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    fat_rename_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> log_write_to_disk@log_entry(COMRAM[32]), ReceivedDataBuffer(BANK4[64]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> extension(BANK2[4]), ReceivedDataBuffer(BANK4[64]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> filename(BANK3[9]), ReceivedDataBuffer(BANK4[64]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> extension(BANK2[4]), ReceivedDataBuffer(BANK4[64]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> filename(BANK3[9]), ReceivedDataBuffer(BANK4[64]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK4[64]), 

    flash_read_from_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 64
		 -> log_write_to_disk@log_entry(COMRAM[32]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(BANK0[1]), ReceivedDataBuffer(BANK4[64]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 64
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), 
		 -> fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(BANK0[2]), _read_fat@value(BANK0[2]), _root_is_available@first_byte(BANK0[1]), 
		 -> ToSendDataBuffer(BANK4[64]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_buffer_read@data	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK4[64]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), 
		 -> fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(BANK0[2]), _read_fat@value(BANK0[2]), _root_is_available@first_byte(BANK0[1]), 
		 -> buffer(BIGRAMll[512]), ToSendDataBuffer(BANK4[64]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> log_write_to_disk@log_entry(COMRAM[32]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(BANK0[1]), buffer(BIGRAMll[512]), ReceivedDataBuffer(BANK4[64]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK3[80]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK3[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), display_content(BANK3[80]), 

    _write_calibration@ptr	PTR unsigned char  size(2) Largest target is 84
		 -> calibrationParameters(BANK3[84]), 

    _i2c_eeprom_load_default_calibration@buffer	PTR struct . size(2) Largest target is 84
		 -> calibrationParameters(BANK3[84]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 84
		 -> rtcc_read_eeprom@date(BANK0[6]), i2c_eeprom_read_calibration@buffer(BANK0[4]), calibrationParameters(BANK3[84]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 16
		 -> rtcc_write_eeprom@date(BANK0[6]), _write_calibration@buffer(BANK0[16]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK3[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 84
		 -> rtcc_read_eeprom@date(BANK0[6]), i2c_eeprom_read_calibration@buffer(BANK0[4]), i2c_eeprom_readByte@addr(COMRAM[1]), calibrationParameters(BANK3[84]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_adc_start@configuration_byte(BANK0[1]), i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(BANK0[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(COMRAM[2]), i2c_digipot_set_defaults@data_array(COMRAM[2]), i2c_digipot_backlight@data_array(BANK0[2]), i2c_digipot_reset_off@data_array(BANK0[2]), 
		 -> i2c_digipot_reset_on@data_array(BANK0[2]), i2c_display_send_init_sequence@init_sequence(BANK0[9]), _ic2_display_set_address@data_array(BANK0[2]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2782	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2748	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2747	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2694	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2693	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2325$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2325$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2325$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2325$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2325$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2325$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2325$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2325$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2325$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2325$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2325$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), ToSendDataBuffer(BANK4[64]), msd_buffer(BIGRAMll[512]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK4[64]), ReceivedDataBuffer(BANK4[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S166$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S156$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S156$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S132$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S132$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S132$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S132$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK2[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    __ui_encoder->_rtcc_write_eeprom
    _system_output_toggle->_system_output_off
    _rtcc_increment_year->__rtcc_increment_bcd
    _rtcc_increment_seconds->__rtcc_increment_bcd
    _rtcc_increment_month->__rtcc_increment_bcd
    _rtcc_increment_minutes->__rtcc_increment_bcd
    _rtcc_increment_hours->__rtcc_increment_bcd
    _rtcc_increment_day->__rtcc_increment_bcd
    __rtcc_increment_bcd->__number_of_days
    _rtcc_decrement_year->__rtcc_decrement_bcd
    _rtcc_decrement_seconds->__rtcc_decrement_bcd
    _rtcc_decrement_month->__rtcc_decrement_bcd
    _rtcc_decrement_minutes->__rtcc_decrement_bcd
    _rtcc_decrement_hours->__rtcc_decrement_bcd
    _rtcc_decrement_day->__rtcc_decrement_bcd
    __rtcc_decrement_bcd->__number_of_days
    _rtcc_init->_rtcc_read_eeprom
    _rtcc_read_eeprom->_rtcc_write_eeprom
    _rtcc_correct_day->__number_of_days
    _log_start_new->_rtcc_get_seconds_decimal
    _i2c_init->_i2c_set_frequency
    _i2c_eeprom_read_calibration->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _system_calculate_output_voltage->___lmul
    _system_calculate_output_current->___lmul
    _system_calculate_input_voltage->___lmul
    _system_calculate_input_current->___lmul
    _log_collect_data->__get_input_power
    __get_output_power->___lldiv
    __get_input_power->___aldiv
    _i2c_eeprom_tasks->__write_calibration
    __write_calibration->_i2c_eeprom_write
    _i2c_adc_start->__i2c_write
    _i2c_adc_read->__i2c_wait_idle
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_efficiency
    __display_temperature->__display_itoa
    __display_startup->__display_itoa_u16
    __display_itoa_u16->_itoa
    __display_inout->__display_itoa
    __display_efficiency->__display_itoa
    ___xxtofl->___aldiv
    __display_charger->__display_itoa
    __display_itoa->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _buck_operate->__buck_operate_local
    __buck_operate_remote->__buck_start
    __buck_operate_local->__buck_start
    __buck_start->__buck_initial_dutycycle
    __buck_set_sync_async->__buck_set_dutycycle
    __buck_initial_dutycycle->___lldiv
    _adc_calculate_temperature->___lmul
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _APP_DeviceCustomHIDTasks->_api_parse
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __fill_buffer_read_buffer->_fat_read_from_buffer
    _fat_read_from_buffer->_flash_read_from_buffer
    _flash_read_from_buffer->__flash_buffer_read
    __flash_buffer_read->__flash_is_busy
    __fill_buffer_get_status->_buck_remote_get_status
    __fill_buffer_get_file_details->_fat_get_file_information
    __fill_buffer_get_display1->_display_get_character
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_calibration2->_memcpy
    __fill_buffer_get_calibration1->_memcpy
    __fill_buffer_find_file->_fat_find_file
    _api_parse->__parse_command_long
    __parse_command_short->_rtcc_write_eeprom
    _rtcc_write_eeprom->_i2c_eeprom_write
    _i2c_eeprom_write->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->__parse_file_append
    __parse_write_buffer->_fat_write_to_buffer
    _fat_write_to_buffer->_flash_write_to_buffer
    _flash_write_to_buffer->__flash_write_to_buffer
    __parse_sector_to_buffer->_fat_copy_sector_to_buffer
    __parse_format_drive->_fat_format
    _fat_format->_flash_sector_write
    __parse_file_resize->_fat_resize_file
    __parse_file_rename->_fat_rename_file
    _fat_rename_file->_fat_get_file_information
    __parse_file_modify->_fat_modify_file
    __parse_file_delete->_fat_delete_file
    _fat_delete_file->__make_cluster_chain
    __delete_root->_flash_partial_write
    __parse_file_create->_fat_create_file
    __parse_file_copy->_fat_copy_file
    _fat_copy_file->_fat_create_file
    _fat_create_file->__make_cluster_chain
    _fat_find_file->_flash_sector_read
    __get_time->_rtcc_get_hours_decimal
    __get_time->_rtcc_get_minutes_decimal
    __get_time->_rtcc_get_seconds_decimal
    _rtcc_get_seconds_decimal->__rtcc_bcd_to_decimal
    _rtcc_get_minutes_decimal->__rtcc_bcd_to_decimal
    _rtcc_get_hours_decimal->__rtcc_bcd_to_decimal
    __get_date->_rtcc_get_day_decimal
    __get_date->_rtcc_get_month_decimal
    __get_date->_rtcc_get_year_decimal
    _rtcc_get_year_decimal->__rtcc_bcd_to_decimal
    _rtcc_get_month_decimal->__rtcc_bcd_to_decimal
    _rtcc_get_day_decimal->__rtcc_bcd_to_decimal
    __get_available_root_entry->__root_is_available
    _fat_copy_sector_to_buffer->_fat_get_file_size
    _flash_copy_page_to_buffer->__flash_copy_page_to_buffer
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    __write_root->_flash_partial_write
    __make_cluster_chain->__get_available_cluster
    _flash_sector_write->__flash_compare_page_to_buffer
    __get_available_cluster->_flash_sector_read
    _fat_modify_file->__find_nth_cluster
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_copy_page_to_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _fat_get_file_information->_flash_partial_read
    __find_nth_cluster->__read_fat
    _flash_sector_read->__flash_partial_read
    __read_fat->_flash_partial_read
    __parse_calibration->_schedule_eeprom_write_task
    __parse_buffer_to_sector->_fat_write_sector_from_buffer
    _fat_write_sector_from_buffer->_fat_get_file_size
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    __get_first_cluster->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _display_prepare->__display_time
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    _api_parse->__parse_command_long

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 1382951
                                            211 BANK1      2     2      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
          _adc_calculate_temperature
                      _adc_calibrate
                           _adc_read
                      _buck_get_mode
                       _buck_operate
                    _display_prepare
                     _display_update
                       _i2c_adc_read
                      _i2c_adc_start
                   _i2c_eeprom_tasks
                   _log_collect_data
     _system_calculate_input_current
     _system_calculate_input_voltage
    _system_calculate_output_current
    _system_calculate_output_voltage
                        _system_init
                  _system_output_off
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   31902
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
             _system_encoder_disable
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _system_encoder_disable                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    2787
                                             10 BANK0      9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    2824
                                             10 BANK0      2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    2824
                                             10 BANK0      2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    2855
                                             10 BANK0      3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   20612
                   _rtcc_correct_day
                 _rtcc_decrement_day
               _rtcc_decrement_hours
             _rtcc_decrement_minutes
               _rtcc_decrement_month
             _rtcc_decrement_seconds
                _rtcc_decrement_year
                 _rtcc_increment_day
               _rtcc_increment_hours
             _rtcc_increment_minutes
               _rtcc_increment_month
             _rtcc_increment_seconds
                _rtcc_increment_year
                  _rtcc_write_eeprom
                  _system_output_off
                   _system_output_on
               _system_output_toggle
 ---------------------------------------------------------------------------------
 (3) _system_output_toggle                                 1     1      0     248
                                              2 BANK0      1     1      0
                _system_output_is_on
                  _system_output_off
                   _system_output_on
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_year                                  1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                      _rtcc_get_year
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_seconds                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                   _rtcc_get_seconds
                   _rtcc_set_seconds
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_month                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                     _rtcc_get_month
                     _rtcc_set_month
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_minutes                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                   _rtcc_get_minutes
                   _rtcc_set_minutes
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_hours                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_increment_bcd
                     _rtcc_get_hours
                     _rtcc_set_hours
 ---------------------------------------------------------------------------------
 (3) _rtcc_increment_day                                   1     1      0    1543
                                              8 BANK0      1     1      0
                    __number_of_days
                __rtcc_increment_bcd
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __rtcc_increment_bcd                                  4     2      2    1181
                                              4 BANK0      4     2      2
                    __number_of_days (ARG)
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_year                                  1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                      _rtcc_get_year
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_seconds                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                   _rtcc_get_seconds
                   _rtcc_set_seconds
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_month                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                     _rtcc_get_month
                     _rtcc_set_month
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_minutes                               1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                   _rtcc_get_minutes
                   _rtcc_set_minutes
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_hours                                 1     1      0    1280
                                              8 BANK0      1     1      0
                __rtcc_decrement_bcd
                     _rtcc_get_hours
                     _rtcc_set_hours
 ---------------------------------------------------------------------------------
 (3) _rtcc_decrement_day                                   1     1      0    1543
                                              8 BANK0      1     1      0
                    __number_of_days
                __rtcc_decrement_bcd
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __rtcc_decrement_bcd                                  4     2      2    1181
                                              4 BANK0      4     2      2
                    __number_of_days (ARG)
 ---------------------------------------------------------------------------------
 (1) _system_init                                        181   181      0   29137
                                              0 BANK1    130   130      0
               __system_encoder_init
                __system_timer0_init
                           _adc_init
                          _buck_init
                         _flash_init
        _i2c_eeprom_read_calibration
                           _i2c_init
                      _log_start_new
                          _rtcc_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtcc_init                                            0     0      0   12132
                   _rtcc_read_eeprom
 ---------------------------------------------------------------------------------
 (3) _rtcc_read_eeprom                                     8     8      0   12132
                                             43 BANK0      8     8      0
                   __rtcc_verify_bcd
                    _i2c_eeprom_read
                   _rtcc_correct_day
                       _rtcc_get_day
                       _rtcc_set_day
                     _rtcc_set_hours
                   _rtcc_set_minutes
                     _rtcc_set_month
                   _rtcc_set_seconds
                      _rtcc_set_year
                  _rtcc_write_eeprom
 ---------------------------------------------------------------------------------
 (3) _rtcc_correct_day                                     2     2      0     393
                                              4 BANK0      2     2      0
                    __number_of_days
                       _rtcc_get_day
                       _rtcc_set_day
 ---------------------------------------------------------------------------------
 (4) __number_of_days                                      4     4      0     263
                                              0 BANK0      4     4      0
                     _rtcc_get_month
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) __rtcc_verify_bcd                                     4     2      2    1589
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _log_start_new                                        0     0      0     164
           _rtcc_get_seconds_decimal
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      62
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_read_calibration                          9     9      0    7005
                                             25 BANK0      9     9      0
__i2c_eeprom_load_default_calibratio
                    _i2c_eeprom_read
         _schedule_eeprom_write_task
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_read                                      8     3      5    4588
                                             17 BANK0      8     3      5
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) __i2c_read                                           12     9      3     670
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) __i2c_eeprom_load_default_calibration                 3     0      3    1758
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    9759
               __flash_set_page_size
                           _spi_init
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     270
                                              3 BANK0      1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     208
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    9458
                                             19 BANK0      5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _buck_init                                            0     0      0       0
                     __buck_pin_init
                  __buck_timer2_init
 ---------------------------------------------------------------------------------
 (3) __buck_timer2_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __buck_pin_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_calculate_output_voltage                      8     8      0    3296
                                             12 BANK0      8     8      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _system_calculate_output_current                      8     8      0    3299
                                             12 BANK0      8     8      0
                             ___lmul
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (1) _system_calculate_input_voltage                       8     8      0    3296
                                             12 BANK0      8     8      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _system_calculate_input_current                       8     8      0    3299
                                             12 BANK0      8     8      0
                             ___lmul
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (1) _log_collect_data                                     6     6      0   11180
                                             20 BANK0      6     6      0
                   __get_input_power
                  __get_output_power
                      _buck_get_mode
           _rtcc_get_seconds_decimal
                _system_output_is_on
 ---------------------------------------------------------------------------------
 (4) _system_output_is_on                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __get_output_power                                    6     4      2    5605
                                             13 BANK0      6     4      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) __get_input_power                                     6     4      2    5185
                                             14 BANK0      6     4      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _i2c_eeprom_tasks                                     0     0      0    4221
                 __write_calibration
         _get_next_eeprom_write_task
 ---------------------------------------------------------------------------------
 (2) _get_next_eeprom_write_task                           1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __write_calibration                                  24    24      0    4187
                                             37 BANK0     24    24      0
                   _i2c_eeprom_write
 ---------------------------------------------------------------------------------
 (1) _i2c_adc_start                                        4     2      2    3721
                                             10 BANK0      4     2      2
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _i2c_adc_read                                         5     3      2     133
                                              5 BANK0      5     3      2
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_update                                       0     0      0    4493
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (2) _i2c_display_write_fixed                              4     1      3    1055
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_display_cursor                                   3     2      1    3438
                                             13 BANK0      3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __ic2_display_set_address                             3     3      0    2855
                                             10 BANK0      3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                      3     3      0   52386
                                            115 BANK0      3     3      0
                   __display_charger
                     __display_clear
                __display_efficiency
                     __display_inout
                   __display_outputs
                   __display_startup
               __display_temperature
                      __display_time
                       __display_usb
 ---------------------------------------------------------------------------------
 (2) __display_usb                                        70    70      0     677
                                              0 BANK0     70    70      0
 ---------------------------------------------------------------------------------
 (2) __display_time                                      211   211      0    2801
                                              0 BANK1    211   211      0
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (2) __display_temperature                                56    56      0    9137
                                             48 BANK0     56    56      0
                      __display_itoa
 ---------------------------------------------------------------------------------
 (2) __display_startup                                    45    45      0    4521
                                             28 BANK0     45    45      0
                  __display_itoa_u16
 ---------------------------------------------------------------------------------
 (3) __display_itoa_u16                                    4     0      4    3671
                                             24 BANK0      4     0      4
                               _itoa
 ---------------------------------------------------------------------------------
 (2) __display_outputs                                    74    74      0     711
                                              0 BANK0     74    74      0
 ---------------------------------------------------------------------------------
 (2) __display_inout                                      54    54      0    9137
                                             48 BANK0     54    54      0
                      __display_itoa
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (2) __display_efficiency                                 67    67      0   15470
                                             48 BANK0     67    67      0
                            ___aldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
                      __display_itoa
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     580
                                             14 BANK0     14    10      4
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     441
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8    1901
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     198
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) __display_charger                                   144   144      0    9641
                                             48 BANK0      1     1      0
                                              0 BANK1    143   143      0
                      __display_itoa
                 _buck_get_dutycycle
                      _buck_get_mode
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    8457
                                             24 BANK0     24    19      5
                            ___fltol (ARG)
                 _buck_get_dutycycle (ARG)
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               6     4      2     234
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    2706
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1849
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     657
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _buck_operate                                         0     0      0   18856
                __buck_operate_local
               __buck_operate_remote
 ---------------------------------------------------------------------------------
 (2) __buck_operate_remote                                 1     1      0    7721
                                             22 BANK0      1     1      0
            __buck_initial_dutycycle
                      __buck_prepare
                __buck_set_dutycycle
               __buck_set_sync_async
                        __buck_start
                         __buck_stop
 ---------------------------------------------------------------------------------
 (3) __buck_prepare                                        1     1      0     130
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __buck_operate_local                                  8     8      0   11135
                                             22 BANK0      8     8      0
                             ___lmul
            __buck_initial_dutycycle
                __buck_set_dutycycle
               __buck_set_sync_async
                        __buck_start
                         __buck_stop
 ---------------------------------------------------------------------------------
 (3) __buck_stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __buck_start                                          4     3      1    4094
                                             18 BANK0      4     3      1
            __buck_initial_dutycycle
                __buck_set_dutycycle
               __buck_set_sync_async
 ---------------------------------------------------------------------------------
 (4) __buck_set_sync_async                                 2     1      1     808
                                              2 BANK0      2     1      1
                __buck_set_dutycycle
 ---------------------------------------------------------------------------------
 (5) __buck_set_dutycycle                                  2     2      0     195
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) __buck_initial_dutycycle                              5     5      0    2460
                                             13 BANK0      5     5      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    2321
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             5     3      2      71
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _adc_calibrate                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_calculate_temperature                           13    10      3    4044
                                             12 BANK0     13    10      3
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    3216
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      99
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  128574
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  128574
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  122842
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   62326
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   60278
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   29615
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     231
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   21009
                                             36 BANK0     11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   16221
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2847
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    2048
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1983
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    7846
                                             43 BANK0     10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     509
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      77
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      77
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     119
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     119
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0 1079521
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4  114810
                                            157 BANK0      1     1      0
                                             20 BANK1      4     0      4
             __fill_buffer_find_file
      __fill_buffer_get_calibration1
      __fill_buffer_get_calibration2
           __fill_buffer_get_display
          __fill_buffer_get_display1
      __fill_buffer_get_file_details
            __fill_buffer_get_status
           __fill_buffer_read_buffer
             __fill_buffer_read_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_read_file                              20    16      4   70170
                                              0 BANK1     20    16      4
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (4) _fat_read_from_file                                  52    42     10   51185
                                            105 BANK0     52    42     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (5) _fat_read_from_file_fast                             40    26     14   40786
                                             65 BANK0     40    26     14
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_read_buffer                            10     6      4    6984
                                             42 BANK0     10     6      4
               _fat_read_from_buffer
 ---------------------------------------------------------------------------------
 (4) _fat_read_from_buffer                                 6     0      6    6327
                                             36 BANK0      6     0      6
             _flash_read_from_buffer
 ---------------------------------------------------------------------------------
 (5) _flash_read_from_buffer                               6     0      6    5922
                                             30 BANK0      6     0      6
                 __flash_buffer_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (6) __flash_buffer_read                                  11     4      7    5486
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              6     4      2    1480
                                              1 BANK0      6     4      2
                 _buck_get_dutycycle
                      _buck_get_mode
          _buck_remote_get_dutycycle
             _buck_remote_get_status
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (1) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _buck_remote_get_status                               1     1      0      43
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _buck_remote_get_dutycycle                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buck_get_mode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _buck_get_dutycycle                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_file_details                        6     2      4    9934
                                             55 BANK0      6     2      4
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display1                            6     4      2     671
                                              4 BANK0      6     4      2
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     905
                                              4 BANK0     12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     270
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_calibration2                        2     0      2    4699
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_calibration1                        2     0      2    4730
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_find_file                               9     5      4    9842
                                             54 BANK0      9     5      4
                      _fat_find_file
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5  961166
                                            157 BANK0      2     2      0
                                              6 BANK1      9     4      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0    4116
                                             43 BANK0      1     1      0
                             _reboot
                  _rtcc_write_eeprom
                  _system_output_off
                   _system_output_on
 ---------------------------------------------------------------------------------
 (4) _system_output_on                                     1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _system_output_off                                    2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _rtcc_write_eeprom                                    6     6      0    3961
                                             37 BANK0      6     6      0
                   _i2c_eeprom_write
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_write                                    27    22      5    3739
                                             10 BANK0     27    22      5
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    2688
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _reboot                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6  955370
                                            156 BANK0      1     1      0
                                              0 BANK1      6     0      6
            __parse_buffer_to_sector
                 __parse_calibration
                 __parse_file_append
                   __parse_file_copy
                 __parse_file_create
                 __parse_file_delete
                 __parse_file_modify
                 __parse_file_rename
                 __parse_file_resize
                __parse_format_drive
            __parse_sector_to_buffer
      __parse_settings_i2c_frequency
__parse_settings_i2c_masterModeSlave
           __parse_settings_i2c_mode
__parse_settings_i2c_slaveModeSlaveA
      __parse_settings_spi_frequency
           __parse_settings_spi_mode
       __parse_settings_spi_polarity
                __parse_write_buffer
       _buck_remote_change_dutycycle
          _buck_remote_set_dutycycle
             _buck_remote_set_enable
                 _buck_remote_set_on
        _buck_remote_set_synchronous
                       _rtcc_set_day
                     _rtcc_set_hours
                   _rtcc_set_minutes
                     _rtcc_set_month
                   _rtcc_set_seconds
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_year                                        1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_seconds                                     1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_month                                       1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_minutes                                     1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_hours                                       1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_day                                         1     1      0      31
                                              0 BANK0      1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (5) __rtcc_write_enable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __rtcc_write_disable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _buck_remote_set_synchronous                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _buck_remote_set_on                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _buck_remote_set_enable                               1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _buck_remote_set_dutycycle                            1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _buck_remote_change_dutycycle                         3     3      0     127
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) __parse_write_buffer                                 11     5      6    7364
                                             42 BANK0     11     5      6
                _fat_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) _fat_write_to_buffer                                  6     0      6    6327
                                             36 BANK0      6     0      6
              _flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (6) _flash_write_to_buffer                                6     0      6    5922
                                             30 BANK0      6     0      6
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (4) __parse_settings_spi_polarity                         7     1      6     653
                                              0 BANK0      7     1      6
 ---------------------------------------------------------------------------------
 (4) __parse_settings_spi_mode                             7     1      6     653
                                              0 BANK0      7     1      6
 ---------------------------------------------------------------------------------
 (4) __parse_settings_spi_frequency                        7     1      6     653
                                              0 BANK0      7     1      6
 ---------------------------------------------------------------------------------
 (4) __parse_settings_i2c_slaveModeSlaveAddress            7     1      6     653
                                              0 BANK0      7     1      6
 ---------------------------------------------------------------------------------
 (4) __parse_settings_i2c_mode                             7     1      6     653
                                              0 BANK0      7     1      6
 ---------------------------------------------------------------------------------
 (4) __parse_settings_i2c_masterModeSlaveAddress           7     1      6     653
                                              0 BANK0      7     1      6
 ---------------------------------------------------------------------------------
 (4) __parse_settings_i2c_frequency                        7     1      6     653
                                              0 BANK0      7     1      6
 ---------------------------------------------------------------------------------
 (4) __parse_sector_to_buffer                             11     5      6   63811
                                             83 BANK0     11     5      6
          _fat_copy_sector_to_buffer
 ---------------------------------------------------------------------------------
 (4) __parse_format_drive                                  8     2      6   23441
                                             38 BANK0      8     2      6
                         _fat_format
 ---------------------------------------------------------------------------------
 (5) _fat_format                                           2     2      0   22816
                                             36 BANK0      2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (6) __get_root                                            6     4      2     417
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) __get_mbr                                             4     2      2     239
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) __get_fbr                                             4     2      2     239
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) __get_fat                                             4     2      2     135
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) __get_data                                            2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_file_resize                                  13     7      6   93242
                                            123 BANK0     13     7      6
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (4) __parse_file_rename                                   9     3      6   40348
                                             94 BANK0      9     3      6
                    _fat_rename_file
 ---------------------------------------------------------------------------------
 (5) _fat_rename_file                                     39    35      4   39503
                                             55 BANK0     39    35      4
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (4) __parse_file_modify                                  15     9      6   72147
                                            131 BANK0     15     9      6
                    _fat_modify_file
 ---------------------------------------------------------------------------------
 (4) __parse_file_delete                                   9     3      6   91196
                                             79 BANK0      9     3      6
                    _fat_delete_file
 ---------------------------------------------------------------------------------
 (5) _fat_delete_file                                      3     3      0   90413
                                             76 BANK0      3     3      0
                       __delete_root
                 __get_first_cluster
                __make_cluster_chain
                 __root_is_available
 ---------------------------------------------------------------------------------
 (6) __delete_root                                         6     6      0   28889
                                             40 BANK0      6     6      0
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (4) __parse_file_create                                  12     6      6   99618
                                            125 BANK0     12     6      6
                    _fat_create_file
 ---------------------------------------------------------------------------------
 (4) __parse_file_copy                                     9     3      6  226249
                                            144 BANK0      9     3      6
                      _fat_copy_file
 ---------------------------------------------------------------------------------
 (5) _fat_copy_file                                       19    15      4  225404
                                            125 BANK0     19    15      4
                 __root_is_available
          _fat_copy_sector_to_buffer
                    _fat_create_file
                  _fat_get_file_size
       _fat_write_sector_from_buffer
 ---------------------------------------------------------------------------------
 (5) _fat_create_file                                     49    41      8   98755
                                             76 BANK0     49    41      8
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    4471
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _fat_find_file                                       11     7      4    9318
                                             43 BANK0     11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (5) _strncmp                                              9     3      6     816
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (6) __get_time                                            9     7      2     634
                                              4 BANK0      9     7      2
             _rtcc_get_hours_decimal
           _rtcc_get_minutes_decimal
           _rtcc_get_seconds_decimal
 ---------------------------------------------------------------------------------
 (3) _rtcc_get_seconds_decimal                             1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                   _rtcc_get_seconds
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_seconds                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _rtcc_get_minutes_decimal                             1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                   _rtcc_get_minutes
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_minutes                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _rtcc_get_hours_decimal                               1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                     _rtcc_get_hours
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_hours                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __get_date                                            9     7      2     634
                                              4 BANK0      9     7      2
               _rtcc_get_day_decimal
             _rtcc_get_month_decimal
              _rtcc_get_year_decimal
 ---------------------------------------------------------------------------------
 (7) _rtcc_get_year_decimal                                1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_year                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _rtcc_get_month_decimal                               1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                     _rtcc_get_month
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_month                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _rtcc_get_day_decimal                                 1     1      0     164
                                              3 BANK0      1     1      0
               __rtcc_bcd_to_decimal
                       _rtcc_get_day
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_day                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __rtcc_bcd_to_decimal                                 3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) __get_available_root_entry                            1     1      0    9116
                                             53 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (5) _fat_copy_sector_to_buffer                           17    15      2   62740
                                             66 BANK0     17    15      2
          __data_sector_from_cluster
                  __find_nth_cluster
                 __get_first_cluster
                 __root_is_available
                  _fat_get_file_size
          _flash_copy_page_to_buffer
 ---------------------------------------------------------------------------------
 (6) _flash_copy_page_to_buffer                            2     0      2    5674
                                             29 BANK0      2     0      2
         __flash_copy_page_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (4) __parse_file_append                                  11     5      6  191265
                                            145 BANK0     11     5      6
                 _fat_append_to_file
 ---------------------------------------------------------------------------------
 (5) _fat_append_to_file                                  14    10      4  190169
                                            131 BANK0     14    10      4
                 __root_is_available
                  _fat_get_file_size
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (5) _fat_resize_file                                     47    43      4   91911
                                             76 BANK0     47    43      4
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (6) __write_root                                          7     5      2   29198
                                             40 BANK0      7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (6) __make_cluster_chain                                 23    19      4   43453
                                             53 BANK0     23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (7) _flash_sector_write                                   5     1      4   20574
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (7) __write_value_to_offset                               8     2      6    1125
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (7) __get_available_cluster                              10     6      4    9451
                                             43 BANK0     10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (7) __get_available_offset_from_buffer                    8     4      4     878
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (8) __cluster_from_sector_and_offset                      4     0      4     282
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _fat_modify_file                                     66    58      8   70503
                                             65 BANK0     66    58      8
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (7) _flash_partial_write                                  9     1      8   28583
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (8) __flash_write_to_buffer                              11     4      7    5486
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (9) _spi_tx_tx                                           12     4      8     664
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (8) __flash_write_page_from_buffer                       10     7      3    5716
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (7) __flash_copy_page_to_buffer                          10     7      3    5508
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (8) __flash_compare_page_to_buffer                       12     9      3    7134
                                             19 BANK0     12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) _fat_get_file_information                             8     6      2    9506
                                             47 BANK0      8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (6) __find_nth_cluster                                   10     6      4   20336
                                             55 BANK0     10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (7) _flash_sector_read                                    4     0      4    7488
                                             39 BANK0      4     0      4
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (7) __read_value_from_offset                              9     5      4     996
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (6) __read_fat                                            8     6      2   10000
                                             47 BANK0      8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (7) __fat_sector_from_cluster                             2     0      2     557
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) __fat_offset_from_cluster                             2     0      2     349
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) __data_sector_from_cluster                            2     0      2     343
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_calibration                                  12     6      6    1204
                                              3 BANK0     12     6      6
         _schedule_eeprom_write_task
 ---------------------------------------------------------------------------------
 (3) _schedule_eeprom_write_task                           3     3      0     161
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) __parse_buffer_to_sector                             11     5      6   37328
                                             81 BANK0     11     5      6
       _fat_write_sector_from_buffer
 ---------------------------------------------------------------------------------
 (6) _fat_write_sector_from_buffer                        17    15      2   36257
                                             66 BANK0     15    13      2
                 __get_first_cluster
                 __root_is_available
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_size                                   13     9      4   17941
                                             53 BANK0     13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __root_is_available                                   6     6      0    8986
                                             47 BANK0      6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (6) __get_first_cluster                                   9     7      2    8927
                                             47 BANK0      9     7      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (6) _flash_partial_read                                   8     0      8    8590
                                             39 BANK0      8     0      8
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_set_configuration                                2     2      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) __flash_partial_read                                 20    12      8    5939
                                             19 BANK0     20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    3240
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1614
                                              8 BANK0      1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1580
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1592
                                             12 BANK0      5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1496
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) __sector_from_file_number                             5     3      2      71
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) __offset_from_file_number                             5     3      2      71
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    3545
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _SYS_InterruptHigh                                  14    14      0   58167
                                             31 COMRAM    14    14      0
                     _USBDeviceTasks
                            _tmr_isr
 ---------------------------------------------------------------------------------
 (15) _tmr_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBDeviceTasks                                      1     1      0   58167
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (16) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) _USBWakeFromSuspend                                  0     0      0    7955
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBSuspend                                          0     0      0    7955
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPService                                    1     1      0   33624
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (17) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfSetupHandler                              0     0      0   33174
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (19) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (18) _USBCheckStdRequest                                  0     0      0   25127
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (19) _USBStdSetCfgHandler                                 1     1      0    8493
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (17) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (19) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (19) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (19) _USBStdFeatureReqHandler                             6     6      0    8633
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7955
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (17) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (17) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (17) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (18) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (19) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (19) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (19) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (18) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (19) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (18) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (19) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (20) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_buffer_to_sector
           _fat_write_sector_from_buffer
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_calibration
           _schedule_eeprom_write_task
         __parse_file_append
           _fat_append_to_file
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_modify_file
               __data_sector_from_cluster
               __find_nth_cluster
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 __read_fat
                   __fat_offset_from_cluster
                   __fat_sector_from_cluster
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __read_value_from_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _fat_get_file_information
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_resize_file
               __make_cluster_chain
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 __get_available_cluster
                   __cluster_from_sector_and_offset
                   __get_available_offset_from_buffer
                   _flash_sector_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __get_available_offset_from_buffer
                 __read_value_from_offset
                 __write_value_to_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __write_root
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_copy_page_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _fat_get_file_information
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
         __parse_file_copy
           _fat_copy_file
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_copy_sector_to_buffer
               __data_sector_from_cluster
               __find_nth_cluster
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 __read_fat
                   __fat_offset_from_cluster
                   __fat_sector_from_cluster
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __read_value_from_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_first_cluster
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _fat_get_file_size
                 __offset_from_file_number
                 __root_is_available
                   __offset_from_file_number
                   __sector_from_file_number
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_copy_page_to_buffer
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 _spi_set_configuration
             _fat_create_file
               __get_available_root_entry
                 __root_is_available
                   __offset_from_file_number
                   __sector_from_file_number
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
               __get_date
                 _rtcc_get_day_decimal
                   __rtcc_bcd_to_decimal
                   _rtcc_get_day
                 _rtcc_get_month_decimal
                   __rtcc_bcd_to_decimal
                   _rtcc_get_month
                 _rtcc_get_year_decimal
                   __rtcc_bcd_to_decimal
                   _rtcc_get_year
               __get_time
                 _rtcc_get_hours_decimal
                   __rtcc_bcd_to_decimal
                   _rtcc_get_hours
                 _rtcc_get_minutes_decimal
                   __rtcc_bcd_to_decimal
                   _rtcc_get_minutes
                 _rtcc_get_seconds_decimal
                   __rtcc_bcd_to_decimal
                   _rtcc_get_seconds
               __make_cluster_chain
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 __get_available_cluster
                   __cluster_from_sector_and_offset
                   __get_available_offset_from_buffer
                   _flash_sector_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __get_available_offset_from_buffer
                 __read_value_from_offset
                 __write_value_to_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               __write_root
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_copy_page_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _fat_find_file
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
                 _strncmp
               _memcpy
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_write_sector_from_buffer
               __get_first_cluster
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _fat_get_file_size
                 __offset_from_file_number
                 __root_is_available
                   __offset_from_file_number
                   __sector_from_file_number
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
         __parse_file_create
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
             __get_date
               _rtcc_get_day_decimal
                 __rtcc_bcd_to_decimal
                 _rtcc_get_day
               _rtcc_get_month_decimal
                 __rtcc_bcd_to_decimal
                 _rtcc_get_month
               _rtcc_get_year_decimal
                 __rtcc_bcd_to_decimal
                 _rtcc_get_year
             __get_time
               _rtcc_get_hours_decimal
                 __rtcc_bcd_to_decimal
                 _rtcc_get_hours
               _rtcc_get_minutes_decimal
                 __rtcc_bcd_to_decimal
                 _rtcc_get_minutes
               _rtcc_get_seconds_decimal
                 __rtcc_bcd_to_decimal
                 _rtcc_get_seconds
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_find_file
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _strncmp
             _memcpy
         __parse_file_delete
           _fat_delete_file
             __delete_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_modify
           _fat_modify_file
             __data_sector_from_cluster
             __find_nth_cluster
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
         __parse_file_rename
           _fat_rename_file
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_resize
           _fat_resize_file
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_format_drive
           _fat_format
             __get_data
             __get_fat
             __get_fbr
             __get_mbr
             __get_root
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
         __parse_sector_to_buffer
           _fat_copy_sector_to_buffer
             __data_sector_from_cluster
             __find_nth_cluster
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_copy_page_to_buffer
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               _spi_set_configuration
         __parse_settings_i2c_frequency
         __parse_settings_i2c_masterModeSlaveAddress
         __parse_settings_i2c_mode
         __parse_settings_i2c_slaveModeSlaveAddress
         __parse_settings_spi_frequency
         __parse_settings_spi_mode
         __parse_settings_spi_polarity
         __parse_write_buffer
           _fat_write_to_buffer
             _flash_write_to_buffer
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
         _buck_remote_change_dutycycle
         _buck_remote_set_dutycycle
         _buck_remote_set_enable
         _buck_remote_set_on
         _buck_remote_set_synchronous
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
       __parse_command_short
         _reboot
         _rtcc_write_eeprom
           _i2c_eeprom_write
             __i2c_write
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
             _i2c_set_frequency
           _rtcc_get_day
           _rtcc_get_hours
           _rtcc_get_minutes
           _rtcc_get_month
           _rtcc_get_seconds
           _rtcc_get_year
         _system_output_off
         _system_output_on
     _api_prepare
       __fill_buffer_find_file
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
           _strncmp
       __fill_buffer_get_calibration1
         _memcpy
       __fill_buffer_get_calibration2
         _memcpy
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_display1
         _display_get_character
       __fill_buffer_get_file_details
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_get_status
         _buck_get_dutycycle
         _buck_get_mode
         _buck_remote_get_dutycycle
         _buck_remote_get_status
         _rtcc_get_day
         _rtcc_get_hours
         _rtcc_get_minutes
         _rtcc_get_month
         _rtcc_get_seconds
         _rtcc_get_year
         _ui_get_status
       __fill_buffer_read_buffer
         _fat_read_from_buffer
           _flash_read_from_buffer
             __flash_buffer_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_read_file
         _fat_get_file_size
           __offset_from_file_number
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_read_from_file_fast
             __data_sector_from_cluster
             __find_nth_cluster
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_calculate_temperature
     ___lmul
   _adc_calibrate
   _adc_read
   _buck_get_mode
   _buck_operate
     __buck_operate_local
       ___lmul
       __buck_initial_dutycycle
         ___lldiv
       __buck_set_dutycycle
       __buck_set_sync_async
         __buck_set_dutycycle
       __buck_start
         __buck_initial_dutycycle
           ___lldiv
         __buck_set_dutycycle
         __buck_set_sync_async
           __buck_set_dutycycle
       __buck_stop
     __buck_operate_remote
       __buck_initial_dutycycle
         ___lldiv
       __buck_prepare
       __buck_set_dutycycle
       __buck_set_sync_async
         __buck_set_dutycycle
       __buck_start
         __buck_initial_dutycycle
           ___lldiv
         __buck_set_dutycycle
         __buck_set_sync_async
           __buck_set_dutycycle
       __buck_stop
   _display_prepare
     __display_charger
       __display_itoa
         ___fltol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
       _buck_get_dutycycle
       _buck_get_mode
     __display_clear
     __display_efficiency
       ___aldiv
       ___fltol
       ___lmul
       ___xxtofl
         ___aldiv (ARG)
       __display_itoa
         ___fltol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
     __display_inout
       __display_itoa
         ___fltol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
       _buck_get_mode
     __display_outputs
     __display_startup
       __display_itoa_u16
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
     __display_temperature
       __display_itoa
         ___fltol (ARG)
         _buck_get_dutycycle (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _strlen (ARG)
     __display_time
       _rtcc_get_day
       _rtcc_get_hours
       _rtcc_get_minutes
       _rtcc_get_month
       _rtcc_get_seconds
       _rtcc_get_year
     __display_usb
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _i2c_adc_read
     __i2c_acknowledge
     __i2c_get
     __i2c_not_acknowledge
     __i2c_send
     __i2c_start
     __i2c_stop
     __i2c_wait_idle
     _i2c_set_frequency
   _i2c_adc_start
     __i2c_write
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
     _i2c_set_frequency
   _i2c_eeprom_tasks
     __write_calibration
       _i2c_eeprom_write
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
     _get_next_eeprom_write_task
   _log_collect_data
     __get_input_power
       ___aldiv
       ___lmul
     __get_output_power
       ___lldiv
       ___lmul
     _buck_get_mode
     _rtcc_get_seconds_decimal
       __rtcc_bcd_to_decimal
       _rtcc_get_seconds
     _system_output_is_on
   _system_calculate_input_current
     ___lmul
     _buck_get_mode
   _system_calculate_input_voltage
     ___lmul
   _system_calculate_output_current
     ___lmul
     _buck_get_mode
   _system_calculate_output_voltage
     ___lmul
   _system_init
     __system_encoder_init
     __system_timer0_init
     _adc_init
     _buck_init
       __buck_pin_init
       __buck_timer2_init
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
       _spi_set_configuration
     _i2c_eeprom_read_calibration
       __i2c_eeprom_load_default_calibration
       _i2c_eeprom_read
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _schedule_eeprom_write_task
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _log_start_new
       _rtcc_get_seconds_decimal
         __rtcc_bcd_to_decimal
         _rtcc_get_seconds
     _rtcc_init
       _rtcc_read_eeprom
         __rtcc_verify_bcd
         _i2c_eeprom_read
           __i2c_read
             __i2c_acknowledge
             __i2c_get
             __i2c_not_acknowledge
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_correct_day
           __number_of_days
             _rtcc_get_month
             _rtcc_get_year
           _rtcc_get_day
           _rtcc_set_day
             __rtcc_write_disable
             __rtcc_write_enable
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_write_eeprom
           _i2c_eeprom_write
             __i2c_write
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
             _i2c_set_frequency
           _rtcc_get_day
           _rtcc_get_hours
           _rtcc_get_minutes
           _rtcc_get_month
           _rtcc_get_seconds
           _rtcc_get_year
     _ui_init
   _system_output_off
   _ui_get_status
   _ui_run
     __ui_encoder
       _rtcc_correct_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_hours
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_hours
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_minutes
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_minutes
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_month
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_month
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_seconds
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_seconds
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_decrement_year
         __rtcc_decrement_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_year
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_day
         __number_of_days
           _rtcc_get_month
           _rtcc_get_year
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_day
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_hours
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_hours
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_minutes
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_minutes
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_month
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_month
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_seconds
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_seconds
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_increment_year
         __rtcc_increment_bcd
           __number_of_days (ARG)
             _rtcc_get_month
             _rtcc_get_year
         _rtcc_get_year
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
       _rtcc_write_eeprom
         _i2c_eeprom_write
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_get_day
         _rtcc_get_hours
         _rtcc_get_minutes
         _rtcc_get_month
         _rtcc_get_seconds
         _rtcc_get_year
       _system_output_off
       _system_output_on
       _system_output_toggle
         _system_output_is_on
         _system_output_off
         _system_output_on
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_disable
     _system_encoder_enable
     _ui_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _tmr_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      68      15       40.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0     100      13      100.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E8      11       90.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FF       9       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D5     100       7      100.0%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     549      31        0.0%
DATA                 0      0     749       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Oct 07 13:39:02 2018

                            __end_of_fat_read_from_file 436A  
                         rtcc_get_year_decimal@bcd_year 0063  
                   __parse_buffer_to_sector@out_idx_ptr 00B5  
                       __size_of__write_value_to_offset 0036  
                            __end_of__parse_calibration 144E  
                                            _USB_SD_Ptr C332  
                              fat_create_file@extension 00AE  
                __end_of_i2c_display_send_init_sequence 878A  
               __size_of_i2c_display_send_init_sequence 002E  
                        _i2c_display_send_init_sequence 875C  
                          __end_of_fat_read_from_buffer 8D40  
                                   __system_timer0_init 82CC  
                               rtcc_set_minutes@minutes 0060  
                            flash_read_from_buffer@data 0082  
                                      ??__buck_pin_init 0060  
                        __parse_file_delete@out_idx_ptr 00B3  
                       __parse_file_resize@return_value 00E2  
                                                    _os 0200  
                                         _USBDeviceInit 2308  
                                    _USBCheckHIDRequest 4CFC  
                              __display_time@setminutes 018E  
                           ??__data_sector_from_cluster 0062  
                              __display_time@setseconds 019A  
                                    _rtcc_increment_day 8AB8  
                                      ??__flash_is_busy 0071  
__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr 0064  
                            ??__sector_from_file_number 0062  
                                          __CFG_CP0$OFF 000000  
                        __root_is_available@root_sector 008F  
                                   __end_of_system_init 38BE  
                      __size_of__parse_sector_to_buffer 0172  
                              ?_i2c_display_write_fixed 0065  
                               fat_modify_file@position 00BF  
                                       _fat_resize_file 3BBC  
                  USER_USB_CALLBACK_EVENT_HANDLER@event 003D  
                  USER_USB_CALLBACK_EVENT_HANDLER@pdata 003F  
                           __display_efficiency@battery 00CE  
                                     ?__rtcc_verify_bcd 0060  
                                                   l151 23B4  
                                                   l208 85D0  
                                                   l209 85CE  
                                                   l147 2352  
                                                   l149 237A  
                           __end_of_USBStdGetDscHandler 2CFC  
                                                   l190 3670  
                                         ?_i2c_adc_read 0065  
                                                   l186 35C8  
                                                   l194 3506  
                                                   l188 35F2  
                                                   l700 1056  
                                                   l612 2B1C  
                                                   l710 ECAA  
                                                   l630 75C2  
                                                   l606 FDC6  
                                                   l623 75CA  
                                                   l704 EEAE  
                                                   l712 ECD2  
                                                   l640 DB68  
                                                   l624 7590  
                                                   l616 2BC8  
                                                   l713 ED1A  
                                                   l705 EC00  
                                                   l641 DB72  
                                                   l617 2BC2  
                                                   l609 FDCC  
                                                   l730 3EBE  
                                                   l722 EE66  
                                                   l714 ECF4  
                                                   l634 DEBC  
                                                   l650 DD20  
                                                   l626 75AC  
                                                   l707 EED0  
                                                   l723 EE7E  
                                                   l715 ED60  
                                                   l643 DBC4  
                                                   l635 DB4C  
                                                   l619 2BCC  
                                                   l732 3ED2  
                                                   l724 EE96  
                                                   l716 ED5C  
                                                   l708 ECA6  
                                                   l660 DDE2  
                                                   l644 DC84  
                                                   l628 75B6  
                                                   l900 E6A0  
                                                   l741 3F72  
                                                   l653 DD52  
                                                   l645 DC8E  
                                                   l629 75BC  
                                                   l581 FCFC  
                                                   l901 E6A6  
                                                   l742 3F5C  
                                                   l718 ED74  
                                                   l670 DE66  
                                                   l654 DD7E  
                                                   l646 DCB2  
                                                   l638 DB5A  
                                                   l574 FDE4  
                                                   l582 FCE2  
                                                   l590 FE00  
                                                   l910 E750  
                                                   l902 E6E8  
                                                   l735 3F0C  
                                                   l719 EDF6  
                                                   l671 DE7A  
                                                   l591 FD1C  
                                                   l583 FCBC  
                                                   l575 FBBA  
                                                   l664 DE1E  
                                                   l656 DDB2  
                                                   l648 DCE0  
                                                   l584 FCC4  
                                                   l920 E7D6  
                                                   l904 E6FC  
                                                   l681 5C0C  
                                                   l761 308E  
                                                   l753 3F84  
                                                   l665 DE32  
                                                   l593 FD28  
                                                   l921 E7DC  
                                                   l770 30C2  
                                                   l738 3F18  
                                                   l690 0F14  
                                                   l674 DEB4  
                                                   l666 DE50  
                                                   l658 DDCC  
                                                   l586 FCD8  
                                                   l922 E862  
                                                   l906 E70C  
                                                   l771 30D0  
                                                   l739 3F3E  
                                                   l691 0F1E  
                                                   l595 FD4A  
                                                   l579 FBDC  
                                                   l915 E798  
                                                   l772 30E4  
                                                   l692 0F32  
                                                   l668 DE7C  
                                                   l596 FD4E  
                                                   l924 E872  
                                                   _BDT 000D00  
                                                   l773 30F2  
                                                   l757 3F94  
                                                   l685 106E  
                                                   l669 DE56  
                                                   l597 FD74  
                                                   l925 E87A  
                                                   l774 3106  
                                                   l694 0F82  
                                                   l686 0EB2  
                                                   l942 7858  
                                                   l679 5BF6  
                                                   l767 3150  
                                                   l775 3142  
                                                   l695 0FAC  
                                                   l951 7846  
                                                   l943 781C  
                                                   l768 30BA  
                                                   l688 1092  
                                                   l696 0FDC  
                                                   l697 0FEE  
                                                   l689 0F08  
                                                   l945 7828  
                                                   l698 0FF4  
                                                   l699 1008  
                              __display_time@presshours 014E  
                                                   l949 783A  
                                                   l893 E5F4  
                                                   l895 E61A  
                                                   l896 E642  
                                                   l897 E88A  
                                                   l898 E68E  
                                                   l995 5E20  
                                                   l899 E8EE  
                                                   l989 5DBC  
                                                   _LBA 01E4  
                             _buck_remote_get_dutycycle 9114  
                                                   _PR2 000FCB  
                              __display_time@pressmonth 013C  
                                                   _LUN 02D4  
                                                   _UIE 000F36  
                                                   _UIR 000F62  
                                  _i2c_digipot_reset_on 8A46  
                         __size_of_rtcc_decrement_hours 0022  
                    system_calculate_output_voltage@tmp 0070  
                                    api_prepare@command 00FD  
                            __end_of_buck_get_dutycycle 9110  
                              ??_rtcc_increment_minutes 0068  
                         __size_of_rtcc_decrement_month 0022  
                              ??_rtcc_increment_seconds 0068  
                                                   _idx 001A  
                              __parse_calibration@shift 006A  
                                            _USBSuspend 872C  
                                                   _now 02A5  
                         ?_fat_write_sector_from_buffer 00A2  
                           flash_read_from_buffer@start 007E  
                                __end_of_display_update 6D7E  
                                  USBStdSetCfgHandler@i 0045  
                                  ?__parse_format_drive 0086  
                                i2c_eeprom_read@address 0071  
                                    ??__rtcc_verify_bcd 0062  
                                                   prod 000FF3  
                                                   tosl 000FFD  
                                                   wreg 000FE8  
                                        _USBDeviceTasks 26DE  
                                   ?_USBCheckHIDRequest 002E  
                                          __CFG_IESO$ON 000000  
                                   ?_rtcc_increment_day 002E  
                                        _USBDeviceState 002B  
                                      _rtcc_read_eeprom 2822  
                                          ?__write_root 0088  
                                   _rtcc_increment_year 8B28  
                        __parse_file_resize@out_idx_ptr 00DF  
                               rtcc_set_seconds@seconds 0060  
                                 _spi_set_configuration 317A  
                                 ??_USBCtrlTrfRxService 002E  
                              __size_ofi2_USBDeviceInit 0146  
                              USBEnableEndpoint@options 0036  
                               __buck_initial_dutycycle 5A3C  
                                     __find_nth_cluster 5E5C  
                                     ??_MSDErrorHandler 0068  
                                  ?__system_timer0_init 002E  
                     __size_of__fill_buffer_read_buffer 00D8  
                          __parse_file_resize@file_size 00E4  
                                   api_prepare@inBuffer 0114  
                                          ___fltol@exp1 0069  
                     __size_of__offset_from_file_number 002A  
                           __flash_write_to_buffer@data 0075  
                                                  l1033 8F9C  
                                                  l1201 8AAE  
                                                  l1210 7FD4  
                                                  l1211 7FDA  
                                                  l2011 E56E  
                                                  l1220 7BA2  
                                                  l1212 7FE0  
                                                  l2012 E548  
                                                  l1221 7BA6  
                                                  l2005 E4B6  
                                                  l1310 90F0  
                                                  l1222 7BAA  
                                                  l1206 7FE4  
                                                  l2006 E490  
                                                  l2102 8192  
                                                  l1207 7FC8  
                                                  l2031 158A  
                                                  l3000 F9E0  
                                                  l1216 7BAE  
                                                  l2008 E4F8  
                                                  l2032 1564  
                                                  l1304 90C8  
                                                  l1240 2D1C  
                                                  l2104 81A4  
                                                  l3001 F9E4  
                                                  l1217 7B9A  
                                                  l1209 7FCE  
                                                  l2009 E4D2  
                                                  l2025 14EC  
                                                  l1233 2E40  
                                                  l2105 81B0  
                                                  l3010 FA08  
                                                  l3002 F9E8  
                                                  l1218 7BD0  
                                                  l2034 15E6  
                                                  l2026 14C6  
                                                  l1322 90C0  
                                                  l2106 81BC  
                                                  l3011 FA0C  
                                                  l3003 F9EC  
                                                  l1219 7B9E  
                                                  l2035 15C0  
                                                  l3020 FA30  
                                                  l3012 FA10  
                                                  l3004 F9F0  
                                                  l1340 86AA  
                                                  l2028 152E  
                                                  l1316 90D4  
                                                  l1420 3006  
                                                  l1412 2F52  
                                                  l2117 9074  
                                                  l3021 FA34  
                                                  l3013 FA14  
                                                  l3005 F9F4  
                                                  l2029 1508  
                                                  l1173 82EC  
                                                  l1421 300E  
                                                  l3030 FA54  
                                                  l3022 FA38  
                                                  l3014 FA18  
                                                  l3006 F9F8  
                                                  l2302 5A5C  
                                                  l1174 82DA  
                                                  l1350 6550  
                                                  l1422 3016  
                                                  l1414 2FDA  
                                                  l2230 2950  
                                                  l2135 9082  
                                                  l2207 904A  
                                                  l3031 FA58  
                                                  l3023 FA3C  
                                                  l3015 FA1C  
                                                  l3007 F9FC  
                                                  l2071 8F4E  
                                                  l1175 82FC  
                                                  l1431 D80E  
                                                  l1351 6532  
                                                  l1423 301E  
                                                  l1191 388E  
                             ?__fill_buffer_read_buffer 008A  
                                                  l3040 7A30  
                                                  l3032 FA5C  
                                                  l3016 FA20  
                                                  l3008 FA00  
                                                  l2072 8F42  
                                                  l1344 7F0C  
                                                  l1336 86B0  
                                                  l2304 5AD2  
                                                  l2312 71C0  
                                                  l2320 73AE  
                                                  l1440 65D2  
                                                  l1176 82E2  
                                                  l1432 D890  
                                                  l1416 302E  
                                                  l1424 3026  
                                                  l2224 2864  
                                                  l3121 6D8E  
                                                  l2153 9090  
                                                  l3033 FA60  
                                                  l3025 FA40  
                                                  l3017 FA24  
                                                  l3009 FA04  
                                                  l1345 7EEE  
                                                  l1337 86A2  
                                                  l2305 5AF2  
                                                  l1433 D912  
                                                  l1417 2FF6  
                                                  l2225 288E  
                                                  l1601 E172  
                                                  l3130 5872  
                                                  l3042 7A34  
                                                  l3034 FA64  
                                                  l3026 FA44  
                                                  l3018 FA28  
                                                  l1338 86C6  
                                                  l2322 73D2  
                                                  l2402 443A  
                                                  l1434 D994  
                                                  l1418 305C  
                                                  l2226 28B8  
                                                  l2090 87E2  
                                                  l1610 E1CE  
                                                  l1602 E17E  
                                                  l3123 6DF4  
                                                  l2171 9066  
                                                  l3043 7A38  
                                                  l3035 FA68  
                                                  l3027 FA48  
                                                  l3019 FA2C  
                                                  l1339 86A6  
                                                  l2411 43C0  
                                                  l2403 436C  
                                                  l1435 DA16  
                                                  l1419 2FFE  
                                                  l2227 28DA  
                                                  l2083 879C  
                                                  l1603 E188  
                                                  l3044 7A3C  
                                                  l3028 FA4C  
                                                  l3060 16CE  
                                                  l3052 1648  
                                                  l2316 71DA  
                                                  l2308 71A6  
                                                  l2340 6FC6  
                                                  l2332 5714  
                                                  l2420 4422  
                                                  l2412 43CC  
                                                  l1700 806E  
                                                  l1460 7086  
                                                  l1196 8DFE  
                                                  l1428 DB1A  
                                                  l1436 DA98  
                                                  l2228 28FC  
                                                  l1532 E22C  
                                                  l1620 E212  
                                                  l1612 E1D6  
                                                  l1604 E19E  
                                                  l1540 DF38  
                                                  l3133 6A14  
                                                  l3045 7A40  
                                                  l3029 FA50  
                                                  l3061 16D2  
                                                  l2077 8F64  
                                                  l2341 6F6A  
                                                  l1373 7808  
                                                  l1429 D78A  
                                                  l2093 7306  
                                                  l2229 2926  
                                                  l2085 87B4  
                                                  l1533 DF06  
                                                  l3046 7A44  
                                                  l3070 16F6  
                                                  l3062 16D6  
                                                  l3054 1656  
                                                  l2078 8F58  
                                                  l2510 67EE  
                                                  l2334 5730  
                                                  l2414 43E4  
                                                  l2430 79C6  
                                                  l1710 0776  
                                                  l1374 77EA  
                                                  l3230 F40E  
                                                  l1622 E21A  
                                                  l1614 E1E2  
                                                  l1550 DF98  
                                                  l1542 DF40  
                                                  l1534 DF16  
                                                  l3135 6A70  
                                                  l3039 7A4C  
                                                  l3047 7A48  
                                                  l3071 16FA  
                                                  l3063 16DA  
                                                  l1295 90F8  
                                                  l2343 6F76  
                                                  l2327 569A  
                                                  l2423 4434  
                                                  l2407 4384  
                                                  l2431 79C0  
                                                  l4111 4898  
                                                  l4103 4808  
                                                  l1455 88A6  
                                                  l1463 704E  
                                                  l3231 F41E  
                                                  l1615 E1F0  
                                                  l1607 E1AA  
                                                  l1543 DF4A  
                                                  l1631 3E82  
                                                  l1448 7F94  
                                                  l3128 5816  
                                                  l3080 17AA  
                                                  l3072 16FE  
                                                  l3064 16DE  
                                                  l3056 168E  
                                                  l2504 90A8  
                                                  l2512 67F6  
                                                  l2352 6FB2  
                                                  l2360 8918  
                                                  l2432 79A4  
                                                  l1712 080C  
                                                  l4112 488C  
                                                  l1464 7056  
                                                  l3232 F42E  
                                                  l3224 F1D0  
                                                  l2088 87CA  
                                                  l1624 E226  
                                                  l1608 E1B6  
                                                  l1560 DFFA  
                                                  l1552 DFA0  
                                                  l1544 DF54  
                                                  l1536 DF1E  
                                                  l1640 3E3C  
                                                  l1632 3DB6  
                                                  l1449 7F74  
                                                  l3073 1702  
                                                  l3065 16E2  
                                                  l2521 6848  
                                                  l2513 67FE  
                                                  l2345 6F88  
                                                  l2329 56F2  
                                                  l2417 43F6  
                                                  l2409 43AE  
                                                  l2433 798E  
                                                  l1721 089E  
                                                  l1705 0780  
                                                  l4105 4874  
                                                  l1465 705E  
                                                  l3233 F43E  
                                                  l1617 E1F8  
                                                  l1609 E1C0  
                                                  l1553 DFB2  
                                                  l1545 DF64  
                                                  l1641 3E72  
                                                  l2610 7886  
                                                  l2602 7E3C  
                                                  l3058 171E  
                                                  l3074 1706  
                                                  l3066 16E6  
                                                  l2514 6808  
                                                  l2418 4408  
                                                  l2434 79B8  
                                                  l1722 086E  
                                                  l4114 48B4  
                                                  l4106 4864  
                                                  l1730 5B56  
                                                  l1466 7066  
                                                  l3226 F3D2  
                                                  l3330 8292  
                                                  l2098 7332  
                                                  l1570 E056  
                                                  l1562 E002  
                                                  l1554 DFBC  
                                                  l2611 7890  
                                                  l2603 7E46  
                                                  l3083 89C6  
                                                  l3075 170A  
                                                  l3067 16EA  
                                                  l3059 16CA  
                                                  l2435 7992  
                                                  l1715 07F0  
                                                  l1467 706E  
                                                  l3227 F3DE  
                                                  l3331 82C6  
                                                  l2099 7336  
                                                  l1619 E204  
                                                  l1563 E00E  
                                                  l1555 DFCC  
                                                  l1547 DF6C  
                                                  l1539 DF2A  
                                                  l1635 3DCA  
                                                  l3076 170E  
                                                  l3068 16EE  
                                                  l2516 6836  
                                                  l2348 6F98  
                                                  l2380 CC42  
                                                  l2372 CB70  
                                                  l2436 799A  
                                                  l4300 7C80  
                                                  l1716 0804  
                                                  l1732 5B76  
                                                  l1900 187C  
                                                  l1468 7076  
                                                  l3228 F3EE  
                                                  l3332 82A4  
                                                  l1580 E0B6  
                                                  l1572 E05E  
                                                  l1564 E018  
                                                  l1548 DF7E  
                                                  l1636 3DDE  
                            USBConfigureEndpoint@handle 0034  
                                                  l2189 9058  
                                                  l3077 1712  
                                                  l3069 16F2  
                                                  l2453 8F3A  
                                                  l1397 6BE4  
                                                  l2517 6826  
                                                  l2509 680E  
                                                  l2349 6FA2  
                                                  l2365 CF28  
                                                  l1717 0864  
                                                  l1709 0758  
                                                  l1469 707E  
                                                  l3229 F3FE  
                                                  l1581 E0C4  
                                                  l1573 E06E  
                                                  l1565 E028  
                                                  l1557 DFD4  
                                                  l1549 DF88  
                                                  l1637 3DF4  
                                                  l3350 7976  
                                                  l3342 31EA  
                                                  l3078 1716  
                                                  l2470 8116  
                                                  l1398 6BB4  
                                                  l2630 7D98  
                                                  l2710 84F4  
                                                  l2518 6846  
                                                  l2358 88FC  
                                                  l2390 CDBE  
                                                  l2374 CB92  
                                                  l2366 CAD4  
                                                  l2438 79D0  
                                                  l4310 823E  
                                                  l1718 081E  
                                                  l1734 5B96  
                                                  l1742 6068  
                                                  l1590 E10E  
                                                  l1574 E07A  
                                                  l1558 DFE0  
                                                  l3079 171A  
                                                  l2463 8B16  
                                                  l2631 7DA2  
                                                  l2519 682E  
                                                  l1719 0862  
                                                  l1727 5B36  
                                                  l1903 18EA  
                                                  l1743 606E  
                                                  l1591 E118  
                                                  l1583 E0CC  
                                                  l1575 E088  
                                                  l1567 E030  
                                                  l1559 DFEA  
                                                  l1639 3E1C  
                                                  l2616 8CBC  
                                                  l3336 3276  
                                                  l2800 4FC4  
                                                  l2472 812C  
                                                  l2448 8DAC  
                                                  l2392 CDEA  
                                                  l2384 CC84  
                                                  l2376 CBE0  
                                                  l1904 18C4  
                                                  l1744 6078  
                                                  l1592 E12E  
                                                  l1584 E0D6  
                                                  l1568 E03C  
                                                  l3337 3180  
                                                  l2465 8B22  
                                                  l3601 4B22  
                                                  l2369 CB3C  
                                                  l4305 821C  
                                                  l1921 030A  
                                                  l1761 0D46  
                                                  l1841 CA26  
                                                  l1833 C9FA  
                                                  l1745 607E  
                                                  l3329 82B6  
                                                  l1585 E0E0  
                                                  l1577 E090  
                                                  l1569 E046  
                                                  l2810 5EEE  
                                                  l2458 8F22  
                                                  l2714 84C0  
                                                  l2394 CE10  
                                                  l2386 CCAC  
                                                  l2378 CC0C  
                                                  l4306 8214  
                                                  l1922 02E4  
                                                  l1770 0E98  
                                                  l1762 0D20  
                                                  l1850 C788  
                                                  l1842 C6D6  
                                                  l1834 C650  
                                                  l1738 60A0  
                                                  l1746 6088  
                                                  l1586 E0F6  
                                                  l3339 3186  
                                                  l2811 5E84  
                                                  l2803 501E  
                                                  l3611 4210  
                                                  l3531 1C4E  
                                                  l1931 03E4  
                                                  l1771 0E72  
                                                  l1851 C762  
                                                  l1843 C702  
                                                  l1835 C67C  
                                                  l1907 1928  
                                                  l1747 608E  
                                                  l1739 6052  
                                                  l1595 E13A  
                                                  l1579 E0AA  
                                                  l2812 5ED0  
                                                  l3356 671A  
                                                  l2820 EF4C  
                                                  l3700 1DC8  
                                                  l2900 7DF4  
                                                  l3620 41C8  
                                                  l3612 4192  
                                                  l3540 1CDC  
                                                  l3532 1C64  
                                                  l2396 CF18  
                                                  l2388 CDB4  
                                                  l1932 03BE  
                                                  l1764 0D88  
                                                  l1860 C850  
                                                  l1844 C6DC  
                                                  l1836 C656  
                                                  l1908 1902  
                                                  l1748 6094  
                                                  l1596 E146  
                                                  l3365 626C  
                                                  l2565 7EBA  
                                                  l2805 5028  
                                                  l2661 76FC  
                                                  l2821 EFF2  
                                                  l3621 41D0  
                                                  l2477 87F8  
                                                  l3541 1CEA  
                                                  l3533 1C7A  
                                                  l4309 8234  
                                                  l1941 0448  
                                                  l1925 035E  
                                                  l1765 0D62  
                                                  l1861 C82A  
                                                  l1853 C7CA  
                                                  l1749 609A  
                                                  l2557 70EE  
                                                  l1597 E150  
                                                  l1589 E102  
                                                  l2566 7E7A  
                                                  l2830 F09C  
                                                  l2822 EF9E  
                                                  l4510 6C0A  
                                                  l3622 41D8  
                                                  l3614 4198  
                                                  l2478 8802  
                                                  l3542 1CFE  
                                                  l3534 1C90  
                                                  l2398 CF22  
                                                  l1790 11BC  
                                                  l1942 0454  
                                                  l1934 040A  
                                                  l1926 0338  
                                                  l1870 C8EE  
                                                  l1854 C7A4  
                                                  l1846 C744  
                                                  l1838 C6BE  
                                                  l2558 7112  
                                                  l1598 E166  
                                                  l2583 6C9E  
                                                  l2575 78E0  
                                                  l3359 6750  
                                                  l2671 6F5C  
                                                  l2823 F0BA  
                                                  l2903 5FB6  
                                                  l4511 6C62  
                                                  l3711 F6BC  
                                                  l2911 5F30  
                                                  l3623 41E0  
                                                  l3615 41A0  
                                                  l2479 880E  
                                                  l3543 1D0C  
                                                  l4503 835A  
                                                  l1791 1196  
                                                  l1943 0460  
                                                  l1935 041A  
                                                  l1767 0E56  
                                                  l1871 C91A  
                                                  l1863 C868  
                                                  l1847 C71E  
                                                  l1839 C698  
                                                  l3368 62AA  
                                                  l2568 7EA2  
                                                  l2584 6CA8  
                                                  l2576 78EA  
                                                  l2832 F112  
                                                  l3704 1EDE  
                                                  l3640 D402  
                                                  l3624 41E8  
                                                  l3616 41A8  
                                                  l3560 1B56  
                                                  l3552 1AFE  
                                                  l2920 431C  
                                                  l3536 1D5A  
                                                  l3544 1D1A  
                                                  l3528 1CB0  
                                                  l4504 8354  
                                                  l1784 1138  
                                                  l1936 042A  
                                                  l1928 03A2  
                                                  l1768 0E30  
                                                  l1872 C8F4  
                                                  l1864 C894  
                                                  l1856 C7E2  
                                                  l2833 F10A  
                                                  l2817 EF42  
                                                  l2905 5FC6  
                                                  l2913 5F64  
                                                  l3721 197E  
                                                  l3801 52CE  
                                                  l3633 D6AE  
                                                  l3641 D418  
                                                  l3625 41F0  
                                                  l3617 41B0  
                                                  l3561 1B7E  
                                                  l3545 1D3A  
                                                  l3529 1C38  
                                                  l1793 1232  
                                                  l1785 1112  
                                                  l1929 037C  
                                                  l1881 C9E2  
                                                  l1865 C86E  
                                                  l1857 C80E  
                                                  l1849 C75C  
                                                  l2586 6CE0  
                                                  l2834 F152  
                                                  l2906 601E  
                                                  l3714 5C9A  
                                                  l3650 D470  
                                                  l3642 D420  
                                                  l3634 D394  
                                                  l3626 41F8  
                                                  l3618 41B8  
                                                  l3562 1BA6  
                                                  l3554 1B04  
                                                  l3570 6196  
                                                  l1698 8062  
                                                  l1794 120C  
                                                  l1938 046C  
                                                  l1882 C9BC  
                                                  l1874 C95C  
                                                  l1858 C7E8  
                                                  l2851 7192  
                                                  l2827 F086  
                                                  l3707 F486  
                                                  l3635 D784  
                                                  l3651 D48E  
                                                  l3643 D428  
                                                  l3627 41FE  
                                                  l3619 41C0  
                                                  l2923 0086  
                                                  l3539 1CCE  
                                                  l1971 EA64  
                                                  l1787 117A  
                                                  l1939 043C  
                                                  l1875 C936  
                                                  l1867 C8D6  
                                                  l3732 2052  
                                                  l2588 6D00  
                                                  l2932 40AA  
                                                  l3812 54E4  
                      __end_of__parse_settings_spi_mode 51C8  
                                                  l3660 D59C  
                                                  l3652 D4AC  
                                                  l3644 D430  
                                                  l3636 D3AA  
                                                  l3628 4204  
                                                  l3556 1BD2  
                                                  l3572 61B0  
                                                  l1980 EAE8  
                                                  l1972 EA3C  
                                                  l4460 260A  
                                                  l1788 1154  
                                                  l1868 C8B0  
                                                  l2669 6EF2  
                                                  l2829 F094  
                                                  l4509 6C6C  
                                                  l2909 5F24  
                                                  l3725 1AAE  
                                                  l3805 5354  
                                                  l3661 D5BA  
                                                  l3653 D4CA  
                                                  l3645 D438  
                                                  l3637 D3C0  
                                                  l3629 420A  
                                                  l3557 1B1E  
                                                  l3549 1AD0  
                                                  l2925 0250  
                                                  l2917 429E  
                                                  l1981 EAC2  
                                                  l1965 EA20  
                                                  l1877 C974  
                                                  l3750 12EA  
                                                  l2950 FE26  
                                                  l2838 F18C  
                                                  l2934 40BA  
                                                  l3742 3AFC  
                                                  l3718 5D06  
                                                  l3662 D5D8  
                                                  l3654 D4E8  
                                                  l3646 D440  
                                                  l3638 D3D6  
                                                  l3558 1C16  
                                                  l3574 61F0  
                                                  l3582 7B52  
                                                  l2926 013E  
                                                  l1990 EB42  
                                                  l1966 E9FA  
                                                  l4462 261C  
                                                  l1878 C9A0  
                                                  l2839 F1A0  
                                                  l2943 3BCC  
                                                  l2935 4104  
                                                  l3735 2094  
                                                  l3663 D5F6  
                                                  l3655 D506  
                                                  l3647 D448  
                                                  l3639 D3EC  
                                                  l3559 1B38  
                                                  l3575 61BA  
                                                  l2927 0166  
                                                  l2919 42B6  
                                                  l4295 7C56  
                                                  l1983 EBDE  
                                                  l4463 2610  
                                                  l1879 C97A  
                                                  l1895 184C  
                                                  l3728 1F2E  
                                                  l3760 1382  
                                                  l3752 130C  
                                                  l2952 FE3E  
                                                  l2784 75FA  
                                                  l2936 417C  
                                                  l3672 08E6  
                                                  l3808 545E  
                                                  l3664 D614  
                                                  l3656 D524  
                                                  l3648 D450  
                                                  l3592 68B8  
                                                  l3576 61C6  
                                                  l3584 7B5E  
                                                  l2928 020E  
                                                  l3824 79E8  
                                                  l4296 7C4E  
                                                  l1976 EA7E  
                                                  l1896 1826  
                                                  l2849 713A  
                                                  l3753 1392  
                                                  l3761 138A  
                                                  l2953 FE86  
                                                  l2945 3BDC  
                                                  l2857 89D8  
                                                  l2937 4140  
                                                  l2961 4C7A  
                                                  l3665 D632  
                                                  l3657 D542  
                                                  l3649 D458  
                                                  l3825 79FC  
                                                  l1993 EBA8  
                                                  l1985 EB28  
                                                  l4465 265A  
                                                  l3762 144A  
                                                  l3754 135A  
                                                  l2954 001E  
                                                  l2786 7634  
                                                  l2946 3C98  
                                                  l2938 415C  
                                                  l3746 3BB8  
                                                  l3690 2304  
                                                  l2970 4C4A  
                                                  l2962 4C2E  
                                                  l3770 51C4  
                                                  l3666 D650  
                                                  l3658 D560  
                                                  l1978 EBC2  
                                                  l1994 EB82  
                                                  l1986 EB02  
                                                  l4474 26CC  
                                                  l4466 2642  
                                                  l4458 25DC  
                                                  l3755 13C0  
                                                  l2955 FF0C  
                                                  l2947 3C90  
                                                  l2859 89EA  
                                                  l4491 757A  
                                                  l2939 4178  
                                                  l3683 4620  
                                                  l2971 4C4E  
                                                  l3739 21A8  
                                                  l3667 D66E  
                                                  l3659 D57E  
                                                  l3843 69AA  
                                                  l4299 7C76  
                                                  l4483 5D12  
                                                  l4459 25EC  
                                                  l1899 18A2  
                                                  l3756 1362  
                                                  l2956 FF34  
                                                  l2876 453A  
                                                  l4492 7540  
                                                  l2892 2982  
                                                  l3676 0AAA  
                                                  l2980 4C72  
                                                  l2972 4C52  
                                                  l2964 4C32  
                                                  l3780 5076  
                                                  l3668 D68C  
                                                  l3844 699E  
                                                  l4468 268C  
                                                  l3757 136A  
                                                  l3749 134A  
                                                  l2957 FFDC  
                                                  l2885 4524  
                                                  l3693 39FE  
                                                  l2981 4C76  
                                                  l2973 4C56  
                                                  l2965 4C36  
                                                  l3773 5206  
                                                  l3597 0C46  
                                                  l4485 5D4E  
                                                  l1989 EB68  
                                                  l4469 2680  
                             ?__offset_from_file_number 0060  
                                                  l3758 1372  
                                                  l2894 2994  
                                                  l3686 21EE  
                                                  l2990 F948  
                                                  l2974 4C5A  
                                                  l2966 4C3A  
                                                  l3766 513E  
                                                  l4486 5D90  
                                                  l3759 137A  
                                                  l2879 44AC  
                                                  l2895 29F2  
                                                  l3679 457C  
                                                  l2991 F95A  
                                                  l2975 4C5E  
                                                  l2967 4C3E  
                                                  l3791 541C  
                                                  l3847 69DE  
                                                  l4479 81E6  
                                                  l2888 6E16  
                                                  l2992 F96C  
                                                  l2976 4C62  
                                                  l2968 4C42  
                                                  l3784 50FC  
                                                  l3848 69EC  
                                                  l3697 3ABA  
                                                  l2985 FA6C  
                                                  l2993 F97E  
                                                  l2977 4C66  
                                                  l2969 4C46  
                                                  l3777 528C  
                                                  l4497 8658  
                                                  l2898 7DE4  
                                                  l2994 F990  
                                                  l2986 F93C  
                                                  l2978 4C6A  
                                                  l3794 5526  
                                                  l4498 8646  
                                                  l2995 F9A2  
                                                  l2979 4C6E  
                                                  l3787 5396  
                                                  l3891 4F34  
                                                  l2996 F9B4  
                                                  l2988 F940  
                                                  l3892 4F42  
                                                  l3884 4EBA  
                                                  l2997 F9C6  
                                                  l2989 F944  
                                                  l3893 4F58  
                                                  l3885 4ED2  
                                                  l2998 F9D8  
                                                  l3798 55AC  
                                                  l2999 F9DC  
                                                  l3887 4F00  
                                                  l3888 4EF4  
                                 ??i2_SYSTEM_Initialize 002E  
                                                  STR_1 C484  
                                                  STR_2 C484  
                                                  STR_3 C484  
                                                  STR_4 C484  
                                                  STR_5 C484  
                                                  STR_6 C484  
                        __fill_buffer_get_display1@cntr 0067  
                                                  STR_7 C484  
                                                  STR_8 C484  
                                                  STR_9 C46F  
                        __fill_buffer_get_display1@line 0068  
                         __parse_calibration@out_buffer 0065  
                                         _i2c_frequency 02CB  
                                 ??_USBCtrlTrfTxService 002E  
                                                  _UCFG 000F39  
                                                  _UEP0 000F26  
                                                  _UEP1 000F27  
                                      ?_fat_create_file 00AC  
                                                  _UEIE 000F37  
                                                  _UEIR 000F63  
                                                  _UCON 000F65  
                                                  _TMR2 000FCC  
                                        ?_i2c_adc_start 006A  
                           __size_ofi2_USBStallEndpoint 0106  
                                 _i2c_digipot_reset_off 8A6C  
                    __fill_buffer_get_display1@position 0069  
                                  _system_output_toggle 8A92  
                                    ?__find_nth_cluster 0097  
                                __size_of_adc_calibrate 000C  
                          flash_read_from_buffer@length 0080  
                                 __size_of__delete_root 0050  
                                        ??_buck_operate 007E  
                                  api_parse@out_idx_ptr 010B  
                                        _ResetSenseData 746A  
                       __size_of_flash_read_from_buffer 0030  
                USBStdFeatureReqHandler@current_ep_data 0048  
                                                  _pDst 02C7  
                               fat_write_to_buffer@data 0088  
                                                  _main E5E2  
                                                  _last 02A9  
                                                  _itoa 81C0  
                              ??i2_USBTransferOnePacket 0032  
                            __end_of_fat_append_to_file 6048  
                       __parse_file_modify@return_value 00EA  
                        __parse_file_create@out_idx_ptr 00E1  
                           __size_of_APP_DeviceMSDTasks 0012  
                                                  fsr0h 000FEA  
                                                  fsr1h 000FE2  
                               __end_of_display_prepare 60E6  
                                                  indf0 000FEF  
                                                  fsr2h 000FDA  
                                                  fsr0l 000FE9  
                                                  indf1 000FE7  
                                                  indf2 000FDF  
                                                  fsr1l 000FE1  
                                                  fsr2l 000FD9  
                                       _USBDeviceAttach 85A8  
                                                  btemp 005B  
                                                  _utoa 5D0A  
                                __CFG_DSWDTOSC$T1OSCREF 000000  
                            ??_ExternalFlash_SectorRead 0093  
                                       ??_rtcc_get_year 0060  
                                  __size_of__buck_start 00C6  
                    __size_of_buck_remote_set_dutycycle 0024  
                           __fill_buffer_find_file@cntr 009E  
                          __display_charger@charger_off 0182  
                               ?_rtcc_get_hours_decimal 002E  
                          ?i2_ExternalFlash_MediaDetect 002E  
                             _ExternalFlash_MediaDetect 90DA  
                                                  prodh 000FF4  
                                                  prodl 000FF3  
      __get_available_offset_from_buffer@minimum_offset 0060  
                        fat_modify_file@number_of_bytes 00BD  
                                                  start C086  
                       __end_of_APP_DeviceMSDInitialize 9036  
                                 _display_get_character 8814  
                                ??__rtcc_bcd_to_decimal 0060  
                                  ??_USBCheckHIDRequest 002E  
                                      ?_MSDWriteHandler 002E  
                                  ??_rtcc_increment_day 0068  
                               __end_of_fat_modify_file 0042  
                                   ??__find_nth_cluster 009B  
                                  _rtcc_increment_hours 8BB0  
                        ??_MSDProcessCommandMediaAbsent 00A7  
                            __end_of_USBCheckStdRequest 4C2C  
                                ??_USBCtrlTrfOutHandler 0030  
                                  ?_rtcc_increment_year 002E  
                                  _rtcc_increment_month 8B6C  
                          ??__flash_copy_page_to_buffer 0076  
                      __fill_buffer_find_file@outBuffer 0098  
                        ?__flash_write_page_from_buffer 0073  
                                          ___param_bank 000000  
                             ??_USBStdFeatureReqHandler 0045  
                                          _USBOutHandle 02BF  
                      __end_of__fat_sector_from_cluster 8E1C  
                                __get_available_cluster 4F6A  
                              __end_of__display_charger EBFE  
                            __size_of_system_output_off 0056  
                         __write_value_to_offset@buffer 0062  
                                       ??_buck_get_mode 0060  
                       __size_of__flash_write_to_buffer 0052  
                              ??_USBStdGetStatusHandler 002E  
                              ??_buck_remote_get_status 0060  
                         __write_value_to_offset@offset 0060  
                                        ?_USBDeviceInit 002E  
                                     __flash_get_status 8540  
                  __make_cluster_chain@sector_in_buffer 00A6  
               __end_of_system_calculate_output_current 2E20  
              __size_of_system_calculate_output_current 0124  
                      ?_system_calculate_output_current 002E  
                     ??_system_calculate_output_current 006C  
                       _system_calculate_output_current 2CFC  
                                  __buck_set_sync_async 6F64  
                      __fat_offset_from_cluster@cluster 0060  
                            __end_of_rtcc_decrement_day 8B04  
                              _system_ui_inactive_count 02BB  
                                    _buck_remote_enable 01F0  
                            __buck_initial_dutycycle@dc 006E  
                                         __CFG_PLLDIV$2 000000  
    __end_of__parse_settings_i2c_masterModeSlaveAddress 54E8  
   __size_of__parse_settings_i2c_masterModeSlaveAddress 00C8  
          ??__parse_settings_i2c_masterModeSlaveAddress 0066  
           ?__parse_settings_i2c_masterModeSlaveAddress 0060  
            __parse_settings_i2c_masterModeSlaveAddress 5420  
                                       ??_rtcc_set_year 0060  
                         i2c_display_write_fixed@length 0067  
                            __end_of__get_first_cluster 7760  
                   __fill_buffer_get_display1@outBuffer 0064  
                              __end_of__parse_file_copy 3BBC  
                                ?_i2c_digipot_backlight 002E  
                                                 l22031 7540  
                               ?__fill_buffer_find_file 0096  
                                                 l22071 3F18  
                                                 l22315 89D0  
                                                 l24011 0494  
                                                 l24103 0630  
                                                 l24113 0658  
                                                 l24025 04DC  
                                                 l22355 448E  
                                                 l23251 1648  
                                                 l24115 0660  
                                                 l24053 056C  
                                                 l24039 0524  
                                                 l22519 1068  
                                                 l22607 EEA8  
                                                 l23265 168E  
                                                 l23257 1656  
                                                 l24065 0592  
                             __buck_set_sync_async@mode 0063  
                                                 l24091 060A  
                                                 l24075 05BA  
                                                 l21925 4F8E  
                                                 l22389 453A  
                                                 l23357 171E  
                                                 l24077 05C2  
                                                 l23375 89C6  
                                          spi_tx@length 0062  
                                                 l22747 29F2  
                                        ??_i2c_adc_read 0067  
                                                 l21949 502E  
                                                 l21983 6C0A  
                                                 l25351 06F0  
                                                 l26401 1B50  
                                                 l25371 079A  
                                                 l23597 DCAA  
                                                 l26239 FBD4  
                                                 l26175 8646  
                                                 l25543 73CA  
                                                 l25607 70C0  
                                                 l25555 5692  
                                                 l23885 5F28  
                                                 l25645 68B0  
                                                 l25813 7B56  
                                                 l27405 CB34  
                                                 l25807 7B4A  
                                                 l23897 5F5C  
                                                 l26289 FCFC  
                                                 l26617 65CA  
                                                 l27419 CB8A  
                                                 l26493 2F4A  
                                                 l25847 61BE  
                                                 l27801 7846  
                                                 l27617 234A  
                                                 l27491 CE10  
                                                 l25981 D46C  
                                                 l27645 23AC  
                                         ___fltol@sign1 0068  
                                                 l26881 805A  
                                       __end_of___aldiv 4F6A  
                                                 l28831 FA86  
                                                 l26887 8066  
                                    ?__flash_get_status 006C  
                                                 l28833 FB9E  
                               __end_of_fat_rename_file 5FA6  
                                                 l27797 7828  
                                                 ?_main 002E  
                         rtcc_increment_minutes@minutes 0068  
                                                 ?_itoa 0070  
                                                 STR_10 C47B  
                                                 STR_11 C48D  
                                                 STR_12 C462  
                                 ?_i2c_digipot_reset_on 002E  
                                      ??__display_clear 0060  
                     __size_of_USBCtrlEPServiceComplete 00FA  
                                    _buck_remote_set_on 8F28  
                                       __end_of___fltol 48C6  
                                 rtcc_decrement_day@day 0068  
                                       __end_of___lldiv 69FE  
                                                 ?_utoa 0067  
                      MSDCheckForErrorCases@DeviceBytes 006A  
                                                 u20030 7562  
                                                 u20200 3F80  
                                                 u20220 3F90  
                                                 u20037 7558  
                                                 u20150 3F58  
                                                 u21120 3C18  
                                                 u10800 744A  
                                                 u22000 71D0  
                                __end_of_USBDeviceTasks 2822  
                                                 u20410 F0EA  
                                                 u20330 EF84  
                                                 u21130 3C4A  
                                                 u10810 7456  
                                                 u20250 84F0  
                                                 u21140 3C64  
                                                 u20180 3F6E  
                                                 u20260 84BC  
                                                 u21125 3C0E  
                                                 u20430 F166  
                                                 u20350 EFFE  
                                                 u22110 5F94  
                                                 u21135 3C40  
                                                 u20280 5EBC  
                                                 u20440 F172  
                                                 u20360 F028  
                                                 u21240 5856  
                                                 u20600 4530  
                                                 u21080 29BA  
                                                 u10816 7458  
                                                 u10808 744E  
                                                 u10760 7412  
                                                 u22120 0062  
                                                 u21400 8220  
                                                 u20505 737A  
                                                 u21321 1660  
                                                 u20370 F034  
                                                 u20530 89F0  
                                                 u20610 453A  
                                                 u22210 412A  
                                                 u10770 7420  
                                                 u20380 F060  
                                                 u22300 054E  
                                                 u10780 742E  
                                                 u21245 584C  
                                                 u21085 29B0  
                                                 u22125 0056  
                                                 u21270 6A54  
                                                 u21190 FEAC  
                                                 u10790 743C  
                                                 u22215 4120  
                                                 u23040 1DC4  
                                                 u22400 0658  
                                                 u22320 058A  
                                                 u10768 7416  
                                                 u22145 00FA  
                                                 u20650 6DF0  
                                                 u22090 5F58  
                                                 u10778 7424  
                                                 u21370 7C5A  
                                                 u21275 6A4A  
                                                 u21195 FEA2  
                                                 u20475 7222  
                                                 u22420 068A  
                                                 u22340 05BA  
                                                 u22260 04BE  
                                                 u23140 5C96  
                                                 u10788 7432  
                                                 u20900 EE32  
                                                 u24100 56D6  
                                                 u20485 723E  
                                                 u10798 7440  
                                                 u20718 0F5C  
                                                 u20910 EE34  
                                                 u21710 DCDA  
                                                 u20495 735E  
                                                 u20719 0F70  
                                                 u23240 1F2A  
                                                 u22360 05EC  
                                                 u22280 0506  
                                                 u22440 69AE  
                                                 u25000 65F6  
                                                 u20665 0EDA  
                                                 u23090 F482  
                                                 u22610 5AC2  
                             ?_USBCtrlEPServiceComplete 002E  
                                                 u23340 3AF8  
                                                 u22380 0628  
                                                 u24220 0C36  
                                                 u21820 DE84  
                                                 u22525 7CF0  
                                                 u23190 197A  
                                                 u24310 61EE  
                                                 u24230 4B1A  
                                                 u20775 EC28  
                                                 u23440 5202  
                                                 u22720 8110  
                                                 u20928 EE40  
                                                 u21728 DCFC  
                                                 u21920 7302  
                                                 u20929 EE54  
                                                 u21729 DD10  
                                                 u23290 2090  
                                                 u22730 8126  
                                                 u20858 ED2A  
                                                 u26010 17C0  
                                                 u20859 ED3E  
                                                 u23540 5392  
                                                 u24260 7B86  
                                                 u21780 DDF6  
                                                 u24420 4826  
                                                 u26020 17DC  
                                                 u23390 513A  
                                                 u20798 EC60  
                                                 u21790 DE08  
                                                 u21678 DBD4  
                                                 u26110 027E  
                                                 u26030 17F8  
                                                 u21855 6B94  
                                                 u20799 EC74  
                                                 u21679 DBE8  
                                                 u22840 08E2  
                                                 u23640 52CA  
                                                 u21688 DC08  
                                                 u26120 029A  
                                                 u26040 1814  
                                                 u21689 DC1C  
                                                 u24425 481C  
                                                 u23490 5072  
                                                 u21970 71B6  
                                                 u26130 02B6  
                                                 u22940 21EA  
                                                 u23804 2B92  
                                                 u23740 2AE2  
                                                 u23900 0808  
                                                 u26300 E9B0  
                                                 u24380 4F04  
                                                 u24460 489E  
                                                 u24540 2696  
                                                 u26140 02D2  
                                                 u26060 1874  
                                                 u23805 2B8C  
                                                 u23590 5522  
                                                 u26310 E9CC  
                                                 u26070 18B8  
                                                 u23728 2AB0  
                                                 u26320 E9E8  
                                                 u26240 E908  
                                                 u25600 0D0E  
                                                 u23729 2AC4  
                                                 u22890 4578  
                                                 u23690 545A  
                                                 u23754 2AFA  
                                                 u24650 FBCE  
                                                 u23850 0704  
                                                 u26250 E924  
                                                 u26410 E2AA  
                                                 u26170 0374  
                                                 u23755 2AF4  
                                                 u27211 37C4  
                                                 u23764 2B34  
                                                 u23860 077A  
                                                 u26260 E940  
                                                 u26420 E2C6  
                                                 u26500 14B4  
                                                 u23765 2B2E  
                                                 u27221 37E6  
                                                 u22990 39FA  
                                                 u24670 FC04  
                                                 u26270 E95C  
                                                 u26430 E2E2  
                                                 u27231 3808  
                                                 u24840 FDA6  
                                                 u26360 EABC  
                                                 u26280 E978  
                                                 u25560 809A  
                                                 u23960 5B62  
                                                 u25800 C56C  
                                                 u26610 CBC6  
                                                 u23890 07AE  
                                                 u26290 E994  
                                                 u25650 10AA  
                                                 u23970 5B82  
                                                 u25810 C588  
                                                 u25730 C4A8  
                                                 u27410 47C2  
                                       __end_of___lwdiv 7C8A  
                                                 u23788 2B5C  
                                                 u25660 10C6  
                                                 u25580 0CC4  
                                                 u25820 C5A4  
                                                 u25740 C4C4  
                                                 u23789 2B72  
                                                 u26710 CDFC  
                                                 u25670 1100  
                                                 u25590 0CE0  
                                                 u26470 1460  
                                                 u25830 C5C0  
                                                 u25750 C4E0  
                                                 u27430 2D10  
                                                 u27415 47B8  
                                                 u27360 5DD6  
                                                 u27600 4074  
                                                 u26640 CC1E  
                                                 u26480 147C  
                                                 u25840 C5DC  
                                                 u25760 C4FC  
                                                 u27440 2DFA  
                                                 u27280 3E06  
                                                 u19425 6E8C  
                                                 u26650 CC38  
                                                 u26490 1498  
                                                 u25850 C5F8  
                                                 u25770 C518  
                          __flash_write_to_buffer@start 0073  
                                                 u24971 8766  
                                                 u27380 5DEA  
                                                 u26660 CC78  
                                                 u25860 C614  
                                                 u25780 C534  
                                                 u27605 406A  
                                                 u27445 2DF0  
                                                 u25790 C550  
                                                 u27550 2E34  
                                                 u27390 46E0  
                                                 u19800 307A  
                                                 u26920 2410  
                                                 u27560 2F1E  
                                                 u19545 78F6  
                                                 u27395 46D6  
                                                 u27740 E756  
                                                 u27565 2F14  
                                                 u19910 4FEE  
                                                 u27750 E7A2  
                                                 u19585 6CB4  
                                                 u19930 502E  
                                                 u26890 236E  
                                                 u27770 E870  
                                                 u27690 E614  
                                                 u19675 789C  
                                                 u27907 6828  
                                                 u19685 8A0A  
                                                 u27917 6830  
                                                 u27927 7E96  
                                                 u19960 718E  
                                                 u27937 7EA6  
                                       __end_of___lwmod 8248  
                                                 u27947 7EB0  
                                                 i2l300 60FE  
                                                 u19980 6C30  
                                                 i2l301 6102  
                                                 i2l302 611C  
                                                 i2l222 6302  
                                                 i2l310 8286  
                                                 i2l151 24FA  
                                                 i2l216 5784  
                                                 i2l224 6318  
                                                 i2l233 3D34  
                                                 i2l161 2722  
                                                 i2l234 3CDE  
                                                 i2l162 272E  
                                                 i2l251 4E54  
                                                 i2l323 64FC  
                                                 i2l147 249A  
                                                 i2l171 27B8  
                                                 i2l252 4E1C  
                                                 i2l228 6696  
                                                 i2l324 64F6  
                                                 i2l164 2754  
                                         __CFG_WDTEN$ON 000000  
                                                 i2l181 8398  
                                                 i2l309 8288  
                                                 i2l317 8462  
                                                 i2l149 24C2  
                                                 i2l157 26F4  
                                                 i2l342 58F6  
                                                 i2l262 33E6  
                                                 i2l334 7658  
                                                 i2l182 83A6  
                                                 i2l190 397C  
                                                 i2l430 4D56  
                                                 i2l238 3D5E  
                                                 i2l318 8460  
                                                 i2l174 27DE  
                                                 i2l166 2768  
                                                 i2l158 2704  
                                                 i2l255 4E94  
                                                 i2l247 4DEA  
                                                 i2l343 58FA  
                                                 i2l263 33C4  
                                                 i2l431 4D34  
                                                 i2l167 2774  
                                                 i2l159 270C  
                                                 i2l256 4E5C  
                                                 i2l344 5974  
                                                 i2l336 76A2  
                                                 i2l440 4D84  
                                                 i2l360 4B6C  
                                                 i2l176 27FE  
                                                 i2l168 279C  
                                                 i2l249 4DF4  
                                                 i2l345 593A  
                                                 i2l265 345A  
                                                 i2l441 4D9A  
                                                 i2l361 4B72  
                                                 i2l169 27A6  
                                                 i2l266 3440  
                                                 i2l186 38D4  
                                                 i2l194 3712  
                                                 i2l434 4DA4  
                                                 i2l282 2CE4  
                                                 i2l274 490E  
                                                 i2l362 4B78  
                                                 i2l178 281A  
                                                 i2l347 595A  
                                                 i2l427 4D46  
                                                 i2l291 2CDE  
                                                 i2l283 2BE0  
                                                 i2l363 4B8A  
                                                 i2l188 38FE  
                                                 i2l428 4D18  
                                                 i2l276 4980  
                                                 i2l364 4B90  
                                                 i2l541 3386  
                                                 i2l381 F7B6  
                                                 i2l285 2BF2  
                                                 i2l357 4BE8  
                                                 i2l438 4D64  
                                                 i2l550 5994  
                                                 i2l390 F908  
                                                 i2l374 F6E2  
                                                 i2l286 2C7C  
                                                 i2l366 4B96  
                                                 i2l358 4B64  
                                                 i2l439 4D7A  
                                                 i2l383 F836  
                                                 i2l375 F6E6  
                                                 i2l295 6158  
                                                 i2l367 4BB2  
                                                 i2l288 2C82  
                                                 i2l296 60F2  
                                                 i2l368 4BCA  
                                                 i2l393 F8C2  
                                                 i2l385 F800  
                                                 i2l377 F74C  
                                                 i2l289 2CD8  
                                                 i2l538 338E  
                                                 i2l554 59FA  
                                                 i2l386 F81C  
                                                 i2l539 32FA  
                                                 i2l395 F914  
                                                 i2l379 F794  
                                                 i2l299 616E  
                                                 i2l388 F882  
                                     fat_copy_file@name 00DD  
                                                 i2l549 5A2C  
                                                 i2l389 F88E  
                                                 i2l566 5A00  
                                                 i2l830 6906  
                                                 i2l824 6928  
                                                 i2l832 6910  
                                 rtcc_write_eeprom@date 0085  
                                                 i2l834 691A  
                                      ??__display_inout 0090  
                                                 i2l828 68F6  
                                                 i2l829 68FE  
                                                 i2l942 7CC8  
                                                 i2l951 7CB6  
                                                 i2l943 7C8E  
                                                 i2l784 7BFE  
                                                 i2l945 7C98  
                                                 _UADDR 000F38  
                                                 i2l787 7C34  
                                                 i2l949 7CAA  
                                                 _TMR0H 000FD7  
                                                 _TMR1H 000FCF  
                                                 _TMR0L 000FD6  
                                                 _TMR1L 000FCE  
                                 ??__parse_format_drive 008C  
               __end_of_system_calculate_output_voltage 4706  
              __size_of_system_calculate_output_voltage 00E2  
                      ?_system_calculate_output_voltage 002E  
                     ??_system_calculate_output_voltage 006C  
                       _system_calculate_output_voltage 4624  
                                                 _RPOR5 000EC5  
                                                 _RPOR6 000EC6  
                                                 _USTAT 000F64  
                                      __i2c_read@length 0067  
                           ?_ExternalFlash_CapacityRead 0060  
                                       ?_display_update 002E  
                              __end_of__display_startup 0EB0  
                              __find_nth_cluster@offset 009B  
                                __rtcc_verify_bcd@value 0063  
                    __size_of_USBCtrlEPAllowStatusStage 00C4  
                                       _i2c_eeprom_read 7CDE  
                                   ___lmul@multiplicand 0064  
                        __get_first_cluster@file_number 0097  
                              __end_of__display_outputs 048A  
                                          __delete_root 7F1A  
                             __end_of__find_nth_cluster 5F02  
                              __find_nth_cluster@sector 009F  
                                      __end_of_MSDTasks FE04  
                                            i2memcpy@d1 002E  
                                        __CFG_FCMEN$OFF 000000  
                                       __read_fat@value 0095  
                                    _USBCheckMSDRequest 5980  
                                            i2memcpy@s1 0030  
                                ??__buck_operate_remote 0076  
                       __end_of_USBCtrlEPAllowDataStage 634A  
                                                 _sd000 C45E  
                                __write_value_to_offset 846E  
                                                 _sd001 C387  
                                                 _sd002 C3BB  
                                                 _sd003 C42A  
                        ?_USBIncrement1msInternalTimers 002E  
                        __size_of_MSDTransferTerminated 0056  
                                   ??__flash_get_status 006E  
                                 _rtcc_get_year_decimal 8FE6  
                         __end_of_MSDTransferTerminated 7C36  
                   i2c_display_send_init_sequence@F6931 03BC  
                                          _gblCBWLength 02CC  
                                   ?_buck_remote_set_on 002E  
                            __end_of__parse_file_delete 4624  
                                            i2memset@p1 002E  
                                ?_MSDCheckForErrorCases 006A  
                                 ??__system_timer0_init 0060  
                                 __buck_start@dutycycle 0072  
                            __end_of__parse_file_append 1EF0  
                            __end_of__parse_file_create 2308  
                     __size_of_rtcc_get_minutes_decimal 0010  
                             ?_rtcc_get_minutes_decimal 002E  
                                 i2USBStallEndpoint@dir 002E  
                                __end_of_ResetSenseData 74CC  
                           rtcc_get_day_decimal@bcd_day 0063  
                            __end_of__parse_file_modify F6C2  
                            __end_of__display_usb@F7301 C11B  
                            __end_of__display_usb@F7303 C24E  
                            __end_of__display_usb@F7305 C23E  
                            __end_of__display_usb@F7307 C20E  
                            __end_of__parse_file_rename 3ABE  
                              fat_write_to_buffer@start 0084  
                              __parse_command_long@data 0100  
                                      ??_rtcc_get_hours 0060  
                                 ?_system_output_toggle 002E  
                             __data_sector_from_cluster 9016  
                         rtcc_increment_seconds@seconds 0068  
                                      ??_rtcc_get_month 0060  
                            __end_of__parse_file_resize 0AAE  
                     system_calculate_input_current@tmp 0070  
                               ?__fill_buffer_read_file 0100  
                                                 pclath 000FFA  
                                       __end_of_ui_init 8F80  
                                                 tablat 000FF5  
                             __size_of_USBStallEndpoint 010A  
                                   ?_USBCheckMSDRequest 002E  
                                       _MSDCommandState 0023  
                      __display_charger@charger_startup 0172  
                           ??_ExternalFlash_SectorWrite 008D  
                                                 plusw1 000FE3  
                                                 plusw2 000FDB  
                         __display_charger@charger_sync 0139  
                        __end_of_rtcc_get_hours_decimal 8FE6  
                        __parse_file_rename@file_number 00C6  
                                       __end_of_tmr_isr 6476  
                                           ?_USBMSDInit 002E  
              ExternalFlash_WriteProtectStateGet@config 0060  
                                                 ttemp5 005C  
                                                 ttemp6 005F  
                                                 ttemp7 0063  
                         __size_of__system_encoder_init 003E  
                                                 utoa@c 006F  
                                       __number_of_days 72D2  
                                                 utoa@v 006D  
                                                 status 000FD8  
              fat_copy_sector_to_buffer@physical_sector 00AE  
                           ?__flash_copy_page_to_buffer 0073  
                                     __CFG_DSWDTPS$8192 000000  
                                                 wtemp8 005C  
                              __end_ofi2_ResetSenseData 752E  
                     __size_of__parse_settings_i2c_mode 00C8  
                                       __end_of_strncmp 6C88  
                             ?__parse_settings_i2c_mode 0060  
                       ??__fill_buffer_get_calibration1 006D  
                       ??__fill_buffer_get_calibration2 006D  
                                      __end_ofi2_memcpy 77BC  
                           __end_of__display_efficiency E5E2  
                       __fill_buffer_read_file@inBuffer 0100  
                    __fill_buffer_read_buffer@outBuffer 008C  
                                      __end_ofi2_memset 894A  
                            fat_read_from_buffer@length 0086  
                        __display_temperature@external1 00A4  
                        __display_temperature@external2 00B0  
              __parse_settings_i2c_frequency@out_buffer 0062  
                        ??_MSDComputeDeviceInAndResidue 0062  
                              __ic2_display_set_address 88C6  
               __fill_buffer_get_file_details@outBuffer 0099  
                                     __buck_timer2_init 8E68  
                                        _MSDReadHandler 0EB0  
                                 ?_rtcc_increment_hours 002E  
                                 ??_rtcc_increment_year 0068  
                                 ?_rtcc_increment_month 002E  
                       fat_append_to_file@old_file_size 00EB  
                                 __size_of__display_usb 0192  
                   __parse_settings_spi_mode@out_buffer 0062  
                     __end_of_buck_remote_set_dutycycle 8B28  
                     __size_of_rtcc_get_seconds_decimal 0010  
                          __size_of_USBStdSetCfgHandler 00DC  
                     fat_create_file@number_of_clusters 00B8  
                         ??i2_ExternalFlash_MediaDetect 0030  
                             ?_rtcc_get_seconds_decimal 002E  
                           __end_of__make_cluster_chain F1AA  
                  __parse_sector_to_buffer@return_value 00BB  
                              __end_of_log_collect_data F448  
                     __make_cluster_chain@first_cluster 0095  
                                       __initialization 55B0  
                           __display_temperature@header 0090  
                         fat_read_from_file@file_number 00D7  
                              __parse_write_buffer@data 008A  
                                  ??_buck_remote_set_on 0060  
                                    ?__buck_timer2_init 002E  
                             __end_of__flash_get_status 8574  
                          fat_get_file_information@data 008F  
                           fat_read_from_file_fast@data 00A9  
                    spi_set_configuration@configuration 0060  
               __end_ofi2_ExternalFlash_MediaInitialize 8E50  
              __size_ofi2_ExternalFlash_MediaInitialize 001A  
                 __end_of_ExternalFlash_MediaInitialize 8C9E  
                __size_of_ExternalFlash_MediaInitialize 0022  
                     ??i2_ExternalFlash_MediaInitialize 0030  
                      ?i2_ExternalFlash_MediaInitialize 002E  
                       i2_ExternalFlash_MediaInitialize 8E36  
                         _ExternalFlash_MediaInitialize 8C7C  
                  __offset_from_file_number@file_number 0062  
                                           _system_init 37BA  
                        __size_of_system_encoder_enable 0010  
                               __end_of_fat_resize_file 3CBA  
                                          __end_of_main E8F6  
                                          __end_of_itoa 8204  
                         __end_of_system_encoder_enable 8FB6  
                                      _rtcc_set_minutes 8EC8  
                          __size_of__rtcc_increment_bcd 002E  
                                      _rtcc_set_seconds 8E98  
                       __end_of_i2c_display_write_fixed 7816  
                                          __end_of_utoa 5DB4  
                           ??__fill_buffer_get_display1 0066  
                         fat_read_from_file_fast@length 00A5  
                         fat_read_from_file_fast@offset 00BF  
                              __parse_command_short@cmd 008B  
                                 ?__buck_set_sync_async 0062  
                    fat_read_from_file_fast@read_length 00C3  
                                      __end_of_i2c_init 90A4  
                                    __flash_buffer_read 7D82  
                    __size_of_flash_copy_page_to_buffer 0020  
                           __end_of__rtcc_decrement_bcd 87E6  
                         fat_read_from_file_fast@sector 00BB  
                              __end_of__i2c_acknowledge 90DA  
                        __end_of__fill_buffer_find_file 68F4  
                       fat_append_to_file@new_file_size 00E7  
                                         ??__i2c_open_1 0060  
                                         _adc_calibrate 90A4  
                                  ??_USBCheckMSDRequest 0039  
                     __fill_buffer_get_status@outBuffer 0061  
                                        __CFG_OSC$HSPLL 000000  
                MSDComputeDeviceInAndResidue@DiExpected 0060  
                                _flash_read_from_buffer 866C  
                               _USBCheckMSDRequest$2693 0039  
                               _USBCheckMSDRequest$2694 003B  
                                 system_init@appendtext 0100  
                                __display_startup@F7250 C26E  
                                __display_startup@F7244 C190  
                                __display_startup@F7246 C319  
                                __display_startup@F7248 C346  
                             __size_of_USBCtrlEPService 0096  
                                          __get_fat@idx 0060  
                                          __get_fbr@idx 0060  
                                         _startup_timer 01F1  
                                   ??__buck_timer2_init 0060  
                                  api_prepare@outBuffer 0116  
                                                ??_main 01D3  
                                      __end_of__i2c_get 90D0  
                                                ??_itoa 0076  
                                    USBStallEndpoint@ep 0065  
                                  __size_of__ui_encoder 0394  
                                                ??_utoa 006D  
                                         __activetblptr 000003  
                                       ?_USBDeviceTasks 002E  
                              _fat_get_file_information 6D7E  
                              __flash_buffer_read@start 0073  
                                    __write_root@offset 008C  
                                          __get_mbr@idx 0060  
            __end_of_ExternalFlash_WriteProtectStateGet 9114  
           __size_of_ExternalFlash_WriteProtectStateGet 0004  
                  ??_ExternalFlash_WriteProtectStateGet 0062  
                   ?_ExternalFlash_WriteProtectStateGet 0060  
                    _ExternalFlash_WriteProtectStateGet 9110  
                                   __find_nth_cluster@n 0099  
                                   ?__flash_buffer_read 0073  
                                           ?_USBSuspend 002E  
                                    __write_root@sector 008A  
           __i2c_eeprom_load_default_calibration@buffer 0060  
                                  __size_of_api_prepare 0168  
                           __end_of_rtcc_decrement_year 8BF4  
                       __size_of_rtcc_increment_minutes 0022  
                       __size_of_rtcc_increment_seconds 0022  
                             ??__buck_initial_dutycycle 006D  
                                      ??_rtcc_set_hours 0060  
                                      ??_rtcc_set_month 0060  
                         __get_available_cluster@offset 0091  
                                ?_spi_set_configuration 002E  
               fat_write_sector_from_buffer@file_number 00B0  
                         __get_available_cluster@sector 0093  
                  fat_copy_sector_to_buffer@file_number 00B2  
                              ??_buck_remote_set_enable 0060  
                        __display_efficiency@efficiency 00C6  
                    fat_write_sector_from_buffer@sector 00A2  
                              __end_of_rtcc_get_minutes 9060  
                              __end_of_rtcc_get_seconds 9052  
                           __size_of__write_calibration 0094  
                         __flash_write_to_buffer@buffer 0079  
                                __display_startup@line1 007C  
                                __display_startup@line2 009E  
                                __display_startup@line3 00A7  
                                __display_startup@line4 008F  
                               __end_of_USBDeviceAttach 85DA  
                                __flash_write_to_buffer 7E26  
                       i2c_digipot_reset_off@data_array 006A  
                                       ??_i2c_adc_start 006C  
                        __end_of__fill_buffer_read_file 0CB2  
                                                _ADRESH 000FC4  
                                                _ADRESL 000FC3  
                      __end_of__fat_offset_from_cluster 8E36  
                                                _CCPR1L 000FBB  
                                                _EECON2 000FA7  
                                                _DMABCH 000F66  
                                                _DMABCL 000F67  
                            ?_fat_copy_sector_to_buffer 00A2  
                                ?_i2c_digipot_reset_off 002E  
                                       ?_ResetSenseData 002E  
                           ??__get_available_root_entry 0095  
                                            __i2c_start 90F6  
                                SYSTEM_Initialize@state 0060  
                                            __i2c_write 7ECA  
                                  _fat_read_from_buffer 8D22  
                                          __display_usb 17AE  
                                      __end_of_adc_init 8D98  
                                      __end_of_adc_read 686E  
                                                i2l1130 6438  
                                                i2l1122 644E  
                                                i2l1131 6422  
                                                i2l1132 644C  
                                                i2l1124 6406  
                                                i2l1133 6428  
                                                i2l1125 63EE  
                                                i2l1134 642E  
                                                i2l1126 641A  
                             fat_read_from_file@cluster 00D8  
                                                i2l1135 6458  
                                                i2l1127 63F4  
                                                i2l1136 6466  
                                                i2l1128 63FC  
                                                i2l1137 6464  
                                                i2l1139 6472  
                  __flash_write_page_from_buffer@buffer 0075  
                                                i2l4491 77AA  
                                                i2l4492 7772  
                                                i2l4497 8938  
                                                i2l4498 8928  
                       ??_APP_DeviceCustomHIDInitialize 003A  
                              ?__fill_buffer_get_status 0061  
                                      __end_of__get_fat 7A86  
                                      __end_of__get_fbr FBAE  
                                      __end_of__get_mbr 4CFC  
                                                _OSCCON 000FD3  
                           __flash_partial_read@address 0083  
                          ??_get_next_eeprom_write_task 0060  
                                                _RTCCAL 000F3E  
                                        __CFG_WDTPS$512 000000  
                                                _RPINR1 000EE1  
                                                _RPOR21 000ED5  
                                                _RPINR2 000EE2  
                                                _RPOR22 000ED6  
                                                _RPINR3 000EE3  
                                                _RPOR23 000ED7  
                             __end_of__buck_timer2_init 8E80  
                                        __CFG_WPCFG$OFF 000000  
                                 __display_itoa@missing 008E  
                                __end_of_MSDReadHandler 1098  
                                     __spi_init@details 0060  
                               __display_charger@fan_on 0108  
                               __display_charger@header 010F  
                               i2c_eeprom_write@address 006A  
                                      __end_of___xxtofl 26DE  
                              i2USBTransferOnePacket@ep 0036  
                                      ??__i2c_wait_idle 0060  
                                     ??i2_USBDeviceInit 0036  
                                ?_display_get_character 0060  
                                      ?_display_prepare 002E  
                       __size_ofi2_USBTransferOnePacket 0102  
                                     ?__get_input_power 006E  
                               __write_calibration@addr 0097  
                                  ??__flash_buffer_read 007A  
                                 __parse_file_copy@data 00F0  
                           __flash_partial_read@command 007F  
                               __write_calibration@cntr 009C  
                                        __CFG_WPDIS$OFF 000000  
                                      __read_fat@offset 0093  
                                      _i2c_eeprom_tasks 704C  
                                      __read_fat@sector 0091  
                                     _shortPacketStatus 002A  
                     fat_append_to_file@number_of_bytes 00E3  
                                        __CFG_XINST$OFF 000000  
                                      _i2c_eeprom_write 6B86  
                                    ??__get_input_power 0070  
                                      ?_fat_modify_file 00A1  
                                       rtcc_set_day@day 0060  
                                       USBDeviceTasks@i 004C  
                                           i2memcpy@tmp 0038  
                                          _CCPTMRS0bits 000F52  
                           USBStdFeatureReqHandler@pUEP 0046  
                              USBTransferOnePacket@data 0061  
                            USBCtrlTrfInHandler@lastDTS 002F  
                          __end_of__flash_set_page_size 712A  
                                       ??_USBDeviceInit 0068  
                    __flash_copy_page_to_buffer@command 0079  
                              __end_of_rtcc_correct_day 8D02  
                              flash_partial_read@length 008B  
                                                ___lmul 79D6  
                    __parse_buffer_to_sector@out_buffer 00B3  
                                                _gblCBW 0248  
                                             ??___aldiv 0068  
                                     _fat_get_file_size 6DF8  
                                    __size_of__i2c_read 0094  
                                    __size_of__i2c_send 000A  
                                        __CFG_STVREN$ON 000000  
                        __read_value_from_offset@buffer 0062  
                                    __size_of__i2c_stop 0008  
                                             ??___fltol 0064  
                                             ??___lldiv 0068  
           i2SYSTEM_Initialize@pll_startup_counter_3409 0030  
             SYSTEM_Initialize@pll_startup_counter_3409 0063  
                         __parse_file_delete@out_buffer 00B1  
                                             ??___lwdiv 0064  
                          __size_of_flash_partial_write 0078  
                                        ?_adc_calibrate 002E  
                                            _SoftDetach 01F4  
                                             ??___lwmod 0064  
                                                _buffer 0800  
     __end_of__parse_settings_i2c_slaveModeSlaveAddress 5358  
    __size_of__parse_settings_i2c_slaveModeSlaveAddress 00C8  
           ??__parse_settings_i2c_slaveModeSlaveAddress 0066  
            ?__parse_settings_i2c_slaveModeSlaveAddress 0060  
             __parse_settings_i2c_slaveModeSlaveAddress 5290  
                                     _USBEnableEndpoint 8388  
                        __read_value_from_offset@offset 0060  
                       __size_of_USBStdGetStatusHandler 009C  
                     __size_of__parse_settings_spi_mode 00C8  
                       __size_of_buck_remote_get_status 002E  
                             ?__parse_settings_spi_mode 0060  
                               system_output_off@output 0061  
                                       __get_date@month 0069  
                                                _memcpy 752E  
                            ?_adc_calculate_temperature 006C  
                                    ?_fat_get_file_size 0095  
                                                _memset 863C  
                      __end_of__sector_from_file_number 872C  
                               __end_of_i2c_eeprom_read 7D30  
                               __parse_sector_to_buffer 1940  
                                                clear_0 5618  
                                                clear_1 562C  
                                                clear_2 563E  
                                                clear_3 564A  
                                                clear_4 5656  
                                                clear_5 5666  
                             _ExternalFlash_SectorWrite 84A4  
                                     api_parse@inBuffer 0106  
                                       __CFG_CLKOEC$OFF 000000  
                                      __end_of_inq_resp C40D  
                                                _reboot 9120  
                                ??_i2c_digipot_reset_on 006A  
                     __end_of_flash_copy_page_to_buffer 8D22  
                                                _ui_run 3DB4  
                               ?_system_encoder_disable 002E  
                                                _spi_tx 7924  
                                    ?_USBEnableEndpoint 0036  
                          __size_of__buck_operate_local 0472  
                                  __end_of_buck_operate 79D6  
                                    _flash_partial_read 85DA  
                __make_cluster_chain@number_of_clusters 0097  
                                                _tx_buf 03D7  
                                                _status 01EF  
                         __parse_file_resize@out_buffer 00DD  
                                      ?_fat_rename_file 0097  
                                                _strlen 834A  
                            __parse_command_long@length 00FC  
                       ??__parse_settings_spi_frequency 0066  
                             fat_copy_file@return_value 00EC  
                               ?_rtcc_decrement_minutes 002E  
                               ?_rtcc_decrement_seconds 002E  
                                __display_outputs@F7311 C28B  
                                __display_outputs@F7313 C21E  
                                __display_outputs@F7315 C0CA  
                                __display_outputs@F7317 C0B5  
                                __size_of__buck_prepare 0064  
                         __size_of_USBTransferOnePacket 0106  
                                   __size_of_USBMSDInit 010E  
                           i2c_display_write_fixed@data 0065  
           i2c_display_send_init_sequence@init_sequence 006A  
                                __size_of__flash_wakeup 0052  
                                                itoa@cp 0076  
                                     _i2c_set_frequency 869C  
                                 system_init@extension2 017E  
                                 __end_of_fat_find_file 453E  
                        __parse_command_long@out_buffer 0102  
                buck_remote_set_synchronous@synchronous 0060  
                                   ??_fat_get_file_size 0099  
                         __size_of__parse_command_short 00F0  
                      __size_of__read_value_from_offset 0048  
                                ?_rtcc_get_year_decimal 002E  
                        __display_charger@charger_async 0124  
                      __size_of_fat_read_from_file_fast 0226  
                   __size_of_get_next_eeprom_write_task 002C  
                                          __mediumconst C08A  
                                   __end_of__i2c_open_1 8E68  
                            __size_of__find_nth_cluster 00A6  
                     __fill_buffer_read_buffer@inBuffer 008A  
                        i2c_digipot_reset_on@data_array 006A  
                                                tblptrh 000FF7  
                                                tblptrl 000FF6  
                                                tblptru 000FF8  
                                      __end_of_spi_init 82CC  
                             __rtcc_decrement_bcd@value 0067  
                           __end_of__display_time@F7270 C332  
                           __end_of__display_time@F7272 C306  
                           __end_of__display_time@F7264 C2A7  
                           __end_of__display_time@F7280 C1D9  
                           __end_of__display_time@F7266 C319  
                           __end_of__display_time@F7274 C2F1  
                           __end_of__display_time@F7282 C26E  
                           __end_of__display_time@F7290 C25E  
                           __end_of__display_time@F7268 C310  
                           __end_of__display_time@F7276 C2E5  
                           __end_of__display_time@F7284 C1C7  
                                             ??_ui_init 0060  
                           __end_of__display_time@F7278 C157  
                           __end_of__display_time@F7286 C143  
                           __end_of__display_time@F7288 C12F  
                      __size_of_APP_DeviceMSDInitialize 0010  
                       ??__flash_compare_page_to_buffer 0076  
                                   ??_USBEnableEndpoint 0037  
                                    ?_i2c_set_frequency 002E  
                     __end_of__display_efficiency@F7342 C17D  
                     __end_of__display_efficiency@F7344 C16A  
                     __end_of__display_efficiency@F7346 C28B  
                                   ?_flash_partial_read 0087  
                               __end_of__number_of_days 733A  
                             __fill_buffer_get_display1 7B34  
                                             ??_tmr_isr 002E  
                                         spi_tx_rx@data 0064  
                     __size_of__fat_sector_from_cluster 001A  
                            __end_of__root_is_available 7196  
                               __spi_external_rx_buffer 0400  
                                ??_system_output_toggle 0062  
                             ?__fat_sector_from_cluster 0060  
                                         spi_tx_tx@data 0064  
                             __size_of_system_output_on 004E  
                                 __end_of_fat_copy_file 418C  
                                           _CtrlTrfData 000D38  
                  __end_of_buck_remote_change_dutycycle 8132  
                 __size_of_buck_remote_change_dutycycle 004A  
                          _buck_remote_change_dutycycle 80E8  
                                             ??_strncmp 0066  
                                  __size_of__write_root 004C  
                           __end_of_fat_write_to_buffer 8D5E  
                                 ?_fat_read_from_buffer 0084  
                    buck_remote_change_dutycycle@change 0060  
                                 __end_of_ui_get_status 910A  
                    __size_of_buck_remote_get_dutycycle 0004  
                                __display_outputs@line3 0060  
                                __display_outputs@line4 0075  
                     i2ExternalFlash_MediaDetect@config 002E  
                       ExternalFlash_MediaDetect@config 0060  
                                  _controlTransferState 0029  
                            ??_APP_DeviceCustomHIDTasks 00FF  
                                  __CFG_LS48MHZ$SYS48X8 000000  
                                          ___xxtofl@arg 0078  
                               __spi_external_tx_buffer 0440  
                                          ___xxtofl@exp 0077  
                               ?_rtcc_get_month_decimal 002E  
                                     _SYSTEM_Initialize 7816  
                                          ___xxtofl@val 006E  
                         __size_of__display_temperature 01C8  
                                 fat_modify_file@length 00A5  
                                 fat_modify_file@offset 00BB  
                                   ??_i2c_set_frequency 0060  
                                            __accesstop 0060  
                               __end_of__initialization 566C  
                                 fat_modify_file@sector 00B6  
                     MSDCheckForErrorCases@MSDErrorCase 0070  
                                       ?_MSDReadHandler 002E  
                          __size_of__buck_set_dutycycle 006A  
                          fat_resize_file@first_cluster 00B8  
                                  __end_of_i2c_adc_read 7D82  
             __parse_settings_i2c_frequency@out_idx_ptr 0064  
                                ??_rtcc_increment_hours 0068  
                                    ?_SYSTEM_Initialize 002E  
                                ??_rtcc_increment_month 0068  
                                __size_of__display_itoa 0206  
                                         ___rparam_used 000001  
                                __size_of__display_time 0640  
                                _rtcc_increment_minutes 8B8E  
                                _rtcc_increment_seconds 8B4A  
                              __size_of_USBStallHandler 0044  
                                            ___fltol@f1 0060  
                          __end_of__i2c_not_acknowledge 90C6  
                       ExternalFlash_SectorWrite@config 0084  
                       ExternalFlash_SectorWrite@buffer 008A  
                       __end_of__buck_initial_dutycycle 5AF6  
                      __fill_buffer_read_file@file_size 0108  
                           __end_of__parse_command_long D788  
                         __size_of_rtcc_get_day_decimal 0010  
                                    __size_of__get_data 002A  
                                    __size_of__get_date 0068  
                  __parse_settings_spi_mode@out_idx_ptr 0064  
                             __end_of_fat_get_file_size 6E72  
                                   __size_of_USBSuspend 0030  
                                    __size_of__get_time 006A  
                                    __size_of__get_root 0198  
                              __end_of_rtcc_read_eeprom 2964  
             __parse_settings_spi_frequency@out_idx_ptr 0064  
                                  ??_flash_partial_read 008F  
                                        __pcstackCOMRAM 002E  
                            __size_of__flash_get_status 0034  
                             __end_of_USBEnableEndpoint 83C4  
                                ??__buck_set_sync_async 0063  
                      __size_of__parse_buffer_to_sector 0166  
                   __size_of_ExternalFlash_CapacityRead 0014  
                                    __rtcc_write_enable 8F40  
                               _battery_voltage_maximum 02F9  
                 __end_of__fill_buffer_get_calibration1 63E0  
                __size_of__fill_buffer_get_calibration1 0096  
                         __fill_buffer_get_calibration1 634A  
                 __end_of__fill_buffer_get_calibration2 704C  
                __size_of__fill_buffer_get_calibration2 0074  
                         __fill_buffer_get_calibration2 6FD8  
                             fat_read_from_buffer@start 0084  
                                         __end_of_sd000 C462  
                                         __end_of_sd001 C3BB  
                                         __end_of_sd002 C3E9  
                                         __end_of_sd003 C444  
                                  buck_remote_set_on@on 0060  
                                             ?_MSDTasks 002E  
                                          __pidataBANK2 894A  
                                          __pidataBANK3 8842  
                                          __pidataBANK5 726A  
                                      ?_fat_resize_file 00AC  
                                   ??_SYSTEM_Initialize 0060  
                             __get_available_root_entry 89CA  
                                   fat_rename_file@cntr 00BD  
                                   fat_rename_file@name 0097  
                                  __rtcc_verify_bcd@max 0061  
                                  __rtcc_verify_bcd@min 0060  
                  ExternalFlash_SectorWrite@sector_addr 0086  
                        __parse_file_modify@file_number 00EB  
                      __size_of_USBCtrlEPAllowDataStage 0098  
                                    __buck_prepare@cntr 0060  
                                   fat_rename_file@root 009D  
                  __size_of_i2c_eeprom_read_calibration 011E  
                             rtcc_decrement_hours@hours 0068  
                                    __size_of__read_fat 0058  
                                       _active_protocol 01FE  
                                   i2USBStallEndpoint@p 0034  
                        __end_of_system_encoder_disable 9104  
                         __size_of_USBConfigureEndpoint 0094  
                    __size_of_ExternalFlash_MediaDetect 000A  
                           __end_of_USBCtrlTrfInHandler 5980  
                          ?_buck_remote_set_synchronous 002E  
                                   _userInterfaceStatus 01F2  
                        __end_of_rtcc_decrement_minutes 8C5A  
                        __end_of_rtcc_decrement_seconds 8C16  
                                   display_prepare@mode 00D5  
                                          _gblSenseData 0267  
                          fat_copy_file@new_file_number 00EB  
                                       _MSDErrorHandler 3062  
                        ?_ExternalFlash_MediaInitialize 0060  
                  __sector_from_file_number@file_number 0062  
                            flash_write_to_buffer@start 007E  
                             __end_of_i2c_set_frequency 86CC  
                                   ?__rtcc_write_enable 002E  
                                i2_USBTransferOnePacket 38BE  
                                   system_init@filename 0168  
                          __size_of_system_output_is_on 001A  
                                    __size_of_api_parse 0170  
                                            __buck_stop 88F2  
                                    _flash_sector_write 76A8  
                                    _fat_read_from_file 427C  
                          buck_remote_set_enable@remote 0060  
                    __parse_sector_to_buffer@out_buffer 00B5  
                                    __size_of__spi_init 0038  
                                             ?i2_memcpy 002E  
                            fat_delete_file@file_number 00AE  
                                             ?i2_memset 002E  
                                    __parse_calibration 127E  
                               flash_sector_write@match 0083  
                 __end_of_MSDProcessCommandMediaPresent DF04  
                __size_of_MSDProcessCommandMediaPresent 03BA  
                         _MSDProcessCommandMediaPresent DB4A  
                                flash_partial_read@data 008D  
                                    __size_of_buck_init 000E  
                                flash_partial_read@page 0087  
                                         __get_data@idx 0060  
                                         __get_date@day 006A  
                       __size_of_buck_remote_set_enable 001C  
                              ??_USBCtrlTrfSetupHandler 004B  
                               _USBTicksSinceSuspendEnd 01F7  
                     __flash_copy_page_to_buffer@buffer 0075  
                                      ?_USBDeviceAttach 002E  
                             __end_of_SYSTEM_Initialize 7870  
                                     __end_of__i2c_read 65A0  
                          __size_of__rtcc_write_disable 0016  
                                     __end_of__i2c_send 90EE  
                                _USBStdGetStatusHandler 60E6  
                        __end_of_rtcc_get_month_decimal 9006  
                                   ?_flash_sector_write 007F  
                                   USBStallEndpoint@dir 0060  
                                     __end_of__i2c_stop 90F6  
                                _buck_remote_get_status 87E6  
                                           ?__i2c_start 002E  
                                   ?_fat_read_from_file 00C9  
                                           ?__i2c_write 0065  
                         __read_value_from_offset@value 0067  
                                            __pbssBANK0 00FF  
                                            __pbssBANK1 01D5  
                                            __pbssBANK2 0200  
                                            __pbssBANK3 0300  
                                            __pbssBANK4 0400  
                                 _flash_write_to_buffer 86CC  
                                   ?__parse_calibration 0063  
                   __parse_sector_to_buffer@file_number 00BA  
                      __size_of_i2c_display_write_fixed 005A  
                                      _USBStallEndpoint 34A4  
                                            _gblNumBLKS 0314  
                         ?_buck_remote_change_dutycycle 002E  
                                             ?_i2c_init 002E  
                        __parse_sector_to_buffer@sector 00BC  
                      __fill_buffer_read_file@outBuffer 0102  
                                    _buck_get_dutycycle 910A  
                             __size_of__rtcc_verify_bcd 0046  
                     __end_of_buck_remote_get_dutycycle 9118  
                                  ??__rtcc_write_enable 0060  
                          ??_schedule_eeprom_write_task 0060  
                            __size_of__buck_timer2_init 0018  
                                      _mediaInformation 02CD  
                          __end_of_rtcc_decrement_hours 8C7C  
                          __end_of_rtcc_decrement_month 8C38  
                                         __buck_prepare 73A2  
                        fat_get_file_information@offset 0094  
                        __get_available_cluster@cluster 008F  
                       ??__fill_buffer_get_file_details 009B  
                                         __flash_wakeup 7E78  
                              __fill_buffer_get_display 6182  
                             rtcc_decrement_month@month 0068  
                               ?__get_available_cluster 008B  
                                             ?__i2c_get 002E  
                           __size_of_USBWakeFromSuspend 0038  
                                           _pBDTEntryIn 0007  
                           __size_of_i2c_display_cursor 002A  
                      __end_of_USBCtrlEPServiceComplete 3DB4  
                 __end_of_APP_DeviceCustomHIDInitialize 85A8  
                __size_of_APP_DeviceCustomHIDInitialize 0034  
                         _APP_DeviceCustomHIDInitialize 8574  
                                  log_collect_data@temp 0078  
                           MSDTransferTerminated@handle 0039  
                    __size_of__data_sector_from_cluster 0010  
                        ??__parse_settings_spi_polarity 0066  
                          __size_of__parse_write_buffer 015A  
                                   ?_buck_get_dutycycle 002E  
                    ExternalFlash_SectorSizeRead@config 0060  
                                  USBCtrlTrfRxService@i 002E  
                                       ??_adc_calibrate 0060  
                                __size_of_log_start_new 00DA  
                             ??__parse_sector_to_buffer 00B9  
                                               ?___lmul 0060  
                                            ??_MSDTasks 00AC  
                                __display_itoa@decimals 007A  
                               ??_i2c_digipot_backlight 006A  
                                            _fat_format 048A  
                                  ??_flash_sector_write 0083  
                                     ?__display_charger 002E  
                     __size_of__fat_offset_from_cluster 001A  
                        __flash_write_to_buffer@command 007A  
                                  ??_fat_read_from_file 00D3  
                         rtcc_decrement_minutes@minutes 0068  
                          __size_of__flash_partial_read 007A  
                             ?__fat_offset_from_cluster 0060  
                       ??__parse_settings_i2c_frequency 0066  
                              __size_of_fat_delete_file 0052  
                                             MSDTasks@i 00B1  
                                               _CCP1CON 000FBA  
                                  i2c_adc_start@channel 006C  
                                  ??__parse_calibration 0069  
                                               ?_memcpy 0060  
                                    _fat_append_to_file 5FA6  
                                               ?_memset 0060  
                    __parse_settings_i2c_frequency@data 0060  
                                        ___lmul@product 0068  
                                            _device_dsc C444  
                   fat_get_file_information@file_number 0096  
                                      ??_display_update 0070  
                        __parse_buffer_to_sector@sector 00BA  
                                               ?_reboot 002E  
                                         __get_root@idx 0060  
                                      ?_i2c_eeprom_read 0071  
                                           __i2c_open_1 8E50  
                                    ??__display_charger 0090  
                                      _USBCtrlEPService 6476  
                     system_calculate_input_voltage@tmp 0070  
                                               ?_ui_run 002E  
                                            _ep_data_in 01EB  
                                               ?_spi_tx 0060  
                                    __display_clear@col 0063  
                                             ?_adc_init 002E  
                                             ?_adc_read 0060  
                                rtcc_read_eeprom@buffer 0092  
                                    __display_clear@row 0062  
                              __delete_root@file_number 008D  
                                     ?__parse_file_copy 00F0  
                                               ?_strlen 0060  
                         fat_append_to_file@file_number 00F0  
                                             ?__get_fat 0060  
                                             ?__get_fbr 0060  
                         ??_buck_remote_set_synchronous 0060  
                 __data_sector_from_cluster@fat_cluster 0060  
                                             ?__get_mbr 0060  
                           __end_of_USBCtrlTrfRxService 34A4  
                                         __display_itoa 06A2  
                               ?__write_value_to_offset 0060  
                                         __display_time C492  
                                    _USBCheckStdRequest 4B54  
                             __write_calibration@buffer 0087  
                                     _configDescriptor1 C347  
                    __parse_file_append@number_of_bytes 00FA  
                                               i2l14345 4DF4  
                                               i2l14293 7C98  
                                               i2l15343 8928  
                                               i2l14297 7CB6  
                                               i2l23425 4906  
                                               i2l13797 4D2E  
                               ??_MSDCheckForErrorCases 006E  
                                               i2l18395 7772  
                                               i2l27751 27B0  
                                               i2l19925 24F2  
                                               i2l28837 6940  
                                               i2l28839 6974  
                                               i2l19897 2492  
                                    __size_of_rtcc_init 001A  
                                             ?___xxtofl 006E  
                                    ??__parse_file_copy 00F6  
                                   ?_fat_append_to_file 00E3  
                           __end_ofi2_SYSTEM_Initialize 7CDE  
                                            ??i2_memcpy 0034  
                                fat_append_to_file@data 00E5  
                                            ??i2_memset 0034  
                                            _flash_init 8DCE  
                            system_output_toggle@output 0062  
                    __fill_buffer_get_display@outBuffer 0064  
                           __end_of_USBCtrlTrfTxService 4E9C  
                                     __end_of__get_data 89CA  
                                     __end_of__get_date 73A2  
                                   _USBStdSetCfgHandler 48C6  
                   __size_of_schedule_eeprom_write_task 0050  
                                  ??_buck_get_dutycycle 0060  
                                     ?__display_startup 002E  
                                       __get_time@hours 0068  
                         __buck_set_dutycycle@dutyCycle 0061  
                                     __end_of__get_time 726A  
                                   fat_copy_file@sector 00ED  
                                     ?__display_outputs 002E  
                                     __end_of__get_root 17AE  
                                    __size_of_spi_tx_rx 0098  
                                    __size_of_spi_tx_tx 0090  
                         rtcc_decrement_seconds@seconds 0068  
                                               _RPINR21 000EFC  
                                               _RPINR22 000EFD  
                                               _RPINR23 000EFE  
                 __end_of__parse_settings_spi_frequency 5290  
                __size_of__parse_settings_spi_frequency 00C8  
                         __parse_settings_spi_frequency 51C8  
                                               _SSP1ADD 000FC8  
                         __parse_settings_spi_mode@data 0060  
                                               _SSP1BUF 000FC9  
                                ??_fat_read_from_buffer 008A  
                                               _RXADDRH 000F68  
                                               _RXADDRL 000F69  
                                               _RTCVALH 000F3B  
                                               _RTCVALL 000F3A  
                                      ?__number_of_days 002E  
                            __end_ofi2_USBStallEndpoint 37BA  
                                    _rtcc_decrement_day 8ADE  
                                   __rtcc_increment_bcd 878A  
                                 __display_time@minutes 01D0  
                                 __display_time@seconds 01D1  
                                               _TXADDRH 000F6A  
                                               _TXADDRL 000F6B  
                              __end_of_rtcc_set_minutes 8EE0  
                              __end_of_rtcc_set_seconds 8EB0  
                                   ?_USBCheckStdRequest 002E  
                            ??__ic2_display_set_address 006A  
                          __size_of_USBStdGetDscHandler 012C  
                              __display_charger@fan_off 0100  
                                    ??__display_startup 007C  
                                  __flash_set_page_size 70BC  
                                               _UIEbits 000F36  
                                    ??__display_outputs 0060  
                       __parse_file_append@return_value 00F8  
                                    __get_first_cluster 7704  
                                 __display_time@setyear 01BA  
                            __display_charger@supply_on 0160  
                    __end_of_get_next_eeprom_write_task 88C6  
                            _get_next_eeprom_write_task 889A  
                                   i2c_eeprom_read@addr 0077  
                            __end_of_APP_DeviceMSDTasks 8FA6  
                                               _UIRbits 000F62  
                                     __end_of__read_fat 7ADE  
                                         ??__buck_start 0073  
                                   i2c_eeprom_read@data 0073  
           MSDCheckForErrorCases@HostMoreDataThanDevice 006E  
                                 rtcc_increment_day@day 0068  
                     __size_of__sector_from_file_number 0030  
                 __end_of__flash_compare_page_to_buffer 6D04  
                __size_of__flash_compare_page_to_buffer 007C  
                         __flash_compare_page_to_buffer 6C88  
                                            ??_i2c_init 0061  
                                      __CFG_CFGPLLEN$ON 000000  
                              __i2c_write@slave_address 0068  
                             ?__sector_from_file_number 0060  
                   __ic2_display_set_address@data_array 006B  
                                        ?__buck_prepare 002E  
                                          ??_USBMSDInit 0039  
                         flash_copy_page_to_buffer@page 007D  
                              __write_calibration@index 009B  
                            __flash_buffer_read@command 007A  
                         fat_read_from_file@return_code 00DC  
                                     __read_fat@cluster 008F  
               __parse_settings_spi_polarity@out_buffer 0062  
                        __end_of__get_available_cluster 5038  
                                        ?__flash_wakeup 002E  
                fat_read_from_file_fast@working_cluster 00BD  
                                    i2c_adc_read@result 0068  
                                   ?_rtcc_decrement_day 002E  
                                fat_find_file@extension 008D  
                                     __end_of_api_parse 1C22  
                                     ?i2_ResetSenseData 002E  
                                   ?__get_first_cluster 008F  
                                        _outputPowerSum 028D  
                                            ??__i2c_get 0060  
                                     _MSDProcessCommand 2AA0  
                                  ??_fat_append_to_file 00E7  
                              fat_find_file@file_number 0091  
                  adc_calculate_temperature@calibration 006E  
                                         __i2c_send@dat 0060  
                             __flash_get_status@command 006E  
                                               __Hparam 0000  
                       rtcc_get_hours_decimal@bcd_hours 0063  
                       ??_USBIncrement1msInternalTimers 002E  
                                    __parse_file_delete 453E  
                                            _lastSecond 01EE  
                                  ?_USBStdSetCfgHandler 002E  
                                 __end_of_rtcc_get_year 907C  
                            __size_of_fat_get_file_size 007A  
             __end_of__get_available_offset_from_buffer 764A  
            __size_of__get_available_offset_from_buffer 005E  
                   ??__get_available_offset_from_buffer 0064  
                    ?__get_available_offset_from_buffer 0060  
                     __get_available_offset_from_buffer 75EC  
                                     __end_of__spi_init 8436  
                           __size_of_USBCheckHIDRequest 00D0  
                                    __parse_file_append 1D8A  
                                               __Lparam 0000  
                                    __parse_file_create 21B0  
                           __size_of_rtcc_increment_day 0026  
                                    ??i2_ResetSenseData 002E  
                        __parse_file_rename@out_idx_ptr 00C2  
                                    __display_itoa@text 007B  
                              __size_of_fat_create_file 013C  
                                     __end_of_hid_rpt01 C42A  
                                _buck_remote_set_enable 8D98  
                                    ?_MSDProcessCommand 002E  
                             __rtcc_increment_bcd@value 0067  
                               __end_of_MSDErrorHandler 317A  
                                     __end_of_buck_init 9044  
                            _MSDTransferTerminated$2782 003B  
                            __size_of_USBEnableEndpoint 003C  
                                          ?_system_init 002E  
                       rtcc_get_month_decimal@bcd_month 0063  
                                     ?_log_collect_data 002E  
                                    __parse_file_modify F448  
                                    __display_usb@F7301 C107  
                                    __display_usb@F7303 C23E  
                                    __display_usb@F7305 C22E  
                                    __display_usb@F7307 C1FD  
                               ?_flash_read_from_buffer 007E  
                         __size_of__rtcc_bcd_to_decimal 001E  
                                    __parse_file_rename 39C0  
                                  ?__rtcc_increment_bcd 0064  
                            ??_fat_get_file_information 0091  
                                 __size_of_buck_operate 0058  
                                  ??_USBCheckStdRequest 004B  
                                               ___aldiv 4E9C  
                                    __parse_file_resize 08A8  
                                             ?_spi_init 002E  
                         __size_of_USBCtrlTrfOutHandler 005E  
                 i2ExternalFlash_MediaInitialize@config 002E  
                   ExternalFlash_MediaInitialize@config 0060  
                                      _ToSendDataBuffer 0480  
                                       __size_of___lmul 0058  
                     __end_of__data_sector_from_cluster 9026  
                                               ___fltol 47E8  
                                               ___lldiv 697A  
                                      ??_USBDeviceTasks 004C  
                                               ___lwdiv 7C36  
                                     ??_USBStallHandler 002E  
                                               ___lwmod 8204  
                                    ??_log_collect_data 0074  
                           __end_of__parse_format_drive 5D0A  
                                   ?__parse_file_delete 00AF  
                                     ?__i2c_acknowledge 002E  
                                 __end_of_buck_get_mode 911C  
                                   ?__parse_file_append 00F1  
                                   ?__parse_file_create 00DD  
                                   __size_of__i2c_start 0008  
                          __end_of__system_encoder_init 834A  
                                               __pcinit 55B0  
                                       __size_of_memcpy 0060  
                                   __size_of__i2c_write 0050  
                                       __size_of_memset 0030  
                              __size_of_MSDWriteHandler 02D6  
                             __end_of_configDescriptor1 C387  
                        __end_of__write_value_to_offset 84A4  
                                   ??_MSDProcessCommand 00A7  
                                               __ramtop 0F00  
                                       __size_of_reboot 0002  
                          ExternalFlash_SectorRead@page 0093  
                                __display_itoa_u16@text 007A  
                        ?__fill_buffer_get_calibration1 006B  
                        ?__fill_buffer_get_calibration2 006B  
                            __size_of_i2c_set_frequency 0030  
                                            ??_adc_init 0060  
                                            ??_adc_read 0062  
                                               __ptext0 E5E2  
                                               __ptext1 3DB4  
                                               __ptext2 8FA6  
                                               __ptext3 90FE  
                                               __ptext4 875C  
                                               __ptext5 8A46  
                                               __ptext6 8A6C  
                                               __ptext7 886E  
                                               __ptext8 DF04  
                                   ?__parse_file_modify 00E3  
                                               __ptext9 8A92  
                                        ?__display_itoa 0078  
                                               _inPipes 0001  
                               ??_spi_set_configuration 0060  
                                   ?__parse_file_rename 00BE  
                                  ??_rtcc_decrement_day 0068  
                                       __size_of_ui_run 00F8  
                                        fat_format@cntr 0084  
                                        ?__display_time 002E  
                                 _task_list_write_index 001F  
                                    __display_time@cntr 01D2  
                          __end_of__display_inout@F7260 C2B5  
                          __end_of__display_inout@F7254 C1FD  
                          __end_of__display_inout@F7256 C1EB  
                          __end_of__display_inout@F7258 C344  
                     __size_of_ExternalFlash_SectorRead 0034  
                                       __size_of_spi_tx 005A  
                           _USBDeferOUTDataStagePackets 01F8  
                                    __display_time@mode 01CB  
                                   ?__parse_file_resize 00DB  
                                    ??__i2c_acknowledge 0060  
                                             _T0CONbits 000FD5  
                                            ??__get_fat 0062  
                                            ??__get_fbr 0062  
                                    __display_time@year 01CC  
                                 __end_of_rtcc_set_year 8E98  
                                            ??__get_mbr 0062  
                             ?_ExternalFlash_SectorRead 008B  
                                       __size_of_strlen 003E  
                           __end_of__system_timer0_init 830C  
                                             _T1CONbits 000FCD  
                                  ??__get_first_cluster 0091  
                                           ?__buck_stop 002E  
                               __read_value_from_offset 8132  
                               _fat_read_from_file_fast 0042  
                                          ??_USBSuspend 0045  
                                             _T2CONbits 000FCA  
                                    __end_of_USBMSDInit 3396  
                                      ??_ResetSenseData 0060  
                               ?__flash_write_to_buffer 0073  
                                            ??___xxtofl 0072  
                               _APP_DeviceMSDInitialize 9026  
                                               _msd_cbw 000D40  
                              __end_of_i2c_eeprom_tasks 70BC  
                                      ___aldiv@dividend 0060  
                                               _msd_csw 000D80  
                              __fill_buffer_read_buffer 4A7C  
                               ??_i2c_digipot_reset_off 006A  
                                  __i2c_not_acknowledge 90BC  
                              __offset_from_file_number 89F4  
                              __end_of_i2c_eeprom_write 6C08  
                                       i2_USBDeviceInit 2454  
                    __parse_settings_spi_frequency@data 0060  
                                               _ui_init 8F6C  
                                      i2USBDeviceInit@i 0036  
                        __parse_file_append@file_number 00F9  
                       __end_of__parse_sector_to_buffer 1AB2  
                                         _log_start_new 49A2  
                    __size_of_ExternalFlash_SectorWrite 0034  
                               __size_of__buck_pin_init 0030  
                                 ?__flash_set_page_size 002E  
                                               _tmr_isr 63E0  
                                    __end_of_USB_CD_Ptr C346  
                                            _msd_buffer 000600  
                                     ?_rtcc_get_minutes 002E  
                                     ?_rtcc_get_seconds 002E  
                            __size_of_SYSTEM_Initialize 005A  
                                      _system_output_on 7FBA  
                       __size_of_USBCtrlTrfSetupHandler 0090  
                                ?_flash_write_to_buffer 007E  
                                 __size_of_i2c_adc_read 0052  
                         __size_of__buck_operate_remote 00EC  
                               __size_of__flash_is_busy 0022  
                          fat_get_file_size@file_number 00A1  
                                               _strncmp 6C08  
                                   _flash_partial_write 6EEC  
                           ??_fat_copy_sector_to_buffer 00A4  
                                  end_of_initialization 566C  
                               rtcc_decrement_year@year 0068  
                                  ??__parse_file_delete 00B5  
                               ??_display_get_character 0061  
                                 _MSDTransferTerminated 7BE0  
                 __flash_compare_page_to_buffer@command 007B  
                        ?_MSDProcessCommandMediaPresent 002E  
                                  ??__parse_file_append 00F7  
                                  ??__parse_file_create 00E3  
                                    __end_of_USB_SD_Ptr C33A  
                           __end_of_rtcc_increment_year 8B4A  
                                    ??_rtcc_get_minutes 0060  
                                    ??_rtcc_get_seconds 0060  
                                   i2c_eeprom_write@dat 0072  
                                               memcpy@d 0067  
                  __size_of_buck_remote_set_synchronous 0018  
                                               memcpy@n 0064  
                                               memcpy@s 0069  
                                   _pBDTEntryEP0OutNext 0015  
                                  ??__parse_file_modify 00E9  
                             __rtcc_bcd_to_decimal@ones 0061  
                             __end_of_MSDProcessCommand 2BD0  
                                               itoa@buf 0070  
                             __rtcc_bcd_to_decimal@tens 0060  
                                  ??__parse_file_rename 00C4  
                                               memset@c 0062  
                                               itoa@val 0072  
                                               memset@n 0064  
                                               memset@p 0066  
                                   __buck_operate_local CAD2  
                          fat_delete_file@first_cluster 00AC  
                                  ??__parse_file_resize 00E1  
                                       _USB1msTickCount 02AD  
                                          _buck_operate 797E  
                              __flash_partial_read@data 0079  
                                             i2u1132_40 4E46  
                                             i2u1132_47 4E3C  
                                             i2u1053_40 59DC  
                                             i2u1134_40 4E86  
                              ?_USBStdFeatureReqHandler 002E  
                                             i2u1134_47 4E7C  
                                             i2u1224_40 2C48  
                              __flash_partial_read@page 0073  
                                             i2u1224_47 2C3E  
                                             i2u1225_40 2C78  
                                             i2u1225_47 2C6E  
                                             i2u1227_40 2CCE  
                                             i2u1227_47 2CC4  
                         i2c_eeprom_write@slave_address 0083  
                                             i2u2143_40 493A  
                                             i2u2161_40 F8A8  
                                             i2u1570_40 7794  
                                             i2u1810_40 24B6  
                    __size_of__fill_buffer_get_display1 0056  
                                             i2u1570_47 778A  
                                      _inputCapacitySum 0289  
                                             i2u1813_40 2556  
                                             i2u2716_40 281E  
             __fill_buffer_get_file_details@file_number 009C  
                                 ??_USBStdSetCfgHandler 0045  
                       __parse_command_long@out_idx_ptr 0104  
                                       ___lldiv@divisor 0064  
                                             i2u1973_48 331E  
                                             i2u1973_49 3332  
                                             i2u1975_48 3344  
                                             i2u1975_49 335A  
                   rtcc_get_minutes_decimal@bcd_minutes 0063  
                                             i2u1977_44 3378  
                                             i2u1977_45 3372  
                                     __end_of_rtcc_init 8DCE  
                        ??_buck_remote_change_dutycycle 0060  
                                       ___lldiv@counter 006C  
                                   __end_of__buck_start 573C  
                        __end_of_flash_read_from_buffer 869C  
                                         ?_rtcc_get_day 002E  
                               __parse_buffer_to_sector 1EF0  
                        __end_of__display_startup@F7250 C27D  
                        __end_of__display_startup@F7244 C1A3  
                        __end_of__display_startup@F7246 C322  
                   rtcc_get_seconds_decimal@bcd_seconds 0063  
                        __end_of__display_startup@F7248 C347  
                                          _averageCount 000D  
                                 ??__rtcc_increment_bcd 0066  
                                    __end_of_USBSuspend 875C  
                                     __get_time@minutes 0069  
                                     __get_time@seconds 006A  
                               _USBCtrlEPAllowDataStage 62B2  
                            ?_buck_remote_set_dutycycle 002E  
                                     __end_of_spi_tx_rx 62B2  
                                     __end_of_spi_tx_tx 6758  
                                      ___aldiv@quotient 006A  
                           __size_of_buck_remote_set_on 0018  
                 __end_of__fill_buffer_get_file_details 7B34  
                __size_of__fill_buffer_get_file_details 0056  
                         __fill_buffer_get_file_details 7ADE  
                                               postdec1 000FE5  
                                               postdec2 000FDD  
          __make_cluster_chain@different_sector_cluster 009F  
                  __end_of_ExternalFlash_SectorSizeRead 90BC  
                 __size_of_ExternalFlash_SectorSizeRead 000C  
                          _ExternalFlash_SectorSizeRead 90B0  
                                            ??_spi_init 0063  
                                               postinc0 000FEE  
                                               postinc1 000FE6  
                                               postinc2 000FDE  
                                           ?_fat_format 002E  
                                   rtcc_set_hours@hours 0060  
                                     ?_rtcc_correct_day 002E  
                              __buck_operate_local@cntr 007D  
                                  ?_flash_partial_write 007F  
                          __size_of__display_efficiency 034A  
                      __size_of__fill_buffer_get_status 0448  
                                         ??__ui_encoder 008B  
                                         ?_rtcc_set_day 002E  
                                               utoa@buf 0067  
               MSDProcessCommandMediaPresent@sectorSize 009E  
                              _USBCtrlEPServiceComplete 3CBA  
                                               utoa@val 0069  
                                             _MSD_State 0024  
               __end_of__cluster_from_sector_and_offset 8A46  
              __size_of__cluster_from_sector_and_offset 0028  
                     ??__cluster_from_sector_and_offset 0064  
                      ?__cluster_from_sector_and_offset 0060  
                       __cluster_from_sector_and_offset 8A1E  
                                         _inputPowerSum 0291  
 __parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr 0064  
                         __parse_file_modify@out_buffer 00E5  
                                 _system_encoder_enable 8FA6  
                                               strlen@s 0060  
                           ??_adc_calculate_temperature 006F  
                                    ??_rtcc_correct_day 0064  
                           __size_of_USBCheckMSDRequest 00BC  
                                         ??_api_prepare 00FD  
                            _USBStatusStageEnabledFlag1 01FB  
                            _USBStatusStageEnabledFlag2 01FA  
                        __parse_format_drive@out_buffer 0088  
                              flash_partial_write@match 0087  
                                  ?__buck_operate_local 002E  
                                    USBEnableEndpoint@p 0037  
                          __size_of__make_cluster_chain 02D6  
                          __parse_calibration@parameter 006C  
                               ??_rtcc_get_year_decimal 0063  
                                             _PORTBbits 000F81  
                                             _PORTDbits 000F83  
                               __display_outputs@header 009A  
                                      _outputCurrentSum 0295  
                              flash_partial_write@start 0081  
                             __size_of__get_input_power 0082  
                        __end_of__flash_write_to_buffer 7E78  
                                   __buck_set_dutycycle 7196  
                                      __CFG_DSBOREN$OFF 000000  
                             __display_temperature@cntr 00C7  
                                          _i2c_adc_read 7D30  
                    __parse_calibration@slope_or_offset 006B  
                                  _rtcc_decrement_hours 8C5A  
                 __end_of__parse_settings_i2c_frequency 55B0  
                __size_of__parse_settings_i2c_frequency 00C8  
                         __parse_settings_i2c_frequency 54E8  
                            __rtcc_bcd_to_decimal@input 0062  
                                  _rtcc_decrement_month 8C16  
                         __parse_settings_i2c_mode@data 0060  
                    __size_of__get_available_root_entry 002A  
                                  spi_tx_rx@data_length 0066  
                            __end_of__write_calibration 6634  
                                 ?__i2c_not_acknowledge 002E  
                         __parse_file_modify@start_byte 00EE  
                                     ??_fat_delete_file 00AC  
                              _rtcc_get_minutes_decimal 8FC6  
                             __buck_operate_local$10019 007B  
                          __size_of__rtcc_decrement_bcd 002E  
                      __make_cluster_chain@next_cluster 00AA  
                                     adc_read@adc_value 0063  
                                fat_modify_file@cluster 00B9  
                                           ?_flash_init 002E  
                                      __CFG_CPUDIV$OSC1 000000  
                                         ___xxtofl@sign 0076  
                       __fill_buffer_find_file@inBuffer 0096  
                                             _TRISAbits 000F92  
                                        ?_log_start_new 002E  
                                             _TRISBbits 000F93  
                                             _TRISCbits 000F94  
                                    api_parse@outBuffer 0109  
                                             _TRISDbits 000F95  
                                             _TRISEbits 000F96  
                                    _ReceivedDataBuffer 04C0  
                                    _BothEP0OutUOWNsSet 01FC  
                                         __pbssBIGRAMll 0800  
                                      ??_MSDReadHandler 0095  
 __parse_settings_i2c_masterModeSlaveAddress@out_buffer 0062  
                             __flash_partial_read@start 0075  
                             USBConfigureEndpoint@EPNum 0033  
                               _i2c_display_write_fixed 77BC  
                                     __CFG_SOSCSEL$HIGH 000000  
                            ?_USBCtrlEPAllowStatusStage 002E  
                                       ??__buck_prepare 0060  
                              __parse_settings_i2c_mode 5358  
                               __parse_calibration@data 0063  
                            __display_efficiency@header 0092  
                               __display_time@presssave 0170  
                   USER_USB_CALLBACK_EVENT_HANDLER@size 0041  
                               __size_of__display_clear 004A  
                               __parse_calibration@item 006E  
                                             _USTATcopy 002C  
                                       ??__flash_wakeup 0068  
                          __size_of_rtcc_decrement_year 0022  
                                 __end_of_i2c_adc_start 83FE  
                    __end_of_schedule_eeprom_write_task 7FBA  
                            _schedule_eeprom_write_task 7F6A  
         MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
                               ?_rtcc_increment_minutes 002E  
                               ?_rtcc_increment_seconds 002E  
                                   __delete_root@offset 008A  
                            __display_efficiency@footer 00B8  
                               __size_of__display_inout 01E6  
                        ?__parse_settings_spi_frequency 0060  
                   __parse_write_buffer@number_of_bytes 0091  
                          ?_i2c_eeprom_read_calibration 002E  
                                   __delete_root@sector 0088  
                                      __rtcc_verify_bcd 817A  
                       i2c_eeprom_read_calibration@addr 007F  
                          __end_of_USBTransferOnePacket 36B4  
                                  ?__buck_set_dutycycle 002E  
                       i2c_eeprom_read_calibration@cntr 0081  
                                           _CCP1CONbits 000FBA  
                              _rtcc_get_seconds_decimal 8FB6  
                                   _system_output_is_on 8DE8  
                   __end_ofi2_ExternalFlash_MediaDetect 9120  
                                 i2c_eeprom_read@length 0075  
                           i2_ExternalFlash_MediaDetect 911C  
                                   rtcc_set_month@month 0060  
                            __display_efficiency@source 00A5  
                                i2c_display_cursor@line 006E  
                      __fat_sector_from_cluster@cluster 0060  
                                      __CFG_IOL1WAY$OFF 000000  
                          __end_of__parse_command_short 427C  
                           __size_of__flash_buffer_read 0052  
                                        ??_rtcc_get_day 0060  
                                   __size_of__buck_stop 002C  
                        ?__flash_compare_page_to_buffer 0073  
                         __fill_buffer_get_display@cntr 006C  
                                    __root_is_available 712A  
                         __fill_buffer_get_display@line 006D  
                                     __CFG_WPEND$PAGE_0 000000  
                     __end_of__fill_buffer_get_display1 7B8A  
                    __flash_compare_page_to_buffer@page 0073  
                                   __CFG_MSSP7B_EN$MSK7 000000  
                    __make_cluster_chain@minimum_sector 009D  
                                     ?_rtcc_read_eeprom 002E  
                                      ?_MSDErrorHandler 002E  
                               __size_of_rtcc_get_hours 000E  
                 fat_resize_file@new_number_of_clusters 00B6  
                    __find_nth_cluster@sector_in_buffer 009D  
                               __size_of_rtcc_get_month 000E  
                          fat_resize_file@new_file_size 00AC  
                                      __write_root@data 0088  
                                _USBCtrlTrfSetupHandler 6758  
                        __end_of__display_outputs@F7311 C299  
                        __end_of__display_outputs@F7313 C22E  
                        __end_of__display_outputs@F7315 C0DF  
                        __end_of__display_outputs@F7317 C0CA  
                __end_of_system_calculate_input_current 2F44  
               __size_of_system_calculate_input_current 0124  
                        _system_calculate_input_current 2E20  
                                 ??_flash_partial_write 0087  
                             system_output_is_on@output 0060  
                          __write_value_to_offset@value 0064  
                                        ??_rtcc_set_day 0060  
                  __parse_buffer_to_sector@return_value 00B8  
                             _fat_copy_sector_to_buffer 5800  
                                   __rtcc_write_disable 8F56  
                    fat_copy_sector_to_buffer@file_size 00A8  
                      ExternalFlash_CapacityRead@config 0060  
                               ?i2_USBTransferOnePacket 002E  
                              __size_of_display_prepare 009E  
                                 __end_of_USBDeviceInit 2454  
                                    ??_rtcc_read_eeprom 008B  
                 __end_of_USBIncrement1msInternalTimers 8CE2  
                __size_of_USBIncrement1msInternalTimers 0022  
                         _USBIncrement1msInternalTimers 8CC0  
                          __end_of__display_temperature 1616  
                                        __end_of___lmul 7A2E  
                       __sector_from_file_number@sector 0063  
                                       ??__display_itoa 007D  
                         ?_ExternalFlash_SectorSizeRead 0060  
                                       ??__display_time 0060  
                    __end_of__display_temperature@F7362 C0F3  
                            __display_temperature@F7362 C0DF  
                    __end_of__display_temperature@F7364 C2FC  
                            __display_temperature@F7364 C2F1  
                    __end_of__display_temperature@F7366 C2CD  
                            __display_temperature@F7366 C2C1  
                    __end_of__display_temperature@F7368 C2C1  
                            __display_temperature@F7368 C2B5  
                             ??__read_value_from_offset 0064  
                                   ?__root_is_available 002E  
                                     __size_of_MSDTasks 0256  
                             ??_fat_read_from_file_fast 00AF  
                                 ??__buck_operate_local 0076  
                              __end_of_USBStallEndpoint 35AE  
                                             i2memcpy@d 0034  
                              ?__buck_initial_dutycycle 002E  
                                             i2memcpy@n 0032  
                                     ??_fat_create_file 00B4  
                               __end_ofi2_USBDeviceInit 259A  
                                             i2memcpy@s 0036  
                    __fill_buffer_read_file@data_length 010C  
                              __size_of_fat_modify_file 023E  
                             ??_APP_DeviceMSDInitialize 003C  
                                             i2memset@c 0030  
                                             i2memset@n 0032  
                                             i2memset@p 0034  
                       __parse_write_buffer@out_idx_ptr 008E  
                                  ?_system_output_is_on 002E  
                                        __end_of_memcpy 758E  
                                       _MSDRetryAttempt 01F5  
                                  i2USBStallEndpoint@ep 0033  
                __end_of_system_calculate_input_voltage 47E8  
               __size_of_system_calculate_input_voltage 00E2  
                        _system_calculate_input_voltage 4706  
                                        __end_of_memset 866C  
                                 __get_output_power@pwr 006F  
                        __parse_file_modify@out_idx_ptr 00E7  
                                        __end_of_reboot 9122  
                                 ?_rtcc_decrement_hours 002E  
                                      __CFG_DSWDTEN$OFF 000000  
                                 ?_rtcc_decrement_month 002E  
                            ?_flash_copy_page_to_buffer 007D  
                         __size_of_i2c_digipot_reset_on 0026  
                                     _USBBusIsSuspended 01FD  
                             flash_partial_write@length 0083  
                                        __end_of_ui_run 3EAC  
                          __end_of_rtcc_get_day_decimal 9016  
                                        __end_of_spi_tx 797E  
                 __get_available_root_entry@file_number 0095  
                                   fat_modify_file@data 00A7  
                                        __end_of_strlen 8388  
                         __display_temperature@internal 00BC  
                         __parse_file_append@out_buffer 00F3  
                                   __end_of__ui_encoder E298  
                             __flash_set_page_size@size 0077  
                                         _chargerOnTime 02B9  
                           flash_write_to_buffer@length 0080  
                                   start_initialization 55B0  
                              fat_copy_file@file_number 00EF  
                                   fat_modify_file@root 00C3  
                               ?_USBStdGetStatusHandler 002E  
                                         ??__write_root 008A  
                               ?_buck_remote_get_status 002E  
                              i2SYSTEM_Initialize@state 0032  
                         ExternalFlash_SectorWrite@page 008D  
                         USBCtrlTrfRxService@byteToRead 002F  
                                ??__flash_set_page_size 0073  
                                   __parse_write_buffer 2056  
                                     ??_MSDWriteHandler 008F  
                                   __end_of_api_prepare 1D8A  
                     __end_of__get_available_root_entry 89F4  
                              ??_rtcc_get_hours_decimal 0063  
                        get_next_eeprom_write_task@task 0060  
                            ??__fill_buffer_get_display 0067  
                                     __size_ofi2_memcpy 005C  
                            i2c_display_cursor@position 006D  
                                  ?__rtcc_write_disable 002E  
                                ?_MSDTransferTerminated 0039  
                                __display_charger@F7321 C0A0  
                                __display_charger@F7331 C2CD  
                                __display_charger@F7323 C1A3  
                                __display_charger@F7333 C20E  
                                __display_charger@F7325 C17D  
                                __display_charger@F7327 C33A  
                                __display_charger@F7335 C08B  
                                __display_charger@F7329 C322  
                                __display_charger@F7337 C0F3  
                                     __size_ofi2_memset 002C  
                              __size_of_fat_rename_file 00A4  
                                       _USBMSDOutHandle 0013  
                      __ic2_display_set_address@address 006A  
                        __end_of_rtcc_increment_minutes 8BB0  
                          __end_of_USBConfigureEndpoint 66C8  
                        __end_of_rtcc_increment_seconds 8B6C  
                                  system_init@filename2 0171  
                                          ??__i2c_start 0060  
                               __flash_buffer_read@data 0077  
                                          ??__i2c_write 0068  
                       __end_of_USBStdFeatureReqHandler F93A  
                                   __flash_partial_read 6E72  
                                     USBStallEndpoint@p 0066  
                                   __size_of_fat_format 0218  
                                         _MSDHostNoData 0021  
                                  _task_list_read_index 0020  
                             _adc_calculate_temperature 3FA4  
                                  ??__root_is_available 008F  
                     __end_of_USBCtrlEPAllowStatusStage 5800  
                         __size_of_system_output_toggle 0026  
                                           __buck_start 5676  
                                 ??__buck_set_dutycycle 0060  
                              __end_of_USBCtrlEPService 650C  
                            __size_of_MSDProcessCommand 0130  
                        ??_fat_write_sector_from_buffer 00A4  
                                 __display_startup@cntr 00A8  
                                  __system_encoder_init 830C  
                                             __i2c_read 650C  
                               __size_of_rtcc_set_hours 0018  
                                  rtcc_read_eeprom@date 008C  
                                             __i2c_send 90E4  
                             ??__parse_buffer_to_sector 00B7  
                               __size_of_rtcc_set_month 0018  
                                             __i2c_stop 90EE  
               _ExternalFlash_MediaInitialize$intlevel0 8C82  
                         ??_i2c_eeprom_read_calibration 0079  
                                  __display_inout@F7260 C2A7  
                                  __display_inout@F7254 C1EB  
                                  __display_inout@F7256 C1D9  
                                  __display_inout@F7258 C341  
                                     __size_of_i2c_init 000C  
                                     _rtcc_write_eeprom 809E  
                             ??_USBCtrlEPAllowDataStage 002F  
                   __parse_sector_to_buffer@out_idx_ptr 00B7  
                          __size_of_fat_write_to_buffer 001E  
                              ??__fill_buffer_find_file 009A  
                                      __buck_start@cntr 0075  
                                        USBDeviceInit@i 0068  
                                      __buck_start@mode 0073  
                                __write_calibration@ptr 0099  
                         __size_of_rtcc_increment_hours 0022  
                         __size_of_rtcc_increment_month 0022  
                            __flash_partial_read@length 0077  
                                  ?__parse_write_buffer 008A  
                         __root_is_available@first_byte 0094  
                                _pBDTEntryEP0OutCurrent 0017  
                                __size_of_fat_find_file 00E8  
                              __parse_settings_spi_mode 5100  
                                    ?_rtcc_write_eeprom 002E  
                      __end_of_fat_get_file_information 6DF8  
                                           _DMACON1bits 000F88  
                                i2c_eeprom_write@length 006E  
                                           _DMACON2bits 000F86  
                                   __size_of_flash_init 001A  
                               USBTransferOnePacket@dir 0060  
                               USBTransferOnePacket@len 0063  
                                     __size_of__i2c_get 000A  
                                         _MSDTasks$2747 00AD  
                                         _MSDTasks$2748 00AF  
                           MSDErrorHandler@OldMSD_State 0069  
                        __end_ofi2_USBTransferOnePacket 39C0  
                           __size_of_flash_partial_read 0032  
                                        __get_date@date 006B  
                                              ??___lmul 0068  
                                 spi_init@configuration 0063  
                         fat_append_to_file@return_code 00EF  
                                      _outputVoltageSum 0299  
                               flash_partial_read@start 0089  
                                        __get_date@year 0068  
                                   _USBStdGetDscHandler 2BD0  
                                ?_system_encoder_enable 002E  
                                  ?__flash_partial_read 0073  
                                system_output_on@output 0060  
                                     __CFG_ADCSEL$BIT10 000000  
                     __size_of_APP_DeviceCustomHIDTasks 00A8  
                            fat_get_file_size@file_size 009D  
                                           __pdataBANK2 02D4  
                                           __pdataBANK3 03BC  
                                           __pdataBANK5 0500  
                         __size_of__buck_set_sync_async 0074  
                             ?_APP_DeviceCustomHIDTasks 002E  
                               rtcc_increment_year@year 0068  
                                  __size_of_system_init 0104  
                        __size_of_i2c_digipot_backlight 002C  
                                __size_of_fat_copy_file 00F2  
                                              ??_memcpy 0066  
                               __size_of__i2c_wait_idle 0064  
                                              ??_memset 0066  
                                  __display_inout@line1 0090  
                                  system_init@extension 017A  
                                  __display_inout@line2 00A2  
                          __size_of__parse_command_long 03FC  
                                  __display_inout@line3 00C2  
                                  __display_inout@line4 00B4  
                         __end_of_i2c_digipot_backlight 889A  
                                          ?__i2c_open_1 002E  
                                              ??_reboot 0060  
                                __size_of_ui_get_status 0006  
                                   ??_rtcc_write_eeprom 0085  
                                 ??_system_output_is_on 0060  
                                              ??_ui_run 008B  
                                    __end_of__i2c_start 90FE  
                                 __number_of_days@month 0063  
                                              ??_spi_tx 0064  
                        ?__fill_buffer_get_file_details 0097  
                                    __end_of__i2c_write 7F1A  
                             __root_is_available@offset 0091  
                                              ??_strlen 0062  
                                 __display_outputs@cntr 00A9  
                                ??__i2c_not_acknowledge 0060  
                                 __display_outputs@mode 00A8  
                                _USBActiveConfiguration 002D  
                              ??__fill_buffer_read_file 0104  
                        __end_of_USBStdGetStatusHandler 6182  
                              _buck_dutycycle_last_step 02CA  
                                       ??_log_start_new 0064  
                        __end_of_buck_remote_get_status 8814  
                              __size_of_fat_resize_file 00FE  
                              __fat_sector_from_cluster 8E02  
                           api_parse@receivedDataLength 0108  
                                      api_parse@out_idx 010E  
                                     __size_of_adc_init 001C  
                                     __size_of_adc_read 0086  
                                           __pbssCOMRAM 0001  
                                       adc_read@channel 0062  
                                         ?__delete_root 002E  
           fat_copy_sector_to_buffer@number_of_clusters 00AC  
                                     __size_of__get_fat 0058  
                                     __size_of__get_fbr 0274  
                             ??_i2c_display_write_fixed 0068  
              __parse_settings_spi_frequency@out_buffer 0062  
                                         __pcstackBANK0 0060  
                                         __pcstackBANK1 0100  
                          __size_of_USBCtrlTrfInHandler 00C0  
                                     __size_of__get_mbr 00D0  
                          ??_ExternalFlash_CapacityRead 0064  
                        __size_of_MSDCheckForErrorCases 00F8  
              __get_available_offset_from_buffer@buffer 0062  
                                        __buck_pin_init 860C  
                         __end_of_MSDCheckForErrorCases 3FA4  
                                 ??__rtcc_write_disable 0060  
                            fat_create_file@file_number 00BC  
                                     __size_of___xxtofl 0144  
                                             _gblBLKLen 0310  
                             __size_of__display_charger 0308  
              __get_available_offset_from_buffer@offset 0066  
                    __end_of_flash_command_pagesize_512 C45E  
                            _flash_command_pagesize_512 C45A  
                    __end_of_flash_command_pagesize_528 C45A  
                            _flash_command_pagesize_528 C456  
                        ?__parse_settings_i2c_frequency 0060  
                                        __flash_is_busy 8C9E  
                                  ?_USBStdGetDscHandler 002E  
                            i2c_set_frequency@frequency 0060  
                                     ?_rtcc_set_minutes 002E  
                                     ?_rtcc_set_seconds 002E  
                                             __get_data 89A0  
                                             __get_date 733A  
                                     _flash_sector_read 850C  
                   fat_get_file_information@root_sector 0092  
                       __end_of__read_value_from_offset 817A  
                       __end_of_fat_read_from_file_fast 0268  
                                             __get_time 7200  
                           ?_get_next_eeprom_write_task 002E  
                                             __get_root 1616  
                                flash_sector_write@data 0081  
                                flash_sector_write@page 007F  
                                   __end_of__write_root 8054  
                                 ?__system_encoder_init 002E  
                            __end_of_USBWakeFromSuspend 846E  
                                    ??_rtcc_set_minutes 0060  
                             __size_of__parse_file_copy 00FE  
                                    ??_rtcc_set_seconds 0060  
                             __end_of_rtcc_write_eeprom 80E8  
                                    ?_flash_sector_read 0087  
                            __end_of_i2c_display_cursor 89A0  
                                            ?__i2c_read 0065  
                           __size_of__rtcc_write_enable 0016  
                                            ?__i2c_send 002E  
                                       _USBStallHandler 8248  
                                          _pBDTEntryOut 01DE  
                                            ?__i2c_stop 002E  
                            fat_modify_file@file_number 00B5  
                               ?_buck_remote_set_enable 002E  
                            ?_buck_remote_get_dutycycle 002E  
                            fat_rename_file@file_number 009B  
                                             __read_fat 7A86  
                        schedule_eeprom_write_task@task 0061  
                              __size_of_USBDeviceAttach 0032  
                               __rtcc_decrement_bcd@max 0065  
                               __rtcc_decrement_bcd@min 0064  
                      __end_of_ExternalFlash_SectorRead 850C  
                                 ??__parse_write_buffer 0090  
                             __size_of__display_startup 01FE  
                    __get_available_cluster@skip_sector 008D  
                                    i2_USBStallEndpoint 36B4  
                             __size_of__display_outputs 0222  
                                      ___lwdiv@dividend 0060  
                     fat_read_from_file_fast@start_byte 00A1  
                          buck_remote_get_status@retval 0060  
                                     fat_find_file@name 008B  
                        MSDProcessCommandMediaPresent@i 00A6  
                                   ??_flash_sector_read 008B  
                                             _api_parse 1AB2  
                                             __pintcode C008  
                             fat_create_file@root_entry 00BD  
                               __fill_buffer_get_status CF44  
                                    _APP_DeviceMSDTasks 8F94  
                                         __pmediumconst C08A  
                                              ?___aldiv 0060  
                                   fat_find_file@offset 0094  
                                 ??__flash_partial_read 007B  
                                             __ptext100 3FA4  
                                             __ptext101 79D6  
                                             __ptext110 DB4A  
                                             __ptext102 2308  
                                             __ptext111 EBFE  
                                             __ptext103 863C  
                                             __ptext200 3ABE  
                                             __ptext120 5BAA  
                                             __ptext112 9110  
                                             __ptext104 85A8  
                                             __ptext201 409A  
                                             __ptext121 90B0  
                                             __ptext113 84A4  
                                             __ptext105 7816  
                                             __ptext210 9052  
                                             __ptext202 2964  
                                             __ptext130 4A7C  
                                             __ptext122 8F80  
                                             __ptext114 0EB0  
                                             __ptext106 8F94  
                                             __ptext211 8FD6  
                                             __ptext203 752E  
                                             __ptext131 8D22  
                                             __ptext123 8C7C  
                                             __ptext115 3EAC  
                                             __ptext107 FBAE  
                                             __ptext300 6634  
                                             __ptext220 8D5E  
                                             __ptext212 9060  
                                             __ptext204 4456  
                                             __ptext140 7ADE  
                                             __ptext132 866C  
                                             __ptext124 90DA  
                                             __ptext116 3062  
                                             __ptext108 2AA0  
                                             __ptext301 764A  
                                             __ptext221 89CA  
                                             __ptext213 733A  
                                             __ptext205 6C08  
                                             __ptext141 7B34  
                                             __ptext133 7D82  
                                             __ptext125 5DB4  
                                             __ptext117 34A4  
                                             __ptext109 758E  
                                             __ptext302 3396  
                                             __ptext230 846E  
                                             __ptext222 5800  
                                             __ptext214 8FE6  
                                             __ptext206 7200  
                                             __ptext150 7B8A  
                                             __ptext142 6182  
                                             __ptext134 CF44  
                                             __ptext126 1C22  
                                             __ptext118 746A  
                                             __ptext303 573C  
                                             __ptext231 4F6A  
                                             __ptext223 8D02  
                                             __ptext215 906E  
                                             __ptext207 8FB6  
                                             __ptext151 809E  
                                             __ptext143 8814  
                                             __ptext135 9104  
                                             __ptext127 0AAE  
                                             __ptext119 84D8  
                                             __ptext304 58C0  
                                             __ptext240 6C88  
                                             __ptext232 75EC  
                                             __ptext224 1D8A  
                                             __ptext216 8FF6  
                                             __ptext208 9044  
                                             __ptext160 D38C  
                                             __ptext152 6B86  
                                             __ptext144 6FD8  
                                             __ptext136 87E6  
                                             __ptext128 427C  
                                             __ptext305 4DCC  
                                             __ptext241 6D7E  
                                             __ptext233 8A1E  
                                             __ptext225 5FA6  
                                             __ptext217 907C  
                                             __ptext209 8FC6  
                                             __ptext161 8E80  
                                             __ptext153 869C  
                                             __ptext145 634A  
                                             __ptext137 9114  
                                             __ptext129 0042  
                                             __ptext306 0000  
                                             __ptext250 7F6A  
                                             __ptext242 5E5C  
                                             __ptext234 FE04  
                                             __ptext226 3BBC  
                                             __ptext218 9006  
                                             __ptext170 8F28  
                                             __ptext162 8E98  
                                             __ptext154 7ECA  
                                             __ptext146 686E  
                                             __ptext138 9118  
                                             __ptext251 1EF0  
                                             __ptext243 850C  
                                             __ptext235 6EEC  
                                             __ptext227 8008  
                                             __ptext219 908A  
                                             __ptext171 8D98  
                                             __ptext163 8EB0  
                                             __ptext155 7406  
                                             __ptext147 1AB2  
                                             __ptext139 910A  
                                             __ptext260 7E78  
                                             __ptext252 69FE  
                                             __ptext244 8132  
                                             __ptext236 7E26  
                                             __ptext228 EED4  
                                             __ptext180 5290  
                                             __ptext172 8B04  
                                             __ptext164 8EC8  
                                             __ptext156 90EE  
                                             __ptext148 418C  
                                             __ptext261 7924  
                                             __ptext253 6DF8  
                                             __ptext245 7A86  
                                             __ptext237 66C8  
                                             __ptext229 76A8  
                                             __ptext181 5358  
                                             __ptext173 80E8  
                                             __ptext165 8EE0  
                                             __ptext157 90F6  
                                             __ptext149 7FBA  
                                             __ptext270 2454  
                                             __ptext262 8540  
                                             __ptext254 712A  
                                             __ptext246 8E02  
                                             __ptext238 7870  
                                             __ptext190 7A2E  
                                             __ptext182 5420  
                                             __ptext174 2056  
                                             __ptext166 8EF8  
                                             __ptext158 90E4  
                                             __ptext271 8436  
                                             __ptext263 621A  
                                             __ptext255 7704  
                                             __ptext247 8E1C  
                                             __ptext239 78CA  
                                             __ptext191 89A0  
                                             __ptext183 54E8  
                                             __ptext175 8D40  
                                             __ptext167 8F40  
                                             __ptext159 9120  
                                             __ptext280 4B54  
                                             __ptext272 872C  
                                             __ptext264 86FC  
                                             __ptext256 85DA  
                                             __ptext248 9016  
                                             __ptext192 08A8  
                                             __ptext184 1940  
                                             __ptext176 86CC  
                                             __ptext168 8F56  
                                             __ptext281 48C6  
                                             __ptext273 8248  
                                             __ptext265 89F4  
                                             __ptext257 317A  
                                             __ptext249 127E  
                                             __ptext193 39C0  
                                             __ptext185 5C5C  
                                             __ptext177 5038  
                                             __ptext169 8F10  
                                             __ptext290 7BE0  
                                             __ptext282 891E  
                                             __ptext274 8CC0  
                                             __ptext266 35AE  
                                             __ptext258 6E72  
                                             __ptext194 5F02  
                                             __ptext186 048A  
                                             __ptext178 5100  
                                             __ptext291 36B4  
                                             __ptext283 60E6  
                                             __ptext275 6476  
                                             __ptext259 8C9E  
                                             __ptext195 F448  
                                             __ptext187 1616  
                                             __ptext179 51C8  
                                             __ptext292 9026  
                                             __ptext284 2BD0  
                                             __ptext276 7760  
                                             __ptext268 63E0  
                                             __ptext196 453E  
                                             __ptext188 4C2C  
                                             __ptext293 3288  
                                             __ptext285 F6C2  
                                             __ptext277 6758  
                                             __ptext269 26DE  
                                             __ptext197 7DD4  
                                             __ptext189 F93A  
                                             __ptext294 74CC  
                                             __ptext286 68F4  
                                             __ptext278 3CBA  
                                             __ptext198 7F1A  
                                             __ptext295 8E36  
                                             __ptext287 7C8A  
                                             __ptext279 62B2  
                                             __ptext199 21B0  
                                             __ptext296 911C  
                                             __ptext288 5980  
                                             __ptext297 8574  
                                             __ptext289 4CFC  
                                             __ptext298 38BE  
                                             __ptext299 8388  
                              __end_of_system_output_on 8008  
                                              ?___fltol 0060  
                                   fat_find_file@sector 0092  
                                              ?___lldiv 0060  
                                 __end_of_adc_calibrate 90B0  
                           __size_of_flash_sector_write 005C  
                                              ?___lwdiv 0060  
                                             __spi_init 83FE  
                            ??__fill_buffer_read_buffer 008E  
                                              ?___lwmod 0060  
                            ??__offset_from_file_number 0062  
                           __size_of_fat_read_from_file 00EE  
                                             _hid_rpt01 C40D  
                                           __ui_encoder DF04  
                                   ?i2_USBStallEndpoint 002E  
                           __size_of__parse_calibration 01D0  
                             __get_first_cluster@offset 0093  
                                             _buck_init 9036  
                                             _idle_rate 01FF  
                                     __size_of_spi_init 0040  
                             __get_first_cluster@sector 0091  
                                ??_rtcc_decrement_hours 0068  
                        __parse_calibration@out_idx_ptr 0067  
                                ??_rtcc_decrement_month 0068  
                                        __get_time@time 006B  
                                      ?i2_USBDeviceInit 002E  
                                           _api_prepare 1C22  
                               __parse_file_delete@data 00AF  
                             fat_modify_file@start_byte 00A1  
                                 _buck_remote_dutycycle 001B  
                       __end_of__parse_buffer_to_sector 2056  
                              __display_efficiency@cntr 00D2  
                                       __i2c_write@data 0065  
                                      __get_input_power 6B04  
                                       __i2c_write@cntr 0069  
                                   fat_create_file@name 00AC  
                                   ?_APP_DeviceMSDTasks 002E  
                             __size_ofi2_ResetSenseData 0062  
                                  __display_time@setday 01C3  
                    __flash_write_to_buffer@data_length 0077  
       __parse_settings_i2c_masterModeSlaveAddress@data 0060  
                                   fat_create_file@size 00B0  
                                          ??__buck_stop 0060  
                                  _USBTransferOnePacket 35AE  
                            __make_cluster_chain@offset 00A8  
                            ?_ExternalFlash_MediaDetect 0060  
                                        ??__delete_root 0088  
                        __size_of_spi_set_configuration 010E  
                            __make_cluster_chain@sector 00A4  
                                __end_of__buck_pin_init 863C  
                        ??_ExternalFlash_SectorSizeRead 0062  
                                     ??_display_prepare 00D3  
                         __end_of_spi_set_configuration 3288  
                               ??_flash_write_to_buffer 0084  
                                  __CFG_RTCOSC$T1OSCREF 000000  
                                  __parse_command_short 418C  
                                  __end_of_rtcc_get_day 9098  
                                fat_read_from_file@data 00D1  
                   __fill_buffer_get_display@secondHalf 0066  
                                __end_of__flash_is_busy 8CC0  
                                         _fat_find_file 4456  
                                     __display_itoa@len 008D  
                                     __display_itoa@pos 008F  
                                     __display_itoa@tmp 0083  
                                     ?_i2c_eeprom_tasks 002E  
                             __size_of_log_collect_data 029E  
                          __end_of__rtcc_bcd_to_decimal 8D7C  
                                              ?_ui_init 002E  
                                fat_read_from_file@root 00DD  
                                     __display_itoa_u16 5AF6  
                           __size_of_buck_get_dutycycle 0006  
                                     ?_i2c_eeprom_write 006A  
                          __end_of_USBCtrlTrfOutHandler 76A8  
                              __size_of_i2c_eeprom_read 0052  
                  __end_of__parse_settings_spi_polarity 5100  
                 __size_of__parse_settings_spi_polarity 00C8  
                          __parse_settings_spi_polarity 5038  
                                     ??_fat_modify_file 00A9  
                             __end_of_flash_sector_read 8540  
                                 ??_USBStdGetDscHandler 002E  
                        __size_of_i2c_digipot_reset_off 0026  
                   __size_of__flash_copy_page_to_buffer 005A  
                                           _ep_data_out 01E8  
                                      ___lwdiv@quotient 0065  
                                              ?_tmr_isr 002E  
                       __size_of_rtcc_get_hours_decimal 0010  
                         __end_of_i2c_digipot_reset_off 8A92  
                                    ??_i2c_eeprom_tasks 009D  
                                         _MSDWriteState 0022  
                          __size_of_USBCtrlTrfRxService 010E  
                                    ?__display_itoa_u16 0078  
                         USBConfigureEndpoint@direction 002E  
                                              ?_strncmp 0060  
                                   __display_efficiency E298  
                                        __display_clear 8054  
                                     __display_time@day 01CE  
                                  __end_of_rtcc_set_day 8F10  
                                    ??_i2c_eeprom_write 006F  
                             __size_of__i2c_acknowledge 000A  
                                         ?__display_usb 002E  
                                            ?__get_data 0060  
                                     __display_time@tad 0180  
                                            ?__get_date 0064  
                __cluster_from_sector_and_offset@offset 0062  
                                     __display_time@pts 0100  
                         __size_of_fat_read_from_buffer 001E  
                                         _fat_copy_file 409A  
                                  ??i2_USBStallEndpoint 002F  
                       ?_i2c_display_send_init_sequence 002E  
                      ??_i2c_display_send_init_sequence 006A  
                                     __display_usb@cntr 00A5  
                __cluster_from_sector_and_offset@sector 0060  
                                        __display_inout 1098  
                                       _config_internal 02B4  
                                            ?__get_time 0064  
                                            ?__get_root 0060  
                          __parse_file_copy@file_number 00F8  
                                         _ui_get_status 9104  
                          __size_ofi2_SYSTEM_Initialize 0054  
                                       _config_external 02B1  
                        __end_of_buck_remote_set_enable 8DB4  
                                  __display_temperature 144E  
                        __parse_file_append@out_idx_ptr 00F5  
                                       ___aldiv@divisor 0064  
                          __size_of_USBCtrlTrfTxService 00D0  
                                  __display_usb@usb_off 0074  
                        __size_of_display_get_character 002E  
                                   __make_cluster_chain EED4  
                       fat_copy_file@number_of_clusters 00E5  
                                       ___aldiv@counter 0068  
                                  ??_APP_DeviceMSDTasks 00B2  
                         __end_of_display_get_character 8842  
                                             _extension 02FB  
                                              _LATAbits 000F89  
                                              _LATBbits 000F8A  
                                              _LATCbits 000F8B  
                                              _LATDbits 000F8C  
                                              _LATEbits 000F8D  
                            __end_of_USBCheckHIDRequest 4DCC  
                        __root_is_available@file_number 0093  
                   __parse_buffer_to_sector@file_number 00B9  
                                     __get_output_power 6A82  
                            __end_of_rtcc_increment_day 8ADE  
                  __flash_compare_page_to_buffer@buffer 0075  
                            ??_USBCtrlEPServiceComplete 002F  
                                            ?__read_fat 008F  
                              __size_of__number_of_days 0068  
                                     ??_fat_rename_file 009B  
                                   ??__display_itoa_u16 007C  
                               __i2c_read@slave_address 006F  
                                              _IPR2bits 000FA2  
                              ?__parse_sector_to_buffer 00B3  
                                              _PIE2bits 000FA0  
               __fill_buffer_get_calibration1@outBuffer 006B  
                              ??_system_encoder_disable 0060  
                                   __rtcc_decrement_bcd 87B8  
                                  _rtcc_get_day_decimal 9006  
                           __size_of_fat_append_to_file 00A2  
                                    ?__get_output_power 006D  
                         __parse_file_create@out_buffer 00DF  
                                           _buck_status 001E  
                              __fat_offset_from_cluster 8E1C  
                       __size_of__fill_buffer_find_file 0086  
                        __parse_file_delete@file_number 00B7  
                                    __end_of__buck_stop 891E  
                  __flash_compare_page_to_buffer@status 0079  
                                              _PIR1bits 000F9E  
                                             _task_list 0300  
                                              _PIR2bits 000FA1  
                                              _PIR3bits 000FA4  
                              ??_rtcc_decrement_minutes 0068  
                              ??_rtcc_decrement_seconds 0068  
                __fill_buffer_get_file_details@inBuffer 0097  
                                        _rtcc_get_hours 9060  
                                        _rtcc_get_month 907C  
                                              _RCONbits 000FD0  
                             __size_of_rtcc_get_minutes 000E  
                             __size_of_rtcc_get_seconds 000E  
                                            ?_api_parse 0106  
                          __end_of__buck_operate_remote 4456  
                                              _UEP0bits 000F26  
                     __size_of__ic2_display_set_address 002C  
                               __parse_file_append@data 00F1  
                           ??_buck_remote_set_dutycycle 0060  
                                              _MSDTasks FBAE  
                            _USBDeferINDataStagePackets 01F9  
                                          ??_fat_format 0084  
                                       _fat_delete_file 7DD4  
                                  _active_configuration 02C9  
                             ?__ic2_display_set_address 002E  
                                              _SSP1CON1 000FC6  
                               spi_tx_rx@command_length 0062  
                               __parse_file_create@data 00DD  
                               flash_partial_write@data 0085  
                           __size_of_USBCheckStdRequest 00D8  
                       ??_MSDProcessCommandMediaPresent 0099  
                                  ?__display_efficiency 002E  
                            ??_rtcc_get_minutes_decimal 0063  
                               flash_partial_write@page 007F  
                       __parse_file_rename@return_value 00C5  
                                             _rtcc_init 8DB4  
                                              _UCONbits 000F65  
                                            ?__spi_init 0060  
                   __end_of_buck_remote_set_synchronous 8F28  
                                 _temperatureOnboardSum 0281  
                           _buck_remote_set_synchronous 8F10  
               __fill_buffer_get_calibration2@outBuffer 006B  
                                  _USBConfigureEndpoint 6634  
                            ?__data_sector_from_cluster 0060  
                                   ??__get_output_power 006F  
                                   _rtcc_decrement_year 8BD2  
                                            ?_buck_init 002E  
                                     __i2c_write@length 0067  
                                             _spi_tx_rx 621A  
                                             _spi_tx_tx 66C8  
                                  ?__make_cluster_chain 0095  
                       __make_cluster_chain@next_offset 009B  
                    __flash_write_page_from_buffer@page 0073  
                      __size_of_USBStdFeatureReqHandler 0278  
                                        _USBMSDInHandle 0011  
                              __end_of__rtcc_verify_bcd 81C0  
                                            _ADCON0bits 000FC2  
                                            _ADCON1bits 000FC1  
                                __display_time@sethours 01B0  
                                 flash_sector_read@data 0089  
                        __parse_file_resize@file_number 00E3  
                                 ?_USBTransferOnePacket 0060  
                                __display_time@setmonth 01A6  
                                 flash_sector_read@page 0087  
                                __display_time@pressday 0160  
                           __display_charger@supply_off 014D  
                           __size_of_rtcc_decrement_day 0026  
                            ??__parse_settings_i2c_mode 0066  
                                     _outputCapacitySum 0285  
                        __size_of_rtcc_get_year_decimal 0010  
                   _ExternalFlash_MediaDetect$intlevel0 90E0  
                                     _SYS_InterruptHigh C008  
                           __size_of__get_first_cluster 005C  
                             __end_of__display_itoa_u16 5BAA  
                              ??_rtcc_get_month_decimal 0063  
                         __end_of_rtcc_get_year_decimal 8FF6  
                       __size_of__fill_buffer_read_file 0204  
                                 ?__parse_command_short 002E  
                                       ?__buck_pin_init 002E  
                                  ?__rtcc_decrement_bcd 0064  
                             i2c_display_cursor@address 006F  
                                      __CFG_WPFP$PAGE_1 000000  
                                        ?_fat_find_file 008B  
                              fat_rename_file@extension 0099  
                          i2c_eeprom_read@slave_address 0078  
                    __size_of_fat_copy_sector_to_buffer 00C0  
                                          ??_flash_init 0078  
                                          _RemoteWakeup 0028  
                     __end_of_ExternalFlash_MediaDetect 90E4  
                                              i2_memcpy 7760  
                          __size_of__parse_format_drive 00AE  
                                              i2_memset 891E  
                     MSDCheckForErrorCases@DeviceNoData 006F  
                                  spi_tx_tx@data_length 0066  
                       fat_read_from_file_fast@position 00C5  
                                       ?__flash_is_busy 002E  
                      __end_of__fill_buffer_get_display 621A  
                            ??_rtcc_get_seconds_decimal 0063  
                                           __write_root 8008  
                                    ?_SYS_InterruptHigh 002E  
                   __fill_buffer_get_display@start_line 006E  
                                __end_of__display_clear 809E  
                     __size_of_fat_get_file_information 007A  
                                __size_of_rtcc_get_year 000E  
                                            spi_tx@data 0060  
                             ?_fat_get_file_information 008F  
                             __size_of_rtcc_correct_day 0020  
                               __end_of_USBStallHandler 828C  
                              __sector_from_file_number 86FC  
                                __end_of__display_inout 127E  
                                        __i2c_read@data 0065  
                       ??__flash_write_page_from_buffer 0076  
                               __size_of_display_update 007A  
                                        ??__display_usb 0060  
                                        __i2c_read@cntr 0070  
                        __parse_file_create@file_number 00E4  
                                     ___lmul@multiplier 0060  
                        __parse_write_buffer@out_buffer 008C  
                                           _INTCON2bits 000FF1  
                                        ?_fat_copy_file 00DD  
                                           _INTCON3bits 000FF0  
              __parse_settings_spi_polarity@out_idx_ptr 0064  
                                             copy_data0 55C4  
                                             copy_data1 55E4  
                                             copy_data2 5604  
                          __size_of__system_timer0_init 0040  
                         ?__parse_settings_spi_polarity 0060  
                                     ??_fat_resize_file 00B0  
                  __fill_buffer_read_buffer@data_length 0092  
                                        ?_ui_get_status 002E  
                                ??__system_encoder_init 0060  
                           ??_USBCtrlEPAllowStatusStage 002E  
                                  ?_rtcc_decrement_year 002E  
                     __parse_settings_spi_polarity@data 0060  
                             __find_nth_cluster@cluster 0097  
                           __end_of_USBStdSetCfgHandler 49A2  
                                 ?__display_temperature 002E  
                           __size_of__parse_file_delete 00E6  
                             __end_of__get_output_power 6B04  
                                    __end_of_fat_format 06A2  
                           ?_schedule_eeprom_write_task 002E  
                           __size_of__parse_file_append 0166  
                           __size_of__parse_file_create 0158  
                                              _i2c_init 9098  
                                          _lowPowerTime 02B7  
                                   ??_SYS_InterruptHigh 004D  
                            __size_of_rtcc_write_eeprom 004A  
                                        _rtcc_set_hours 8EE0  
                                        _rtcc_set_month 8EB0  
                    __parse_file_modify@number_of_bytes 00EC  
            __i2c_eeprom_load_default_calibration@index 0062  
                                __size_of_buck_get_mode 0004  
                                           ??__i2c_read 0068  
                           __size_of__parse_file_modify 027A  
                           __end_of__rtcc_increment_bcd 87B8  
                    system_calculate_output_current@tmp 0070  
                                           ??__i2c_send 0060  
                                          _MSDReadState 01F6  
                           __size_of__parse_file_rename 00FE  
                                    __write_calibration 65A0  
                                           ??__i2c_stop 0060  
                    buck_remote_set_dutycycle@dutycycle 0060  
                           __size_of__parse_file_resize 0206  
                        __parse_write_buffer@start_byte 0093  
                                    __end_of_device_dsc C456  
                    adc_calculate_temperature@adc_value 006C  
                                __end_of_rtcc_get_hours 906E  
                              MSDErrorHandler@ErrorCase 0068  
                                __end_of_rtcc_get_month 908A  
                                 ?_rtcc_get_day_decimal 002E  
                                              __i2c_get 90C6  
                                     i2c_adc_start@gain 006B  
                               ?_USBCtrlTrfSetupHandler 002E  
                                       _fat_create_file 2964  
                                __size_of_rtcc_set_year 0018  
                             ??__fill_buffer_get_status 0063  
                                            _ANCON0bits 000F48  
                            __end_of_buck_remote_set_on 8F40  
                                            _ANCON1bits 000F49  
                               USBStdGetStatusHandler@p 002F  
                              fat_read_from_file@length 00CD  
                                              __Hrparam 0000  
                          __parse_file_create@file_size 00E5  
                                   __display_itoa@value 0078  
                                 __display_charger@cntr 018E  
                          __size_of_rtcc_increment_year 0022  
                                             memcpy@tmp 0066  
                                              __Lrparam 0000  
                    __size_of_adc_calculate_temperature 00F6  
                                USBTransferOnePacket@ep 0068  
                                _rtcc_get_hours_decimal 8FD6  
                                        _buck_dutycycle 00FF  
                                   ?__write_calibration 002E  
                                   rtcc_correct_day@day 0064  
                                              _SetupPkt 000D30  
                                   rtcc_correct_day@max 0065  
                                    __end_of_flash_init 8DE8  
                                 ??__display_efficiency 0090  
                                        _TransferLength 000F  
                             fat_write_to_buffer@length 0086  
                            __end_of_USBCheckMSDRequest 5A3C  
                                       api_parse@in_idx 010D  
                                   __display_inout@cntr 00C5  
                 fat_read_from_file_fast@cluster_number 00AD  
                                            ?_rtcc_init 002E  
                                 ?_USBConfigureEndpoint 002E  
                                  __number_of_days@year 0061  
                                 __flash_is_busy@status 0071  
                                      __size_of___aldiv 00CE  
                              _ExternalFlash_SectorRead 84D8  
                             display_get_character@line 0063  
                                     ??_USBDeviceAttach 0060  
                                        __i2c_wait_idle 7406  
                                       _MSDWriteHandler EBFE  
                                  __display_outputs@low 008A  
                                      __size_of___fltol 00DE  
                          fat_create_file@first_cluster 00BA  
                                      __size_of___lldiv 0084  
                                 ??__make_cluster_chain 0099  
                                      __size_of___lwdiv 0054  
                                      __size_of___lwmod 0044  
             ExternalFlash_SectorWrite@allowWriteToZero 008C  
                                            ?_spi_tx_rx 0060  
                                            ?_spi_tx_tx 0060  
                  __size_ofi2_ExternalFlash_MediaDetect 0004  
                                           _MSDCBWValid 01F3  
                             __end_of_SYS_InterruptHigh C086  
                                        _buck_remote_on 001D  
                                     ?_USBStallEndpoint 0060  
                            i2c_display_write_fixed@pos 0068  
                       i2c_adc_start@configuration_byte 006D  
                                              _adc_init 8D7C  
                                              _adc_read 67E8  
                                   __display_time@F7270 C32A  
                                   __display_time@F7272 C2FC  
                                   __display_time@F7264 C299  
                                   __display_time@F7280 C1C7  
                                   __display_time@F7266 C310  
                                   __display_time@F7274 C2E5  
                                   __display_time@F7282 C25E  
                                   __display_time@F7290 C24E  
                                   __display_time@F7268 C306  
                                   __display_time@F7276 C2D9  
                                   __display_time@F7284 C1B5  
                                   __display_time@F7278 C143  
                                   __display_time@F7286 C12F  
                                   __display_time@F7288 C11B  
                                              __get_fbr F93A  
                                              __get_fat 7A2E  
                                              __get_mbr 4C2C  
                                  __size_of__i2c_open_1 0018  
                           ??_flash_copy_page_to_buffer 007F  
                                 ??__rtcc_decrement_bcd 0066  
                                    ??_USBStallEndpoint 0061  
                       __flash_copy_page_to_buffer@page 0073  
                    __end_of_ExternalFlash_CapacityRead 8F94  
                            _ExternalFlash_CapacityRead 8F80  
                                   _fat_write_to_buffer 8D40  
                                              ___xxtofl 259A  
                               ??_MSDTransferTerminated 003B  
                                __fill_buffer_find_file 686E  
                         schedule_eeprom_write_task@idx 0062  
                             __size_of_rtcc_read_eeprom 0142  
                               __size_of_USBDeviceTasks 0144  
                                       ___lwdiv@divisor 0062  
                       ?_system_calculate_input_current 002E  
                      ??_system_calculate_input_current 006C  
                               __display_itoa_u16@value 0078  
                                  ??__write_calibration 0085  
                             _buck_remote_set_dutycycle 8B04  
                      __get_first_cluster@first_cluster 0095  
                                       ?__display_clear 002E  
                                       ___lwdiv@counter 0064  
                     __end_of_fat_copy_sector_to_buffer 58C0  
                            __size_of_flash_sector_read 0034  
                     __buck_operate_local@tmp_dutycycle 007C  
                            __buck_operate_remote$10020 0076  
                              ??__get_available_cluster 008F  
                                              __ptext10 8B28  
                                              __ptext11 8B4A  
                                              __ptext20 8C38  
                                              __ptext12 8B6C  
                                              __ptext21 8C5A  
                                              __ptext13 8B8E  
                                              __ptext30 817A  
                                              __ptext22 8ADE  
                                              __ptext14 8BB0  
                                              __ptext31 49A2  
                                              __ptext23 87B8  
                                              __ptext15 8AB8  
                              fat_read_from_buffer@data 0088  
                                              __ptext40 83FE  
                                              __ptext32 9098  
                                              __ptext24 37BA  
                                              __ptext16 878A  
                                              __ptext41 70BC  
                                              __ptext33 8E50  
                                              __ptext25 8F6C  
                                              __ptext17 8BD2  
                                              __ptext50 4706  
                                              __ptext42 9036  
                                              __ptext34 2F44  
                                              __ptext26 8DB4  
                                              __ptext18 8BF4  
                                       _inputCurrentSum 029D  
                                              __ptext51 2E20  
                                              __ptext43 8E68  
                                              __ptext35 7CDE  
                                              __ptext27 2822  
                                              __ptext19 8C16  
                                              __ptext60 7D30  
                                              __ptext52 F1AA  
                                              __ptext44 860C  
                                              __ptext36 650C  
                                              __ptext28 8CE2  
                                              __ptext61 90BC  
                                              __ptext53 8DE8  
                                              __ptext45 8D7C  
                                              __ptext37 D788  
                                              __ptext29 72D2  
                                              __ptext70 C492  
                                              __ptext62 90C6  
                                              __ptext54 6A82  
                                              __ptext46 82CC  
                                              __ptext38 8DCE  
                                              __ptext71 144E  
                                              __ptext63 90D0  
                                              __ptext55 6B04  
                                              __ptext47 830C  
                                              __ptext39 828C  
                                              __ptext80 8054  
                                              __ptext72 0CB2  
                                              __ptext64 6D04  
                                              __ptext56 704C  
                                              __ptext48 4624  
                                              __ptext81 E8F6  
                                              __ptext73 5AF6  
                                              __ptext65 77BC  
                                              __ptext57 889A  
                                              __ptext49 2CFC  
                                              __ptext90 73A2  
                                              __ptext82 06A2  
                                              __ptext74 0268  
                                              __ptext66 8976  
                                              __ptext58 65A0  
                                              __ptext91 CAD2  
                                              __ptext83 834A  
                                              __ptext75 1098  
                                              __ptext67 88C6  
                                              __ptext59 83C4  
                                              __ptext92 88F2  
                                              __ptext84 81C0  
                                              __ptext76 E298  
                                              __ptext68 6048  
                                              __ptext93 5676  
                                              __ptext85 5D0A  
                                              __ptext77 259A  
                                              __ptext69 17AE  
                                              __ptext94 6F64  
                                              __ptext86 8204  
                                              __ptext78 47E8  
                                              __ptext95 7196  
                                              __ptext87 7C36  
                                              __ptext79 4E9C  
                                              __ptext96 5A3C  
                                              __ptext88 797E  
                                              __ptext97 697A  
                                              __ptext89 436A  
                                              __ptext98 67E8  
                                              __ptext99 90A4  
                                      __display_charger E8F6  
                                      __size_of_ui_init 0014  
                                          _SSP1CON1bits 000FC6  
                                       ?__display_inout 002E  
                                          _SSP1CON2bits 000FC5  
                                              _filename 03DF  
                         __buck_start@startup_dutycycle 0074  
                          __flash_set_page_size@command 0073  
                                 ??_rtcc_decrement_year 0068  
                                   __display_time@hours 01CF  
                                __end_of_rtcc_set_hours 8EF8  
                                          _SSP2CON1bits 000F72  
                                      __size_of_tmr_isr 0096  
                  __end_of_MSDProcessCommandMediaAbsent 75EC  
                 __size_of_MSDProcessCommandMediaAbsent 005E  
                          _MSDProcessCommandMediaAbsent 758E  
                                           ??__get_data 0062  
                                           ??__get_date 0066  
                                 __flash_wakeup@command 0068  
                                   __display_time@month 01CD  
                                __end_of_rtcc_set_month 8EC8  
                      fat_copy_sector_to_buffer@cluster 00B0  
                             flash_write_to_buffer@data 0082  
                      __size_of__buck_initial_dutycycle 00BA  
                                           ??__get_time 0066  
             buck_remote_change_dutycycle@new_dutycycle 0061  
                                           ??__get_root 0062  
                            ??__parse_settings_spi_mode 0066  
                                      __size_of_strncmp 0080  
                                          ?__buck_start 0072  
                                   __parse_command_long D38C  
                                   __display_usb@header 0060  
                            ?_ExternalFlash_SectorWrite 0084  
                       ?_system_calculate_input_voltage 002E  
                      ??_system_calculate_input_voltage 006C  
                 fat_write_sector_from_buffer@file_size 00AA  
                        ExternalFlash_SectorRead@config 008B  
                        ExternalFlash_SectorRead@buffer 0091  
                     i2c_eeprom_read_calibration@buffer 007B  
                                      __parse_file_copy 3ABE  
                            __end_of__flash_buffer_read 7DD4  
                                 __end_of__buck_prepare 7406  
                    __end_of__flash_copy_page_to_buffer 7924  
                            __flash_copy_page_to_buffer 78CA  
                               __size_of_ResetSenseData 0062  
                      __end_of_APP_DeviceCustomHIDTasks 5E5C  
                          __end_of_i2c_digipot_reset_on 8A6C  
                                     ??_i2c_eeprom_read 0076  
                                 __end_of__flash_wakeup 7ECA  
                        __end_of_USBCtrlTrfSetupHandler 67E8  
                                         __size_of_main 0314  
                                     ?_USBCtrlEPService 002E  
                                         __size_of_itoa 0044  
                                              _inq_resp C3E9  
                                         __size_of_utoa 00AA  
                               __end_of_fat_delete_file 7E26  
                                      __display_usb@low 0085  
                                           ??__read_fat 0091  
                                __fill_buffer_read_file 0AAE  
                           __end_of_flash_partial_write 6F64  
                                            strncmp@len 0064  
                                   __display_usb@usb_on 0095  
                               fat_get_file_size@offset 009B  
                                       ?_rtcc_get_hours 002E  
                    __buck_set_sync_async@new_dutycycle 0062  
                                  ?_fat_write_to_buffer 0084  
                                       ?_rtcc_get_month 002E  
                               fat_get_file_size@sector 0099  
                            __display_time@pressminutes 0114  
                            __display_time@pressseconds 0128  
                 fat_read_from_file_fast@needed_cluster 00C1  
                                    ??_USBCtrlEPService 004B  
                                      __display_startup 0CB2  
                                  __end_of__delete_root 7F6A  
                                      __display_outputs 0268  
                               ??_system_encoder_enable 0060  
                        __fill_buffer_read_buffer@start 0090  
                       __size_of_system_encoder_disable 0006  
                                   _USBCtrlTrfInHandler 58C0  
                    _MSDProcessCommandMediaPresent$2765 009B  
                           __end_of__buck_operate_local CF44  
                              ??__write_value_to_offset 0066  
                                         _rtcc_get_year 906E  
                                 _calibrationParameters 0318  
                        fat_read_from_file_fast@cluster 00AB  
                       __size_of_rtcc_decrement_minutes 0022  
                                           ??_api_parse 00FD  
                       __size_of_rtcc_decrement_seconds 0022  
                                __end_of__i2c_wait_idle 746A  
                 fat_resize_file@old_number_of_clusters 00B4  
                                  __rtcc_bcd_to_decimal 8D5E  
                                              _outPipes 01D5  
                                            _ODCON3bits 000F40  
                            ?__fill_buffer_get_display1 0064  
                                              _spi_init 828C  
                      __end_of__fill_buffer_read_buffer 4B54  
                                  _USBCtrlTrfOutHandler 764A  
                                              int$flags 005B  
                      __end_of__offset_from_file_number 8A1E  
                            ??__fat_sector_from_cluster 0062  
                     __end_of_adc_calculate_temperature 409A  
                                     ??__number_of_days 0060  
                             _USBCtrlEPAllowStatusStage 573C  
                                           ??__spi_init 0063  
                          __end_of_system_output_toggle 8AB8  
                                  ?__parse_command_long 0100  
                                     _system_output_off 7B8A  
                                          _SSP1STATbits 000FC7  
                                           ??_buck_init 0060  
                      __parse_format_drive@return_value 008D  
                                ??_USBTransferOnePacket 0064  
                            i2c_digipot_backlight@level 006A  
                __make_cluster_chain@remaining_clusters 00A2  
                                 __size_of_rtcc_get_day 000E  
                                          _SSP2STATbits 000F73  
                                         _buck_get_mode 9118  
                                __size_of_i2c_adc_start 003A  
                                 __end_of__display_itoa 08A8  
                                 __end_of__display_time CAD2  
                                      i2_ResetSenseData 74CC  
                        ?_APP_DeviceCustomHIDInitialize 002E  
                                       ??_fat_find_file 008F  
                                    ?_system_output_off 002E  
                                ??__parse_command_short 008B  
                        __end_of__display_charger@F7321 C0B5  
                        __end_of__display_charger@F7331 C2D9  
                        __end_of__display_charger@F7323 C1B5  
                        __end_of__display_charger@F7333 C21E  
                        __end_of__display_charger@F7325 C190  
                        __end_of__display_charger@F7327 C341  
                        __end_of__display_charger@F7335 C0A0  
                        __end_of__display_charger@F7329 C32A  
                        __end_of__display_charger@F7337 C107  
                                      system_init@F7201 02F5  
                                      system_init@F7203 03C5  
                 MSDProcessCommandMediaPresent@capacity 00A2  
                                      system_init@F7205 02F1  
                                      system_init@F7207 0500  
                         display_get_character@position 0060  
                              __size_of_MSDErrorHandler 0118  
                                      system_init@F7199 03CE  
                                fat_copy_file@file_size 00E7  
                                     rtcc_set_year@year 0060  
                             _USBDeferStatusStagePacket 0025  
                            __size_of__display_itoa_u16 00B4  
                       __end_of__fill_buffer_get_status D38C  
                               __parse_file_modify@data 00E3  
                     __fill_buffer_get_display@position 006F  
                                         _rtcc_set_year 8E80  
                          __end_of_rtcc_increment_hours 8BD2  
                          __end_of_rtcc_increment_month 8B8E  
                                           _OSCTUNEbits 000F9B  
                                            _INTCONbits 000FF2  
                       __size_of_rtcc_get_month_decimal 0010  
                                 __size_of_rtcc_set_day 0018  
                              __parse_format_drive@data 0086  
                             __flash_buffer_read@buffer 0079  
                                  ?_USBCtrlTrfInHandler 002E  
                                              memcpy@d1 0060  
                                              memcpy@s1 0062  
                                  i2c_eeprom_write@data 006C  
                                      _log_collect_data F1AA  
                             __flash_buffer_read@length 0075  
                                  i2c_eeprom_write@cntr 0084  
                         USBCtrlTrfTxService@byteToSend 002E  
                                       ??_fat_copy_file 00E1  
                       i2c_digipot_backlight@data_array 006B  
                              __number_of_days@bcd_year 0062  
                                              itoa@base 0074  
                           __end_of__buck_set_dutycycle 7200  
                         __parse_file_rename@out_buffer 00C0  
                                       ??_ui_get_status 0060  
                                              memset@p1 0060  
                                   ??_system_output_off 0060  
                      fat_read_from_file@cluster_number 00DA  
                  __end_of_MSDComputeDeviceInAndResidue 5C5C  
                 __size_of_MSDComputeDeviceInAndResidue 00B2  
                          _MSDComputeDeviceInAndResidue 5BAA  
                            fat_modify_file@return_code 00B8  
                                      ?_USBStallHandler 002E  
                              USBStdFeatureReqHandler@p 0049  
                            ?__get_available_root_entry 002E  
                               spi_tx_tx@command_length 0062  
                          __end_of__buck_set_sync_async 6FD8  
                         __size_of__flash_set_page_size 006E  
                                ??__display_temperature 0090  
                                  __buck_operate_remote 436A  
                            fat_rename_file@return_code 009C  
                                      __i2c_acknowledge 90D0  
                                       ?_rtcc_set_hours 002E  
                               __end_of_fat_create_file 2AA0  
                                       ?_rtcc_set_month 002E  
                                              intlevel2 0000  
                                      spi_tx_rx@command 0060  
                              __flash_get_status@status 006F  
                          adc_calculate_temperature@tmp 0075  
                            __size_of__get_output_power 0082  
                              ??_flash_read_from_buffer 0084  
                           __size_of__root_is_available 006C  
                               __parse_file_rename@data 00BE  
                                __size_of_USBDeviceInit 014C  
                         ?_MSDProcessCommandMediaAbsent 002E  
               __end_of_USER_USB_CALLBACK_EVENT_HANDLER 697A  
              __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                     ??_USER_USB_CALLBACK_EVENT_HANDLER 0043  
                      ?_USER_USB_CALLBACK_EVENT_HANDLER 003D  
                       _USER_USB_CALLBACK_EVENT_HANDLER 68F4  
                           rtcc_read_eeprom@error_found 008B  
                                      ___lwmod@dividend 0060  
                          i2USBTransferOnePacket@handle 0037  
                               i2c_adc_start@resolution 006A  
                     __end_of_ExternalFlash_SectorWrite 84D8  
                                      ___lldiv@dividend 0060  
                  __parse_settings_i2c_mode@out_idx_ptr 0064  
                 __end_of__flash_write_page_from_buffer 78CA  
                __size_of__flash_write_page_from_buffer 005A  
                         __flash_write_page_from_buffer 7870  
                              __end_of__get_input_power 6B86  
                   fat_write_sector_from_buffer@cluster 00A8  
                                ??_rtcc_get_day_decimal 0063  
                             _flash_copy_page_to_buffer 8D02  
                i2SYSTEM_Initialize@pll_startup_counter 002E  
                  SYSTEM_Initialize@pll_startup_counter 0061  
                                 ??_fat_write_to_buffer 008A  
                          fat_read_from_file@start_byte 00C9  
                                       _display_content 036C  
                           ??_buck_remote_get_dutycycle 0060  
                       fat_copy_sector_to_buffer@sector 00A2  
        fat_write_sector_from_buffer@number_of_clusters 00AE  
                            __end_of_flash_partial_read 860C  
                               __end_of_MSDWriteHandler EED4  
                                             strncmp@s1 0060  
                                             strncmp@s2 0062  
                               __write_root@file_number 008E  
                                      spi_tx_tx@command 0060  
                          __parse_sector_to_buffer@data 00B3  
                                        ?_rtcc_get_year 002E  
                                fat_copy_file@extension 00DF  
                               __size_of_MSDReadHandler 01E8  
                                          _rtcc_get_day 908A  
                         __parse_file_copy@return_value 00F7  
                                   fat_resize_file@root 00BB  
                            i2USBTransferOnePacket@data 002F  
                                         ??_system_init 0093  
                                 ?__rtcc_bcd_to_decimal 002E  
                     __size_of__fill_buffer_get_display 0098  
                              ?__read_value_from_offset 0060  
                                      _rtcc_get_minutes 9052  
                                      _rtcc_get_seconds 9044  
                           __end_of_system_output_is_on 8E02  
                              ?_fat_read_from_file_fast 00A1  
                             ?__fill_buffer_get_display 0064  
                                ??_USBConfigureEndpoint 002F  
                                       ?__i2c_wait_idle 002E  
                                 ?_USBCtrlTrfOutHandler 002E  
                          __parse_buffer_to_sector@data 00B1  
                                       _display_prepare 6048  
                      __end_of_rtcc_get_minutes_decimal 8FD6  
                              ??__flash_write_to_buffer 007A  
                             __end_of_system_output_off 7BE0  
                             __size_of_rtcc_set_minutes 0018  
                              ?_APP_DeviceMSDInitialize 002E  
                             __size_of_rtcc_set_seconds 0018  
                             __display_efficiency@F7342 C16A  
                             __display_efficiency@F7344 C157  
                             __display_efficiency@F7346 C27D  
                                   _USBCtrlTrfRxService 3396  
                                           ??_rtcc_init 0093  
                                    _USBWakeFromSuspend 8436  
                                 ??__parse_command_long 00FC  
                                  __end_of__display_usb 1940  
  __parse_settings_i2c_slaveModeSlaveAddress@out_buffer 0062  
                                     ?_system_output_on 002E  
                                          ?__ui_encoder 002E  
                                          _rtcc_set_day 8EF8  
                                    _i2c_display_cursor 8976  
                               _USBStdFeatureReqHandler F6C2  
                                       _fat_modify_file FE04  
                               _temperatureExternal1Sum 027D  
                               _temperatureExternal2Sum 0279  
                          __fill_buffer_read_file@start 0110  
                             rtcc_increment_hours@hours 0068  
                                        ?_buck_get_mode 002E  
                                   i2_SYSTEM_Initialize 7C8A  
                                           ??_spi_tx_rx 0068  
                                           ??_spi_tx_tx 0068  
                                   _USBCtrlTrfTxService 4DCC  
                            __size_of_SYS_InterruptHigh 007E  
                                          ?_api_prepare 0114  
                 __flash_write_page_from_buffer@command 0079  
                               __rtcc_increment_bcd@max 0065  
                                    ??_system_output_on 0060  
                               __rtcc_increment_bcd@min 0064  
                                              utoa@base 006B  
                      __end_of__parse_settings_i2c_mode 5420  
                                            _RTCCFGbits 000F3F  
                  __end_of_fat_write_sector_from_buffer 6A82  
                 __size_of_fat_write_sector_from_buffer 0084  
                          _fat_write_sector_from_buffer 69FE  
                                       _gblMediaPresent 02C1  
                           __end_of__rtcc_write_disable 8F6C  
                                        ?_rtcc_set_year 002E  
                                       _inputVoltageSum 02A1  
                                 _i2c_digipot_backlight 886E  
                   ExternalFlash_SectorRead@sector_addr 008D  
                   __parse_settings_i2c_mode@out_buffer 0062  
                                   ?_USBWakeFromSuspend 002E  
                                            _PPSCONbits 000EBF  
                                      ___lldiv@quotient 0068  
                                       ___lwmod@divisor 0062  
                           ??_ExternalFlash_MediaDetect 0062  
                                   ?_i2c_display_cursor 006D  
                                 ??_USBCtrlTrfInHandler 002F  
                                              strlen@cp 0064  
                                _system_encoder_disable 90FE  
          __end_of__i2c_eeprom_load_default_calibration DB4A  
         __size_of__i2c_eeprom_load_default_calibration 03C2  
                ??__i2c_eeprom_load_default_calibration 0063  
                 ?__i2c_eeprom_load_default_calibration 0060  
                  __i2c_eeprom_load_default_calibration D788  
                                 _USBAlternateInterface 02D2  
                                       ___lwmod@counter 0064  
                             __display_efficiency@panel 00CA  
                      __end_of_rtcc_get_seconds_decimal 8FC6  
                            __delete_root@deleted_value 008C  
                         __size_of__i2c_not_acknowledge 000A  
                               _buck_remote_synchronous 001C  
                                           _ptrNextData 02C5  
                                 __end_of_log_start_new 4A7C  
                                          ___aldiv@sign 0069  
                      __make_cluster_chain@data_changed 00A1  
                                _rtcc_decrement_minutes 8C38  
                                _rtcc_decrement_seconds 8BF4  
                               __parse_file_resize@data 00DB  
                             i2USBTransferOnePacket@dir 002E  
                             i2USBTransferOnePacket@len 0031  
                                       _fat_rename_file 5F02  
                       __parse_format_drive@out_idx_ptr 008A  
                        __size_of_flash_write_to_buffer 0030  
                       __parse_file_delete@return_value 00B6  
                                   USBEnableEndpoint@ep 0039  
                                       _endpoint_number 0027  
                                      _rtcc_correct_day 8CE2  
                                        _display_update 6D04  
                         __end_of_flash_write_to_buffer 86FC  
                                 ?__buck_operate_remote 002E  
                   __get_available_cluster@first_sector 008B  
                       __size_of__get_available_cluster 00CE  
                                  ?_USBCtrlTrfRxService 002E  
                              ?__parse_buffer_to_sector 00B1  
                                 _MSDCheckForErrorCases 3EAC  
                                  __get_input_power@pwr 0070  
                            __end_of__rtcc_write_enable 8F56  
                            ??__fat_offset_from_cluster 0062  
                         ?_MSDComputeDeviceInAndResidue 0060  
                      __end_of__ic2_display_set_address 88F2  
                   __end_of_i2c_eeprom_read_calibration 3062  
                           _i2c_eeprom_read_calibration 2F44  
                                  ?i2_SYSTEM_Initialize 002E  
                              ?_USBCtrlEPAllowDataStage 002E  
                                        _MSBBufferIndex 02C3  
                           __end_of__parse_write_buffer 21B0  
                                  ?_USBCtrlTrfTxService 002E  
                                         _i2c_adc_start 83C4  
                       __offset_from_file_number@offset 0063  
                                            _USBMSDInit 3288  
                                         ?_buck_operate 002E  
                          _USBStatusStageTimeoutCounter 0026  
        __parse_settings_i2c_slaveModeSlaveAddress@data 0060  
                       ??_ExternalFlash_MediaInitialize 0062  
                                      ?_fat_delete_file 002E  
                                  ??_USBWakeFromSuspend 0045  
                           __end_of__flash_partial_read 6EEC  
                            USBTransferOnePacket@handle 0069  
                                _rtcc_get_month_decimal 8FF6  
                                  ??_i2c_display_cursor 006E  
                          __parse_file_copy@out_idx_ptr 00F4  
                           __parse_file_copy@out_buffer 00F2  
                             rtcc_increment_month@month 0068  
                             __size_of_i2c_eeprom_tasks 0070  
                                   __parse_format_drive 5C5C  
                            fat_resize_file@file_number 00BA  
                                            _USB_CD_Ptr C344  
                             __size_of_i2c_eeprom_write 0082  
                                           _power_state 0019  
                                           _USBInHandle 02BD  
                              _APP_DeviceCustomHIDTasks 5DB4  
                            __end_of_flash_sector_write 7704  
